{
  "courses": [
    {
      "title": "Programming in C# - From Beginner to Advanced",
      "url": "https://www.udemy.com/course/programming-in-csharp-from-beginner-to-advanced/",
      "bio": "Learn C# to develop applications!",
      "objectives": [
        "Learn to develop C# programs",
        "Use classes to centralize data and behavior",
        "Connect to a database and execute stored procedures from C#",
        "See new features of recent versions of C#"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is .NET?",
          "What is C#?",
          "Visual Studio and Visual Studio Code",
          "Installing Visual Studio",
          "Installing Visual Studio Code",
          "Creating a Project with Visual Studio",
          "Creating a Project with Visual Studio Code",
          "Exploring the Project Structure",
          "Summary",
          "Repository on Github"
        ],
        "Variables": [
          "Introduction",
          "Creating the Project",
          "Top-Level Statements",
          "Statements - Basic C# Syntax",
          "Where is the Code?",
          "The dot Operator",
          "Blocks of Code",
          "Comments",
          "C# is Case-Sensitive",
          "What is a Variable? - DataTypes - Integers",
          "Integral Numeric Types",
          "Real Numbers (Floating Point Numbers)",
          "Booleans",
          "Char and String",
          "Escape Sequences",
          "Verbatim Strings",
          "Raw String Literals",
          "Introduction to DateTime",
          "Naming Variables",
          "Implicitly Typed Local Variables",
          "Default Values",
          "Introduction to null",
          "Non-Nullable Reference Types",
          "Binary Expressions",
          "Concatenation",
          "Binary Expressions and Approximations",
          "Arithmetic Overflow",
          "String Interpolation",
          "Unary Expressions",
          "Void Expressions",
          "Assignment Operators",
          "Order of Precedence",
          "Constants",
          "Warnings and Errors",
          "Summary"
        ],
        "Decisions and Loops": [
          "Introduction",
          "Creating the Project",
          "Negation",
          "Boolean logic - Equality and Inequality",
          "Greater Than and Less Than",
          "Conditional Boolean Operators - Avoiding null Reference Exceptions",
          "The If Statement",
          "Ternary Conditional Operator",
          "The Switch Statement",
          "Switch Expressions",
          "Relational Patterns",
          "Logical Patterns",
          "The While Loop",
          "The Do-While Loop",
          "The For Loop",
          "The Foreach Loop",
          "Jump Statements - Break and Continue",
          "Infinite Loops",
          "Simple Adding Calculator",
          "Summary"
        ],
        "More About Data Types": [
          "Introduction",
          "Creating the Project",
          "The ToString Function",
          "Parse and TryParse",
          "Explicit and Implicit Conversions",
          "Enums",
          "Introduction to Arrays",
          "Indexes",
          "Ranges",
          "Two Dimensional Arrays",
          "Jagged Arrays",
          "String Manipulation",
          "Summary"
        ],
        "Functions": [
          "Introduction",
          "Creating the Project",
          "Creating Functions",
          "Scope of Variables",
          "Parameters",
          "Solving the Printing Matrix Problem",
          "Default Values for Parameters",
          "params Paremeters",
          "ref Parameters - Passing by Reference",
          "out Parameters",
          "Introduction to Tuples",
          "Local Functions",
          "Lambda Expressions",
          "Action - Storing Void Functions in Variables",
          "Func - Storing Non-Void Functions in Variables",
          "Predicates",
          "Delegates",
          "Anonymous Functions",
          "The Main Function",
          "Summary"
        ],
        "Classes, Structs and Records": [
          "Introduction",
          "Creating the App",
          "Classes and Fields",
          "Properties (part 1)",
          "Properties (part 2)",
          "Functions and Methods",
          "Constructors",
          "Classes as Output Type",
          "Deconstructors",
          "Static Members vs Instance Members",
          "Extension Methods",
          "Property Patterns",
          "Anonymous Types and Non-Destructive Mutations",
          "Namespaces",
          "Implicit and Global Usings",
          "Partial Classes",
          "Structs",
          "Equality in Classes and Structs",
          "Introduction to Records",
          "Creating Records",
          "Positional Records",
          "Cloning Records",
          "Init-Only Setters",
          "Required Members",
          "The Elvis Operator",
          "The Null-Coalesce Operator",
          "The Null-Forgiving Operator",
          "Summary"
        ],
        "Object-Oriented Programming": [
          "Introduction",
          "Creating the Project",
          "Introduction to Object-Oriented Programming",
          "Inheritance",
          "Virtual",
          "Abstract Classes and Members",
          "Sealed Classes and Members",
          "Constructor in the Base Class",
          "Object",
          "Casting Object",
          "Limits in Inheritance",
          "Inheritance with Records",
          "Inheritance with Structs",
          "Introduction to Access Modifiers",
          "Public",
          "Private",
          "Internal",
          "Protected",
          "Protected Internal",
          "Private Protected",
          "The File Access Modifier",
          "Introduction to Interfaces",
          "Creating our First Interface",
          "Polymorphism with Interfaces",
          "Sharing Code with Interfaces",
          "Introduction to Dependency Injection",
          "Constructor Injection",
          "Inversion of Control Containers",
          "Implementing IOC Containers",
          "Default Implementation in Interfaces",
          "Operator Overloading",
          "Equality in Structs",
          "Equality in Classes",
          "Summary"
        ],
        "Debugging and Error Handling": [
          "Introduction",
          "Creating the App",
          "The WriteLine's Functions",
          "Tracepoints",
          "Breakpoints",
          "Temporary Breakpoint",
          "Conditional Breakpoint",
          "Dependent Breakpoint",
          "Content of Variables",
          "Immediate Window",
          "Call Stack Windows",
          "Throwing Exceptions and the Stack Trace",
          "The try-catch Blocks",
          "The finally Block",
          "Default Exceptions",
          "Custom Exceptions",
          "Filtering Exceptions",
          "Retrowing Exceptions",
          "Summary"
        ],
        "Generics and Collections": [
          "Introduction",
          "Creating the App",
          "Introduction to Generics",
          "Restrictions",
          "Collections - Lists",
          "Dictionaries",
          "GetHasCode",
          "IEnumerable",
          "The yield Statement",
          "yield and Infinite Loops",
          "IComparable and IComparer",
          "Summary"
        ],
        "LINQ": [
          "Introduction",
          "Creating the App",
          "What is LINQ?",
          "Deferred Execution",
          "Where Function",
          "First and FirstOrDefault",
          "OrderBy and OrderByDescending",
          "Select",
          "SelectMany",
          "Scalars - Count, Min, Max, Average",
          "MinBy and MaxBy",
          "Quantifiers - All, Any, Contains",
          "Pagination - Take and Skip",
          "Group by",
          "Distinct - Removing Repeated Elements",
          "Chunk - Creating Sub-Collections",
          "Summary"
        ]
      },
      "requirements": [
        "You don't really need to know that much, since we'll start from the beginning (like, what is a variable)"
      ],
      "description": "We are going to learn C#. This programming language is quite popular, because it allows us to program for different types of environments: desktop, web, mobile, games, artificial intelligence, internet of things, among others.\nHowever, in order to develop effective applications with C#, it is important to know its fundamentals. In this course you will learn the most important characteristics of this language.\nWe will go from the basics to the advanced, so it is an ideal course for people who are just starting out, or, if you are an experienced person looking to learn new things, this course is also for you.\nYou don't learn much simply by watching the other, so in this course I have included optional questions and problems, which will help you put what you have learned into practice. Do not worry if you do not know how to solve one of the problems, because I give you access to all the solutions of all the problems raised.\nSome of the topics we will cover:\n- How to declare and initialize variables\n- Datatypes\n- Basic C# syntax\n- How to work with numbers (int, double, decimal, float, among others)\n- How to work with the string data type\n- How to work with DateTime for date handling\n- Value types and reference types\n- Non-nullable reference types\n- Expressions and operations\n- Decisions (using if, the ternary operator and switch)\n- Loops (using while, do-while, for and foreach)\n- Jump statements and infinite loops\n- How to transform from one type of data to another with casts\n- How to work with arrays, indices and ranges\n- Declare your own functions, using parameters and returning values\n- Use tuples to return multiple values from a function\n- Lambda expressions and anonymous functions\n- Use classes, structs and records\n- Introduction to object-oriented programming\n- Error handling and debugging\n- Accessing files using C#\n- Accessing a database from a C# app (including working with stored procedures)\n- Using LINQ to work with collections\n- Using concurrency to handle asynchronous programming and parallelism\n- New C# language features as they come out\nThese are just some of the topics we will look at.",
      "target_audience": [
        "Beginners that want to learn C#",
        "Experienced C# developers that want to learn the latest features of the language"
      ]
    },
    {
      "title": "Comprehensive Ruby on Rails",
      "url": "https://www.udemy.com/course/comprehensive-ruby-on-rails/",
      "bio": "This is a comprehensive Ruby on Rails development course created for individuals who want to build powerful web apps.",
      "objectives": [
        "By the end of this course you will be able to build production level applications, completely from scratch, using the Ruby on Rails development framework"
      ],
      "course_content": {
        "Introduction to the course": [
          "Course Overview"
        ],
        "Application setup and source version control": [
          "Creating a New Rails Application",
          "Creating a Git Repository for a Ruby on Rails Application"
        ],
        "Deploying to the web": [
          "Deploying a Ruby on Rails Application to Heroku",
          "Markdown Syntax Tutorial",
          "How to Remove a File from a Git Repository"
        ],
        "Integrating design functionalities": [
          "Integrating a Navigation Bar into a Ruby on Rails Application",
          "Making the Navigation Bar Functional",
          "Creating a Git Branch",
          "Installing Bootstrap into a Rails Application",
          "Customizing HTML Tables in Your Rails Application",
          "Strftime Data Formatting",
          "How to Remove a File from Git",
          "Integrating a Date Range Search Field",
          "How to Install and Configure Devise for User Authentication",
          "Fixing a Devise Bug on Nitrious",
          "Setting Up Automated Rules for Signed In/Signed Out Statuses",
          "Integrating Alert Messages",
          "How to Build a CSV Uploader into Your Rails Application",
          "Create a CSV Downloader",
          "Form Customization",
          "Integrating a Dropdown Element into a Rails Form",
          "Integrating a Collection Select Form Element",
          "Introduction to the Rails Console",
          "Advanced Rails Console Techniques",
          "Fixing a NoMethodError",
          "Creating a Dropdown Navigation Element",
          "Using a Scaffold Generator",
          "Using the Rails Console to Add Items to the Database",
          "Setting Up Nested Relationships in Rails",
          "Adding Items to Nested Attributes",
          "Deleting Nested Attributes",
          "Adding Columns to a Database Table",
          "Utilizing Strong Parameters",
          "Performing Calculations in Rails",
          "Recap of Comprehensive Rails Series"
        ],
        "Common Bug Fixes for Rails Applications": [
          "Quiet the Rails Logs",
          "Fixing Glyphicon Bug in Heroku"
        ],
        "Course Update 6/17/16": [
          "Upgrade to Rails 4.2",
          "Implement the Ability to Edit Nested Purchases",
          "Remove Duplicate Notifications",
          "Install Rails Locally on PC and Mac"
        ]
      },
      "requirements": [
        "Computer",
        "Connection to the Internet",
        "Basic computer skills"
      ],
      "description": "Update March 2016 - New lectures have been added for: upgrading to version 4.2 of the Rails framework, how to edit nested resources, and cleaning up notifications. I also added a guide for how to install the Ruby on Rails framework locally on Mac and PC.\n+++++++\nWhat does it take to become a full stack web developer? Well, you need to know: server side coding, database design, HTML, CSS, algorithm development, file manipulation, routing, API integration, and the list goes on and on. Trying to learn each of these topics individually can feel overwhelming and finding out how they are all connected cause most developers to quit before they even start.\nIt’s for these reasons why I wanted to create a unique course that will walk you step by step through every skill you will need to become a full stack web developer, and I do it by showing you how to build an actual production application. Starting completely from scratch I explain how to setup your environment, create the application, build in advanced features and finally deploy to the web!\nSome of the key skills you will learn in the course are:\nRails scaffold generators\n\nHow to use git repositories\n\nBuilding custom file uploaders and downloaders\n\nDatabase modeling and query generation\n\nCreating and handling form data for input into the database\n\nSetting up secure user logins\n\nBuilding a search engine for the app\n\nHTML and CSS customization\n\nHow to use the Rails console\nHow to deploy the application to a live website\nHow the Model - View - Controller (MVC) framework works in action\nObject oriented programming (OOP)\nAnd much more!\nEach video in the course has a link where you can access the code that was created for that specific stage in the course, making it easy to follow along. After completing the course you will earn a certificate of completion for Comprehensive Ruby on Rails development and you will be ready to start building your own applications.",
      "target_audience": [
        "This course was made for developers of all skill levels"
      ]
    },
    {
      "title": "Learn Rust in 7 Days",
      "url": "https://www.udemy.com/course/learn-rust-in-7-days/",
      "bio": "Use the full power of Rust to make fast, maintainable systems level programs in one week",
      "objectives": [
        "Use the Rust trait system to build super flexible types.",
        "Effective ways of handling Rust Errors without Boilerplate code.",
        "How pointer lifetimes keep your code effective and safe.",
        "Work within the restrictions needed for pointer safety, and still achieve capable code",
        "How rust programs can work with other system programs.",
        "Write programs that take full advantage of multicore processors, using concurrency without the risk of data races",
        "Loop on anything with the Iterator Trait",
        "How to Use the Rocket web framework to build powerful websites quickly"
      ],
      "course_content": {
        "Getting Started with Basic Tools and Syntax": [
          "The Course Overview",
          "Get Rust Working on Your Machine",
          "Introducing Standard Rust Operators and Syntax",
          "Basic Loops",
          "Basic Strings",
          "Structs and Methods",
          "Enums and Pattern Matching",
          "Result and Option Types",
          "Assignment"
        ],
        "Traits": [
          "Introduction to Traits",
          "Using Other People’s Libraries",
          "Defining Our Own Traits",
          "Accepting Generic Parameters",
          "Generic Structs",
          "Generic Iterators",
          "Useful traits",
          "Error Handling with the from Trait",
          "Documenting and Publishing Your Library",
          "Assignment"
        ],
        "Lifetimes": [
          "Why Lifetimes Matter?",
          "Passing a Borrow Forward",
          "Stack versus Heap - Box and the Deref Trait",
          "The Static Lifetime",
          "Reference Counting",
          "Assignment"
        ],
        "The Program Environment": [
          "Environment Variables",
          "Calling Other Programs",
          "Piping Between Other Programs",
          "Files Access",
          "Assignment"
        ],
        "Threads and Channels": [
          "Threads",
          "Channels",
          "Mutexes",
          "Thread Pools and Worker",
          "Rayon for Embarrassingly Parallel Problems",
          "Assignment"
        ],
        "Databases": [
          "Introduction to SQLite",
          "Secure Passwords",
          "Adding to the Database",
          "Retrieving from the Database",
          "Assignment"
        ],
        "Building Our Database into an Online Banks": [
          "Introduction to Rocket",
          "HTML Templates with Maud",
          "Managing Sessions",
          "Web Login",
          "Accessing Sessions",
          "Assignment"
        ]
      },
      "requirements": [
        "The video is for developers who have basic knowledge of programming."
      ],
      "description": "The Rust programming language makes it possible to build fast reliable code, prevents segfaults, and guarantees memory safety, even while working across concurrent processes.\nThe course is split into seven parts, which give you a complete overview of why Rust is a great programming language. In the first couple of days, you’ll learn to install Rust on your system, discover its syntax, and see a library that utilizes the feature of trait-based generics and code reusability.\nOn days 3 and 4, you’ll understand how Rust Lifetimes work by doing extensive compiler checking and learn to make your programs more interactive by accessing all the bits of the Rust environment. On day 5, you’ll learn about multithreading without data races with safe concurrency. Day 6, you’ll create a database, using your code to read and update while securing it with Bcrypt from various breaches such as SQL injection attacks.\nBy the end of the course, you’ll have built a mini-bank application that tracks users’ financial transactions over time, allowing them to view their history over time.\nAbout the Author\nMatthew Stoodley is a programming enthusiast and has been really excited to learn about Rust for it’s low level power and memory safety. He mostly uses it to build board games.\nIf you want to try them, or you are looking for a story teller, magician, illustrator, or a web developer, you can go to his website to get to know him better.",
      "target_audience": [
        "The video will also appeal to developers who are using C/C++ language to write their applications."
      ]
    },
    {
      "title": "OOP Design Patterns in Python",
      "url": "https://www.udemy.com/course/oop-design-patterns-in-python/",
      "bio": "Learn more about Object Orientated Programming",
      "objectives": [
        "OOP Design Patterns with Python",
        "Deeper understanding of Object Oriented Programming"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Factory method",
          "Queue",
          "Command pattern",
          "Strategy pattern",
          "Singleton",
          "State pattern",
          "Facade pattern",
          "Template pattern",
          "Iterator pattern",
          "Prototype pattern"
        ]
      },
      "requirements": [
        "Basic knowledge of Python and OOP (Classes, objects)"
      ],
      "description": "Design patterns provide a vocabulary to discuss problems and solutions with a common context. They are used in Object Orientated Programs. They’re the recipe or instructions, and once you’ve read them, you’ll be able to more easily follow any piece of code that uses them.\nMany software developers first encounter design patterns when they study computer science in college or at university. This typically happens in the second year, after students learn about object-oriented programming and related topics such as inheritance, encapsulation, and polymorphism.\nThis is a good time to start learning about patterns because it will help you to get more out of the rest of your coursework.\nHowever, not all professional developers learn about design patterns in their formal education. Some don't have the opportunity to learn about patterns at all. The experience of many developers is that design patterns emerge from on-the-job training and experience with projects of increasing size and complexity.\nIn this course we explain Object Orientated Design Patterns with Python through examples. It includes the factory method, command pattern and many others. All Python source code is included in the course so you can study at your own pace, the videos explain them in more details.",
      "target_audience": [
        "Intermediate Python programmers who want to learn more"
      ]
    },
    {
      "title": "React JS + ChatGPT Crash Course: Build Dynamic React Apps",
      "url": "https://www.udemy.com/course/reactjs-chatgpt-crash-course-build-apps-step-by-step/",
      "bio": "Learn React JS with ChatGPT | Master React, Hook, Routing, Reactstrap, Tailwind and Build Projects and Apps Step by Step",
      "objectives": [
        "Learn how to set up ReactJS environment and build your first app step by step with AI guidance.",
        "Understand Virtual DOM, rendering concepts, and JSX basics for efficient React development.",
        "Master React components, props, and events to create dynamic and reusable UI elements.",
        "Explore React Hooks like useState, useEffect, useRef, and custom hooks with practical AI use cases.",
        "Build powerful apps using advanced hooks including useContext, useReducer, useMemo, and useCallback.",
        "Style React applications using CSS, Bootstrap, Tailwind CSS, and SASS for modern UI design.",
        "Gain hands-on experience with form handling, custom validation, and UI libraries like Reactstrap.",
        "Learn React Router DOM v6.4 for navigation, nested routes, dynamic routes, and lazy loading.",
        "Create a real-world Counter Progress Bar project with AI-powered logic and GitHub deployment.",
        "Build a complete Todo App with Tailwind CSS, CRUD operations, and GitHub hosting.",
        "Understand best practices of project folder structure, Git commands, and deployment workflow.",
        "Integrate AI (ChatGPT) with React to automate tasks, enhance learning, and boost app functionality."
      ],
      "course_content": {
        "ReactJS Crash Course Introduction": [
          "Course Overview & Learning Outcomes",
          "Create Your First React App Step by Step",
          "Setup Development Environment for ReactJS"
        ],
        "ReactJS Core Fundamentals": [
          "Virtual DOM Explained with AI",
          "React Rendering & Performance with AI",
          "Understanding JSON in React Projects",
          "Intro. of JSX",
          "Introduction to JSX and Syntax Rules",
          "Writing Your First JSX Code in React"
        ],
        "React Components & Props": [
          "Intro. of Components & Functional Components",
          "Components & Functional Components Explained with Ai",
          "Intro. of Class Components",
          "Class Components Explained with Ai",
          "Intro. of Export & Export Default in React",
          "Hands-on Practical on export & export default with Ai",
          "What is props",
          "Hands-on Practical of Props with Ai"
        ],
        "React Events & Dynamic UI": [
          "Intro. of React Events",
          "Handling Events in React with Ai",
          "What is Dynamic & Reusable Components",
          "Practical of Dynamic & Reusable Components with Ai",
          "Intro. of React Lists",
          "Working with React Lists & Keys with Ai",
          "Intro. of Conditional Rendering",
          "Conditional Rendering in React with Ai",
          "Intro. of insert Styling in React using CSS",
          "Styling React Components using CSS with Ai"
        ],
        "React Hooks Made Easy": [
          "What are React Hooks",
          "Intro. of useState Hook",
          "Practical of useState Hook with Ai",
          "Intro. of useEffect Hook",
          "Practical of UseEffect Hook with Ai",
          "Intro. of useRef Hook",
          "Practical of UseRef Hook with Ai (Part-1)",
          "Practical of UseRef Hook with Ai (Part-2)",
          "Intro. of useMemo Hook",
          "Hands-on Practical of UseMemo Hook with Ai",
          "Intro. of useCallback Hook",
          "Hands-on Practical of useCallback Hook with Ai",
          "Intro. of Custom Hook",
          "How Custom Hook works in React with Ai",
          "Intro. of useContext Hook",
          "Practical of UseContext Hook with Ai (Part-1)",
          "Practical of UseContext Hook with Ai (Part-2)",
          "Intro. of useReducer Hook",
          "Hands-on Practical of useReducer Hook with Ai"
        ],
        "All about SASS": [
          "Intro. of SASS",
          "Variables in SASS",
          "Nesting in SASS",
          "Partials OR Modules in SASS",
          "Mixins in SASS",
          "Inheritance in SASS"
        ],
        "Learn Handling Forms Manually from Scratch": [
          "Libraries Installation & Files Overview",
          "Create Form-UI with Reactstrap & Bootstrap (Part-1)",
          "Create Form-UI with Reactstrap & Bootstrap (Part-2)",
          "Form Handling with Custom Logic with Ai (Part-1)",
          "Form Handling with Custom Logic with Ai (Part-2)",
          "Form Validation with Custom Logic with Ai (Part-1)",
          "Form Validation with Custom Logic with Ai (Part-2)",
          "Form Handling with Custom Logic with Ai (Part-3)"
        ],
        "React-Router-Dom with (v.6.4 & v.5)": [
          "Intro. of React Router DOM v6.4",
          "Overview of UI & Folder Structure for Routing",
          "Install Bootstrap and React Router Dom with Ai",
          "How can Setup Routes in our Project with Ai",
          "How use Link and NavLink for (active className) with Ai",
          "Exact Match Routes by (end Property) & Redirect Page-404 with Ai",
          "How can Navigate Programmatically with Ai",
          "Nested Routing in React with Ai",
          "Diff. btw Absolute and Relative Path and Link with Ai",
          "Index Property for Nested Routes",
          "Dynamic Routing in React with Ai",
          "useParams Hook in React Router Dom with Ai",
          "SearchParams Hook in React Router Dom with Ai",
          "useLocation Hook with Ai",
          "Lazy Loading & Code Splitting with Ai"
        ],
        "Project-1 (Counter Progress Bar) with Ai": [
          "Create React App (Configuration & Installation)",
          "Design UI by (Bootstrap, Reactstrap & SASS) with Ai & Using Git Command (Part-1)",
          "Design UI by (Bootstrap, Reactstrap & SASS) with Ai & Using Git Command (Part-2)",
          "Make Functional (Counter Progress App) with Ai & Deploy on GitHub (Part-1)",
          "Make Functional (Counter Progress App) with Ai & Deploy on GitHub (Part-2)",
          "GitHub Repository Link & Code"
        ],
        "Project-2 (CRUD App) Create, Read, Update, Delete with Ai": [
          "Create React App & Install Libraries",
          "Design UI by Tailwind CSS with Ai & Using Git Commands (Part-1)",
          "Design UI by Tailwind CSS with Ai & Using Git Commands (Part-2)",
          "Make Functional CRED App with Ai & Deploy Project on GitHub (Part-1)",
          "Make Functional CRED App with Ai & Deploy Project on GitHub (Part-2)",
          "GitHub Repository Link & Code"
        ]
      },
      "requirements": [
        "Basic knowledge of HTML, CSS, and JavaScript is recommended.",
        "A computer/laptop with Node.js, npm/yarn installed.",
        "A code editor such as Visual Studio Code.",
        "Internet connection for installing packages and using AI tools.",
        "No prior React experience required – everything is explained step by step."
      ],
      "description": "Are you ready to master React from scratch with the power of AI + Hands-on Projects?\nThis course is designed for absolute beginners and intermediate learners who want to learn React step by step with practical coding examples, AI-powered assistance, and real-world projects.\nWhat You’ll Learn:\nSetup React environment and create your first app\nUnderstand Virtual DOM, Rendering, and JSX with AI assistance\nMaster React Components (Functional & Class Components)\nWork with Props, Events, Lists, and Conditional Rendering\nLearn Dynamic & Reusable Components\nStyle your apps with CSS, SASS, Bootstrap, Tailwind, Reactstrap\nHandle Forms & Validations manually + with libraries\nExplore React Hooks: useState, useEffect, useRef, useMemo, useCallback, useReducer, useContext, Custom Hooks\nBuild routing systems with React Router v6.4\nWork with Nested Routes, Dynamic Routing, Programmatic Navigation, and Lazy Loading and code splittin\nDeploy your React projects on GitHub Pages using Git\nHands-On Projects:\nCounter Progress Bar App – Learn React basics using Git Command + GitHub Deployment\nTodo App (CRED) – Create a full Task Management App with Tailwind CSS, CRED functionality, and deployment\nWhy This Course?\n1. Beginner-friendly explanations with step-by-step guidance\n2. ChatGPT-powered examples to make concepts crystal clear\n3. Real-world projects to add to your portfolio\n4. Covers fundamentals to advanced topics of ReactJS\n5. Perfect for students, developers, freelancers, and job seekers\nBy the end of this course, you’ll be able to build, style, and deploy modern React apps confidently.",
      "target_audience": [
        "Beginners who want to start their journey in ReactJS development.",
        "JavaScript developers who want to upgrade their skills with modern React practices.",
        "Students & professionals who want to learn by building real-world projects.",
        "AI enthusiasts curious about integrating ChatGPT with React for smarter applications.",
        "Anyone looking to deploy professional React apps and showcase them in a portfolio."
      ]
    },
    {
      "title": "Python Programming: Beginner to Expert, 300+ Python Code Ex.",
      "url": "https://www.udemy.com/course/python-master-python-programming-python-coding-examples/",
      "bio": "Python Programming: Mastering Python Beginner to Expert + Free Python3 projects, 300 + Python 3 Free Coding excercises",
      "objectives": [
        "You will master the Python programming language through our Interactive Step by Visual Learning content.",
        "You will learn Programming Techniques & Secrets to became a Successful Professional Coder",
        "You will Learn Coding through Interactive Coding examples explaining Code step by step & Provide hands on Coding experience on Virtual Lab environment.",
        "You will learn concept through Step by step Rich Material on every topic to give better understanding of the concept",
        "You will be provided 100+ Code Exercises as Assignment to Practice to improve Coding Skills & confidence working with real-time problems",
        "You will be provided 10+ Real Time Projects covering complete Project Life Cycle in Automation, Game, App and Web development, Data Science and ML Etc",
        "You will be provided 250+ Code Exercises with Solutions to improve Python Coding Skills",
        "You will be provided best Python Material Collection, Real Time Code examples, Projects & other Material Links",
        "You will be provided Content on Interview Preparation, Questions and how to handle Interview tips & Tricks",
        "You will Learn Logic building Skills & Programming Secrets created from Author experience"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming knowledge is required as we cover everything from coding fundamentals and beyond. Our interactive, step-by-step videos explain complex concepts using simple and engaging language"
      ],
      "description": "Hello welcome to \"Mastering Python Programming : From Beginner to Expert + 300 Exercises\" from AI Ninja\nWorld’s best Interactive Content creators on Python programming who have helped thousands of learners become proficient Python coders with their interactive content.\nPython is high level, multi-purpose & the Most popular Programming Language in the World with a large and active community of developers, vast number of libraries and frameworks used for a variety of purposes, including web development, scientific computing, data analysis, artificial intelligence, and automation.\nThere are number of Courses out there on Python but this Course is a well-designed, Interactive with Real time Code examples, Projects, Material, Code Problems. This Course is designed by Mr Rama, a Coding Master & Programming Guru. Rama has 20 yrs of Programming Experience involved in Many enterprise Platforms and he loves Coding. In this Course he revealed the Secrets of Programming step by step.\nPython is one of the most in-demand programming languages in 2023 used in various emerging technologies such as Computer Vision, Artificial Intelligence, IOT, Cyber Security, Data Science, and many more areas. As a result, learning Python provides a wide range of job opportunities in these fields. This Course provides complete coding tricks & apply them on Virtual Lab.\nThis course is best for individuals who are new to programming and want to build a strong foundation in Python. It is suitable for individuals from diverse backgrounds such as students, software developers, data analysts, data scientists, etc. The course covers the basics of programming, including data types, variables, loops, functions, and other fundamental concepts, providing a comprehensive introduction to Python to Mater the concepts with real time Coding examples & Projects.\nThere are many reasons to learn Python, including:\n1. Versatility: Python is used for a wide variety of purposes, including web development, scientific computing, data analysis, artificial intelligence, and more.\n2. Ease of use: Python has a simple and user-friendly syntax, making it a great choice for beginners or those with limited programming experience.\n3. Large and supportive community: Python has a large and active community of users and developers who contribute to its development and offer support to each other.\n4. Strong libraries and frameworks: Python has a wealth of libraries and frameworks available, making it easy to perform complex tasks and build complex applications.\n5. Good for prototyping: With its simplicity and versatility, Python is a good choice for quickly prototyping and testing ideas.\n6. Strong third-party support: Python has a large and growing number of third-party libraries and tools that make it easy to extend its functionality. These libraries provide support for tasks such as machine learning, data visualization, and web scraping.\n7. Interoperability: Python is designed to be easily integrated with other programming languages and systems, making it a great choice for building complex applications that require interoperation with other technologies.\n8. High demand for Python developers: Python is one of the most popular programming languages, and there is high demand for developers with Python skills in the job market. This makes it a valuable skill to have for career growth and development..\n\n\nIn this Course we will cover Core fundamentals of Python programming including\n\n\nPART - A : MAIN COURSE\n1. Coding Introduction:\nIt covers the fundamental concepts of coding, including what coding is, how code is executed by a computer to perform tasks or achieve outcomes, and the basics of Python programming language, including its syntax and rules.\n\n\n2. Installation & IDE: Step by step instructions to Install Python and how to Popular Python IDEs like Pycharm and also hands on how to use Google Colab\n\n\n3. Variables and data types: Store and manipulate data using variables and data types such as integers, strings, lists, and dictionaries.\n\n\n4. Operators and expressions: Use mathematical and logical operators to perform operations and manipulate data.\n\n\n5. Control flow: Make decisions and repeat actions using if-else statements, loops, and functions.\n\n\n6. Functions: Create reusable blocks of code to perform specific tasks.\n\n\n7. Exception handling: Handle errors and exceptions in a clean and efficient manner.\n\n\n8. File handling in Python: File handling in Python allows you to read from and write to files on your computer. There are several built-in functions in Python for file handling\n\n\n9. Data Structures using Python : Data structures in Python are a way of organizing and storing data\n\n\n10. Algorithms in Python : Algorithms are a set of step-by-step instructions or procedures used to solve a specific problem or perform a specific task. Python, as a versatile programming language, provides a rich ecosystem of libraries and tools for implementing various algorithms\n\n\n11. Object-Oriented Programming (OOP): Create custom objects and classes to model real-world concepts.\n\n\n12. Debugging: Debugging is the process of finding and fixing errors (also known as bugs) in your code. In Python, there are several techniques and tools you can use to debug your code:\n\n\n13. Database Access : Python provides several libraries and modules for accessing and working with databases. We provide step by step Tutorial on how to connect, Retrieve and execute CRUD operations using MySQL Database.\nPART-C : CODE EXAMPLES\n15 Chapters & 50+ Topics covered with exclusive Code example Videos visually using Pycharm to provide complete Real Time Coding experience with step by step explanation. I will also cover similar Videos on Advance features as part of Road map.\nPART-D : 300 PROBLEMS WITH SOLUTIONS\nProviding over 300 code examples for real-world problems is an essential aspect of this course, aimed at enhancing your experience and proficiency in dealing with practical challenges.\n\n\n\n\n\n\nPART-D : MATERIAL\n\n\nEvery topic is covered with detailed Material providing step by step Visually Rich & easy to understand content along with detailed examples.\n\n\nPART -E : REAL LIFE PROBLEMS WITH CODE EXAMPLE\n\n\n· Python Daily Coding Challenge\n· Grade Calculator to calculate the grade based on percentage\n· Write a Python program that performs basic file management tasks\n· Get synonyms from Thesaurus using python\n· Get synonyms from Thesaurus using python\n· Check website working status using requests in Python\n· File and Exception Exercises in Python\n· Display the Head of a File\n· Display the Tail of a File Reading last 10 Lines\n· Concatenate Multiple Files\n· Concatenate Multiple Files\n· List of Python File Methods with Examples\n· Number the Lines in a File\n· Find Word frequency in a text using Python\n· Output CLI calendar using calendar Module\n· Get file size and other properties using Python\n· Design, Coding guidelines and Architecture Skills for Programmer\n· Explain Design Principle DRY using a example with Python with OOPS\n· Tkinter menu tick using Python\n· Python Workbook with Exercises and Solutions\n· Display Mailing Address\n· Program that asks user for their name and responds with a greeting\n· Multiple examples on working with Tuples in Python\n· Remove all occurrences of a specific item from a list\n· Tkinter_ToolTip using Python\n· Python List Exercises and Examples\n· Area of a Room\n· Area of a Field\n· Insert image on every page of a pdf using PymuPdf and Python\n· Bottle Deposits\n· Calculate Tax and Tip\n· Sum of the First n Positive Integers\n· 10 different For Loop exercises in Python\n· Calculate total weight of the Widgets and Gizmos of Order\n· Compound Interest\n· Multiple Arithmetic Operations using 2 Numbers\n· Find Fuel Efficiency using the given inputs\n· Distance Between Two Points on Earth\n· Making Change\n· Height Units\n· Distance Units\n· Area and Volume\n· Heat Capacity\n· Open a website in default browser using Python\n· Execute an external program\n· Get user selected directory\n· Find Volume of a Cylinder\n· Find Free Fall\n· Find Area of a Triangle\n· Scrolled text reader using tkinter, Frame, INSERT, scrolledtext\n· Compute the area of a triangle when the lengths of all three Side\n· Python Strings and Operations\n· Python Pandas Functions, Methods and Filters\n· NumPy Properties, Tools , Functions, Methods\n· NumPy Numerical Computing and Data manipulation methods\n· Get user selected directory\n· Check if directory exists, if not, create it in Python?\n· Get system current date and time Python\n· Copy & paste text to & from the clipboard\n· Count how many files in a directory ?\n· Convert a .Docx file to text using Python\n· Get definitions for a word using PyDictionary ?\n· Do a Google search and return results using Google Lib in Python?\n· How to grab all links from a webpage using Python?\n· Shutdown Windows using Python?\n· Text to Speech using gTTS in Python?\n· BBC News RSS Feed reader, news headlines from last 7 days\n· How to read a .txt file inside a 7z folder using python?\n· Build a simple audio player to play, pause, and stop audio file?\n· Program reads an audio file and generates a visual representation\n· What is Lambda Function in Python? How to use it with 20 Examples\n· Lambda Function with examples of Database Filters & Operations\n· Whois Domain look up\n· Convert Web Page To Text File using Python\n· Play Windows system sounds using Python\n· Determine System Platform (Operating System ) using Python\n· Convert Document To Text File using Python\n· How to Extract Image Metadata in Python\n· How to implement image filters using Python\n· Create Tabbed Widget using tkinter\n· Python str Class Methods with examples\n· String substitution methods and examples using string.Template\n· Using re a complete regular expression library with examples\n· Using difflib Library in Python to compare sequences and differences\n· Create User input dialog using tkinter\n· Tk colour picker using Python\n· Get URL's From Sitemap BeautifulSoup\n· Auto scroll huge pages in Twitter using Python\n· Scrape Wikipedia info using BeautifulSoup\n· Check if string is a palindrome\n· Control A Desktop App Notepad using Python\n· Calculate Number Of Words In A Text File using Python\n· Create Right Click Menu For Tkinter using Python\n· Play mp3 using Pygame using Python\n· Show Current Time, In Hours And Minutes\n· Password Generator using Python\n· Search For File Type using Python\n· Store Variables To File and retrieve\n· Randomly shuffle string using Python\n· Most common words used in a text file\n· Empty Windows Recycle Bin using Python\n· Get image type from header from Image\n· Windows Screen Grabber using Python\n· Print Today’s Date in proper readable format\n· Create awesome GUI Date Picker using Python\n· Create \"Hello_world\" in Flask\n· Create Windows Pop-Up Notification using Python\n· Send Email with attachment using Python\n· List all running processes in System using Python\n· Pass a parameter from command callback in Tkinter using lambda\n· Extract JPEG's from PDF using Python?\n· Sort a list of names by surname in one line, using lambda\n· Using Maketrans and translate to replace parts of strings\n· Last Modified Date & size Of File using Python\n· Unzip a zip archive using Python?\n· Convert image to greyscale using Open CV and Python\n· Detect usb drives on Windows Machine using Python\n· OCR Text From Image using pytesseract\n· Get version of Windows used in System using Python\n· Display live webcam using Open CV\n· Show start-up programs using python and WMI\n· Zoom And Save Image using matplotlib in Python\n· Take a screenshot V2-cross platform using pyscreeze\n· Find Percent Free Space On Fixed Drives using Python\n· Place Text On Image and save it using OpenCV\n· Print Text On Webcam And Save Video using Open-\n· Resize Image and save using Open-CV\n· Rotate Image using CV2 in Python\n· Crop Image and Save using CV2\n· Text To Art using art Library in python\n· Check how much Total RAM, FREE, Used and Percentage using python\n· Sharpen Image using CV2 and Python\n· Get total folder size using os in Python\n· Get video file info using os Library in Python\n· Demux audio from a video using ffmpeg and Python\n· Remux audio back onto a video using ffmpeg and Python\n· Convert almost any video format using ffmpeg in Python\n· Convert almost any audio format using ffmpeg in Python\n· Live video sketcher using Open CV\n· Timelapse Video recorder using CV2 in Python\n· Get Browser History using Python\n· Body Mass Index Calculator using Python\n· Open webcam in full screen mode using CV2 in Python\n· Using Tkinters internal bitmaps and cursors using Python\n· Validate email address using lepl in Python\n· Masked password entry box using pyautogui in Python\n· Tkinter toolbar icon menu in Python\n· Show Images as HTML Gallery in Python\n· Scrape Email Address from Text File using re in Python\n· Create Photo border using Python\n· Create Colour Sliders using tkinter in Python\n· Excercises with Examples on Variables in Python\n· List of Python Built in Data Types and Usage with Examples of each\n· List of Python Operators and using them with one example of each\n· List of control flow commands in Python along with examples\n· What is Function? List of Function commands with Example in Python\n· Various Input and output Options available in Python with Examples\n· Complete List Operations with Examples\n· Complete Tuples Operations with Examples\n· Complete List of Methods of Dictionaries with examples\n· Complete List of methods of Sets with Examples in Python\n· How to Classes and objects covering all OOPS concepts using Python\n· Explain Inheritance in OOPS using Python with 5 real Life Examples\n· Explain Polymorphism in OOPS using Python with 5 real Life Examples\n· Explain Encapsulation in OOPS using Python with 5 real Life Example\n· Explain Abstraction in OOPS using Python with 5 real Life Example\n· Explain various Exception handling methods with Code examples\n· Explain Generators with 5 Real time Examples using Python?\n· Explain Decorators with 5 Real time Examples using Python\n· Explain Context managers with 5 Real time Examples using Python\n· Explain Regular expressions with 5 Real life Use cases with Code ex\n· Explain File handling with 5 Real life Use cases with Code example\n· Working with dates and times with 5 Real life Use cases with Code ex\n· Explain Multithreading with 5 Real life Use cases with Code example\n· Explain Multiprocessing with 5 Real life Use cases with Code example\n· Explain Networking with 5 Real life Use cases with Code example\n· Explain Web scraping with real life example with Code using Python\n· Explain JSON handling with real life example with Code using Python?\n· Excercise:Explain Data serialization with real life example using Python?\n· Explain debugging with real life example with Code using Python\n· Explain Machine learning with Python with real life example ?\n· Explain Deep learning with Python with real life example with Code\n· Code Examples on AI (Data Science, NLP, Computer Vision and Machine Learning)\n· File Handling Assignments with various Real life Problems in Python\n· Natural language processing with real life example with Code\n· Explain Image processing and computer vision with real life example?\n· Explain Scientific computing with Python using Python\n· Explain Text generation Python using Python with Real Life Example\n· Explain Speech recognition with real life example using Python\n· Explain Text summarization with real life example using Python\n· Explain Language translation with real life example using Python\n· Explain Recommendation systems with real life example using Python\n· Recommendation systems are algorithms using Python?\n· Explain Face recognition with real life example using Python\n· Explain SciPy with real life example using Python\n\n\nPART-F : 3 REAL TIME PROJECTS\n1. Web scraping with Python\nYou will learn Web scraping with Python to extract data from websites using various libraries and tools such as Beautiful Soup, Scrapy, Selenium, and Requests to retrieve data from a website, parse and extract the relevant information, and store it in a structured format such as CSV, JSON or a database\n2. Working with Images in Python\nReal-time & On demand image processing project using OpenCV, a popular computer vision library in Python. You can create an application that captures live video from a camera and applies various image processing techniques such as object detection, Classification etc\n3. Working with PDFs, Excel in Python\nWorking with PDFs and Excel in Python is a popular project among data analysts and programmers. This project involves automating the extraction, analysis, and manipulation of data stored in PDF and Excel files using Python.\n\n\nFew Keywords Covered in this Course\n# Python syntax, # Python data types, # Python strings # Python lists, # Python dictionaries, # Python functions # Python classes and objects, # Python control flow (if statements, loops), # Python file I/O\n# Python exception handling, # Python modules and packages, # Python libraries (e.g., NumPy, Pandas, Matplotlib)\n# Python regular expressions, # Python debugging techniques, # Python virtual environments (e.g., virtualenv, conda)\n# Python decorators, # Python generators, # Python multithreading and multiprocessing\n# Python web frameworks (e.g., Django, Flask), # Python data analysis and visualization # Python Course\n#python basics #python coding #python certification #colab python #python documentation #download python #django python #data structures in python #dataclass python #python editor #python for beginners #how to learn python #install python #python language #python list #python lambda #learn python #programming in python #python projects #python tutorial #python tutor #python quiz #python questions #vs code python\n\n\nFinal thought from Author\nRama's love for Python and the tremendous career growth he has seen in the language has fueled his passion to create the best learning experience through his course. His goal is to create 100,000 Python experts who share his enthusiasm and drive for success, proving that pursuing what you love with passion always leads to triumph, regardless of financial gain.",
      "target_audience": [
        "This course is best for individuals who are new to programming and want to build a strong foundation in Python. It is suitable for individuals from diverse backgrounds such as students, software developers, data analysts, data scientists, etc. The course covers the basics of programming, including data types, variables, loops, functions, and other fundamental concepts, providing a comprehensive introduction to Python to Mater the concepts with real time Coding examples & Projects",
        "This course is best for individuals who are already working using Python can Learn Advance Topics and become Python Expert"
      ]
    },
    {
      "title": "Deep Learning into Python and Introduction to Data Science",
      "url": "https://www.udemy.com/course/complete-python-bootcamp-deep-learning-into-python-coding/",
      "bio": "Deep Learning into Python Programming for Beginners with Introduction to Numpy, Pandas and Matplotlib for Data Science",
      "objectives": [
        "Use Python for Data Science and Machine Learning",
        "Learn to use NumPy for Numerical Data",
        "Learn to use Pandas for Data Analysis",
        "Learn to use Matplotlib for Python Plotting",
        "Master the basic syntax in python programming",
        "Master the Data Types in Python programming",
        "You will understand Variables in Python programming",
        "Master the Loop systems in Python programming",
        "You will understand Operators in Python programming",
        "You will understand File Input/Output in Python programming",
        "Get the in-depth knowledge in the use of OOP (Object Oriented Programming)"
      ],
      "course_content": {},
      "requirements": [
        "No basic knowledge of computer programming is required for this course",
        "You must have a good computer system. A computer (Windows/Mac/Linux)",
        "You’ll need to install Anaconda. We will show you how to do that step by step"
      ],
      "description": "Unlock the world of Python programming and data science with our comprehensive course, “Deep Learning into Python with Data Science for Absolute Beginners.” Designed specifically for beginners, this course takes you from the basics of Python to the foundations of data science. Through detailed lessons, hands-on projects, and expert guidance, you’ll gain the skills and confidence to excel in Python programming and data analysis.\nWhat You’ll Learn:\nGetting Started With The Fundamentals of Python Programming: Begin your journey with a solid foundation in Python, understanding its syntax, variables, and data types.\nHow to Create Project Files with Basic Python Syntax: Learn to set up and organize your Python projects efficiently, ensuring a smooth workflow.\nStrings In Python Programming: Manipulate and handle text data effectively with Python’s powerful string methods.\nOperators In Python Programming: Master various operators, including arithmetic, relational, and logical operators, to perform complex operations in your programs.\nList In Python Programming: Work with lists to store, access, and manipulate collections of data.\nTuple In Python Programming: Learn about tuples and how to use them for immutable sequences of data.\nSet In Python Programming: Explore sets and their applications for storing unique elements.\nDictionary In Python Programming: Understand dictionaries for key-value pair storage and retrieval.\nDecision Making Statements In Python Programming: Implement conditional statements like if, else, and elif to control the flow of your programs.\nLoop Systems In Python Programming: Automate repetitive tasks with for and while loops to enhance your program’s efficiency.\nFunctions, Lambda, and Arrays: Create reusable code blocks with functions, utilize lambda expressions for short functions, and work with arrays for efficient data storage.\nIterators In Python Programming: Learn how to use iterators to traverse through all elements of a collection.\nFile Handling In Python Programming: Read from and write to files, enabling data persistence and advanced data management.\nPython Programming Concepts: Delve into advanced Python concepts to enhance your programming skills.\nString Formatting: Format strings for better readability and presentation of your data.\nObject Oriented Programming In Python (OOP): Dive deep into OOP concepts such as classes, objects, inheritance, polymorphism, and encapsulation to create modular and reusable code.\nIntroduction to Python for Data Science: Transition into data science with an introduction to its core concepts and applications.\nPython Libraries for Data Science: Explore essential Python libraries for data science, including NumPy, Pandas, and Matplotlib.\nNumPy Library: Learn to perform numerical operations and handle arrays with NumPy.\nPandas Library: Master data manipulation and analysis using the Pandas library.\nMatplotlib Library: Visualize data effectively with Matplotlib’s powerful plotting capabilities.\nSampling Data in Data Science: Understand the importance of sampling and how to sample data for analysis.\nHow to Read Data: Learn various methods to read data from different sources.\nHow to Sample Data: Implement sampling techniques to work with subsets of your data.\nRead Data from External Files: Import data from external files into your Python programs.\nData to CSV and TXT Formats: Save and export your data in CSV and TXT formats for easy sharing and analysis.\nConvert and Read Data in CSV Format: Convert your data into CSV format and read CSV files in Python.\nConvert TXT File to Table: Transform text files into tabular data for easier analysis.\nData Preparation in Data Science: Prepare your data for analysis by cleaning, transforming, and organizing it.\nSeries Data Structure: Work with Pandas Series for one-dimensional labeled data.\nData Frame Structure: Master Pandas DataFrames for two-dimensional labeled data structures.\nAnd Many More: Continue to build your skills with additional topics and projects designed to reinforce your learning and prepare you for real-world challenges.\nWhy Enroll in This Course?\nComprehensive Curriculum: Covering all essential topics from Python basics to data science, ensuring a thorough understanding and skillset.\nHands-On Projects: Gain practical experience with real-world projects that solidify your learning.\nBeginner-Friendly: No prior programming experience required, making this course accessible to everyone.\nExpert Instruction: Learn from experienced instructors who provide clear explanations and step-by-step guidance.\nLifetime Access: Revisit course materials anytime and learn at your own pace.\nCommunity Support: Join a community of learners to share knowledge, seek help, and collaborate on projects.\nBy the end of this course, you’ll have the confidence and skills to tackle any Python programming and data science challenge, positioning you for success in the industry. Enroll now and start your journey to becoming a Python programming and data science expert!\nKnowlegde Base:\nPython programming course, learn Python programming, data science for beginners, Python basics, Python data structures, Python strings, Python operators, Python loops, Python functions, Python OOP, Python file handling, Python data science libraries, NumPy, Pandas, Matplotlib, data sampling, data preparation, Python data analysis, master Python programming, beginner to advanced Python programming.\nPython is an interpreted, high-level and general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.\nPython is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented, and functional programming. Python is often described as a \"batteries included\" language due to its comprehensive standard library.\nPython was created in the late 1980s as a successor to the ABC language. Python 2.0, released in 2000, introduced features like list comprehensions and a garbage collection system with reference counting.\nPython 3.0, released in 2008, was a major revision of the language that is not completely backward-compatible, and much Python 2 code does not run unmodified on Python 3.\nThe Python 2 language was officially discontinued in 2020 (first planned for 2015), and \"Python 2.7.18 is the last Python 2.7 release and therefore the last Python 2 release.\" No more security patches or other improvements will be released for it. With Python 2's end-of-life, only Python 3.6.x and later are supported.\n\n\nSome Fundamentals of Python programming that were covered in this course are as follows:\n1. Basic Python programming Syntax\n2. Data Types\n3. Variables\n4. Loops\n5. Operators\n6. Decision Making Statement\n7. File Input/Output\n8. Sample Projects\n9. Object Oriented Programming\n10. Error Handling\n11. Functions, lambda and Arrays\n\n\nThe advancement of technology has brought about an explosion in data collection and usage. Many industries rely on data science to develop more innovative and advanced products. In the last decade, the volume and variety of available data have increased dramatically, necessitating the development of new skills and the creation of entirely new occupations.\nI am guessing you saw the hike too, and want in on the juicy tech space. You are in for a big treat. But this introduction will not be an introduction if we don’t know what we are dealing with. Allow me to introduce Data Science.\nData Science is a combo of several fields in IT where we use algorithms and scientific processes to extract facts from data and use them to create insights.\nData science entails using various techniques to draw conclusions from accumulated data. A data scientist's job is to take an intricate business issue, distill the relevant information into data, and apply that data to the problem. You may wonder what this means for you personally and where to begin.\nAll that's required is a head for ideas and a solid grasp of the ins and outs of a particular industry, both of which you undoubtedly possess. In data science, fraud, particularly online fraud, is a hot topic. Data scientists employ their expertise in this area by developing algorithms to monitor and prevent fraudulent activity. This data science beginner course will provide an excellent place to begin.\nThis comprehensive guide will teach you everything you need to know to get started in data science, from the various job opportunities available to data scientists to the practical applications of data science. You should begin this data science tutorial by reading up on the job description for a data scientist.\nMany businesses and individuals are shifting their attention to big data and AI. It's shocking to think that over 2.5 exabytes of data are produced and extracted by individuals and institutions daily. Since then, there has been a meteoric rise in the quantity of data. Most businesses have shifted to rely heavily on data to make decisions. As a result, some companies have established dedicated data-analysis divisions.\nStatisticians conduct quantitative historical data analyses, which is still insufficient because the analysis's findings would be limited to the present. Analysis was previously performed manually, but this task has been automated mainly with the advent of robust computing processes, cloud technology, and analytical tools. They started working on data analysis models.\nBefore delving into the many facets of data science, let's grasp what it actually is. Data science, in its simplest definition, is the application of mathematics and statistics to large datasets to draw meaningful conclusions about patterns and relationships within the data. Using your programming, business, and analytical skills, you can manage and process the data set. You have to admit, this sounds challenging. Most people lack the knowledge and understanding necessary to work effectively with data science and improve their skills in this area.\n\n\n\n\nWhy Must I Take This Course And What Benefit Is It To ME As A Python Programmer?\nThis is the only course on the internet that will help you to become a certified and successful programmer with an in-depth knowledge of the entire aspect of Python programming and prepare you with the required skills necessary to build you to face job interviews and get employed as a full stack Software developer.",
      "target_audience": [
        "Anyone who wants to learn to code.",
        "The course is also ideal for beginners, as it starts from the fundamentals and gradually builds up your skills",
        "You should take this course if you want to become a Data Scientist or if you want to learn about the field"
      ]
    },
    {
      "title": "The Complete Prolog Programming Course: From Zero to Expert!",
      "url": "https://www.udemy.com/course/learn-prolog-programming-from-zero-to-hero/",
      "bio": "The modern Prolog course for everyone! Master Prolog with projects, challenges and theory. Many courses in one!",
      "objectives": [
        "Learn the core Prolog skills needed to become a master in Logic Programming.",
        "Be able to demonstrate your understanding of Prolog to future employers.",
        "Understand Backtracking and Prolog Recursion.",
        "Master Data Structures and Expert Systems in Prolog.",
        "Acquire essential Artificial Intelligence Techniques in Prolog.",
        "Practice your skills with 50+ challenges and assignments (solutions included)"
      ],
      "course_content": {},
      "requirements": [
        "A computer with either Windows, Mac or Linux to install all the free software and tools needed to build your new Prolog apps.",
        "A strong work ethic, willingness to learn, and plenty of excitement about the awesome new knowledge you’re about to gain.",
        "Nothing else! It’s just you, your computer and your hunger to get started today."
      ],
      "description": "You’ve just stumbled upon the most complete, in-depth Prolog programming course online.\nWhether you want to:\n- build the skills you need to get your first Prolog programming job\n- move to a more senior software developer position\n- become a computer scientist mastering in computation\n- or just learn prolog to be able to create your own prolog apps quickly.\n\n...this complete Prolog Masterclass is the course you need to do all of this, and more.\n\n\nThis course is designed to give you the Prolog skills you need to become a Prolog developer. By the end of the course, you will understand Prolog extremely well and be able to build your own Prolog apps and be productive as a computer scientist and software developer.\n\n\nWhat makes this course a bestseller?\nLike you, thousands of others were frustrated and fed up with fragmented Youtube tutorials or incomplete or outdated courses which assume you already know a bunch of stuff, as well as thick, college-like textbooks able to send even the most caffeine-fuelled coder to sleep.\nLike you, they were tired of low-quality lessons, poorly explained topics, and confusing info presented in the wrong way. That’s why so many find success in this complete Prolog developer course. It’s designed with simplicity and seamless progression in mind through its content.\n\nThis course assumes no previous coding experience and takes you from absolute beginner core concepts. You will learn the core prolog skills and master logic programming. It's a one-stop shop to learn Prolog. If you want to go beyond the core content you can do so at any time.\n\n\nHere’s just some of what you’ll learn\n(It’s okay if you don’t understand all this yet. You will in the course)\nAll the essential Prolog keywords, facts, relations, arguments and expressions needed to fully understand exactly\nwhat you’re coding and why - making programming easy to grasp and less frustrating.\nYou will learn the answers to questions like What is a Prolog database, What are rules and models and to apply them to your Prolog apps.\nFunctions and Main Structure of Expert Systems along with dealing with uncertainty and knowledge representation.\nComplete chapters on Backtracking programming and many aspects of the Prolog Recursive mechanism (the protocols and tools for building applications) so you can code for all platforms and derestrict your program’s user base.\nHow to develop powerful Prolog applications using Advanced Tree Representations and Pattern-Directed Programming.\n\n\nWhat if I have questions?\nAs if this course wasn’t complete enough, I offer full support, answering any questions you have 7 days a week.\nThis means you’ll never find yourself stuck on one lesson for days on end. With my hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\n\n\nThere’s no risk either!\nThis course comes with a full 30-day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, simply let me know and I’ll refund you 100%, every last penny no questions asked.\nYou either end up with Prolog skills, go on to develop great programs and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\nYou literally can’t lose.\n\nReady to get started, developer?\nEnroll now using the “Add to Cart” button on the right, and get started on your way to creative, advanced Prolog brilliance. Or, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.\nSee you on the inside (hurry, Prolog is waiting!)",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous coding experience, to intermediates looking to sharpen their skills to the expert level.",
        "Those looking to build creative and advanced Prolog applications for either personal use or for high-paying clients as a self-employed contractor.",
        "Those who love letting their own creative genius shine, whilst getting paid handsome amounts to do so."
      ]
    },
    {
      "title": "Python Fundamentals",
      "url": "https://www.udemy.com/course/python-fundamentals-code-crew-careers/",
      "bio": "Building a Solid Understanding of Python Basics",
      "objectives": [
        "Master the Basic Concepts of Python",
        "Learn How to Utilize various Data Types & Structures",
        "Perform Basic Python Operations",
        "Utilize Jupyter Notebooks to Create and Execute Code"
      ],
      "course_content": {
        "Getting Started": [
          "Welcome to the Course!",
          "Installing Python",
          "Installing Visual Studio Code",
          "Extensions for Visual Studio Code",
          "Download Course Materials"
        ],
        "Python Fundamentals": [
          "Data Types",
          "Data Types: int",
          "Data Types: float",
          "Data Types: str",
          "Data Types: NoneType",
          "Data Structures",
          "Data Structures: Lists",
          "Data Structures: Tuples",
          "Data Structures: Dictionaries",
          "Data Structures: Sets",
          "Casting",
          "Casting: int to str",
          "Mathematical Operators",
          "Mathematical Operators: Addition",
          "Mathematical Operators: Subtraction",
          "Mathematical Operators: Multiplication",
          "Mathematical Operators: Division",
          "Mathematical Operators: Modulo",
          "Mathematical Operators: Exponentiation",
          "Comparison Operators",
          "Comparison Operators: Equal",
          "Comparison Operators: Not Equal",
          "Logical Operators",
          "Logical Operators",
          "Membership Operators",
          "If Statements",
          "If Statements",
          "While Loops",
          "While Loops"
        ],
        "String Functions": [
          "Case Conversions",
          "String Replacement",
          "Splitting & Joining",
          "Stripping Whitespace",
          "RegEx Search"
        ]
      },
      "requirements": [
        "No prior programming experience necessary"
      ],
      "description": "Embark on your journey into the world of programming with our beginner Python course. This comprehensive course is designed to provide you with a solid foundation in programming using the Python language.\nPython Data Types\nIn this course, you will start by delving into Python's fundamental concepts, exploring various data types such as integers, floats, strings, and booleans. Through interactive lessons and hands-on exercises, you will gain a clear understanding of how to manipulate and work with different data types effectively.\nPython Data Structures\nAs you progress, you'll dive into the realm of Python data structures, learning how to create, modify, and access lists, tuples, and dictionaries. You'll discover the power of organizing and managing data using these versatile structures.\n\n\nLogical operators will be your next destination, where you'll grasp the art of making decisions in your code by using conditions and comparisons. You'll learn how to control the flow of your program's execution based on these logical evaluations.\n\n\nNo programming course is complete without arithmetic prowess. You'll master mathematical operators, understanding how to perform basic calculations, handle numeric data, and use mathematical expressions effectively.\n\n\nBy the end of this beginner Python course, you'll have gained the confidence to write simple programs, manipulate data, and solve problems using Python. Whether you're looking to kickstart a career in programming or simply exploring a new hobby, this course is your first step towards mastering the art of coding with Python.",
      "target_audience": [
        "Beginner Python Developers"
      ]
    },
    {
      "title": "Java & Python Programming Mastery: Learn to Code Like a Pro",
      "url": "https://www.udemy.com/course/java-python-programming-mastery-learn-to-code-like-a-pro/",
      "bio": "Master Java and Python programming from the ground up and gain the skills to build real world applications like a pro.",
      "objectives": [
        "Understanding Java & Python",
        "Syntax",
        "Comments",
        "Data Type",
        "Variables",
        "Operators",
        "Booleans",
        "If...Else",
        "For Loop",
        "While Loop",
        "Arrays",
        "Strings",
        "Constants"
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience Needed"
      ],
      "description": "Ready to elevate your programming skills and unlock new career opportunities? Welcome to \"Java & Python Programming Mastery: Learn to Code Like a Pro,\" the ultimate Udemy course designed to turn you into a proficient coder in two of the most influential programming languages: Java and Python.\n\n\nThis course begins by laying a strong foundation in programming fundamentals. You will start with Python, learning the essentials such as syntax, data types, and control structures. As you advance, you'll explore advanced topics like file handling, object-oriented programming, and modules. Python’s versatility will be showcased through practical applications such as web scraping, data analysis, and automation scripts.\n\n\nJava Fundamentals:\nCore concepts: Grasp the basics of Java, including variables, data types, operators, and control flow.\nObject-oriented programming (OOP): Master OOP principles like inheritance, polymorphism, and encapsulation.\nException handling: Learn to handle errors gracefully and prevent crashes.\nCollections framework: Utilize collections like ArrayLists, HashMaps, and Sets to efficiently store and manipulate data.\nJavaFX: Create visually appealing and interactive user interfaces.\n\n\nPython Fundamentals:\nSyntax and structure: Understand Python's clean and readable syntax.\nData structures: Work with lists, tuples, dictionaries, and sets.\nFunctions and modules: Build reusable code and organize your projects effectively.\nFile I/O: Learn to read, write, and manipulate files.\nRegular expressions: Use regular expressions to search and manipulate text patterns.\n\n\nAdvanced Topics:\nMultithreading: Create concurrent programs to improve performance.\nNetworking: Develop network applications using sockets and HTTP.\nDatabase integration: Connect to databases like MySQL and PostgreSQL.\nWeb development: Build web applications using frameworks like Spring Boot (Java) and Django (Python).\nData analysis: Explore data analysis techniques using libraries like NumPy and Pandas.\n\n\nKey benefits of this course:\nCover a wide range of topics, from fundamentals to advanced concepts.\nApply your knowledge through practical exercises and real-world projects.\nLearn from experienced instructors with industry expertise.\nAccess the course materials at your own pace and convenience.\n\n\nIn addition to coding, the course covers best practices in software development, including debugging techniques, version control with Git, and writing clean, maintainable code. You'll also gain insights into the latest trends and tools in the programming world, ensuring your skills remain relevant and cutting-edge.\n\n\nWhether you’re aiming to advance your career, switch fields, or start a new project, this course provides the comprehensive training you need to excel in both Java and Python. Join today and unlock the full potential of programming with two of the most sought-after languages in the industry.",
      "target_audience": [
        "Anyone looking to build the Java and Python programming skills.",
        "People interested in programming who have no prior programming experience"
      ]
    },
    {
      "title": "Python PCAP: Certified Associate in Python Programming[2025]",
      "url": "https://www.udemy.com/course/python-pcap-certified-associate-in-python-programming2024/",
      "bio": "Mastering Python Essentials and Proficiency – Achieving Certification Excellence in 2025",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the Python Practice Tests Preparation Course! Our primary objective is to equip you with the essential practice and skills necessary in the field of Python development. Through the inclusion of four meticulously crafted practice tests, we aim to immerse you in a learning experience that spans a wide spectrum of topics and varying levels of difficulty.\n\n\nWhat You Will Obtain:\n\n\nFour Comprehensive Practice Tests: Each of these tests is thoughtfully designed to encompass a diverse array of questions that address different aspects of Python concepts and scenarios. By actively engaging with these practice tests, you will cultivate the proficiency needed to tackle the kinds of questions you are likely to encounter in Python certification exams, ensuring that you are well-prepared for the real assessment.\n\n\nDetailed Explanations: Following each practice test, you will receive comprehensive explanations for every question. These explanations will furnish you with a profound understanding of the correct answers, enabling you to solidify your knowledge and learn from any errors you may have made.\n\n\nAchievement Goal: To successfully complete this course, set your target at achieving a minimum score of 75% on each of the four practice tests.\n\n\nWho Can Benefit from This Course:\n\n\nThis course extends a warm welcome to individuals at various stages of their Python programming journey. It is suitable for:\n\n\nStudents who are actively preparing for Python certification exams.\n\n\nProfessionals seeking to enhance their employability by attaining a valuable Python certification.\n\n\nProgrammers who aspire to elevate their Python skills and expand their career horizons.\n\n\nBest regards,",
      "target_audience": [
        "Individuals in the process of actively preparing for Python certification exams.",
        "Professionals aiming to boost their job market competitiveness by obtaining a valuable Python certification.",
        "Programmers who aspire to enhance their Python proficiency and expand their career opportunities."
      ]
    },
    {
      "title": "Python Programming: 200+ Exercises for Practice",
      "url": "https://www.udemy.com/course/200-exercises-programming-in-python-from-a-to-z/",
      "bio": "Boost Your Python Proficiency with 200+ Engaging Exercises - Unleash Your Coding Potential and Excel in Python!",
      "objectives": [
        "solve over 200 exercises in Python",
        "deal with real programming problems",
        "work with documentation",
        "guaranteed instructor support"
      ],
      "course_content": {},
      "requirements": [
        "basic knowledge of Python"
      ],
      "description": "This course is an immersive, hands-on learning experience designed for individuals who want to hone their Python programming skills through practical exercises. This course presents a unique learning approach by offering a comprehensive set of exercises, ensuring a deep engagement with the Python language.\nThe course is structured into various sections, each targeting a specific aspect of Python, including fundamentals such as data types and variables, data structures, functions, exception handling, as well as more advanced topics like object-oriented programming, Python's built-in libraries, and working with external files and databases.\nEach exercise is carefully curated and designed to reinforce a specific concept in Python programming. They are self-contained, encouraging participants to think critically and solve complex problems independently. Solutions are provided and thoroughly explained to help learners understand the best practices and methodologies in Python programming.\nThis course is suitable for Python programmers of all skill levels, from beginners to experienced developers looking to refresh their knowledge and stay up-to-date with the latest Python developments. Whether you're preparing for a job interview, participating in a coding bootcamp, or merely expanding your coding skillset, this course offers a rigorous and rewarding learning experience.\n\n\nPython: The Language of Simplicity and Power\nPython is a high-level, versatile programming language known for its clean syntax and readability. Widely used in web development, data science, automation, artificial intelligence, and more, Python enables developers to write efficient, scalable, and maintainable code with minimal effort. Its rich ecosystem of libraries and strong community support make it an ideal choice for beginners and professionals alike.",
      "target_audience": [
        "Aspiring Software Developers",
        "Python Programming Enthusiasts",
        "Data Analysts and Data Scientists",
        "Automation Engineers and Scripting Professionals",
        "Professionals Transitioning into Tech",
        "Computer Science Students",
        "Technical Interview Candidates"
      ]
    },
    {
      "title": "C# OOP: C# Object Oriented Programming on Real C# Projects",
      "url": "https://www.udemy.com/course/cobject-oriented-programming-in-c-with-hands-on-practices/",
      "bio": "Learn C# OOP with hands-on C# projects and dive in C# intermediate step by step guide to classes, interfaces and C# OOP",
      "objectives": [
        "C# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft.",
        "Thanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C",
        "Encapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members .",
        "C# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications",
        "As is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on.",
        "Applying the OOP Concepts using C#",
        "How to use Visual Studio efficiently",
        "What objects, classes, fields, properties, methods and constructors are in detail",
        "How to use static, partial and nested classes",
        "How inheritance works",
        "How you can utilize abstract, sealed, virtual and overridden classes and members to build robust applications",
        "How to develop Console and Windows Forms Applications",
        "How to use System Input Output library to utilize file system for your needs",
        "Layered architecture",
        "How to use you layered architecture in your projects",
        "How to delegate methods and use events",
        "How to handle errors and exceptions in your applications",
        "What are beautiful coding techniques",
        "Interactive programming techniques",
        "How to use coding techniques to make efficient development",
        "c sharp programming",
        "c sharp for beginners",
        "c sharp from scratch",
        "Develop unity 2D or unity 3D games ( unity c# )",
        "c# oop",
        "oop c#",
        "c# c# projects object oriented programming c# oop c# project object oriented programming c# oop c# c# intermadiate c# object oriented programming.",
        "c# object oriented oak academy c# programming object oriented oop c# oops object oriented c# c# intermediate: classes interfaces and oop.",
        "event driven programming object oriented programming in c# c sharp object oriented programming with c# oop in c# c# object intermediate c# c sharp projects.",
        "csharp c# interfaces event driven programming projects oak academy c# c# real projects c# interface oops c# oop project advance c# c# advance c# programming."
      ],
      "course_content": {},
      "requirements": [
        "A Windows or Mac for installing all the free software and tools needed to practice",
        "Visual Studio - You can use any version of Visual Studio",
        "You will need a computer with access to the internet",
        "Desire to learn OOP ( object oriented programming )",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Desire to learn c# projects",
        "LIFETIME ACCESS, course updates, new content, anytime, anywhere, on any device.",
        "No prior knowledge of C# ( C sharp ) is required",
        "Desire to learn c# oop",
        "No c# programming coding knowledge required!",
        "Desire to learn C # in Oak Academy"
      ],
      "description": "Hello there,\nWelcome to C# OOP: C# Object Oriented Programming on Real C# Projects course.\nLearn C# OOP with hands-on C# projects and dive in C# intermediate step by step guide to classes, interfaces and C# OOP\n\nWhether you’re using C# in conjunction with Xamarin Forms to build cross-platform apps, or designing a new video game in Unity with C#, Udemy has a course for you. Udemy hosts top-rated courses on everything from the fundamentals of C# programming to more advanced topics like databases and asynchronous programming.\n\nEven though C# is a language that’s relatively easy to learn and maintain, it isn’t just for beginners. Its scalability and large support community make C# the language of choice for Microsoft app developers and video game developers working with the Unity Engine. Like C++ and Java, C# is a high-level object-oriented programming language. It is generally more efficient than Java and has useful features such as operator overloading. C# is based on C++ but has several advantages over this older language: it is type-safe, more comprehensively object-oriented, and the syntax has been simplified in several important ways. Most importantly, C# interoperates exceptionally well with other languages on the .NET platform. For this reason, C# is a better choice for building applications for .NET.\n\nMost programmers will choose to learn the object oriented programming paradigm in a specific language. That’s why Udemy features a host of top-rated OOP courses tailored for specific languages, like Java, C#, and Python.\nObject-oriented programming (OOP) is a computer programming paradigm where a software application is developed by modeling real world objects into software modules called classes. Consider a simple point of sale system that keeps record of products purchased from whole-sale dealers and the products sold to the customer. An object-oriented language would implement these requirements by creating a Product class, a Customer class, a Dealer class and an Order class. All of these classes would interact together to deliver the required functionality where each class would be concerned with storing its own data and performing its own functions. This is the basic idea of object-oriented programming or also called OOP.\nWhat is C# ?\nC# (pronounced see-sharp) is a general-purpose, object-oriented programming language. It was designed as a multi-paradigm programming language by Microsoft in around 2000 as part of its .NET initiative. The .NET framework and .NET applications are multi-platform applications that you can use with programming languages such as C++, C#, Visual Basic, and COBOL. C# is open-source and was designed to be simple yet modern, flexible yet powerful and versatile yet easy to learn and program with. Many programming languages in the past were designed for specific purposes. C# was developed with business and enterprise needs in mind. By providing functionality to support modern-day software development such as web applications, mobile, and response app needs, C# supports many features of modern-day programming languages. That includes generics, var types.\n\nWhat are the advantages of c# over C++ ?\nThanks to the .NET framework, C# has many advantages over C++. C# is a refined and modernized version of C++. C++ was developed to bring object-orientation to C, an older but widely used language, and C++ became the de-facto language for building applications for Windows as well as infrastructure and low-level applications. Visual Basic was for business applications. What C# does is combine the rapid development capabilities of VB with the power of C++. C# also has many new data types, type-safety, to ensure you do not unknowingly reuse initialized variables. It uses a simplified syntax, a huge improvement over the complex coding often required in C++. C# also removes memory management issues thanks to .NET’s garbage collection scheme. You do not have to reference items for garbage collection; the system can reclaim that memory as required.\nWhy use encapsulation in C# ?\nEncapsulation can be used in C# to hide data and program behavior from users. With encapsulation, you can group properties, methods, and other members so that they are treated as a single object. It is a means to prevent the user of a given class from manipulating program objects in ways that were not intended by the designer or developer. Encapsulation hides how a program operates without affecting how it works while still allowing users to service requests for functionality and add or modify internal data or methods to meet changing needs. For example, suppose you have an object called “Patient” that contains patient-related data. In that case, you can use encapsulation to provision patient-specific data to those who need it without exposing all patient data. In addition to information hiding, you can use encapsulation in C# to improve your code's reusability.\n\nWhat is C# used for?\nC# is a general-purpose programming language that you can use to build a wide range of programs and applications, such as web applications, Windows applications and game development. In web application development, you can build dynamic websites and apps using .NET or another open-source platform of your choice. Also, since Microsoft created C# for Microsoft, C# is a popular language for building Windows applications. There are rich resources and a vibrant C# community that can support and documentation for applications and programs specific to Microsoft platform architectures, making it easier than ever to develop applications in this space. Finally, C# is a popular language to use in game-building, especially with Unity, a game engine that runs on C++ and C#.\nWhat is a constructor? What is a destructor?\nTo understand constructors and destructors, we need to understand methods. A method is a block of code that contains a series of statements. Programs run by executing methods. A constructor is a special method of a class that is automatically called whenever an instance of a given class is created. A constructor contains the instructions that execute when an object is created. Developers use it to assign specific initial values to the data members of the same class. In C#, you will get a compile-time error if you try to read from an uninitialized variable. You must first initialize your variables by giving them an initial value, which is what the constructor does. On the other hand, destructors are methods used to destroy instances of a class when they are no longer needed. Destructors are called implicitly by the garbage collector in .NET\nHow do I learn C#?\nAs is true for many skills, you can learn C# by taking Udemy courses, reading documentation, and practicing coding hands-on. There are many resources available for all of the above, including real-time compiler applications that will show you the output of your code as you type it. However, it is best to plan ahead, and you should have an outline of what you need to learn before beginning your journey. The first thing to learn about is what C# is, how and where it is used, and why it was developed. From there, you can learn about data types, variables, keywords, and functions. Once you’ve grasped the basics, you can move on to learning about conditional tests and operators, functions, arguments, object orientation, arrays, strings, classes, methods, structs, debugging, and exception handling.\n\nObject-oriented programming is the foundation of many current application development approaches. Interfaces and principles of object-oriented programming are crucial. It does not important whether you want to use C# to build web apps, mobile apps,  games or understanding C# classes if you want to succeed with clean coding, agile and design patterns, you have to master OOP.\nIn this course, we use interactive programming techniques; which means we will be building applications together and furthermore there will be lots of home-works to be done, of course, followed by answers. There will be lots of tips and tricks regarding beautiful and efficient coding techniques.\nThat`s why you are at a great place to start with OOP with C#\nAll my students will have a chance to learn not only the whats but also learn the whys and hows.\nWhat you will learn?\nIntroduction to Object-Oriented Programming\nClass Structure in Detail\nWindows Forms Applications\nSystem Input Output\nClass Hierarchies\nEvent-Driven Programming\nException Handling\nTips and Tricks\nc#\nc# .net\nunity c#\nc# unity\nc sharp\nc sharp programming\nselenium webdriver with c sharp\nselenium with c sharp\nc sharp for beginners\nselenium c sharp\nc sharp from scratch\nunity\nunity 2d\nunity 3d\nc sharp\noop\nc# oop\noop c#\nc# intermediate: classes, interfaces and oop\nc# oops\noops c#\noops in c#\noop in c#\noops concepts c#\nc# c# projects object oriented programming c# oop c# project object oriented programming c# oop c# c# intermadiate c# object oriented programming c# object oriented oak academy c# programming object oriented oop c# oops object oriented c# c# intermediate: classes interfaces and oop event driven programming object oriented programming in c# c sharp object oriented programming with c# oop in c# c# object intermediate c# c sharp projects csharp c# interfaces event driven programming projects oak academy c# c# real projects c# interface oops c# oop project advance c# c# advance c# programming projects oop with c# project c#\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nWhen you enroll, you will feel the OAK Academy`s seasoned instructors' expertise.\nNo prior knowledge is needed!\nIt doesn't need any prior knowledge to learn OOP.\nThis course starts with the very basics. First, you will learn some terminology. Then the show will start and you will learn everything with hands-on practices.  I'll also teach you the best practices and shortcuts.\nStep-by-Step Way, Simple and Easy With Exercises\nBy the end of the course, you’ll have a firm understanding of the OOP with C# and hungry to learn more.\nVideo and Audio Production Quality\nAll our videos are created/produced as high-quality video and audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in C# OOP: C# Object Oriented Programming on Real C# Projects now!\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Anyone who wants to learn how to code with C# programming language, regardless of their current level",
        "Anyone who wants to improve their c# oop programming skills",
        "Anyone who wants to build object oriented and / or windows forms applications",
        "Anyone who is interested in developing software with a design pattern",
        "Anyone who wants to understand the elements of full-stack software development",
        "Anyone who wants to develop .NET applications",
        "People who are willing to make a career in the corperate world",
        "Newbies or students looking for a refresher on the basics of C# and OOP",
        "People who wants to understand the Unity better",
        "People who wants to develop unity 2D or unity 3D games",
        "People who wants to learn C#",
        "People who wants to read and write C# projects"
      ]
    },
    {
      "title": "Parsing Algorithms",
      "url": "https://www.udemy.com/course/essentials-of-parsing/",
      "bio": "Theory and practice of syntactic analysis",
      "objectives": [
        "Context-free grammars",
        "Abstract Syntax Trees",
        "Parser generators",
        "Build a full parser from scratch using parser generator",
        "Top-down LL parsers",
        "Bottom-up LR parsers",
        "Backtracking parsers",
        "Left-recursion and Left-factoring",
        "Predictive recursive descent parsers",
        "LL(1), LR(0), SLR(1), CLR(1), LALR(1) parsers",
        "Shift-reduce algorithm",
        "Syntax tool: language-agnostic parser generator"
      ],
      "course_content": {
        "Context-free grammars and languages": [
          "Formal grammars, context-free",
          "Grammar derivations",
          "Ambiguous grammars",
          "Syntax tool | Letter",
          "Abstract Syntax Trees"
        ],
        "Top-down LL parsing": [
          "Backtracking parser",
          "Left-recursion and Left-factoring",
          "Predictive Recursive descent parser",
          "LL(1) parsing: First & Follow sets",
          "Construction of LL(1) parsing table",
          "LL(1) parsing algorithm"
        ],
        "Bottom-up LR parsing": [
          "Back to practice: Statements | Blocks",
          "Function Declarations",
          "LR parsing: Canonical Collection of LR-items",
          "LR parsing table: LR(0) and SLR(1)",
          "CLR(1) and LALR(1) parsing tables",
          "LR(1) parsing algorithm"
        ],
        "Practice and final parser": [
          "Control structures: If-statement",
          "Variables | Assignment",
          "Function calls | Unary expression",
          "Member expression | Iteration",
          "OOP | Final parser"
        ]
      },
      "requirements": [
        "Basic data structures and algorithms",
        "Trees, graphs, traversal",
        "Interest in programming languages"
      ],
      "description": "Course overview\nParsing or syntactic analysis is one of the first stages in designing and implementing a compiler. A well-designed syntax of your programming language is a big motivation why users would prefer and choose exactly your language.\n----------------------------------------------------------\nThe problem with “parsers theory” in classic compiler schools and books is that this theory is often considered as “too advanced”, going right into complicated formal descriptions from the Theory of Computation and formal grammars. As a result students may lose an interest in building a compiler already at parsing stage.\nThe opposite problem often seen in describing a parser is a superficial approach describing only manual (usually recursive descent) parsing, leaving the students with issues understanding the actual techniques behind the automated parsers.\n----------------------------------------------------------\nI believe this deep dive into the parsing theory should be combined together with a hands-on approach, which goes in parallel and allows seeing all the learned theoretical material on practice.\nIn the Essentials of Parsing (aka Parsing Algorithms) class we dive into different aspects of the parsing theory, describing in detail the LL and LR parsers. However at the same time to make the learning process and understanding easy and fun, we build in parallel an automatic parser for a full programming language, similar to JavaScript or Python, from scratch.\nAfter this class not only you will be able to use a parser generator to build parsers for programming languages, but will also understand how the parser generators work under the hood themselves.\nImplementing a parser for a programing language would also make your practical usage of other programming languages more professional.\n\n\nWho this class is for?\nThis class is for any curious engineer, who would like to gain skills of building complex systems (and building a parser for a programing language is a pretty advanced engineering task!), and obtain a transferable knowledge for building such systems.\nIf you are interested specifically in compilers, interpreters, and source code transformation tools, then this class is also for you.\nThe only pre-requisite for this class is basic data structures and algorithms: trees, lists, traversal.\n\n\nWhat is used for implementation?\nSince we build a language very similar in semantics to JavaScript or Python (the two most popular programming languages today) we use specifically JavaScript — its elegant multi-paradigm structure which combines functional programming, class-based, and prototype-based OOP fits ideal for that.\nMany engineers are familiar with JavaScript so it should be easier to start coding right away. To generate the automated parser we use Syntax tool which is a language-agnostic parser generator, and supports plugins for Python, Ruby, C#, PHP, Java, Rust, etc. That is, the implementation of this parser can easily be transferred to any other language of your choice and taste.\nNote: we want our students to actually follow, understand and implement every detail of the parser themselves, instead of just copy-pasting from final solution. The full source code for the language is available in video lectures, showing and guiding how to structure specific modules.\n\n\nWhat’s specific in this class?\nThe main features of these lectures are:\nConcise and straight to the point. Each lecture is self-sufficient, concise, and describes information directly related to the topic, not distracting on unrelated materials or talks.\nAnimated presentation combined with live-editing notes. This makes understanding of the topics easier, and shows how (and when at time) the object structures are connected. Static slides simply don’t work for a complex content.\nLive coding session end-to-end with assignments. The full source code, starting from scratch, and up to the very end is presented in video lectures of the class\n\n\nWhat is in the course?\nThe course is divided into four parts, in total of 22 lectures, and many sub-topics in each lecture. Below is the table of contents and curriculum.\n\n\nPart 1: Context-free grammars and languages\nIn this part we describe different parsing pipelines, talk about formal grammars, derivations, what is ambiguous and unambitious grammar, and start building our programming language.\n\nPart 2: Top-down LL parsing\nIn this part we talk in detail about Top-down parsing, describing manual recursive and backtracking parser, and also dive into the LL(1) parsing algorithm.\n\nPart 3: Bottom-up LR parsing\nIn this part we describe Bottom-up parsers and LR parsing algorithm. In parallel we continue building our programming language, analyzing shift-reduce conflicts and fixing them.\n\nPart 4: Practice and final parser\nThe final part of the course is completely practical, we’re finishing our Letter programming language, building variables, functions, loops, control structures, object-oriented programming, and the final parser.",
      "target_audience": [
        "Any curious engineers",
        "Compiler engineers"
      ]
    },
    {
      "title": "Python Crash Course: Gain Real World Developer Skills Now!",
      "url": "https://www.udemy.com/course/python-crash-programming-course/",
      "bio": "Become a Python Developer able to create professional Python scripts, dramatically increasing your career options.",
      "objectives": [
        "Learn the core Python skills needed to apply for Python developer positions in just 15 hours.",
        "Have a fundamental understanding of the Python programming language.",
        "Understand how to create your own Python programs.",
        "Have the skills and understanding of Python to confidently apply for Python programming jobs.",
        "Be able to demonstrate industry best practices in the Python code you write.",
        "Obtain a solid understanding of what debugging and refactoring is and how to do it."
      ],
      "course_content": {
        "Introduction and setup": [
          "Course Introduction",
          "What is Python",
          "Getting the Software Tools",
          "6 Month Free Trial of IntelliJ Ultimate Edition - Please Read",
          "Installing Python on Windows",
          "Installing Python on Mac",
          "Python and Virtual environments",
          "Installing Pycharm on Mac, Windows and Linux",
          "Creating your First Pycharm Project",
          "Structure of a Python Program",
          "Dot Notation",
          "Running Eliza",
          "Introduction to the Python language",
          "Introduction and setup Summary"
        ],
        "Starting to code": [
          "Introduction",
          "Variables",
          "Variables and None",
          "Why use Variables?",
          "Challenge",
          "Naming convention",
          "Naming convention challenge",
          "Challenge solution",
          "Summary"
        ],
        "Writing to and reading from the console": [
          "Introduction",
          "Console input with input() function",
          "Reading Input in the Hammurabi game",
          "Console input Text and Numbers",
          "Reading numbers in Hammurabi",
          "Console output and string interpolation",
          "String interpolation alignment",
          "Summary"
        ],
        "Python types and expressions": [
          "Introduction",
          "Primitive types",
          "int type",
          "Floating point types- Float",
          "Expressions",
          "Boolean expressions",
          "Compound boolean expressions",
          "Boolean variables",
          "Booleans in the HammerBitcoin program",
          "Solution to Boolean Expression challenge",
          "Classes and Objects",
          "Class instances",
          "Attributes",
          "Class Constructors",
          "Modules and Namespaces in Python",
          "__name__ in Python",
          "Public and non public members",
          "Name mangling in Python",
          "Summary"
        ],
        "Flow Control: for and while": [
          "Introduction to Flow Control",
          "The Python Language Documentation",
          "for loops",
          "The Pycharm Debugger",
          "More for loops",
          "Nested for loops",
          "Using the Debugger with HammerBitcoin",
          "While loops",
          "Challenge solution",
          "Which way is better",
          "while loops in ElizaIsSilly",
          "Understanding more about Eliza",
          "More on while loops and pass statement",
          "Summary"
        ],
        "Flow control: if/else, break, continue": [
          "Introduction",
          "if statement",
          "elif and else",
          "More if and else",
          "if-else challenge",
          "Challenge solution",
          "Solution to the Play again challenge",
          "break",
          "continue",
          "scope of break and continue",
          "The ternary conditional operator",
          "The ternary conditional operator in HammerBitcoin",
          "Challenge solution",
          "Summary"
        ],
        "Flow control: Methods": [
          "Introduction",
          "Calling methods",
          "Methods calling methods",
          "Method parameters",
          "Solution to parameter challenge",
          "Solution to Brake challenge",
          "Simple car game",
          "public and private methods",
          "Functions vs Methods",
          "Returning a result from a function",
          "Duplicating code is bad",
          "Refactoring to remove duplicate code",
          "Passing by value",
          "Global variables",
          "Refactoring challenge",
          "Challenge solution",
          "Variable scope",
          "Preventing update of instance attributes",
          "Scope summary and challenge",
          "Solution to challenge",
          "Solution continued",
          "Summary"
        ],
        "Operators": [
          "Introduction",
          "Operators and operator precedence",
          "Primary operators",
          "Operator precedence",
          "Using the remainder operator",
          "Remainder in Rock, Paper, Scissors",
          "Comparison and Logical operators",
          "Short-circuit evaluation",
          "Assignment Operators",
          "Membership Operators",
          "Summary"
        ],
        "Strings": [
          "Introduction",
          "What is a string",
          "Indexing",
          "String Slicing",
          "String Slicing and Iterating through strings",
          "String Length",
          "find() and substrings",
          "Case insensitive find()",
          "method chaining",
          "rfind() and repeated matches",
          "Python String methods",
          "Strings are immutable",
          "Concatenating and deleting a string",
          "Different forms of find()",
          "Summary"
        ],
        "Classes": [
          "OOP and Classes",
          "Setting up the Airport",
          "Class Diagrams",
          "Class Attributes",
          "constructors and data attribute",
          "properties, getters and setters",
          "Why use properties",
          "The Single Responsibility Principle",
          "More about properties, getters and setters"
        ]
      },
      "requirements": [
        "A computer running Windows, Mac OS, or Linux so that the free tools for writing Python code can be installed and used in the course (video instructions for each platform is included).",
        "An open mind to learn something new and exciting which may make a huge difference in your future career."
      ],
      "description": "If you want to learn to program in Python in far less time than you previously thought possible then read on.\nThe world today is a hectic place.  Most of us have very little spare time. Once we have worked (or studied), slept, spent some time with friends and family there is little time left to think about a career.\nIn order to become a software developer you need programming skills.  But how can you get those skills in the minimum amount of time and still have a life along the way?\nThis course was designed to teach you the essential Python programming skills you need to get your first programming job, or perhaps a promotion to a more senior position.  And to do it in the shortest possible amount of time.\n\nDo I need to learn 100% of the Python language?\nNo!  To understand how this course can help you, there is a need to understand how programming languages are constructed.  The creators of these languages try and add every single feature they think someone might need, ever.\n\nA large part of the language rarely gets used, and sometimes not at all.  It's the same with software.  If you have used a spreadsheet in the past, I'd lay odds that you use it for basic spreadsheet work, and you rarely, if ever go into some of the advanced functionality.  The basic functions of the spreadsheet are what most people use.\nImagine if you had to learn every feature of the spreadsheet program?  How long would it take, and would most of that information be useful to you?  Especially if you were learning it to get a job and that job only required basic spreadsheet skills.\nSwitching back to programming, if your goal is to get your first programming job, then why not only learn what you need to achieve that goal.  And worry about the other stuff if and when you need it.\nThat's what this course is all about - giving you the skills you need quickly without any fluff or useless information.\n\nThe course is aimed at complete beginners.\nWe assume you have never programmed before in this course and start from scratch and show you step by step how to download and install the tools, through to writing your first programs, and from there we move to more and more of parts of the Python language that you need to understand.\nIf you are already a programmer, you will still find value in this course - It's very common for programmers to want to learn a second or third programming language, and doing so makes you more valuable and opens up career opportunities.\nAs this is a crash course you can get skilled in Python, fast.\nHere is what a student said about another of the instructors courses.\n\"This course is very good, the instructor makes the learning process easy for a beginner in Django like me, highly recommend this course.\" - Steven Fraser.\n\nWhat version of Python will I learn?\nAll videos in the course have been recorded using the very latest version.  Python 3.  It's recommended that you follow along with that version, but if you have an older version most of the course should work just fine.\nKeep in mind there are constant updates to Python.  So if you see a newer version when you are installing it, then use that version.\n\nWhat will you learn in the course?\nYou'll learn the essential Python skills needed to become employable as a Python developer.\nCreating a Python basic program\nAll about the setting up and running Python programs\nData Types, Variables, Conditional Processing, Loops, Classes, Operators, Expressions - all the good stuff.\nCheck out the curriculum on this page for a list of what is covered in the course.\nIn the course you will work with a lot of Python example code.  You will start with Python code that was badly written.  You'll see why it's bad, and then as you progress through the course, you will improve it and make the code bug free.\n\nThis approach, along with smaller snippers of code will help you become a programmer as well as think as a programmer.  And as a result you will learn how to get the most out of Python.\nWhat about course updates?\nThe course will get regular updates - We already have a document in the course that outlines what content is still to be added - We envisage it will be around twenty hours once done.\n\nWhat about the instructors?\nYour instructor Faisal has over 12+ years of experience building global products being used by millions of users across the globe. He loves technology and teaching it.\nCurrently, Faisal is heading Product at one of the fast-paced startups in India and enjoying every moment of it. Prior to his, he built out a couple of startups that had over half a million users across the globe, raised funding from Google + other investors, and was part of Google Launchpad Accelerator. He has experience building products from scratch and scaling to global users.\n\nHere is another comment from a student in one of Faisal's Udemy courses.\n\"I'm currently in a Full Stack Program and this course is breaking down Java in a simple way for me to understand. This course has helped me tremendously with my vocabulary and comprehension\" - Robert Y.\nWhat about if you have questions?\nAs if this course wasn’t complete enough, Faisal offers  full support, answering any questions you have 7 days a week (whereas many instructors answer just once per week, or not at all).\nThis means you’ll never find yourself stuck on one lesson for days on end. With his hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\nStudent Quote: \"i am a java new professional. learned a lot from these videos. The topics in this videos cover most of the critical and small things that are really strengthens the foundation but generally i feel many trainers neglect these or don' throw enough light on these things due to time or other constraints......very much happy with the learnings from this course.....very much helpful for a new java programmer....” - Ashokchakravarthy R.\n\nThere’s no risk either!\nThis course comes with a full 30 day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, simply let the instructors know and they will refund you 100%, every last penny no questions asked.\nYou either end up with Python skills, go on to develop great programs and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\nYou literally can’t lose.\nReady to get started, developer?\nEnrol now using the “Add to Cart” button on the right, and get started on your way to a career as a Python Programmer.  You can also check out some of the course using the preview feature on this page, so you’re 100% certain this course is for you.\nSee you on the inside (hurry, the Python class is waiting!)",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous programming experience.",
        "Existing programmers who know Java, C#, JavaScript, or other languages who want to become skilled in Python.",
        "Anyone wanting to brush up on their skills and learn with the latest version of Python - version 3."
      ]
    },
    {
      "title": "Advanced React 2023 (Performance & Best Practices)",
      "url": "https://www.udemy.com/course/advanced-react-render-performance-best-practices-patterns/",
      "bio": "2023 Advanced Reactjs - Theory, React Patterns, Industry Best Practices, Performance, Render Issues, Hooks, Core",
      "objectives": [
        "High Quality Web Applications",
        "Best Practices used by Advanced Programmers",
        "React Redux Saga Pattern",
        "Bundle Splitting & Lazy Loading",
        "Software Engineering Principles",
        "Webpack & Babel",
        "Working with Themes",
        "Focusing on Application Performance for Better UX",
        "Rendering Performance",
        "React Core Concepts"
      ],
      "course_content": {},
      "requirements": [
        "Javascript basic knowledge",
        "Reactjs basic knowledge",
        "Class Components, state & render basic knowledge",
        "Nodejs Installed",
        "npm v5.2+ installed",
        "Git installed"
      ],
      "description": "Are you an intermediate or advanced web developer looking to take your React skills to the next level?\nLook no further than our comprehensive course on Advanced React & Web Development.\nIn this course, you will learn advanced techniques for building robust, scalable web applications using React, Redux, and more. We'll dive deep into the core principles of React and explore how to optimize performance, manage complex states, and create reusable components that can be easily shared across projects.\nBut that's just the beginning. We'll also cover a wide range of topics that are essential for any advanced web developer, including:\nMaster the best PRACTICES used in the industry\nServer-side rendering and performance optimization\nAPI integration with React\nAuthentication and authorization using JSON Web Tokens (JWT)\nTesting, debugging, and performance profiling\nMaster React CORE concepts\nThroughout the course, you'll have access to hands-on exercises and real-world projects that will challenge you and reinforce what you've learned. You'll also have access to a supportive community of fellow learners and instructors who are passionate about helping you succeed.\nBy the end of this course, you'll have a deep understanding of advanced React and web development concepts, as well as the skills and confidence to build robust, scalable applications that meet the needs of even the most demanding users. Enroll today and take your React skills to the next level!\nThis course is UP-TO-DATE with the latest React version 18+\nThis course is UP-TO-DATE with the latest ES2020 version\n\n\nThis IS NOT FOR YOU if you just want to build some nice and good-looking application.\nIf you passed this level of building nice and good-looking applications and want to focus on best practices and performance so this course is for you.\nThis course contains a lot of theoretical materials and diagrams for deeper understanding.\n\n\nAt the end of the course you will be able to:\n1. Write high quality React components\n2. Master React CORE concepts\n3. Build applications with high PERFORMANCE\n4. Write React applications with Patterns\n5. Know the What? Why? & How?\n6. Master the best PRACTICES used in the industry\n7. Build Powerful, Scalable, Fast & Maintainable Web Applications\n\n\nWho is this course for:\n1. React Developers who want to sharpen their skills\n2. React Developers who want to become advanced/expert developers\n3. Developers who seek how to write high-quality code\n4.  Developers who seek to acquire best practices\n5.  Developers who want to learn about application performance\n6. Developers who want to learn not only the technical stuff but also the important theory behind\n7. React developers who want to learn about lazy loading\n7. React developers who want to learn about software principles\n\n\nPrerequisites:\n1. Basic React knowledge, like components, state, props, render MUST\n2. HTML, JSX, JavaScript MUST\n3. Redux-Saga Optional\n\n\nThis course includes:\n1. Redux overview\n2. Redux-saga overview\n3. Software principles in web application\n4. Bundle Splitting\n5. Lazy Loading\n6. Anti-Patterns & Bad Practices to avoid\n7. Render Performance\n8. Why rendered\n9. Avoid Reconciliation\n10. React Core Concepts\n11. Routing\n12. Styling with Themes\n13. Material-UI\n14. ES2020\n15. Design Pattern\n16. Files Generators\n17. High Quality boilerplate\n18. Data Flow Diagrams for deep understanding\n19. DevTools",
      "target_audience": [
        "Begginer Developers who week to learn Advanced Concepts",
        "Experienced Developers who seek to improve their skills",
        "Developers who seek to improve their applications performance",
        "Developers who seek to learn about the process of building applications and getting ready for deployment"
      ]
    },
    {
      "title": "Intermediate Python: Memory, Decorator, Async, Cython & more",
      "url": "https://www.udemy.com/course/intermediate-python-memory-decorator-async-cython-more/",
      "bio": "Stand out from the mass. Become a Python expert and understand what the CPython API, PyBind11 and more is.",
      "objectives": [
        "Memory management of variables in Python (Mutability)",
        "The correct use of sequences and iterables",
        "Functions, Decorators, Lambdas etc.",
        "Object orientation and inheritance",
        "The integration of Cython code",
        "Using the Python C API",
        "Async and Parallel Code"
      ],
      "course_content": {},
      "requirements": [
        "The basics of Python programming (variables, lists, dicts, classes etc.)",
        "Experience in using the terminal"
      ],
      "description": "The course was updated and covers topics from Python Version 3.12!\nCourse Description:\nThe course covers intermediate to advanced Python programming techniques.\nThis means that the course is not aimed at programming beginners.\nThis course is compact, instructive, and useful. You learn not only how to use Python well, but also more abstract concepts that are transferable to other languages, as well as how to create a good programming environment.\nPrerequisites:\nCreating and using variables\nIf-statements, loops and logical expressions\nImplementing your own functions and classes\nImporting from external packages\nIn the course we will use Visual Studio Code (VSCode) as the IDE which is free for all operating systems.\nI assume that you have already Python 3.8 or newer on your system, if not you could install it via Anaconda for example.\nThis course consists of the following topics:\nMemory management of variables in Python\nMutable and Immutable Types\nShallow and Deep Copies\nThe correct use of containers (list, dict, set etc.)\nf-Strings formatting\nFunctions and Decorators\nargs and kwargs Arguments\nObject orientation and inheritance\nSpecial Dunder Methods\nDataclass, Enum and NamedTuple\nThe integration of Cython\nUsing the Python C API (CPython)\nUsing PyBind11 (introductory example)\nUsing Numba and Mypyc\nUsing multiprocessing and multithreading\nGlobal Interpreter Lock (GIL) in Python\nUsing asynchronous programming\n\n\nBecome a pro today, in the technology of tomorrow!\nSee you in class!\n\n\n\n\nNote:\nIn the course, Python is installed via Anaconda. If this is not possible for you, you can also install Python from other sources.",
      "target_audience": [
        "Python developer with basic knowledge"
      ]
    },
    {
      "title": "Object Oriented Programming (OOP) Practice Tests - Basic/Adv",
      "url": "https://www.udemy.com/course/object-oriented-programming-oop-practice-tests-basic-advanced/",
      "bio": "Best Learning Material and Practice Question set on Object Oriented Programming Concepts - OOPS.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Welcome to the exciting world of Object-Oriented Programming! This Udemy course is designed to help you master the fundamentals of OOP through a series of multiple choice questions and practice tests. Whether you're a beginner or an experienced programmer looking to refresh your skills, this course is perfect for anyone who wants to take their coding abilities to the next level.\nAs you work through the course, you'll gain a deep understanding of the principles and techniques that underpin OOP. You'll learn how to use classes, objects, and methods to create powerful, modular code that's easy to read, maintain, and extend. You'll also discover how to use inheritance, polymorphism, and other advanced OOP concepts to build complex programs and solve real-world problems.\nBut this course isn't just about theory - it's also designed to help you prepare for interviews and other job opportunities. That's why each section includes a series of practice tests that simulate the types of questions you might encounter in an interview. You'll get hands-on experience answering multiple choice questions and solving problems, so you'll be ready to ace any technical interview.\nEnrolling in this course is the perfect way to invest in your future. Whether you're looking to improve your coding skills, prepare for interviews, or just explore the exciting world of Object-Oriented Programming, this course has everything you need to succeed. So why wait? Sign up now and start your journey to becoming an OOP expert today!",
      "target_audience": [
        "Students in their graduate / postgraduate learning basics of computer science",
        "Professionals working on Software Development following OOP daily",
        "Interview seekers for software engineer role in dream companies"
      ]
    },
    {
      "title": "Salesforce Lightning Report and Dashboard",
      "url": "https://www.udemy.com/course/salesforce-report-and-dashboard/",
      "bio": "Learn Salesforce Report Builder and Dashboards in the salesforce classic and lightning interface.",
      "objectives": [
        "Fundamentals of Salesforce Reports and Dashboards",
        "Salesforce Lightning Experience",
        "Navigating to reports and dashboards",
        "Reports / Dashboards tab and menu",
        "Types of report format",
        "The Tabular report format",
        "The Summary report format",
        "The Matrix report format",
        "The Joined report format",
        "Working with report filters",
        "Field filter",
        "The Filter Logic",
        "The Cross Filter",
        "The Row Limit filter",
        "Filtering by Role Hierarchy",
        "Filtering by Relative Date",
        "Filtering by clicking on a chart",
        "The Lock Filter",
        "Understanding Report Types",
        "Report type categories",
        "Standard Report Type",
        "Custom Report type",
        "Adding Charts in Reports and Pages",
        "Types of charts in reports",
        "The Horizontal Bar chart",
        "The Vertical Bar chart",
        "The Stacked Horizontal Bar chart",
        "The Stacked Vertical Bar chart",
        "The Line chart",
        "The Donut chart",
        "The Funnel chart",
        "The Scatter chart",
        "Embedding a report chart in an object page",
        "Opening a report",
        "The Reports tab",
        "The Reports menu",
        "The Folders menu",
        "adding an item to favorites",
        "Subscribe to Reports: Add Recipients",
        "Subscribe to Reports: Set Running User",
        "Building Dashboards in Lightning Experience",
        "Dynamic dashboards",
        "The Dashboards tab",
        "Navigating to a dashboard",
        "Dragging and dropping in the Dashboard Builder",
        "Refreshing dashboards",
        "Scheduling a dashboard refresh",
        "Creating your dashboard",
        "The dashboard components",
        "dashboard filters",
        "Dashboards and reports drill down",
        "Report dashboard from app exchange",
        "Advanced Tips and Tricks for Reports and Dashboards",
        "Dashboards and Reports in the Salesforce1 Mobile App",
        "The report and dashboard folder",
        "Export reports",
        "Creating and customizing dashboards permission",
        "Run reports permission",
        "Manage dynamic dashboards permission",
        "View My Team's Dashboards permission",
        "Schedule dashboards",
        "Securing private reports and dashboards",
        "Using Unfiled Public Reports",
        "Using public reports and dashboards",
        "Report folder permissions",
        "Dashboard folder permissions"
      ],
      "course_content": {
        "What is Salesforce and Why is it a CRM application?": [
          "What is Salesforce and Why is it a CRM application?"
        ],
        "Setting up Lifetime free salesforce Developer Account": [
          "Setting up Lifetime free salesforce Developer Account"
        ],
        "Navigate to Report and Dashboard Tab": [
          "Navigate to Report and Dashboard Tab"
        ],
        "Different types of Report Format use in salesforce": [
          "Different types of Report Format use in salesforce"
        ],
        "Bonus Lecture": [
          "Other Courses you might be interested"
        ],
        "What is Tabular Format and when to use it?": [
          "What is Tabular Format and when to use it?",
          "Scenario-Create Tabular Report from scratch",
          "Scenario-Create Tabular Report from scratch continued"
        ],
        "What is Summary Report and why to use in salesforce?": [
          "What is Summary Report and why to use in salesforce?",
          "Scenario-Create Summary Report from scratch"
        ],
        "What is Matrix Report and when to use it?": [
          "What is Matrix Report and when to use it?",
          "Scenario-Create Matrix report from scratch",
          "Scenario-Create Matrix report with adding summary field"
        ],
        "What is Joined report and why to use it?": [
          "What is Joined report and why to use it?",
          "Scenario-Create Joined report from scratch"
        ],
        "What is Field Filter and how to use Filter logic?": [
          "What is Field Filter and how to use Filter logic?",
          "Scenario- Use field filter logic example"
        ]
      },
      "requirements": [
        "salesforce Admin",
        "designed from scratch to advance level to mastery in salesforce report and dashboard"
      ],
      "description": "This is one unique course that covers both classic and lightning reports & dashboards.\nThe \"Salesforce Lightning Report and Dashboard\" course is designed to provide participants with an in-depth understanding of how to leverage Salesforce's powerful reporting and dashboard tools within the Lightning Experience. This course is ideal for Salesforce administrators, business analysts, and anyone responsible for generating and analyzing data-driven insights within their organization.\nThroughout this course, participants will learn how to create, customize, and manage reports and dashboards to meet various business needs. The curriculum covers the fundamentals of Salesforce reports, including the different types of reports, report formats, and how to use filters and groupings to organize data effectively. Participants will also explore advanced reporting features such as cross filters, joined reports, and custom report types.\nIn addition to reports, the course delves into the creation and customization of dashboards. Participants will learn how to design visually appealing and informative dashboards that provide real-time insights into key performance indicators (KPIs) and business metrics. The course will cover best practices for selecting the right dashboard components, setting up dynamic dashboards, and sharing dashboards with different user groups.\nHands-on exercises and real-world scenarios will be used throughout the course to reinforce learning and ensure participants can apply their new skills in practical situations. By the end of the course, participants will be equipped with the knowledge and skills to create powerful reports and dashboards that drive informed decision-making and enhance business performance.\nThis course designed from scratch with taking care each and every concept to make you mastery in report & dashboard.  Every thing discussed with live implementation of multiple scenarios covering from basic to advanced levels.\nThis course includes important topics such as the use of reports and dashboards, AppExchange, and Security and access applications, and many more.\nMost importantly, I will work with you throughout this course journey to support you till you become a master in Salesforce reports and dashboards.",
      "target_audience": [
        "salesforce",
        "salesforce manager",
        "salesforc adminstrator",
        "salesforce consultant",
        "salesforce architet",
        "salesforce developer",
        "business analyst"
      ]
    },
    {
      "title": "QGIS and Google Earth Engine Python API for Spatial Analysis",
      "url": "https://www.udemy.com/course/python-for-spatial-data-analysis-with-earth-engine-and-qgis/",
      "bio": "Harness the power of big spatial data with Earth Engine Python API and QGIS",
      "objectives": [
        "Students will access and sign up the Google Earth Engine Python API platform",
        "Download, and install QGIS",
        "Access satellite data in Earth Engine",
        "Export geospatial Data",
        "Access image collections",
        "Learn to access and analyze various satellite data including, MODIS, Sentinel and Landsat",
        "Cloud masking of Landsat images",
        "Visualize time series images",
        "Extract information from satellite data"
      ],
      "course_content": {
        "Introduction to Earth Engine Python API": [
          "Welcome",
          "Sign Up on Earth Engine",
          "Install Earth Engine Plugin in QGIS",
          "Load Landsat Images",
          "Calculate NDVI",
          "Map Image Collection",
          "Landsat Cloud Mask"
        ],
        "Geospatial Data Visualization": [
          "Earth Observation Satellites",
          "Landsat Visualization",
          "MODIS Land Cover Visualization",
          "NLCD Land Cover Visualization",
          "NDVI Visualization",
          "NDWI Visualization",
          "Terrain Visualization"
        ],
        "Access Raster Data Using Earth Engine Python API": [
          "Sentinel",
          "CHIRPS",
          "VIIRS Nighttime Light",
          "MODIS NDVI"
        ],
        "Images in Earth Engine Python API": [
          "Download",
          "Clipping",
          "Image Metadata"
        ],
        "Machine Learning in Earth Engine Python API": [
          "Clustering",
          "CART Classification"
        ],
        "Advanced Algorithms": [
          "Spectral Unmixing",
          "Linear Regression",
          "Object-based Detection",
          "SMAP Soil Moisture"
        ],
        "Final Project": [
          "Final Project"
        ],
        "Bonus Lectures": [
          "Bonus"
        ]
      },
      "requirements": [
        "This course has no requirements."
      ],
      "description": "Do you want to access satellite sensors using Earth Engine Python API?\nDo you want to learn the QGIS Earth Engine plugin?\nDo you want to visualize and analyze satellite data in Python?\n\n\nEnroll in my new QGIS and Google Earth Engine Python API for Spatial Analysis course.\n\n\nI will provide you with hands-on training with example data, sample scripts, and real-world applications. By taking this course, you be able to install QGIS and Earth Engine plugins. Then, you will have access to satellite data using the Python API.\n\n\nIn this QGIS and Google Earth Engine Python API for Spatial Analysis course, I will help you get up and running on the Earth Engine Python API and QGIS. By the end of this course, you will have access to all example scripts and data such that you will be able to access, download, visualize big data, and extract information.\n\n\nIn this course, we will cover the following topics:\nIntroduction to Earth Engine Python API\nInstall the QGIS Earth Engine Plugin\nLoad Landsat Satellite Data\nCloud Masking Algorithm\nCalculate NDVI\nAccess Sentinel, Landsat, MODIS, CHIRPS, and VIIRS data\nExport images and videos\nProcess image collections\nCART classification\nClustering analysis\nLinear regression\nGlobal Land Cover Products (NLCD, and MODIS Land Cover)\nOne of the common problems with learning image processing is the high cost of software. In this course, I entirely use the Google Earth Engine Python API and QGIS open-source tools. All sample data and scripts will be provided to you as an added bonus throughout the course.\n\n\nJump in right now to enroll. To get started click the enroll button.",
      "target_audience": [
        "This course is meant for professionals who want to harness the power Google Earth Engine Python API and QGIS",
        "People who want to understand various satellite image processing techniques using Python",
        "Anyone who wants to learn accessing visualizing and extracting information from satellites",
        "People who are working with satellite remote sensing data such as Landsat, MODIS, and Sentinel-2",
        "Anyone who wants to apply for GIS or Remote Sensing Specialist job position"
      ]
    },
    {
      "title": "Python 3 Masterclass step by step with coding exercises.",
      "url": "https://www.udemy.com/course/learn-python-3-step-by-step/",
      "bio": "Learn Python 3 from basics to advance level-hands on with Coding Exercises-become a Python pro in a week.",
      "objectives": [
        "Complete command over Python language.",
        "Basics of Python",
        "Control structures - loops, if-elif-else, break, continue",
        "Writing functions in Python, understanding Parameters",
        "string",
        "List",
        "Set",
        "Dictionary",
        "tuple",
        "random module",
        "Exception handling using try-except block.",
        "Command line arguments",
        "File handling in detail including reading and writing of csv files using csv module",
        "Class, Objects, magic methods."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Downloading and Installing of required software": [
          "Install Anaconda for Windows.",
          "Installing Anaconda for Mac OS.",
          "Learn how you can use Python IDLE for writing and executing your Python script.",
          "Write Python in text editor and execute from terminal.",
          "Using PyCharm - See how you can download install and use PyCharm IDE for Python.",
          "How to use Spyder IDE - inbuilt within Anaconda, no need to download.",
          "How to use Jupyter notebook for writing and executing Python script."
        ],
        "Basics you always need to know - Do not skip this section if you are novice.": [
          "How to print string into console - the one and only Python 3 print function.",
          "Print \"Hello, World!\" using print function - Your first coding exercise.",
          "Variables in Python - names are just references, don't miss this concept.",
          "Variable declaration",
          "Rules for providing name for variables.",
          "Difference between a \"Program\" and \"Script\".",
          "Strings are everywhere - Understand the basics of Python string.",
          "String basics",
          "Some more features of int function-you can convert binary, octal or hex strings.",
          "Using int function convert a string containing numbers on different base into integer.",
          "Taking input from console - input function.",
          "How to write comments in Python script.",
          "Arithmetic Operators in Python - Do some Maths!",
          "Python console on Pycharm, the assignment operator in Python, lvalue, rvalue",
          "Using Arithmetic Operators",
          "Relational operators in Python.",
          "Logical operators in Python.",
          "Section #3 Quiz"
        ],
        "Take decision - follow a branch - Use if-else": [
          "Introduction to branching using if-else: Understand the basics first.",
          "Using elif block - testing condition in the else part with elif.",
          "One line alternative to if-else or if-elif statememts.",
          "Find the hotel bill amount.",
          "Branching in action - Check if a given year is Leap year.",
          "Another programming example: Calculate Income Tax.",
          "Rock Paper Scissor",
          "Quiz on if-else"
        ],
        "Loop - iterating over a section of code again and again.": [
          "Why we need loop - introduction, then while loop in Python.",
          "Example program using while loop.",
          "Find sum of all even numbers upto n.",
          "Another good programming example with while loop - find the factors of a number.",
          "Use while loop practically to find sum of digits of a number.",
          "The smart looking for loop and range function.",
          "Iterating through a string - printing all possible association.",
          "Test your skills on for loop and range function.",
          "Printing Fibonacci Sequence.",
          "Average (mean) of Fibonacci series numbers.",
          "Write Python script using a simple for loop.",
          "Using break to get out of a loop.",
          "The continue keyword -skip the rest of the current iteration and go to the next",
          "else block with loop - what does it mean? This is something new in Python.",
          "Print a pattern using nested loop - a loop inside of another.",
          "Quiz on loop"
        ],
        "Python list - The mutable linear container.": [
          "Introduction to Python List.",
          "Declare and use a List",
          "Quiz on List fundamentals",
          "Unpacking of list elements.",
          "Write code to unpack list elements.",
          "List slicing - take out a portion of list using robust slicing technique.",
          "Quiz on List slicing",
          "Important list methods - Part 1",
          "Important list methods - Part 2",
          "Enumerate function",
          "zip function to combine corresponding elements of different lists.",
          "Practice some list operations",
          "Find the area of some geometrical figures.",
          "Use a list for counting digits in a string",
          "A colony of 8 cells.",
          "Quiz on List Methods"
        ],
        "Python string - all you need to know about Python string.": [
          "String slicing",
          "Formatting a string using format method.",
          "A simple formatting task.",
          "Output data in tabular format using the format method.",
          "Formatting using fstring - a new and better way.",
          "Important string methods - Part 1",
          "Important string methods - Part 2",
          "Apply slicing on string - a simple exercise.",
          "Print each character of a string twice",
          "Find number of strings in a list that ends with full stop '.'"
        ],
        "Python tuple - Immutable linear container.": [
          "Introduction to tuple.",
          "tuple to list and vice-versa: Sometimes we need this.",
          "More tuple operations.",
          "Quiz on Tuple"
        ],
        "Python set - Pythonian way to represent set of Mathematics.": [
          "Introduction and basic idea of Python set.",
          "Understanding of set continues...",
          "More set operations - Part 1",
          "More set operations - Part 2"
        ],
        "Python dictionary - associative container in Python.": [
          "Introduction and basic idea of Python Dictionary.",
          "Important dictionary operations - Part 1.",
          "Important dictionary operations - Part 2.",
          "Formatting a dictionary using both format and fstring."
        ]
      },
      "requirements": [
        "For absolute beginners.",
        "Must have a computer running with Mac or Windows or Linux.",
        "Capable of managing files and folders.",
        "Willing to spend 3 to 4 hours per week at least for learning."
      ],
      "description": "This course will help you to learn Python 3 step by step from beginning to expert level. Undoubtedly, Python is the most in-demand language. It is used for Data Science and analytics, Machine Learning, Web Programming.\nThis course aims to teach the Python language in depth to the students, the instructor explains everything from grounds up so that student could learn the basics with programming along with the Python language.\nClea instructions to download, install and configure Python is given at the beginning of the course, so that Students can smoothly install Python in their respective (Win or Mac) system.\nEach section contains Coding exercises, these exercises are based on the topics, students will have to write the code practically as per the instructions within the provided editor to test their ability of acquired knowledge. Also there are quizzes to check the development of the students as they go through the course curriculum.\nThe syllabus of the course is based on the curriculum followed by the Universities across the globe in the graduate level engineering or computer application courses.\nIf the students have further doubts they can always post in the Q/A section of the course.\nThe course starts with the fundamentals of Python including control structures, functions and fundamental data structures and then moves towards the advance topics.",
      "target_audience": [
        "Anyone who wants to start learning Python language.",
        "Python is required for Data Science or Machine Learning, if you learn Python language, it will be helpful for exploring those booming arena.",
        "If you want to become a web application developer then you can start learning Python language."
      ]
    },
    {
      "title": "Learn Python Programming in 80 minutes with examples. (2023)",
      "url": "https://www.udemy.com/course/python-in-80minutes-/",
      "bio": "A direct, to the point and simple course, help you to quickly understand python, write code and create programs.",
      "objectives": [
        "You will be able to write and run python programs.",
        "You will get strong understanding of python fundamentals and its working.",
        "You will be able to create your own python programs.",
        "You will be able to start professional learning after this course."
      ],
      "course_content": {},
      "requirements": [
        "No prior Knowledge is required although a computer and Internet connection is required.",
        "This is basic python course and it covers all the basics."
      ],
      "description": "Python has become very popular over the last few years. Its demand is booming in the job market. It is an important skill that is bound to open the doors of various exciting industries such as web application, home automation, data science, Artificial Intelligence and many more. According to recent surveys, Python is one of the ‘most wanted’ and ‘most loved’ programming language. People who are not using Python already are starting to use it now.\nWhy chose this course?\nYou will:\nGet a broader and deeper understanding of Python.\nBe able to write professional Python code rivaled by a professional Python developer\nHelp you develop a deeper love and understanding of Python and programming by developing good      programming habits\nWe will start by getting Python installed on your computer.\nOur wide range of topics includes:\nCommand Line Basics\nIDE Introduction\nInstalling Python\nRunning Python Code\nPrint Formatting\nInputs\nStrings\nLists\nDictionaries\nTuples\nSets\nNumber Data Types\nLoops\nFor loops\nNested loops\nConditional Loops\nConditions (if elif else)\nFunctions\nScope\nArguments\nBuilt-in Functions\nCustom Datatype\nClasses\nWho can benefit from this course?\nBeginners who have no experience with programming\nProgrammers experienced in other programming languages who want to add Python programming to their skill set\nProgrammers who are proficient in Python programming but want to brush up programming skills\nSo... how will this Python programming help me?\nRight now Python is HOT! The demand for Python skills in the IT job market keeps growing and growing. If you want to pursue programming as a career, open new doors for you in the IT field, or give a boost to your existing career, then learning Python can help you achieve these goals.\nLearning Python will help you in career enhancement and find lucrative job opportunities because it is the most requested skill in 2018!\nThere is no previous programming or Python experience required for this course. Even if you have never programmed a computer before this course, but are an expert in another programming language and want to study Python then sign up for this course as it will teach you how.",
      "target_audience": [
        "student who want to learn Python from the scratch.",
        "Programmers who want to learn python or just revise it quickly."
      ]
    },
    {
      "title": "An Introduction to Python",
      "url": "https://www.udemy.com/course/an-introduction-to-python/",
      "bio": "Understand the basics of a High-Level programming language",
      "objectives": [
        "Students will learn programming in the Python coding Language",
        "Python Basics",
        "Print statements",
        "Datatypes",
        "Variables",
        "Input",
        "Math Operators",
        "Functions",
        "Pygame / Graphics",
        "If statements",
        "Logical operators",
        "Rational operators",
        "Loops",
        "Strings and Lists",
        "Lambda",
        "Intro to JSON",
        "Date and Time",
        "Intro to CSV",
        "Intro to Machine Learning",
        "Intro to GUI"
      ],
      "course_content": {},
      "requirements": [
        "You need a working computer",
        "A code editor to run python is required"
      ],
      "description": "This course is an introductory level course to python, which is a high-level coding language used on a large scale today in society. We will be using Python 3 throughout this course and along side we will be using the PyCharm IDE by jetBeans as our editor. In this course, you will learn the fundamentals of python and be able to code programs in this language. It requires no previous knowledge of python or any coding concepts, as you will learn completely from scratch. You will begin the course by starting to create simple programs that you can build and run using python. Eventually, you will be able to create more complex programs that can complete simple tasks such as math or other user interactive programs. After learning the basics you will move on to more complex concepts. These concepts include working with strings and lists as well as concepts like Lambda and JSON In addition, we will also cover GUI, CSV, and intro to machine learning. Upon completion of this course, you can expect to have a base foundation in your knowledge of python. If you are seeking to learn python from scratch or improve upon existing knowledge of python then this course is for you.\nIn this course [An Introduction to Python] you will learn:\nPrint statements\nDatatypes\nvariables\nInput\nMath Operators\nFunctions\nPygame / Graphics\nIf statements\nLogical Operators\nRational Operators\nLoops\nStrings\nLists\nLambda\nJSON\nDate and Time\nCSV\nIntro to Machine Learning\nIntro to Graphics User Interface",
      "target_audience": [
        "Beginners who are seeking to have an introduction in Python"
      ]
    },
    {
      "title": "C# Language Basics and OOPs for Absolute Beginners",
      "url": "https://www.udemy.com/course/c-language-basics-and-oops-basic-to-advanced/",
      "bio": "Wonderful blending of Theory and Practicals. Each and every feature is demonstrated with real-time examples.",
      "objectives": [
        "Will understand all the concepts of .NET Framework",
        "Use Visual Studio and work with Project and Solution files",
        "Mastery over C# language features",
        "Will have deep understanding of Object Orientation features like encapsulation, Inheritance and Polymorphism",
        "Most Important, You will learn how to be a BEST PROGRAMMER."
      ],
      "course_content": {
        "MS.NET Framework Introduction": [
          "Everything About Microsoft .Net Framework",
          "Framework Types Of Application",
          "Framework Base Class Library",
          "Framework MSIL and PE",
          "Framework-CLR"
        ],
        "VS.NET and Entry Point Method - Main": [
          "Visual Studio 2015 Introduction and Installation",
          "First .Net Application",
          "Command Line Arguments",
          "Return Value of Main",
          "Resolve Main Ambiguity",
          "Using Command Line Compiler"
        ],
        "C# Language Syntax": [
          "C# Introduction and Evolution",
          "Implicit and Explicit Casting",
          "Data Type Value Type and Reference",
          "String and String Builder",
          "Object Boxing & Unboxing",
          "Constant and Enum",
          "Operators",
          "Control Statement",
          "Working with Arrays",
          "Multi-Dimensional Arrays",
          "Working with Methods",
          "How to become an Extraordinary Programmer"
        ],
        "OOPs - Concepts": [
          "Object Oriented Concepts Part 1",
          "Object Oriented Concepts Part 2"
        ],
        "OOPs - Programming Encapsulation": [
          "Writing Class And Initializing Objects",
          "Destroying Objects and Role Of Garbage Collection",
          "Writing Methods in Classes",
          "Working with Properties in Class",
          "Constructor and Destructor",
          "Static Members"
        ],
        "OOPs - Inheritance": [
          "Protected Keyword And Constructors In Inheritance",
          "Casting Between Reference Types",
          "Static And Dynamic Binding",
          "Abstract Class And Methods",
          "Object Class As Parent"
        ],
        "OOPs - Interface & Polymorphism": [
          "Polymorphism And Syntax Of Interface",
          "Explicit Implementation And Casting",
          "Types Of Interface"
        ],
        "BONUS LECTURE: What Next?": [
          "BONUS LECTURE: What Next?"
        ]
      },
      "requirements": [
        "Though not essential but very basic knowledge of \"C\" or any other programming language will be advantage.",
        "Student should be able to download and install Visual Studio Community 2017"
      ],
      "description": "Our Online C# Training videos enriches the participants with sound programming knowledge required for developing applications using .NET Technology. has Mr. Sandeep Soni, Microsoft Certified Trainer has compiled these sessions such that the subject is presented in the simplest possible language covering all latest and advanced features also. Every concept is explained not just in theory but also explained using different walkthroughs and a very practical approach has been taken to ensure that the participants get a feel of real time application development. Using course we assure that the participants will learn all the basic and advanced topics and also will help the beginners to gain in-depth knowledge of concepts like OOPS which is the base for programming.\nTo fill the gap between the regular classrooms based on training and this self-pace online training, we provide need based technical support by Subject matter experts to all those who would have any kind of questions while watching the videos of the subject.\nMr.Sandeep has worked closely with many IT companies and helped them with their technology resources training needs. He considers this to be the best part of his profession and he enjoys the most because he gets to meet new people; get involved in the ever changing technology needs and provide them with optimum solution to the problems they face in application development. This is how he keeps himself updated with the latest technology in the industry\nHe is always accessible to all his students anytime for any kind of question they may have. You can send him an email at sandeepsoni@deccansoft.com.\nBy the end of this course you should able to\n\nGet complete knowledge of MS.NET Framework and its internals.\nUse VS.NET - Integrated Development Environment.\nDevelop deep understanding of C# language features.\nBuild strong concepts of OOP's and implement the same in C#.\nCreate and manage strings, arrays, collections and enumerators using .NET framework library.",
      "target_audience": [
        "Begineers who want to make thier foundation strong.",
        "Beginner Programmers who want to learn C# language features",
        "If you want to understand the features of Object Orientation in a practical way.",
        "Learn to write most optimized code"
      ]
    },
    {
      "title": "Java A-Z™ : Learn java within 8 hours",
      "url": "https://www.udemy.com/course/java-a-z-become-masterclass-for-java-easy-jobs/",
      "bio": "Never underestimate power of \"Java\",Make real world projects by just enrolling into this course!!",
      "objectives": [
        "Set a firm base in Java for the rest of your career",
        "How to build creative, fully-functional Java programs with confidence (whilst having fun, too)",
        "Advanced java concepts like multi threading,collections and networking"
      ],
      "course_content": {
        "Introduction and setup for JAVA!!": [
          "Welcome Future JAVA Programmers !!",
          "Project Overview!!",
          "Companies You can get Hired after !!",
          "Installing netbeans on your machine!!"
        ],
        "More Than Basics!!": [
          "Starting with Hello World",
          "Variable Concept for Programming",
          "making user Input",
          "Commenting : Really Inspiring"
        ],
        "Operations & Priorities": [
          "Convert between datatypes : Typecasting",
          "Priorities of Operations",
          "Increment and Decrement Operators"
        ],
        "Make Your Decisions!!": [
          "Dealing with Logic!!",
          "If-Else Statement",
          "Switch Statement"
        ],
        "Getting Loopy Loops!!": [
          "Loop Control : For loop",
          "While ... Do while loop combined",
          "Break and Continue : Easier concept"
        ],
        "Dealing with arrays!!": [
          "One Dimensional Array Structure",
          "One Dimensional Array Implementation",
          "Two Dimensional Array Structure",
          "Two Dimensional Array Implementation"
        ],
        "User Defined Functions!!": [
          "Simple Function",
          "Local and Global Variables",
          "Function Overloading!!"
        ],
        "Object Oriented Programming": [
          "OOP Basics : Definition to Properties",
          "Make Class",
          "Constructor",
          "Static Keyword",
          "Encapsulation",
          "Override Method",
          "this and super Keyword",
          "Abstract Class",
          "Interface",
          "Enums",
          "Generic Class and Generic Methods"
        ],
        "File Handling": [
          "What is Exception : make code reliable",
          "Write to File",
          "Read from File"
        ],
        "Databases: using sqlite !!": [
          "Make connection to Database",
          "Adding data to database : insert command",
          "Select from database : select command",
          "Delete from database",
          "Update database"
        ]
      },
      "requirements": [
        "Nothing Seriously !! Just enroll with positive attitude"
      ],
      "description": "Overview:\nThis course for anyone  who want to be Java programmer from scratch, We will  start by discus all Java fundamentals that you need to start programming Android, Java web or Java Desktop apps.\nCourse Contents:\nIntroduction\nCompanies you can get hired to\nInstalling jdk and netbean\nVariables\nOperations and Numbers\nLogic\nLooping\n\nArray String\nFunctions\nOOP\nFile handling\nDatabases\nMulti-Threading\nCollections\nGUI\nProjects\nWe will start first by install the development environment then you will run your first Java app, and understand how program flow works in Java. Then we will talk about variables and Math operation and prioiites. Then we will take about logic and making decision, then we will talk about loops. then we will talk about functions and OOP concept that you need to use when you program apps with Java, then we will talk about multi-processing and how you could run multi-process in same time and how to avoid Deadlock,  then we will talk about Databases, then we will talk about collections and which type collection you have to use for better performance  depend on your app. Then we will talk about Java 8 new features, then we will talk about build desktop GUI application with JavaFx.",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous coding experience, to intermediates looking to sharpen their skills to the expert level",
        "Those looking to build creative and advanced Java apps for either personal use or for high-paying clients as a self-employed contractor",
        "Java programmers who want to learn about design principles & best practices. Any serious programmer should know this stuff!"
      ]
    },
    {
      "title": "C++ Basics - As Soon As Possible",
      "url": "https://www.udemy.com/course/cpp-basics/",
      "bio": "Make C++ programs within 1st minute and learn basics within 6 hours",
      "objectives": [
        "Do general purpose programming using c++.",
        "Will be able to take user input and display it rightly.",
        "Will be able to do conditions and iterations in c++.",
        "Will be able to handle arrays and strings well.",
        "Will be able to create, use and manipulate functions.",
        "Will understand fundamentals of pointers.",
        "Will get to know the concept of class and build examples.",
        "Will know tricks related to display, random number, time-date, escape sequences etc."
      ],
      "course_content": {
        "Introducing the Basics": [
          "About the course",
          "Displaying \"Hello World\"",
          "Chaining Multiple String Literals",
          "Stream Extraction for Input",
          "Building Simple Formulas",
          "Fractional Data Types and Constants",
          "Building Expressions and Precedence of Operators",
          "C++ Introductory Quiz"
        ],
        "Conditions and Loops": [
          "Simple If-else conditions",
          "Nested if-else",
          "Nested if-else 2",
          "Simple for loop",
          "Moving from for to while Loop",
          "Condition Followed by Loop",
          "Exit controlled loop - do-while",
          "Retrial using do-while",
          "Simple Switch",
          "Switch Based Menu",
          "Continue and Break in Loop",
          "Nested Loop",
          "Nested Loop - Flyod's Triangle",
          "Conditions and Loops Quiz"
        ],
        "Strings and Arrays": [
          "Using codeblock and learning string basics",
          "Finding String Length",
          "Reversing a String",
          "Concatenating Strings",
          "Array Basics",
          "Array Traversing",
          "Multi-Dimensional Arrays",
          "Strings and Arrays Quiz"
        ],
        "Functions": [
          "Making a Function",
          "Returning Value From Function",
          "Partial Parameters and Parameter Initialization",
          "Passing by Value or By Reference",
          "Passing Array as Function Parameter",
          "Multiple Value Collection by Passing Reference",
          "Functions Quiz"
        ],
        "Pointers": [
          "Basic Concept of Pointer",
          "More Concepts of Pointers",
          "Pointers for Array Index Movement",
          "Pointers Quiz"
        ],
        "Classes": [
          "Concepts of classes",
          "More Concepts of Classes",
          "Constructors",
          "Scoping Class Methods",
          "Scoping variables",
          "Polymorphism/Overloading",
          "Object copying (Assignment/Copy Constructor Method)",
          "Destructor",
          "Inheritance",
          "Understanding Abstraction & Encapsulation",
          "Classes Quiz"
        ],
        "Tips and Tricks": [
          "Displaying Neatly",
          "Random Numbers",
          "Date and Time Functions",
          "Escape sequences",
          "Signed-Unsigned Purpose"
        ]
      },
      "requirements": [
        "Using Internet and typing directly into the text boxes.",
        "That c++ is an extremely useful language and it has various versions.",
        "How to download and install a software into your system."
      ],
      "description": "C++ is one of the most popular and most complete programming language which is not only a major enhancement to the language C, but an enhancement which stood the test of time. The current course aims at teaching this course to a novice user in a way that from the very first minute the learner starts writing the program, without learning too much theory.\nCourse Contents:\n- 50 Video Sessions with direct IDE based learning\n- Attached resource with source code of sessions\n- Section Level Quizzes to test your learning performance\n- All basic topics like conditions, loops, strings, arrays, functions\nclasses are covered in with help of easy to understand examples\n\nUpto 6 Hours should be sufficient to cover the course. If you keep doing your own samples based on the examples given you can keep increasing your expertise level and can finally reach an expert level.\nThis course should be taken to:\n- Know about C++ programming quickly\n- Learn enough to clear this subject at your school/college level.\n- To clear interviews related to a job in Information Technology.\n- To pass related IT Certification with some more practice test\ndone at your level.\n- To have a quick understanding of basic features of C++, so that you can learn some similar other language faster.",
      "target_audience": [
        "This is meant for c++ aspirants at school/college/company level.",
        "If you need to take a IT job interview related, this will help.",
        "If other courses confuse you, this one will not. Take it.",
        "If you know the basics, you need only advanced c++ you may not take it."
      ]
    },
    {
      "title": "Build a Data Analysis Library from Scratch in Python",
      "url": "https://www.udemy.com/course/build-a-data-analysis-library-from-scratch-in-python/",
      "bio": "Immerse yourself in a long, comprehensive project that teaches advanced Python concepts to build an entire library",
      "objectives": [
        "Build a fully-functioning Python library similar to pandas that you can use to do data analysis",
        "Complete a large, comprehensive project",
        "Test-driven development with pytest",
        "Environment creation with conda",
        "Advanced Python topics such as special methods and property decorators"
      ],
      "course_content": {
        "Project Genesis": [
          "Project Overview",
          "Pandas Cub Examples",
          "Downloading the Material from GitHub"
        ],
        "Environment Setup": [
          "Opening the Project in VS Code",
          "Setting up the Development Environment",
          "Test-Driven Development",
          "Installing an IPython Kernel for Jupyter"
        ],
        "Getting Ready to Code": [
          "Inspecting the __init__.py File",
          "Importing Pandas Cub",
          "Manually Test in a Jupyter Notebook",
          "Getting Ready to Start"
        ],
        "DataFrame Construction": [
          "Check DataFrame Constructor Input Types",
          "Check Array Lengths",
          "Convert Unicode Arrays to Object"
        ],
        "Basic Properties and Visual Representation": [
          "Implementing the __len__ Special Method",
          "Return Columns as a List",
          "Set New Column Names",
          "The shape Property",
          "Visual Notebook Representation",
          "The values Property",
          "The dtypes Property"
        ],
        "Subset Selection": [
          "Select a Single Column",
          "Select Multiple Columns",
          "Boolean Selection",
          "Check for Simultaneous Selection",
          "Select a Single Cell",
          "Select Rows as Booleans, Lists, or Slices",
          "Multiple Column Simultaneous Selection",
          "Column Slices",
          "Tab Completion for Columns",
          "Create a New Column"
        ],
        "Basic Methods": [
          "head and tail Methods",
          "Generic Aggregation Methods",
          "The isna Method",
          "The count Method",
          "The unique Method",
          "The nunique Method"
        ],
        "Value Counts": [
          "The value_counts Method",
          "Normalize value_counts"
        ],
        "Other Methods and Operators": [
          "The rename Method",
          "The drop Method",
          "Non-Aggregation Methods",
          "The diff Method",
          "The pct_change Method",
          "Arithmetic and Comparison Operators",
          "The sort_values Method",
          "The sample Method"
        ],
        "Pivot Tables": [
          "Pivot Tables Part 1",
          "Pivot Tables Part 2",
          "Pivot Tables Part 3",
          "Pivot Tables Part 4",
          "Pivot Tables Part 5"
        ]
      },
      "requirements": [
        "Students must know the fundamentals of Python. This is an intermediate/advanced course.",
        "Must feel comfortable using and iterating through lists, tuples, sets, and dictionaries",
        "Exposure to numpy and pandas is helpful"
      ],
      "description": "Build a Data a Data Analysis Library from Scratch in Python targets those that have a desire to immerse themselves in a single, long, and comprehensive project that covers several advanced Python concepts. By the end of the project you will have built a fully-functioning Python library that is able to complete many common data analysis tasks. The library will be titled Pandas Cub and have similar functionality to the popular pandas library.\nThis course focuses on developing software within the massive ecosystem of tools available in Python. There are 40 detailed steps that you must complete in order to finish the project. During each step, you will be tasked with writing some code that adds functionality to the library. In order to complete each step, you must pass the unit-tests that have already been written. Once you pass all the unit tests, the project is complete. The nearly 100 unit tests give you immediate feedback on whether or not your code completes the steps correctly.\nThere are many important concepts that you will learn while building Pandas Cub.\nCreating a development environment with conda\nUsing test-driven development to ensure code quality\nUsing the Python data model to allow your objects to work seamlessly with builtin Python functions and operators\nBuild a DataFrame class with the following functionality:\nSelect subsets of data with the brackets operator\nAggregation methods - sum, min, max, mean, median, etc...\nNon-aggregation methods such as isna, unique, rename, drop\nGroup by one or two columns to create pivot tables\nSpecific methods for handling string columns\nRead in data from a comma-separated value file\nA nicely formatted display of the DataFrame in the notebook\nIt is my experience that many people will learn just enough of a programming language like Python to complete basic tasks, but will not possess the skills to complete larger projects or build entire libraries. This course intends to provide a means for students looking for a challenging and exciting project that will take serious effort and a long time to complete.\nThis course is taught by expert instructor Ted Petrou, author of Pandas Cookbook, Master Data Analysis with Python, and Master the Fundamentals of Python.",
      "target_audience": [
        "Students who understand the fundamentals of Python and are looking for a longer more comprehensive project covering advanced topics that they can immerse themselves in."
      ]
    },
    {
      "title": "Predict the stock market with data and model building!",
      "url": "https://www.udemy.com/course/artificialintelligence/",
      "bio": "Learn hands-on Python coding, TensorFlow logistic regression, regression analysis, machine learning, and data science!",
      "objectives": [
        "Learn how to code in Python, a popular coding language used for websites like YouTube and Instagram.",
        "Learn TensorFlow and how to build models of linear regression.",
        "Make an app with Python that uses data to predict the stock market."
      ],
      "course_content": {
        "Python Basics": [
          "Installing Python and PyCharm",
          "How to Use PyCharm",
          "Intro and Variables",
          "Multi-Value Variables",
          "Control Flow",
          "Functions",
          "Classes and Wrapup",
          "($300 value!) Source Files"
        ],
        "TensorFlow Basics": [
          "Installing TensorFlow",
          "Intro and Setup",
          "What is TensorFlow?",
          "Constant and Operation Nodes",
          "Placeholder Nodes",
          "Variable Nodes",
          "How to Create a Linear Regression Model",
          "Building a Linear Regression Model",
          "($300 value!) Source Files"
        ],
        "Stock Market Prediction (Project)": [
          "What is Python Artificial Intelligence?",
          "Introduction",
          "Project Overview",
          "Understanding Datasets",
          "Importing and Formatting Data We Want",
          "Calculating Price Differences",
          "Building a Computational Graph",
          "Training a Model",
          "Testing Model Accuracy",
          "Summary and Outro",
          "($300 value!) Source Files"
        ],
        "Bootcamp Peek! Machine Learning Neural Networks": [
          "Introduction to Machine Learning Neural Networks",
          "Introduction to Machine Learning",
          "Introduction to Neutral Networks",
          "Introduction to Convolutions"
        ],
        "Explore the Keras API": [
          "Introduction to the Keras API",
          "Introduction to TensorFlow and Keras",
          "Understanding Keras Syntax",
          "Introduction to Activation Functions"
        ],
        "Format Datasets and Examine CIFAR-10": [
          "Introduction to Datasets and CIFAR-10",
          "Exploring CIFAR-10 Dataset",
          "Understanding Specific Data Points",
          "Formatting Input Images"
        ],
        "Build the Image Classifier Model": [
          "Introduction to the Image Classifier Model",
          "Building the Model",
          "Compiling and Training the Model",
          "Gradient Descent and Optimizer"
        ],
        "Save and Load Trained Models": [
          "Introduction to Saving and Loading",
          "Saving and Loading Model to H5",
          "Saving Model to Protobuf File",
          "Bootcamp Summary"
        ],
        "Bonus Sections Source Material": [
          "Texts Assets: Understand Machine Learning Neural Networks",
          "Texts Assets: Explore the Keras API",
          "Asset Files: Format Datasets and Examine CIFAR-10",
          "Asset Files: Build the Image Classifier Model",
          "Asset Files: Save and Load Trained Models"
        ],
        "Bonus": [
          "Please leave us a rating",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Please download PyCharm Community Edition 2017.2.3."
      ],
      "description": "\"Wow, great course. This is my 2nd run thru' I am amazed at the depth and realistic application of machine learning. Tx for the great course, will join other courses to learn more from you. Two thumbs up!!!\"\nDo you want to predict the stock market using artificial intelligence? Join us in this course for beginners to automating tasks.\n\nIn this course, you learn how to code in Python, calculate linear regression with TensorFlow, and make a stock market prediction app. We interweave theory with practical examples so that you learn by doing.\n\nThis course was funded by a wildly successful Kickstarter.\nWe show you how to build a model with a single variable. We don't go into daily stock market prediction.\nAI is code that mimics certain tasks. You can use AI to predict trends like the stock market. Automating tasks has exploded in popularity since TensorFlow became available to the public (like you and me!) AI like TensorFlow is great for automated tasks including facial recognition. One farmer used the machine model to pick cucumbers!\nJoin Mammoth Interactive in this course, where we blend theoretical knowledge with hands-on coding projects.\n\"In-depth coverage that I did not learn in some other python courses\"\nEnroll today to join the Mammoth community!",
      "target_audience": [
        "Beginners who want to learn to use Artificial Intelligence.",
        "Prior coding experience is helpful. For an in-depth intro to Python, search for our Ultimate Python Beginner Course.",
        "Topics involve intermediate math, so familiarity with university-level math is very helpful."
      ]
    },
    {
      "title": "JavaScript OOP: Mastering Modern Object-Oriented Programming",
      "url": "https://www.udemy.com/course/javascript-oop-mastering-modern-object-oriented-programming/",
      "bio": "Mastering Object-Oriented JavaScript for Efficient and Error-Free Coding",
      "objectives": [
        "Students will start by understanding the basics of creating object literals and exploring their properties, establishing a strong foundation.",
        "With interview-style tasks and coding practice, students will understand the theory and gain hands-on experience, preparing them for real-world scenarios",
        "The use of 'for-in' loops is introduced, empowering students to efficiently extract properties and values from objects.",
        "The tutorial emphasizes the universal application of these skills, making them relevant in any modern programming language.",
        "Students will gain insights into function objects, arrow functions, and object chaining, enhancing their understanding of these essential concepts.",
        "Practical aspects include preventing errors with optional chaining and uncovering hidden properties within objects.",
        "Students will explore object symbols on a global scale, enhancing their comprehension of system symbols.",
        "Students will not only have confidence in dealing with JavaScript objects but will also possess a versatile skill set applicable across different languages"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "JavaScript Objects": [
          "JavaScript Objects Unleashed",
          "Literals and Properties",
          "Square Brackets usage",
          "Shorthand for Property Values",
          "Restrictions on Property Names",
          "Checking Property Existence with the 'in' Operator",
          "Iterating with the 'for..in' Loop",
          "Create and assign values to an Object",
          "Verify if an Object is Empty",
          "Calculate the Sum of Object Properties",
          "Increase numeric property values by a factor of 2"
        ],
        "Object References and Duplication": [
          "Object References and Duplication",
          "Reference-Based Comparison",
          "Modifications to Const Objects",
          "Object Cloning and Merging with Object.assign",
          "Cloning with Nested Structures"
        ],
        "Methods in Objects": [
          "Methods in Objects and the \"this\" Keyword",
          "Understanding \"this\" in Methods",
          "“this” is not locked",
          "Arrow functions don't use \"this\"",
          "Applying 'this' in an Object Literal",
          "Craft a Calculator App",
          "Chaining in JavaScript"
        ],
        "New Operator": [
          "Constructor Functions and the \"new\" Operator",
          "Testing Constructor Mode with new.target",
          "Values Returned by Constructors",
          "Methods in Constructor",
          "Construct new Calculator."
        ],
        "Optional Chaining System": [
          "Using '?' for Optional Chaining",
          "Avoiding Errors with Optional Chaining",
          "Swift Exit with Short-Circuiting",
          "Other Uses: ?.() and ?.[]"
        ],
        "Understand Symbol Type": [
          "Understand Symbol Type",
          "Understanding Hidden Properties",
          "Symbols on a Global Scale",
          "Understanding System Symbols"
        ],
        "Object Transformation into Primitives": [
          "Object Transformation into Primitives",
          "What are \"Hints\"",
          "Symbol.toPrimitive Method",
          "toString/valueOf Methods"
        ]
      },
      "requirements": [
        "Knowing how to create and use functions in JavaScript is crucial, as the course will delve into function objects and related concepts.",
        "Students should be comfortable with fundamental programming concepts like variables, loops, and conditional statements.",
        "It would be helpful if students are familiar with setting up a coding environment, using code editors, and running JavaScript code in a browser or other environments.",
        "Even if you have little or no prior knowledge of JavaScript, fear not! This course is designed to be accessible to a wide audience. By simply following along, you'll gain a profound understanding of object-oriented programming. Whether you're a beginner or someone looking to reinforce their skills, this tutorial serves as an inspirational entry point into the world of computer programming."
      ],
      "description": "In this comprehensive course on object-oriented programming (OOP) in modern JavaScript, you'll explore fundamental concepts and advanced techniques to enhance your mastery of JavaScript's OOP capabilities.\n\n\nWe begin by examining the basics, including object literals, square bracket usage, and property shorthand, alongside restrictions on property names and object iteration using `for...in` loops.\n\n\nAdvancing further, we delve into complex topics like object references, duplication, and reference-based comparison. You'll learn to modify constant objects, clone objects with nested structures, and grasp methods within objects, with a focus on the `this` keyword's significance.\n\n\nNext, we introduce constructor functions and the `new` operator, clarifying constructor return values and demonstrating how to utilize optional chaining for error prevention and code optimization.\n\n\nYou'll also develop a profound understanding of symbol types, their global applications, and system symbol utilization. Additionally, we'll address object-to-primitive conversion strategies, including hints, and examine `toString` and `valueOf` methods for effective conversion management.\n\n\nBy course end, you'll possess a comprehensive grasp of modern JavaScript's OOP concepts, enabling you to write concise, efficient code and confidently tackle intricate programming challenges. This knowledge will not only elevate your JavaScript skills but also enhance your ability to design robust and scalable applications, making you a more versatile and valuable developer in today's competitive landscape.",
      "target_audience": [
        "The engaging and practical approach taken in this tutorial aims to build not just knowledge but also confidence—a crucial aspect often lacking even after completing multiple courses. It's crafted to inspire you to dive deeper into computer programming. Should you find that this course doesn't meet your expectations, you have the assurance of a refund.",
        "This course is ideal for individuals who are new to JavaScript and want to solidify their understanding of objects in a modern JavaScript context.",
        "If you're a web developer looking to enhance your skills in handling objects and want to explore advanced techniques, this course is tailored for you.",
        "Individuals with a passion for programming, even those with minimal coding experience, will find this course accessible and inspiring as a starting point in object-oriented programming.",
        "Whether you're a student studying computer science or a self-learner eager to delve into JavaScript and programming concepts, this course provides a structured and engaging learning path.",
        "If you're transitioning from another programming language to JavaScript and want to grasp the nuances of working with objects, this course will provide valuable insights.",
        "If you've completed courses but still lack confidence in applying your knowledge practically, this tutorial focuses on building confidence through hands-on practice.",
        "Professionals who want to refresh their knowledge of JavaScript objects, including those returning to coding after a break, will benefit from this course.",
        "Individuals looking for inspiration and a motivational push to dive deeper into computer programming will find this course encouraging and empowering.",
        "If you prefer practical learning with real-world examples and hands-on exercises, this course is designed to provide an immersive and practical experience.",
        "With a refund option available, this course is for anyone seeking quality content and a risk-free opportunity to explore and master Modern JavaScript Objects."
      ]
    },
    {
      "title": "Java Fundamentals Course - Sinhala Medium",
      "url": "https://www.udemy.com/course/java-certificate-course-sinhala-medium/",
      "bio": "Java programming මුල සිට සරලව සිංහලෙන් හැමෝටම තේරෙන විදියට",
      "objectives": [
        "Programming with Java from the beginning in Sinhala- Java මුල සිට සරලව සිංහලෙන්",
        "Practice with sample projects - සරල උදාහරණ සමග java concept පැහැදිලි කිරීම",
        "Improve your logical thinking - සරල උදාහරණ සමග ඔබගේ තර්ක කිරීමේ හැකියාව වැඩි දියුණු කිරීම",
        "Improve your programming experience - ඔබගේ programming කිරීමේ අත්දැකීම් වැඩි දියුණු කිරීම",
        "Talking about everything beyond the subject - විෂයට පමණක් සිමා නොවී එහා සම්බන්ධ සියලු දේ කතා කිරීම",
        "How to understand flow with program using flowchart - flowchart භාවිතයෙන් program එක්ක flow එක ගැන තේරුම් ගන්නා ආකාරය"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Environment": [
          "How to download Java 11 JDK",
          "How to download IntelliJ Idea",
          "How to install Java 11 JDK",
          "How to install IntelliJ Idea"
        ],
        "First Step to Java": [
          "How to create a java project",
          "Hello World - First Java Program",
          "Parts of a java program",
          "Naming Convention",
          "Comments",
          "Escape Sequence"
        ],
        "Variables & Data Types": [
          "What is a Variable and Why we need variables",
          "Define Characters and Strings",
          "Char and String",
          "Int and Long",
          "Float and Double"
        ],
        "Operations": [
          "Addition ,Subtraction , Multiplication and Division",
          "Modulus Operator",
          "Pre-increment and Post-increment",
          "Define Operator , Operands and Expression",
          "String Concatanation"
        ],
        "Read User Inputs": [
          "String User Inputs",
          "Int User Inputs"
        ],
        "Conditions": [
          "Less than",
          "Less than or Equal",
          "Greater than",
          "Greater than or Equal",
          "Equal too",
          "Not Equal",
          "Nested If",
          "AND Operator",
          "OR Operator"
        ]
      },
      "requirements": [
        "Computer to coding java - පරිගණකයක්",
        "An internet Connection - අන්තර්ජාල සබදතාවයක්",
        "The desire to learn - ඉගෙන ගැනීමට ඇති ආසාව"
      ],
      "description": "Note : This course conduced in Sinhala (Mother language of Sri Lanka) .Not in English\n\n\nඔබටත්  computer progamming ඉගෙන ගැනීමට රුචියක් තිබේ නම් මෙම java programming පාඨමාලාව හොද ආරම්භයක් ලෙස දැක්විය හැක .\nමෙම පාඨමාලාවේ දී java නම් පරිගණක භාෂාව  මුල සිට සරලව සැමටම තේරෙන විදියට සිංහල භාෂාවෙන් කතා කරනු ලබයි . එපමණක් නොව flowchart අදිමින් computer program එකක ගලා යෑම (flow එක) තේරුම් කරනු ලබයි . එමගින් සිදුවන්නේ පරිගණක ක්‍රමලේඛන (software) ලිවීමට ඔබ තුල ඇති තාර්කික හැකියාව වර්ධනය වීමයි . ඔබට අවශ්‍ය වන්නේ ඉගෙනීමට ඇති ආසාව සහ උනන්දුව පමණි .\nIf you are also interested in learning computer programming, this java programming course is a good start.\nIn this course, the computer language java is discussed in Sinhala. in a way that is easy for everyone to understand from the beginning. In addition, the flowchart is used to understanding the flow of a computer program. It develops your logical ability to write computer software. All you need is the desire and interest to learn.\nGood Luck !!!\n\n\n1. Introduction\nIntroduction\n2. Setup Environment\nHow to download Java 11\nHow to download IntelliJ\nHow to install Java 11\nHow to install IntelliJ Idea\n\n\n3. First Step to Java\nHow to Create Java Project\nHello World\nParts of Java Program\nNaming Convention\nComments\nEscape Sequences\n\n\n4. Variables, Data Types\nIntroduction\nWhat is a Variable and why we need variables?\nDefine Characters and Strings\nChar and String\nInt and long\nFloat and double\n\n\n5. Basic Operations\nAddition, Subtraction, multiplication, division\nModulus\nPre-increment, post-increment\nDefine operator and operands\nString concatenation\n\n\n6. Read User Inputs\nRead String Inputs\nRead Integer Inputs\n\n\n7. Conditions\nLess than\nLess than or equal\nGreater than\nGreater than or equal\nEqual to\nNot equal\nNested if\nAnd operator\nOR Operator",
      "target_audience": [
        "Anyone who want to learn Java - Java ඉගෙනීමට කැමැති ඕනිම අයෙකුට"
      ]
    },
    {
      "title": "What's New in C# 12: A Practical Guide with Exercises",
      "url": "https://www.udemy.com/course/c-sharp-12/",
      "bio": "Learn about the new features in C# 12, through theoretical videos and practical exercises.",
      "objectives": [
        "What's new in C# 12",
        "Motivations behind the new features",
        "Scenarios for using the new features",
        "Exercises to practice implementing the new features"
      ],
      "course_content": {},
      "requirements": [
        "C# language basics"
      ],
      "description": "Hello My name is Hector Perez, Be welcome to the course, \"New features in C# 12, a practical guide\". I am Microsoft MVP and software developer with more than 10 years of experience\nC# is the powerful programming language created by Microsoft, placed among the most popular and used today\nThe reason, is that with C# you can create almost any type of application, from video games, to mobile applications, to web projects\nWith the release of a new version of .NET every year, new features are added to C#, making it an increasingly flexible and powerful language\nIn this course, you will learn about the main features of C# 12, the reason behind the incorporation of each of them into the language, as well as exercises that will allow you to get hands-on to practice what you have learned\nAt the end of the course, you will know what are the main new features of C# 12 and how to use them in your projects\nSome of the topics that we will see in the course are:\n\n\nPrimary Constructors\nCollection Expressions\nOptional parameters for lambdas\nParam array parameters for lambdas\nAlias any type\nAmong other topics\nTo have a good use of the course, it is recommended to have basic knowledge of C#\nWhat are you waiting for to update your C# knowledge? See you in the course",
      "target_audience": [
        "C# Developers",
        ".NET Developers in General"
      ]
    },
    {
      "title": "Spring Tutorials - Spring Core",
      "url": "https://www.udemy.com/course/springcore2/",
      "bio": "Spring Tutorials : Discover Secrets of Successful Programming, Java Spring Framework",
      "objectives": [
        "Understand What the Spring framework is for",
        "Understand How and Why Spring came About",
        "Learn Java Best Design Practices that are encouraged by Spring",
        "Start Learning the Spring way of doing things, in Java development",
        "Get started with Spring Tools Suite (IDE)",
        "Start Learning the Very Fundamentals of Spring Configuration",
        "Understand all the Major components of Core Spring and How to apply them",
        "By the end of this course, you will be able to design and write your own basic Spring based Java applications"
      ],
      "course_content": {},
      "requirements": [
        "All required software is downloadable, so internet connection is necessary."
      ],
      "description": "Spring Framework is a Java platform that provides comprehensive infrastructure support for Developing Java Applications. Spring handles the infrastructure so you can focus on Your Application.\nThis Spring Framework Course comes in Two Parts and together both Parts act as a Beginners Primer to the Core of the Spring Framework.\nPart 1: Introduces Spring;\nWhat is it? How and Why Spring came About?\nI then look at some of the Best Practices for Java Application Design and Development which are used and encouraged by the Spring way of doing things!\nThen jump into setting up an Integrated Development Environment (IDE) for Spring Development and teach you some of the Very Fundamentals of Spring Configuration and Development.\nPart 2: Providing You Comprehensive Coverage of all the key features of Core Spring with a Sound Practical Level of Depth.\n\nCore Spring is a large subject area, by following this course you will gain an excellent knowledge and understand of this powerful and wonderfully flexible framework. The Knowledge Gained here will put you \"Streets Ahead\" in any Spring project, it will provide you with a firm foundation to help further your Spring Career when you start Learning other areas of this Excellent framework. Some of the key topics covered on this course are; BeanPostProcessors, What are they and How can you take advantage of them? Autowire bean configuration, Using Annotations for configuration, JSR-250 & JSR-330 with Spring, Event handling and using your own Custom Events in Spring, Aspect Oriented Programming (AOP), the ever more popular Java based Configuration rather than XML based and Testing your Java Spring application code. By the End of Part:2 of this Spring Framework Course, You will Understand all the Major components of Core Spring and How to apply them! You will be ready to join a Spring project and successfully Hold your own!! You will also have the knowledge to help you Learn New areas of the Spring framework with the Minimum of Effort!!",
      "target_audience": [
        "Anyone with some Basic Knowledge of Java programming language",
        "Any knowledge of an Integrated Development Environment (IDE), preferably Eclipse but not necessary"
      ]
    },
    {
      "title": "Java Programming for Beginners: Become a Java Programmer",
      "url": "https://www.udemy.com/course/introduction-to-java-programming-b/",
      "bio": "JAVA: Learn JAVA from scratch and become a JAVA programmer",
      "objectives": [
        "The fundamentals of programming – from the ground up",
        "How to program Java on Windows",
        "The nitty-gritty details of the Java language",
        "Have access to the interview Questions and Answers.",
        "Advanced topics such as Inheritance, exception-handling etc"
      ],
      "course_content": {},
      "requirements": [
        "How to use a PC"
      ],
      "description": "##Last Updated on April 1st,2016 ##\n\nFrustrated trying to learn how to program?\nMy name is Deepika Khanna and I'd like to ask you to come with me on a journey as I take you from a beginner to an advance Java developer!\nWhy?\nBecause I will taught you how to program successfully with Java and will make learning fun at the same time.\nAre you ready to learn how to program?\nThis course assumes no previous experience, and takes you from the absolute beginner concepts like Installing JAVA on your PC, writing you very first Java program, and then goes into more detail as we explore the entire Java feature set.\nAll the basic Java keywords, Variables, If Else statements, Loops and Inheritance are explained in great detail, together with complete chapters on object oriented programming.\nNow don't worry if none of that made any sense. Because, I will go into great detail explaining each and every core concept, programming terms, and buzzwords.\nBy the end of this course you will have a mastery of programming in Java no matter what level of experience you are at right now.\nBe sure to click the free preview button on this page if you want to get a glimpse of the quality of the training.",
      "target_audience": [
        "Beginners – if you've never coded before, you can learn Java step by step",
        "Programmers switching to Java from some other language such as Ruby, Python, C or C#",
        "Cross-platform developers – Java programs run on all major operating systems",
        "Anyone who wants to make a career in programming",
        "Anyone who wants to go to Hadoop or Android development"
      ]
    },
    {
      "title": "Java Multithreading , Concurrency & Parallel Programming",
      "url": "https://www.udemy.com/course/java-multithreading-concurrency-parallel-programming-2e/",
      "bio": "Java MultiThreading, Concurrency, Parallel Algorithms, Asynchronous programming , Executors, CompletableFuture and more",
      "objectives": [
        "Mastering Concurrency and Multi threading in Java",
        "Basics of Multithreading & Concurrency",
        "Advanced Multithreading & Concurrency",
        "Parallel Programming and algorithm practices"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction To Multitasking and MultiThreading": [
          "Section Introduction",
          "Multitasking and Multithreading",
          "What is Thread ? My Multithreading ?"
        ],
        "Creating Thread Thread Scheduler and Understanding the lifecycle of a Thread": [
          "Section Introduction",
          "Creating Thread | Different Ways",
          "Thread Scheduler and Thread Life Cycle"
        ],
        "MultiThreading API and Lifecycle Methods": [
          "Section Introduction",
          "Thread Name and Thread Priorities",
          "Yield Method",
          "Join Method",
          "Sleep Method",
          "Interrupting Threads",
          "Summary"
        ],
        "Concurrency Challenges & Race Conditions": [
          "Section Introduction",
          "Memory Areas and data Sharing among threads",
          "Race Condition,Data Race Atomic and Non-Atomic operations",
          "Facing the challenges",
          "Summary"
        ],
        "Achieving Mutual Exclusion or Solving the challenges": [
          "Section Introduction",
          "Critical section, Implicit Locking with Synchronized Keyword",
          "Implicit locking with Synchronized Methods",
          "Implicit locking with Synchronized block",
          "Wait,Notify,NotifyAll | Inter-Thread Communication",
          "Explicit Lock- Lock Interface",
          "Explicit Lock- ReentrantLock class",
          "Thread Safety and Immutable Classes",
          "Summary"
        ],
        "Liveness Problems | DeadLock | Starvation | LiveLock": [
          "Section Introduction",
          "Deadlock,starvation,livelock"
        ],
        "Daemon Threads": [
          "Daemon Threads"
        ],
        "More MultiThreading | ThreadGroups | Executors | ThreadPool | Callable | Future": [
          "Section Introduction",
          "Thread Groups",
          "Custom Thread Groups",
          "Thread Pool - Executor Framework",
          "Executor Framework Callable",
          "Callable and Futures",
          "Thread Local",
          "Section Summary"
        ],
        "Concurrent Collections And Concurrent Utilities": [
          "Section Introduction",
          "Need of Connecurent Collections",
          "Conncurent Modification",
          "How Conncurent Collection Solved the problems",
          "ConncurentHashMap Hierarchy and Methods",
          "ConncurentHashMap internal Implementation",
          "ConncurentHashMap in Multi-threading Environment Program Demo",
          "CopyonWrite ArrayList",
          "CopyOnWriteArraySet",
          "Count Down Latch",
          "Cyclic Barrier",
          "Blocking Queue",
          "Exchangers",
          "Semphores",
          "Summary"
        ]
      },
      "requirements": [
        "Basic Java Prgramming"
      ],
      "description": "BEST in Class course for programmers to learn multitasking, MultiThreading and Parallel programming paradigm.\nObjective :\nComputers can execute more than one statements at a time this is called parallel processing. These days when there are multi core processors are easily available programmers should defiantly take advantage of parallel programming for scalable and highly performing and responsive application. This is only possible using Multi Threading programming.\nMulti threading programming comes with certain complexities and sometimes difficult to program. This objective of this course is make to enable -\nBasic Multi Threading\nAdvanced Multi threading\nMulti Processing\nConcurrent Collections\nParallel algorithms.\nAsynchronous Programming using Completed Future\nParallel Streams for Faster processing of Collections.\nIf you are able to learn these concepts - you will be able to create applications, ready to scale and highly responsive.\n\n\nWe will start from very basics and will deep dive into the very advanced concepts.\nWe will start from basics by understanding -\nIntroduction To Multitasking and Multihreading\nCreating Thread and Understanding Its Life\nThreading API\nThen we will move further to challenges associated with -\nConcurrency Challenges\nConcurrency Challenges &  Race Conditions\nFurther we will discuss into solutions to the challenges\nAchieving Mutual Exclusion or Solving he challenges\nLiveness Problems\nThe we will move into some related concepts\nDaemon Threads\nFurther in the discussion we will move to some advanced concepts related to MultiThreading -\nAdvanced Multithreading\nThread Groups\nThread Pool and Executors\nThread Local\nCallable and Future\nThe we will discuss Concurrent Collections and Concurrent Utilities\nNeed of Concurrent Collections\nConcurrent Modification Exception\nHow Concurrent Collection Solved the problems\nConncurentHashMap Hierarchy and Methods\nConncurentHashMap internal Implementation\nConncurentHashMap in Multithreading Environment Program Demo\nCopyonWrite ArrayList\nCopyOnWriteArrayList - Constructors and Methods\nCopyOnWriteArraySet\nCount Down Lache\nCyclic Barrier\nBlocking Queue\nExchangers\nSemphores\nThen  we will write and solve some Algorithms using parallel processing\nMulti Processing and Parrlel Comutin Algorithums\nImplementing a Multithreading Chat Serer\nWe will also Discuss CompletableFuture is used for asynchronous programming in Java.\n\n\nHope you will enjoy the journey - please don't forgot to ask questions in Q&A and we will respond as quickly as possible.\nLast but not least - you got an option to return back the course within 30 days it you find it does not fulfill your needs\nSee you in the Course and Happy Learning\nBest ,\nMohit",
      "target_audience": [
        "Students or Working professionals who wants to advance their Multithreading concepts",
        "Students or Working professionals who wants to practice multi threading and parallel algorithms"
      ]
    },
    {
      "title": "Javascript Programming For Everyone",
      "url": "https://www.udemy.com/course/javascript-programming-for-everyone/",
      "bio": "Learn To Code Javascript Like a Professional Programmer! Perfect for Frontend Web Developers Who Want To Become Coders!",
      "objectives": [
        "Javascript From Beginner To Advanced",
        "How To Pick a Coding Text Editor",
        "Variables, Numbers, and Math",
        "Conditional If/Else & Comparisons",
        "While and For Loops",
        "Arrays, Objects, and Functions",
        "How To Build FizzBuzz",
        "How to Create Math Flashcards"
      ],
      "course_content": {},
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access, a Web Browser, and a Free Text Editor"
      ],
      "description": "In this course we'll learn the Javascript programming language from an absolute Beginner level all the way to Advanced in no time at all!\nThis course is aimed at the absolute beginner, you don't need any coding experience at all!\nWe'll start out by setting downloading and installing the Sublime Text Editor - for free. That's the only tool you'll need to start writing and running Javascript code.\nThen, we'll dive into very basic computer science concepts. Things like:\nPrinting to the Screen\nVariables\nNumbers and Simple Math\nComparison Operators\nAssignment Operators\nAfter that, we'll move into more intermediate topics like:\nConditional If/Else Statements\nWhile Loops\nFor Loops\nFizzbuzz\nFinally we'll finish up with more advanced topics like:\nArrays\nObjects\nFunctions\nAfter that we'll learn web development things like\nPop Ups\nWeb Forms\nAnd More...\nTowards the end of the course we'll put everything we've learned together and build a fun little math flashcard web app. You'll be surprised at how quick and easy this will actually be!\nJavascript is one of the greatest programming languages to learn, and learning has never been this easy!\n\nI'll see you on the inside!\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the Javascript programming Language"
      ]
    },
    {
      "title": "C# in Depth: Puzzles, Gotchas, Questions at Interviews",
      "url": "https://www.udemy.com/course/csharp-in-depth/",
      "bio": "C# Tips and Traps: learn things you didn’t know and become a more robust advanced C# programmer",
      "objectives": [
        "Write code with more confidence",
        "Avoid Date and Time Pitfalls",
        "Avoid LSP Violations",
        "Write more robust code",
        "Pass C# Interview",
        "Understand how C# arithmetic works"
      ],
      "course_content": {
        "Before taking the Course": [
          "How to Ask Questions",
          "Download Sources",
          "Join .NET Community of Students"
        ],
        "Evil Structures": [
          "Outline",
          "Mutating Through Readonly Fields",
          "Mutating Through Arrays",
          "Mutating Within Using Block",
          "Conclusion"
        ],
        "Generics, Arrays, LSP and Variance": [
          "Outline",
          "Specializations",
          "Constraints",
          "Variance with Arrays and Generics",
          "Liskov Substitution Principle",
          "LSP Violation Demo",
          "More on Variance and Covariance",
          "Conclusion"
        ],
        "Math Puzzles": [
          "Outline",
          "Floating Point Numbers",
          "Arithmetic Overflow",
          "Check for Arithmetic Overflow",
          "Rounding Puzzle",
          "Decimal and Money",
          "Conclusion"
        ],
        "Collections and LINQ": [
          "Outline",
          "Altering a List",
          "LINQ. Deferred Execution",
          "LINQ. Closure with For and Foreach",
          "Generics Conversion",
          "Conclusion"
        ],
        "Methods and Overloading": [
          "Outline",
          "Overloading Base Method",
          "Method Hiding",
          "Property vs Method. Optional Parameters",
          "Implementing Abstract Classes",
          "Conclusion"
        ],
        "DateTime Puzzles": [
          "Outline",
          "Concepts. Preparing for Puzzles",
          "General Puzzles",
          "DateTime Roundtrip",
          "Arithmetic on Dates",
          "Calculating Age",
          "Conclusion"
        ],
        "FAQ at Interviews": [
          "Outline",
          "Abstract Class vs Interface",
          "Implementing \"Dispose\" Pattern",
          "Encapsulation and Information Hiding",
          "Encapsulation in Practice",
          "What is Interning?",
          "Constant vs Readonly",
          "Lock vs Monitor",
          "How to Rethrow Exceptions",
          "StringBuilder vs String",
          "Conclusion"
        ],
        "Miscellaneous Puzzles": [
          "Weird Nullable Comparisons",
          "Out Arguments",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "At least basic understanding of C#"
      ],
      "description": "This is an advanced C# course.\nBuild a solid foundation in C# learning odd cases related to how the language is designed\n\nThis course contains mostly practical puzzles learning which you get a better C# developer. You can find out on the Internet tons of impractical puzzles which don’t make you a better C# developer. This is not about this course. Yes, of course, even impractical puzzles sometimes are helpful especially if you’re preparing for a C# interview. However, I bet on puzzles which teach you the thing you absolutely need to understand. Indeed, this course deepens your understanding of C#. Apart from that, you’ll learn some very important things like the problem of types substitution. You’ll learn about the fundamental problems related to processing date and time values. Believe me, you’ll be astonished!\nThis course is built in a manner of a game. I’ll show you code examples in Visual Studio and ask to answer the question related to that code example. You’ll have some time to come up with your own answer and after that we continue. Puzzles, gotchas and cautionary tales are presented here to frighten and inspire you! Regardless of your current skills, you’ll remember things you’ve forgotten, learn things you didn’t know and become a more robust programmer.\nSo, this course is \"must see\" for anyone who wants to improve his knowledge of C#.\n\nHere is my Teaching Approach\nNo fluff, no ranting, no beating the air. I respect your time. The course material is succinct, yet comprehensive. All important concepts are covered. Particularly important topics are covered in-depth.\nTake this course, and you will be satisfied.\nContent and Overview\nThis course is aimed at all kind of developers. It provides solid theoretical base reinforced by the practical material.\nIn short, this advanced C# course covers the following topics:\nThe evilness of the mutable structures. You’ll see several examples when mutable structures demonstrate the unexpected behavior.\nGenerics and arrays including specializations, constraints on generics, variance and covariance, Liskov substitution principle and more\nThe pitfalls in arithmetic: how floating-point numbers are implemented, how to compare them, how arithmetic overflow behaves with different types, how rounding works, the difference between decimal and money\nCollections and LINQ: how to alter an existing list, the deferred execution of LINQ expressions, the peculiarities of closures within for and foreach loops, list conversion\nMethods and Overloading: overloading base methods, method hiding, when to prefer property over method; the reasons on why to avoid optional parameters, implementing abstract classes\nDate and Time puzzles: concepts related to dates and times including how a computer stores time, UTC and GMT, time zones, global and local perspectives; time-zone related puzzles, roundtrips, arithmetic on dates, how to calculate the age.\nFAQ at C# Interviews: abstract classes versus interfaces, how to implement the Dispose pattern, what is the difference between encapsulation and information hiding, encapsulation in practice, strings interning, constant versus read-only fields, lock versus monitor, how to rethrow exceptions, when to use StringBuilder instead of string\nAnd yet a short section of miscellaneous puzzles   Enroll and start an exciting journey learning C# puzzles!",
      "target_audience": [
        "Anyone who wants to improve his C#",
        "Anyone who wants to prepare for a C# interview"
      ]
    },
    {
      "title": "Kotlin: Master Kotlin Programming - Step by Step Guide!",
      "url": "https://www.udemy.com/course/kotlin-master-kotlin-programming-step-by-step-guide/",
      "bio": "No prior knowledge is required for this course, you will be learning Kotlin development from scratch.",
      "objectives": [
        "Learn to configure environment for Kotlin development",
        "Discover how to mimic the concept of static in Kotlin using Companion Objects along with Object-Oriented Kotlin programming",
        "Explore recursive functions, pattern matching, and immutable data structures.",
        "Learn higher-order lambda expressions and generics.",
        "Apply the new Android Kotlin KTX extensions to make app development more concise, pleasant, and idiomatic.",
        "Get the grips on Extension functions and Data classes",
        "Grasp the Kotlin Standard Library API",
        "Use Kotlin to build a DSL"
      ],
      "course_content": {
        "Learn Kotlin Programming": [
          "The Course Overview",
          "Introduction to Kotlin",
          "Installing Software on Windows",
          "Installing Software on Mac",
          "Installing Software on Linux",
          "Writing Your First Kotlin Program",
          "Exploring Your First App",
          "Exploring Variables and Data Types",
          "Demo – Variables and Data Types",
          "Playing with String Templates",
          "Kotlin Expressions – If",
          "Kotlin Expressions – When",
          "Using Loops in Kotlin",
          "Handling Exceptions",
          "Introduction to Kotlin Functions",
          "Declaration of Functions",
          "Exploring the Default Parameters",
          "Using Named Parameters",
          "Avoiding Stack Overflow Exception by Using Tail Recursive Function",
          "Defining a Class in Kotlin",
          "Working with Constructors and init Block",
          "Exploring Inheritance",
          "Exploring Interface",
          "Using Data Classes",
          "Understanding Kotlin Statics",
          "‘object’ Declaration",
          "Using Companion Object",
          "Introduction to Higher-Order Functions and Lambda Expressions",
          "Using Higher Order Function and Lambda",
          "Working with Closures",
          "Implement ‘it’ keyword",
          "Implement ‘with’ and ‘apply’ Keywords",
          "Introduction to Arrays",
          "Exploring Lists – Mutable and Immutable",
          "Filtering Data",
          "Modifying Data",
          "Exploring Set",
          "Exploring Map",
          "Handling Null Values",
          "Exploring Extension Functions",
          "Putting it all together: the Power of Kotlin",
          "Test Your Knowledge"
        ],
        "Hands On Functional Kotlin": [
          "The Course Overview",
          "Functions",
          "Side Effects",
          "Immutability",
          "Recursive Functions",
          "Fibonacci Sequence",
          "Generics",
          "Lambda Expressions",
          "Higher-Order Functions",
          "Lazy Evaluation",
          "Function References",
          "Monads",
          "Destructive Declaration",
          "Partial Application",
          "Curried Functions",
          "Forward Compose",
          "Functional List Implementation",
          "Implementing forEach, Map, and Other Extensions",
          "Sealed Classes",
          "Pattern Matching",
          "Modeling Problems in FP Style",
          "Coroutines",
          "Arrow Library",
          "ID, Option, Either, Ior Monads",
          "Try, Eval Monads",
          "Io, Async Monads",
          "Reader Monads",
          "High Level App Design",
          "JavaFx, Arrow and Coroutines",
          "Interfaces of Components",
          "Components Implementation",
          "Binding Components Together",
          "Testing Components",
          "Test Your Knowledge"
        ],
        "Kotlin – Tips, Tricks, and Techniques": [
          "The Course Overview",
          "Using an Expression Body to Reduce a Function to a Single Line",
          "Making Code More Readable with when Blocks",
          "Simplifying Functions with Named Arguments and Default Parameters",
          "Using Extension Functions and Properties to Add More Features",
          "Multiple Method Calls on an Object for Easier Readability",
          "Recommended Methods to Avoid NullPointerExceptions",
          "Using let for Handling Null Expressions",
          "Kotlin Methods for Eliminating Nulls from a Collection",
          "Recommended Methods for Thread Safe Calls",
          "Using Singletons for Thread Safe Code",
          "Simplifying Class Properties with Constructor Parameters",
          "Using Secondary Constructors for Additional Flexibility",
          "Implementing Custom Behavior for Fields for Adding Functionality",
          "Using Object Expressions for Thread Safe Calls",
          "Using Companion Objects to Replace Java Static Fields",
          "Using Lambdas to Simplify Defining Functions",
          "Using Higher Order Functions for Clean Code Abstraction",
          "Using Immutable Collections to Support Safe Multithreading",
          "Using Filter and Map to Quickly Manipulate Collections",
          "Using Data Classes to Conveniently Package and Protect Data",
          "Using the Kotlin Bytecode Tool to Observe Additional Overhead",
          "Using Late and Lazy Properties to Delay Initialization",
          "Inlining Higher Order Functions to Avoid Additional Java Calls",
          "Applying const to Companion Object Properties to Avoid Generating Extra Methods",
          "Using Sequences to Avoid Creating Temporary Lists",
          "Using Core KTX Module for Easier Use of Android APIs",
          "Using SQLite KTX Module to Simplify Database Transactions",
          "Using Fragment KTX Module to Simplify Fragment Transactions",
          "Using Collection KTX Module for Extensive Collection Support",
          "Using Work KTX Module for Simplifying Asynchronous Requests",
          "Test Your Knowledge"
        ],
        "Mastering Kotlin for Android Development": [
          "The Course Overview",
          "Kotlin’s Primary Features",
          "Kotlin Compiles to Java Bytecode",
          "Kotlin Applications",
          "Using Kotlin in Android Studio",
          "Properties, Late Initialized Properties",
          "Functions",
          "Default Function Arguments",
          "Named Function Arguments",
          "Control Flow",
          "Classes and Constructors",
          "Visibility Modifiers, Differences from Java",
          "Interfaces",
          "OOP, Extending Classes",
          "Null Safety and Smart Casts",
          "Data Classes",
          "Object Keyword",
          "Lambdas",
          "Higher Order Functions and Member References",
          "Standard Library API",
          "Extension Functions",
          "Receiver Functions",
          "Inline Functions",
          "Generics",
          "Reified Generics",
          "Operator Overloading",
          "Delegated Properties",
          "Kotlin Type System",
          "Concurrency in Kotlin",
          "Coroutines Explained",
          "Building Coroutines",
          "Coroutines in Action",
          "Domain Specific Languages",
          "Kotlin DSL Constructs",
          "Building a DSL in Kotlin",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "No prior knowledge is required for this course, you will be learning Kotlin development from scratch."
      ],
      "description": "Kotlin is a statically typed language whose syntax is more expressive and concise than Java’s. Kotlin has been adopted by Google as a first-class language for developing Android apps. Since then, Kotlin has gained a huge popularity worldwide among developers due to its highly appreciable features therefore it also helps to build amazing applications in an easy and effective way.\nThis course is an easy-to-follow guide with a step-by-step approach which will get you up and running with Kotlin basics and fundamentals such as variables, data types, string templates, expressions, null values, and loops. You will also learn to design application structures using functional programming concepts and implement business logic using tools provided by Arrow library. Next you will be introduced to using the Android Studio IDE which covers the concepts such as functions, lambdas, properties, object oriented code, safety aspects and type parameterization, Microservices, testing, concurrency which will guide you to write Kotlin’s code to production. Finally you will be mastering to integrate Kotlin in any existing Android project built using C++ or Java.\nBy the end of the course, you’ll be able to write faster & cleaner code to build your own robust program in Kotlin to make your life easy as a Kotlin developer. Also you will be more proficient in using Kotlin for any kind of app development.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Learn Kotlin Programming starts by showing you how to set up the Kotlin environment and install Intellij IDEA to write Kotlin code. After that, the course dives into the Kotlin basics and fundamentals such as variables, data types, string templates, expressions, null values, and loops. Moving on, you’ll learn how to write functions in Kotlin. You’ll explore Kotlin as an Object-Oriented Language by exploring interfaces and various Kotlin classes . Next you’ll dive into Functional programming in Kotlin using Lambdas and higher-order functions . Finally, you’ll explore the collection framework and perform operations such as filtering and sorting using Predicates and FlatMaps in Kotlin. By the end of the course, you’ll be able to build your own robust program in Kotlin.\nIn the second course, Hands On Functional Kotlin demonstrates Kotlin language features and use-cases as well as popular functional programming concepts and techniques. You will learn to design application structures using functional programming concepts and implement business logic using tools provided by Arrow library.\nIn the third course, Kotlin – Tips, Tricks, and Techniques you will discover new possibilities with Kotlin and improve your app development process. In this course, you will work with interesting tools and techniques on examples which you can adopt straightaway. You will speed up your development with less coding and get faster results. By the end of this course, you will be able to write faster, cleaner code and make your life easy as a Kotlin developer.\nIn the fourth course, Mastering Kotlin for Android Development you will begin with exploring all the features of Kotlin language that make the language better alternative to Java. It will show you the environment setup, and the difficulty level will grow steadily with the features covered next. Moving on, we’ll introduce you to using the IntelliJ IDE, which plays an integral role in Kotlin development. We’ll cover Kotlin’s basic programming concepts such as functions, lambdas, properties, object-oriented code, safety aspects, type parameterization, and finally concurrency, which will guide you to write Kotlin’s code to production. By the end of the video, you will be proficient in using Kotlin for any kind of app development.\nAbout the Authors\nBook of Brains creates and distributes high-quality technology training content. We aim to teach technology the way it is used in industry and the professional world. Our trained team of professionals delivers hands-on workshops and training content for mobile as well web development technologies. We constantly monitor current industry trends and keep our training materials and workshops up to date.\n\n\nStepan Goncharov lives in Singapore. He is involved in helping local developers to grow by sharing knowledge and organizing Kotlin Singapore User Group events. He has been engineering apps and games for Android since 2008. He has experience in QA, as a product manager, marketer, blogger, consultant, engineering manager, and much more. He has been involved in the development of apps that nobody uses and apps with millions of users worldwide. He currently works at Grab, actively uses Kotlin and Rx, and spends more and more time contributing to OSS. When he is not recording video courses or organizing events for developers, he travels around South East Asia skiing on a wakeboard.\n\n\nNigel Henshaw is a mobile software developer who, as well as providing software development services, loves to share his knowledge through his YouTube channel and website. Nigel originates from New Zealand, where he started out as an electrician. After one too many electric shocks, he wisely decided on a career change. After completing a two-year diploma in Computer Science and Technology at the Auckland University of Technology, Nigel relocated to London for new opportunities. He landed a job as a test engineer with a pioneering tech company called Psion, who were one of the first to develop hand-held devices and mobile operating systems. Before too long, Nigel was transferred to the base porting team and found himself in the midst of porting operating systems and writing device drivers with Symbian OS using C++.\n\n\nNigel has experienced many wonderful opportunities through the software industry, working in the UK, Scotland, and Japan. He has held jobs as a software engineer, consultant, project manager, and general manager of a remote development site. In his spare time, Nigel is currently learning Japanese, enjoys cycling and running, and likes to finish off the day by soaking in a Japanese hot spring.\n\n\nMarko Devcic is a Software Engineer currently working as an Android Developer for Austrian company mySugr in Vienna. He has a Master's degree in Engineering from University of Zagreb in Croatia. Over the years, he has worked with various technologies and languages, mostly C# and Java. He is passionate about technology and software development. He loves reading about programming languages and writing simple and clean code. In his spare time, he writes code for his personal projects, and contributes to open source projects. You can follow him on Github (username deva666). He also likes to write about Kotlin, C#, and programming in general on his web page.",
      "target_audience": [
        "This course is for programmers who are new to Kotlin. Professional developers and students who want to learn more about Kotlin and functional programming concepts. Moreover it is intended for all levels, and developers with prior knowledge can benefit because the course also covers advanced topics of Kotlin."
      ]
    },
    {
      "title": "Python Made Simple: The Complete Automation Course",
      "url": "https://www.udemy.com/course/mastering-python-automation-for-every-day-life/",
      "bio": "Python automation - Selenium WebDriver - Git and GitHub - Complete Test Automation Framework - Social Media Automation",
      "objectives": [
        "The fundamentals of Python programming.",
        "How to enhance your coding skills through exercises.",
        "CSS selectors and their application in test automation frameworks.",
        "Xpath and its usage in automating tasks with Selenium.",
        "Building an end-to-end project using Selenium and WebDriver.",
        "Understanding and working with the Pytest framework for test automation.",
        "Utilizing logging for effective test automation.",
        "Designing and developing a robust test automation framework.",
        "Git and Github for version control and collaboration.",
        "Automating WhatsApp for streamlined communication.",
        "Email automation techniques. 12. Automation strategies for managing YouTube channels.",
        "Facebook automation for efficient tasks.",
        "Techniques to improve YouTube views.",
        "Automating tasks on the Telegram platform.",
        "Master Python programming, from basics to advanced concepts.",
        "Gain proficiency in automating tasks using Python.",
        "Apply CSS selectors to facilitate test automation.",
        "Harness Xpath to automate tasks with Selenium.",
        "Build a complete end-to-end project using Selenium and WebDriver.",
        "Develop skills in using the Pytest framework for test automation.",
        "Learn logging techniques to enhance test automation.",
        "Develop a well-designed and robust test automation framework.",
        "Understand Git and Github for version control and collaboration.",
        "Automate WhatsApp for efficient communication.",
        "Streamline email communication through automation.",
        "Automate YouTube channel management tasks.",
        "Apply automation strategies to accomplish tasks on Facebook.",
        "Enhance YouTube views using automation techniques.",
        "Automate tasks on the Telegram platform for increased efficiency."
      ],
      "course_content": {},
      "requirements": [
        "Basic programming knowledge (python fundamentals would be helpful)",
        "Familiarity with web technologies (HTML, CSS) is a plus but not mandatory",
        "A computer with python and required software installed would be helpful",
        "Eagerness to learn and explore the world of automation!"
      ],
      "description": "Welcome to the 'python automation masterclass' course on Udemy!\nEmbark on an exciting journey to become a proficient Python automation expert! In this comprehensive course, you'll learn how to leverage Python's versatility and power to automate a wide range of tasks, ultimately streamlining your everyday life with cutting-edge tools and techniques.\nThe course is thoughtfully divided into sixteen sections, each focusing on essential topics and practical applications:\nSection 1: Introductions\nFamiliarize yourself with the course structure and discover the potential of automation with Python.\nSection 2: Getting started with Python basics\nBuild a solid foundation by exploring fundamental Python programming concepts.\nSection 3: Improve Your coding skills with Python exercises\nSharpen your coding skills with hands-on exercises designed to challenge and enhance your understanding of Python programming.\nSection 4: Learn CSS selector for test automation framework\nDive into web automation by mastering CSS selectors for efficient interaction with web page elements.\nSection 5: Learn XPath for test automation with Selenium\nExpand your toolkit with XPath for precise automation of complex web structures.\nSection 6: End-to-End project with a complete method in Selenium and WebDriver\nApply your skills to build a full automation project using Selenium and WebDriver.\nSection 7: Learn pytest framework of Python, getting ready for the test automation framework\nDiscover the powerful pytest framework for effective and scalable automated tests.\nSection 8: Logging - get prepared for the test automation framework\nLearn effective logging practices for diagnosing issues and tracking automation execution.\nSection 9: Design and develop a test automation framework\nElevate your skills by designing a modular and scalable test automation framework.\nSection 10: Learn Git and Github\nMaster Git and Github basics for collaboration and version control in automation projects.\nSections 11-16: Automation for WhatsApp, Email, YouTube, Facebook, YouTube views, and Telegram\nExplore automation in popular platforms, from WhatsApp to Telegram, optimizing your communication and workflows.\nThroughout this course, you'll gain not only a deep understanding of Python automation but also develop problem-solving and analytical skills. Learn industry best practices, write clean and maintainable code, and understand the ethical considerations of automation.\nJoin us on this exciting journey to unlock the full potential of Python automation and revolutionize your everyday life. Enroll now for a transformational learning experience!",
      "target_audience": [
        "Beginners who want to kickstart their automation journey with python",
        "Experienced programmers who wish to expand their skill set and automate various task across different platform",
        "Anyone who is interested in improving their skill of collaborating as part of a team"
      ]
    },
    {
      "title": "Practical Reactive Streams with Akka and Java",
      "url": "https://www.udemy.com/course/practical-reactive-streams-with-akka-and-java/",
      "bio": "Learn how to build asynchronous, non-blocking reactive streams with back-pressure - a really practical hands-on course",
      "objectives": [
        "What are reactive streams and when should you use them",
        "How to build asynchronous, non-blocking, reative streams with back-pressure",
        "The Akka Streams API and GraphDSL",
        "How to correctly implement asynchronous boundaries and parallelism",
        "How to integrate Akka Actors into reactive streams"
      ],
      "course_content": {},
      "requirements": [
        "Basic Java knowledge",
        "Knowledge of Akka using Java and the Akka Typed API is needed",
        "This is a follow on course to the \"Practical Java concurrency with the Akka Actor Model\" course"
      ],
      "description": "This course builds on the \"Practical Java concurrency with the Akka Actor Model\" course and will extend your knowledge of using the actor model with Akka and Java to create reactive streams.\nReactive Streams are an essential tool in building real-world concurrent applications with the actor model – they allow us to build more complex processing scenarios, deal with varying data loads effectively, and provide the foundation for connecting our applications to external systems (which is covered in the Akka Http course).\nFor developers new to this technology it can be tough to get started, so in this course we cover everything from scratch. We build up the knowlege step by step, meaning you'll have no problems following along and understanding everything we do.\n\nThe course is full of practical real-world scenarios – we’ll be taking the blockchain mining application that we built in the Practical Java concurrency with the Akka Actor Model course a few steps further to make it even more realistic.\nPlease note that although Akka is built in Scala, no Scala knowledge is needed for this course - the course covers Akka with Java and we won't be writing any Scala code.\nThis course covers the newer Akka Typed API only.",
      "target_audience": [
        "Novice and experienced Java developers who need to enhance their concurrent programming skills.",
        "Programmers who need to implement reactive streams"
      ]
    },
    {
      "title": "PHP & Mysqli Tutorials for beginners and professionals",
      "url": "https://www.udemy.com/course/php-mysqli-tutorials-for-beginners-and-professionals/",
      "bio": "Learn PHP & MySQLi web development from scratch with real time examples and become a professional PHP developer",
      "objectives": [
        "After taking this course you will be able to develop your website development skills to build websites and apps",
        "You will be able to start your own business, or launch a new professional website",
        "You can work online as a freelancer for client and can earn money from your web development skills",
        "You can work as full stack web developer by knowing and practicing the basics with PHP"
      ],
      "course_content": {
        "Complete Basics of PHP": [
          "Introduction",
          "Variables + Constants and Data Types",
          "Arrays in PHP",
          "Conditions and Operators",
          "Loops",
          "Forms submission and Request Methods",
          "PHP Sessions",
          "Functions",
          "Sending Emails with PHP",
          "File Handling with PHP",
          "File Uploading with PHP",
          "Mysql Datbase and SQL Insert Query with PHP",
          "SQL Select and Delete Query with PHP",
          "SQL Update Query with Login / Register setup"
        ],
        "Pagination in PHP and JQuery": [
          "Pagination using PHP (Part 1 )",
          "Pagination using PHP and Jquery (Part 2)"
        ],
        "User Registration with email verification Process": [
          "Creating and submitting Registration Form",
          "Handling registration form and sending verification email",
          "Creating and handling login form"
        ],
        "Generate PDF and Excel files using PHP": [
          "Generate PDF file using PHP",
          "Generate Excel file using PHP"
        ]
      },
      "requirements": [
        "Assuming to know a bit of HTML for starting this course. Otherwise this course is for beginners and professionals.",
        "You don't necessarily need to know anything before taking this course. This course has everything that you want to learn for developing websites.",
        "Basic HTML can be enough for students to start this course"
      ],
      "description": "PHP is the best web development language in the world from so many years. It is gaining popularlity day by day. More than 80% of the websites in the world are made in PHP. One of the example is Facebook. PHP with MYSQL database combine can give you the best website for your own business.\nIf you want to learn PHP this is the place for you. You can learn everything about PHP in no more than 13 lectures.\nHow is this course unique from there?\nThis course helped beginners as well as experts solving regular problems during coding. In this course you will learn all the basic functionalities for your regular use. This course is all about students who are willing to learn PHP and want their programming skills enhanced. Becoming a professional is not difficult until you find the right mentor. You will learn all sort of Best Practices that professionals use for web application development.\nThis course will make you a professional in your field\nBasic PHP understanding\nBasic MySQLI understanding\nAdvance PHP features\nMYSQLI database queries\nCreating a complete registration and Login functionality\nRecord Insert, Display, Delete and Update using PHP\nYou will learn the code that uses by professionals All the BEST PRACTICES that will make your application faster secure and accurate.\nAfter taking this course you will be able to work on either your own Website or work as a freelancer taking PHP based projects and can work on them with high rates. You can define your hourly rates on different platforms for working in PHP. As I mentioned above more than 80% of websites in the world are made in PHP. That means there will be a lot of work online. People searching for professionals like you to work on their website. Fix any bugs or create websites from scratch. Best of Luck!",
      "target_audience": [
        "This course is for students who want to start their career in web development.",
        "This course is for beginner developers who want to start professional work with PHP",
        "This course is for students who are willing to start their online earnings with some skills.",
        "This course is for those people who want to create their own website in PHP and don't have enough knowledge of it",
        "This course is for people who want to start freelancing related to web development"
      ]
    },
    {
      "title": "Python Fundamentals",
      "url": "https://www.udemy.com/course/python-fundamentals-techy/",
      "bio": "Learn Python programming from scratch with video tutorials and coding challenges",
      "objectives": [
        "Fundamentals of Python",
        "Execute your first python program",
        "How to take User Inputs",
        "Use the different types of comparison operators and logical operators",
        "Use PyCharm to write Python Codes"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need know",
        "Computer to coding Python",
        "An Internet Connection",
        "The desire to learn"
      ],
      "description": "Welcome to world best python fundamentals course. Python is a widely used general-purpose, high level programming language. It is a programming language that lets you work quickly and integrate systems more efficiently.\nIt is a programming language with wide variety of well-paying jobs in many fields, including machine learning, data science, and web development.\nPython is relatively easy to learn when compared to pretty much any other programming language since most of the time, using Python to do something will take less lines of code than with another programming language.\nPython can be used on a server to create web applications, connect with database systems, read and modify files. Also, Python can use to handle big data and perform complex mathematics.\nIn this course will cover python basics to start your python journey. We'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Python developer.\n\n\nThroughout this course, we cover fundamentals of Python through video lectures and programming challenges, including:\nPython Variables\nUser Inputs\nType Conversions\nStrings and String methods\nArithmetic Operations\nComparison Operators ( Less than , Less than or Equal, Greater than, Greater than or Equal , Equal to , Not Equal to )\nIf / else Statements\nLogical Operators ( AND , OR )\nWhile Loops\nList\nList Methods\nFor Loop\n\n\nThank you for joining with Us !",
      "target_audience": [
        "People who interest in computer science",
        "People who interest in computer programming",
        "People who interest in Python",
        "People who want to learn Python Fundamentals"
      ]
    },
    {
      "title": "Quick Course - Java interview preparation - for junior",
      "url": "https://www.udemy.com/course/quick-course-java-interview-preparation-for-junior/",
      "bio": "Learn all the hard and soft skills you need to answer Java interview questions correctly !",
      "objectives": [
        "You will answer many interview questions more correctly and accurately",
        "Cope professional java interview with more confidence",
        "You will achieve better understanding in the Java topics learned in the course."
      ],
      "course_content": {
        "Welcome!": [
          "Welcome!",
          "Course Overview"
        ],
        "Installation": [
          "Java Installation",
          "eclipse Installation",
          "Learning material Installation"
        ],
        "Fundamental Java Question": [
          "String Questions - Intro",
          "Java String basic Questions",
          "Understanding String Pool",
          "String pool - cont",
          "Immutable Objects Questions",
          "StringBuffer and StringBuilder Questions",
          "toString() method",
          "String Questions - Wrap up",
          "String Questions - Quiz"
        ],
        "Arrays": [
          "Arrays Intro",
          "Arrays Overview",
          "Arrays Demo",
          "How to initialize an array?",
          "What are array's limitation?",
          "How to remove duplication from Array?"
        ],
        "Object Oriented Concepts and Questions": [
          "Object Oriented - Intro",
          "What is Encapsulation?",
          "What is encapsulation? - Code Sample",
          "Inheritance Basic",
          "Inheritance Basic - Interview Questions",
          "What is Polymorphism?",
          "What is Abstraction?",
          "Object Oriented Concepts Quiz",
          "Default Method in Java 8",
          "Overriding vs Hiding Methods",
          "Overriding vs Hiding Quiz"
        ],
        "Collection Questions": [
          "Collection Framework - What is it?",
          "List interface",
          "ArrayList Theory and Interview questions",
          "ArrayList Demo - Basic",
          "ArrayList Demo - Using Indexes",
          "ArrayList - Dynamic Resizing Questions",
          "ArrayList VS Vector",
          "Why should we use Iterator?",
          "ArrayList Quiz"
        ],
        "Java Puzzles": [
          "Puzzles Section - Intro",
          "How to reverse a String?",
          "How to reverse a String effectively?",
          "How to reverse a String with recursion?",
          "How can I find prime number?",
          "How to reverse a number?",
          "What is wrong with this code? lesson 1",
          "What is wrong with this code? - 2"
        ],
        "Course Wrap up": [
          "What next?",
          "Course Wrap-up - Thank you!"
        ]
      },
      "requirements": [
        "Basic knowledge in Java",
        "Basic knowledge in Eclipse IDE"
      ],
      "description": "Hello and Welcome!\nScared of coding interview?\nThis course will practice you with the must know Java interview questions.\nIn addition it will also prepare you to crack Java puzzle pattern. If you can learn the pattern, you can beat coding interview!\nIf you want to get your dream job, and you are serious about your career you should take this course.\nIn this course we will review question from different areas:\nJava Fundamentals – String, String Pool, Immutable Objects and more.\nObject Oriented Concepts -  encapsulation, polymorphism, inheritance and abstraction and more.\nArrays - advantages and disadvantages, initialization, search, sort, puzzle.\nPuzzles -  Programming puzzles and  \"What wrong with this code?\" questions are frequently asked in software programming Interviews in order to check your knowledge, your logical thinking and how strong and clear your mind is.\nLesson structure\nThe lecture were divided to short lectures of about 5 min each, so you will be able to come back to a specific topic and replay the lesson without the need to search in a specific long video for  the part that you would like to repeat on.\nEach lesson will include several questions; all of them are from real interviews. We'll go over the questions and answer them.\nQuiz\nSummarizing each few classes there will be a quiz, designed to repeat the material and help the student understand it even better.",
      "target_audience": [
        "A student to junior developer who want to get a job as Java developer"
      ]
    },
    {
      "title": "Interactive Beginners Guide to MATLAB",
      "url": "https://www.udemy.com/course/matlab-programming/",
      "bio": "A Step-by-Step Beginners Guide to the Most Powerful Programming Language for Engineers, Developers, & Scientists",
      "objectives": [
        "Master the core MATLAB Programming skills I've used over the past 20 years to make over $1.8M",
        "Use MATLAB to learn advanced technical topics",
        "Position yourself as a Local Expert at work, school, or among friends",
        "Execute MATLAB Commands and Scripts with ease",
        "Create your own Functions and MATLAB programs with confidence",
        "Impress others by Creating & Analyzing Data and professionally Plotting results",
        "Impress others by instantly analyzing data and creating professional graphs"
      ],
      "course_content": {},
      "requirements": [
        "MATLAB R2007 or later to complete exercises (Free Trial Available)",
        "No toolboxes are needed for this course"
      ],
      "description": "Develop Valuable MATLAB Skills!\nIn this course, you will master the core MATLAB Programming skills through instruction and interactive exercises. I've boiled down the vast amount of information available to deliver exactly what you need to learn to get started in MATLAB. The topics were hand selected personally based on 20 years of practical MATLAB experience during my engineering career. The courses focuses on the top skills that enabled me to make over $1.8M and can help you become a \"Local Expert\" in just a few hours. Imagine having the ability to execute MATLAB commands with ease or create you own functions at will when you're called to solve a problem. What if you could magically impress your boss with professional graphs or analyze data like a champ? Become that person that your peers call upon when they need help and develop your MATLAB skills to create amazing tools, software, or whatever your heart desires.\nBecome a Local MATLAB Expert in a Few Hours\nNow is your time to master the basics of MATLAB! Enroll in this course and receive:\nStreamlined Topics and Step-by-step Instruction based on real-world experience\nInteractive Training Exercises\nSurprise Bonus Lectures\n24/7 Access to your Instructor and other Students through the Discussion Forum\nStreamlined Content - Avoid Drinking from the FIre Hose!\nI created this course so you don't have to browse the internet looking for answers. In this course, we show you each topic step-by-step and you can practice with exercises at the end of the section. By the end of this course you will learn how to:\nNavigate the Environment and Execute Commands with ease\nCreate Vectors, Matrices, Arrays and other Variables with confidence\nPerform Operations on large data sets with one command\nGenerate professional looking Plots for presentations and documentation\nAutomate a group of commands with Scripts and interact with user input\nDevelop your own Functions and build MATLAB programs\nMastering the basics of MATLAB gives you the ability to learn advanced topics more easily, create amazing tools and software, and conduct engineering tasks with ease. Enroll today to get started.",
      "target_audience": [
        "Engineers, Scientists, and Programmers",
        "Professionals, Students, & Hobbyists",
        "MATLAB Programmers looking to refresh their basic skills",
        "Anyone who wants to master the basic fundamentals of MATLAB"
      ]
    },
    {
      "title": "REST API's RESTFul from 0 to AWS with Spring Boot and Docker",
      "url": "https://www.udemy.com/course/rest-apis-restful-from-0-to-aws-with-spring-boot-and-docker/",
      "bio": "Learn how to develop a REST API from absolute 0 by meeting all RESTful maturity levels and deploy on AWS using Travis CI",
      "objectives": [
        "10% Theory and 90% Practice",
        "Developing a RESTFul API from absolute 0",
        "Best practices for developing API's",
        "Understand the theoretical foundation of REST",
        "How to work with Postman",
        "How to make RESTful requests using Postman",
        "Understand the RESTful Maturity Model",
        "Top REST Verbs",
        "Using parameters via query, path, header, and body",
        "API Pagination",
        "API Versioning",
        "Understand Media Types and Content Negotiation",
        "Upload files in your API",
        "Make download files available in your API",
        "You will learn in practice HATEOAS",
        "Document an API with Swagger",
        "SQL and Migrations Basics",
        "REST Authentication Techniques and Security with JWT",
        "How to use some design patterns",
        "Split application architecture into different layers",
        "Leverage AWS core services like RDS, EC2, IAM User and ECS",
        "Continuous Integration and Deploy involving Docker, Github, Travis CI, and Amazon AWS",
        "Deploy your API on AWS Cloud",
        "BONUS - Docker Basics",
        "BONUS - Docker Compose Basics",
        "BONUS - How to deploy the project in the cloud"
      ],
      "course_content": {},
      "requirements": [
        "Basic concepts of Object Orientation",
        "Basic knowledge of SQL and any relational database",
        "Basic concepts of Java",
        "Basic concepts of HTTP Request and Response"
      ],
      "description": "**** Come specialize in API development with the revolutionary Spring Boot framework that is a real fever today! *****\nTIP FOR BRAZILIANS: Use a pesquisa da Udemy e se inscreva na versão em português do curso\n\n\nThis course teaches the core fundamentals of APIs REST and RESTful Webservices both in theory (10%) and in practice (90%). This knowledge will be applied to the implementation of a RESTful API with SpringBoot 2.x and Java. We will start with a simple application that will gradually advance to more complex scenarios. We will cover HTTP notions, verbs/methods, parameter types, pagination, file upload and download, versioning, HATEOAS, Swagger, authentication, and security with JWT and Spring Security, etc.\nWe will add Docker support and deploy our API on an Amazon AWS EC2 instance manually. And to close the course with a golden key, we will implement a continuous integration pipeline involving Docker, Github, Travis CI, and an ECS Cluster on Amazon AWS. It will be amazing you simply commit your code and push to Github, Travis CI builds Docker Images and deploys it on Amazon \"Automagically\".\nFinally, the main objective of the course is to serve as a starting point from which students can expand their knowledge of the subject and \"walk with their legs.\"",
      "target_audience": [
        "Early career developers who need to learn how to develop a REST/RESFul API from scratch",
        "Software developers and engineers",
        "For back-end developers with knowledge of ASP NET, Rails, Django, Node, etc. and want to learn how to do what they know but with other technology",
        "Front end developers who want to become full-stack",
        "Anyone who has tried other REST/RESTful Webservices tutorials and found that they were very slow, outdated, and boring!"
      ]
    },
    {
      "title": "Salesforce Real time project on lightning web component.",
      "url": "https://www.udemy.com/course/lightning-web-components-with-project/",
      "bio": "Implementation of live project step by step",
      "objectives": [
        "Implementation of Lightning Web Component with a project",
        "how to use navigation in lwc",
        "how to access data in lwc",
        "how to use pub sub mechanism in lwc",
        "how to handle component composition",
        "lightning navigation",
        "advance filter in component"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Salesforce LWC",
        "knowledge of Apex"
      ],
      "description": "This tutorial is only project implementation with using all concepts of Lightning web components. If you knows LWC and want to have handson with real time project implemention, go ahead and enroll for this tutorial. If you are completely new to LWC, i would suggest first check my \"Salesforce Lightning web component\" tutorial.\nLWC is a new programming model with following web standards to develop salesforce lightning components and this is the only tutorial with maximum hour of video. Each session explained with many live coding to make your LWC concepts deep clear so that you can make your journey to be expert in LWC.\nAll code are also added in the tutorial for your reference and we are updating this with each new feature monthly wise.\n\n\nThis course is designed from basic to expertise level. if you are beginner , nothing to worry, its very easy and well organized course to make your learning simple and smooth. Also for expert, you can learn deep knowledge of LWC and add many more skills in your professional career with live real-time examples and scenarios with series of codes.\nDetail implementation of -:\nObject Schema and field details used for  Project ( can create or can install provided package)\nCreate lightning component with Server side call to get records\nDisplay server records in Search\nDisplay details of each record in custom component\nButton logic implementation\nNavigation to other record and pages in aura\nUse of Event to communicate between components\ncomponent composition\nuse of map and many more with detailed explanation\nEach module explained very clearly with live code and development and explained each resource deeply to make everyone to understand this clearly.",
      "target_audience": [
        "Students with Salesforce Knowledge",
        "salesforce developer",
        "salesforce consultant"
      ]
    },
    {
      "title": "Develop Discord Bots in Python - Ultimate Course",
      "url": "https://www.udemy.com/course/develop-discord-bots-in-python/",
      "bio": "Learn how to create practical and useful Discord Bots for everyday usage",
      "objectives": [
        "Learn how to develop practical discord bots for everyday usage",
        "Learn the basics of Python and the discord library",
        "Learn how to read and understand documentations",
        "Learn how to work with the Discord API",
        "Learn how to make a Music Bot, a Battleships Bot and a Poll Bot",
        "Learn how to handle errors",
        "Learn how to code in a object-oriented way",
        "Learn the basics of Asynchronous Programming"
      ],
      "course_content": {},
      "requirements": [
        "A working PC with Windows, MacOS or Linux installed",
        "A discord account",
        "Some prior programming knowledge (for-loops, if-statements etc.) is not mandatory, but very helpful",
        "An IDE where you can run programs in Python (Visual Studio Code is recommended)"
      ],
      "description": "In this Course, you will learn how to make useful, practical discord bots for your everyday usage.\nWhat's inside this Course?\nFirstly, you're going to learn the syntax of Events and Commands, which are the basics of discord .py\nAfter that, we're going to dive further into more Advanced topics that deepen your understanding of this library, like Tasks, Cogs and Checks\nThen, we're going to make 3 useful discord bots:\nMusic Bot\nBattleships Bot\nPoll Bot\nThese are all bots that that you can use in your everyday discord-life\nWhy this Course? Why choose me as your tutor?\nBecause I have 7 Years of Experience coding in Python\nBecause I know how to break down complex matters and explain them in a straightforward and simple way due to my experience teaching various STEM-subjects to students\nBecause you will create several projects throughout the Course that will teach you step by step how to code a discord bot\nBecause I grew up speaking English and even though I am not a native speaker, I can confidently say that you will have no problem understanding me because I speak in a fluent, loud and clear way\nBecause I can offer you assistance whenever you have any trouble or questions regarding my Course\nBecause this Course teaches you everything there is to learn about the discord .py library - after the Course, you can make any discord bot you want!",
      "target_audience": [
        "Discord Users wanting to code discord bots that they can use in their server",
        "Beginner to Intermediate Python Programmers who want to learn something new",
        "Those who want to create fun and creative bots and games",
        "Beginner Python Programmers curious about what is possible"
      ]
    },
    {
      "title": "Predict fraud with data visualization & predictive modeling!",
      "url": "https://www.udemy.com/course/frauddetectionpythontensorflow/",
      "bio": "Create a credit card fraud detection model! Learn predictive modeling, logistic regression, and regression analysis.",
      "objectives": [
        "Learn how to code in Python, a popular coding language used for websites like YouTube and Instagram.",
        "Learn TensorFlow and how to build models of linear regression",
        "Make a Credit Card Fraud Detection Model in Python. Learn how to keep your data safe!"
      ],
      "course_content": {},
      "requirements": [
        "Please download PyCharm Community Edition 2017.2.3."
      ],
      "description": "\"There are not that many tutorials on PyCharm. In fact, hardly any. Because of this one, I got my first broad overview of not only PyCharm, but also TensorFlow. Bottom-line: It's a great value for money.\" ⭐ ⭐ ⭐ ⭐ ⭐\n\"Incredible course. Looking forward for more content like this. Thank you and good job.\" - Joniel G.\n\"Makes learning Python interesting and quick.\"\n------------------------------------------------------------------------------------------------------------\nDo you want to learn how to use Artificial Intelligence (AI) for automation? In this course, we cover coding in Python, working with TensorFlow, and analyzing credit card fraud. We interweave theory with practical examples so that you learn by doing.\nThis course was funded by a wildly successful Kickstarter.\nAI is code that mimics certain tasks. You can use AI to predict trends like the stock market. Automating tasks has exploded in popularity since TensorFlow became available to the public (like you and me!) AI like TensorFlow is great for automated tasks including facial recognition. One farmer used the machine model to pick cucumbers!\nJoin Mammoth Interactive in this course, where we blend theoretical knowledge with hands-on coding projects to teach you everything you need to know as a beginner to credit card fraud detection.\nEnroll today to join the Mammoth community!",
      "target_audience": [
        "Beginners who want to learn to use Artificial Intelligence.",
        "Prior coding experience is helpful. For an in-depth intro to Python, search for our Ultimate Python Beginner Course.",
        "Topics involve intermediate math, so familiarity with university-level math is very helpful."
      ]
    },
    {
      "title": "Exploratory Data Analysis with Pandas and Python 3.x",
      "url": "https://www.udemy.com/course/exploratory-data-analysis-with-pandas-and-python-3x/",
      "bio": "Extract and transform your data to gain valuable insights",
      "objectives": [
        "Improve your understanding of descriptive statistics and apply them over a dataset.",
        "Learn how to deal with missing data and outliers to resolve data inconsistencies.",
        "Explore various visualization techniques for bivariate and multivariate analysis.",
        "Enhance your programming skills and master data exploration and visualization in Python.",
        "Learn multidimensional analysis and reduction techniques.",
        "Master advanced visualization techniques (such as heatmaps) for better analysis and rapidly broaden your understanding"
      ],
      "course_content": {
        "Descriptive Statistics": [
          "The Course Overview",
          "Basic Statistical Measures",
          "Variance and Standard Deviation",
          "Visualizing Statistical Measures",
          "Calculating Percentiles",
          "Quartiles and Box Plots"
        ],
        "Dealing with Missing Data": [
          "Finding Missing Values",
          "Dealing with Missing Values",
          "Hands-on with Dealing with Missing Values",
          "Case Study: Missing Data in Titanic Dataset"
        ],
        "Dealing with Outliers": [
          "What are Outliers?",
          "Using Z-scores to Find Outliers",
          "Modified Z-scores",
          "Using IQR to Detect Outliers"
        ],
        "Univariate Analysis": [
          "Types of Variables",
          "Introduction to Univariate Analysis",
          "Skewness and Kurtosis",
          "Univariate Analysis over Olympics Dataset"
        ],
        "Bivariate Analysis": [
          "Introduction to Bivariate Analysis",
          "Correlation Coefficient",
          "Scatter Plots and Heatmaps",
          "Bivariate Analysis: Titanic Dataset",
          "Bivariate Analysis: Video Game Sales"
        ],
        "Multivariate Analysis": [
          "Introduction to Multivariate Analysis",
          "Multivariate Analysis over Titanic Dataset",
          "Multivariate Analysis over Pokemon Dataset",
          "Simpson’s Paradox",
          "Correlation Is Not Causation"
        ],
        "Bringing It All Together": [
          "Wine Data Analysis: Initial Setup",
          "Red Wine Analysis",
          "White Wine Analysis",
          "White Wine versus Red Wine: Analysis"
        ]
      },
      "requirements": [
        "Basic Python programming experience required."
      ],
      "description": "How do you take your data analysis skills beyond Excel to the next level? By learning just enough Python to get stuff done. This hands-on course shows non-programmers how to process information that’s initially too messy or difficult to access. Through various step-by-step exercises, you’ll learn how to acquire, clean, analyze, and present data efficiently.\nThis course will take you from Python basics to explore many different types of data. Throughout the course, you will be working with real-world datasets to retrieve insights from data. You'll be exposed to different kinds of data structure and data-related problems. You'll learn how to prepare data for analysis, perform simple statistical analyses, create meaningful data visualizations, predict future trends from data, and more!\nAbout the Author\nMohammed Kashif works as a Data Scientist at Nineleaps, India, dealing mostly with graph data analysis. Prior to this, he worked as a Python developer at Qualcomm. He completed his Master's degree in Computer Science from IIT Delhi, with a specialization in data engineering. His areas of interests include recommender systems, NLP, and graph analytics. In his spare time, he likes to solve questions on StackOverflow and help debug other people out of their misery. He is also an experienced teaching assistant with a demonstrated history of working in the Higher-Education industry.",
      "target_audience": [
        "This course is for Python developers, data analysts, and IT professionals who want to move toward a career as a full-fledged data scientist/analytics expert; anyone who wants to use data analytics/machine learning to enrich their current personal or professional projects will also benefit from it."
      ]
    },
    {
      "title": "Django Made Easy. Build an application for companies",
      "url": "https://www.udemy.com/course/django-2-made-easy-2019-build-an-application-for-companies/",
      "bio": "Dive in and learn Django step-by-step from beginner to intermediate level by building a practical project!",
      "objectives": [
        "Django MVT architecture",
        "Signals",
        "Context Processors",
        "Custom Middleware",
        "Django allauth authentication",
        "Generating PDF files",
        "Views : Class and Function Based Views",
        "Manager with QuerySet methods",
        "Filters & Custom Filters",
        "Mixins & Custom Mixins",
        "Forms & ModelForms + custom validation",
        "Sessions"
      ],
      "course_content": {
        "Introduction & settings": [
          "Setting up the text editor",
          "Selecting the terminal",
          "Before we begin"
        ],
        "First steps in Django": [
          "The source code for this project",
          "Setting up the project",
          "Django MVT",
          "Creating first Model",
          "Templates",
          "Views",
          "Understanding how the \"views\" work on basic examples part 1",
          "Understanding how the \"views\" work on basic examples part 2"
        ],
        "Exploring field options and types in Django Models": [
          "Understanding field types and options",
          "Cheat sheet on field types and options",
          "Quiz on fields"
        ],
        "Reports App": [
          "Introduction",
          "Creating the reports app",
          "Working with models in Reports App part 1",
          "Working with models in Reports App part 2",
          "Working with models in Reports App part 3",
          "Django Forms",
          "Displaying basic version of forms",
          "Applying Crispy Forms",
          "Adding additional styling",
          "Font awesome kit code",
          "Creating the table for report records",
          "Activating modal forms",
          "Adding jquery",
          "Applying some cosmetic changes",
          "Continue on working with the forms part 1",
          "Continue on working with the forms part 2",
          "Continue on working with the forms part 3",
          "Continue on working with the forms part 4",
          "Args & kwargs",
          "Continue on working with the forms part 5",
          "Fixing the scroll + protecting the view",
          "Delete view",
          "Update view",
          "Adding Home Page with the Select Line Form part 1",
          "Adding Home Page with the Select Line Form part 2",
          "Adding \"Get Report\" page part 1",
          "Adding \"Get Report\" page part 2",
          "Summary Page",
          "Creating the first Manager",
          "Working with sessions",
          "Custom QuerySet methods from the Manager",
          "Adding template to the summary view",
          "Creating Custom Filters",
          "Adding problems to the template",
          "Creating PDF report",
          "PDF for Windows",
          "Optimizing our code",
          "Adding the navbar & footer"
        ],
        "Posts App": [
          "Overview",
          "Creating the Models",
          "Adding the get upload path",
          "Customizing the Django Admin",
          "Creating the Post Form",
          "Creating the view for adding posts part 1",
          "Creating the view for adding posts part 2",
          "Django Signals part 1",
          "Django Signals part 2",
          "Introduction to context processors",
          "Cleaning the database",
          "Applying context processors",
          "Working on the Like Post functionality part 1",
          "Working on the Like Post functionality part 2",
          "Styling the post board",
          "Adding Custom Middleware",
          "Creating Custom Mixin",
          "Testing posting with images",
          "Writing the comment model",
          "Creating the comment form",
          "Working on the detail page part 1",
          "Working on the detail page part 2",
          "Adding the first comment via form",
          "Working on the detail page part 3",
          "Adding avatar to the comments & using related_name",
          "Adding the delete button & comments count",
          "Protecting the delete path"
        ],
        "Profiles App": [
          "Working on the profile app part 1",
          "Working on the profile app part 2",
          "Working on the profile app part 3",
          "Working on the profile app part 4"
        ],
        "Authentication": [
          "Django allauth installation and setup",
          "Adding custom signup form",
          "Testing the custom signup form",
          "Styling",
          "Final touches"
        ],
        "Tests": [
          "Django Quiz Level 1"
        ],
        "Bonus 1 - Django with Tailwind CSS (this section is being updated)": [
          "What we are going to create",
          "Setting up the project",
          "Installing Tailwind CSS + hello world"
        ]
      },
      "requirements": [
        "There are no specific requirements for this course, but it's \"good to have\" basic html, bootstrap & python knowledge"
      ],
      "description": "Hi! Welcome to this course dedicated to Django. For the next hours we will be working together on building a reporting application for companies with a social board (to share problems, ideas & events). Step by step we'll discuss the most important & interesting features  of Django, that will allow you to create your own web applications after finishing this course. Some of the most important topics are related to: signals, context processors, filters, class and function based views, creation of PDF report and much more! This course comes with a PDF presentation that will help you understand and remember the course content. Ready to get started!?",
      "target_audience": [
        "Everyone who is eager to learn django and ready for a challenge to complete step-by-step a big project, that this course provides"
      ]
    },
    {
      "title": "Application Development with Dynamics 365: 2-in-1",
      "url": "https://www.udemy.com/course/application-development-with-dynamics-365-2-in-1/",
      "bio": "Leverage the power of Dynamics 365 to build and support enterprise scale business applications with Dynamics 365",
      "objectives": [
        "Understand the basics of Microsoft Dynamics 365 and how to quickly analyze CRM data to get a holistic view of your entire business",
        "Integrate with the entire Microsoft Office Suite and work with Dynamics CRM data",
        "Build, test, and maintain consistent custom HTML user interface with Dynamics 365 Unified UI for all devices and formats",
        "Analyze data using dashboards, charts, and reports",
        "Work with Dynamics CRM using mobile and tablet applications",
        "Explore new and advanced features of Microsoft Dynamics 365 Customer Engagement"
      ],
      "course_content": {
        "Start Up Guide For Microsoft Dynamics 365": [
          "The Course Overview",
          "What is CRM and Why it is needed?",
          "Introduction to Microsoft Dynamics 365",
          "Setting Up a Trial Instance of Dynamics 365",
          "Moving around in Microsoft Dynamics 365",
          "Personalize Dynamics to Suit Your Needs",
          "How Does Dynamics CRM Data Model look?",
          "Play with Records (CRUD Operations)",
          "Import/Export data in CRM",
          "Typical Sales Cycle - Demo",
          "Advanced Find – Strongest Search Tool",
          "Create Views",
          "Explore Trends with Charts",
          "Need 360 View of Business",
          "Working with Reports",
          "Go Mobile with Dynamics CRM Mobile Client",
          "Go Mobile with Dynamics CRM Tablet Client",
          "Exploring How Well Dynamics CRM Talks to Outlook",
          "Ease Up the Sales Document Writing",
          "Start Analyzing Data with Excel Templates",
          "Do More with Dynamics 365",
          "Test Your Knowledge"
        ],
        "Designing and Building Custom Apps using Dynamics 365": [
          "The Course Overview",
          "Dynamic 365 Solution Setup & Deployment Strategy",
          "Visual Studio Environment Setup",
          "Managed or Unmanaged?",
          "Setting up our SpaceFlight365 Solution",
          "Package Deployer",
          "Adding Visual Studio Package Dependencies",
          "Adding NuGet Dependencies",
          "Adding Javascript Dependencies",
          "Enabling Source Control using VSTS & Git",
          "Managing Branches",
          "Introduction to spkl Task Runner",
          "Creating a Plugin Project with spkl",
          "Deploying a Web Resource Project with spkl",
          "Managing Dynamics 365 Metadata",
          "UnPacking Solutions with spkl",
          "Merging Solution Packager Metadata",
          "Packing Solutions with spkl",
          "User Story Mapping",
          "Using State Charts to control flow",
          "State Behavior in Dynamics 365",
          "App Data Modelling",
          "Unified Client & Apps",
          "Back to Basics",
          "What is an Account?",
          "Multi-Select Fields",
          "Timezones",
          "Base currency",
          "What is Continuous Integration (CI)?",
          "Adding Plugin Unit Tests",
          "Adding Javascript Unit Tests",
          "Setting up a CI Build",
          "Creating VSTS Build Definition",
          "Debugging broken builds",
          "Creating a Release Definition",
          "Introduction to Data Integration with Dynamic 365",
          "Logical & Physical Integration Framework",
          "Exchange Rate Integration",
          "Exchange Rate Action Plugin Unit Tests",
          "Implement Exchange Rate Plugin",
          "Deploy Exchange Rate Plugin",
          "Flight Telemetry Virtual Entity",
          "Custom Virtual Entity Data Provider",
          "Registering Custom Data Provider",
          "Airport Flight Status Integration",
          "External Integration User Setup",
          "Workflow to apply status update",
          "Check In Status Integration",
          "Client or Server?",
          "Taking client scripts to the next level",
          "Deploying & Debugging ClientHooks",
          "Calling Dynamics 365 SDK Services from JavaScript – a moving target!",
          "Calling the WebApi from JavaScript",
          "Command Bar Customizations",
          "Adding Buttons & Commands using the Ribbon Workbench",
          "Wiring up the JavaScript to the Cancel Booking Command",
          "Dynamic Flyouts on Forms",
          "Extending Grids",
          "Adding Grid On Change Events",
          "Grid Control Events",
          "Adding Form Notifications",
          "Adding Grid Status Icons",
          "MVVM Pattern",
          "Setting up the Client UI library and unit tests",
          "Adding Seat Selection logic to the View Model & Unit Testing",
          "Wiring up View Model to View",
          "Adding Knockout Bindings",
          "Responding to Drag Events",
          "Adding Touch Support",
          "Loading data for Seat Selection",
          "Testing inside the Unified Client",
          "Saving the Seat Assignments",
          "Handling Errors",
          "Preparing for deployment",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "No prior knowledge of Microsoft Dynamics 365 required."
      ],
      "description": "Microsoft Dynamics 365 is a business application that combines CRM and ERP capabilities to help you empower your employees, engage customers, and optimize operations. To build dynamic and incisive business solutions with Dynamics 365, you’ll need to have basic understanding of the Microsoft Dynamics CRM platform.\nThis comprehensive 2-in-1 course contains in-depth content balanced with tutorials that put theory into practice. It’s focus is on giving you both the understanding and the practical examples that will allow you indulge in the world of Microsoft Dynamics 365.\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Start Up Guide For Microsoft Dynamics 365, course starts off with setting up a Dynamics CRM trial instance and understanding its basic navigation. You will then learn to perform CRUD operations on CRM records. You will also learn to analyse data using dashboards, charts, and reports. Next, you will learn to import and export data from Dynamics CRM. You will work with Dynamics CRM using Outlook.\nThe second course, Designing and Building Custom Apps using Dynamics 365, course starts off with setting up fast and effective collaborative development and a mature Continuous Integration pipeline using Microsoft Team Services, npm, Nuget, and Gulp. You will then learn a framework for effective data modelling of entities within Dynamics 365 and how functionality can be built up in iterations using user story mapping. You will also learn about base currencies to ensure that your custom apps do not run into any challenges as they grow in complexity and usage. Next, you will see how logical and physical architecture of integration with external systems is examined using the new Web-Hooks and Virtual Entity features, allowing data to be both consumed and output in a robust and efficient fashion. You will learn about the new Xrm client API features of the Unified Client provide exciting new ways of extending your forms and grids which are demonstrated using the sample application being built. Further, you'll learn how to extend your Microsoft Dynamics 365 Customer Engagement business applications using HTML, TypeScript, and CSS using KnockoutJS via the MVVM design pattern so that your logic can be unit tested and deployed with easy and effortless repeatability.\nBy the end of this Learning Path, you’ll be able to build and support enterprise scale business applications with Dynamics 365.\nAbout the Authors:\nPiyush Paliwal has been working as a Microsoft Dynamics CRM consultant for more than half a decade and have been associated with Microsoft for a few years now. During this time, he has helped various customers manage their sales pipeline by bringing their business processes in Dynamics CRM or Dynamics 365. In his spare time, he usually prefers to go for a drive.\nScott Durow is a Microsoft Business Solutions MVP specializing in Dynamics 365. He is a committed and passionate software architect & technologist with a successful track record of realizing business vision through enterprise/application architectures that are tightly aligned with budget and timescales. By combining his detailed technical knowledge with a clear grasp of the wider commercial issues, Scott can identify and implement practical solutions to real business problems. He is an excellent communicator and technical author, regularly speaking at conferences in the UK and abroad. Scott’s software career spans more than 20 years where he has moved from assembly language device driver programming, industrial control software and then into enterprise business applications. His experience covers work in Europe, North America, and Japan. He is also the author of the Ribbon Workbench for Dynamics CRM and SparkleXRM.",
      "target_audience": [
        "This Learning Path is for new users of the Microsoft Dynamics CRM platform, as well as existing users who want to learn more and become more proficient."
      ]
    },
    {
      "title": "JSON JavaScript Data Quick Course JSON for beginners",
      "url": "https://www.udemy.com/course/json-javascript/",
      "bio": "Learn how JSON works and how you can use JSON data via JavaScript in your web applications and web site",
      "objectives": [
        "Connect to APIs and retrieve JSON data",
        "Parse JSON data from Strings",
        "Be able to work with JavaScript Objects",
        "Create JSON object arrays"
      ],
      "course_content": {
        "Introduction to JSON": [
          "JSON Introduction",
          "Resources",
          "Web Development Setup",
          "What is JSON",
          "JSON as Data",
          "Solution Create JSON",
          "Source Code Lesson 4",
          "JSON details",
          "Solution output JSON to HTML",
          "Source Code Lesson6",
          "Arrays of Objects",
          "Source Code Lesson 7",
          "Solution Array Objects",
          "Source Code Lesson 8",
          "JavaScript Loop Object Data",
          "Solution Loop Object Data",
          "Source Code Lesson 10",
          "JavaScript add to Object",
          "Source Code Lesson 11",
          "JavaScript JSON methods",
          "Source Code Lesson 12",
          "Local Storage Values",
          "Source Code Lesson 13",
          "Solution Local Storage",
          "Source Code Lesson 14",
          "JavaScript Fetch.",
          "Source Code Lesson 15",
          "Solution JavaScript Fetch",
          "Source Code Lesson 16",
          "Catching Errors Shorthand",
          "Source Code Lesson 17",
          "JSON with multiple items",
          "Solution forEach JSON",
          "JSON Conclusion",
          "Source Code Lesson 20"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Bonus Resources and Readings"
        ]
      },
      "requirements": [
        "Basic JavaScript/jQuery",
        "Understanding of web development",
        "Desire to learn about JSON and APIs",
        "Basic Web development understanding"
      ],
      "description": "This course is perfect for anyone who wants to learn JSON quickly in a fast paced course teaching you all the core fundamentals of JSON and how to apply JSON data in web applications.  Use JavaScript to bring JSON formatted data into your web sites to easily load content.  JSON course that helps you  to get started quickly.  Start writing JSON within JavaScript code today.\nLearn JSON HERE - it will open the door to many possibilities.\nStep by step learning covering the core parts of JSON to get you using it quickly.  Source code and everything you need to get started is included.\nBonus free PDF download covering a full summary with source code of all the lessons in this course.\nCourse covers\nWhat JSON is and how it works\nLinks and top resources for JSON and JavaScript\nJavaScript Objects and JSON how they work and how you can use JSON within JavaScript code\nArray objects and objects that contain arrays and more\nHow to iterate through all the JSON data objects and output them into your HTML page\nChallenges in lessons with step by step solutions\nJavaScript JSON methods\nLocal Storage to store JSON data\nUsing JavaScript Fetch to retrieve JSON data and responses\nAll this and much more\nYou'll get friendly support in the Q&A area and all the source code available for download.\nThis Offer Won't Last Forever\nYou will be amazed at how easy it can be to do some much.\nGo ahead and hit that \"take this course\" button to start learning the JSON Today.\nJavaScript is a recommended prerequisite to this course, it covers JSON and JavaScript interacting with JSON.  JavaScript and JSON objects are similar in nature and understanding how to use JavaScript objects is a foundation for working with JSON.\nTaught by an instructor with over 20 years of web development experience, ready to help you learn and answer any questions you may have.\nWhat are you waiting join now to start learning JSON, you have nothing to lose.",
      "target_audience": [
        "Web developers",
        "anyone interested in JSON",
        "Anyone working with APIs",
        "Front end applications developers",
        "Anyone who wants to access web APIs"
      ]
    },
    {
      "title": "R Crash Course - Learn R-programming in 2 hours: R & RStudio",
      "url": "https://www.udemy.com/course/r-crash-course-introduction-to-r-rstudio-r-programming/",
      "bio": "R Crash Course - a short and concise introduction to R and RStudio, R-programming for the Beginners",
      "objectives": [
        "This is a R crash course for anyone who previously had no or very little contact with script-based programming in R",
        "The main goal is to establish the basic understanding needed for more advanced courses that uses R language, RStudio and R-programming",
        "Learn how to install R and RStudio on your computer",
        "The best about this course that in very concise manner: you will be able to learn all the fundamentals of R-programming in 2 hours!",
        "You will learn Package Management in R & RStudio",
        "How to calculate in R & RStudio",
        "All data types in R-language",
        "Learn about data frames, indexing data frames and dealing with the missing values in R & RStudio",
        "Learn about functions, control structures and for loops in R & RStudio",
        "All the R-scripts used in this course will be also provided to you"
      ],
      "course_content": {},
      "requirements": [
        "Computer & interenet connection"
      ],
      "description": "Welcome to the R Crash Course - Your Gateway to R Programming for Beginners\nIf you're new to script-based programming in R or have limited prior exposure, this course is your ideal starting point. Our primary objective is to equip you with the foundational knowledge required for more advanced R language, RStudio, and R-programming courses. Not only is this an excellent introduction for beginners, but it also serves as a baseline course for those looking to refresh their R-programming skills in preparation for upcoming data science courses in R.\nCourse Highlights:\nIn just two hours, you'll master the fundamental principles of R-programming, setting the stage for your journey into the world of R. Here's a glimpse of what you'll learn:\nPackage Management\nPerforming Calculations with R\nUnderstanding Variables\nExploring Vectors\nManipulating Matrices\nNavigating Lists\nWorking with Data Frames\nHandling Missing Values\nLeveraging Functions\nImplementing Control Structures\nUnveiling the Power of For Loops\nYou'll also receive all the R-scripts used in this course for your reference.\nIdeal for Professionals\nThis course caters to professionals across various domains, including data scientists, statisticians, geographers, programmers, social scientists, geologists, and any experts requiring statistics and data science skills within their field.\nPrerequisite Notice\nPlease note that this course is designed for individuals with no prior knowledge of R programming. If you are already an intermediate or advanced R user, this introductory course may not be suitable for your needs.\nLet's Dive In!\nReady to embark on your R programming journey? Let's dive in and build a strong foundation that will enable you to confidently explore the exciting world of R. Join this course now and get started on your path to becoming an R programming expert!",
      "target_audience": [
        "The course is ideal for professionals such as data scientists, statisticians, geographers, programmers, social scientists, geologists, and all other experts who need to use statistics & data science in their field.",
        "This course is NOT for you, if you an intermediate or advanced user of R and don't need an introduction to R programming!"
      ]
    },
    {
      "title": "Self Driving and ROS 2 - Learn by Doing! Plan & Navigation",
      "url": "https://www.udemy.com/course/self-driving-and-ros-2-learn-by-doing-plan-navigation/",
      "bio": "Create a ROS2 Self-Driving robot with Python and C++. Master Navigation, Planning and Decision Making with Behavior Tree",
      "objectives": [
        "Create a Real Robot, powered by ROS 2",
        "Mastering ROS2, the latest version of the Robot Operating System",
        "Robotics Theory",
        "Implement Path Planning algorithms",
        "Implement Motion planning algorithms",
        "Create Advanced Navigation logics using Behavior Trees",
        "Simulate a Self-Driving robot in Gazebo",
        "Programming Arduino for Robotics Applications",
        "Master Nav2"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Python or C++",
        "Basic knowledge of Linux",
        "No prior knowledge of ROS or ROS 2 required",
        "No prior knowledge of Robotics theory required",
        "No hardware required. All the course can be followed also using only the PC"
      ],
      "description": "Would you like to build a real Self-Driving Robot using ROS2, the second and last version of the Robot Operating System, by building a real robot?\n\n\nWould you like to get started with Autonomous Navigation of robots and dive into the theoretical and practical aspects of Navigation, Path Planning, and decision-making using Behavior Trees from industry experts?\n\n\nThe philosophy of this course is the Learn by Doing, and quoting the American writer and teacher Dale Carnegie\nLearning is an Active Process. We learn by doing; only knowledge that is used sticks in your mind.\n\n\nIn order for you to master the concepts covered in this course and use them in your projects and also in your future job, I will guide you through the learning of all the functionalities of ROS both from the theoretical and practical point of view.\n\n\nEach section is composed of three parts:\nTheoretical explanation of the concept and functionality\nUsage of the concept in a simple Practical example\nApplication of the functionality in a real Robot\n\n\nThere is more!\n\n\nAll the programming lessons are developed using both Python and C++ . This means that you can choose the language you are most familiar with or become an expert Robotics Software Developer in both programming languages!\n\n\nBy taking this course, you will gain a deeper understanding of self-driving robots and ROS 2, which will open up opportunities for you in the exciting field of robotics.",
      "target_audience": [
        "Self-Driving enthusiast",
        "Makers and Hobbists keen on robotics",
        "Software developers who want to learn ROS 2 and Robotics",
        "Students or Engineers that want to learn how to buid a robot from scratch",
        "Developers who already know ROS 2 and want to use it in a real-world application",
        "ROS Developers who want to learn and migrate to ROS 2",
        "Robotics Engineers who want to develop skills in Autonomous Navigation",
        "Beginner Python developers curious about Self-Driving",
        "Beginner C++ developers curious about Self-Driving"
      ]
    },
    {
      "title": "Java Spring Framework 5 - Build a Web App step by step",
      "url": "https://www.udemy.com/course/java-spring-framework-5-build-a-web-app-step-by-step/",
      "bio": "Master most popular Spring framework components like Core, MVC, Data, Security, and Boot, in theory, and practice.",
      "objectives": [
        "Get knowledge about Spring Framework 5 and its most popular modules like Core, MVC, Data, Security, and Boot",
        "Use Spring MVC together with Thymeleaf to create the frontend part of an application",
        "Use Spring Data and Hibernate to work with relational databases",
        "Secure application using Spring Security module",
        "Use REST to work with external APIs, and prepare your own REST endpoint to communicate between your applications",
        "After that course, you will have enough knowledge to start your career as a Spring developer",
        "Throughout the entire course, you will be developing 2 applications working together. The First will be created in standard Spring and the second one in Spring Boot",
        "Everything will be built from scratch, you will type every single line of code, and all the configuration will be done in Java, there wont be even a single line of XML configuration",
        "Source code for every practical part of that course will be available to download",
        "Even if you know the Spring framework, you can still find here something new"
      ],
      "course_content": {},
      "requirements": [
        "You are eager to learn new things",
        "You have some knowledge of the Java language",
        "Basic knowledge of HTML and databases will be helpful, but it is not required",
        "I will show you how to prepare your environment in Windows and Linux"
      ],
      "description": "In this course, you will learn what the Spring framework is and how to use it. I will also show you its most important modules.\nThe entire course is divided into 2 parts: theoretical and practical. In the theoretical part, I will present the key issues from individual modules, and in the practical part, you will practice the acquired knowledge by creating an application.\nWe'll start with Spring Core, which is Spring's basic module, here you'll learn about the Spring Container, creating the bean, Dependency Injection, and autowiring.\nNext, we will discuss Spring MVC, here you will learn how to develop web applications in Spring. I will tell you what is the MVC pattern, how the Dispatcher Servet and View Resolver works. And you will see what is the Thymeleaf and how to use it. I will also show you how to improve the look of the application by adding Bootstrap into it.\nIn the next chapter, we will discuss relational databases, you will learn how to configure Spring to work with Hibernate, I will also show you the Spring Data module.\nIn the chapter on Spring Security, we will focus on securing the application, you will learn how this mechanism works, you will learn what is the difference between authorization and authentication, and how to set access to individual resources in the application. You will also see how to configure users in-memory and in the database and how Spring encrypts passwords.\nIn the next chapter, we will focus on creating a REST API, I will show you here what is REST how to use it to communicate with other applications. In the practical part, we will use 3 external applications to download weather data for the user based on his location.\nAfter all that, we'll move on to the Spring Boot, which is used to simplify the configuration in Spring. In this chapter, you will prepare a second application that will be similar to the previous one and will communicate with it.\nDuring the course, you will prepare two web applications that will use all the discussed modules.\nWhat is very important, during the practical part you will write every single line of code, there will be no situation when suddenly some new code appears in the project. Moreover, after every practical part, you will be able to download source codes for it.\nIf you have never used Spring and want to learn about it, this course is for you, if you already know the basics of Spring, you will definitely find here a lot of new things that you did not know.\nIn the course, I am using Spring 5, and Spring Boot, all configurations are created in Java, there is not even a single line of configuration written in XML here.\nTo understand as much as possible, you should know the Java language. It would be good if you had some basic knowledge of databases and HTML but it is not necessary.\nIf you dream about starting work as a Java developer working with the Spring framework, this course is definitely for you.",
      "target_audience": [
        "Beginner Java programmers",
        "Programmers who are interested in the Spring framework",
        "Programmers who know Java and want to learn the Spring framework",
        "Students who want to start their career as Java programmers",
        "People interested in Java Backend frameworks"
      ]
    },
    {
      "title": "Python Tutorial for Absolute Beginners",
      "url": "https://www.udemy.com/course/python-crash-course-for-absolute-beginners/",
      "bio": "If you’re ready to buckle down and learn Python programming, here’s where you should start.",
      "objectives": [
        "Lay down the foundation of fundamental concepts",
        "Understand Python Data Types",
        "Work with Python Modules",
        "Correctly use Python Code Commenting",
        "Create, Sort and Modify Python Lists"
      ],
      "course_content": {},
      "requirements": [
        "The very basic understanding of Python Programming Language",
        "A genuine interest to learn"
      ],
      "description": "Feel the real power of Python and programming! The course offers you a unique approach of learning how to code by solving real world problems. Throughout the course we will be understanding how to identify and formulate the problems, what is the key to a great app, we will learn how to efficiently adopt the problem for the computer and the most important that you will be writing a lot of code! The course is structured in a way that lectures are like labs where we study the material, do the quizzes, write programs and test them! The most important that you will be involved into work a lot in order to get the best experience!\n\nPython is one of top 5 programming languages today. If you want to pursue a career, this language is a must for you.\nThis course has been created for beginners.\nYou will start the training from the ground up and will get to know the python language and its potential in and out.\nIn this Python for Beginners course, Instructor will teach you how to quickly write your first program in Python! You will also learn how to create custom modules and libraries\nTake this course now online Python course and master your skill!\nENROLL NOW !",
      "target_audience": [
        "New Developers",
        "Anyone looking to begin their programming journey.",
        "Students"
      ]
    },
    {
      "title": "Object Oriented Programming with Java",
      "url": "https://www.udemy.com/course/oop-with-java/",
      "bio": "Learn Java programming in easy steps from begining to advanced with example based training approach",
      "objectives": [
        "Basic programming with java (Java Architecture, Tokens, Data types, Operators, Conditional and Looping statements)",
        "Object oriented programming with java using object oriented concepts",
        "Advanced java programming using exception handling, multithreading, file handling and graphical applicaions",
        "Array",
        "Classes and Objects - Creating Classes and Objects, Constructors, Method overloading, \"this\" Reference, Garbage Collection",
        "Inheritance - Implementing Inheritance, Method overriding, \"final\" Keyword, Abstract Classes and Methods, Dynamic Binding",
        "Language Specific Features - \"static\" Keyword, Wrapper Classes, Package, Interface",
        "Exception Handling",
        "Multithreading - Creating Threads, Thread Life Cycle, Priorities, Method Synchronization, Thread Methods",
        "GUI Applications with Swing - TextField, Button, Radio Button, Scrollbar, Layout Managers",
        "Event handling in GUI Applications",
        "Applets",
        "Working with Files using Streams"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowlwdge of Computers"
      ],
      "description": "Learn Java programming in easy steps with example demonstrations. The course starts with fundamental concepts of object oriented programming. Then it teaches basic programming in Java followed by object oriented programming concepts. Having learned object oriented programming, It moves ahead to robust programming with exception handling and teaches concurrent programming using multithreading.\nMoving to advanced level graphical applications with swing library, event handling, applets and file handling are discussed.",
      "target_audience": [
        "Beginner and intermidiary programmers who want to learn Object Oriented Programming"
      ]
    },
    {
      "title": "Python Hacking: Build 15+ Penetration Testing Tools [2025]",
      "url": "https://www.udemy.com/course/python3-for-ethical-hacking-malware-dev-from-scratch/",
      "bio": "Build real Python hacking tools for pentesting, penetration test, ethical hacking, bug bounty & cybersecurity, security",
      "objectives": [
        "Malware development with python 3",
        "Python 3 for ethical hacking and penetration test",
        "Create advanced malwares with Pyhton 3",
        "Advanced techniques for security bypass",
        "Create custom tools for ethical hacking",
        "100+ video materials",
        "presentation for each malware and tool",
        "13+ hours of hands on experience",
        "15+ tools and malwares creation",
        "basik networking",
        "Botnets creation",
        "Internet worm creation",
        "advanced tools creation",
        "advanced malware development",
        "python 3 for hacking",
        "penetration test",
        "ethical hacking",
        "hacking",
        "python programming",
        "Network & Security",
        "Password cracking",
        "advanced malicious codes creation",
        "malware development"
      ],
      "course_content": {},
      "requirements": [
        "basik programming experience would be an advantage but not required",
        "basik IT knowledge",
        "basik networking knowledge would be an advantage but not required"
      ],
      "description": "Unlock the full power of Python 3 for ethical hacking, malware development, and penetration testing — from absolute beginner to advanced offensive security developer.\nThis hands-on, practical course is designed for students who want to master ethical hacking and Python programming side by side. You will learn by building 15+ real-world hacking tools from scratch — including reverse shells, botnets, internet worms, keyloggers, FTP/SSH brute forcers, PDF password crackers, and more.\nWe start from zero — no prior programming or cybersecurity experience needed. By the end, you’ll have the skills to write custom hacking tools, automate attacks, and understand how malicious software is developed and deployed in real-world offensive operations.\nWhat You’ll Learn\nProgramming Topics (Python 3):\nSocket Programming (TCP, UDP)\nMultithreading & Concurrency\nPython Requests & Subprocess modules\nFile I/O, Parsing, Serialization\nInteracting with the OS\nBuilding CLI tools & automation scripts\nImporting & using modules (e.g., os, socket, threading, subprocess, requests)\nWriting cross-platform code\nSending and receiving data across networks\nHacking & Malware Development Topics:\nSetting up a penetration testing lab (Linux/Windows VM setup)\nBuilding fully functional botnets and worms\nDeveloping a Python backdoor with remote shell capabilities\nWriting a custom keylogger for Linux and Windows\nAutomating brute-force attacks on FTP and SSH\nCreating a network scanner and port scanner\nBuilding a password hash cracker\nCreating PDF password brute force tools and PDF protectors\nDeveloping trojans and reverse shells\nEvading antivirus and understanding malware detection\nExploit development and automation using Python\nProjects You’ll Build\nFTP Brute Forcer – Try thousands of username-password combinations\nSSH Brute Force Tool – Automate dictionary attacks on SSH servers\nCustom Backdoor – Execute system commands remotely on compromised machines\nReverse Shell – Establish remote access to victim machines\nKeylogger – Record keystrokes silently and export logs\nBotnet Framework – Deploy multiple agents and control them from a C2 server\nInternet Worm – Build a Python worm capable of propagating across systems\nPDF Cracker – Unlock password-protected PDFs with brute-force logic\nPDF Protector – Secure your PDF files from unauthorized access\nInformation Stealer – Exfiltrate saved credentials and sensitive data\nNetwork Scanner – Identify live hosts and open ports\nPort Scanner – Detect services running on a target system\nExploit Automation Tool – Launch payloads and automate common attack vectors\nWho Is This Course For?\nAspiring ethical hackers\nStudents of penetration testing or cybersecurity\nPython developers looking to apply skills in security and malware development\nBug bounty hunters seeking to build custom recon/exploit tools\nIntermediate programmers aiming to understand offensive security programming\nWhy This Course?\nUnlike typical coding courses, this course is 100% focused on offensive cybersecurity. Every topic is taught in the context of hacking and real-world attacks. No boring theory. Every concept is demonstrated through live Python coding, real attacks, and malware behavior.\nBy the end, you will be confident in building your own hacking arsenal and ready to take your cybersecurity knowledge to the next level — whether in penetration testing, malware analysis, or red team operations.\nLab & Environment Setup\nInstall & configure Kali Linux, Windows 10, and Ubuntu in VirtualBox\nSet up a safe lab for testing tools without legal risks\nLearn how to test your malware on isolated systems\nLegal Notice\nThis course is intended strictly for educational purposes and ethical testing only. All demonstrations are performed in a controlled lab environment. Do not use these techniques on any system without explicit permission.",
      "target_audience": [
        "Aspiring Ethical Hackers: Individuals who are new to cybersecurity and want to learn how to use Python for ethical hacking and penetration testing. This course is ideal for those starting their journey in cybersecurity and ethical hacking.",
        "Python Programmers with Interest in Security: Developers who are proficient in Python and want to expand their skill set by learning how to apply Python to various hacking techniques, tools, and projects.",
        "Cybersecurity Students: Students pursuing cybersecurity degrees or certifications who are looking to supplement their education with practical, hands-on projects that demonstrate how Python can be used in real-world hacking scenarios.",
        "IT Professionals and Network Administrators: IT professionals, system administrators, or network engineers who want to enhance their security skills by learning how to identify, exploit, and protect against vulnerabilities using Python.",
        "Hobbyists and Self-Learners: Individuals who have a passion for cybersecurity, ethical hacking, or programming and are eager to learn through guided projects, even without formal training or a professional background in the field.",
        "Cybersecurity Enthusiasts Transitioning to Python: Those already familiar with other programming languages or security tools, looking to transition into Python for more powerful and flexible hacking solutions."
      ]
    },
    {
      "title": "Python Guided Project: Building Tic-Tac-Toe from Scratch",
      "url": "https://www.udemy.com/course/python-guided-project-building-tic-tac-toe-from-scratch/",
      "bio": "For beginner Python developers curious about developing a game in Python and a portfolio project for resume.",
      "objectives": [
        "Learn how to create a Tic-Tac-Toe game using Python",
        "Fundamentals of developing a game in Python",
        "Improve your logical problem solving skills",
        "How to design the game logic for the game and implement it in coding",
        "Add this as a Python portfolio project to your resume"
      ],
      "course_content": {},
      "requirements": [
        "A computer and an internet connection to watch this course",
        "Basic understanding of Python Programming.",
        "No software development experience needed, you will learn everything you need to know."
      ],
      "description": "Who is the target audience for this course?\nThis is an entry-level guided project and is about developing a game in Python. This course is designed for beginners who want to start their career journey in the field of IT and Software Engineering. This course is for beginner Python developers curious about developing a game in Python. In this guided project (course), we will implement a game (Tic-Tac-Toe) using Python programming. This will be an implementation of the Tic-Tac-Toe game using random numbers. To maintain simplicity, this game will be programmed to play automatically and no user input will be required.\n\n\nWhat is Tic-Tac-Toe?\nTic-tac-toe, noughts and crosses, or Xs and Os is a paper-and-pencil game for two players who take turns marking the spaces in a three-by-three grid with X or O. The winner is the first player to get three of the same symbols in a row (up, down or diagonally).\n\n\nWhy this course is important?\nThere are a lot of benefits of learning practical coding, some of them are as follows:\n1. Coding and programming careers have great earning potential.\n2. Demand always remains strong for coding-related jobs.\n3. Coding ability gives a new perspective to problem-solving.\n4. Learning to code offers career flexibility.\n5. Coding can be useful in jobs you might not expect.",
      "target_audience": [
        "Beginner Python developers curious about developing a game in Python.",
        "Anyone willing to add a Python portfolio project to his/her resume."
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/c-7-and-net-core-20-recipes/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "C/C++ Pointers & Applications",
      "url": "https://www.udemy.com/course/cpp-pointers/",
      "bio": "Learn the applications of pointers such as usage in dynamic arrays, linked lists, function pointers, callbacks, etc",
      "objectives": [
        "Understand in depth how pointers work",
        "Understand the applications of pointers",
        "Understand efficient implementation of basic data structures",
        "Understand how callback mechanism works through pointers and objects"
      ],
      "course_content": {
        "Introduction": [
          "Slide Deck",
          "Introduction",
          "Source Code",
          "Quick Intro to Modern C++",
          "Introduction to Pointers",
          "Examples of Pointers"
        ],
        "Static Arrays": [
          "Source Code",
          "Array Basics",
          "Examples of Static Arrays",
          "Array as Function Argument",
          "Array as Reference Argument",
          "Introduction to std::array<T>",
          "Heap-based Arrays",
          "Multidimensional Arrays",
          "Multidimensional Arrays on Heap"
        ],
        "Dynamic Arrays": [
          "Source Code",
          "Introduction",
          "Constructors",
          "Accessors",
          "Modifiers",
          "Element Erasure",
          "Copy/Move Semantics - Part I",
          "Copy/Move Semantics - Part II",
          "Copy/Move Semantics - Part III",
          "Copy/Move Semantics - Part IV",
          "Copy/Move Semantics Implementation",
          "Dynamic Array Issues",
          "Placement new & delete",
          "Smart Reallocation",
          "New Dynamic Array I - Constructors",
          "New Dynamic Array II - Add Function",
          "New Dynamic Array III - Insert Function",
          "New Dynamic Array IV - Miscellaneous Functions",
          "Arrays - Conclusion"
        ],
        "Singly Linked Lists": [
          "Source Code",
          "Linked Lists Introduction",
          "Basic Functions",
          "Modifiers - AddFront & AddBack",
          "Constructors",
          "Copy/Move Semantics",
          "Modifiers - Insertion",
          "Modifiers - Erase",
          "Issues",
          "Element Access"
        ],
        "Doubly Linked Lists": [
          "Source Code",
          "Basic Functions I",
          "Basic Functions II",
          "Modifiers - Add",
          "Accessors",
          "Constructors",
          "Modifiers - Front & End Removal",
          "Modifiers - Insertion",
          "Modifiers - Erase"
        ],
        "Strings": [
          "Source Code",
          "Basics",
          "String Length",
          "Copy & Join",
          "Copy through Allocation",
          "String Class"
        ],
        "Function Pointers": [
          "Source Code",
          "Basics I",
          "Basics II",
          "Function Pointers As Arguments",
          "Function Pointers As Return Values - I",
          "Function Pointers As Return Values - II",
          "Arrays Of Function Pointers - I",
          "Arrays Of Function Pointers - II"
        ],
        "Pointer To Member": [
          "Source Code",
          "Basic Syntax",
          "Constant Member Functions",
          "Simplifying Through Macros",
          "Static Members"
        ],
        "Callbacks": [
          "Source Code",
          "Introduction",
          "Function Pointers As Callbacks",
          "Function Pointers Example",
          "Member Function As Callback",
          "Function Objects",
          "Function Objects As Callbacks",
          "Function Object Internals",
          "Function Objects Vs Function Pointers",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Basic knowledge of C & C++",
        "Should understand basic syntax of pointers"
      ],
      "description": "C & C++ are very powerful languages when it comes to performance & flexibility. But there are some features that are complex and take time to master. One of such features is pointers. Pointers is what separates C/C++ from other languages. These are incredibly powerful as they allow programs to access memory directly and manipulate it.\nThis course focuses on pointers and their applications.It leans more towards implementation in C++, rather C. You'll learn the basics of pointers and then move on to understanding and implementing arrays, pointers to arrays & heap based arrays. You'll also learn advanced memory management by creating a custom dynamic array (just like std::vector<T> in standard C++ library). You'll use placement new & delete to directly place objects in a memory pool allocated through operator new function. As you'll see later in the course, this is a powerful mechanism to optimize usage of heap memory with user-defined objects.\nAfter arrays, you'll learn how to use pointers to create node-based data structures. We'll focus on two types of linked lists - singly & doubly linked lists. You'll understand the difference between arrays and lists and also learn how to access the elements of both the data structures without having to know their internal structure. This is possible by creating context variables that allows access in a container-agnostic manner.\nPointers are invaluable while working with strings. You'll learn how to create dynamic strings using pointers. This will be shown with an implementation of a string class.\nThe next important topic you'll learn and implement will be function pointers. You'll understand how function pointers work and how we can simplify their syntax. You'll also master the complexity of creating arrays of function pointers and functions that return function pointers. On top of that, you'll be comfortable with functions returning pointer to functions that themselves return pointer to other functions. Confused? See the section on function pointers.\nThat's not all. You'll also learn how to create pointer to members (which have even a more complex syntax than function pointers).\nFurthermore, you'll learn how to create callbacks through functions pointers. This course will show you how to optimize the callbacks through function objects. Function objects are more powerful than functions pointers as callbacks.We'll use this knowledge and apply it in many examples to reinforce the concept of pointers to functions.\nThis course also introduces some commonly used containers of the C++ standard template library (STL), such as std::array, std::vector & std::list. By the time you hit these topics, you'll already know how these are implemented internally. How about that!\nThis course relies on some modern C++ (C++11) features to simplify things, such as auto, std::initializer_lists, type aliases. Even if you don't know about these features, the course has videos on these topics to get you started. Additionally, there are four full length videos dedicated to discussion on move semantics.\nI hope you enjoy this course!",
      "target_audience": [
        "Anyone who wants to increase their proficiency in C/C++ pointers",
        "Anyone who wants to learn the applications of pointers",
        "Anyone who wants to understand how basic data structures work internally"
      ]
    },
    {
      "title": "Visual Basic .Net - Programming in VB.Net Windows Forms",
      "url": "https://www.udemy.com/course/visual-basic-net-step-by-step-for-beginners/",
      "bio": "Learn from Scratch How to Develop General and Data Entry Desktop Applications with Reports in VB / VB.Net for Beginners",
      "objectives": [
        "Create small or mid-level applications independently",
        "Create Database Applications with Report Writing",
        "Design User Friendly Application Interface",
        "Code in a professional way"
      ],
      "course_content": {},
      "requirements": [
        "No Prior Programming Experience Required"
      ],
      "description": "If you are new to programming and want to be able to develop different kind of applications, with or without database, the tutorials in this course will teach you step by step with practical exercises during each lesson. Even if you don't have any prior knowledge of programming you can easily understand the lessons and the exercises.\nIn this course you will learn different basic to advance programming techniques using Windows Forms. In start you will learn how to display any text to the user through Message Box. Then gradually further you will learn how to work on Variables, Loops, Decision Making, Menus, Dialogues as well as working with different controls like Text Box, Radio Button, Check Box, Combo Box, Progress Bar, Timer control and more. You will also cover many other interesting topics.\n\nIn last you will create a Database Application in which you will Add, Delete, Modify some records in database through your application and then you will call the saved data in report using report parameters.\nAfter completing this course and your practice hopefully you will be able to develop mid-level application yourself with a professional interface and coding.",
      "target_audience": [
        "0 Level Programmers",
        "Students",
        "Any one who wants to develop software applications him/herself"
      ]
    },
    {
      "title": "Learn Basic Microsoft ASP.Net Development with Visual Studio",
      "url": "https://www.udemy.com/course/masteraspdotnetbasics/",
      "bio": "Learn: C#+CSS+HTML+JQUERY+Visual Studio 2013",
      "objectives": [
        "Download and install Visual Studio",
        "Create a project and run it in a web browser",
        "Understand the purpose of web.config",
        "Create a project and run it in a browser, and examine the HTML in a browser",
        "Understand the concept of a code-behind file",
        "Understand the concept of an object and its properties",
        "Build a simple user interface using drag and drop",
        "Understand the purpose of a CSS file, and how to connect it to your HTML",
        "Write an external C# Class for performing arithmetic",
        "Write a small amount of code to check for errors",
        "Write code to convert strings to numerics",
        "Learn how to create user controls and add navigation",
        "Learn how to find, download and install SQL Server",
        "Learn how to connect ASP.NET to SQL Server and view the results live",
        "Learn how to use the List View with Paging and SQL Server",
        "Learn how to update, delete and update data from a web page with SQL Server",
        "Learn how to create a website on the Internet",
        "Learn how to create and use user controls",
        "Learn how to create and use master pages",
        "Learn how to work with View State and Session State",
        "Learn how to use AJAX with ASP.NET",
        "Learn how to redirect pages",
        "Learn how to validate fields without programming",
        "Learn how to use text area, drop downs, and radio button lists",
        "Learn how to generate tables dynamically",
        "Learn how to interact with databases using AJAX",
        "Learn how to use the MultiView and View Controls",
        "Learn how to build dynamic menus",
        "Learn how to make membership websites",
        "Learn how to write databases from web pages using C#",
        "Learn how to Use AJAX and JQuery, and ASP Together",
        "Learn how to make draggable database controls",
        "Learn how to make database connected controls sortable with JQuery",
        "Learn how to print ASP.NET Content to Printers, Cloud Storage, Google Drive",
        "Build a Data Entry System with SQL Server, C#, Ajax and More",
        "Learn how to use Razor, the syntax for MVC",
        "Learn how to create conditional HTML with Razor and JQuery",
        "Learn how to work with Tables using Razor",
        "Learn how to make, alter and drop stored procedures"
      ],
      "course_content": {
        "Introduction to the course, and the technologies we will use": [
          "Introduction to the course, and the technologies we will use",
          "Control the Layout of the Panels in Visual Studio"
        ],
        "Learn the necessary foundation:": [
          "Create an empty website project, add a page, and display it in a browser",
          "Basics of Visual Studio",
          "Understand the difference between HTML and code behind files",
          "Basic File Types in Visual Studio",
          "Adding an external C# code file to your project",
          "Adding external C# files to our project",
          "Create an external CSS file and connect it to the project",
          "Applying styling with CSS",
          "How to convert text input into numeric form using C#",
          "Reading input from boxes into variables and converting to numeric form"
        ],
        "Create the calculator step by step": [
          "Build the user interface by dragging and dropping controls in design view",
          "Style the user interface using CSS",
          "Add an external C# class for performing arithmetic operations",
          "Improve the caculator so it works on decimals",
          "Handle division by zero gracefully and display useful error messages",
          "Conclusion"
        ],
        "Projects": [
          "Modernize the Calculator with Func<,,,> and More"
        ],
        "Miscellaneous Topics": [
          "Build A Drag and Drop User Control",
          "Add Navigational Capability"
        ],
        "Some ASP.NET Data Controls": [
          "Get SQL Server",
          "Make Just an SQL Connection",
          "Bulleted List Control",
          "Chart Control",
          "DataList Control",
          "List View with Paging",
          "Update, Add and Delete Records with DetailsView",
          "Form View Control",
          "Gridview Control",
          "Manual C# Database Reading",
          "Manual C# Database Writing",
          "CSV File Uploader and Viewer",
          "Create a Hosting Account and Get Your Site Up"
        ],
        "Controls": [
          "What Controls Become in the Browser",
          "AdRotator Control",
          "Build and Use a User Control",
          "User Control with Custom Tags",
          "Add Controls At Run Time",
          "Nest User Controls Inside ASP Controls",
          "Intro to ASP.NET AJAX",
          "Simple AJAX User Control",
          "AJAX and Database Controls",
          "AJAX, Databases and Update Progress Controls",
          "Wizard Control"
        ],
        "Controlling Layout and Appearance": [
          "Master Pages",
          "Control Id's and Master Pages",
          "Create a Simple Skin and Theme",
          "Quick Table Creation and Formatting",
          "Styling Information In Three Ways",
          "Drop Down, Radio Buttons and Calendars Dynamic Formatting",
          "TextArea, Literal and Disabling Validation",
          "Dynamic Table Controls",
          "Multiview and View Controls",
          "Building Dynamic Menus",
          "Building Menus Faster"
        ],
        "JQuery and ASP.NET": [
          "Make a JQuery Template",
          "Dynamic Styling with JQuery",
          "JQuery Functions Examples",
          "Calc with JQuery and AJax",
          "Draggable Database Controls and TextAreas",
          "Sortable and Draggable Database Connected Controls",
          "Reading and Writing ASP.NET Controls with JQuery",
          "GridView with XML and JQuery",
          "Printing Database Controls to Google Drive, Printers, Telephones and the Cloud"
        ],
        "Build A Database Entry System": [
          "Create The Table and Add a Stored Procedure",
          "Write C# Code and Make Simple Interface",
          "Improve the Interface with CSS, Ajax and JQuery",
          "Make One Tiny Change"
        ]
      },
      "requirements": [
        "Ability to download and install Visual Studio Express for Web (100% Free)"
      ],
      "description": "Important Notice:\nPlease note this course is now 6 years old.\nPlease keep that in mind in case you decide to enroll.\nIt has to be updated.\nSo it doesn't have the same level of professionalism as my newer courses.\nI have not had time to do that because of my full time job.\nThank you for reading this note carefully.\n10/19/2019\nIn this course you learn how to build a calculator that can be used on the Internet. Then you explore the world of ASP.NET in more detail by looking at controls of various types, controlling page layout, connecting to databases, using validation controls, and using JQuery together with C#, and ASP.NET. There is now also a section that deals with Razor, the syntax used in MVC. This is a simplified approach to programming that will have you working with databases and tables quickly. This is a good alternative for those who find regular ASP.NET a little too overwhelming at first. Let's begin!\n1) This is the only udemy course with more than 35 quiz questions so you can feel confident you're truly learning.\n2) This course uses Visual Studio, a powerful, 100% free programming environment widely used in industry.\n3) This course teaches the basics of C#, Asp.NET, HTML and CSS, so you can see how these technologies work together to create a complete solution.\n4) This course also gives you an introduction to objected oriented programming\n5) This course also gives an intro to SQL Server and data connected web pages.\nOnce you watch the videos, and complete the quizzes, you'll have a solid  understanding of some of the most important aspects of making C#, ASP.NET, HTML and CSS work together happily in a powerful programming environment. These are skills you can put on your resume.",
      "target_audience": [
        "Programming Newbies"
      ]
    },
    {
      "title": "101 Python Projects | The Complete Python Course for 2025",
      "url": "https://www.udemy.com/course/the-complete-python-courses/",
      "bio": "Master Python in 2025: Build 101 Projects, Learn Socket Programming , Automation, Data Analysis, OpenCV and OOP.",
      "objectives": [
        "A strong foundation in Python basics, including variables, data types, loops, and functions",
        "Intermediate concepts like Object-Oriented Programming (OOP), error handling, APIs, and data manipulation.",
        "Advanced topics like file handling, encryption, automation, data analysis, and socket programming.",
        "Basic Projects: Beginner-friendly projects such as Fibonacci sequences, palindrome checkers, and basic calculators help solidify fundamentals.",
        "Intermediate Projects: Develop real-world applications like weather apps, library management systems, and email schedulers.",
        "Advanced Projects: Build complex systems such as Telegram bots, Facebook automation tools, and image processing applications.",
        "Master tools for automating repetitive tasks (e.g., WhatsApp and Facebook automation, Telegram bot creation).",
        "Learn how to control PCs remotely, block websites, and implement data-driven decision-making.",
        "Work with various file types: CSV, Excel, PDF, and text files.",
        "Explore advanced data analysis with Pandas, including reading, updating, and manipulating datasets in Jupyter Notebook.",
        "Implement encryption and decryption for secure data handling.",
        "Learn to crack ZIP file passwords, decrypt hashed passwords, and use cryptographic functions.",
        "Gain insights into socket programming to build client-server applications.",
        "Master remote PC control using Telnet and SSH, enabling advanced network management skills.",
        "Understand and apply unit testing and PyTest frameworks to write reliable and robust code.",
        "Learn to create, run, and manage automated tests.",
        "Build Telegram bots capable of interacting with users, responding to messages, and performing intelligent actions.",
        "Automate WhatsApp and Facebook for messaging, image sharing, and posting content.",
        "Work on futuristic projects like live face detection, background removal, music players, and modern GUI apps.",
        "Implement APIs for real-time data integration, such as BTC price tracking and SMS scheduling.",
        "Develop problem-solving skills through hands-on projects.",
        "Build a portfolio of 100+ projects showcasing expertise in diverse Python applications."
      ],
      "course_content": {
        "Introduction to the Course": [
          "Promotion video",
          "Introduction to 101 Python projects course"
        ],
        "Introduction to Python Programming": [
          "Understanding the Python Interpreter",
          "Importing Python Modules in the Interpreter",
          "The Importance of Indentation in Python",
          "Installing Python IDE for Beginners",
          "Introduction to Visual Studio Code (VSCode)",
          "Writing Your First Python Program",
          "Using Indentation in VSCode for Python",
          "Exploring Python Variables",
          "Changing Variable Types in Python",
          "Assigning Values to Variables in Python",
          "Numbers in Python: Introduction and Types",
          "Converting Number Types in Python",
          "Getting Started with Strings in Python",
          "Mastering String Repetition and Concatenation",
          "Slicing Strings in Python",
          "Modifying Strings in Python",
          "Reversing and Analyzing Strings",
          "Course Feedback Project: Collecting Insights",
          "Asking for feedback",
          "Mastering Escape Characters in Python Strings",
          "Using Special String Operators in Python",
          "Python String Formatting Techniques",
          "Introduction to Python Lists",
          "Accessing and Manipulating List Elements",
          "How to Update a Python List",
          "Deleting Elements from a Python List",
          "Basic List Operations in Python",
          "List Manipulation",
          "Introduction to Python Tuples",
          "Modifying Tuples in Python",
          "Performing Basic Tuple Operations",
          "Tuple Manipulation",
          "Finding Min and Max Values in Python",
          "Introduction to Sets in Python",
          "Set Operation In Python",
          "Getting Started with Python Dictionaries",
          "Working With Python Dictionary",
          "Mastering the If Statement Syntax",
          "Exploring the If-Else Syntax in Python",
          "The Power of If-Elif Syntax in Python",
          "Check Even or Odd Number",
          "Grading System: Using If-Elif-Else for Score Evaluation",
          "Mastering For Loops in Python",
          "Using Range with For Loops in Python",
          "Challenge for loop",
          "Introduction to While Loops in Python",
          "Countdown Using a While Loop in Python",
          "Sum of Multiples",
          "Python Basics Assignment"
        ],
        "Hands-On Python Projects for Beginners": [
          "1_Hello word Enhancement",
          "2_Basic Calculator",
          "3_Number Guessing Game",
          "4_Parallelogram area",
          "5_Cylinder Area and volume",
          "6_Surface area and volume of sphere",
          "7_area of a regular polygon",
          "8_Repeat a string",
          "9_Complex number creating",
          "10_converting age to seconds",
          "11_Fibonacci Sequence",
          "12_Sort Three Number",
          "13_Palindrome",
          "14_Calculate Factorials Recursively",
          "15_Find the LCM of two number",
          "16_Find the GCD of two number",
          "17_Convert Decimal to Binary octal hexadecimal",
          "18_Factor of a Number",
          "19_Sum of Digits",
          "20_Reverse String",
          "21_Create a Multiplication Table using python",
          "22_Find the largest number among a list",
          "23_Random Number Generator",
          "24_Count Vowels in a stirng",
          "25_Char Frequency Counter in a String",
          "26_Anagrams Strings",
          "27_Check Odd and Even Number",
          "28_Calculate sum of list",
          "29_Find length of a string",
          "30_Calculate the Average of the numbers in a list",
          "31_check if a string is alphanumeric",
          "32 Generate random password",
          "33_find median of a list",
          "34_find the HCF of two numbers",
          "35_Sort a list of string alphabetically",
          "36_find sum of even numbers",
          "37_check if string contains only digits",
          "38_Find ASCII value of a character",
          "39_Swap Two variables",
          "Python Basic Project Source Code"
        ],
        "Intermediate Python Programming Techniques": [
          "1_introduction about OOP(classes, methods, attribute)",
          "2_Home work to create a bank account",
          "3_Error Handling in python",
          "4_Wrking with API's",
          "5_Reading and writing into a CSV file",
          "6_read and write in an excel file",
          "7_Datetime Manipulation",
          "8_introduction to Modules",
          "Create a Simple Python Calculator"
        ],
        "Mastering Web Scraping with Python": [
          "1_Introduction to Webs craping",
          "1.1 Regular Expression",
          "2_Introduction to Regex",
          "3_Regex is Greedy",
          "4_More in Regex",
          "5_Find all in Regex",
          "Validating and Extracting Email Addresses and URLs using Regular Expressions",
          "6_Sub in Regex",
          "Regular Expressions (Regex) Practice",
          "7_Working with Requests",
          "8_Challng get the Udemy Course Information",
          "9_Getting course information from website",
          "10_Getting name and price of the course",
          "11_Getting the house information from real-state website",
          "Sources for this Section"
        ],
        "Building Practical Python Projects for Intermediate Learners": [
          "1_Expense Tracker",
          "2_Weather App",
          "3_Working with Dictionary",
          "4_Hangman Game",
          "5_Inventory Management System",
          "6_Blog Post Generator",
          "7_Creating Quiz Game part one",
          "8_Creating Quiz game part two",
          "9_expense categorizer with python",
          "10_Password Strength Checker",
          "11_Dice Rolling Game",
          "12_Budget Tracker",
          "13_Alarm Clock",
          "14_birthday reminder",
          "15_Mad Libs Game",
          "16_Simple Chatbot",
          "17_Contacts book",
          "18_Library Management System part one",
          "19_Library Management System part two",
          "20_Library Management System part three",
          "21_file organizer",
          "22_Sending Email to multiple persons",
          "23_QR Code Generator",
          "24_OTP Verification",
          "25_Bulk Uploader",
          "26_Email Scheduler",
          "Intermediate Project Source Code"
        ],
        "Advanced Data Analysis with Python": [
          "1_Installing Jupyter Notebook",
          "1.1_Introduction to Pandas",
          "2_Reading different types of file",
          "3_Set Header for data that has no header",
          "4_assign header and index",
          "5_drop some data from file",
          "6_add new record to columns",
          "7_update and add new rows",
          "Sales Data Analysis with Python"
        ],
        "Advanced Python Networking and Socket Programming": [
          "1_socket programming create server",
          "2_socket programming create client and start chat",
          "3_HTTP client get methods",
          "4_HTTP client post methods",
          "5_http server and share file in the network",
          "6_Downloading file from a remote computer",
          "7_send command to the server"
        ],
        "Building Automation Bots with Python & Telegram": [
          "1_Introduction to python Telegram bot",
          "2_Create your first telegram bot",
          "3_start your telegram bot",
          "4_Add more functionality to your telegram bot",
          "5_add button telegram bot",
          "6_adding favor button and customizing buttons",
          "7.1 Telegram API Introduction",
          "7.2 Getting message information from group",
          "7.3 Limit getting message Information from group",
          "7.4 Send Text message to group",
          "7.5 Sending questions from a list to group",
          "7.6 Sending images to a group",
          "7.7 Sending image from local computer to a group",
          "7.8 Sending audio to a group",
          "7.9 Sending Documents to a group",
          "7.10 Reply to text message",
          "7.11 Reading and replying new message",
          "7.12 Making the bot more intelligent",
          "7.13 Mention the text while replying",
          "7.14 Uploading the bot in IBM cloud for free"
        ],
        "Working with Files and Data in Python": [
          "1_reading pdf document and get number of pages",
          "2_Extract text from pdf",
          "3_rotating pdf file",
          "4_read excel file",
          "5_extracting name of columns using pandas",
          "6_reading an excel file",
          "7_reading specific columns in an excel file",
          "8_creating a new excel file",
          "9_appending values to an excell file",
          "10_read a csv file",
          "11_writing into csv files",
          "12_writing a text file",
          "13_Reading a text file"
        ]
      },
      "requirements": [
        "No prior programming experience is required – everything you need will be taught step by step in this course"
      ],
      "description": "Welcome to \"Master Python Programming in 2025: Build Over 101 Projects\"—the most comprehensive and hands-on Python course you'll find! This course is designed for anyone who wants to learn Python from scratch or improve their existing skills with real-world projects.\nOver the course of 101 diverse projects, you'll learn:\nPython Fundamentals: Master the basics of Python, including variables, data types, loops, conditionals, and functions.\nIntermediate Skills: Dive into Object-Oriented Programming (OOP), error handling, working with APIs, and managing files and directories.\nAdvanced Python Projects: Build automation tools, web scrapers, and Telegram and WhatsApp bots. Learn to work with advanced topics like file encryption, socket programming, and unit testing.\nPractical Applications: Create real-world projects such as a Facebook automation tool, system monitoring scripts, calendar apps, GUI apps, and more.\nBy the end of this course, you will have built over 101 unique Python projects that give you a strong portfolio of work. You'll gain hands-on experience in web development, automation, data analysis, image processing, and much more.\nWhether you're a beginner or an intermediate learner, this course will provide you with the skills and confidence to build your own Python applications and enter the world of programming with practical experience.\nWhy should you join this course?\nLearn by Building Real Projects: This course is all about hands-on learning! With Over 101 Python projects, you’ll work on practical, real-world applications—from web automation bots to data analysis tools—building a solid portfolio as you go.\nNo Experience Needed: Whether you're a complete beginner or have some coding knowledge, this course is for you! You’ll start with Python basics and progress all the way to advanced projects, gaining expertise as you move forward.\nComprehensive Coverage: We cover essential topics like Python fundamentals, Object-Oriented Programming (OOP), file handling, web scraping, automation, and even advanced topics such as encryption and socket programming.\nLearn from Industry-Grade Projects: From Telegram bots to Facebook automation, WhatsApp automation, and GUI applications, you'll gain real-world experience in both automation and web development that can be applied directly in the tech industry.\n101 Projects = 101 Opportunities: The hands-on approach with 100 different projects not only helps you grasp core Python concepts but also helps you build a strong portfolio. By the end, you'll have the skills and confidence to take on any Python project, big or small!\nBecome Job-Ready: This course prepares you for a career in Python programming by providing the practical knowledge and experience sought after by employers, whether you're aiming for roles in software development, data analysis, automation, or machine learning.",
      "target_audience": [
        "Beginners with no prior programming experience who want to start their coding journey",
        "Individuals interested in learning Python and applying it to real-world projects.",
        "Students or professionals seeking to enhance their skills in Python for academic or career purposes.",
        "Anyone curious about programming and eager to build practical coding skills."
      ]
    },
    {
      "title": "The LED Pixel Master Course",
      "url": "https://www.udemy.com/course/the-led-pixel-master-course/",
      "bio": "Create stunning, interactive light installations driven by Arduino and FastLED",
      "objectives": [
        "Create unique, interactive lighting projects with LED pixels and Arduino.",
        "Understand and follow best practices for safe wiring, soldering, powering and programming of LED pixels."
      ],
      "course_content": {
        "Introduction": [
          "Section Introduction",
          "What Is An LED Pixel?",
          "LED Strips",
          "LED Pixel Chipsets",
          "Installing The Arduino IDE and FastLED",
          "Section Quiz",
          "Section Recap"
        ],
        "Project 1: Bomb Defusal Game": [
          "Section Introduction",
          "Shopping List",
          "LED Strip Preparation",
          "Our First Program",
          "Moving The Player",
          "LED Strip Best Practices Part 1: Hardware",
          "LED Strip Best Practices Part 2: Software",
          "Useful Best Practice Resources",
          "Controlling The Player",
          "Adding Bombs",
          "Adding The Wall",
          "Game Over",
          "Some Final Polish",
          "Section Recap"
        ]
      },
      "requirements": [
        "A soldering iron is required. Basic soldering experience will help but is not essential.",
        "Basic C++ programming knowledge (loops, functions and arrays) will help but is not essential.",
        "Familiarity with basic Arduino development will help but is not essential."
      ],
      "description": "Hi there! Welcome to The LED Pixel Master Course, the ultimate online resource for creating interactive lighting projects with LED pixels!\nMost commonly arranged in LED strips, LED pixels are found all over the world at light festivals, concerts, arcades and Christmas light displays. As a software engineer, I've spent years working on systems that are completely invisible to end users. It's hard to explain to your family what exactly you do all day when you work on systems like these.\nWhen working with LED pixels, however, the results of your work are immediately visible and everybody can enjoy the results! By taking this course, you'll learn to harness this power to make visually stunning works of art that you can proudly show off to anyone, whether they're 1 or 100 years old!\n\nWhy should I take this course?\nGood question! You can learn bits and pieces through online videos, but this course is by far the most comprehensive LED pixel resource you'll find. Here are just a few reasons why:\nWe start at the very beginning, learning all about LED pixels and what they can do.\nInstead of just taking the success path to project completion, we take the time to talk about common pitfalls and how to avoid them.\nWe build our projects with a strong focus on safety and reliability in terms of soldering, powering and programming our devices.\nYou'll be given regular challenges throughout the course to test your skills, and we'll work through the solutions together.\nThe course content will continue to grow, with fun new topics and projects being added regularly!\n\nWhat will we cover in this course?\nThroughout the course we'll:\nLearn about the best components to use and where to buy them online.\nMake use of the Arduino platform and FastLED to easily communicate with LED pixels.\nUse FastLED to create stunning visual effects.\nPower our projects in a safe and reliable manner, learning about important limitations and safety considerations.\nSolder useful connections for powering and communicating with LED strips.\nCreate a fully-functional, reflex-based bomb defusal game using buttons and an LED strip.\n\nI am truly passionate about creating fun, interactive projects that make people happy. Join me in this course, and discover just how fun and easy it can be to make something amazing!",
      "target_audience": [
        "Developers or creatives who are interested in the world of interactive light."
      ]
    },
    {
      "title": "JavaScript Fundamentals for Beginners",
      "url": "https://www.udemy.com/course/javascript-fundamentals-for-absolute-beginners-m/",
      "bio": "Learn JavaScript Basics in Under 6 Hours",
      "objectives": [
        "Build a solid foundation in JavaScript",
        "Understand fundamental programming concepts",
        "Learn to solve common programming problems",
        "Gain practical skills through 30+ exercises with step-by-step solutions",
        "Write clean and efficient JavaScript code",
        "Manage data with arrays and objects",
        "Develop basic debugging skills",
        "Consolidate your knowledge with a final coding project"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming experience required",
        "No prior experience in HTML, CSS, or JavaScript required",
        "No software installation required to start off",
        "Laptop or computer with an internet connection"
      ],
      "description": "JavaScript is one of the most popular and widely used programming languages in the world. It's the driving force behind many interactive features on websites—think dynamic content updates, interactive forms, and responsive design. From modern web applications to server-side programming and mobile apps, JavaScript is everywhere, making it an essential skill for any aspiring developer.\nIn JavaScript Fundamentals for Beginners, you’ll quickly and efficiently gain a solid understanding of JavaScript basics.\n\n\nBEGINNER-FRIENDLY COURSE:\nOver 5 hours of HD videos with titles\nShort, bite-sized videos for each concept\n30+ exercises with step-by-step solutions\nPractice all the knowledge with a larger coding assignment at the end\nLearn at your own pace\nUnlimited, lifetime access\n30-day money-back guarantee\n\n\nMASTER ESSENTIAL JAVASCRIPT CONCEPTS:\nValues and variables\nData types\nType conversion\nEquality checks\nObjects\nArrays\nControl flow\nLoops\nFunctions\n\n\nUSE YOUR KNOWLEDGE IN PRACTICE:\nThis tutorial offers multiple ways to practice your skills:\nOver 30 practical exercises with step-by-step video solutions to reinforce specific concepts\nExercises that include common job interview questions to help you prepare for real-world scenarios\nQuizzes to test your understanding and ensure mastery of key concepts\nA final coding project with video solutions to consolidate all the knowledge you’ve gained\n\n\nWHO IS THIS COURSE FOR?\nComplete Beginners in Programming: Ideal for those who have never programmed before and want to start their journey with JavaScript.\nAbsolute Beginners in JavaScript: Perfect for those who are new to JavaScript and seek a strong foundation.\nFuture Web Developers and Front-End Developers: A great starting point for anyone looking to build a career in web development or specialize in front-end development.\nThose Planning to Work with Modern JavaScript Frameworks: Prepare yourself for frameworks like React, Angular, or Vue by building a solid JavaScript foundation.\n\n\nNo prior experience with HTML, CSS, or JavaScript is required. All you need is a computer and an internet connection to get started.\n\n\nReady to get started? Dive into the fundamentals of JavaScript and build a strong foundation for your programming journey. Enroll now and learn JavaScript in under 6 hours!",
      "target_audience": [
        "For complete beginners in programming",
        "For absolute beginners in JavaScript",
        "For future web developers",
        "For aspiring front-end developers",
        "For those planning to work with modern JavaScript frameworks like React, Angular, or Vue"
      ]
    },
    {
      "title": "Working with Python on Windows and SQL Server Databases",
      "url": "https://www.udemy.com/course/python-windows-sql-server/",
      "bio": "Learn how you can efficiently work with SQL Server databases, via the Python Programming Language",
      "objectives": [
        "How to access and work with SQL Server databases from within your Python programs",
        "How to run T-SQL queries against your SQL Server databases from within your Python programs",
        "How to Call Dynamic Management Views (DMVs), Aggregation Functions and global system variables",
        "How to execute SQL Server functions and stored procedures from within your Python programs",
        "How to use parameters and exception handling in all database operations in your Python code",
        "How to set up your Python development environment on Windows",
        "How to work with Visual Studio Code for Python development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Let’s Talk About Python on Windows",
          "Python Integrated Development Environments (IDEs)",
          "This Course’s Demo Environment",
          "Section Recap",
          "Introduction"
        ],
        "Basic Python Knowledge": [
          "Section Overview",
          "Installing Python on Windows",
          "Installing and Setting up the IDE to be Used in the Demos - Visual Studio Code",
          "Writing, Compiling and Running Python Programs",
          "Basic Python Commands and Data Structures",
          "Section Recap",
          "Basic Python Knowledge"
        ],
        "Basic Interaction with SQL Server (Updated)": [
          "Section Overview",
          "About the pyodbc Module",
          "Setting up the Connection String",
          "Connecting to SQL Server",
          "Exception Handling",
          "Running a Simple SQL Server Query and Display the Results",
          "Common Pitfalls When Working with SQL Server from Python (New)",
          "Section Recap",
          "Basic Interaction with SQL Server"
        ],
        "Running SQL Server Queries from within a Python Program": [
          "Section Overview",
          "Running SELECT T-SQL Statements",
          "Running INSERT T-SQL Statements",
          "Running UPDATE T-SQL Statements",
          "Running DELETE T-SQL Statements",
          "Running Other SQL Server T-SQL Statements",
          "Section Recap",
          "Running SQL Server Queries from within a Python Program"
        ],
        "Working with SQL Server Stored Procedures": [
          "Section Overview",
          "Let’s Create a SQL Server Stored Procedure from within a Python Program",
          "Let’s Execute the Stored Procedure and Get the Results",
          "Executing Stored Procedures that do not Return a Result",
          "Section Recap",
          "Working with SQL Server Stored Procedures"
        ],
        "Working with SQL Server Functions": [
          "Section Overview",
          "Let’s Create a SQL Server Function from within a Python Program",
          "Let’s Execute the Function and Get the Results",
          "Calling SQL Server System Functions",
          "Section Recap",
          "Working with SQL Server Functions"
        ],
        "Advanced Topics (Updated)": [
          "About Advanced Topics",
          "How to Import Data from a CSV File to SQL Server via a Python Program",
          "How to Convert a Python Script to a Windows Executable",
          "How to Create a Basic GUI Dialog in Python and Connect to SQL Server",
          "How to Run the SQL Server BULK INSERT Command from Within a Python Program",
          "How to Run Multiple .SQL Scripts from a Folder on SQL Server using Python and PS",
          "Mastering Python & SQL Server: Best Practices",
          "Using LangChain with Microsoft Learn Docs MCP Server"
        ],
        "Special Database Development Topics (Updated)": [
          "About Special Database Topics",
          "SQL Server Installation Best Practices",
          "Exploring SQL Server Data Types",
          "Benefits of Primary Keys in Database Tables",
          "Benefits of Using Stored Procedures in Databases",
          "Useful T-SQL Scripts for SQL Development",
          "How to Find the Version of a SQL Server Instance",
          "What are T-SQL Snippets in SSMS?",
          "Operating Systems Supported by SQL Server",
          "How to Install SQL Server 2019 Express and the Latest SSMS Version",
          "Overview of Index Types and Uses in SQL Server",
          "SQL Server Authentication Modes (New)"
        ],
        "Python and SQL Server Machine Learning Services (Updated)": [
          "Overview",
          "What are SQL Server Machine Learning Services?",
          "How to Install SQL Server Machine Learning Services",
          "Python and R Packages Included in SQL Server Machine Learning Services",
          "Executing Python Scripts via SQL Server Machine Learning Services",
          "Exploratory Data Analysis (EDA) with Python",
          "A Practical Guide to the Layers of Artificial Intelligence",
          "The Evolution of Collaborative Intelligence",
          "Python and SQL Server Machine Learning Services"
        ],
        "Putting it All Together": [
          "What Have you Learned in this Course?",
          "Working with Python on Windows and SQL Server Databases"
        ]
      },
      "requirements": [
        "Basic knowledge of the Python programming language",
        "Basic knowledge of SQL Server fundamentals"
      ],
      "description": "Python is one of the world's most popular programming languages. Its simplified syntax, helps Programmers to easily develop different types of applications fast and easy. From Data Science and Machine Learning applications, to general purpose applications, Python makes it easy for the Developer, to build these applications. Additionally, when you combine the Python programming language, with the popular SQL Server Data Platform, you have a  powerful software development setup, via which you can build just about anything!\nThis course does exactly that: it helps you learn how to access and work with SQL Server databases, directly from your Python programs, by teaching you how to perform all the major database development operations from within your Python code.\nWith my course, among other, you will learn how to set up your Python development environment on Windows using Visual Studio Code and the Python extension, you will refresh your memory on the basic Python data structures and commands, learn how to connect to SQL Server from within your Python programs, learn how to run SQL Server SELECT, INSERT, UPDATE and DELETE T-SQL statements from within your Python code using parameters and exception handling, learn how to create and call SQL Server stored procedures, functions, DMVs, global system variables, and much more!\n\n\nWHAT OTHER STUDENTS SAY ABOUT THE COURSE:\n\"Really amazing course. I never thought it was so easy and interesting to work with Python on SQL server. If you want to work Python on SQL server, I am sure after this course you will be able to work, even you have no prior knowledge of Python.\"\n\"Thorough explanation and examples led to my being able to write and execute queries in SQL server with Python.\"\n\"Great quality and relevance to my job!\"\n\"The course explains in simple words how I can work with SQL Server from my Python programs.\"\n\"Excellent course! Just what I needed to use Python with SQL Server!\"\n\n\n\n\nWHAT IS THIS COURSE ALL ABOUT?\nPython is a very popular programming language. Due to its simplified syntax, Programmers can develop a wide range of software applications, fast and easy. With Python, you can easily build Data Science and Machine Learning projects, as well as general purpose applications. When combined with the popular SQL Server Data Platform, it provides Software Developers and Data Scientists, with a powerful software development setup, that can be used for building just about anything!\nThis course has been carefully designed, in order to help you get started with Python programming for SQL Server data access. Via a well-structured curriculum, it starts with helping you set up your Python development environment on Windows, using Visual Studio code and the proper extensions, then explains the different options for connecting to SQL Server databases and then deep dives into a comprehensive set of live demonstrations, via which you will learn how to execute SQL Server SELECT, INSERT, UPDATE and DELETE SQL statements, as well as, work with SQL Server stored procedures and functions and all that, via your Python programs. Last but not least, the course helps you get started with SQL Server Machine Learning Services, and more specifically, it helps you get started with executing Python scripts, directly in SQL Server, in-database.\nSo join me into a 6-hour journey and learn all about working with SQL Server databases, from within your Python programs!\n\n\nAFTER THE COURSE:\nYou will know how to install Python on Windows and set your development environment with Visual Studio Code and the proper extensions.\nYou will know how to connect your Python programs to SQL Server instances and databases.\nYou will know how to run different types of T-SQL queries against your SQL Server databases, from within your Python Programs:\nExecute and process SELECT, INSERT, UPDATE and DELETE T-SQL statements\nCall Dynamic Management Views (DMVs)\nCall aggregation functions\nCall SQL Server global system variables\nYou will know how to execute SQL Server functions and stored procedures, from within your Python Programs.\nYou will know how to use parameters and exception handling for all the above database operations within your Python code.\nYou will know how to directly execute Python scripts in SQL Server, in-database, using SQL Server Machine Learning Services.\n\n\nPREREQUISITES FOR ATTENDING THE COURSE:\nBasic knowledge of the Python programming language\nBasic knowledge of the SQL Server fundamentals\n\n\nPREREQUISITES FOR SETTING UP THE DEMO ENVIRONMENT:\nA Windows 10 computer with at least 4GB of RAM and a modern CPU with SQL Server installed (Express Edition works fine as well)\nNote: The use of a Virtual Machine is completely optional. You just need a Windows 10 computer with SQL Server, onto which, by following the courses demos, you will be installing Python with pyodbc and Visual Studio Code. Then, using this environment, you will be able to reproduce all demos.\n\n\nTHIS COURSE CONTAINS/OFFERS:\n6+ hours of high-quality video lectures and guides\nStep by step live demonstrations and guides that can help you get started with SQL Server database programming from within your Python programs\nDownloadable source code examples\nDownloadable resources with useful information and links\nUseful quizzes for testing your knowledge on each section\nA major practice test in the end of the course\nAbility to ask the instructor questions via the Q&A section\nCertificate on course completion",
      "target_audience": [
        "Python developers who want to learn how to work with SQL Server via their Python programs",
        "Data Scientists who want to learn more about SQL Server database access via Python programming",
        "Technology enthusiasts who want to learn more about Python programming and SQL Server database access",
        "Programmers who want to get started with Python programming focused on data access topics"
      ]
    },
    {
      "title": "Beginners Guide To C# With Visual Studio 2017",
      "url": "https://www.udemy.com/course/beginnerscsharpwithvs2017/",
      "bio": "Learn Real C# with Windows Forms!",
      "objectives": [
        "Create and run a simple Windows Form project",
        "Describe how properties are used to control the appearance of forms",
        "Add objects such as labels to forms, and write code to change the text of the label",
        "Understand why variables are needed and how they operate",
        "Describe how data types must match for code to work",
        "Understand the purpose of a name space and how it makes creating programs easier",
        "Use different data types like bool, string, decimal and int",
        "Understand the concept of a literal",
        "Use pictures boxes to show images",
        "Understand how string interpolation works",
        "Understand how to print new line characters",
        "Learn how to use text boxes and rich text boxes",
        "Describe how to connect multiple controls with code",
        "Work with multiple numerical variables and produce numerical output",
        "Apply format specifiers to produce formatted output",
        "Describe how to declare and set multiple variables on a single line to save time and effort when coding",
        "Read text values and convert them to numerical form",
        "Describe how methods are called to perform a variety of actions",
        "Create a simple graphical user interface",
        "Describe the importance of ensuring that data types are matched when using the assignment operator",
        "To call multiple methods on a single object using method chaining",
        "Explain in detail the concept of variable scope",
        "Explain how DateTime objects are created and used",
        "Explain the concept of variable scope",
        "Understand how to start a Visual Studio project in several ways",
        "Understand how to work with compound operators that represent addition and subtraction",
        "Describe how the compound division and multiplication operators work",
        "Use the numeric up/down control and understand the remainder operator",
        "Explain logical operators like <= and >=",
        "Describe how to work with check boxes in an interface",
        "Explain how the logical and operator works",
        "Understand how the logical or operator works",
        "Make comparisons using if/else and strings",
        "Make comparisons using if/else and numerical quantities",
        "Use methods with if/else blocks to make decisions",
        "Use if/else blocks with check boxes to make decisions",
        "Understand the concept of a literal"
      ],
      "course_content": {},
      "requirements": [
        "Please be sure to watch the free preview videos before enrolling so you can feel confident this course meets your needs.",
        "This course is for those who believe in doing, and not merely watching, in order to learn.",
        "You should be able to download and install Visual Studio 2017 Community.",
        "There are questions in the videos about the code, so it's important to type all the code as you watch the videos.",
        "This is a course for committed beginners. It's not for those who don't want to push themselves hard."
      ],
      "description": "Very Important:\n1. Friends, please take the time to review the curriculum carefully before buying so you can see exactly whether this is the right course for you. Please do not join until you have completed this step.\n2. Please watch the free preview videos so you can see whether the presentation style works for you. Please remember  I am just one person, and I make my videos often after I have been working for many hours already.  PLease do not join until you have completed this step.\n3. If something needs fixing, please let me know. Again, I'm just one person and not a big team of people. I will try to fix it as quickly as possible. Thank you.\nI'm the author of \"Beginning C# Hands-On-The Core Language\" from Packt Publishing. Let's take a look at every this course has to offer. C#, which is pronounced as \"see sharp\", is a powerful programming language from Microsoft. This course is an introduction to this language using Visual Studio 2017, and the most current version of the language, which is C# 7.0. C# remains one of the most widely used programming languages in the market place. Whether you want to learn it so you can build your own app, or you need it for work, this course is your place to begin that process. Each lesson is an HD video, with the code attached under lesson resources. Each lesson also includes questions for you to consider as you watch. These questions are designed to help you think about C# and general programming concepts. This is a course for beginners, so if you are an intermediate or advanced student of C#, this course would not be the right choice for you. The explanations provided are very detailed, so please be sure watch the free preview videos before buying so that you can decide whether the style of presentation agrees with your learning style. This course is not theoretical, and is intended for those who want to get coding as quickly as possible.  Keep in mind that many of the concepts presented here apply equally well to other languages like Java.  Thank you for reading, and see you inside!\n\nNote:\nPart of promo licensed from presentermedia",
      "target_audience": [
        "This is a course for beginners in C# and Visual Studio Community 2017.",
        "This is not a course for those who are intermediate or advanced students of C#.",
        "This course does not use console applications to teach C#.",
        "This course uses Windows Forms to teach the fundamentals of C#."
      ]
    },
    {
      "title": "The Ultimate Hands-on Kivymd |Tame your Python Kivy Skills",
      "url": "https://www.udemy.com/course/the-ultimate-hands-on-kivymd-tame-your-kivymd-python-skills/",
      "bio": "Complete and Descriptive Academic course on GUI Development using Kivymd, kivy Python. Compete with PyQT using KivyMD.",
      "objectives": [
        "KivyMD Python Development",
        "Graphical User Interface Programming in Python using KivyMD Library",
        "Android App Development in Python using KivyMD Library",
        "IOS Development in Python using KivyMD",
        "Desktop Application Development in Python using KivyMD"
      ],
      "course_content": {},
      "requirements": [
        "Basic Python Programming",
        "Very basic concepts regarding Object Oriented Programming in Python",
        "Knowledge regarding Kivy"
      ],
      "description": "This course is the next step in Graphical User Interface Development in Python using the most famous, powerful, and easy Kivymd Python library. In this course, you will learn Python KivyMD from a very start to a higher level. You will learn how to create Desktop Applications in Python using KivyMD. Not only this, with the help of the Kivymd library anyone can now develop Android apps for Google PlayStore and IOS apps for App Store.\nYou will start from a very basic level where you will learn how to create Labels, Buttons, Input Fields, etc.\nYou will also learn how color Palette works in KivyMD\nAfter some basic knowledge, you will jump to the intermediate level where you will learn a few complicated widgets.\nYou will learn how to link python functions with your widgets.\nIn the higher section, you will learn about complicated widgets like Data Tables, etc.\nYou will also learn how to use kivy and kivymd with other python libraries.\nNot only this, you will learn so many other things by developing Practical Applications like Text Analyzer App which we will develop in this course.\nAfter all, this course has an \"Extra Stuff\" section as well which I will update continuously and I will add new and awesome content to this section.\nNot only this, but I will also explain a little bit of Logic Development in this course and you will learn how to solve problems.",
      "target_audience": [
        "Python Developer curious about GUI Development using Python KivyMD.",
        "Beginner Python Developer curious about Apps Development in KivyMD."
      ]
    },
    {
      "title": "The Ultimate hands-on Kivy | Tame your Kivy Python skills!",
      "url": "https://www.udemy.com/course/the-ultimate-hands-on-kivy-tame-your-kivy-python-skills/",
      "bio": "The Complete and Descriptive Academic course on Graphical User Interface using Kivy Python. Compete with PyQT using Kivy",
      "objectives": [
        "Kivy Python Development",
        "Graphical User Interface Programming in Python using Kivy Library",
        "Game Development in Python using Kivy Library",
        "Android App Development in Python using Kivy Library",
        "IOS Development in Python using Kivy",
        "Tips and Tricks regarding Problem Solving",
        "Developing a Logical Mind Set by using some real life examples",
        "Better understanding of Technical Concepts regarding OOPs in Python and Kivy Library",
        "Developing Bug Fixing and Error Finding abilities in students"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Kivy?",
          "How Kivy Works?",
          "Widgets",
          "Layouts",
          "Kivy Design Language",
          "Preparing Environment For Development",
          "Quiz-I"
        ],
        "Basic UX Widgets (Part-I)": [
          "Buttons in Kivy",
          "Labels in Kivy",
          "Text Inputs in Kivy",
          "Quiz-II"
        ],
        "Different Types Of Layouts and Their Uses": [
          "Type-I: BoxLayout",
          "Type-II: GridLayout",
          "Conceptual Image",
          "Type-III: AnchorLayout",
          "Type-IV: FloatLayout",
          "Type-V: StackLayout",
          "Type-VI: SlideView",
          "Type-VII: RelativeLayout",
          "Type-VIII: PageLayout",
          "Quiz-III"
        ],
        "Logics In Kivy": [
          "Logics-I: Button",
          "Logics-II: IDs",
          "Logics-III: TextInput",
          "Logics-IV: Variables in KDL and Properties",
          "Logics-V: Self vs Root",
          "Logics-VI: Builders",
          "Logics-VII: Binders",
          "Quiz-IV"
        ],
        "Practical Work-I": [
          "Introduction",
          "Part-I",
          "Part-II",
          "Part-III",
          "Part-IV",
          "Part-V"
        ],
        "Canvas In Kivy": [
          "What is Canvas and How to draw Ellipse, Rectangle, etc",
          "Lines in Canvas"
        ],
        "Practical Work-II: App Development": [
          "Introduction",
          "Prerequisite-I: Images In Kivy",
          "Prerequisite-II: ScreenManager In Kivy",
          "Part-I",
          "Part-II",
          "Part-III"
        ],
        "Basic UX Widgets (Part-II)": [
          "CheckBox In Kivy",
          "Sliders In Kivy",
          "Slider Customization and Progress Bar In Kivy",
          "Toggle Button and Switch In Kivy"
        ],
        "Practical Work-III: Game Development": [
          "Introduction",
          "Part-I",
          "Part-II",
          "Part-III",
          "Part-IV",
          "Part-V"
        ],
        "Animations In Kivy": [
          "Basic",
          "Infographic Animations",
          "Bug Fixing and Segments Animation",
          "Custom Animation"
        ]
      },
      "requirements": [
        "Some Basic Knowledge of OOPs in Python."
      ],
      "description": "In this course, students will learn Python Kivy from a very start to an advanced level. They will learn some basic built-in UX widgets. They will also learn how to create custom modern UX widgets because no software today uses basic widgets. We will go through different types of interfaces and Layouts. Throughout this course, I will try my best to develop problem-solving skills in students by giving tips and tricks. Students will also learn how to create logic for their games and other applications. By the end of this course, students will be able to find bugs and errors in the code and then how to fix those bugs and errors. I will also focus on some crucial concepts regarding Python Kivy. I will go through different styles of programming so that by the end of this course students will not just be able to understand other's programmer code but will be able to answer questions regarding Python Kivy on Stackover Flow and Quora. In this course, instead of just teaching you, I will also give you homework, coding exercises, documents, and presentations. This course also has quizzes so that you will get a better understanding of each and everything.",
      "target_audience": [
        "Beginner Python Developer curious about GUI Development using Python Kivy.",
        "Beginner Python Developer curious about Game Development in Kivy.",
        "Beginner Python Developer curious about Apps Development in Kivy.",
        "Beginner Python Developer who wants to learn how to create Logics.",
        "Beginner Python Developer who wants to learn how to find Bugs in programming."
      ]
    },
    {
      "title": "Master Ruby, Python and Java",
      "url": "https://www.udemy.com/course/ruby-python-java/",
      "bio": "Learn Programming and OOP by building projects, be a confident developer with Ruby, Java, Python",
      "objectives": [
        "Build practical projects in multiple programming languages",
        "Learn fundamentals of programming languages",
        "Gain ability to pick up new technologies",
        "Establish a thorough understanding of Object Oriented Programming",
        "Break down complicated problems into smaller/easier problems",
        "Add a diverse group of technologies to their resume",
        "Gain a high level of confidence in solving programming"
      ],
      "course_content": {
        "Introduction to Programming languages": [
          "Introduction",
          "Introduction to Ruby and structure of the course"
        ],
        "Ruby - Procedural and Object Oriented Programming": [
          "Set up Integrated Development Environment",
          "Set up IDE - Text directions and code",
          "Getting familiar with online IDE",
          "The command line interface",
          "The command line interface - text directions and code",
          "Intro to Ruby and hello world!",
          "Intro to Ruby and hello world - Text directions and code",
          "Introducing Strings",
          "Introducing Strings - Text directions and code",
          "More Strings!",
          "More Strings! - Text directions and code",
          "Solution to exercises",
          "Working with numbers",
          "Working with numbers - Text directions and code",
          "More numbers!",
          "More numbers - Text directions and code",
          "Branching - if/else",
          "Branching - Text directions and code",
          "How many fingers game and more branching!",
          "Branching - continued - Text directions and code",
          "Arrays in Ruby",
          "Arrays in Ruby - Text directions and code",
          "Arrays - continued",
          "Arrays - continued - Text directions and code",
          "Hash",
          "Hash - text directions and code",
          "Ruby style guide",
          "Ruby style guide - Text directions",
          "Homework - Zip code",
          "Zip code homework - Text directions",
          "Zip code homework project solution",
          "Zip code homework solution - Text code",
          "Practice what you have learnt!",
          "Build a game - Procedural programming",
          "Build a game - Text directions and code",
          "Build a game - continue adding features",
          "Build a game - continue adding features - Text directions and code",
          "Build a game - complete the game!",
          "Build a game - complete the game - Text directions and code",
          "Object Oriented Programming - an introduction",
          "Intro to OOP - Text directions and code",
          "Inheritance and modules",
          "Inheritance and modules - Text directions and code",
          "Build a file reader class",
          "Build a file reader class - Text directions and code",
          "Build CSV and YML reader classes",
          "Build CSV and YML reader classes - text directions and code",
          "Automate reading file extensions",
          "Automate reading file extensions - Text directions and code",
          "Project - Word counter",
          "Project - Word counter - Text directions and code",
          "Project - Word changer",
          "Project - Word changer - Text directions and code",
          "JSON project - read and write setup",
          "JSON project - read and write setup - Text directions and code",
          "JSON project - save and complete!",
          "JSON project - save and complete - Text directions and code",
          "Preview of final project",
          "Update: update on final project due to changes",
          "Project - stock price analyzer setup",
          "Project - stock price analyzer setup - Text directions and code",
          "Stock price analyzer - part 2",
          "Stock price analyzer - part 2 - Text directions and code",
          "Stock price analyzer - part 3",
          "Stock price analyzer - part 3 - Text directions and code",
          "Stock price analyzer - Complete and wrap up Ruby section",
          "Complete stock price analyzer - Text directions and code"
        ],
        "Java": [
          "Intro to Java and section 3",
          "Hello world with Java",
          "Loops in Java",
          "While loops and more",
          "Working with user input",
          "Stacks",
          "Queue",
          "Preview - Mortgage amortization schedule",
          "Project - Mortgage amortization schedule kickoff",
          "Project - Mortgage amortization schedule continued",
          "Project - Mortgage amortization schedule - export to CSV"
        ],
        "Python": [
          "Introduction to Python",
          "Hello world in Python",
          "Strings and numbers",
          "String formatting in Python",
          "Arrays",
          "Hashes",
          "Branching - if/else",
          "Object oriented programming with Python",
          "Project 1: Compound interest calculator",
          "Project 2: Loan amortization schedule calculator",
          "Thank you for taking the course!"
        ]
      },
      "requirements": [
        "No prior experience necessary",
        "A modern browser (like chrome, firefox) and an internet connection"
      ],
      "description": "Course updated 12/20/2017 - Fully up-to-date for all sections!\nProjects in Programming Languages with Ruby, Java and Python is an in-depth and comprehensive introduction to project based programming using 3 of the most popular and financially rewarding programming languages out there - Ruby, Java and Python. Some of the most popular web app frameworks in the world today like Ruby on Rails, Django, Flask are based on these languages.\nThis is the course you have been waiting for, a one-stop-shop for everything programming that makes it easy to get started and keeps your attention while you work your way through fun and interesting projects based on real-life problems including Object Oriented Programming!\nWhat's involved?\nYou'll gain immediate access to:\n- 9.5 hours of video crystal clear video content\n- FREE live help channel exclusive for students of this course\n- 2 free e-books exclusive to this course which walk you through the video content for Java and Python\n- Group code challenges where you get to team up with other students taking the course\n- Documentation for each line of code in the course using a combo of text lectures and e-books\n- Multiple real-life projects like Stock price analyzer and Mortgage Amortization Schedule calculator\nYou'll find learning both quick and fun and if you are not satisfied - I offer a full money back guarantee, as long as you make your request within 30 days of your purchase of the course.\nAre you ready to transform your world and become a confident developer and enter one of the most lucrative fields in the world today? What are you waiting for? Join today and let’s get started!",
      "target_audience": [
        "Anyone interested in technology",
        "Anyone interested in gaining an understanding of how programming works",
        "Anyone interested in entering the technology field as a career change",
        "Anyone interested in taking the first step toward a career in development"
      ]
    },
    {
      "title": "Spring Boot: Learn Spring Boot From Scratch",
      "url": "https://www.udemy.com/course/spring-boot-learn-spring-boot-from-scratch/",
      "bio": "Learn Rest, JDBC, Database, Maven and all other details of Spring Boot with this course and become Spring Boot master",
      "objectives": [
        "Build awesome Web Applications using Spring Boot",
        "Learn every fundamental details of Spring Boot Framework",
        "Learn Environment Setups",
        "Spring Boots Development Tools",
        "Create a datasource in Spring Boot",
        "Test Rest Methods Programmaticaly",
        "Learn Using JDBC with Spring Boot",
        "Maven Build and Dependency Management",
        "Create Executable Jar File",
        "YAML and Java Based Configuration",
        "Spring Boot and Web MVC",
        "Working with JSP Technology",
        "Rest Services",
        "JDBC Query Basics",
        "Spring Test Modules",
        "Learn to use testing features of Spring Boot"
      ],
      "course_content": {},
      "requirements": [
        "Be able to download and install all the free software and tools needed to practice",
        "Prior experience on Java, Spring, Maven and Eclipse Environment is an asset",
        "A strong work ethic, willingness to learn and plenty of excitement about the back door of the Spring Framework and Spring Boot",
        "Just you, your computer and your ambition to get started now!"
      ],
      "description": "Hi there,\nWelcome to Spring Boot: Learn Spring Boot From Scratch course.\nDo you want to learn;\nRest\nSpring Boot\nEvery Fundamental Details of Spring Boot\nIf your answer is \"YES\" this course is the perfect place for you to start.\nWe designed this course for anyone who wants to understand and develop production-ready Spring Applications with minimum configurations. This course explores major features of Spring Boot such as Spring Boot Starters, Auto Configuration, Beans, Actuator, and more.\nIn this Spring Boot course you will learn;\nto create an enterprise Web Application Form from scratch,\nhandle basic necessities like Crud Scenarios, Database Connectivity, Basic Query Issues, Unit and Integration Testing\ncreating and consuming REST services.\nMajor Spring Framework Capabilities like profiling, working with different environment annotations and more\nCreating Demo Web Application and implement the domain step by step\nHow to create executable Jar Files on Project\nHow to code test classes using Spring Boot Testing Capability -Rest Services\nHow to connect a database using JDBC\nMajor Annotations\n\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, and it’s crucial to stay on top of the latest knowledge for being a better specialist. You will always have up-to-date content to this course at no extra charge.\nVideo and Audio Production Quality\nAll our contents are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "Spring Framework Developers",
        "Java Developers who wish to create quality software",
        "Java Beginner developers who are seeking marketable skills",
        "Anyone wants to learn Spring Boot Step by Step with a Hands-on Approach",
        "Anyone wants to learn how to design and develop RESTful web services with Spring Boot",
        "Anyone wants to explore major features of Spring Boot",
        "Anyone wants to create an expertise web application from the very beginning",
        "Anyone wants to learn Spring Boot Developer Tools",
        "Anyone who are beginner but wants to become expert"
      ]
    },
    {
      "title": "JavaScript AJAX XHR for beginners",
      "url": "https://www.udemy.com/course/ajax-api-javascript/",
      "bio": "Explore JavaScript AJAX how to connect to web APIs retrieve JSON data to output in your web application using JavaScript",
      "objectives": [
        "Use AJAX to get JSON data into their web pages",
        "Use XHR requests to connect to servers and APIs",
        "Explore how to connect to APIs"
      ],
      "course_content": {
        "Introduction to using JavaScript AJAX to connect to web apis": [
          "JavaScript AJAX introduction",
          "Web Developer Setup",
          "JSON JavaScript Objects",
          "Set and Get Object Data",
          "Source Code Lesson 3",
          "Save as JSON",
          "Source Code Lesson 4",
          "Foreach Iterate items from Array",
          "Source Code Lesson 5",
          "Xhr Request ReadyState",
          "Source Code Lesson 6",
          "XHR Data Ready for Use",
          "Source Code Lesson 7",
          "JSON parse and Stringify",
          "Source Code Lesson 8",
          "JSON data iterate content",
          "Source Code Lesson 9",
          "Connect to API",
          "Source Code Lesson 10",
          "JavaScript AJAX Code Review",
          "Source Code Lesson 11"
        ],
        "Bonus Section JavaScript Source Code": [
          "How to use AJAX connect to a YouTube API",
          "Source Code YouTube API with JavaScript Code example",
          "JavaScript Immediately invoked functions coding examples",
          "IIFE coding example",
          "JavaScript and JSON",
          "ForEach Method Example",
          "Extended Resource Compendium"
        ]
      },
      "requirements": [
        "JavaScript Experience and HTML and CSS",
        "You should have web development Experience"
      ],
      "description": "Welcome to our introductory course for using AJAX - Asynchronous JavaScript And XML with JavaScript\nExplore how you can use XMLHttpRequest to connect to web APIs to retrieve JSON data into your web application.  Use JavaScript to send requests, receive response content and use the response data to output into the html.\nThis course covers how to make AJAX requests using the XMLHttpRequest within JavaScript.  JavaScript code knowledge is a prerequisite for the course.  Scope of this course is focused on AJAX\nCourse Covers\nExplore what XHR is and how it works\nJavaScript Objects and how it relates to JSON data\nLearn how to use JavaScript Object data setting and updating\nHow to save JSON and lint JSON to validate JSON data\nLoop through content within JavaScript Arrays Objects and output content\nWhat JavaScript AJAX readystate is\nUse response data\nUse JSON parse and stringify to convert data objects and strings\nExplore how to use JSON data\nConnecting to web APIs\nPractice AJAX\nYou'll get friendly support in the Q&A area and all the source code available for download.\nThis Offer Won't Last Forever\nYou will be amazed at how easy it can be to do some much.\nGo ahead and hit that \"take this course\" button to start learning the AJAX Today.\nTaught by an instructor with over 20 years of web development experience, ready to help you learn and answer any questions you may have.\nWhat are you waiting join now to start learning AJAX, you have nothing to lose.",
      "target_audience": [
        "Web developers who want to practice AJAX",
        "Anyone who wants to use JavaScript xHR to connect to APIs",
        "Anyone who wants to learn more about XHR",
        "JavaScript developers"
      ]
    },
    {
      "title": "Recursion For Programmers",
      "url": "https://www.udemy.com/course/recursion-for-programmers/",
      "bio": "Algorithms and Data Structures: Recursion, the Stack and Trees",
      "objectives": [
        "Call functions recursively",
        "Understand how recursion works",
        "Understand the stack and stack frames",
        "Avoid stack corruption",
        "Use recursion in any mainstream programming language",
        "Know the pros and cons of recursion and iteration",
        "Navigate tree structures",
        "Traverse disk directories recursively",
        "Code samples in C, Java, Ruby..."
      ],
      "course_content": {
        "Understanding Recursion": [
          "What is this course about?",
          "How to follow this course",
          "Source Code Archive [DOWNLOAD]",
          "Java Code Archive",
          "Readme",
          "What is Recursion For?",
          "A Simple Recursive Function",
          "Debugging Recursion",
          "Recursion and variable scope",
          "How recursion works",
          "Recursion and Stack Frames",
          "Debugging the Call Stack",
          "Deeper into Recursion",
          "Recursion in Ruby",
          "Recursive Functions that return values",
          "Return values are special",
          "Recursion, Iteration or Arithmetic",
          "Fundamentals Of Recursion"
        ],
        "Using Recursion": [
          "Recursing Fibonacci Numbers",
          "Iterating Fibonacci Numbers",
          "Infinite Recursion",
          "The order of arguments",
          "Stack Corruption",
          "How Does Stack Corruption Occur?",
          "How The Stack Grows",
          "Stack Frames",
          "Recursing a class library",
          "Recursing through tree structures",
          "Directory Navigation – an example in C",
          "Directory Navigation – an example in Ruby",
          "Summary of Directory Navigation",
          "Recursion in Depth",
          "What next?"
        ]
      },
      "requirements": [
        "You should already be familiar with one or more programming languages",
        "You should be able to program at least one language with confidence"
      ],
      "description": "Recursion is a powerful programming technique. A function that calls itself recursively not only saves programming effort and avoids repetition but it can also be used to navigate complex structures such as Trees and Class Hierarchies.\nThis is an intermediate-to-advanced level course. It is aimed at programmers who can already program confidently in one or more programming languages. It is not appropriate for beginners.\nThe courses includes numerous short sample programs to show how recursion works. There are samples written in C, Ruby and C#. However, you don’t need to program in those languages to follow this course. Recursion works the same way in all mainstream programming languages. This course explains the theory and the practice of recursion. You can use the techniques that are taught to write recursive functions in whichever language you prefer: C, C#, Java, JavaScript, Python, Basic, Pascal and others. The course is not about any specific language.\nThis is what you will learn…\nWhat is recursion?\nHow variables are scoped in recursive functions\nHow recursive functions return values\nThe Stack and Stack Frames\nDebugging recursive functions\nRecursion v Iteration\nStack Corruption, and how to avoid it\nInfinite Recursion, and how to avoid it\nRecursing Fibonacci Numbers\nRecursing a Class Hierarchy\nTrees and recursion\nNavigating subdirectories recursively\nCode samples provided in C, Java, Ruby...",
      "target_audience": [
        "Programmers who want to understand recursion in depth",
        "Anyone who needs to extend their knowledge of algorithms and data structures"
      ]
    },
    {
      "title": "Design Patterns in TypeScript",
      "url": "https://www.udemy.com/course/design-patterns-in-typescript/",
      "bio": "Write cleaner code and enhance your development skills with TypeScript design patterns",
      "objectives": [
        "Identify and avoid violations of the SOLID Principles",
        "Create single instances of classes throughout your apps with the Singleton pattern",
        "Use factories to get instances and object pools",
        "Understand Dependency Injection and work with its benefits",
        "Use InversifyJS and learn about dependency scope",
        "Extend objects with the Decorator pattern",
        "Convert interfaces using the Adapter and Facade patterns",
        "Choose implementations on runtime using the Strategy pattern",
        "Use the Observer pattern to notify your app's components about changes",
        "Store application state using the State pattern"
      ],
      "course_content": {
        "SOLID Principles": [
          "The Course Overview",
          "Introduction to SOLID",
          "The Single Responsibility Principle",
          "The Open/Closed Principle",
          "The Liskov Substitution Principle",
          "The Interface Segregation Principle",
          "The Dependency Inversion Principle"
        ],
        "Creational Design Patterns": [
          "Introduction to Design Patterns",
          "The Singleton Pattern",
          "The Factory Pattern",
          "Loose Coupling",
          "The Object Pool"
        ],
        "Dependency Injection": [
          "Introduction to Dependency Injection",
          "Creating a Custom Container",
          "Introduction to Decorators",
          "Adding Decorators to Our Container",
          "Introducing InversifyJS"
        ],
        "Structural Design Patterns": [
          "The Decorator Pattern",
          "The Adapter Pattern – Part 1",
          "The Adapter Pattern – Part 2",
          "The Facade Pattern",
          "The Composite Pattern"
        ],
        "Behavioral Patterns": [
          "The Strategy Pattern",
          "The Observer Pattern",
          "The Command Pattern",
          "The Template Method",
          "The State Pattern"
        ]
      },
      "requirements": [
        "No prior knowledge of design patterns is required for this course."
      ],
      "description": "In programming, there are several problems that occur frequently. To solve these problems, there are various repeatable solutions; these are known as design patterns. Design patterns are a great way to improve the efficiency of your programs and improve your productivity; you'll learn them all in this course. This course is a collection of the most important patterns you need to improve application performance and productivity.\nThis course starts by exploring SOLID principles to write clean code. Then you will create new objects and instance of classes with creational design Patterns. Next, you will utilize dependency injection with InversifyJS to create testable, maintainable, and extensible code.\nMoving on, you will explore structural design patterns to better express the relationships between different application entities. Lastly, you will investigate behavioral patterns to add flow to your applications and add levels of communication between your entities.\nAbout the Author\nDimitris Loukas is a software engineer currently working with Angular, Node .js, and Docker for a referral marketing startup. He is also developing trading software applications using C# and Aurelia. He has worked for two startups in the past, is active in the open source community, and loves taking up small side-projects. He has developed microservices using C# and Node .js and has also mastered Angular, Aurelia, and Vue .js.. He was an early adopter of .NET Core and is fascinated by modern JavaScript and where the web is going.",
      "target_audience": [
        "This video is for TypeScript/JavaScript developers with basic TypeScript knowledge who want to build and maintain complex applications using design patterns."
      ]
    },
    {
      "title": "Python Web Scraping: Data Extraction with Beautiful Soup",
      "url": "https://www.udemy.com/course/python-web-scraping-data-extraction-with-beautiful-soup/",
      "bio": "Delving into Web Scraping with Python: Beautiful Soup, HTML Parsing, CSS Selectors & Practical Projects",
      "objectives": [
        "HTML & CSS Basics: Understand and navigate webpage structures for effective scraping.",
        "Beautiful Soup Mastery: Harness the full power of Beautiful Soup for advanced data extraction.",
        "HTTP Requests Management: Send, handle, and interpret web requests using the Python Requests library.",
        "Response Code Interpretation: Decode varying HTTP response codes and their implications.",
        "Real-World Scraping Projects: Build practical scrapers for tasks like price tracking and content fetching.",
        "CSS Selectors: Utilize selectors to target specific elements and data points on a webpage.",
        "Data Transformation: Convert raw scraped data into usable and actionable formats.",
        "Ethical Web Scraping: Grasp the legal and ethical considerations of data extraction from websites."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Web Scraping?",
          "Why use Python for Web Scraping?",
          "Applications of Web Scraping",
          "Is Web Scraping legal?",
          "Course Materials"
        ],
        "Requirements and Installation of Tools": [
          "Anaconda Installation: Mac and Linux",
          "Anaconda Installation: Windows"
        ],
        "Structure and parts of an HTML Document": [
          "Doctype",
          "Head Tag",
          "Body Tag"
        ],
        "Identifying elements of an HTML Document": [
          "Head and Paragraph tags",
          "List tags",
          "Table tags",
          "Anchor tags",
          "Grouping tags"
        ],
        "CSS Selectors": [
          "Class",
          "Id selector",
          "Tag or element",
          "Attribute selectors",
          "Pseudo class selectors"
        ],
        "Making Requests using the Requests Library": [
          "What is a request?",
          "GET request",
          "POST request",
          "PUT request",
          "DELETE request",
          "How to make requests in Python?",
          "HTTP Response codes"
        ],
        "Introduction to Beautiful Soup": [
          "What is Beautiful Soup?",
          "Inspecting a website on the browser",
          "How to get the HTML code from a website"
        ],
        "Extracting content using Beautiful Soup": [
          "By element name",
          "Using find and find_all methods",
          "Using CSS selectors: Element or tag name",
          "Using CSS selectors: ID and Class names",
          "Using CSS selectors: Pseudo class selector",
          "Using CSS selectors: Attribute name"
        ],
        "Project One: Creating an ebay Price Tracker": [
          "Project Description",
          "Inspecting the website and identifying the key elements",
          "Scraping the website"
        ],
        "Project Two: Obtaining the top 20 hits from a Billboard website": [
          "Project Description",
          "Inspecting the website",
          "Scraping the website"
        ]
      },
      "requirements": [
        "Computer with Internet Access: As this is a web scraping course, a stable internet connection is a must for accessing and scraping web data.",
        "Familiarity with Web Browsers: An understanding of how to navigate web browsers and use their developer tools can be helpful for inspecting website elements.",
        "Curiosity and Problem-Solving Mindset: While not a tangible prerequisite, coming into the course with a genuine interest in data and a keenness to solve problems will certainly aid in grasping concepts faster.",
        "Basic Python Knowledge: A foundational understanding of Python programming will be helpful since the course is tailored around Python-based tools and libraries."
      ],
      "description": "Harness the potential of extracting web data with our detailed course on Web Scraping using Beautiful Soup in Python. In the era where data equates to valuable assets, mastering the art of data extraction can lead to a myriad of possibilities. This course is perfect for those aiming to collect data for research, business analysis, or web content monitoring.\nBegin your journey with an introduction to the basics of web scraping. Learn why Python and its robust library, Beautiful Soup, are favorites among developers and data enthusiasts. Immerse yourself in the details of HTML structures, learning to identify and navigate through various HTML tags and mastering CSS selectors to precisely extract the data you need.\nTake advantage of the Requests library for easy and effective management of HTTP requests, simplifying the process of web content retrieval. Advance your skills with hands-on experience in Beautiful Soup, covering everything from fundamental parsing to sophisticated data extraction methods.\nPractical application is key. Our course offers numerous real-world projects, giving you the chance to apply your skills in different settings, including tracking eBay prices, extracting top hits from Billboard, sourcing movie recommendations from IMDB, and keeping an eye on Bitcoin prices.\nComplete this course with the ability to effortlessly scrape web data and turn it into valuable insights. Sign up now and take the first step towards becoming a web scraping expert!",
      "target_audience": [
        "Budding Data Enthusiasts: Anyone intrigued by the vast world of web data and eager to derive insights from it will find this course immensely valuable.",
        "Python Programmers: Individuals with a foundation in Python, looking to expand their skillset into web scraping and data extraction realms.",
        "Digital Marketers: Marketers keen on tracking competitor data, customer reviews, or market trends can harness these skills for better insights.",
        "Business Analysts: Analysts looking to gather data for market research, product comparisons, or customer sentiment analysis will benefit from the course's practical approach.",
        "Researchers and Academicians: Professionals requiring data for analysis, research papers, or academic projects will gain the ability to gather precise datasets from the web.",
        "Beginners & Career-Changers: Even if you're just starting out or contemplating a shift into a data-centric role, this course provides the building blocks for a strong foundation in web data extraction."
      ]
    },
    {
      "title": "JavaScript Certification Exam Preparation: 6 Practice Tests",
      "url": "https://www.udemy.com/course/javascript-certification-exam-preparation-6-practice-tests/",
      "bio": "6 Practice Tests with Brief Explanation for any JavaScript Certification",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Course Overview:\nThis comprehensive course is specifically designed to provide aspiring JavaScript developers with the necessary practice and preparation. With a focus on practical application, the course includes six carefully crafted practice tests that cover a wide range of topics and difficulty levels.\nCourse Features:\nSix Practice Tests: The course offers six full-length practice tests, each containing a diverse set of questions. These tests are designed to simulate the format and difficulty level of actual JavaScript certification exams.\nPractical Application: The course emphasizes the practical application of JavaScript concepts and techniques. Each practice test includes questions that require you to apply your knowledge to real-world scenarios, enhancing your problem-solving skills and reinforcing your understanding of JavaScript programming principles.\nDetailed Explanations: Following each practice test, you will receive detailed explanations for each question.\nPassing Criteria: To successfully pass the course, you must achieve a minimum score of 70% on each of the six practice tests.\nWho Can Enroll:\nThis course is suitable for individuals at various stages of their JavaScript programming journey. Whether you are a beginner seeking to gain a solid foundation in JavaScript or an experienced developer aiming to validate your skills through certification, this course will provide the necessary practice and guidance. It is ideal for:\nJavaScript enthusiasts eager to test their knowledge and skills.\nStudents preparing for JavaScript certification exams.\nProfessionals seeking to enhance their employability by obtaining a JavaScript certification.\nProgrammers looking to expand their proficiency in JavaScript.\nRegards,",
      "target_audience": [
        "JavaScript enthusiasts eager to test their knowledge and skills.",
        "Students preparing for JavaScript certification exams.",
        "Professionals seeking to enhance their employability by obtaining a JavaScript certification.",
        "Programmers looking to expand their proficiency in JavaScript."
      ]
    },
    {
      "title": "A Full Introduction to C++ with Objects",
      "url": "https://www.udemy.com/course/introduction-to-c-plus-plus/",
      "bio": "C++ Beginner Course with Objects - Including Arrays",
      "objectives": [
        "A introductory understanding of how to program."
      ],
      "course_content": {},
      "requirements": [
        "No Programming Skills, Visual Studio (Free Download from Microsoft)"
      ],
      "description": "This course is an introduction to C++.  This will teach you how to program in C++. It introduces many of the major ideas and prepares you for further development.  It covers basics such as IF, SWITCH, FOR, WHILE, functions, classes, arrays, and much more. I regularly teach this course in college; it is equivalent to a one semester course in C++.\nThis course benefits every student because it teaches the best programming language - ever. C++ is the foundation to everything. It is clean and beautiful and effective.\nThis course teaches if statements, loops, functions, classes, and arrays. It is an introduction to C++.  It is a first course in C++ including arrays and objects.",
      "target_audience": [
        "Anyone"
      ]
    },
    {
      "title": "Python Bootcamp : Complete Python Programming Masterclass",
      "url": "https://www.udemy.com/course/python-bootcamp-complete-python-programing-masterclass/",
      "bio": "Learn Python by doing real Python Projects. Complete Python Programming masterclass for beginners and intermediates.",
      "objectives": [
        "Complete mastery of Python programming",
        "Acquire the necessary Python skills to work on real projects.",
        "Learn Web development using Python",
        "Learn API programming using Python",
        "Create a weather forecasting app",
        "Create Payment Gateway integration for accepting payments in ecommerce",
        "Mater to use MySQL database in Python",
        "Build your own packages and modules"
      ],
      "course_content": {},
      "requirements": [
        "Your zeal and enthusiasm to learn programming using Python and a computer (any of the Mac, WIndows or Linux). Rest is taken care of.",
        "No prior knowledge of programming is required."
      ],
      "description": "This python programming masterclass is a practical course for complete beginners as well as existing programmers. This course has more than 100 hands on, assignments and projects. We have designed this course in such a manner that at the end of this Python Bootcamp, you can apply for jobs as Python Developer, ace your Python interviews and start working on a real-life Python projects.\nAs part of working on various projects, you will create your own,\nInteractive phonebook using Python Lists\nDo Financial File reconciliation  with Python Files\nEmployee Salary Processing for Bonus Calculation\nTracker by monitoring the Timekeeping and Logging using decorators\nWeather Forecasting Web app\nPayment gateway Integration using Razorpay Python SDK\nAs of now, no Python programming course on Udemy teach payment gateway integration during a Python Programming Masterclass.\nPython is one of the hottest skills in demand. According to the Stackoverflow developer survey 2020, python is the most wanted programming language by the professional developers. Python is also ranked way above the other traditional programming languages as on July 2020. Top employers such as google where Python is one of the official server side languages and Instagram which runs the largest deployment of python web framework and many other top employers hire python developers\nNo wonder then, python developers earn average $119,053 per year as per a report by Indeed.\nToday, python is used for Web Development, Mobile app development, Data Science and Machine learning, Game Development, Cloud and various other automations.\nAll these opportunities and high paying jobs will require a detailed knowledge of Python as well as some real hands on of working on Python projects in real life environment. This course will teach you just that.\nAt the end of the course, you will be able to apply for jobs as well as work on real projects.\n\n\nWill I get enough core knowledge of Python with Hands on?\nAbsolutely YES. This Python Bootcamp will teach you right from Python basics as well as advanced Python concepts. Because Python is used in variety of fields, you require some common core Python skills using which you can then advance in respective fields. With this course, multiple opportunities will open for you. Every concept follows with a very comprehensive hands on, starting simple and slowly increasing in complexities. You will also have various assignments and quizzes to test your knowledge. This will surely build your confidence.\n\n\nWhy should I enroll in this Python Bootcamp?\nThat's a very valid question to ask. Most of the courses on Udemy simply teach basics of Python. Even for advanced concepts, they provide basic examples and never really explore the depth of the topics. While I will start with the very basic and simple explanations, I have made sure that you will learn some complex Python programming skills. As we progress through the course, I will make sure you come out as a seasoned Python programmer even though you may have never programmed a single line before taking this course.\nI have more than 20 years of experience in the technology field and have worked with various fortune 500 companies as well as governments across the world. I do not just teach but has been working as a professional for more than 20 years. So you get the best of the real-world commercial applications. I will teach you not just Python but how the real programmer should think and apply the programming in practical scenarios.\n\n\nHow this Python Bootcamp will help me build my resume and apply for jobs?\nWell, every employer looks for the knowledge and practical skills you can bring to their organization. One of the major factors for that is the demonstrable theory as well as hands-on skills in Python. You will work on various projects as part of this Python Bootcamp. These days, almost all the real-life projects require integration with multiple systems. Some of the notable ones that you will build, are, your own weather forecasting application as well as Payment Gateway integration for ecommerce. Both these projects require advance Python integration skills as well as complete database management knowledge. I will teach you that for sure. When you showcase these projects, it will surely increase your employability as well as make you stand apart from the crowd. Apart from that, you will also get the course completion certificate that will further boost your resume credibility.\n\n\nWhat Python topics are covered in this course?\nIf you are completely new, you may or may not understand every word of this paragraph but I promise you, it covers all that it takes to learn and master Python.\nWe will start by showing how to install the Python development toolkit on all the three platforms of Windows, MacOS and Linux-Ubuntu. Then you will start learning and gaining the expertise of the Python programming skills as follows,\nAll the basics and essentials - In this section, we will start from the basic data types in Python such as integer, Float, String. It is important to learn them as data types are used to store and classify data in Python. We will also go through various Python built-in functions and how we can deal with the Python Basic Datatypes.  You will learn various Arithmetic Operators, Math functions, Python String indexing and slicing, Split the string, string formatting and much more. After this section, you will be much more confident of handling the data as well as data processing using Python data types.\nPython control flows - In this section, you will learn how to handle the control flow or conditional statements in Python. I will explain using basic flow charts as well as how to create these flowcharts for better development using Python. We will learn, normal IF-ELSE blocks, shorthand IF, how to debug the code and test conditions, nested IF-ELSE blocks, elif as well as the conditional statements with various Python operators such as AND, OR, IN.\n\n\nPython Loops and iterative statements - In this Python Section, we will go through the For and While loops in Python. We will not only learn how to build repetitive functionality but also various Python functions in loops such as range, enumerate, nested loops as well as how to continue and break a loop. At every stage, you will be provided with hands on exercises and assignments for every topic.\n\n\nAdvance data types and their functions and methods - In order to master the true depth of Python, it is absolutely essentials to learn the advance data types such as List, Dictionary and Tuples. At this stage, we will also build a small project of Phonebook creation using everything Python, that we have learnt so far.\n\n\nAdvance Python Concepts - Once we have mastered the basics with enough hands on and project, we will learn and master the more advance topics of Object Oriented Programming using Python. Every concept will be explained in great detail and simple to understand example. Many topics such as Python Modules and Packages, Python Functions and Decorations, Errors and exception handling in Python will be mastered. Most of the Python courses do not touch these topics or simply give basics of it. However, these are the most essential practical skills for Python developers.\n\n\nComplete database handling using Python - It is impossible to imagine any real-life Python project without a database. You must know at least one database with all types of SQL statements as well as how to connect and manipulate the database using Python. But sadly again this is one of the topics that is ignored by many courses. In this Python Bootcamp, we will install, get the refresher as well as code every SQL statement using Python and MySQL. That's another skill you can add to your resume with just one course.\n\n\nWeb Development using Python's Flask Web Framework - Flask is one of the top two web development frameworks used with Python. We will learn some simple yet fully functional webapp and work on developing your own Python webapp. You will understand various nuances of web development using Python, how to create your homepage, how to write backend functionality as well as the frontend templating engine of Flask in Python.\n\n\nAPI Programming using Python and Flask - This is the most unique selling point of this course. As I told you, no real application these days can not exist without integrating with another application. This is achieved using Application Programming Interface or APIs. You will learn what is an API, how to code them as well as build real-time integration with OpenWeather weather information provider. We will build our own weather forecasting webapp as well as a real-time Payment Gateway integration for accepting the payment. I bet this is very rare on any online Python Programming Masterclass.\n\n\nHow do I interact if I have questions or doubts?\nUdemy has Questions and Answers forum where you can ask any doubts, queries or if you have issues related to this Python course. I answer every question almost on a daily basis. So you will never be left alone. You will get completely dedicated and full support while you are going through the course. I promise it will be a smooth journey and you will never be stuck on any point. I have more than 25,000 students enrolled in various courses, and still have answered all the questions for so many years.\n\n\nIs this Python course updated regularly?\nAbsolutely. I update all my courses on a regular basis including any changes that have happened in the technology as well as outside world. Once taken, you will always be up to date with any new changes. The technology world is changing fast. Many instructors simply release the course and never update them, even if the Python versions have changed. That's never the case with us. Even if you complete this Python course now and if new Python versions are released in future, you don't have to look elsewhere. You can come back and visit your Python Bootcamp to check all the new updates and learn them.\n\n\nWhat if I don't like the course?\nWith all the hard work and decades of programming experience that we are imparting in this Python course, we are pretty confident that you will love this course. However, if for some reason, we could not come up to your expectations, well, here is the good news. This course is completely risk free. This Python Bootcamp also comes with a 30-day money back guarantee from Udemy. So there is absolutely no risk in enrolling in this Python Programming Masterclass. You are free to take your refund and also keep all the Python artefacts and programs from this course.\nIn any case, there is only one possible outcome from this Python Bootcamp; you will become an awesome Python developer and climb up the ladder of a successful career.\n\n\nSo what are you waiting for you. Hit the Enroll button and I will see you inside the course.\n\n\nDisclaimer: All images used in the videos are purchased under license from Shutterstock or from Pixabay",
      "target_audience": [
        "Anybody who wants to learn and master Python Programming for real world"
      ]
    },
    {
      "title": "Fast C# by Windows Forms to Create Pro Windows Apps",
      "url": "https://www.udemy.com/course/fast-c-by-windows-form-pro-apps/",
      "bio": "Easily and deeply learn the C# by Creating Apps for Windows - Beginners to advance topics",
      "objectives": [
        "10 Courses in One + 80 Hours - Learn with Projects , Beginners, Interm and Advance",
        "Build 3 pro apps: Calculator , Phone Book and Diary application",
        "Easily learn the basics of C# to advance topics by Windows form method",
        "Learn: Variables,Controls, Debug, Events",
        "Using Files, Folders and text files",
        "Working with resources and settings",
        "Windows clipboard - RTF files",
        "Date and time - Calendar"
      ],
      "course_content": {},
      "requirements": [
        "Windows operating system"
      ],
      "description": "Hi There!\nWith my 20 years programming skills I'm with you to share my knowledge with you.\nSo\nIf you try you will learn using C# to create C# Apps for windows!\nIf you are beginners or student looking for a tutorial to create Windows App in C# in simplest way!\n\n\nI started from beginning and show you how to :\n3 Courses in One + 30 Hours + 3 live Projects\nCreate Windows Apps by C#\nBasics of C# like: variables\nfor loop structure\nIf statement\nControls and events\nResources in C#\nWorking with files and folders\nUsing text file to save data\nDebugging the codes\nCreate calculator application\nDesign Phone Book application\nBuild Diary application for windows\nCreating MDI and ADI projects\nControls like : Button, TextBox, CheckBox, ComboBox and ListBox\nCreate digital clock\nWorking with date and time\nCreate a calendar\nWorking with RTF files\nSave and load data in RTF format\nAdvance using of combobox\nWorking with images\nDialogs in C#:\nWorking with logical operators\nCreating method and class in C#\nUsing Clipboard of Windows to save and load data\nand...\nDon't hesitate to start learning C#!\nEvery thing will be discussed with sample project and you will have lot of fun within my course.\nLet's go !!!",
      "target_audience": [
        "Any one who wanna learn C# Deeply and quickly"
      ]
    },
    {
      "title": "Python, Java and PHP Essentials: Complete Coding Bootcamp",
      "url": "https://www.udemy.com/course/python-java-and-php-essentials-complete-coding-bootcamp/",
      "bio": "Master the Essentials of Python, Java and PHP: Learn to Code, Build Projects, and Enhance Your Programming Skills.",
      "objectives": [
        "Overview of Programming Languages: Python, Java, and PHP",
        "Understanding Programming Paradigms: Procedural, Object-Oriented, Functional",
        "Basic Syntax and Structure of Each Language",
        "Variables, Data Types, and Operators",
        "Control Structures: Conditionals and Loops",
        "Data Structures: Lists, Tuples, Sets, and Dictionaries",
        "Python Functions and Modules",
        "Object-Oriented Programming in Python, Java, PHP",
        "Python Libraries and Frameworks (e.g., NumPy, Pandas)",
        "Python for Data Science: Basics and Tools",
        "Python Functions and Modules",
        "Inheritance, Polymorphism, and Abstraction",
        "Java Input/Output (I/O) Streams",
        "Java Multithreading and Concurrency",
        "Connecting to Databases with JDBC",
        "Building Java Web Applications with Spring Boot",
        "PHP Sessions and Cookies Management",
        "File Handling in PHP: Reading, Writing, and Uploading",
        "PHP and MySQL Database Integration",
        "Building a Simple CRUD Application with PHP"
      ],
      "course_content": {
        "Essentials Bootcamp: Introduction to Programming and Course Overview": [
          "Overview Of Programming Languages - Python, Java and PHP",
          "Understanding Programming Paradigms - Procedural, Object-Oriented, Functional",
          "Basic Syntax and Structure of Each Language"
        ],
        "Python: Python Programming Basics": [
          "Writing Your First Python Program",
          "Python Variables, Data Types, and Operators",
          "Control Structures: Conditionals and Loops",
          "Python Functions and Modules",
          "Error Handling and Debugging in Python",
          "Hurdles Challenge using While Loops"
        ],
        "Python: Advanced Python Concepts": [
          "Data Structures: Lists, Tuples, Sets, and Dictionaries",
          "Object-Oriented Programming in Python",
          "Working with Files: Reading and Writing",
          "Python Libraries and Frameworks (e.g., NumPy, Pandas)",
          "Introduction to Web Development with Python (Flask/Django)",
          "Python for Data Science: Basics and Tools"
        ],
        "Java : Java Programming Basics": [
          "Introduction to Java: History and Features",
          "Writing Your First Java Program",
          "Java Variables, Data Types, and Operators",
          "Control Structures in Java: If-Else, Switch, Loops",
          "Java Methods and Exception Handling",
          "Introduction to Java Collections Framework",
          "Exceptions"
        ],
        "Java: Advanced Java Concepts": [
          "Object-Oriented Programming in Java",
          "Inheritance, Polymorphism, and Abstraction",
          "Java Input/Output (I/O) Streams",
          "Java Multithreading and Concurrency",
          "Introduction to JavaFX and GUI Programming",
          "Connecting to Databases with JDBC",
          "Building Java Web Applications with Spring Boot"
        ],
        "PHP: PHP Programming Basics": [
          "Writing Your First PHP Script",
          "PHP Variables, Data Types, and Operators",
          "Control Structures in PHP: Conditional Statements and Loops",
          "Functions in PHP: Defining and Using",
          "Error Handling and Debugging in PHP",
          "Nested if Statement"
        ],
        "PHP: Advanced PHP Concepts": [
          "Working with PHP Arrays and Strings",
          "Object-Oriented Programming in PHP",
          "PHP Sessions and Cookies Management",
          "File Handling in PHP: Reading, Writing, and Uploading",
          "PHP and MySQL Database Integration",
          "Building a Simple CRUD Application with PHP",
          "Introduction to PHP Frameworks (Laravel, Symfony)"
        ]
      },
      "requirements": [
        "No prior knowledge is required!"
      ],
      "description": "Are you ready to become a versatile and in-demand developer? \"Python, Java, and PHP Essentials: Complete Coding Bootcamp\" is your all-in-one guide to mastering three of the most popular programming languages. Whether you're starting your coding journey or looking to expand your skill set, this course is designed to equip you with the essential knowledge and practical skills needed to succeed in the world of programming.\n\n\nWhat You Will Learn:\nPython Fundamentals: Begin with Python, the language known for its simplicity and readability. Learn the basics of Python syntax, data structures, functions, and modules. Explore how to use Python for web development, data analysis, and more.\nJava Programming: Dive into Java, a powerful, object-oriented language widely used in enterprise applications, Android development, and web applications. Learn Java syntax, object-oriented programming (OOP) concepts, and how to build robust, scalable applications.\nPHP Development: Master PHP, the server-side language that powers over 75% of websites on the internet. Learn how to create dynamic web pages, interact with databases, and build fully functional web applications with PHP.\nCross-Language Concepts: Understand the similarities and differences between Python, Java, and PHP, and learn how to choose the right language for the task at hand. Gain insights into how these languages complement each other in full-stack development.\nReal-World Projects: Apply what you learn with hands-on projects that involve building web applications, creating software solutions, and solving real-world problems using Python, Java, and PHP.\n\n\nWhy Choose This Course?\nComprehensive Coverage: Master three essential programming languages in one course, giving you a strong foundation for a wide range of development projects.\nHands-On Learning: Engage with practical exercises, coding challenges, and projects that reinforce your learning and help you build a portfolio of work.\nExpert Instruction: Benefit from the guidance of an experienced instructor who breaks down complex concepts into easy-to-understand lessons.\nLifetime Access: Learn at your own pace with lifetime access to course materials, allowing you to revisit lessons and projects whenever you need.\nCareer Ready Skills: Prepare yourself for a career in software development, web development, or full-stack development by mastering Python, Java, and PHP.\nWho Should Enroll?\nAspiring Developers: Start your coding journey with a comprehensive introduction to Python, Java, and PHP.\nIntermediate Programmers: Expand your skill set by learning additional languages and understanding their applications.\nWeb Developers: Enhance your backend development skills by mastering PHP and Java, alongside Python.\nAnyone: Whether you're new to programming or looking to broaden your expertise, this course is for you!\n\n\nBy the end of this course, you'll have the knowledge and skills needed to confidently develop software and web applications using Python, Java, and PHP. Join us and take the first step toward a successful career in coding!\n\n\nDon't miss the opportunity to become a skilled and versatile developer. Enroll in \"Python, Java, and PHP Essentials: Complete Coding Bootcamp\" today and start your journey towards mastering the world's most popular programming languages!",
      "target_audience": [
        "Start your coding journey with a comprehensive Python, Java, and PHP.",
        "Expand your skill set by learning additional languages and understanding their applications.",
        "Anyone interested in a comprehensive, project-driven approach to mastering web development."
      ]
    },
    {
      "title": "High-Performance Computing with Python 3.x",
      "url": "https://www.udemy.com/course/high-performance-computing-with-python-3x/",
      "bio": "Build high-performance, distributed, and concurrent applications in Python",
      "objectives": [
        "Use lambda expressions, generators, and iterators to speed up your code.",
        "A solid understanding of multiprocessing and multithreading in Python.",
        "Optimize performance and efficiency by leveraging NumPy, SciPy, and Cython for numerical computations.",
        "Load large data using Dask in a distributed setting.",
        "Leverage the power of Numba to make your Python programs run faster.",
        "Build reactive applications using Python."
      ],
      "course_content": {
        "Getting Started with Faster and Efficient Python Code": [
          "The Course Overview",
          "Exploring Python Datatypes",
          "Using Lambda Expressions",
          "Comprehensions for Speedups",
          "Generators and Iterators",
          "Using Decorators for Time Analysis"
        ],
        "Parallel Programming in Python": [
          "Introduction to the Threading Module",
          "Using Threads with Locks",
          "Global Interpreter Lock",
          "Multiprocessing in Python",
          "Using a Pool of Workers"
        ],
        "Using NumPy and SciPy to Speedup Computations": [
          "Introduction to NumPy",
          "Exploring NumPy Arrays",
          "Indexing in NumPy Arrays",
          "Operations and Broadcasting on NumPy Arrays",
          "Performance Comparison of NumPy Arrays",
          "Combining SciPy with NumPy"
        ],
        "Optimizing Python Code Using Cython": [
          "Introduction to Cython",
          "Implement a Program Using Cython",
          "Time Analysis of a Cython Program",
          "Cython Data Types",
          "Using Cython Functions",
          "Combining NumPy and Cython"
        ],
        "Speeding Up Your Python Code Using Numba": [
          "Introduction to Numba",
          "Setting Up Numba",
          "Creating Your First Program with Numba",
          "Digging Deeper into Numba",
          "Threading Using Numba",
          "Performance Comparison with Numba"
        ],
        "Distributed Computing Using Python": [
          "Introduction to Synchronous Programming",
          "Understanding Asynchronous Programming",
          "Asynchronous Programming in Python",
          "Distributed Systems Architecture"
        ],
        "Distributed Programming Using Dask": [
          "Introduction to Dask",
          "Setting Up Dask",
          "Blocked Algorithms and Dask Arrays",
          "Writing Your First Program Using Dask",
          "Using @delayed to Parallelize Code",
          "Performance Comparison with Dask"
        ],
        "Reactive Programming Using Python": [
          "Introduction to Reactive Programming",
          "Observables and Observers",
          "Overview of Data Operators",
          "Reactive Programming in Python Using RxPy",
          "Using Data Operators with RxPy"
        ]
      },
      "requirements": [
        "Familiar with basic Python programming to extend their skillset"
      ],
      "description": "Python is a versatile programming language. Many industries are now using Python for high-performance computing projects.\nThis course will teach you how to use Python on parallel architectures. You'll learn to use the power of NumPy, SciPy, and Cython to speed up computation. Then you will get to grips with optimizing critical parts of the kernel using various tools. You will also learn how to optimize your programmer using Numba. You'll learn how to perform large-scale computations using Dask and implement distributed applications in Python; finally, you'll construct robust and responsive apps using Reactive programming.\nBy the end, you will have gained a solid knowledge of the most common tools to get you started on HPC with Python.\nAbout The Author\nMohammed Kashif works as a Data Scientist at Nineleaps, India, dealing mostly with graph data analysis. Prior to this, he was working as a Python developer at Qualcomm. He completed his Master's degree in computer science from IIIT Delhi, with specialization in data engineering. His areas of interest include recommender systems, NLP, and graph analytics. In his spare time, he likes to solve questions on StackOverflow and help debug other people out of their misery. He is also an experienced teaching assistant with a demonstrated history of working in the higher-education industry.",
      "target_audience": [
        "This course will help Python Programmers, Data Analysts and aspiring Data Science professionals."
      ]
    },
    {
      "title": "Create a Survival Game in Javascript with Phaser 3",
      "url": "https://www.udemy.com/course/create-a-survival-game-in-javascript-with-phaser-3-in-2020/",
      "bio": "Covers ES6, Classes, Arrays, Objects, Functions, Phaser 3, Tiled and more!",
      "objectives": [
        "Javascript, Phaser 3, Tiled and game design"
      ],
      "course_content": {
        "Introduction": [
          "The Survival Game"
        ],
        "Getting Started": [
          "Software",
          "Getting The Source Code",
          "Before We Start The Code",
          "Start The Code"
        ],
        "Mainly The Player": [
          "What's The Matter",
          "Spritely Player",
          "Animated Player",
          "Refactor Player One",
          "Lazy Player",
          "Well Rounded Player"
        ],
        "The Map": [
          "Tiled Map",
          "Nicer Map",
          "Map Collider"
        ],
        "Hulk Those Resources": [
          "Hulk Game",
          "Errata Mondatta!!!",
          "Be Resourceful",
          "Classy Resource"
        ],
        "Careful With That Axe Eugene": [
          "Pickaxe",
          "Don't Stand So",
          "Dead Healthy",
          "Dropsy",
          "The Entity"
        ],
        "Know Your Enemy": [
          "Enemies",
          "Enemies With Class",
          "Enemy Placement",
          "Enemy Empowerment"
        ],
        "The End Of The Beginning": [
          "Death Shall Have Dominion",
          "Congratulations",
          "The 'Finished' Code"
        ],
        "Bonus": [
          "Bonus Video"
        ]
      },
      "requirements": [
        "Intermediate javascript knowledge"
      ],
      "description": "If you need to practise your javascript...\nIf you want to learn some new ES6 stuff...\nIf you have ever wanted to create a survival game...\nThen this course is for you!\nYou will get experience using:\nES6\nClasses\nArrays\nObjects\nFunctions\nPhaser 3\nTiled\nAnimation\nSpritesheets\nCreating a survival game is fun and a great way to learn some Javascript and Phaser fundamentals.\nThe game includes:\nAnimations\nBasic Enemy AI\nAudio\nMouse & Keyboard Input Handling\nAdvanced Matter Physics\nFull source code is included.\nI hope you enjoy the course!\n\n\nAbout me\nI've been developing games using Unity3D for over 7 years now. I currently have ten games published on the Android app store. My first game I ever wrote, 'Isle Survive', has had over 1 million downloads and an average rating of 4 out of 5. I have also written numerous Unity plugins to enable adding features to mobile games like advertising banners and 'In-App' purchasing.\nAccount packages, haulage systems, mainframe processors, websites... I've done all sorts of programming but now I try to write games and it is so much more fun!\nI still remember how excited I was, getting my ZX81 and writing my first few lines of BASIC. Yes I'm that old...\nI love how the barrier of entry to game development has been lowered these past few years. I'm sure this has a lot to do with the current indie game explosion and I'm very excited for the future.\n\n\nWhy not join my discord server and say hello?!",
      "target_audience": [
        "Intermediate javascript developers"
      ]
    },
    {
      "title": "Fortran Programming Complete Course",
      "url": "https://www.udemy.com/course/fortran-course/",
      "bio": "Learn Fortran Programming \"The Language of Scientific and Engineering Excellence\" in professional way",
      "objectives": [
        "You will learn to use Fortran professionally, starting from zero level!",
        "You will understand the logic of Programming step by step and from scratch, for beginners",
        "You will become perfectly familiar with the Fortran interface and workspace to configure and prepare all aspects of the coding",
        "You will discover how to program loops, decisions, or how to fix and understand the errors",
        "You will master the programming of Arrays, Derived Type Structures, Handling Characters, or Subprgarms and Modules",
        "You will work with complex features such as Pointer Variables, Derived Types Structures, Matrices and much more",
        "You will be able to apply everything learned in advanced applications such as Numerical Methods",
        "You will build a complete understanding of Fortran from the ground up and in a practical way!"
      ],
      "course_content": {
        "Getting Going": [
          "What is Fortran?",
          "Downloading and installing the software to program in Fortran",
          "Running Fortran Programs",
          "Quiz"
        ],
        "Elementary Fortran I": [
          "Compound Interest Again",
          "Program Layout",
          "Data Types",
          "Literal Constants",
          "Names and Variables",
          "Vertical Motion under Gravity",
          "Program Style",
          "Numerci Expressions",
          "Numerical Assignment",
          "Simple Input and Output",
          "Section 2 Summary"
        ],
        "Elementary Fortran II": [
          "DO Loops",
          "Deciding with IF-THEN-ELSE",
          "Characters",
          "Named Constants",
          "Kind",
          "Complex Type",
          "Introduction to Intrinsic Functions",
          "Section 3 Summary"
        ],
        "Program Preparation": [
          "Introduction",
          "Flowcharts",
          "Structure Plans",
          "Structured Programming with Procedures",
          "Section 4 Summary"
        ],
        "Decisions": [
          "Introduction",
          "The IF Construct",
          "Logical Type",
          "The CASE Construct",
          "The GO TO Statement",
          "Section 5 Summary"
        ],
        "Loops": [
          "Introduction",
          "Deterministic Repetition",
          "The DO in General",
          "Do with Non-Integer Increments",
          "Nested DOs: Loan Repayments",
          "Non-deterministic Loops",
          "Taking Stock: Modelling a Population of Gnus",
          "Section 6 Summary"
        ],
        "Errors": [
          "Introduction",
          "Compilation Errors",
          "Run-time Errors",
          "Errors in Logic",
          "Rounding Error",
          "Section 7 Summary"
        ],
        "Subprograms and Modules": [
          "Introduction",
          "Internal Subprograms",
          "The Main Program",
          "External Subprograms",
          "Interface Blocks",
          "Modules",
          "Scope",
          "Arguments",
          "Generic Subprogram Names: Overloading I",
          "Generic Subprogram Names: Overloading II",
          "Recursion",
          "Section 8 Summary"
        ],
        "Arrays": [
          "Introduction",
          "Mean and Standard Deviation",
          "Basic Rules and Notation",
          "Arrays as Subprogram Arguments",
          "Allocatable (Dynamic) Arrays",
          "Top of the Class",
          "Sorting a List: The Bubble Sort",
          "Sorting a List: Quick Sort",
          "More Array Features",
          "Section 9 Summary"
        ],
        "Advanced Input and Output": [
          "Introduction",
          "Rabbit Breeding the Fibonacci Way",
          "The PRINT Statement",
          "Formating Features",
          "Formatted READ",
          "Formatted WRITE",
          "Internal Files",
          "External Files",
          "Non-advancing I/O",
          "Miscellaneous",
          "Section 10 Summary"
        ]
      },
      "requirements": [
        "Having some basic notion of programming or maths can help, but the course starts from scratch",
        "Downloading and installing the software to work (if you don't know how, don't worry, it's very easy, free, and I'll explain it to you in class 2!)",
        "A decent computer and above all, a desire to learn!"
      ],
      "description": "Become a Fortran Programmer and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed for students, engineers, researchers... to be able to use Fortran language from scratch to program in a simple and practical way. Never mind if you have no experience in programming, you will be equally capable of understanding everything and you will finish the course with mastery of the subject.\nAfter several years working as an Engineer, I have realized that mastering Fortran to program today is something very necessary in engineering or other programming applications. Some people thinks that Fortran is an old, but the fact is that the demand is increasing. Knowing how to program this language can give you many job opportunities and many economic benefits, especially in the scientific or engineering field.\nThe big problem has always been the complexity to learn that programming requires, since its understanding is not easy. In this course I try to facilitate this entire learning and improvement process, and you will be able to carry out and understand your own codes in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith over 100 lectures and more than 7 hours of video this comprehensive course leaves no stone unturned! This course includes coding exercises and theoretical explanations as well as practical examples to master Fortran. This course will teach you Fortran in a practical manner.\nWe will start by helping you get Fortran installed on your computer, regardless of your operating system, whether its Linux, MacOS, or Windows, we've got you covered.\nThen, we will cover a wide variety of topics, including:\nInstallation and Introduction to Fortran\nElementary features\nProgram Preparation\nDecision\nLoops\nErrors\nSubprograms and Modules\nArrays\nAdvanced Input and Output\nHandling Characters\nDerived Types Structures\nPointer Variables\nSimulation\nMatrices and Their Applications\nIntroduction to Numerical Methods\nPractical Exercises\nand much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody told me. In this way, you will be able to learn to code different types of algorythms quickly and make versatile and complete use of Fortran language. And if that were not enough, you will get lifetime access to over 100 lectures and I will be at your disposal and I will answer all the questions you want in the shortest possible time.\nLearning Fortran and Programming has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never programmed before",
        "Programers switching languages to Fortran",
        "Itermediate or advanced Fortran programmers who want to level up their skills!"
      ]
    },
    {
      "title": "Learn C# Coding Basics for Beginners: C# Fundamentals",
      "url": "https://www.udemy.com/course/csharp-tutorial-for-beginners-csharp-coding/",
      "bio": "Learn in-demand C# Basics to level up your career as a Professional - by Microsoft Certified Professional",
      "objectives": [
        "Learn the fundamentals of C# and .NET Framework",
        "Strong on Core Basics on C# language for apps",
        "Learn ChatGPT AI to write your real-world source code for your projects",
        "You will be Apply Variables and Datatypes",
        "What are Operator and Strings in C# language",
        "Writing Sequences and Statements",
        "Learn to code on Control flow statements",
        "Using Arrays and lists for real world data",
        "Working with external File and Directories",
        "Learn what is Generative AI for future learning"
      ],
      "course_content": {},
      "requirements": [
        "Basic computer operating skills",
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "Kickstart your programming career with \"Learn C# Coding Basics for Beginners: C# Fundamentals.\" This introductory course is designed for those who are new to programming or looking to learn C#—a powerful, versatile language used in web development, game development, and software engineering.\n\n\nIn this course, you'll start with the core concepts of C# programming, including variables, data types, operators, and control structures. You’ll also learn how to write basic functions, handle errors, and work with collections like arrays and lists. which are key to building scalable and maintainable applications.\n\n\nThroughout the course, you'll gain hands-on experience through coding exercises and real-world examples. You’ll build a strong foundation in C# that will empower you to create simple applications, automate tasks, and solve real-world problems.\n\n\nparticipate on exercises and assignments to test your learning experience\n\n\nThis course is designed with beginners in mind, so no prior programming experience is necessary. With clear explanations, practical demonstrations, and engaging exercises, you'll quickly gain confidence in C# coding.\n\n\nBy the end of this course, you’ll have the knowledge and skills to start building your own projects and move on to more advanced topics in C#. Start learning C# today and unlock the door to countless programming opportunities!",
      "target_audience": [
        "Newbies or students looking for a refresher on the basics of C# and .NET",
        "Beginner C# developers curious about Web application development using Microsoft technologies",
        "Any one who are interested in programming",
        "Who wants Learn to Apply ChatGPT AI learning experience on C# language"
      ]
    },
    {
      "title": "JavaScript: The Critical Parts Masterclass",
      "url": "https://www.udemy.com/course/javascript-the-critical-parts-masterclass/",
      "bio": "Master in-depth JavaScript best practices. The important WHY, HOW and WHAT of critical JavaScript programming.",
      "objectives": [
        "Critical JavaScript Concepts, Practices and Techniques",
        "Fundamental JavaScript Concepts: Engine, Heap, Call Stack and Event Loop",
        "Object Oriented Programming",
        "Functional Programming",
        "Critical Asynchronous Coding Patterns",
        "All Facets of JavaScript Modules",
        "Error Handling",
        "Critical JavaScript Shortcuts",
        "Execution Context and Lexical Environment",
        "Ubiquitous Nature of Objects",
        "Scope and Block Scope",
        "Type Coercion with Truthy and Falsey",
        "Callbacks",
        "Keyword this",
        "Using call, apply and bind",
        "First Class and Higher Order Functions",
        "Closure",
        "Critical JavaScript Patterns",
        "Immediately Invoked Function Expressions (IIFEs)",
        "Prototype Chain",
        "Constructors, Factory Functions and Classes",
        "Promises and Async Await",
        "Static Method for Asynchronous Patterns",
        "BigInt",
        "Arrow Functions and their Affects on the Keyword this",
        "And Much More"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "How to be Successful in this Course",
          "Getting Set Up",
          "What about Node.js?",
          "Working with JavaScript Code"
        ],
        "Critical JavaScript Concepts": [
          "Introduction",
          "The JavaScript Runtime Environment",
          "Understanding the JavaScript Engine",
          "The Memory Heap and Call Stack",
          "Understanding Garbage Collection",
          "Removing Event Listeners",
          "Understanding the Event Loop",
          "The Node Runtime Environment",
          "Exercise Start: Exploring Call Stack and Event Loop",
          "Exercise End: Exploring Call Stack and Event Loop",
          "How JavaScript Evolves"
        ],
        "Critical Fundamentals": [
          "Section Introduction",
          "The Execution Context",
          "A Consistent Global Object",
          "Hoisting",
          "Function Declarations Versus Function Expressions",
          "Exercise Start: Function Execution Context",
          "Exercise End: Function Execution Context",
          "Lexical Environment",
          "Scope and the Scope Chain",
          "Block Scope",
          "Exercise: Using let in a for Loop",
          "Creating Constants",
          "Should You Continue Using var?",
          "Global Variables and the Danger of the Scope Chain",
          "Exercise Start: Scope",
          "Exercise End: Scope",
          "JavaScript and Data Types",
          "Objects are Everywhere",
          "Type Coercion",
          "Making Use of Truthy and Falsy",
          "Loose Equality Versus Strict Equality",
          "Exercise Start: Coercion",
          "Exercise End: Coercion",
          "Using the BigInt Type",
          "Passing Primitives and Objects: Value or Reference?",
          "Cloning JavaScript Objects",
          "Exercise: Pass by Reference",
          "Exercise Start: Pass by Reference and Cloning",
          "Exercise End: Pass by Reference and Cloning",
          "Using Strict Mode"
        ],
        "Tricky Fundamentals": [
          "Tricky Fundamentals Introduction",
          "Callbacks",
          "Understanding the Keyword this",
          "Using the Keyword this with Object Methods",
          "Exercise Start: The Keyword this",
          "Exercise End: The Keyword this",
          "Common Issues with the Keyword this",
          "Using call() and apply()",
          "Using bind()",
          "Taking Control of the Keyword this",
          "Exercise Start: Using call(), apply() or bind()",
          "Exercise End: Using call(), apply() or bind()",
          "Arrow Functions",
          "Solving this Binding with Arrow Functions",
          "Arrow Functions are NOT for Every Occasion"
        ],
        "Critical Principles and Techniques for Functions": [
          "Introduction",
          "Functions are First Class Citizens",
          "Higher Order Functions",
          "Creating Your Own Higher Order Functions",
          "Exercise Start: Create Higher Order Function",
          "Exercise End: Create Higher Order Function",
          "Closures",
          "Using Closure with Returned Functions",
          "Important Features of Closures",
          "Looking Ahead: The Traditional Module Pattern",
          "Exercise Start: Closures 1",
          "Exercise End: Closures 1",
          "Exercise Start: Closures 2",
          "Exercise End: Closures 2",
          "Immediately Invoked Function Expressions (IIFEs)",
          "Applying IIFEs",
          "Exercise Start: IFFEs",
          "Exercise End: IFFEs"
        ],
        "Critical Fundamentals for Objects": [
          "Introduction",
          "The Nature of Objects",
          "What is a Prototype and Why?",
          "Prototype Objects are Everywhere!",
          "Prototype Chains",
          "Object Properties have Precedence"
        ],
        "Programming Paradigms: An Overview": [
          "Introduction to Programming Paradigms",
          "Advantages of Programming Paradigms"
        ],
        "Object Oriented Programming": [
          "Getting Started with OOP",
          "Using Factory Functions to Create Objects",
          "Using Object.create()",
          "Using Prototypes with Factory Functions",
          "Exercise Start: Factory Functions",
          "Exercise End: Factory Functions",
          "Using Constructor Functions for Creating Objects",
          "Prototypal Inheritance with Constructor Functions",
          "Exercise Start: Constructor Functions",
          "Exercise End: Constructor Functions",
          "Gotchas That Could Trip You Up",
          "Using Classes to Create Objects",
          "Exercise Start: Classes",
          "Exercise End: Classes",
          "Using Subclasses",
          "Making Data Private",
          "Parting Thoughts About OOP"
        ],
        "Functional Programming": [
          "Introduction to Functional Programming",
          "Getting Started with Functional Programming",
          "Advantages of Functional Programming",
          "Using the Spread/Rest Syntax",
          "Exercise Start: Spread/Rest Syntax",
          "Exercise End: Spread/Rest Syntax",
          "Our First Functional Programming Example",
          "Pure Functions",
          "Are Pure Functions Practical?",
          "Exercise Start: Pure Functions",
          "Exercise End: Pure Functions",
          "Understanding Declarative Programming",
          "Using Reduce, Map and Filter",
          "The Importance of Immutability",
          "Currying",
          "Partial Application",
          "Composing Functions",
          "Piping",
          "Understanding Arity and Exercise",
          "Exercise End",
          "Functional Programming Exercise Start",
          "Functional Programming Exercise End",
          "Reviewing Functional Programming",
          "OOP versus FP"
        ],
        "Critical Asynchronous Patterns": [
          "Introduction to Asynchronous Patterns",
          "Reviewing the Event Loop",
          "What is a Promise?",
          "Using Promises Part 1",
          "Using Promises Part 2 (Fetch API)",
          "What about Fetch in Node?",
          "Exercise Start: Promises",
          "Exercise End: Promises",
          "Creating Promises",
          "Using Static Methods for Multiple Asynchronous Tasks",
          "The async await Pattern",
          "Using async await",
          "Exercise Start: async await",
          "Exercise End: async await",
          "Using Static Methods with async await"
        ]
      },
      "requirements": [
        "Every course has some prerequisites. For this course, a beginners knowledge of JavaScript is helpful, however if you need to learn or review beginner topics, 2 appendices have been included in the course that cover basic JavaScript topics.",
        "You should know how to enter and run JavaScript and you should know the basic syntax for the language. Once again these topics can be learned and reviewed in the appendices."
      ],
      "description": "This course focusses on and explains thoroughly the critical concepts and best practices in JavaScript. It dives into important fundamentals that often get glossed over. And then takes on the more advanced techniques in JavaScript and explores them deeply. The course not only covers the HOW and WHAT, it also focusses on the WHY in order to increase your understanding. All critical to becoming an advanced JavaScript developer.\nIf you are somewhat comfortable with JavaScript, you can jump right in at the beginning. With the two included appendices, this courses is also ideal for someone just getting started with JavaScript. The appendices will review basic concepts that this course builds on.\nAt 25 hours of instruction, you will master JavaScript in a way only top JavaScript developers do. Here is why:\nThe course is taught by the lead trainer at All Things JavaScript, whose mission is to facilitate your journey from novice to expert.\nThe course is constantly updated with new content and new topics.\nThe course focusses on JavaScript, so you learn JavaScript fully without worrying about ancillary technologies.\nThe course explores how things work under the hood so your understanding is deep and relevant.\nThe curriculum touches multiple aspects of JavaScript.\nThe curriculum was developed over a period of several years.\nIf you want to improve your JavaScript skills, this course is for you!\nThe topics you will learn in this course are timeless and will continue to serve you for years in a promising career as a JavaScript developer. You will not find a course as detailed and as in-depth as this course. The concepts and topics taught will put you in the top of all JavaScript developers.",
      "target_audience": [
        "This course was created specifically for any current JavaScript developer or aspiring JavaScript developer that wants to develop a thorough understanding of JavaScript and how it can be used. A mastery of the concepts and topics in this course will put you in the top of all JavaScript developers."
      ]
    },
    {
      "title": "Learning Perl by Example",
      "url": "https://www.udemy.com/course/learning-perl-by-example/",
      "bio": "By using examples to illustrate features and functions you will quickly learn Perl",
      "objectives": [
        "Be able to construct a Perl script to manipulate text or binary documents.",
        "Ability to use Perl to interface with and control system software"
      ],
      "course_content": {
        "Perl Introduction": [
          "Welcome",
          "Perl Introduction"
        ],
        "Perl Overview": [
          "Perl Features",
          "Perl Scripts"
        ],
        "Scalars": [
          "Scalar Data - Numbers",
          "Scalar Operators - Numeric/Logical",
          "Scalar Functions",
          "Scalar Interpolation in Stings",
          "Scalar Print",
          "Scalar Operators Arithmetic",
          "Scalar Operators Logical",
          "Scalar Operators Comparison",
          "Scalar Quiz"
        ],
        "Arrays": [
          "Arrays",
          "Arrays and List Data",
          "Array Operators",
          "Array Elements",
          "Array Slice",
          "Array Functions",
          "Array Contexts",
          "Array Transforms",
          "Array Merging",
          "Array Quiz"
        ],
        "Hashes": [
          "Hashes",
          "Hash Operators",
          "Hash Quiz"
        ],
        "Control Structures": [
          "Control Stuctures - Blocks",
          "Control Structures - if/else",
          "Control Structures - if True/False",
          "Control Structures - if/elsif",
          "Control Structures - while",
          "Control Structures - do",
          "Control Structures - for",
          "Control Structures - foreach",
          "Control Structures - last",
          "Control Structures - next",
          "Control Structures - redo",
          "Control Structures - LABEL",
          "Control Structure Quiz"
        ],
        "Basic Input/Output": [
          "Basic Input/Output",
          "Basic Input/Output - <>",
          "Basic Input/Output - STDOUT",
          "Basic I/O File",
          "Basic I/O - File Operations",
          "Basic I/O - File Usage",
          "Basic Input/Output Quiz"
        ],
        "Pattern Matching": [
          "Pattern Matching - Regular Expressions",
          "Pattern Matching - Character Patterns",
          "Pattern Matching - Common Constructs",
          "Pattern Matching - Grouping Patterns",
          "Pattern Matching - Greedy Patterns",
          "Pattern Matching - Anchoring Patterns",
          "Pattern Matching - Examples",
          "Pattern Matching - Variable Interpolation",
          "Pattern Matching - Read Only Variables",
          "Pattern Matching - Substitution",
          "Pattern Matching - Split Example",
          "Pattern Matching Quiz"
        ],
        "Subroutines, Functions, Modules": [
          "Subroutines, Functions, Modules",
          "Functions - Calling",
          "Functions - Returns",
          "Funtions - Arguments",
          "Functions - Sub Arguments",
          "Functions - Internal Variables",
          "Functions - Program Variables",
          "Packages - Namespace",
          "Packages - Qualifiers",
          "Modules - Libraries",
          "Modules - use Function",
          "Subroutines, Functions, Modules Quiz"
        ],
        "Built-in Operations / Functions": [
          "Built-in Operators / Functions",
          "Operators - Quote, Miscellaneous",
          "Operators - List",
          "Operators - String",
          "Operators - Files",
          "Operators - References",
          "Operators - Dereferences",
          "Operators - Process Management",
          "Built-in Operators Quiz"
        ]
      },
      "requirements": [
        "No programming knowledge is required.",
        "You should be comfortable using a computer and be familiar with computer terminology."
      ],
      "description": "It's a great time to be a Perl programmer!\nIn today’s world, ETL (Extract, Transform and Load data) is a driving force to facilitate development of business intelligence and analytics across information delivery, analysis and integration. Perl can be used with this high level software to create the underlying infrastructure for ETL.\n> Use Perl to create database functions that can be combined into one tool to pull data out of one database and place it into another.\n> Perl can define standard metrics, create advanced calculations, analytical functions to enhance data.\n> This self-guided, introductory course provides the foundation for performing the above functions.\nLEARN PERL BY EXAMPLE\nImagine, design, implement, test, and roll out new features in your role as a Perl Programmer!\nHave you ever wanted to find or extract some information in a huge document without needing to read though it? Do you want to manipulate, reformat, or extract text (or binary data) from a document that is not human readable? Then this course is for you. You can extract, transform and load data into a spreadsheet or a database. You are only limited by your imagination.\nWho should take this course:\nThis course is for someone who wants to learn a software language from the ground up. The course starts with Perl fundamentals and progresses to an intermediate level. Examples are used to introduce concepts and to stimulate the imagination. The end of the course does introduce some advanced topics.\nYou will learn:\n-Perl fundamentals\n-Learning Perl hands-on examples\n-Object Oriented Programming introduction\nIncluded\n-Guided examples with results, hands on exercises\n-Video modules\n-Instructions to download Perl, a Perl IDE and Editor\n-How to use Perl module extensions\nRequirements\n-Desktop, laptop\n-Download Perl (free) to Windows OS",
      "target_audience": [
        "The course is designed to introduce the newbie to programming with an easy examples.",
        "At the end of the course there is an introduction to using Perl with sockets and data bases",
        "If you have just started using computers this course is probably not for you"
      ]
    },
    {
      "title": "Learning Doctrine The Easy Way!",
      "url": "https://www.udemy.com/course/learning-doctrine-the-easy-way/",
      "bio": "A Practical Course That Teaches Doctrine Fundamentals",
      "objectives": [
        "Once you have completed this training course, you will be fully capable of working with Doctrine to model database tables, perform, create, and read entities, build queries, and so much more",
        "Learn how to use Doctrine"
      ],
      "course_content": {
        "Overview": [
          "Important - Download These First - Working Files",
          "What Is Doctrine And Why Use It?",
          "About The Author",
          "What Is In This Course?",
          "How Do I Setup My Computer To Run The Demo Code?"
        ],
        "Concepts And Terms": [
          "The Domain Model",
          "DBAL - Database Abstraction Layer",
          "ORM - Object Relational Mapping",
          "What Is An Entity?",
          "The Doctrine Entity Manager",
          "What Is A Mapper?",
          "What Is A Repository?",
          "What Are Life Cycle Events?",
          "Lab Exercise - Setting Up The Lab Infrastructure",
          "Lab Solution - Setting Up The Lab Infrastructure"
        ],
        "Doctrine Installation": [
          "Prerequisites For Installing Doctrine",
          "Composer And Why Do I Need It?",
          "Installing Composer On Linux, Unix Or OSX",
          "Installing Composer On Windows",
          "What Is A Composer.json File?",
          "Installing Doctrine",
          "PHP Namespace",
          "Autoloading",
          "Configuring Apps To Use Doctrine",
          "Doctrine Command Line Tool",
          "Configuring The Doctrine Command Line Tool",
          "Lab Exercise - Installing Doctrine",
          "Lab Solution - Installing Doctrine",
          "Lab Exercise - Configuring The App For Doctrine",
          "Lab Solution - Configuring The App For Doctrine"
        ],
        "Using Entities": [
          "Creating An Entity",
          "Docblock Annotations",
          "Defining Different Database Column Types In My Entity",
          "Creating A Repository",
          "Using The Command Line Tool To Update Entities And Database",
          "Lab Exercise - Creating Entities",
          "Lab Solution - Creating Entities",
          "Lab Exercise - Creating Repositories",
          "Lab Solution - Creating Repositories"
        ],
        "Create, Read, Update And Delete Operations": [
          "Saving An Entity",
          "Reading An Entity",
          "Updating An Entity",
          "Deleting An Entity",
          "Create, Read, Update, And Delete Using DBAL",
          "Using Doctrine Query Language - DQL",
          "Using POS - Plain Old SQL",
          "Lab Exercise - Implementing Read Operations On Member Entity",
          "Lab Solution - Implementing Read Operations On Member Entity",
          "Lab Exercise - Implementing Create, Update, Delete Operations On Member Entity",
          "Lab Solution - Implementing Create, Update, Delete Operations On Member Entity"
        ],
        "Database Modeling": [
          "Configuring A One To One Relationship Between Entities",
          "Configuring A One To Many Relationship Between Entities",
          "Using A Many To Many Relationship Between Entities",
          "Persisting Entities In A One To One Relationship",
          "Updating Entities In A One To One Relationship",
          "Deleting Entities In A One To One Relationship",
          "Persisting Entities In A One To N Relationship",
          "Updating Entities In A One To N Relationship",
          "Deleting Entities In A One To N Relationship",
          "Persisting Entities In A M To N Relationship",
          "Updating Entities In A M To N Relationship",
          "Deleting Entities In A M To N Relationship",
          "Using Doctrine With A Database View",
          "Lab Exercise - Establishing Relationship Between Members And Purchases",
          "Lab Solution - Establishing Relationship Between Members And Purchases",
          "Lab Exercise - Establishing Relationship Between Products And Purchases",
          "Lab Solution - Establishing Relationship Between Purchases And Products",
          "Lab Exercise - Rewriting The Purchase Process",
          "Lab Solution - Rewriting The Purchase Process"
        ],
        "Using The Query Builder": [
          "What Is The Query Builder, And Why Use It?",
          "Performing Create, Read, Update, And Delete Using The DBAL Query Builder",
          "Using The ORM Query Builder",
          "Using The Expression Builder",
          "Improving Performance When Using The ORM Query Builder",
          "Lab Exercise - Implementing Basic Queries",
          "Lab Solution - Implementing Basic Queries",
          "Lab Exercise - Implementing A Join Using The Query Builder",
          "Lab Solution - Implementing A Join Using The Query Builder"
        ],
        "Performance Tuning": [
          "What Are The General Performance Recommendations?",
          "Getting Performance Statistics",
          "Pagination In Doctrine",
          "Improving Performance Using Cache",
          "Improving Performance Using Proxies",
          "Using The Doctrine Event Manager",
          "Using Doctrine Life Cycle Events",
          "Using Doctrine Filters",
          "Improving Performance Using Doctrine Second Level Cache",
          "Implementing Transactions Using Doctrine",
          "Using Doctrine Inheritance Mapping",
          "What About Security?",
          "Known Doctrine Limitations And Issues",
          "Lab Exercise - Implementing Pagination",
          "Lab Solution - Implementing Pagination",
          "Lab Exercise - Implementing Caching And Proxies",
          "Lab Solution - Implementing Caching And Proxies",
          "Lab Exercise - Implementing A Life Cycle Callback On Members",
          "Lab Solution - Implementing A Life Cycle Callback On Members"
        ],
        "Doctrine And Frameworks": [
          "Zend Framework 2",
          "Symphony",
          "CodeIgniter",
          "Doctrine ORM Module For Zend Framework 2"
        ],
        "Doctrine And MongoDB": [
          "MongoDB",
          "Configuring Apps To Use Doctrine With MongoDB",
          "Creating, Reading, Updating And Deleting Using MongoDB"
        ]
      },
      "requirements": [
        "PC or MAC",
        "Working files are included, allowing you to follow along with the author throughout the lessons."
      ],
      "description": "In this Learning Doctrine training course, expert author Doug Bierer will teach you how to install and configure Doctrine for any PHP project. This course is designed for users that already have experience with PHP.\n\nYou will start by learning concepts and terms, then jump into installing Doctrine. From there, Doug teaches you how to create entities, perform create, read, update, and delete operations, and model a database. This video tutorial also covers the query builder, performance tuning, and incorporating Doctrine into frameworks. Finally, you will learn how to configure apps to use Doctrine with MongoDB and CouchDB.\n\nOnce you have completed this computer based training course, you will be fully capable of working with Doctrine to model database tables using entities, perform create, read, update and delete operations, build queries, and much more. A substantial number of working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "This course is designed for users that already have experience with PHP.",
        "PHP Users"
      ]
    },
    {
      "title": "Understanding basics of programming with C/C++",
      "url": "https://www.udemy.com/course/basics-of-programming-with-cc/",
      "bio": "Most cars, IoT devices or embedded devices have their software written in C/C++. Wonder why?",
      "objectives": [
        "Learn the basics of C/C++",
        "Develop simple C/C++ programs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is machine learning, natural languages and high-end programming languages",
          "The machine code - How do we compile the source",
          "Join Our Online Classroom!",
          "Writing a crazy simple program",
          "Variables (integers values, literals, operators)",
          "Why we need streams and some basic inputoutput examples"
        ],
        "Flow control and even some more data types": [
          "May the flow be with you! – Control the flow",
          "Variables- floating point types, values, literals, operators",
          "Loops – The usage of loops in C_C++",
          "Logical, bitwise and the lawful arithmetic"
        ],
        "Functions": [
          "What are functions",
          "Functions - Declaring and invoking functions",
          "Inline functions",
          "Default parameters of existing – The metamorphosis in C++",
          "Parsing - part 1",
          "Parsing - part 2",
          "Overloaded functions"
        ],
        "Exceptions": [
          "Converting, try, catch, objects and classes",
          "Namespaces"
        ]
      },
      "requirements": [
        "A computer with internet connection"
      ],
      "description": "Most low-level software are written in C/C++. Most cars, IoT devices or embedded devices have their software written in this kind of developing language.\nFor developers just getting started, think of this as the primer to help kickstart your career.\nC++ is a general-purpose object-oriented programming (OOP) language, developed by Bjarne Stroustrup, and is an extension of the C language. It is therefore possible to code C++ in a \"C style\" or \"object-oriented style.\" In certain scenarios, it can be coded in either way and is thus an effective example of a hybrid language.\nC++ is considered to be an intermediate-level language, as it encapsulates both high- and low-level language features. Initially, the language was called \"C with classes\" as it had all the properties of the C language with an additional concept of \"classes.\" However, it was renamed C++ in 1983.",
      "target_audience": [
        "beginners in programming",
        "students who want to learn c/c++",
        "Junior Developers"
      ]
    },
    {
      "title": "Python Beginners to Advance Bootcamp",
      "url": "https://www.udemy.com/course/python-beginners-to-advance-bootcamp/",
      "bio": "Master Python: From First Steps to Pro-Level Programming",
      "objectives": [
        "Python Fundamentals: Start with the basics, including syntax, data types, and control structures.",
        "Object-Oriented Programming: Master classes, objects, inheritance, and polymorphism.",
        "Advanced Python Concepts: Dive into decorators, generators, context managers, and more.",
        "Data Structures and Algorithms: Implement and understand essential computer science concepts.",
        "File Handling and Database Integration: Work with various file formats and connect to databases.",
        "Automation and Scripting: Create practical scripts to simplify complex tasks.",
        "Real-World Projects: Apply your skills to build portfolio-worthy applications."
      ],
      "course_content": {},
      "requirements": [
        "Zero Coding Experience Required: We start from the very basics, assuming no prior knowledge of programming. You'll learn everything you need to know from scratch!",
        "Basic Computer and Internet: All you need is a Mac or PC with internet access. No specific operating system is required.",
        "Free Software Stack: We've carefully chosen tools that are powerful yet free. You'll learn to use industry-standard environments like PyCharm, Jupyter Notebooks, and Google Colab without spending a dime.",
        "Step-by-Step Guidance: Don't worry about complex setups! We provide detailed, easy-to-follow instructions for installing and configuring all necessary software. You'll be up and running in no time."
      ],
      "description": "Embark on a comprehensive journey into the world of Python programming with our \"Python Beginner to Advance Bootcamp.\" This intensive course is designed to take you from a complete novice to a proficient Python developer, equipping you with the skills and knowledge needed to excel in today's tech-driven world.\n\n\nWhat You'll Learn\n- Python Fundamentals: Start with the basics, including syntax, data types, and control structures.\n- Object-Oriented Programming: Master classes, objects, inheritance, and polymorphism.\n- Advanced Python Concepts: Dive into decorators, generators, context managers, and more.\n- Data Structures and Algorithms: Implement and understand essential computer science concepts.\n- File Handling and Database Integration: Work with various file formats and connect to databases.\n- Testing and Debugging: Learn best practices for writing robust, error-free code.\n- Real-World Projects: Apply your skills to build portfolio-worthy applications.\n\n\nCourse Highlights\n- Hands-On Learning: Engage in coding exercises and projects throughout the course.\n- Comprehensive Curriculum: Cover all aspects of Python, from basics to advanced topics.\n- Industry-Relevant Skills: Learn techniques and tools used in real-world software development.\n- Flexible Learning: Self-paced modules suitable for beginners and those looking to upgrade their skills.\n- Expert Instruction: Benefit from clear explanations and industry insights.\n- Certificate of Completion: Earn a certificate to showcase your new Python skills.\n\n\nWho This Course is For\n- Absolute beginners with no prior programming experience\n- Programmers from other languages looking to add Python to their skill set\n- Intermediate Python users aiming to deepen their knowledge\n- Professionals seeking to upgrade their skills for career advancement\n- Anyone interested in data science, web development, or software engineering\n\n\nPrerequisites\n- No prior programming experience required\n- Basic computer skills and a passion for learning\n\n\nJoin us on this exciting Python journey and transform yourself from a beginner to an advanced programmer. Whether you're looking to start a new career in tech, enhance your current role, or simply explore the possibilities of Python, this bootcamp will provide you with the tools and knowledge to achieve your goals.\n\n\nEnroll now and take the first step towards becoming a Python pro!",
      "target_audience": [
        "Absolute beginners with no prior programming experience",
        "Programmers from other languages looking to add Python to their skill set",
        "Intermediate Python users aiming to deepen their knowledge",
        "Professionals seeking to upgrade their skills for career advancement",
        "Anyone interested in data science, web development, or software engineering"
      ]
    },
    {
      "title": "Scrapy Masterclass: Learn Web Scraping With Scrapy Framework",
      "url": "https://www.udemy.com/course/master-web-scraping/",
      "bio": "Master Web Scraping using Scrapy Python Framework and this Step-By-Step & In-Depth Web Scraping Guide For Beginners",
      "objectives": [
        "Define the Steps Involved in Web Scraping and Creating Web Crawlers",
        "Install and Setup Scrapy in Windows, Mac OS, Ubuntu (Linux) & Anaconda Environments",
        "Send Request to a URL to Scrape Websites Using Scrapy Spider",
        "Get the HTML Response From URL and Parse it for Web Scraping",
        "Select Desired Data From Websites Using Scrapy Selector, CSS Selectors & XPath",
        "Scrapy Crawl Spiders to Get Data From Websites And Extract it to JSON, CSV, XLSX ( Excel ) and XML Files",
        "Use Scrapy Shell Commands to Test & Verify CSS Selectors or XPath",
        "Export and Save Scraped Data to Online Databases Like MonogoDB Using Scrapy Item Pipelines",
        "Define Scrapy Items to Organize Scraped Data And Load Items Using Scrapy Itemloaders with Input & Output Processors",
        "Scrape Data From Multiple Web Pages Using Scrapy Pagination And Extract Data From HTML Tables",
        "Login Into Websites Using Scrapy FormRequest With CSRF Tokens",
        "Scrape Dynamic/JavaScript Rendered Websites Using Scrapy-Playwright And Interact With Web Elements, Take Screenshot of Websites or Save as PDF",
        "Identify API Calls From a Website and Scrape Data From API Using Scrapy Request"
      ],
      "course_content": {},
      "requirements": [
        "Python Programming",
        "HTML Basics (+point)"
      ],
      "description": "Web scraping is the process of scraping websites and extracting desired data from the same, and in this course, you'll learn and master web scraping using python and scrapy framework with a step-by-step and in-depth guide.\n\n\nA Step-By-Step Guide\nAssuming that you know nothing about web scraping, web crawling, scrapy framework, web scraping, or even web scrapping, we will start from the complete basics. In the first section, you'll learn about the web scraping process step-by-step (with infographics - no code), how to scrape data from websites and how to use scrapy for the same (i.e. scrapy meaning).\n\n\nAfter getting the basics clear and having an idea of how web scraping works, we will start web scraping using python & scrapy framework! Again, we'll move step-by-step and perform each step learned in the basics with bite-sized lessons. We'll take it slow so that it's easier for you to understand every step involved in scraping and extracting data from websites.\n\n\nWeb Scraping & Scrapy Essentials\nHaving built an actual web scraper, you'll get an idea of how web scraping works first-hand. Now it's crucial to cover the essential concepts of web scraping and scrapy, which we will do next.\nCSS Selectors to select web elements\nXPath to select web elements.\nScrapy Shell to test & verify selectors.\nItems to organise extracted data\nLoad Items with ItemLoaders with input & output Processors\nExport data to JSON, CSV, XLSX (Excel) & XML file formats\nSave extracted data to online databases like MongoDB using ItemPipelines.\n\n\nMaster Web Scraping In-Depth\nLearning how to scrape websites and the essentials already makes you a complete web scraper, but we'll take this even further and learn the advanced web scraping techniques to become an expert!\nFollow links in a webpage to another page.\nCrawl multiple pages and extract data, i.e. Pagination.\nScrape data using Regular Expressions (RegEx)\nExtract Data From HTML Tables\nLogin Into Websites Using Scrapy FormRequest\nBypass CSRF-protected Login forms.\nScrape Dynamic or JavaScript Rendered Websites using Scrapy Playwright.\nInteract with web elements like fill forms, click buttons, etc.\nHandle Infinite Scroll websites.\nWait For Elements when contents/data take time to load\nTake Screenshots of websites.\nSave websites as PDFs.\nIdentify API calls from websites and scrape data from APIs\nUse middleware in a scrapy project.\nConfigure settings in a scrapy project\nUse and Rotate User-Agents & Proxies\nWeb scraping Best Practices\n\n\nReal-World Projects\nAfter mastering web scraping and web crawling, we need projects to start! That's why you'll perform three projects as well:\nChampions League Table [ ESPN ]\nProduct Tracker [ Amazon ]\nScraper Application [ GUI ]\n\n\nJoin us in this in-depth course, where you'll learn about web scraping from scratch and master the process of extracting data from websites step-by-step. Check out the preview lessons to learn how web scraping works! See you there~",
      "target_audience": [
        "Beginner Python Developers Who Wants to Master Web Scraping",
        "Freelancer Web Scrapers Looking To Polish Their Skills"
      ]
    },
    {
      "title": "Python Programming for Beginners: Learn to Code with Python",
      "url": "https://www.udemy.com/course/python-programming-for-beginners-learn-to-code-with-python/",
      "bio": "Learn to Code in Python with Detailed Lectures, Coding Exercises, Quizzes, and More (No Prior Knowledge Required).",
      "objectives": [
        "Write your own Python programs applying the basic principles of programming and computer science.",
        "Learn how Python Operators work including Arithmetic, Comparison, Logical, and Assignment Operators.",
        "Learn key programming concepts such as Variables, Statements, Expressions, and Conditionals.",
        "Work with and identify the basic Python data types and their characteristics (Integers, Floats, Booleans, and Strings).",
        "Learn how to work with Lists, Tuples, Dictionaries, and Sets. Understand their structure, use cases, and syntax.",
        "Write For Loops and While Loops. Understand their logic and how they work behind the scenes.",
        "Write your own Python Functions with parameters, arguments, and return statements.",
        "Learn how to Read, Write, and Append content to a file using Python."
      ],
      "course_content": {},
      "requirements": [
        "No previous programming knowledge is required. All the concepts are explained from the basics, assuming that you don't have any prior programming knowledge.",
        "Enthusiasm for learning Python is a must. Learning this programming language will give you a valuable skill that employers around the world are looking for.",
        "You will need to install Python 3. The course includes instructions to help you download and install Python from the official website."
      ],
      "description": "Start diving into the amazing world of programming and computer science with Python, a language that is in high-demand by employers all over the world. Learn with engaging video lectures, diagrams, quizzes, coding exercises, articles, and resources specifically designed for learners with no prior programming knowledge.\n\n\nLearn to Code with Python and Take Your First Steps into the World of Computer Science\nLearn how to write your own Python programs applying fundamental computer science and programming concepts such as variables, expressions, statements, data types, values, and more.\nUnderstand how programs work step by step with graphical explanations and diagrams.\nPractice your skills with coding exercises, quizzes, and a final course exam that you can take as many times as needed to check your knowledge.\nWork with Python's built-in data structures: Lists, Tuples, Dictionaries, and Sets. Understand their structure, characteristics, and purpose.\nAdd conditionals to your programs, understand how they work and why we use them.\nLearn how to repeat blocks of code using for loops and while loops. Understand their syntax, logic, and how they work behind the scenes.\nWrite functions to make your code more concise and maintainable. Understand the role and differences of parameters and arguments and return values from functions.\nWork with files. Learn how to read files and how to write content to files using Python.\nStudent Reviews\nHi Estefania, I really like this python course for beginners. It is your way of explaining the material, but also your many exercises in between and the graphic representation of the learning content. You do it great and I enjoy the excursions into the world of programming with you. Thanks! - Gregor Burghardt.\nGreat course for those new to Python. Also a good refresher for those who have not done programming for a while - Rhoda La Madrid.\nFantastic teacher, I really enjoy learning from Estefania, she is explain every detail in a way that I learn with out any question left in my mind about what she teach in each section, this teacher is the first that make me get what I watch, after many courses I try to watch and learn with no luck, all other teachers I watch had no consistency and get tired explain, thank you Estefania for you great courses, I will enroll to all of python courses from you. - Bill.\n\n\nCourse Updates\nFeb 2021 - NEW Crossword Puzzles for each section.\nFeb 2021 - NEW Project: Encrypt Messages with Caesar's Cipher.\n\n\nPython: An In-demand Skill Around the World\nPython is currently one of the most popular programming languages and its popularity continues to rise every year. It is used for real-world applications in diverse areas such as Web Development, Data Science, Machine Learning, Artificial Intelligence and many more.\nLearning Python is your next step into the amazing and powerful world of programming and computer science.\n\n\nPython will be a very helpful tool for you in any field of work, including:\nWeb Development\nMachine Learning\nData Science\nArtificial Intelligence\nGame Development\nMobile App Development\nBioinformatics\nMedical Software\nComputer Vision\nand... many more!\n\n\nGoals\nBy the end of this course, you will be able to:\nWrite, read, and understand simple Python programs.\nKnow and apply the fundamental concepts of programming and computer science.\nIdentify and classify the different types of values and data structures that you can use in Python.\nDetermine when to use lists, tuples, dictionaries, or sets based on their characteristics and functionality.\nWork with Python built-in data structures and their elements.\nRead, write, and understand conditionals, for loops, while loops, and functions.\nWork with files using Python.\n\n\nLearning Material & Resources\nThroughout the course, you will find these resources:\nVideo Lectures: 4.5+ hours of video lectures with carefully designed graphics and diagrams. You will see how the code works behind the scenes with step-by-step explanations.\nCoding Exercises: practice with 40+ coding exercises and check your solution immediately.\nQuizzes: check your knowledge with 23+ quizzes with 145+ questions that provide unlimited attempts and instant feedback.\nCourse Exam: take a final course exam with 25+ questions to test your knowledge. The exam has unlimited attempts and detailed results for each attempt.\nStudy Guide: review for the final course exam with a detailed and unique PDF study guide with 135+ questions.\nProject: build a text-based \"Rock, Paper, Scissors\" game to apply your skills.\nArticles: read articles with detailed explanations and illustrations to complement your knowledge.\n\n\nWhat makes this course unique?\nThis course is unique because of its emphasis on providing visual and detailed explanations of the principles of Python programming. You will not only learn how to use these principles in Python, you will actually understand the purpose of each line of code.\nUnique study materials complement the course experience. You will find a Study Guide specifically designed for the course with 135+ questions on the course content.\nYou will solve Coding Exercises and you will receive instant feedback for your submission.\nYou will check your knowledge with Quizzes that will make you think more deeply about the topics presented in each section and you will receive instant feedback to check your answer.\nYou will receive a Certificate of Completion that you can add to your social media profiles to showcase your new skills.\nYou will also have Lifetime Access to the course.\n\n\nYou are very welcome to watch the preview lectures and check out the full course curriculum.\nIf you are looking for an engaging, visual, and practical course, then you've found it.\nEnroll now, add \"Python Programming\" to your resume, and showcase your new skills.",
      "target_audience": [
        "Beginners with no prior programming knowledge who want to learn the fundamentals of Python.",
        "Anyone who is interested in learning the fundamentals of programming in Python.",
        "Learners who want to acquire basic programming skills as prerequisites to dive into other areas such as Data Science, Web Development, Machine Learning, and Artificial Intelligence.",
        "Python programmers who need to refresh their knowledge and skills."
      ]
    },
    {
      "title": "SwiftUI iOS13 Coffee Shop Application, Order Products Online",
      "url": "https://www.udemy.com/course/swiftui-ios13-coffee-shop-application/",
      "bio": "Build Coffee Shop Application for iOS using xCode 11, SwiftUI, iOS 13, Firebse Firestore, Swift 5. Best SwiftUI tutorial",
      "objectives": [
        "How to write clean readable code",
        "Build professional iOS application",
        "Lear SwiftUI",
        "Develop iOS apps for dark mode and light mode",
        "Work with Firebase"
      ],
      "course_content": {},
      "requirements": [
        "Experience with xCode",
        "Experience with Swift",
        "Basic SwiftUI knowledge",
        "This is NOT beginner course"
      ],
      "description": "In SwiftUI iOS13 Coffee Shop Application we are going to build a real online coffee ordering application.\n\n\nUnlike any other courses found on Udemy, I always teach full real-world apps, when we finish with the course, we are going to have an app ready to post to AppStore. This SwiftUI iOS13 Coffee Shop Application can easily be integrated with any coffee shop or other fast food, drink serving service, just upload your menu to it.\nWhat our app will include:\nSearching Firestore\nMake a beautiful user interface with new SWIFTUI\nCreating and updating Online Basket\nFirebase users Authentication\nFirebase firestore (new real-time database from firebase)\nEmail confirmation\nMake apps ready for Dark Mode in iOS 13\n\n\nThis SwiftUI iOS13 Coffee Shop Application is NOT a beginner-level course. You need to know your way around the xCode, be familiar with it, you have to have basic knowledge in Swift, SwiftUI, and application building. We are going to start from scratch and build the application together. All assets will be provided by me. I will type and explain every line of code. By the time we finish, you will learn a lot of new things even if you are an experienced iOS developer.\nThe curse will teach you how to write clean and readable code, structure your app development, so even if you get back to your code in few years, you can read and understand it clearly.\nWe are also proud to say that we have one of the best Support available on Udemy! Our Q/A Section is constantly monitored and all questions are answered within few hours, Sometimes we even chat with students in real-time to help them with the issues they may face during the study.\nDon’t waste your time on low-quality courses where you don't even get the support of the instructor\nYour time is precious. We offer the best video courses with carefully crafted content, we are learning by coding!\n\n\nDon't just take our word for it, check out our other courses and what other students have to say about our courses!\n\n\n\"This course is so far the best course I took in UDEMY. I really learned something. Totally worth the time. Won't regret it. The instructor was responsive too and the course is new and knowledgeable.\"  J Nima\n\"An excellent Tutorial by David. Very good explanation\" Tapan Kumar Raut\n\"There is nothing on Udemy like David's courses! I cannot recommend his courses enough. Best teacher out there, very responsive as well. \" Kris\n\"I really do love the approach, the structure of the course gives you the ability to move forward smoothly, and efficiently gain as much knowledge as possible, the instructor really goes in-depth, it's incredibly comprehensive, not to forget that this is a real-world project, and the advanced concepts gained here make me all confident that I'll be able to build my own apps in a very effective way. the course is well taught, and it really deserves the 5 stars, the instructor as well, he explains things in a very clear, clean way. Definitely enjoying the Course. and definitely, Thumbs Up.\" Yen Loo\n\"This is one of the most complete and comprehensive iOS projects on Udemy! Everything works! No broken code! You learn Firebase, Onesignal, and Backendless in one project. The instructor is always accessible, he goes for quality, not quantity. I still have a way to go, but so far it has kept me completely engaged and focused! I wish there were more courses like this! I will definitely purchase another from David.\" antr8tr\n\n\nWe are so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days, No Questions Asked! So it's a complete no-brainer, sign up today with ZERO risks and EVERYTHING to gain.\nSo what are you waiting for? Click the Buy Now button and join the best SwiftUI iOS13 Coffee Shop Application development course and let's get started.",
      "target_audience": [
        "If you are iOS developer and want to take your skills a level up, then this course is for you",
        "Start building full professional applications",
        "Use new SwiftUI to make your apps stand out in App Store"
      ]
    },
    {
      "title": "GUI Automation using Python | Use Python for Automation",
      "url": "https://www.udemy.com/course/python-automation/",
      "bio": "[Python] Module - PyAutoGUI, Automate any GUI efficiently, Increase your productivity at work |[Python Automation]",
      "objectives": [
        "Full of hands-on instructions, interesting and illustrative examples, clear explanations",
        "Identify and automate the manual task",
        "Learn to use automation for replacing manual activities at work using Python",
        "Automate day to day task using simple Python scripting",
        "Learn to make use of scripting in daily life and enhance your productivity",
        "Simulate Mouse and Keyboard actions using PyAutoGUI",
        "Learn an import Python module - PyAutoGUI",
        "Design and Implement scalable automation solutions"
      ],
      "course_content": {},
      "requirements": [
        "PC/Laptop installed with Windows OS. You should be able to use PC/laptop comfortably.",
        "Some basic understanding of command line (Win CMD/Unix Shell) will help quickly picking up",
        "Basic awareness/idea of any scripting language is a plus"
      ],
      "description": "THE COURSE IS FREQUENTLY UPDATED. LAST UPDATED IN OCTOBER 2022\n\n\n*** This Course purchase includes video lectures, practice files, quizzes, & assignments, 1-on-1 instructor support, LIFETIME access, and a 100%MONEY-BACK GUARANTEE***\n\n\nThis course is designed to take the system administrators to an advanced level in [Python] Scripting & [Automation]. You will find ways to automate your daily work using the advantages of [Python] scripting. The professional who wants to start with Python automation and have some basic idea of the command line, will find it extremely easy to understand the underlying concepts related to GUI automation.\n\nTopics that may not be Python or automation concepts but are important for developing Python automation understanding are included which comes as a bonus.\n\nThe course is intended to clear the things happening in the background so that automation ideas using Python comes from within. You should be able to complete this course in a week's time if you dedicate 2 hours of your time daily and this journey will take your from beginners to an Automation expert.\n\n\nImportant Content:\n[GUI automation] using Python - What, Why & How\n[Python Automation] Module PyAutoGUI\nControl Mouse Events using Python\nPyAutoGUI Locate by Image\nPyAutoGUI - Take Screenshots\nBrowser Automation using PyAutoGUI\n\n\nLearn [Python] [Web Scrapping] techniques and Automate your tasks\nPython and Beautiful Soup for [Automation]\nPython Selenium Web Driver for [Automation]\n\n\nBriefly, The knowledge of Python is a must for IT professionals and this course is one-stop-shop for gaining this necessary and in-demand skill\n[Python Automation]",
      "target_audience": [
        "System Administrator who want to use Python as tool to use in daily life",
        "Students who are willing to learn a new skill and strengthen your Python basics",
        "Aspirants seeking carrier in IT Automation",
        "Anyone who is working in IT and uses Graphical user Interfaces( any UI applications)",
        "IT Professionals who are planning to use Python for integrating/automate other products",
        "Python beginners looking forward to enhance their skill by learning popular Python modules"
      ]
    },
    {
      "title": "4 Practice Tests for any Python Certification",
      "url": "https://www.udemy.com/course/4-practice-tests-for-any-python-certification/",
      "bio": "Practice for any python certification test. Pass any python certification exam in one go.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "This course offers you 4 practice exams, each with 15 multiple-choice questions (MCQs), to help you evaluate and advance your Python programming knowledge. Both students who will take the Python Certification Test and Freshers who will take the Python Job Preliminary Test can take the test series.\nA test candidate should show that they have a sufficient understanding of the fundamental principles of computer programming, the syntax and semantics of the Python language, and the ability to use the Python Standard Library to solve common implementation problems.\nThis Test Series focuses on following Python Areas:\nPython Environment\nVariables\nUser Input and Outputs\nData Types\nOperators\nConditionals\nFunctions\nModules\nLoops or much more\nThe Practice Test is created to assist you in not only evaluating your knowledge but also in enhancing your understanding of Python by providing you with in-depth answers to each question after you pass the Practice Test. You will be one step closer to being able to confidently show up for job interviews and certification exams after taking this course.\nPassing score for certification is 70%\nWho this course is for:\nBeginners who seek python certification from institutes for their career growth in the world of python programming and programming in general.\nStudents seeking career in the field of Python programming.\nAll IT Professionals who want to gauge their Python Knowledge for their upcoming job interview\nAnyone who wants to take their career, and salary, to a whole new level with a Python certification!\nRegards,\nNishant Tiwari",
      "target_audience": [
        "Python Developers"
      ]
    },
    {
      "title": "From Zero Step by Step C# for Revit API for PlugIn Creation",
      "url": "https://www.udemy.com/course/revitapi01/",
      "bio": "Start from Zero a Plugin Creation Journey for Autodesk Revit using C# and the Revit API.",
      "objectives": [
        "Learn how to create the basic structure for a Revit Addin",
        "Run the created Add In over Revit Platform",
        "Learn how to structure other documents for creating library functions",
        "Debug Posible Errors with Revit to solve a basic problem",
        "Learn C# basic structures required to start programing an Addin"
      ],
      "course_content": {
        "Installing Software Requirements": [
          "Introduction to the Course",
          "Installing Visual Studio Blend 2019",
          "Installing Autodesk Revit 2020 - Onwards",
          "Installing the Revit Lookup",
          "Installing the AddInManager"
        ],
        "Setting our Plugin Template": [
          "Selecting Type of Project, Framework and References Required.",
          "Creating the Revit AddIn Template",
          "Running Scripts with AddInManager"
        ],
        "C# Foundation": [
          "Basic C# Object Types and Assign of Variables",
          "Basic C# Creation of a Function",
          "Basic C# Creation of Functions on Documents",
          "Overview of Main Blocks for AddIn Creation"
        ],
        "Extraction Components": [
          "Create a single selectors for elements in Revit",
          "Improving Selection Function",
          "Revit Look up Review of Element components and parameters",
          "Multiple Selector",
          "Using a Selection Filter",
          "Element and FamilyInstance",
          "FamilySymbol",
          "ElementTypes",
          "The Revit API from 2020 to 2023 reference guide and how to read it"
        ],
        "Creation of Elements": [
          "Creation of Family Instances",
          "Handling Errors of Request",
          "Cleaning our workSpace",
          "Extracting Data From Elements",
          "Adding Locations",
          "Reading BuiltInParameters",
          "Modification of Data Parameters"
        ],
        "Releasing": [
          "Creating an Addin File to Run Directly the dll",
          "Creating a Ribbon",
          "Setting the Addin and Running",
          "Adding all Functions",
          "Adding Icons"
        ]
      },
      "requirements": [
        "Basic knowledge of Revit any version",
        "No C# previos experience required",
        "A coumputer with Revit at least 2020 installed"
      ],
      "description": "This course its an amazing oportunity that would save a lot of time to jump into creation of Revit API plugins.\nIt mostly common that main Revit API courses take for granted that you have C# skills and new to Autodesk Revit or viceversa, in this course main difference its we want to build technical foundations to have freedom of development and structure our workflows.\nWe will start from instalation to get familiar with workflows and set what i consider the three main blocks you need for an Addin, Data Extraction from Revit Model, Data Analysis with C# and Element Creation inside the boundaries of Revit Playground.\nThis course it fully oriented to Architects , Engineers , Constructors, that have seen that automation and programing its not something out of their scope if they plan to succeed and increase their full potential, to the things that would always require their attention.\nThis course its planned to be the starting point of a new programing agenda more flexible and accesible to Architects and Engineers, and not only programmers.\nHelp those subsecuent training agendas to be released as soon as posible by recomending, reviewing and buying this type of content,  so join me in to bring all those capabilities to reality and transform your BIM Skills and enjoy at any time the freedom of possibilities to make technology work the way you need it to.\nAnd on my deep hopes ill do my best so that with this content will change your way of working  for good onwards.",
      "target_audience": [
        "BIM Modelers who want to spice the game by automating their workflows and create addins",
        "Dynamo Enthusiasts that want to go deeper into automation and the creation of hard coded solutions.",
        "BIM Managers and Coordinators that need to have that extra set of skills to improve their work aproaches."
      ]
    },
    {
      "title": "Python MS Excel Automation | Learn Excel Data Analysis",
      "url": "https://www.udemy.com/course/ms-excel-automation-excel-data-analysis-with-python/",
      "bio": "Excel Python Bootcamp | Revolutionize Your Excel Workflow with Python Automation and Data Analysis | Roll Plays Included",
      "objectives": [
        "Automate Excel tasks using Python-based libraries like openpyxl.",
        "Create, modify, and format Excel workbooks and sheets using openpyxl.",
        "Insert and manipulate data, comments, and images in Excel using openpyxl.",
        "Generate various types of charts such as column, line, bar,area, bubble, using openpyxl.",
        "Read and write Excel files using openpyxl in read-only or write-only modes.",
        "Apply conditional formatting to cells using built-in or custom rules.",
        "Configure print settings in Excel for better printing results.",
        "Filter and sort data in Excel for better data analysis.",
        "Work with tables and apply data validation in cells.",
        "Use formulas to perform calculations in Excel.",
        "Protect and secure Excel workbooks using openpyxl.",
        "Data Validation with Excel using Openpyxl"
      ],
      "course_content": {
        "Course Overview": [
          "Course Content",
          "Start with Python learning",
          "After this course!",
          "Instructor Guidelines"
        ],
        "Course Last Update 22 September 2025": [
          "New Update"
        ],
        "Prerequisite Lectures before Python OpenPYxl": [
          "Necessary Note for YOU!",
          "Python Introduction with Explanation",
          "Variable in Python with Examples",
          "What is Function in Python",
          "List-Data Structure in Python",
          "Dictionary-Data Structure in Python.",
          "Excel OpenPyXl Library"
        ],
        "Python with Excel Chapter 01": [
          "01 Chapter 01 Excel with Python",
          "02 Introduction to Excel",
          "03 Libraries used for Excel with Python",
          "04 Installation for OpenPyXl for Excel with Python",
          "05 Example 01",
          "06 Example 02",
          "Getting Started with Excel Automation | Roll Play"
        ],
        "Python with Excel Chapter 02": [
          "01 Chapter 02 Excel with Python",
          "02 Creating a Workbook",
          "03 Creating a worksheet",
          "04 Inserting data into cell Ex1",
          "05 Inserting data into cell Ex2 and Ex3",
          "06 Accessing cell data Ex1",
          "07 Accessing cell data Ex2",
          "08 Accessing cell data Ex3",
          "09 Accessing cell data Ex4",
          "10 Accessing cell data Ex5",
          "11 Loading a File",
          "12 Comments in Excel with openpyxl",
          "13 Saving a file in openpyxl",
          "Working with Excel Workbooks and Data | Roll Play"
        ],
        "Python with Excel Chapter 03": [
          "01 Chapter 03 Excel with Python",
          "02 Inserting Images in Excel",
          "03 Merging and Unmerging in Excel",
          "04 Formatting Text in Excel with Python",
          "05 Alignment in Excel with Python",
          "06 Border in Excel with Python",
          "07 Background color in Excel with Python"
        ],
        "Python with Excel Chapter 04": [
          "01 Outline Chapter 04 Openpyxl Excel",
          "02 Read Only Mode with Openpyxl",
          "03 Write Only Mode with Openpyxl",
          "04 Openpyxl with Pandas Example",
          "05 Openpyxl with Numpy Example"
        ],
        "Python with Excel Chapter 05": [
          "01 Outline Chapter 05 Openpyxl Excel",
          "02 Creating Column chart in Excel with Python",
          "03 Bar Chart in Excel with Python",
          "04 Create Line Chart in Excel with Python",
          "05 Area Chart in Excel with Python",
          "06 Bubble Chart in Excel with Python"
        ],
        "Python with Excel Chapter 06": [
          "01 Excel with OpenPyXl Chapter 06 Outline",
          "02 Conditional Formatting with Greater Value highlight",
          "03 Conditional Formatting with Less Value highlight",
          "04 Conditional Formatting with Equal Value highlight",
          "05 Conditional Formatting with Between Value highlight",
          "06 Conditional Formatting with First records highlight",
          "07 Conditional Formatting with Last records highlight",
          "08 Tasks 1 and Solution",
          "09 Tasks 2 and Solution",
          "10 Tasks 3 and Solution"
        ],
        "Python with Excel Chapter 07": [
          "01 Excel with OpenPyXl Chapter 07 Outline",
          "02 Sorting in Excel with Openpyxl",
          "03 Filter in Excel with OpenPyXl",
          "04 Print Setting with Openpyxl"
        ]
      },
      "requirements": [
        "You should have basic knowledge of MS Excel",
        "You should have basic knowledge python with beginner level experince",
        "You did not need to buy extra software or course"
      ],
      "description": "Introduction to MS Excel Automation | Excel Data Analysis with Python\nI’m thrilled to share something that can completely change the way you work with Excel. In today’s fast-paced, data-driven world, Python programming is not just a nice-to-have skill — it’s essential. If you’ve ever felt stuck doing the same Excel tasks over and over again, this course is designed to free you from that cycle.\nInstead of spending hours on repetitive tasks, imagine running a simple Python script and letting automation handle everything for you — formulas, formatting, charts, conditional logic, sorting, filtering, and more. That’s not just productivity, that’s transformation.\nThis course is your bridge between Excel and Python, empowering you to think like a programmer and act like a true data professional. Whether you are an accountant, a student, a beginner in data science, or someone simply tired of repetitive Excel work, this course will give you the confidence to step into the world of Python data analysis.\nWhy Take This Course?\nBecause it’s not just about learning Excel or Python — it’s about learning to save time, work smarter, and unlock career opportunities. By the end of this course, you’ll look back at your old way of working in Excel and wonder why you didn’t start sooner.\nIf Angela Yu can inspire millions to start mastering Python, you can take this as your first step into Python for data analysis, Python for finance, and even broader fields like data science and machine learning (NumPy, Pandas, SciPy, Matplotlib). This course is 100% beginner-friendly, yet powerful enough to give you real-world skills that matter.\nCourse Purpose\nThe purpose of this course is simple:  make Excel smarter with Python Coding.\nYou’ll learn how to:\nAutomate Excel spreadsheets step by step with openpyxl\nCreate and manipulate workbooks and sheets with Python\nApply formatting, formulas, charts, and conditional logic programmatically\nSave hours of manual work by mastering Excel automation\nCourse Outline\nIntroduction to Excel & Python – Why Python for Excel, installing openpyxl\nWorkbooks & Sheets – Create, read, write, and protect Excel files\nFormatting & Styling – Fonts, borders, colors, merging/unmerging cells\nCharts in Excel – Automate bar, line, pie, bubble, and area charts\nConditional Formatting – Rules for greater than, top 5, last 5, and more\nFormulas & Validation – Insert formulas, secure files, validate input\nSorting, Filtering, Tables – Automating Excel’s most-used features\nWho Is This Course For?\nStudents exploring Python programming for productivity\nData analysts, accountants, and professionals who rely on Excel\nBeginners eager to learn Excel automation as a first step into data science\nAnyone tired of repetitive Excel tasks and looking to save time with automation\nFinal Words\nThis is not just another Excel tutorial. This is a mindset shift — from doing things the slow way to working smartly with Python. By enrolling, you’re not only learning automation, you’re building confidence, opening doors to data analysis, data science, and Python for finance, and taking the first step towards mastering tools like NumPy, Pandas, Matplotlib, and SciPy down the road.\nStop wasting time on repetitive work.\nEnroll today and turn Excel into a powerful, automated data analysis tool with Python!\n— Faisal Zamir",
      "target_audience": [
        "Business Analysts and Data Analysts who want to automate their Excel tasks and perform data analysis more efficiently using Python.",
        "Students and Professionals who want to learn how to use Python to automate Excel tasks and perform data analysis.",
        "Excel Users who want to enhance their knowledge and skills by learning how to integrate Python with Excel for automation and data analysis.",
        "Financial Analysts who work with large datasets and want to learn how to use Python to analyze and visualize financial data in Excel.",
        "Entrepreneurs and Small Business Owners who want to automate their business processes and analyze their data using Python and Excel.",
        "Researchers who want to use Python to automate data collection, analysis, and visualization in Excel.",
        "Anyone who wants to learn how to use Python to automate Excel tasks and perform data analysis, regardless of their prior experience with Excel or Python."
      ]
    },
    {
      "title": "90Days Data Science Bootcamp: Build Portfolio Of 90 Projects",
      "url": "https://www.udemy.com/course/learn-python-programming-for-beginners/",
      "bio": "Learn To Build & Deploy Real Data Science, Machine Learning, Python Projects (Flask, Django,AWS,Azure,GCP, Heruko Cloud)",
      "objectives": [
        "Understand the full product workflow for the machine learning lifecycle.",
        "Real life case studies and projects to understand how things are done in the real world",
        "Learn best practices when it comes to Data Science Workflow",
        "Master Machine Learning, Data Science, Deep Learning With Python Practically",
        "Have a great intuition of many Machine Learning models",
        "Build a portfolio of work to have on your resume",
        "Have a fundamental understanding of the Python programming language.",
        "Introduction to the python programming, List Comprehension in Python programming, Variables and data types in python programming"
      ],
      "course_content": {
        "Introduction To The Course": [
          "Introduction To The Course",
          "Course Outline",
          "Course Bonuses: Cheat Sheets, Downloads, Mind maps, Guides.",
          "Course Review Request"
        ],
        "Introduction To Python": [
          "Introduction to python",
          "Variables in python",
          "List in python",
          "list function (append)",
          "Dictionary in python",
          "Tuple in python",
          "Sets in python",
          "If else in python",
          "For loop in python",
          "list comprehension in python",
          "While loop in python",
          "Functions in python"
        ],
        "Project-1: Pan Card Tempering Detector App-Deploy On Heroku-Data Science Project": [
          "Introduction",
          "Loading Libraries and Dataset",
          "Creating the Pan Card Detector with Opencv",
          "Creating the Flask App",
          "Creating Important Functions",
          "Deploy the App in Heroku1",
          "Testing the Deployed Pan Card Detector",
          "Download the project files"
        ],
        "Project-2: Dog breed prediction Flask App": [
          "Introduction",
          "Importing the Data and Libraries",
          "Data Preprocessing",
          "Build and Train Model",
          "Testing the Model",
          "Creating the Flask App",
          "Running the App in System",
          "Download the project files"
        ],
        "Project-3: Image Watermarking App -Deploy On Heroku": [
          "Introduction",
          "Importing Libraries and Logo",
          "Create Text and Image Watermark",
          "Creating the App",
          "Deploying the App in Heroku",
          "Download the project files"
        ],
        "Project-4: Traffic sign classification": [
          "Introduction to Traffic Sign Classification",
          "Importing the Data and Libraries",
          "Image Processing",
          "Creating and Testing the Model",
          "Creating Model for Test Set",
          "Download the project files"
        ],
        "Project-5: Text Extraction From Images Application": [
          "Introduction",
          "Importing Libraries and Data",
          "Extracting the Test from Image",
          "Modifying the Extractor",
          "Creating the Extractor App",
          "Running the Extractor App",
          "Download the project files"
        ],
        "Project-6: Plant Disease Prediction Streamlit App": [
          "Introduction",
          "Importing Libraries and Data",
          "Understanding the Data and Data Preprocessing",
          "Model Building",
          "Creating an App Using Streamlit",
          "Download the project files"
        ],
        "Project-7: Vehicle Detection And Counting Flask App": [
          "Introduction to Vehicle Detection App",
          "Importing Libraries and Data Vehicle Detection",
          "Tansforming Images and Creating Output vehicle Detection",
          "Creating a Flask App Vehicle Detection",
          "Download the project files"
        ],
        "Project-8: Create A Face Swapping Flask App": [
          "Introduction",
          "Importing Libraries and Data Face Swap",
          "Data Preprocessing and Creating Output Face Swap",
          "Creating a Flask App Face Swap",
          "Download the project files"
        ]
      },
      "requirements": [
        "Basic computer skills: surfing websites, running programs",
        "Basic Knowledge of machine learning & data science"
      ],
      "description": "In This Course, Solve Business Problems Using Data Science Practically. Learn To Build & Deploy Machine Learning, Data Science, Artificial Intelligence, Auto Ml, Deep Learning, Natural Language Processing (Nlp) Web Applications Projects With Python (Flask, Django, Heroku, AWS, Azure, GCP, IBM Watson, Streamlit Cloud).\n\n\nWe'll Cover Everything You Need To Know For The Full Data Science And Machine Learning Tech Stack Required At The World's Top Companies. Our Students Have Gotten Jobs At Dell, Google Developers, Tcs, Wipro And Other Top Tech Companies! We've Structured The Course Using Our Experience Teaching Both Online And In-Person To Deliver A Clear And Structured Approach That Will Guide You Through Understanding Not Just How To Use Data Science And Machine Learning Libraries, But Why We Use Them. This Course Is Balanced Between Practical Real World Case Studies And Mathematical Theory Behind The Machine Learning Algorithms.\nHow Much Does A Data Scientist Make In The United States?\nThe National Average Salary For A Data Scientist Is Us$1,20,718 Per Year In The United States, 2.8k Salaries Reported, Updated On July 15, 2021 (Source: Glassdoor)\n\n\nSalaries By Company, Role, Average Base Salary In (Usd)\nFacebook Data Scientist Makes Us$1,36,000/Yr. Analyzed From 1,014 Salaries.\nAmazon Data Scientist Makes Us$1,25,704/Yr. Analyzed From 307 Salaries.\nApple Data Scientist Makes Us$1,53,885/Yr. Analyzed From 147 Salaries.\nGoogle Data Scientist Makes Us$1,48,316/Yr. Analyzed From 252 Salaries.\nIbm Data Scientist Makes Us$1,32,662/Yr. Analyzed From 388 Salaries.\nMicrosoft Data Scientist Makes Us$1,33,810/Yr. Analyzed From 205 Salaries.\nIntel Corporation Data Scientist Makes Us$1,25,930/Yr. Analyzed From 131 Salaries.\n\n\nIn This Course, We Are Going To Work On 90 Real-World Projects (60 Data Science Projects, 30 Python Development Projects) Listed Below:\n\n\n60 Data Science, Machine Learning Projects ------Starts  Here--------\n\n\nProject-1: Pan Card Tempering Detector App -Deploy On Heroku\nProject-2: Dog breed prediction Flask App\nProject-3: Image Watermarking App -Deploy On Heroku\nProject-4: Traffic sign classification\nProject-5: Text Extraction From Images Application\nProject-6: Plant Disease Prediction Streamlit App\nProject-7: Vehicle Detection And Counting Flask App\nProject-8: Create A Face Swapping Flask App\nProject-9: Bird Species Prediction Flask App\nProject-10: Intel Image Classification Flask App\nProject-11: Language Translator App Using IBM Cloud Service -Deploy On Heroku\nProject-12: Predict Views On Advertisement Using IBM Watson -Deploy On Heroku\nProject-13: Laptop Price Predictor -Deploy On Heroku\nProject-14: WhatsApp Text Analyzer -Deploy On Heroku\nProject-15: Course Recommendation System -Deploy On Heroku\nProject-16: IPL Match Win Predictor -Deploy On Heroku\nProject-17: Body Fat Estimator App -Deploy On Microsoft Azure\nProject-18: Campus Placement Predictor App -Deploy On Microsoft Azure\nProject-19: Car Acceptability Predictor -Deploy On Google Cloud\nProject-20: Book Genre Classification App -Deploy On Amazon Web Services\nProject-21: Sentiment Analysis Django App -Deploy On Heroku\nProject-22: Attrition Rate Django Application\nProject-23: Find Legendary Pokemon Django App -Deploy On Heroku\nProject-24: Face Detection Streamlit App\nProject-25: Cats Vs Dogs Classification Flask App\nProject-26: Customer Revenue Prediction App -Deploy On Heroku\nProject-27: Gender From Voice Prediction App -Deploy On Heroku\nProject-28: Restaurant Recommendation System\nProject-29: Happiness Ranking Django App -Deploy On Heroku\nProject-30: Forest Fire Prediction Django App -Deploy On Heroku\nProject-31: Build Car Prices Prediction App -Deploy On Heroku\nProject-32: Build Affair Count Django App -Deploy On Heroku\nProject-33: Build Shrooming Predictions App -Deploy On Heroku\nProject-34: Google Play App Rating prediction With Deployment On Heroku\nProject-35: Build Bank Customers Predictions Django App -Deploy On Heroku\nProject-36: Build Artist Sculpture Cost Prediction Django App -Deploy On Heroku\nProject-37: Build Medical Cost Predictions Django App -Deploy On Heroku\nProject-38: Phishing Webpages Classification Django App -Deploy On Heroku\nProject-39: Clothing Fit-Size predictions Django App -Deploy On Heroku\nProject-40: Build Similarity In-Text Django App -Deploy On Heroku\nProject-41: Black Friday Sale Project\nProject-42: Sentiment Analysis Project\nProject-43: Parkinson’s Disease Prediction Project\nProject-44: Fake News Classifier Project\nProject-45: Toxic Comment Classifier Project\nProject-46: Heart Attack Risk Prediction Using Eval ML (Auto ML)\nProject-47: Credit Card Fraud Detection Using Pycaret (Auto ML)\nProject-48: Flight Fare Prediction Using Auto SK Learn (Auto ML)\nProject-49: Petrol Price Forecasting Using Auto Keras\nProject-50: Bank Customer Churn Prediction Using H2O Auto ML\nProject-51: Air Quality Index Predictor Using TPOT With End-To-End Deployment (Auto ML)\nProject-52: Rain Prediction Using ML models & PyCaret With Deployment (Auto ML)\nProject-53: Pizza Price Prediction Using ML And EVALML(Auto ML)\nProject-54: IPL Cricket Score Prediction Using TPOT (Auto ML)\nProject-55: Predicting Bike Rentals Count Using ML And H2O Auto ML\nProject-56: Concrete Compressive Strength Prediction Using Auto Keras (Auto ML)\nProject-57: Bangalore House Price Prediction Using Auto SK Learn (Auto ML)\nProject-58: Hospital Mortality Prediction Using PyCaret (Auto ML)\nProject-59: Employee Evaluation For Promotion Using ML And Eval Auto ML\nProject-60: Drinking Water Potability Prediction Using ML And H2O Auto ML\n\n\n30 Python Development Projects ---- Starts Here----\n\n\nProject-61: Image Editor Application With OpenCV And Tkinter\nProject-62: Brand Identification Game With Tkinter And Sqlite3\nProject-63: Transaction Application With Tkinter And Sqlite3\nProject-64: Learning Management System With Django\nProject-65: Create A News Portal With Django\nProject-66 : Create A Student Portal With Django\nProject-67 : Productivity Tracker With Django And Plotly\nProject-68 : Create A Study Group With Django\nProject-69 : Building Crop Guide Application with PyQt5, SQLite\nProject-70 : Building Password Manager Application With PyQt5, SQLite\nProject-71 : Create A News Application With Python\nProject-72 : Create A Guide Application With Python\nProject-73: Building The Chef Web Application with Django, Python\nProject-74 : Syllogism-Rules of Inference Solver Web Application\nProject-75 : Building Vision Web Application with Django, Python\nProject-76 : Building Budget Planner Application With Python\nProject-77 : Tic Tac Toe Game\nProject-78 : Random Password Generator Website using Django\nProject-79 : Building Personal Portfolio Website Using Django\nProject-80 : Todo List Website For Multiple Users\nProject-81 : Crypto Coin Planner Gui Application\nProject-82 : Your Own Twitter Bot -python, request, API, deployment, tweepy\nProject-83 : Create A Python Dictionary Using python, Tkinter, JSON\nProject-84 : Egg-Catcher Game using python\nProject-85 : Personal Routine Tracker Application using python\nProject-86 : Building Screen -Pet using Tkinter & Canvas\nProject-87 : Building Caterpillar Game Using Turtle and Python\nProject-88 : Building Hangman Game Using Python\nProject-89 : Developing our own Smart Calculator Using Python and Tkinter\nProject-90 : Image based steganography Using Python and pillows\n\n\nTip: Create A 90 Days Study Plan, Spend 1-2hrs Per Day, Build 90 Projects In 90 Days.\n\n\nThe Only Course You Need To Become A Data Scientist, Get Hired And Start A New Career\n\n\nNote (Read This): This Course Is Worth Of Your Time And Money, Enroll Now Before Offer Expires.",
      "target_audience": [
        "Anyone who is beginner in data science.",
        "Beginners who are interested to know about python."
      ]
    },
    {
      "title": "Python course from Zero-to-Hero - Intermediate Level",
      "url": "https://www.udemy.com/course/python-course-from-zero-to-hero-intermediate-level/",
      "bio": "Master Python with intermediate topics, hands-on projects, quizzes, and lifetime access. Learn efficiently",
      "objectives": [
        "Dictionary creation and advanced key-value operations",
        "Efficient methods for updating, merging, and iterating through dictionaries",
        "Handling nested dictionaries for complex data structures",
        "Advanced Data Structures – Explore dictionaries"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Dictionary Type in Python": [
          "Let's recap",
          "What is dictionary and how to define?",
          "Dictionary features",
          "Dictionary quiz",
          "Access dictionary items",
          "Dictionary modification",
          "Working with dictionary items quiz",
          "Removing from dictionary",
          "Copy dictionaries",
          "Copy & remove quiz",
          "Project: Simple word dictionary",
          "Loop through dictionaries",
          "Nested dictionaries",
          "Dictionary merging",
          "Merge & nested dictionary quiz",
          "Project: Remove duplicate values from a dictionary",
          "Project: Word frequency of a sentence",
          "Character frequency in a text"
        ],
        "Functions in Python": [
          "What is function?",
          "Parameter's data types",
          "Optional parameters & default values",
          "Functions & parameters in functions",
          "Keyword arguments",
          "Arbitrary arguments",
          "Arbitrary keyword arguments",
          "Mix parameters",
          "Different parameter types in python - Part 1",
          "Different parameter types in python - Part 2",
          "Tips for parameters in functions",
          "Return value",
          "Project: Simple interest calculator",
          "Project: To-do list Part1",
          "Project: To-do list Part2",
          "Fix the issue with to-do list project",
          "Recursion or recursive functions",
          "Lambda functions",
          "Return value, recursive function & lambda",
          "Function Return types",
          "Function return types quiz"
        ],
        "Object Oriented Programming in Python": [
          "Object Oriented Programming introduction",
          "Define a class in Python",
          "Constructors in Python",
          "What is self?",
          "Dunder methods in Python",
          "Project: Simple bank account system - Part 1",
          "Project: Simple bank account system - Part 2",
          "Project: Simple bank account system - Part 3",
          "Project: Simple bank account system - Part 4"
        ],
        "Encapsulation in Python": [
          "What is encapsulation?",
          "Encapsulation quiz",
          "Example: Student management system",
          "Project: Simple library management system",
          "Project: Guessing Game"
        ],
        "Inheritance in Python": [
          "What is inheritance?",
          "Simple (Single) Inheritance in Python",
          "Access to parent members",
          "Method Overriding",
          "Super method & adding attributes for a child class",
          "Super method & MRO",
          "Access modifiers & name mangling",
          "Multiple Inheritance in Python",
          "Handling same members (conflicts) from different parents in multiple inheritance",
          "Real world examples of inheritance"
        ],
        "Polymorphism & Abstraction in Python": [
          "What is polymorphism?",
          "Method Overriding",
          "Method Overloading",
          "Operator Overloading",
          "Duck Typing",
          "Project: Bank Account System using Polymorphism - Part 1",
          "Project: Bank Account System using Polymorphism - Part 2",
          "Project: Online Store System - Part 1",
          "Project: Online Store System - Part 2: apply discount",
          "Project: Online Store System - Part 3 - Reduce stock",
          "Project: Online Store System - Part 4 - Shopping cart",
          "Project: Online Store System - Part 5 - Calculate total price",
          "Project: Online Store System - Part 6 - Fix total price bug",
          "Project: Online Store System - Part 7 - Fix add to cart bug",
          "What is Abstraction?",
          "Abstraction in Python",
          "Multiple abstraction"
        ],
        "Scopes, Modules": [
          "Types of scopes in Python",
          "Some examples of scope",
          "global keyword",
          "nonlocal keyword",
          "Modules and how to define a module in Python",
          "datetime module: date",
          "datetime module: time",
          "datetime module: Formatting datetime , converting a string to a datetime object",
          "datetime module: Arithmetic operation on datetime & timedelta",
          "datetime module: Time zone",
          "math module",
          "Game: Math quiz with timer - Part 1",
          "Game: Math quiz with timer - Part 2",
          "Project: Count down timer"
        ]
      },
      "requirements": [
        "Prerequisites: Basic knowledge of Python (variables, loops, conditions). No prior advanced experience required!"
      ],
      "description": "Python Intermediate Mastery: Elevate Your Coding Skills\nAre you ready to go beyond the basics and become a more confident Python developer? Python is one of the most powerful, versatile, and widely used programming languages today. Whether you’re working in web development, data science, automation, or software engineering, mastering intermediate Python concepts will open new doors in your programming journey.\nThis intermediate-level course is designed to strengthen your understanding of Python’s core features while introducing you to more advanced techniques. You'll learn to write efficient, scalable, and professional-level Python code by diving deep into real-world programming scenarios.\nFor now, in this intermediate-level course, you’ll dive deep into Python dictionaries, learning how to store, manipulate, and optimize data using key-value pairs. Whether you're a programmer, data analyst, or developer, this course will enhance your coding skills and problem-solving abilities.\nWhat will you learn:\nDictionary creation and advanced key-value operations\nEfficient methods for updating, merging, and iterating through dictionaries\nHandling nested dictionaries for complex data structures\nCourse Features:\nFull Lifetime Access – Learn at your own pace, anytime, anywhere.\nQuizzes & Assignments – Reinforce your learning with interactive challenges.\nDownloadable Resources – Get access to code files, reference materials, and exercises.\nHands-on Projects – Apply what you learn through practical coding tasks.\nThis course is perfect for learners who have a basic understanding of Python and are eager to expand their knowledge with real-world applications.\nEnroll now and take your Python expertise to the next level!",
      "target_audience": [
        "Junior Developers & Programmers – Those looking to improve their Python efficiency and learn best practices.",
        "Students & Tech Enthusiasts – Learners ready to move beyond basic Python and explore more advanced features."
      ]
    },
    {
      "title": "Python Certification Preparation:4 Practice Tests",
      "url": "https://www.udemy.com/course/python-certification-preparation-4-practice-tests/",
      "bio": "Four Python Certification Preparation Tests with Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the Python Practice Tests Preparation Course! Our primary objective is to equip you with the essential practice and skills necessary in the field of Python development. Through the inclusion of four meticulously crafted practice tests, we aim to immerse you in a learning experience that spans a wide spectrum of topics and varying levels of difficulty.\nWhat You Will Obtain:\nFour Comprehensive Practice Tests: Each of these tests is thoughtfully designed to encompass a diverse array of questions that address different aspects of Python concepts and scenarios. By actively engaging with these practice tests, you will cultivate the proficiency needed to tackle the kinds of questions you are likely to encounter in Python certification exams, ensuring that you are well-prepared for the real assessment.\nDetailed Explanations: Following each practice test, you will receive comprehensive explanations for every question. These explanations will furnish you with a profound understanding of the correct answers, enabling you to solidify your knowledge and learn from any errors you may have made.\nAchievement Goal: To successfully complete this course, set your target at achieving a minimum score of 75% on each of the four practice tests.\nWho Can Benefit from This Course:\nThis course extends a warm welcome to individuals at various stages of their Python programming journey. It is suitable for:\nStudents who are actively preparing for Python certification exams.\nProfessionals seeking to enhance their employability by attaining a valuable Python certification.\nProgrammers who aspire to elevate their Python skills and expand their career horizons.\n\n\nBest regards,",
      "target_audience": [
        "Individuals in the process of actively preparing for Python certification exams.",
        "Professionals aiming to boost their job market competitiveness by obtaining a valuable Python certification.",
        "Programmers who aspire to enhance their Python proficiency and expand their career opportunities."
      ]
    },
    {
      "title": "Learn C Programming Language with Examples in One Day",
      "url": "https://www.udemy.com/course/01-day-c-code-learn-c-programming-with-examples-in-one-day/",
      "bio": "100% C Programming Language Bootcamp | C Projects | Quiz | Assignments | Coding Exercises | Practical Focus",
      "objectives": [
        "Understand the fundamentals of programming and the syntax of the C language.",
        "Write simple to complex C programs using loops, decision-making statements, and functions.",
        "Handle data types and variables, and use them effectively in C programs.",
        "Use arrays, structures, and pointers to manipulate data in a C program.",
        "Implement file handling concepts to read and write data from/to files.",
        "Implement string operations and understand the concept of typecasting.",
        "Use header files to organize and reuse code.",
        "Debug programs to identify and fix issues.",
        "Prepare for further studies in computer science, software engineering, or a related field."
      ],
      "course_content": {
        "Introduction to C Programming in ONE DAY": [
          "01 C Programming Course Introduction"
        ],
        "Last Course Updates 15 September 2025": [
          "New Updates"
        ],
        "Morning Session": [
          "02 Introduction to C Language",
          "03 Environment Setup for C",
          "04 Basic Program Syntax in C",
          "05 Hello World in C",
          "06 Placeholder in C Language",
          "07 Variables in C",
          "08 Constant in C",
          "09 Comments in C",
          "Explaining C Programming Basics: Variables, Constants, and Comments"
        ],
        "C Mini Projects for Morning": [
          "Project #1",
          "Project #2"
        ],
        "Afternoon Session": [
          "01 Input Output in C",
          "02 Data Types in C",
          "03 Type Casting in C",
          "04 Operators in C",
          "05 if and if else in C",
          "06 While Loop in C",
          "07 Nested if else in C",
          "08 do while Loop in C",
          "09 For Loop in C",
          "Explaining Loops and If–Else in C Programming"
        ],
        "C Mini Projects for Afternoon": [
          "Project #3",
          "Project #4"
        ],
        "Evening Session": [
          "01 String in C",
          "02 Math in C",
          "03 Function in C",
          "04 Array in C",
          "05 Pointers in C",
          "Explaining Functions, Math, Strings, Pointers, and Arrays in C"
        ],
        "C Mini Projects for Evening": [
          "Project #5",
          "Project #6"
        ],
        "Combined Projects": [
          "Project #7",
          "Project #8"
        ],
        "Your Assignments": [
          "Assignment 01",
          "Assignment 02"
        ]
      },
      "requirements": [
        "You did not need to buy any software or other course",
        "You did not need to have programming background"
      ],
      "description": "Learn C Programming in One Day – Start Coding with Confidence\nDo you think learning C programming or C is difficult? With the right guidance, hands-on projects, and structured learning, you can start coding confidently in C programming language in just one day. This course is designed for beginners who want a practical, engaging, and comprehensive introduction to C, giving you the foundation to explore more advanced topics like game development or embedded C.\nWhether you’re a student, a beginner programmer, or someone looking to strengthen your coding foundation, this course will give you the confidence to write your first C programs and build mini projects by the end of the day.\nHow This Course Is Structured\nTo make learning effective, the course is divided into three focused sessions:\nMorning Session: Introduction to C programming, environment setup, writing your first \"Hello World\" program, input/output, variables, constants, and data types.\nAfternoon Session: Decision-making, loops, functions, arrays, and pointers. These concepts help you control program flow and manage data effectively.\nEvening Session: Advanced topics including strings, type casting, file I/O, and header files, preparing you to write complete and functional programs.\nThis session-based structure ensures you master each concept before moving on, building confidence step by step.\nHands-On Projects Included\nLearning by doing is the fastest way to master programming. This course includes practical C mini-projects:\nGreeting Generator\nSimple Calculator\nGrade Calculator\nNumber Pattern Generator\nString Reverser\nPointer-Based Array Operations\nBy completing these projects, you’ll see how C programming concepts are applied in real scenarios, making your skills stronger and preparing you for applications in game development or embedded C projects.\nWhy Enroll Today?\nSuccess in programming comes from practice, not theory. This course gives you both the knowledge and motivation to start coding today. Completing this one-day course will prepare you to continue learning, explore embedded C, develop simple games, or tackle more advanced programming challenges.\nBenefits of This C Programming Course\nComprehensive Learning: Covers all essential topics from syntax and data types to advanced pointers and file handling.\nPractical Approach: Learn by doing with examples, exercises, and real projects.\nExpert Instruction: Taught by experienced instructors passionate about helping you succeed.\nFlexibility: Learn at your own pace, anytime and anywhere.\nCareer Opportunities: Opens doors in software development, system programming, game development, and more.\nTake action today. By the end of the day, you’ll already be writing C programs confidently and ready to explore more advanced topics.\nThank you,\nFaisal Zamir",
      "target_audience": [
        "Beginners who have no prior knowledge of C programming and want to learn it from scratch.",
        "Students pursuing a degree in computer science or related fields who need to learn C programming as part of their coursework.",
        "Professionals who want to enhance their programming skills and add C programming to their skill set.",
        "Experienced programmers who want to learn C programming to develop low-level applications such as system software, drivers, and embedded systems.",
        "Anyone who wants to learn C programming for personal growth and to explore the world of programming."
      ]
    },
    {
      "title": "Getting Started With Python",
      "url": "https://www.udemy.com/course/gettingstartedwithpython/",
      "bio": "Hands-On Approach",
      "objectives": [
        "Fundamentals of Python Programming",
        "Working with VS Code and Jupyter Notebook",
        "Live Programming Examples and Projects",
        "GUI Programming using Tkinter Module",
        "Python Modules",
        "Object Oriented Programming in Python",
        "Exception Handling in Python",
        "Python Data Types"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Python Introduction",
          "Downloading Python",
          "VS Code Download",
          "Getting Started",
          "Anaconda Introduction",
          "Working with Jupyter Notebook",
          "Taking User Input",
          "Typecasting",
          "Compiler & Interpreter",
          "Quiz on Python Basics"
        ],
        "Conditional Statements and Loops": [
          "if else",
          "for loop",
          "while loop",
          "F String Demo"
        ],
        "BMI Project": [
          "BMI Introduction",
          "BMI Coding Part"
        ],
        "Coding Challenge-Sum of Digits": [
          "Sum of digits-Logic Part",
          "Sum of Digits- Coding Part"
        ],
        "Coding Challenge- Reversing a Number": [
          "Reversing a Number-Concept Part",
          "Reversing a Number-Coding Part"
        ],
        "Coding Challenge- Factorial": [
          "Factorial - Logical Part",
          "Factorial - Coding Part"
        ],
        "Data Types in Python": [
          "List Introduction",
          "List-Demo",
          "List-Element Count",
          "List Indexing",
          "List Operation",
          "List Sorting",
          "Dictionary Introduction",
          "Dictionary Demo",
          "Tuple Intro",
          "Tuple Demo",
          "Set Introduction",
          "Set Demo",
          "Quiz on List"
        ],
        "Functions in Python": [
          "Function - Part 1",
          "Function - Part 2",
          "Function - Part 3",
          "Function - Part 4",
          "Local Vs Global Variable",
          "Lambda Function",
          "Lambda Function: Coding Part",
          "Quiz on Function"
        ],
        "Modules": [
          "Regex",
          "DateTime",
          "Turtle Introduction",
          "Drawing Square Shape",
          "Drawing Circle",
          "Drawing Triangle: Concept",
          "Drawing Triangle: Code",
          "Drawing Star",
          "Drawing Spiral: Concept",
          "Drawing Spiral: Code"
        ],
        "GUI Programming using Tkinter Module": [
          "Introduction to Tkinter Module",
          "Geometry Managers in Tkinter",
          "GUI Window with Button",
          "Tkinter Button Functions",
          "Tkinter Messagebox",
          "Tkinter BMI",
          "Tkinter EXE File Concept",
          "Tkinter BMI Exe File Creation",
          "Tkinter Grid Method"
        ]
      },
      "requirements": [
        "No Programming experience is needed. We will cover the basics and grow in a step by step manner."
      ],
      "description": "This course provides a comprehensive overview of Python Programming which is one of the most widely used computer programming language in the world today.  The language has a strong presence in domains like: Data Science, Artificial Intelligence, Machine Learning, Cyber Security, Web Development and many other domains that are relevant today. The course covers the language basics as well as the algorithms that are required to build a program. The hands-on part of Python has been implemented in VS Code and Jupyter Notebook, so that learners can get used to the software environments that are popular in the community.  The course has been designed in such a way that beginners can follow along easily in a step by step manner and get confident in their coding skills.  If you have knowledge of other programming language then also you will find the resources helpful that will help you to get used to Python programming and its syntax in no time. At a glance the following concepts are covered:\n1. Python Programming basics: Working with variables, type casting, processing user input\n2. Loops in Python: if-else, For, While\n3. Python Data Types: List, Dictionary, Tuple, Set\n4. Exception Handling\n5. Functions\n6. Modules: DateTime, Regex, Turtle, Tkinter: GUI Programming,  MATPLOTLIB\n7. Creating Executable File\n8. Object Oriented Programming: Polymorphism, Inheritance, Encapsulation\n9. Mini Projects/Coding Challenges: Random Password Generator, QR Code Generator\n10. API Handling: JSON decoding in Python",
      "target_audience": [
        "Beginners in the field of programming, experts who want to have a quick recap and brush up the concepts. The course is easy to follow and it's completely hands-on"
      ]
    },
    {
      "title": "Python Programming",
      "url": "https://www.udemy.com/course/python-bootcamp-learn-python-programming/",
      "bio": "Gentle Introduction Python Programming",
      "objectives": [
        "Python programming fundamentals"
      ],
      "course_content": {
        "Introduction to Python": [
          "Course Introduction",
          "What is Python",
          "What is Python - Quiz",
          "How to download Jupyter",
          "How to use Jupyter Notebook",
          "How to use Colab"
        ],
        "Python Basics": [
          "Our first python program",
          "Quiz 2"
        ],
        "Python Data Types": [
          "Introduction to Programming",
          "Introduction to data types",
          "Lists and Tuples"
        ],
        "Control Flow": [
          "Introduction to control flow statements"
        ],
        "Functions and methods": [
          "Introduction to functions"
        ],
        "Bonus Lectures": [
          "Workshop 01",
          "Workshop 02",
          "Workshop 03",
          "Workshop 04",
          "Workshop 05",
          "Workshop 06",
          "Workshop 07",
          "Workshop 08",
          "Workshop 09",
          "Workshop 10",
          "Workshop 11",
          "Workshop 12",
          "Workshop 13",
          "Workshop 14",
          "Workshop 15",
          "Workshop 16",
          "Workshop 17",
          "Workshop 18"
        ]
      },
      "requirements": [
        "A computer with an internet connection"
      ],
      "description": "Learn Python Programming from scratch and build concepts in an easy and fun way with lot of examples\nLearn how to use the different IDEs including Jupyter Notebooks and Google's Colab\nUnderstand how to create your own Python programs.\nMaster Object Oriented Programming concepts\nGet complete understanding of the all basic concepts of Python programming language.\nBuild the skills and understanding of Python to confidently apply for Python programming jobs.\nLearn Python from experienced professional software developers.\nLearn python easily with lot of practical examples from real-world projects\nThe course has been updated to be 2021 ready and you'll be learning the latest tools and technologies used at large companies such as Apple, Google and Netflix.\nThis course doesn't cut any corners, there are tens of real-world projects which you will get to build.\nThe curriculum was developed over a period of 4 years, with comprehensive student testing and feedback.\nWe've taught over 100,000 students how to code and many have gone on to change their lives by becoming professional developers or start their own tech startup.\nYou'll save yourself over $10,000 by enrolling, and still get access to the same teaching materials and learn from the same instructor and curriculum as our in-person programming bootcamp.\nThe course is constantly updated with new content, with new projects and modules determined by students - that's you!",
      "target_audience": [
        "Beginners to programming who want to learn programming with python and data science"
      ]
    },
    {
      "title": "The Comprehensive Guide to Swift",
      "url": "https://www.udemy.com/course/the-comprehensive-guide-to-swift/",
      "bio": "A Guide to Apple's New Programming Language for iOS and OSX Development - No Experience Required Beginner to Expert",
      "objectives": [
        "Program with confidence in Apple's new programming language Swift!"
      ],
      "course_content": {
        "Basics": [
          "Intro",
          "Xcode",
          "Variables",
          "Constants",
          "Print Command",
          "Strings (Abstract)",
          "String - Special Characters",
          "String - More Special Characters",
          "Characters",
          "String Properties",
          "Numbers",
          "Boolean"
        ],
        "Operators": [
          "Assignment Operator",
          "Arithmetic Operators",
          "More Arithmetic Operators",
          "Operator Precedence",
          "Unary Operators",
          "Compound Assignment Operator"
        ],
        "Collections": [
          "Arrays",
          "Append to Arrays",
          "Updating Arrays",
          "Dictionaries",
          "Working With Dictionaries"
        ],
        "Control Flow": [
          "Logic - AND",
          "Logic - OR",
          "Logic - NOT",
          "Logic - EQUIVALENCE",
          "Logic - COMPARATIVE",
          "If Else Statement",
          "Use If Else for Variable Assignment",
          "Else If",
          "Nested If",
          "Switch",
          "While",
          "Do While",
          "For Loop",
          "For Loop Adaptive",
          "For In Loop"
        ],
        "Functions": [
          "Functions",
          "Scope",
          "Parameters",
          "Return",
          "Custom Parameters",
          "Tuples",
          "Working with Tuples"
        ],
        "Optionals": [
          "Optionals",
          "Optionals Example",
          "Unwrap Optionals"
        ],
        "Enumerations": [
          "Enums",
          "Working with Enums",
          "Raw Value",
          "Using Raw Values in Functions",
          "Associated Value",
          "Working with Associated Value",
          "Enum Methods",
          "Enum Initialization"
        ],
        "Structures": [
          "Structs",
          "Struct Instances",
          "Default Values",
          "Struct Initializer",
          "Struct Methods"
        ],
        "Classes": [
          "Classes",
          "Designated Initializer",
          "Class Methods",
          "Class Inheritance",
          "Overriding Functions",
          "Initializer Overriding",
          "Convenience Initializer",
          "Computed Properties",
          "Get & Set",
          "Optional Properties",
          "Value Vs. Reference"
        ],
        "Where to next?": [
          "SceneKit course available now!"
        ]
      },
      "requirements": [
        "No experience required!",
        "An Apple computer"
      ],
      "description": "Have you ever had a great app idea, had an interest in coding or just wanted to learn a new skill?\nWell this course is just for you!\nSwift is a new programming language by Apple that is used for developing iOS and OSX applications!\nIf you have ever wondered how the apps on your iPhone, iPad or a Mac computer are made then here is the big secret they are coded in a programming language and now with the release of Apple’s new programming language Swift it has never been a better time to start learning.\nNot only is coding a highly in demand skill in the current job market but it is also extremely rewarding and empowering.\nSince Swift Just came out there are very few experts in the field and those that want to go in to coding or app development will be at a huge advantage by taking the step to learn the programming language necessary to code for mobile technologies, specifically iOS.\nAnd that is where this course comes in!\nYou are getting in on the ground level of massively in demand and useful skill.\nMy name is Ibram Uppal and I am the owner of Megaplex Applications an iOS apps development company and also a full time mobile and web developer.\nWith this course you will learn programming from the absolute basics all the way to more advanced topics, as well as best practices for coding.\nYou do not need any experience programming to take this course. So beginners welcome.\nSo I welcome you to the start of your very exciting journey into iOS and mobile development in the Comprehensive Guide to Swift.",
      "target_audience": [
        "This Swift course is the meant for the absolute beginner looking to get into programming but also seasoned coders looking to learn a new language for mobile development. You do not need any experience for this course. This course is not for you if you are looking to program in Objective-C or on the android platform."
      ]
    },
    {
      "title": "Learn Python from Scratch : Python Programming",
      "url": "https://www.udemy.com/course/learn-python-from-scratch-python-programming-datascience/",
      "bio": "Build your Python Career as a Programmer and Data Science Analyst",
      "objectives": [
        "Python programming standard for Data Science",
        "Learn to write Python basic statements",
        "Data types and String formatting to prepare coding",
        "Python with sequences to set group data items for Data Science",
        "Use Django framework to create a simple eCommerce applications",
        "Create python mini games with building real world logics",
        "Control flow statements to how to control logical statements",
        "Applying OOPs concepts of inheritance and polymorphism techniques",
        "Learn How to handle real time errors and exceptions on apps",
        "Write and Apply an Advanced Python coding for your projects",
        "Learn what is Generative AI for future learning"
      ],
      "course_content": {
        "Course Overview": [
          "Course Introduction",
          "Course Curriculum Overview",
          "Python What’s New",
          "What is source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Setting up Python Environment": [
          "Python Command Line Basics",
          "Python Installation (Step by Step)",
          "Pycharm-CE IDE Installation",
          "Setting Up Environment",
          "Running Python Code",
          "Git and GitHub Overview"
        ],
        "Python Object and Data Structures Basics": [
          "Python Data Types",
          "Python Arithmetic Operators Numbers",
          "Variable Assignments",
          "Strings Introduction",
          "Indexing and Slicing with Strings",
          "String Properties and Methods",
          "Print Formatting with Strings",
          "Lists in Python",
          "Dictionaries in python",
          "Tuples in Python"
        ],
        "Python Operators": [
          "Comparison Operators in Python",
          "Logical Operators in Python"
        ],
        "Python Statements": [
          "If Elif and Else Statements in Python",
          "For Loops in Python",
          "While Loops in Python",
          "Python program to find the factorial of a given number"
        ],
        "Method, Functions and Nested Loop Statements": [
          "Functions in Python",
          "Methods in Python",
          "List Methods in Python",
          "Nested Loop in Python",
          "2D Lists using Nested Loop in Python"
        ],
        "Object Oriented Programming (OOPs)": [
          "Object Oriented Programming – introduction",
          "Object Oriented Programming – Attributes and Class keyword",
          "Object Oriented Programming – Class Object Attributes and Methods",
          "Object Oriented Programming – Inheritance",
          "Object Oriented Programming – Encapsulation",
          "Object Oriented Programming – Polymorphism"
        ],
        "Modules and Packages": [
          "Install Pip and Pypi",
          "Modules",
          "Packages"
        ],
        "Errors and Exception Handling": [
          "Errors and Exception Handling"
        ],
        "4 Mini Projects": [
          "Guessing Game",
          "Car Game",
          "Dice Game",
          "Card and Deck Game playing"
        ]
      },
      "requirements": [
        "Be able to read and write on computer system with internet access",
        "No prior technical experience is required! All you need a computer!",
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "Start your programming journey with \"Learn Python from Scratch: Python Programming.\" This beginner-friendly course is designed to take you from zero knowledge to confidently writing Python code. Python is one of the most versatile and beginner-friendly programming languages, widely used in web development, data analysis, machine learning, automation, and more.\n\n\nYou’ll begin with the basics, learning Python syntax, data types, and core concepts like loops, conditionals, and functions. As you progress, you’ll dive deeper into more advanced topics such as object-oriented programming (OOP), file handling, error handling, and working with for data manipulation. You'll also explore practical applications like web scraping, building simple scripts, and automating everyday tasks.\n\n\nWhat sets this course apart is its hands-on approach. You will engage in interactive coding exercises, real-world projects, and challenges to reinforce your learning and build a solid foundation in Python programming. You'll gain the practical experience needed to apply Python to solve real-world problems.\n\n\nBy the end of the course, you’ll have a deep understanding of Python and its capabilities, giving you the confidence to pursue careers in software development, data science, automation, and more. No prior experience is required—just a passion to learn and the drive to succeed.\n\n\nJoin now and start your Python programming journey from scratch today!",
      "target_audience": [
        "Beginner Python developers curious about data science",
        "Anyone who wants to generate new income streams",
        "People who want to become a programmer on Python",
        "Anyone who wants to become a Full stack web developer",
        "Anyone who wants to start python developer career",
        "Anyone who wants to start their own business or become freelance on creating apps"
      ]
    },
    {
      "title": "Python Programming Masterclass for Beginners : Zero to Hero",
      "url": "https://www.udemy.com/course/python-programming-masterclass-for-beginners-zero-to-hero/",
      "bio": "Learn Python Programming from Scratch by building applications using Machine Learning, Data Science and Python GUI",
      "objectives": [
        "Introduction to Python programming language and its origin",
        "How Python has changed and revolutionized the world",
        "Various uses of Python Programming and why you should learn this astonishing coding technique",
        "Coding basics and functions in Python",
        "Advantage of python coding procedure over other programming languages",
        "Taking advantage of the simplicity encoding of python and also exploring a few inbuilt functions",
        "Creative variety range of applications using Python coding for example games online forms and more",
        "Using graphical user interfaces and other interface methods which are up to industry standards",
        "Python programs that are a must every Python for beginners tutorials alongside that will also be comparing and optimizing our code and procedures of coding",
        "The extension and branching out of python applications",
        "Exploring a majority of python inbuilt libraries and their functionality to reduce our time for development of the program",
        "Will be understanding our vast majority of supporting platforms such as Python and also Jupyter notebook and much much more"
      ],
      "course_content": {
        "Introduction to Python": [
          "Introduction",
          "Python history",
          "Python derivatives",
          "The IDLE lookup",
          "Python variable assignment basics",
          "Interface design part",
          "Python different IDLE'S",
          "Basic execution or single line execution",
          "Assignment operation for basic math",
          "Type of the variable",
          "Python FILE",
          "The basic code",
          "Into to interface part-1",
          "Into to interface part-2",
          "Into to interface part-3",
          "Into to interface part-4",
          "Single line coding",
          "Variable assignment",
          "Arrays and lists",
          "Arrays and tuples and creation of tuples",
          "Stings and creation of sub strings introduction"
        ],
        "Sub Strings, Loops and Decimal Conversions": [
          "Substring part two",
          "Sets and creation of the same sets",
          "Dictionaries",
          "Passing list and tuples to dictionaries",
          "Binary hexadecimal and octal numbering",
          "Basic variable",
          "Loops",
          "For loop part-1",
          "For loop part-2"
        ],
        "More Loops and Statements, Conditions": [
          "For loop and break exit condition",
          "Output alteration for for loop",
          "For loop and range function",
          "Nested for loop",
          "For loop in list implementation",
          "If else condition or statement",
          "Elif statement",
          "Assignment operator"
        ],
        "Ladder Conditions": [
          "Relational operator",
          "Ladder if else",
          "Shorthand part-1",
          "Single statement if-else condition",
          "Short hand and condition",
          "Pass",
          "Do while loop",
          "While loop"
        ],
        "Functions and Range Functions": [
          "Logical operator",
          "Range function part-2",
          "Defining a user defined function",
          "Absolute value function",
          "Self defined functions example with theory",
          "Complex numbers",
          "Any function",
          "Any function part two",
          "Memory efficiency in python using id function",
          "User defined example sum of two numbers",
          "User defined function part-1",
          "User define function part-2",
          "Datatype in python",
          "Python type conversions and decimal errors",
          "Fraction operation",
          "Python math modules",
          "Random variables",
          "List addressing",
          "Negative list addressing",
          "List addressing basics",
          "List appending",
          "Remove and pop and clear"
        ],
        "List and Iteration": [
          "List method part-1",
          "List method part-2",
          "Iterations and tuples methods",
          "Tuples making ways",
          "Tuple packing parts",
          "Tuple indexing",
          "Tuples negative indexing and slicing",
          "Tuple indexing , count , methods and sequence",
          "Tuple iteration",
          "Strings",
          "List count and enumeration",
          "Escape sequences",
          "Pattern printing",
          "hello world program and adding of two numbers in different ways in python",
          "User input based finding square root of given number",
          "Finding area and semi-perimeter of a triangle",
          "Complex numbers",
          "Swapping two numbers using temporary variables",
          "Random input program",
          "Conversion program",
          "Negative or number",
          "Nested checking number positive",
          "Odd or even number determination",
          "Fahrenheit",
          "Important leap year program",
          "Largest number part-1",
          "Largest number part-2",
          "Prime number or not",
          "Factorial of a number",
          "Multiple of number",
          "Fibonacci series program",
          "Check for Armstrong number",
          "Armstrong checking",
          "Iteration program",
          "More basic program",
          "The Lambda function program",
          "Binary to hex and octal conversions inbuilt-functions",
          "ASCII conversion",
          "Hcf of two numbers",
          "LCM of two numbers",
          "Factorials of any number",
          "The simple calculator part-1",
          "The simple calculator part-2",
          "The cards program",
          "Python code for calendar program",
          "Recursive Fibonacci",
          "Sum of natural numbers using recursion",
          "Factorial using recursion",
          "Recursion using binary number conversion",
          "Matrices addition",
          "Matrix transpose",
          "Multiplication of matrices",
          "A palindrome checker",
          "Remove punctuation program",
          "Alphabetical order",
          "Union and other functions",
          "String counting and matching",
          "Intro to files",
          "E-mail systems",
          "The python IDLES",
          "Spyder and anaconda",
          "Anaconda and matrices",
          "Jupyter notebook and atom sublime-text",
          "Jupyter notebook and atom sublime text",
          "IDLE selection",
          "Python in a nutshell summary"
        ],
        "Python Applications of Jumbled Words and Games": [
          "The place() + start Python application form",
          "Python GUI analogy",
          "Linux and coding history linking to python GUI",
          "Python GUI part-1",
          "Pandas",
          "Rock,paper scissor logic and application Part-1",
          "Rock,paper,scissor logic and application Part-2",
          "Magic eight ball and probabilty",
          "Jumbled alternate apporach",
          "Jumbled words program and explanation",
          "All python GUI components part-1",
          "All python GUI components part-2",
          "All python GUI components part-3",
          "All python GUI components part-4",
          "All python GUI components part-5",
          "All python GUI components part-6",
          "All python GUI components part-7",
          "All python GUI components part-8",
          "All python GUI components part-9",
          "All python GUI components part-10",
          "Label counter type-1",
          "Label counter type-2",
          "Listboxes",
          "Menu button",
          "Multi windows",
          "Message boxes",
          "Radio Buttons",
          "Scroller bar",
          "Slider",
          "Random function"
        ],
        "Python GUI Applications": [
          "Python snake GUI program intro",
          "Snake program application Part-1",
          "Snake program application Part-2",
          "Snake program application Part-3",
          "Snake program application Part-4",
          "Output for snake application",
          "Hang man program application",
          "Python for form Part-0",
          "Python for form Part-1",
          "Python for form Part-2",
          "Python for form Part-3",
          "Python for form Part-4",
          "Python for form Part-5",
          "Python for form Part-6",
          "Python for form Part-7",
          "Python for form Part-8"
        ],
        "Python Applications of Chat-bot systems": [
          "Chat-bot systems Part-1",
          "Chat-bot systems Part-2",
          "Chat-bot systems Part-3",
          "Chat-bot systems Part-4",
          "Chat-bot systems Part-5",
          "Understanding Chat-bot systems Part-6",
          "Understanding Chat-bot systems Part-7",
          "Understanding Chat-bot systems Part-8",
          "Understanding Chat-bot systems Part-9",
          "Understanding Chat-bot systems Part-10",
          "Alternate Chat-bot System Part-1",
          "Alternate Chat-bot System Part-2",
          "Alternate Chat-bot System Part-3",
          "Alternate Chat-bot System Part-4",
          "Alternate Chatbot System Part-5"
        ],
        "Applications in Online Quizzing Systems using Python": [
          "Quiz Applications Part-1",
          "Quiz Applications Part-2",
          "Quiz Applications Part-3",
          "Quiz Applications Part-4",
          "Quiz Applications Part-5",
          "Quiz Applications Part-6",
          "Quiz Applications Part-7",
          "Python usage in quizzes and modules",
          "Python usage in quizzes and modules Part-2 and intro to next application"
        ]
      },
      "requirements": [
        "No requirement whatsoever is necessary but the student is expected to have a computer OR laptop with Python 3 or higher versions installed and it should be fully functional"
      ],
      "description": "In this Python course we will be dealing with the introduction, short and sweet history upon programming languages and how Python stands out as more benefiting than any of the previous developed languages.\nEven if you are a total beginner to coding, in general this course assists you and Guides you through the whole way and also helps you become a master coder. Not only that we will also be seeing the basic Industry standards and requirements that you should know as a Python expert and even more we will start all of this from the very basics so you will have no confusion or stuck up in any topic. Python is one of the leading and trending programming languages that has been separated as a sign of superiority as opposed to other programming languages despite anyone being from a computer science background or not. Python is essential for anyone who wishes to seek some jobs for internships from the IT industry. Because of python dynamic nature it is very easy to understand most concept and also implement the same which can be reflected in your program and output.\nTherefore even the students who are not from computer or any coding background with no coding experience at all will also benefit from this as having Python as a skill under your resume is never a loss. From strings tuples to even libraries such as Pandas and SK learn we will be understanding Python in depth and in an efficient manner. This also includes 25 of the most commonly asked Python questionnaires as well as programs that are a quintessential and a confirmed question in the most industry standard interviews these are the programs that are expected to be known by anyone who has good grip a on python.\nWe will be also dealing with statements and conditions which are very crucial for decision making in any programming language and in this case python.The fundamental that will be covering here will include from memory management to fast execution of the code as well as the basic operation be required for making simple programs such as additional qualification to Complex programs such as statistics and mathematical regressions.\nIn short the complete package that not only introduces you to the beginning of python  basics but also teaches you a few basic course that are expected from every individual who owns a skill in Python as well as we will see a few higher and and yet to be discovered subjects such as machine learning and artificial intelligence as well.\nWhat you will learn\nIntroduction to Python programming language and origin of the same\nHow Python has changed and revolutionized  the world\nVarious uses of Python Programming and why you should learn this astonishing coding technique\nCoding basics and functions in Python\nAdvantage of python coding procedure over other programming languages\nTaking advantage of the simplicity encoding of python and also exploring a few inbuilt functions\nCreative variety range of applications using Python coding for example games online forms and more\nUsing graphical user interfaces and other interface methods which are up to industry standards\nWe will also becoming a few basic Python programs that are a must every Python for beginners tutorials alongside that will also be comparing and optimizing our code and procedures off coding\nThe extension and branching out of python applications not only serves as a tool for development of websites but also into Research\nExploring a majority of python inbuilt libraries and their functionality to reduce our time for development of the program\nWill be understanding our vast majority of supporting platforms such as Python and also Jupyter notebook and much much more feel free to use which have a platform your comfortable with do we recommend Python 3.x and higher up versions\n\n\nWho this course is for\nSo basically this course is someone who is absolute beginning to Python and has never coded ever before it can also be for someone who has some knowledge on coding previously though it doesn't differ as we will be covering Python from the basics\nFor students who are Aspiring to become developers in Python and other application oriented work using python Python programming\nA student who is curious to learn about programming language but doesn't know where to start with which in such case for a beginner in programming languages in general Python is a good pic for starters\nAnyone who just wants to brush up previously gain knowledge from Python and wants to study Python for Application purposes\nA programmer who is in requirement of learning Python for both personal purpose and professional purposes\nPython is only used for front end but also for back and Developers so if anyone is into database or user interface application designing then this would help them satisfy the needs\nIt is also useful for people who are working with IOT that is internet of things where you require interfacing with the Arduino robot and you have to use Python button on different platform called t h o n n y",
      "target_audience": [
        "Anybody who wants to learn Python Programing",
        "College Students",
        "IT Professionals"
      ]
    },
    {
      "title": "Comprehensive Introduction to Programming with C#",
      "url": "https://www.udemy.com/course/comprehensive-introduction-to-programming-with-csharp/",
      "bio": "Practical Problem Solving Approach. Learn Programming by Examples and Practical Assignments with C# and Visual Studio",
      "objectives": [
        "coding",
        "programming",
        "C# language",
        "Visual Studio",
        "computer programming",
        "variables",
        "expressions",
        "conditional statements",
        "loops",
        "console input / output",
        "methods"
      ],
      "course_content": {
        "Welcome to the C# Intro Course": [
          "Course Objectives",
          "The Trainers",
          "How to Become a Developer?",
          "The Judge System"
        ],
        "First Steps in Programming": [
          "First Steps in Programming – Overview",
          "Computer Programs and Dev Tools",
          "Programming Languages and Runtime Environments",
          "Computer Programs – Examples",
          "IDEs and Visual Studio",
          "Exercise: Creating a Console Application",
          "Typical Mistakes in C# Programs",
          "Exercise: Expression",
          "Exercise: Numbers 1 to 20",
          "Exercise: Triangle of 55 Stars",
          "Exercise: Rectangle Area",
          "Exercise: Square of Stars",
          "First Steps in Programming – Summary"
        ],
        "Simple Calculations": [
          "Simple Calculations – Overview",
          "The System Console",
          "Reading Integers from the Console",
          "Reading from the Console: How It Works?",
          "Exercise: Square Area",
          "Variables, Data Types and Calculations",
          "Declaring and Using Variables",
          "Reading Floating Point Numbers from the Console",
          "Reading and Printing Text from the Console",
          "Formatting Text and Numbers",
          "Arithmetic Operations",
          "Concatenating Text and Numbers",
          "Numerical Expressions",
          "Exercise: Circle Perimeter and Area",
          "Exercise: Rectangle Area",
          "Lab: GUI App \"BGN to EUR Converter\"",
          "Simple Calculations – Summary"
        ],
        "Simple Conditions": [
          "Simple Conditions – Overview",
          "Comparing Numbers",
          "Simple Checks (If-Else)",
          "Simple Checks (If-Else) – Examples",
          "Variable Scope",
          "Series of Checks (If-Else-If-Else)",
          "Exercise: Bonus Points",
          "Exercise: Sum of Seconds",
          "Exercise: Metric Converter",
          "Debugging the Code",
          "Lab: GUI App \"Currency Converter\"",
          "Simple Conditions – Summary"
        ],
        "Complex Conditions": [
          "Complex Conditions – Overview",
          "Nested Checks (If inside If)",
          "Exercise: Person's Title",
          "Exercise: Local Shop",
          "Logical \"AND\"",
          "Logical \"OR\"",
          "Logical \"NOT\"",
          "Exercise: Fruit Store",
          "Exercise: Trade Fees",
          "Switch-Case Statement",
          "Complex Conditions – Summary"
        ],
        "Simple Loops": [
          "Simple Loops – Overview",
          "Simple \"For\" Loops: Repeating Code Blocks",
          "Exercise: Numbers from 1 to 100",
          "Exercise: Numbers 1...1000 Ending by 7",
          "Exercise: All Latin Letters",
          "Exercise: Sum of Numbers",
          "Exercise: Largest Number",
          "Exercise: Smallest Number",
          "Exercise: Left and Right Sum",
          "Exercise: Even / Odd Sum",
          "Exercise: Sum of Vowels",
          "Lab: GUI App \"Turtle Graphics\"",
          "Simple Loops – Summary"
        ],
        "Nested Loops": [
          "Nested Loops – Overview",
          "Nested Loops – Concepts",
          "Exercise: Rectangle of 10 x 10 Stars",
          "Exercise: Rectangle of N x N Stars",
          "Exercise: Triangle of Dollars",
          "Exercise: Square Frame",
          "Exercise: Rhombus of Stars",
          "Exercises: Christmas Tree",
          "Exercises: Sunglasses",
          "Exercise: House",
          "Exercise: Diamond",
          "Lab: Web App \"Ratings\"",
          "Nested Loops – Summary"
        ],
        "Advanced Loops": [
          "Advanced Loops – Overview",
          "For Loop with a Step",
          "Exercise: Numbers N...1 in Reverse Order",
          "Exercises: Numbers 1...2^N",
          "Exercises: Even Powers of 2",
          "While Loops",
          "Exercises: Numbers in Range 1...100",
          "Exercise: GCD and the Euclidean Algorithm",
          "Do-While Loops",
          "Exercise: Sum the Digits of a Numbers",
          "Infinite Loops with Break",
          "Exercise: Prime Number Checking",
          "Handling Wrong Input with Try-Catch",
          "Exercise: Fibonacci Numbers",
          "Exercise: Pyramid of Numbers",
          "Exercise: Table of Numbers",
          "Lab: Web App \"Fruits Game\"",
          "Advanced Loops – Summary"
        ],
        "Practical Exam Preparation": [
          "Exam Preparation – Overview",
          "The Practical \"Programming Basics\" Exam",
          "Exercise: Triangle Area",
          "Exercise: Moving Bricks",
          "Exercise: Point on a Line",
          "Exercise: Point in a Figure",
          "Exercise: Date after 5 Days",
          "Exercise: Sum of 3 Numbers",
          "Exercise: Sum of Third Numbers",
          "Exercise: Increasing Elements",
          "Exercise: Perfect Diamond",
          "Exercise: Rectangle with Stars in the Center",
          "Exercise: Increasing 4 Numbers",
          "Exercises: Generating Rectangles",
          "Exam Preparation – Summary"
        ]
      },
      "requirements": [
        "This training is for absolute beginners",
        "English language and computer literacy are highly recommended"
      ],
      "description": "The \"Comprehensive Introduction to Programming with C#\" free training course teaches basic coding skills for absolute beginners in a problem-solving approach, with a lot of practice. The training consists of free video lessons, free e-book and free online judge system, which guide the attendees from zero to basic coding skills with a lot of practical exercises. The training covers:\nUnderstanding the basics concept of programming\nWorking with the Visual Studio IDE\nUsing the C# language to write simple programs\nUsing variables, data and calculations\nReading and writing data to the console\nUsing conditional statements (if-else and switch-case)\nUsing loops to repeat code logic (for loop, while loop, do-while loop)\nPractical problem solving with automated online judge system\nDesigning simple algorithms (during the problem solving)\nThis practical free programming basics training is attended already by 80,000+ students at the Software University (SoftUni), online and onsite in 30+ locations. Thousands of graduates already work as software engineers in the industry.\nThis training is the first important step in learning computer programming and software development. The training develops solid practical problem solving skills that are truly valuable for any software engineer.",
      "target_audience": [
        "beginners in programming",
        "absolute beginners who want to learn coding",
        "anyone interested in computer programming",
        "future software engineers"
      ]
    },
    {
      "title": "Excel To EXE, Make Secure Windows Applications From Excel",
      "url": "https://www.udemy.com/course/excel-to-exe-make-secure-windows-applications-from-excel/",
      "bio": "Go Beyond Excel's Built-In Security Tools, Boost Features, Lock Down & Create Windows Applications (EXE) with XLSPadlock",
      "objectives": [
        "Create Secure Windows Application (EXE files) Directly From Your Excel Workbooks!",
        "Super Protect Your Excel Formulas Beyond Excel Native Functionality",
        "Convert VBA To Binary Code, Hidden within the EXE",
        "Create Activation Keys For You App So You Control Who Can Use It (and How Long)",
        "Master Advanced Licensing Features",
        "Hardware Lock Your Application To a Particular PC",
        "Enable Dongle/USB Protection",
        "Set Up a 'Nag Screen' and Demo/Trial Modes with Expiration Date, Number of Uses or Days!",
        "Optionally Allow Users To Save Secure Encrypted Files, Only Usable with Licensed EXE",
        "Control Excel Versions Your App Will Open With (Office 2000 and up!)",
        "Build EXE for 32-bit, 64-bit or Universal EXE That Works With Any Excel Bitness!",
        "Access External Files Using Special Codes or Simple Hyperlinks",
        "Utilize Hidden Companion Files, Buried Deep In Your EXE",
        "Disable Visual Basic Editor or Locl the Project BEYOND Excel Native Capabilities",
        "Remove Worksheet Tabs, Rendering them Completely Invisible",
        "Disable Loading/Saving Other Workbooks BEFORE or AFTER App Is Loaded...",
        "Deactivate Print Operations, PDF and XPS Operations",
        "Completely Hide and Disable All Ribbons & Toolbars",
        "Remove Right-Click (context menu) and Double Click Options",
        "Disable 'Cell Copy and Cust To Clipboard\" Commands",
        "Shut Off and Hide The Excel Formula Bar",
        "Only Allow Whichever Add-ins You Specify (Or None At All!)",
        "Load Customized Ribbon and Quick Access Toolbar Files To Your App Experience",
        "Design Custom Splash Screen or Logo At Startup for NNN Seconds (Free Design Resources too!)",
        "Hide Default 'Loading Workbook' Dialog Box in Excel",
        "Replace Excel Icon With Your Own Icon (Within Application AND In Windows Explorer)",
        "Set EXE Version Info and File Properties, such as FileVersion, LegalCopyright, Trademarks, ProductName, ProductVersion",
        "Expand To Other Languages With Editable Translation Files",
        "Create an End User License Agreement (EULA) that Must Be Accepted Prior To Use! (Samples Provided)",
        "Digitally Sign Your Application using Microsoft Authenticode Code Signing Certificate",
        "Free Online Resources and Training for Stock Images, Design Tools, Icons and More...",
        "Special Tips, Tricks and BONUS Macros To Interact With EXE and Windows Environment!"
      ],
      "course_content": {},
      "requirements": [
        "You should already have Microsoft Excel (preferably version 2007 and up).",
        "You'll need a tool called XLSPadlock to unlock much of the Security potential and cool tricks, but we will cover this in lecture 3.",
        "If you want to use the Installation Maker program, you'll need to get that but we cover this in detail in section 8.",
        "XLSPadlock is a Windows Application and the course is regarding making Windows Executables (EXE), so one would have to use Bootstrap, Parallels or some virtualization of Windows if using a Mac..."
      ],
      "description": "Microsoft Excel is the most widely used software for business and personal projects, ranging from simple calculators and models to advanced dashboards and even enterprise level applications with advanced forms and procedures! But while Excel is rich in features and Easy to use, it lacks one major component. SECURITY.\nExcel passwords were designed to prevent accidents & user-error, but can easily be retrieved with cheap password cracking software.\nIn my course, I show you how to turn your Excel workbooks into actual Windows Executable programs (EXE FILES) using my secret Excel weapon – XLSPadlock! This course includes a complete walkthrough of XLSPadlock along with little known Excel security techniques.\nAt the basic level, we’ll protect your Content from theft with unique formula protection techniques and then learn to convert your confidential VBA code into binary and store it in the executable, making it impossible to discover!\nThen, we’ll learn about Licensing and Locking your Secure Application with:\nActivation keys\nUSB/dongle protection\nHardware locking (to a particular PC)\nUsing a key generator to create trial versions of your software that expire after a number of\nuses\ndays or\nspecific expiration date\nand even create a nag screen each time the trial version opens!\nYou’ll learn Advanced Save Options (such as) whether users can use secure save files (that only work with a licensed copy of your EXE) OR to disable saving entirely!\nYou can control which Excel versions are allowed, and can build 32-bit, 64-bit or BOTH binary types into a single EXE!\nI’ll teach you how to restrict native Excel features, like right-click options, copy/paste, removing excel ribbons, controlling add-ins allowed, disable Visual basic access a number of ways.\nI'll demonstrate all the EXE Customizations, including making a professional splash screen that pops INSTEAD of the 'Excel loading' dialogue, creating and implementing custom icons, and customizing EXE version, title, authorship and copyright info.\nWe’ll demo how to make a simple End User License Agreement that MUST be accepted before someone can use your app! Lastly, we'll take you through adding a Code-Signing Certificate to show end-users your software is from a Trusted Verified Publisher.\nI'm also including special code samples you can use to interact with the EXE to access hidden companion files, read version info or even interact with other Windows files or workbooks in a secure way.\nYou’ve got to protect your proprietary content!\nDon't distribute another Excel file without maintaining absolute control of who’s using it and how - Grab my course on Building Secure Excel Apps today!",
      "target_audience": [
        "This Excel course is for anyone who wants to learn Excel security secrets and create real Windows Applications (EXEs) directly from Excel files. No prior programming knowledge is needed.",
        "This course is probably not for you if you’re looking to learn unrelated Excel VBA code as that is covered in other courses, specifically on the topic of programming. We will, however, make sure you know how to use any code we provide inside and out and many tricks to make your Excel projects into professional, polished and secured Apps.",
        "If you're using Excel for Mac, you will have to virtualize Windows within Mac using programs like Parallels or Bootcamp, as XLSPadlock doesn't have a Mac version."
      ]
    },
    {
      "title": "C, C++, Java; A Programming MegaPrimer for Beginners",
      "url": "https://www.udemy.com/course/c-cplus-plus-java-programming-megaprimer-for-beginners/",
      "bio": "A perfect course for beginners to learn C, C++ and Java in Mobile optimized course",
      "objectives": [
        "Learn C programming in depth",
        "Learn C++ programming in depth",
        "Learn c++ 11 in depth",
        "Learn java in depth",
        "mastering Eclipse IDE",
        "Taking over the OOP concepts"
      ],
      "course_content": {
        "Installing Environment for C coding": [
          "Installation of C compilers",
          "MAC: Installation of Environment",
          "Hello world in detail",
          "Things to take care in C"
        ],
        "Integer Variable and constants in C programming": [
          "C Coding Files",
          "Integer Datatypes in C coding",
          "Float datatypes in C coding",
          "Void and derived datatypes in C coding",
          "Variable declaration and initialization in C coding",
          "Integer and floating constants in C coding",
          "Creating a constants using keywords in C coding",
          "Escape sequence Codes",
          "Taking input from users in C coding"
        ],
        "Operation and Conditionals in C programming": [
          "Arithmetic operations in C Coding",
          "Relational operations in C Coding",
          "Logical operations in C Coding",
          "Bitwise operations in C Coding",
          "IF and ELSE IF Conditions in C coding",
          "Switch case in C coding"
        ],
        "Loops and Functions in C programming": [
          "What are loops and while loops",
          "Do while loops in C coding",
          "For loop in C coding",
          "Break and continue statements in C coding",
          "Functions in C Coding",
          "Function calls in c Coding"
        ],
        "Array, pointer, structure and memory in C programming": [
          "Array in C coding",
          "Multi dimensional arrays in C coding",
          "Pointers in C Coding",
          "double Pointers in C coding",
          "Strings in C Coding",
          "Structures in C Coding",
          "file handling in C coding",
          "File not found error",
          "Memory management in C Coding",
          "Command line argument in C coding"
        ],
        "Conclusion for c programming": [
          "Conclusion for C programming"
        ],
        "Installing environment for C plus plus": [
          "Installing GCC for c plus plus",
          "Configuring Eclipse for Hello World in C plus plus",
          "Quick tips for new eclipse users for c plu plus",
          "Hello World structure in detail",
          "Identifiers and keywords in C plus plus"
        ],
        "Datatypes, variable and constants in c plus plus": [
          "C++ exercise files",
          "Datatypes with example code in c plus plus",
          "Variables with example in c plus plus",
          "Local and global scope with example in c plus plus",
          "Constant declaration with const and preprocessor",
          "Integer, float and Character Constants in C plus plus",
          "Signed and unsigned difference in c plus plus"
        ],
        "Operations and conditionals in C plus plus": [
          "Arithmetic operations with example in c plus plus",
          "Relational operations in c plus plus",
          "Logical operations in c plus plus",
          "Assignment operations in C plus plus",
          "If Else statement with example in c plus plus",
          "Switch case with example in c plus plus",
          "Shorthand of ifElse with example in C plus plus"
        ],
        "Loops and loop control keywords in C plus plus": [
          "While loop with example in c plus plus",
          "Do while loop with example in c plus plus",
          "for loop with example in c plus plus",
          "Break with example in c plus plus",
          "continue with example in c plus plus",
          "goto with example in c plus plus"
        ]
      },
      "requirements": [
        "Eclipse (available for free)",
        "PC or MAC",
        "Practice is mandatory"
      ],
      "description": "What is this MegaPrimer?\nWe wanted to introduce a package of series that can give a great start to beginner in programming, so we decided to combine the most powerful, popular and mandatory topics of coding. When anyone start a journey to programming life; C, C++ and java are must to learn languages. We have named this beginners programming bundle as MegaPrimer.\nWhat am I going to get from this MegaPrimer?\nComplete C programming Course:\nC programming is the root or foundation for any person who wants to master computer programming. Learning C in a comprehensive manner is very essential for every software interested soul but things can only be interesting when words are not jargon and every piece of code is explained in detailed manner and that’s what this course is all about.\nComplete C++ programming Course:\nC++ is an Object oriented programming language that can be used to create modern desktop software, game development or even critical system drivers too. You will find out that most trading applications are designed in C++ because in trading speed is money. When we get into the game development, c++ programming is hard to avoid if you want to create a fantastic and popular game.\nIn this entire c++ video series, we start from installing gcc on our system. After gcc, we will install Eclipse which is a cross platform IDE because most efficient programmers don’t develop things on notepad. And yes, we don’t like to talk about here and there so expect pure c++ programming guide with everything explained code by code and that too practically.\nComplete Java programming Course:\nJava is the most popular, powerful and highest job oriented programming language so far. Consulting, not just one or two, in fact any top survey for “Job oriented market for programmers”, you will find that java is always there in top 3 position. After the implementation of java in android projects, a new job market got opened up. Java is diverse enough to build Mobile applications, android application, Desktop application or even Web application.",
      "target_audience": [
        "Students",
        "Beginners in programming",
        "Software developer",
        "Anyone, who is interested to start coding"
      ]
    },
    {
      "title": "Learn Complete CNC Programming in English",
      "url": "https://www.udemy.com/course/learn-cnc-programming-in-english/",
      "bio": "CNC Programming (G codes + M codes + NR Compensation+ examples on every operation + canned cycles) with 2 control panels",
      "objectives": [
        "Students will learn CNC Programming",
        "You will learn Theoretically as well as practically with the help of CNC Simulator.",
        "You will learn programming with two control panels ( Fanuc + Siemens )",
        "Students will get 1 career guidance video that will help them to move ahead in their career fastly"
      ],
      "course_content": {},
      "requirements": [
        "No requirements needed."
      ],
      "description": "Best Online CNC Course\nWe offer online cnc (turning) course in which We have covered cnc Programming in detail and you are going to learn all these in two control panels which are Fanuc and Siemens. We also have given practical knowledge with the help of cnc simulators so that you can understand all the concepts very clearly. And also we will guide you with the help of career guidance video so that you can achieve your career goals easily with less time. Our team is available for 24/7 to help\nWhy we are?\nTeaching Process has stayed same for decades. The offline teaching are plagued with multiple inefficiencies. Our vision is to reimagine and evolve the way of teaching. By combining teaching with technology and superior content for better learning experience. We developed this course for our needy students so that they can get exact knowledge required in this field. As many offline courses charges much high amount of fees which is not possible to pay for everyone. So we have created this course and tried to charge as less as we can so that anyone can buy this course and they can move ahead in their career very fast.\nWho we are?\nWe the team of 11 members who developed this course and in that 11 members 8 are Mechanical Engineers. And we are the Engineers with 8-10 years of experience in this field. So its clear that you will get exact knowledge which is required in this field.\nThis course includes:-\nComplete knowledge of CNC (CNC Programming )\n11 Programming videos + 1 Career Guidance videos\n2 Control panels ( Fanuc and Siemens )\n300 min+ course duration\n1 Career Guidance videos\nFull lifetime access\nAccess on Mobile and Laptop\nCertification on Completion",
      "target_audience": [
        "10th pass outs, 12th pass outs, ITI students, Diploma, Degree students"
      ]
    },
    {
      "title": "Flutter Masterclass - Your Complete Guide to App Development",
      "url": "https://www.udemy.com/course/flutter-masterclass-your-complete-guide-to-app-development/",
      "bio": "Create Stunning iOS and Android Apps with Flutter – No Coding Experience Needed",
      "objectives": [
        "Dart Programming Fundamentals: Master the core concepts of Dart, the language that powers Flutter.",
        "Flutter UI and Layout: Build beautiful and responsive user interfaces using Flutter's powerful widget system.",
        "Advanced UI and Animations: Create stunning animations and custom widgets to elevate your app's design.",
        "Testing and Debugging: Write high-quality code and catch bugs early with Flutter's testing framework."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Flutter",
          "Installing and Setting up Flutter and Android Studio",
          "Creating a New Project and Running IT",
          "Basic Understanding about the Folder Structure",
          "Understanding about Activity and Widget",
          "Understanding the Main Source Code Flow",
          "Creating a Main Source Code",
          "About the Material App Class",
          "About the Scaffold Class",
          "Learning about the Appbar",
          "Creating a Floating Action Button in Flutter",
          "The Bottom Tab Navigation",
          "Learning about the Navigation Drawer",
          "Working with the Drawer Header",
          "Difference Between Drawer and endDrawer",
          "Working with the Body in Flutter",
          "The Body Container",
          "Learning about how Row Works in Flutter",
          "Making Button in Flutter"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Are you ready to dive into the world of Flutter and build stunning mobile, web, and desktop applications?\nThis comprehensive course is your ultimate guide to mastering Flutter, Google's powerful UI toolkit. Whether you're a beginner or an experienced developer, you'll learn everything you need to know to create beautiful, high-performance apps.\nWhat You’ll Learn:\nThe fundamentals of Flutter and how it simplifies cross-platform app development.\nDart programming language, from the basics to advanced features.\nHow to build beautiful user interfaces (UIs) using Flutter’s rich widget library.\nMastering state management techniques like Provider and Riverpod.\nIntegrating APIs and working with real-time databases like Firebase.\nOptimizing app performance and ensuring responsiveness.\nFlutter UI and Layout - Build beautiful and responsive user interfaces using Flutter's powerful widget system.\nWhy Choose This Course?\nComprehensive content, suitable for beginners and experienced developers alike.\nHands-on projects that help you build real-world apps.\nPractical tips and industry best practices from seasoned developers.\nClear and Concise Explanations - Easy-to-follow lessons and code examples.\nBy the end of this masterclass, you’ll have the skills and confidence to create professional-grade apps that wow users and open new doors for your career. Enroll now and start your journey to becoming a Flutter expert!",
      "target_audience": [
        "If you're passionate about app development"
      ]
    },
    {
      "title": "Data Stream Development via Spark, Kafka and Spring Boot",
      "url": "https://www.udemy.com/course/data-stream-development-via-spark-kafka-and-spring-boot/",
      "bio": "Handle high volumes of data at high speed. Architect and implement an end-to-end data streaming pipeline",
      "objectives": [
        "Attain a solid foundation in the most powerful and versatile technologies involved in data streaming: Apache Spark and Apache Kafka",
        "Form a robust and clean architecture for a data streaming pipeline",
        "Implement the correct tools to bring your data streaming architecture to life",
        "Isolate the most problematic tradeoff for each tier involved in a data streaming pipeline",
        "Query, analyze, and apply machine learning algorithms to collected data",
        "Display analyzed pipeline data via Google Maps on your web browser",
        "Discover and resolve difficulties in scaling and securing data streaming applications"
      ],
      "course_content": {
        "Introducing Data Streaming Architecture": [
          "The Course Overview",
          "Discovering the Data Streaming Pipeline Blueprint Architecture",
          "Analyzing Meetup RSVPs in Real-Time"
        ],
        "Deployment of Collection and Message Queuing Tiers": [
          "Running the Collection Tier (Part I – Collecting Data)",
          "Collecting Data Via the Stream Pattern and Spring WebSocketClient API",
          "Explaining the Message Queuing Tier Role",
          "Introducing Our Message Queuing Tier –Apache Kafka",
          "Running The Collection Tier (Part II – Sending Data)"
        ],
        "Proceeding to the Data Access Tier": [
          "Dissecting the Data Access Tier",
          "Introducing Our Data Access Tier – MongoDB",
          "Exploring Spring Reactive",
          "Exposing the Data Access Tier in Browser"
        ],
        "Implementing the Analysis Tier": [
          "Diving into the Analysis Tier",
          "Streaming Algorithms For Data Analysis",
          "Introducing Our Analysis Tier – Apache Spark",
          "Plug-in Spark Analysis Tier to Our Pipeline",
          "Brief Overview of Spark RDDs",
          "Spark Streaming",
          "DataFrames, Datasets and Spark SQL",
          "Spark Structured Streaming",
          "Machine Learning in 7 Steps",
          "MLlib (Spark ML)",
          "Spark ML and Structured Streaming",
          "Spark GraphX"
        ],
        "Mitigate Data Loss between Collection, Analysis and Message Queuing Tiers": [
          "Fault Tolerance (HML)",
          "Kafka Connect",
          "Securing Communication between Tiers"
        ]
      },
      "requirements": [
        "Having knowledge of the Spring framework will be an added benefit."
      ],
      "description": "Today, organizations have a difficult time working with huge numbers of datasets. In addition, data processing and analyzing need to be done in real time to gain insights. This is where data streaming comes in. As big data is no longer a niche topic, having the skillset to architect and develop robust data streaming pipelines is a must for all developers. In addition, they also need to think of the entire pipeline, including the trade-offs for every tier.\nThis course starts by explaining the blueprint architecture for developing a completely functional data streaming pipeline and installing the technologies used. With the help of live coding sessions, you will get hands-on with architecting every tier of the pipeline. You will also handle specific issues encountered working with streaming data. You will input a live data stream of Meetup RSVPs that will be analyzed and displayed via Google Maps.\nBy the end of the course, you will have built an efficient data streaming pipeline and will be able to analyze its various tiers, ensuring a continuous flow of data.\nAbout the Author\nAnghel Leonard is currently a Java chief architect. He is a member of the Java EE Guardians with 20+ years’ experience. He has spent most of his career architecting distributed systems. He is also the author of several books, a speaker, and a big fan of working with data.",
      "target_audience": [
        "This course is perfect for Java developers and architects who want to design and write data streaming pipelines."
      ]
    },
    {
      "title": "Complete DEVOPS Pipeline with Python Web App AWS Devops CICD",
      "url": "https://www.udemy.com/course/learn-complete-devops-with-python-docker-kubernetes-git/",
      "bio": "Learn CI CD & Devops skill. Build Devops pipeline using Docker, Kubernetes, Git, Github, Flask SQLAlchemy, Pytest, AWS",
      "objectives": [
        "Learn to build Continuous Integration Continuous Deployment pipeline",
        "Build CI CD tool to update docker image after any update",
        "Learn to create dockerfile",
        "Learn the fundamental concepts of Docker",
        "Learn the fundamental concepts of Kubernetes",
        "Learn to create Kubernetes YAML files",
        "Learn to deploy high availability, fault tolerance, scalable application",
        "Learn all the basic and advanced git commands",
        "Learn different types of branches like master, developer, feature, release and hotfix branch",
        "Learn fundamental concepts of Version Control System",
        "Learn to use Github actions for CI CD pipeline",
        "Learn to build python flask web application",
        "Learn to use SQL Alchemy",
        "Lean to create HTML pages using HTML, CSS and bootstrap"
      ],
      "course_content": {
        "Overview of Project": [
          "What is Devops pipeline?"
        ],
        "Python Web Application ( PLAN, CODE, BUILD)": [
          "Setting up the virtual environment",
          "What is Python flask and how to use flask to create web application",
          "Project Part 1",
          "Project Part 2",
          "Project Part 3",
          "Project Part 4",
          "Build Flask application"
        ],
        "Local host to internet (External world) using ngrok": [
          "Using Ngrok for secure introspectable tunnels to localhost"
        ],
        "Creating Test cases for web application (TEST)": [
          "Unit Testing and Functional Testing using Pytest"
        ],
        "Pushing project into Github (BUILD)": [
          "Git Basics: Git Workflow",
          "Git Basics: Git Components",
          "Git Basics: Different types of Branches",
          "Git COMMANDS which everyone should know"
        ],
        "Continuous Integration and Continuous Delivery using Github Actions (RELEASE)": [
          "Setting up CI CD server using Github Actions",
          "Adding some more features into Github action workflow file"
        ],
        "Deploying web application using Heroku": [
          "Deploying web application using Heroku"
        ],
        "Dockerize application using Docker and Github Action (DEPLOY)": [
          "What is Docker? How it works?",
          "Why Docker?",
          "What is container and docker image?",
          "Creating new docker image with every new changes/updates using Github Action"
        ],
        "Managing docker containers using Kubernetes (OPERATE)": [
          "Difference between Docker and Kubernetes",
          "Setting Up Minikube for single node kubernetes cluster",
          "What are Pods and Services?",
          "Architecture of Kubernetes",
          "Deploying first Pod and understanding Kubernetes YAML files",
          "Replicas for High Availability, Load Balancing and self healing applications",
          "Deployment for quick updates & easy rollbacks"
        ],
        "Automatic Testing using Selenium (TEST)": [
          "Web testing using Selenium with chromedriver"
        ]
      },
      "requirements": [
        "Git installed",
        "Docker installed",
        "Kubernetes installed",
        "Any IDE",
        "Github account",
        "Docker hub account"
      ],
      "description": "What is Devops Pipeline?\nA Devops pipeline is set of automated processes and tools that the development (Dev) and operations (Ops) teams implement to build, test, and deploy software faster and easier.\nHow do you make a DevOps pipeline?\nPlan: It is the first and most important step in Devops Pipeline where  you have to decide your product's goals and determining the resources necessary to achieve those goals.\nCode: It comes after where you will do code development and code review of your product\nBuild: In this step you will build the source code into one desired format, compile, test and deploy in a particular place of the infrastructure.\nCI/CD: CI/CD stands for continuous integration (CI) and delivery (CD)  where it will check and verify the source code from Source Code Management and build it.\nTest: Automatic tests ensure that no bugs will be implemented in production.\nRelease: The application code has passed the testing phase and now it is ready to be deployed.\nDeploy: In this step, OPs team will deploy application from staging stage to production stage\nOperate and Monitor: Here OPs team will operate and monitor the application and take action in any kind of failure.\nWhat you will learn in this course?\nIn this course, you will learn about the tools which will complete the Devops pipeline and make robust application for you.\nGit:\n\n\nWhat is Git in Devops?\nGit is an open-source and distributed version control system that lets you manage and keep track of your source code history.\n\n\nGithub:\n\n\nWhat is Github in Devops?\nGithub is git repository hosting service used for code sharing, bug tracking, feature request and much more.\n\n\nWhat is difference between git and Github?\nGit is a version control system that lets you manage and keep track of your source code history. GitHub is a cloud-based hosting service that lets you manage Git repositories.\n\n\nWhat are Tools and Libraries used for creating application in this course?\n\n\nPyCharm is an integrated development environment (IDE) for python programing language.\nFlask is a python web framework.\nHTML is the standard markup language for Web pages.\nCSS is a style sheet language use to style a HTML document.\nSQLAlchemy is an open-source SQL toolkit and object-relational mapper which gives full power and flexibility of SQL.\nSelenium is used to automate web browser interaction.\nPytest is unit testing framework that allows users to write test codes.\nNgrok allows to expose a web server running on your local machine to the internet.\n\n\nGithub Actions:\n\n\nWhat is Github Action in Devops?\nGithub Action enables you to include Continues Integration (CI) and continuous deployment (CD) capabilities and many other features directly in your repository.\n\n\nDocker:\n\n\nWhat is Docker in Devops?\nDocker is an open source containerization platform enables developers to package applications into containers.\n\n\nWhy use Docker?\nDocker solved the 'it works on my machine' headache by making applications platform independent. With Docker you can simply build, ship and run your application\n\n\nDocker Hub:\n\n\nWhat is Docker Hub?\nDocker Hub is a cloud-based repository for finding and sharing container images with your team.\n\n\nWhat are alternatives of Docker Hub?\nAWS ECR, Azure Container Registry, Quay are the alternatives of Docker Hub.\n\n\nKubernetes:\n\n\nWhat is Kubernetes in Devops?\nKubernetes is an open-source container orchestration for automating deployment, scaling, and management of containerized applications.\nWhat is unique about this course?\nThis course is one stop shop where you will learn web development, continuous integration, continuous deployment, containerization, writing neat and quality code, devops concepts and much more with python programing language.\nThis course is fully based on pragmatic approach without any kind of bogus content. A short, precise and practical oriented course for IT pros just like you.",
      "target_audience": [
        "Anyone who wants to Enhance their skills in DevOps domain",
        "Developers and IT Pros"
      ]
    },
    {
      "title": "JavaScript Mastery Made Easy with ChatGPT for Beginners",
      "url": "https://www.udemy.com/course/chatgpt-for-javascript-mastery-the-secrets-of-ai-revealed/",
      "bio": "\"Unleashing the Power of ChatGPT: Mastering JavaScript and Unlocking the Secrets of AI\" : The Secrets Of AI Revealed",
      "objectives": [
        "Understand the foundations of artificial intelligence (AI): Learners will gain a solid understanding of the core concepts and principles behind AI, including ma",
        "Master JavaScript programming: Learners will become proficient in JavaScript programming language, gaining in-depth knowledge of its syntax, data structures, an",
        "Develop chatbot applications: Learners will be able to build chatbot applications using JavaScript and leverage the power of AI to create conversational interfa",
        "Integrate APIs and services: Learners will learn how to integrate external APIs and services into their JavaScript applications, enabling their chatbots to acce",
        "Implement natural language processing (NLP): Learners will explore the principles and techniques of NLP and learn how to apply them using JavaScript libraries a",
        "Enhance conversational user experiences: Learners will discover methods to enhance conversational user experiences by incorporating AI techniques such as sentim",
        "Handle complex dialogues and user interactions: Learners will gain the skills to handle complex dialogues and user interactions within chatbot applications, ena",
        "Deploy and scale chatbot applications: Learners will understand the deployment and scaling strategies for chatbot applications, exploring options such as server"
      ],
      "course_content": {},
      "requirements": [
        "Need a computer to be able to access Javascript & Chatgpt"
      ],
      "description": "Unlock the power of artificial intelligence (AI) and take your JavaScript programming skills to the next level with our comprehensive course, \"ChatGPT for JavaScript Mastery | The Secrets of AI Revealed.\" In this dynamic and hands-on learning experience, you will dive into the fascinating world of AI and discover the secrets behind building intelligent chatbot applications using JavaScript and the groundbreaking ChatGPT technology.\nThroughout this course, you will gain a solid foundation in AI principles and machine learning concepts while mastering the intricacies of JavaScript programming. Starting from the basics, you will learn JavaScript syntax, data structures, and functions, empowering you to implement advanced AI solutions seamlessly.\nWith our expert-led instruction, you will explore the inner workings of ChatGPT, an AI model developed by OpenAI, and learn how to harness its capabilities to build robust and interactive chatbot applications. From handling user inputs and generating dynamic responses to integrating external APIs and services, you will acquire the skills to create chatbots that can understand, communicate, and adapt to human interactions effectively.\nFurthermore, this course will delve into natural language processing (NLP) techniques and guide you in leveraging JavaScript libraries and frameworks to process and analyze human language, enabling your chatbots to provide personalized and context-aware responses.\nBy the end of this course, you will be equipped with the knowledge and expertise to build sophisticated chatbot applications, enhancing user experiences and bringing the secrets of AI to life. Join us on this exciting journey and unlock the true potential of AI with ChatGPT and JavaScript mastery!",
      "target_audience": [
        "This course is for Intermediate to Expert level."
      ]
    },
    {
      "title": "Learn C sharp in 1 hour",
      "url": "https://www.udemy.com/course/learn-c-sharp-in-1-hour/",
      "bio": "Learn how to program in C# in 1 hour! C# is used in a variety of places. Learn the secrets in this course!",
      "objectives": [
        "To learn C#",
        "Learn about good development techniques."
      ],
      "course_content": {},
      "requirements": [
        "An internet connection",
        "Google Chrome (Free Web Browser)"
      ],
      "description": "Have you ever wanted to learn to code but don't know where to start? Learning how to code can get you a better job and lead to a better future. This course starts you off with the basic coding language of C#. This is a very condensed 1 hour tutorial that will show you how to code in C#.",
      "target_audience": [
        "Complete beginners"
      ]
    },
    {
      "title": "Python 101: Python Programming & Python Functions (2025)",
      "url": "https://www.udemy.com/course/learn-python-step-by-step/",
      "bio": "Kickstart your coding journey in 2024! Learn Python from scratch and apply Python functions in real-world scenarios",
      "objectives": [
        "Master Python basics, syntax, and data types to confidently write Python code and solve problems",
        "Understand Python data structures, flow control, and functions for efficient data manipulation",
        "Gain proficiency in handling Python modules, libraries, and error debugging to build robust programs",
        "Get introduced to data analysis with Python, opening doors to data science and machine learning"
      ],
      "course_content": {},
      "requirements": [
        "Computer Literacy: Comfortable with basic computer operations and software usage.",
        "Text Editor: Knowing how to use a simple text editor to write and save text files. Many beginners start with integrated development environments (IDEs) like Thonny, PyCharm, or Jupyter Notebook.",
        "Basic Math: Understanding of basic mathematical operations and concepts.",
        "Logical Thinking: Familiar with simple logical concepts and basic problem-solving."
      ],
      "description": "Welcome to Python 101: Python Programming & Python Functions (2024), a comprehensive Udemy course specially designed for passionate learners eager to master Python programming. This course is led by Praveen Kodur, a certified Python Programming expert with over 20 years of professional experience.\nThe course is structured into nine detailed sections, each focusing on a vital aspect of Python programming. You will start with an introduction to Python, move onto Python syntax and basic data types, learn about Python data structures, understand flow control, master functions, handle Python modules and libraries, get introduced to error handling and debugging, and finally, dive into data analysis with Python.\nUpon completion, you will have acquired key skills such as Python coding, creating Python projects, understanding Python basics, and Python programming for beginners. You'll also gain an understanding of Python for data science, Python language course, introduction to Python programming, and Python language tutorial.\n\n\nThe course content includes:\nIntroduction to Python: Dive into the history of Python, its advantages, and applications. Learn how to set up the Python environment and run your first Python program.\nPython Syntax and Basic Data Types: Understand Python indentation, comments, variables, data types, strings, numbers, and Booleans.\nPython Data Structures: Get hands-on experience with lists, tuples, sets, and dictionaries.\nFlow Control: Master conditional statements and loops, along with loop control statements.\nFunctions: Learn about defining and calling functions, return values and scope, function arguments, and lambda functions.\nModules and Libraries: Explore importing modules, the standard library, and creating your own modules.\nError Handling and Debugging: Understand common Python errors and exceptions, and how to handle them.\nIntroduction to Data Analysis with Python: Get introduced to data analysis and its importance, the Python ecosystem for data analysis, working with NumPy arrays, introduction to pandas, and data visualization with matplotlib.\nWrap-up and Next Steps: Recap of Python basics and next steps to further your Python journey.\nTo ensure that you can fully participate in this course, you will need access to a mobile device or a desktop/laptop with an active internet connection. This setup allows you to learn at your own pace, from the comfort of your home or office.\nOne of the key highlights of this course is that upon completion, you will gain a wealth of knowledge and practical skills. In addition, you will gain access to a library of downloadable resources. These resources are tailored to the topics studied in the course, serving as a valuable reference for future use.\nJoin us on this journey and start your adventure in Python programming today! Master coding for beginners, learn to code with Python, and embark on Python projects for beginners. This course is your gateway to becoming a proficient Python developer, mastering the Python programming language, and exploring Python for data science. Enroll today and take the first step towards your coding career!",
      "target_audience": [
        "Anyone looking for \"Best Python Course for Beginners\"",
        "Self-learners interested in coding, seeking a structured and comprehensive Python course",
        "Career Switchers: Suitable for individuals transitioning to software development or data analysis fields.",
        "Data Enthusiasts: Perfect for those interested in data science and analysis."
      ]
    },
    {
      "title": "JavaScript for Beginners - The Complete Intro Course [2022]",
      "url": "https://www.udemy.com/course/javascript-for-beginners-the-complete-intro-course-2022/",
      "bio": "Learn Core JavaScript Concepts (Execution Context, Memory, Call Stack, etc.) I Build Projects I No Experience Needed",
      "objectives": [
        "Get a mature understanding of what a programming language is",
        "What applications and programs are and how they are used",
        "Understand “under the hood” workings of how code actually runs on our computer",
        "Become an expert in JavaScript (execution context, memory, call stack, and thread of execution)",
        "Learn how to diagram and effectively technically communicate through your code",
        "Learn the foundational skills from first principles that will better set you up for success in the development world today"
      ],
      "course_content": {},
      "requirements": [
        "Any computer with Internet and Chrome or Firefox browsers.",
        "No prior programming experience is needed. A basic understanding of JavaScript is a plus, but not a must.",
        "No paid software is required."
      ],
      "description": "Welcome to the JavaScript for Beginners course - the most comprehensive beginner course on the most popular programming language used by Software Engineers today, Javascript.\nThis introductory JavaScript course will be very impactful for you especially if you are early on in your engineering journey.\nIn this course, you will follow along with other beginner developers as we lead them through the units and will learn a multitude of important concepts starting with what a programming language even is in the first place, and how the internet works giving you a full general picture of the industry to build our knowledge upon.\nThen we’re going to move into specific JavaScript concepts like: Variables and Control flow. We’ll learn how we create and store data in our applications and make those applications more dynamic.\nWe will end the course with Functional Programming and Native Methods, like the Array Push Method and the Object Keys Method which are important built-in features of the language that will be vital to your understanding of becoming an engineer.\nYou will get access to over 16 hours of instruction, coding challenges, pair programming, and diagramming JavaScript code under the hood. We will dig into truly understanding these concepts at a deep level so you can grasp not only how JavaScript works under the hood, but also allow you draw parallels to how other programming languages work and why, making you an even more versatile and adaptive Software Engineer.\nIn addition to this, you'll get the support you need from mentors and your peers in our CSX Slack community. A community of over 12,000 beginner and experienced engineers from all over the world who will challenge you and be there to help push you through the tough engineering blocks and help you to achieve your dream career in tech.\nBy the end of the course, you will have the knowledge that you need in order to accelerate your future in Software Engineering.",
      "target_audience": [
        "This course is for anyone who wants to learn about programming, regardless of previous experience. It's perfect for complete beginners with no JavaScript or coding experience as well as for anyone who does have some familiarity with JavaScript concepts."
      ]
    },
    {
      "title": "C# - Complete A to Z C# Masterclass™: Hints + Coding Tips",
      "url": "https://www.udemy.com/course/c-sharp-a-3-step-process-to-code-apps-with-an-a-to-z-complete-bootcamp/",
      "bio": "Learn C# like a Professional! Start from the basics and go all the way to creating your own applications and games!",
      "objectives": [
        "Learn to use C# professionally!",
        "Get an understanding of how to create GUIs in C#!",
        "Learn how to design windows forms, create buttons, dynamic texts, labels and many more components.",
        "Create games with C#, like a Math Quiz!",
        "Learn to develop functions and classes in C#.",
        "Build a complete understanding of C# from the ground up!",
        "Understand complex programming topics.",
        "Learn how to develop impressing windows application in a few minutes/ hours."
      ],
      "course_content": {},
      "requirements": [
        "You will not need any any prior knowledge - so get started now!",
        "You should be committed to run through the course and become knowledgeable about C#.",
        "Nothing else! It’s just you, your computer and your hunger to get started today!"
      ],
      "description": "**** This course will allow you to start a new project, follow along step-by-step examples, and then have a portfolio-ready project by the end of the course! ****\n\nThis is the most comprehensive, yet straight-forward, course for the C# programming language on Udemy! Whether you have never programmed before, already know basic syntax, or want to learn about the advanced features of C# , this course is for you! In this course I will teach you C# and I will walk together through projects step-by-step.\nWith over 5 hours of video this comprehensive course leaves no stone unturned!\n\n\n*** Become a C# Programmer and learn one of employer's most requested skills of 2022! ***\nThis course will teach you C# in a practical manner, with every lecture comes a full coding screencast! Learn in whatever manner is best for you!\nYou will get lifetime access to over 100 lectures plus corresponding Notebooks for the lectures!\n\nThis course comes with a 30 day money back guarantee! If you are not satisfied in any way, you'll get your money back. Plus you will keep access to the Notebooks as a thank you for trying out the course!\nSo what are you waiting for? Learn C# in a way that will advance your career and increase your knowledge, all in a fun and practical way!\n\n\n**** Let's start this journey together and you will have an instructor to guide you in all the phases of app development. ****\n\n\nRead what other students are saying about \"C# - Complete A to Z C# Masterclass™: Hints + Coding Tips\" course:\nThe experience of this course was really great, especially for people like who are keen on learning by doing or learning by examples. (Grungeris , 5 stars)\nComprehensive curriculum, in-depth explanations. The instructor was very engaging! Really good job. (Jankindon , 5 stars)\nThe instructor does a really good job explaining at a base level, to someone who has very little experience. Simply straight to the point with nice and easy examples.! (Yarkson , 5 stars)",
      "target_audience": [
        "Beginners who have never programmed before.",
        "Programmers switching languages to C#.",
        "Intermediate C# programmers who want to level up their skills!"
      ]
    },
    {
      "title": "The Road To Dynamic Programming: Java, JavaScript, & Python",
      "url": "https://www.udemy.com/course/the-road-to-dynamic-programming/",
      "bio": "Recursion, Memoization, and Tabulation in Dynamic Programming",
      "objectives": [
        "How to solve dynamic programming problems",
        "How to think in a programming way",
        "How to improve possible solution and enhance time and space complexity using Dynamic Programming",
        "How to Use an Example to come up with a Dynamic Programming Solution"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Welcome Video",
          "Requirements"
        ],
        "Basics Of Dynamic Programming": [
          "Fibonacci Sequence and Recursive Solution",
          "Memoization",
          "Tabulation"
        ],
        "Minimum Number Of Bills to Return an Amount": [
          "Explanation and Example walkthrough",
          "Pseudo-Code of the problem",
          "Java Implementation",
          "JavaScript Implementation",
          "Python Implementation",
          "Time and Space Complexity"
        ],
        "Number Of Ways to Return an Amount": [
          "Problem Explanation and Example Walkthrough",
          "Pseudo-Code of the problem",
          "Java Implementation",
          "JavaScript Implementation",
          "Python Implementation",
          "Time and Space Complexity"
        ],
        "Knapsack With Repetition": [
          "Introduction to The Knapsack Problem",
          "Problem Explanation and Example Walkthrough",
          "Pseudo-Code of the problem",
          "Java Implementation",
          "JavaScript Implementation",
          "Python Implementation",
          "Time and Space Complexit"
        ],
        "Knapsack Without Repetition": [
          "Problem Explanation and Example Walkthrough",
          "Pseudo-Code Of The Problem",
          "Java Implementation",
          "JavaScript Implementation",
          "Python Implementation",
          "Time and Space Complexity"
        ],
        "Number Of Subsets that Add Up to A Specific Number": [
          "Problem Explanation and First Solution",
          "Optimized Solution Using Dynamic Programming and Pseudo-Code",
          "Java Implementation",
          "JavaScript Implementation",
          "Python Implementation"
        ],
        "Longest Common Subsequence": [
          "Problem Explanation and Example Walkthrough",
          "Improved Solution Using Dynamic Programming and Pseudo-Code",
          "Java Implementation",
          "JavaScript Implementation",
          "Python Implementation"
        ],
        "Longest Increasing Subsequence": [
          "Problem Explanation and First Solution",
          "Improved Solution Using Dynamic Programming and Pseudo-Code",
          "Java Implementation",
          "JavaScript Implementation",
          "Python Implementation",
          "Better Solution of the Longest Increasing Subsequence using Java",
          "Better Solution of the Longest Increasing Subsequence Using Python"
        ],
        "Final Message": [
          "Thank You and Quick Tips"
        ]
      },
      "requirements": [
        "Basic Knowledge of at least one of the three programming languages: Java, Python, and JavaScript",
        "Basic knowledge about recursion"
      ],
      "description": "In this course, you are going to learn about one of the most popular programming topics, dynamic programming. This topic is known as one of the most difficult topics in the programming world. However, in this course, we are going to simplify it and deeply learn the basis on which it stands.\nWhat we are going to do is to start by introducing and defining dynamic programming, and present two popular techniques that are generally used which are memoization, and tabulation. We are going to learn about the differences between them, and when and where to use each one of them.\nThen, we are going to solve some of the most famous dynamic programming problems by a detailed explanation of the problem, followed by an example walkthrough. Then, we come up with a pseudo-code, and finally we implement our code using three languages, Java, JavaScript, and Python.\nThis course contains multiple quizzes and coding exercises that will help you deeply understand each of the topics presented.\nWith that being said, I hope you enjoy this course, and I would love to help you make your dynamic programming experience more fun, and enjoyable as much as possible!\nGood Luck and Enjoy!",
      "target_audience": [
        "Python, Java, or JavaScript programmers",
        "Software Developers",
        "Competitive programmers"
      ]
    },
    {
      "title": "Java Object-Oriented Programming : Build a Quiz Application",
      "url": "https://www.udemy.com/course/java-object-oriented-programming-build-a-quiz-application/",
      "bio": "Learn Java core object-oriented concepts and build a console-based quiz application.",
      "objectives": [
        "Understand all the core Object-Oriented concepts in Java",
        "Understand Object Life Cycle with Internal Memory Organization",
        "Think in an Object-Oriented manner while writing programs",
        "Confidently write Java Console Applications using Object-Oriented concepts"
      ],
      "course_content": {
        "Introduction to Object-Oriented Programming": [
          "Introduction and Course Overview",
          "Reference Types",
          "Classes and Objects",
          "Internal Memory Organization of Objects",
          "Variable Scopes",
          "\"this\" reference variable"
        ],
        "Constructors": [
          "Introduction to Constructors",
          "Overloaded Constructors",
          "this() Constructor Call"
        ],
        "Object-Oriented Fundamentals": [
          "Introduction to Inheritance",
          "Multilevel Inheritance",
          "super() Constructor Call",
          "Packages",
          "Access Modifiers",
          "Method Overloading",
          "Method Overriding",
          "Polymorphism",
          "Abstract Class",
          "Abstract Method",
          "Interface",
          "Alternative to multiple inheritance in Java",
          "'static' Members",
          "\"final\" Members",
          "Reference Casting",
          "Searching for an object in an object array",
          "Nested class"
        ],
        "Object Lifecycle": [
          "Garbage Collection",
          "Reachable and Unreachable Objects",
          "How to make an object unreachable?",
          "Object Finalization"
        ],
        "Project: Quiz Application": [
          "Quiz Application: Part 1",
          "Quiz Application: Part 2",
          "Quiz Application: Part 3",
          "Quiz Application: Part 4",
          "Quiz Application: Part 5",
          "Find the student with the highest quiz score",
          "Conclusion",
          "Bonus Lecture: Discount Coupons for my other Java courses"
        ]
      },
      "requirements": [
        "Some very basic knowledge of Java like variables, conditional statements, looping statements, arrays, methods is expected"
      ],
      "description": "Note:- Some lectures in this course are taken from my previous Java course i.e \"Java for Beginners in 2 hours: Build a Banking Application\" as those were the exact same concepts.\nThis course is a total hands-on programming course with no power-point presentations.This course is going to teach you all core Java object-oriented concepts in a short time.Object-oriented programming(OOP) paradigm is based on the concept of objects. So when we develop any application using object-oriented concepts we basically think only in terms of objects. Almost anything can be represented as an object in Java.\n\nThis course isgoing to teach you how to think in terms of objects while programming. It is also going to teach you what happens behind-the-scenes when we create an object, how objects are created and stored in memory, object lifecycle etc. Apart from this you are going to understand all other important object-oriented concepts like inheritance, polymorphism, interface, abstract class etc and also understand why they are used.\nEvery single concept is explained with the help of a program. This course is suitable for anyone who has some basic knowledge of Java like variables, datatypes, loops, if conditions, methods, arrays etc and who has not yet explored the object-oriented side of the Java programming language.\nThis course also has a mini project at the end which a console-base Quiz Application. This application is designed using object-oriented approach and will be a good revision of the entire course as a lot of concepts will be covered in it.\nAfter completing this course you will have a clear idea about object-oriented programming and  you can start writing Java console-based applications using OOP concepts. You may also be able to answer exam questions or interview questions based on object-oriented concepts. This course is short and sweet and requires only 2-3 hours of your time.\nSome of the key points regarding this course:\nTotal hands-on programming experience.\nAll core Java object-oriented concepts covered.\nEvery concept explained with the help of a program.\nMini-project at the end which covers a lot of object oriented concepts.\nRequires 2-3 hours of your time.\n\n\nI believe you will enjoy this course and make the most of it. Happy Coding :)",
      "target_audience": [
        "Students or programmers with some very basic knowledge of programming",
        "Suitable for anyone who has started with Java and wants to learn Object-Oriented programming in detail",
        "Not suitable for experienced or advanced Java programmers"
      ]
    },
    {
      "title": "Learn Python In A Day With 6 Projects",
      "url": "https://www.udemy.com/course/learn-python-in-a-day/",
      "bio": "For programming beginners to pick up the fundamentals of Python within a day! Learn through 6 examples applications.",
      "objectives": [
        "know basic programming concept and skill",
        "build 6 text-based application using python",
        "be able to learn other programming languages",
        "be able to build sophisticated system using python in the future"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience required",
        "You just need a standard PC or Mac",
        "You just need the passion to learn"
      ],
      "description": "Have you ever imagined yourself being able to \"communicate\" with your computer and build applications that can work in a way that you want? Have you ever imagined telling your friends that you know how to code?\nProgramming is one of the very important skills that people value a lot in this era. Not only it can help you get a well-paid software engineer job, but it can also train your brain to think in a logically manner. We are sure you agree with that but you are not sure where and how to start. You may be scared by the complicated programming concept, or you may be scared away by the unfriendly code. Don't worry, in this course, we will guide you how to create your first python application step by step.\nWhat is Python?\nPython is a simple, intuitive, yet powerful programming language. It is an high-level programming language invented back in 1991. It is a go-to language for beginners because it is so easy and expressive. You can often express concepts with very few lines of code. That's why we choose Python as the programming language for this course!\nHowever, don't have a misunderstanding that Python is only for beginner. It is used in many areas including data analysis, finance, scientific research, artificial intelligence etc. Python is a very powerful programming language and is well supported the community. There are lots of useful packages like Numpy, Scipy etc. It is a programming language that supports multiple programming paradigms like procedural, functional, object-oriented etc.\nIn a nutshell, if you can only learn one programming language, Python is your choice!\nWhat exactly will you learn?\nThis course has a goal, which is to teach you the basic programming skills that you need in one day!\nWe understand everyone is busy. We therefore specially design this course to be a quick crash course. And it is okay even if you don't have any programming experience. In this course, no experience is required!\nYou will learn all the important programming concept using Python as the programming language. We will teach you by using 6 different applications as an example.\n6 different applications you will write\nBMI Calculator\nLucky Color\nLottery\nVocabulary Builder\nHunter Game\nTo-do List\nApart from the above, there are simple programming assignments in the course as well. I hope with this little challenges, you can learn better. And if you come across any questions during the course, feel free to raise it. We are here to make sure you enjoy your learning process.\nWho are the instructors?\nWe are coming from a software engineering background. We have built sophisticated systems for investment banks. You can see our information in our Udemy profile.\nInstructors: Jack Chan, Henry Tang\nCourse Designer: Raymond Chung\n\nMoney back guaranteed!\nWe are so confident about our course. We are so sure that you will enjoy the course as well. Therefore we provide money back guaranteed. After you have enrolled the course and if you don't like it, you can have your money back! It is unconditional, Udemy backed, 30 days money-back guarantee so you can try this course risk free!\nSign up for our course today, and let us help you to start your programming journey!",
      "target_audience": [
        "Anyone who want to start coding",
        "Anyone who has interest to automate tedious work with script",
        "Anyone who want to start writing python"
      ]
    },
    {
      "title": "Introduction to Python: From N00B to N3RD",
      "url": "https://www.udemy.com/course/total-introduction-to-python/",
      "bio": "Beginner friendly Python programming learning. Discover the power of data analytics and use in real world problems.",
      "objectives": [
        "Learn how companies and organizations use Python to solve real-world problems and gain a competitive edge.",
        "Explore the exciting world of data analytics and see how Python is used to gain insights and make informed decisions.",
        "Write code for data analytics in a way that is readable, efficient, and can be understood even by your dog (or a friend’s dog)!",
        "Impress your friends (or maybe not) as you explain how to work with numeric, text, and Boolean data types in Python.",
        "Understand how virtual environments can save your bacon when you’re trying to troubleshoot or diffuse a problem with only seconds to spare!",
        "Expertly control the flow and decision-making of your code with if, elif, and else statements.",
        "Write your first program in Python!"
      ],
      "course_content": {
        "Chapter 1: Welcome to Python!": [
          "Introduction to Python and Programming",
          "Course Materials - Read Me First!",
          "Setting up Python",
          "Getting Started with Programming",
          "Conditional Logic in Python",
          "Chapter 1 Quiz"
        ],
        "Chapter 2: Introduction to Programming": [
          "Python Loops",
          "Introduction to Python Data Structures",
          "Python Dictionaries",
          "Advanced Concepts with Data Structures",
          "Chapter 2 Quiz"
        ],
        "Chapter 3: Data Processing with Python": [
          "Python Functions",
          "Introduction to Pandas",
          "Working with DataFrames",
          "Data Processing with Pandas"
        ]
      },
      "requirements": [
        "No knowledge is needed. You’ll need a computer connected to the Internet."
      ],
      "description": "Ready to jump into the world of Python? The Python coding language is a must-have skill for every would-be coder! Even if you don’t want to grow up to be a coder, you STILL will have fun by learning a new coding language with Dartanion Williams, your instructor. Dart brings wit and wisdom at the same time while giving you the reasons WHY you’re learning what you’re learning! With sample code you can follow along with and modify, you’ll be coding in no time! We’re tackling such topics like: What is Python? Why is Python? What can it do? Why is it useful to you? And can you learn it without knowing anything about it? (Hint: the answer is “yes”)\n\n\nLet me guess...you're trying to find a simple course on Python because you've seen the possibilities of this incredible thing called PROGRAMMING. But where should you start? How do you begin? Right here in this course, my friend. You're going to learn all the buzzwords in Python, how to bend data to your will, and how to use that data to do cool things.\n\n\nWHAT'S INCLUDED?\n7+ hours of video\nEnd-of-chapter quizzes to test your knowledge\nQ&A section where you have access to a team of teaching assistants to answer any questions you might have\n30-day money-back guarantee\nLifetime access\nCertificate of completion\n\n\nWHAT'S COVERED?\nOrganization and use of Python in real-world problems\nHow to write programs using Python\nPython lists and how to efficiently store and organize data\nBasics of Pandas, Series, and DataFrames\nHow to create, call, and pass arguments to functions (this is more fun than it sounds)\nHow to run Python projects from command prompts and integrated development environments\nMaking repetitive tasks easy using automation and loops\nHarness your new power to write code for an ATM machine\nAnd so much more\n\n\nJOB TITLES THAT REQUIRE THIS SKILL:\nSoftware Developer\nQuality Assurance Engineers\nJunior and Senior Python Developer\nPython Full Stack Developer\nGIS Analyst\nData Scientists\nMachine Learning Engineers\n\n\nAbout Dartanion:\nFor over 18 years, I have helped lead teams toward cohesion, high performance, and continuous improvement. I'm a data-driven, energetic change agent with strong technical skills complimented with a fine balance of curiosity, practicality, and creativity.\nAs an expert in public policy, data, and technology, I have played a key role in several large-scale projects, including Chicago’s successful implementation of web-based student information management, and the reform of Special Education Transportation and Emergency Medical Services (EMS) in Washington, D.C. I have also helped cities use data to improve services, including budget planning, 311 and customer service, snow preparation and plowing, trash pickup, transportation, and citywide performance management.\nTechnical specialties include SQL, ETL, JavaScript, Python, Tableau, Power BI, ArcGIS, Python, Salesforce, mobile application design, data engineering, and data science.\n\n\nI look forward to helping you go from N00B to N3RD!",
      "target_audience": [
        "Anyone with an interest in developing an in-demand skill that applies across many different coding languages."
      ]
    },
    {
      "title": "NodeJS & ExpressJS Masterclass: Beginner to Pro REST APIs",
      "url": "https://www.udemy.com/course/nodejs-beginner-to-pro-apis-for-food-delivery-ecommerce/",
      "bio": "Learn NodeJS, ExpressJS, MongoDB, Redis & Stripe building scalable APIs. Project-based from basics to advanced levels.",
      "objectives": [
        "Master Node.js and Express.js — two of the most sought-after backend web development technologies.",
        "Learn Node.js with TypeScript and MongoDB from basics to advanced, using well-structured and optimized coding practices.",
        "Build real-world, production-ready applications with Node.js, Express.js, MongoDB, Redis, and related tools.",
        "Develop simple to complex RESTful APIs for Food Delivery and E-commerce platforms.",
        "Create modern, fast, and scalable server-side applications using industry best practices.",
        "Implement secure user authentication with JWT and manage refresh token blacklisting using Redis.",
        "Send transactional emails through SendGrid and integrate Stripe payment gateway for seamless monetization.",
        "Employ Postman as a frontend tool to test and organize APIs effectively.",
        "Learn clean coding principles to write maintainable, professional backend code.",
        "Deploy your Node.js applications live on Heroku cloud platform.",
        "Export data to Excel sheets and manage cron jobs to automate backend operations.",
        "Boost Node.js application performance and scalability using Clusters.",
        "Explore MongoDB advanced schema types, virtual fields, indexing, and geospatial queries for optimized data management."
      ],
      "course_content": {
        "Introduction to Nodejs, expressjs & mongoDB": [
          "Module Introduction",
          "Join our Discord Community",
          "Learn more from my Youtube Channel",
          "What is Nodejs",
          "Nodejs Architecture",
          "How Node Works",
          "What is Expressjs",
          "What is MongoDB",
          "Install Nodejs & MongoDB",
          "Understanding different request types in a server"
        ],
        "Setup Nodejs project & deep dive into its basics": [
          "Module Introduction",
          "Install & Setup Visual Studio Code (Code Editor)",
          "Creating new Nodejs project & setting it up (for typescript)",
          "Use of Promise async wait try catch",
          "Use of Spread Operators",
          "Understanding Routing Basics",
          "Understanding Middleware Basics",
          "Connecting to MongoDB",
          "Handling Environment Variables",
          "Structuring Nodejs Project",
          "Error Handling",
          "Accessing Request Variables",
          "Basics of schema (models)",
          "Implementing request validation & overview of http error status code",
          "Attached Source Code"
        ],
        "User Authentication": [
          "Module Introduction",
          "Creating a User with POSTMAN",
          "Understanding CORS & implement in NodeJS App",
          "Refractor code",
          "Preparing for User Email Verification",
          "Send Verification Emails using SendGrid & Gmail and check for unique email",
          "Resend Verification Email",
          "Encrypting password using bcrypt",
          "What is JWT & how it works",
          "Implementing JWT for User Authentication",
          "Setup Auth Middleware for Backend APIs",
          "Understand Auth Workflow & Optimise OTP related issues",
          "Creating APIs for Reset Password functionality & Testing in POSTMAN",
          "Optimising Code",
          "Fetch & Update User Profile",
          "Fixing Minor Bugs",
          "Attached Source Code"
        ],
        "Getting Started with Food Delivery App": [
          "Module Introduction",
          "Understanding Food Delivery App Workflow & Create an Admin",
          "File Upload using Multer for Creating Banner Images",
          "Refractor code",
          "Insert Cities in Mongodb Database",
          "Fetch Cities, Insert Restaurant, Category documents in MongoDB",
          "Using Geospatial Queries to Fetch & Search Nearby Restaurants",
          "Add Restaurant Menu Items (also understanding mongodb populate() & query project",
          "Fetch Restaurant Menu Items",
          "Perform CRUD Operations for User Addresses",
          "Place order & fetch user orders",
          "Attached Source Code"
        ],
        "Implementing Dotenv file & a few Optimizations": [
          "Module Introduction",
          "Make Banner Clickable",
          "Implementing Dotenv file",
          "Attached Source Code"
        ],
        "Adding Pagination": [
          "Module Introduction",
          "Implementing Pagination in User Addresses",
          "Implementing Pagination in User Orders list",
          "Implementing Pagination in Restaurants list",
          "Attached Source Code"
        ],
        "Implementing Refresh Token for Strong JWT Authentication": [
          "Module Introduction",
          "Create Refresh Token & also learn to generate random secret keys",
          "Auto-generate new Access & Refresh Tokens when Access token expires",
          "Attached Source Code"
        ],
        "Blacklisting Refresh Tokens using Redis & applying few optimisations": [
          "Module Introduction",
          "Understanding why blacklist RefreshTokens needed & Setting up Redis in MacOS",
          "Setting up Redis in Windows",
          "Setup Redis with Nodejs & Connect it with Local Server in your System",
          "Connecting to Redis Enterprise (Server) for free with Nodejs",
          "Optimising UserController in Nodejs to send only required User",
          "Blacklisting RefreshToken using Redis",
          "Clear User Refresh Token from Redis database on Logout",
          "Brief on how to manage RefreshToken in Redis if same account in multiple device",
          "Attached Source Code"
        ],
        "Fixing Timezone & error messages for no records available in Nodejs": [
          "Module Introduction",
          "Fixing Current Date Timezone & Port Number issue in Nodejs",
          "Optimising Restaurant Controller for no records found",
          "Optimising OrderController for no records found",
          "Optimising AddressController for no records found",
          "Attached Source Code"
        ],
        "Indexing in MongoDB": [
          "Module Introduction",
          "What is MongoDB Indexing",
          "Understanding types of Indexing & a brief about various operators",
          "Using geoNear(for distance), nearSphere & geoWithin in Restaurant",
          "Attached Source Code"
        ]
      },
      "requirements": [
        "NO NodeJS knowledge is required!",
        "General knowledge of how the web works is recommended but not a must-have",
        "Basic understanding of JavaScript/Typescript is strongly recommended but could be picked up whilst going through the course"
      ],
      "description": "Your All-in-One Masterclass to Becoming a NodeJS & ExpressJS Expert\nTired of fragmented tutorials and incomplete lessons? This course is your definitive, step-by-step path to mastering Node.js and Express by building two production-ready backend applications—a scalable Food Delivery API and a robust E-commerce API.\nBy the end of this course, you won’t just write code—you’ll understand the why behind every solution, and you’ll have a portfolio featuring two impressive real-world projects that demonstrate your expertise to potential employers and clients.\nWhat You Will Master\nComprehensive A-to-Z Learning: Start from scratch and build complete, deployable backend APIs with Node.js, Express, and MongoDB.\nModern M.E.N. Stack: Become proficient with Node.js, Express, MongoDB, and Redis for advanced backend development.\nAdvanced Security: Implement cutting-edge JSON Web Token (JWT) authentication and secure token blacklisting with Redis—skills that are essential for professional backend developers.\nPayments & Monetization: Integrate Stripe for secure and seamless payment processing, perfect for e-commerce and delivery platforms.\nPerformance & Scalability: Optimize your applications with MongoDB indexing and Node.js clustering, boosting performance for large-scale use.\nProfessional Deployment: Learn how to deploy your applications from local development to live production on Heroku, covering the entire development lifecycle.\nBonus Features: Master Cron Jobs, regular expressions, geospatial queries, virtual fields, and more to build advanced and scalable applications.\nWhy Enroll?\nThe demand for expert Node.js developers is skyrocketing. This course is an investment in your future—it’s not just video tutorials, but a comprehensive journey to build a job-ready skillset and portfolio that sets you apart in the competitive market. Whether you want to accelerate your career, start freelancing, or build your own products, this masterclass provides everything you need.\nAbout the Instructor\nMy name is Nikhil Agarwal, a professional full-stack developer and the creator of multiple 5-star rated Udemy courses. I believe the best way to learn is by building real projects. As the author of the bestselling “Master Ionic 8+: Build Food Delivery App from Beginner to Advanced”, I bring years of industry experience to help you create market-ready applications that impress employers and clients alike.\nThis is your moment to transform your backend skills and career. Enroll now and start building powerful, scalable APIs today!",
      "target_audience": [
        "This course is for everyone (whether beginner or already a Developer) who wants to become an Advanced-level Backend (server-side) Developer with popular technologies like NodeJS with Typescript, ExpressJS",
        "Anyone with little knowledge of Typescript or Javascript can easily enrol in this course",
        "Everyone who's interested in building modern, scalable and high-performing web applications",
        "It is useful for all Web developers for learning Clean Coding Best Approaches"
      ]
    },
    {
      "title": "124 Java Programming Coding Practices for Absolute Beginners",
      "url": "https://www.udemy.com/course/practical-java-programming-practices-120-common-projects/",
      "bio": "Master Java faster and Improve your Java programming skill with 124 hands-on coding practices and real-world projects.",
      "objectives": [
        "Level up your Java programming skill with over 120 beginners best practices",
        "How to find even and odd number in python",
        "How to detect Positive and Negative Numbers",
        "How to check for Even and odd Numbers",
        "How to check for Greatest of 3 Numbers",
        "How to check for divisibility of a Number",
        "How to convert from Celsius to Fahrenheit",
        "How to check for Leap year",
        "How to check if a point belongs to Circle",
        "How to create quadratic Equation",
        "How to make guess of Random number",
        "How to create a Multiplication Table using while loop",
        "How to build a simple Calculator",
        "How to get Sum and Product of digits",
        "How to make a Binary search of number in an array",
        "And lots more..."
      ],
      "course_content": {
        "120+ Java programming BEST practices for absolute beginners": [
          "Practice 1. Hello World",
          "Practice 2. PrintWriter",
          "Practice 3. Basic Arithmetic Calculators",
          "Practice 4. User Input",
          "Practice 5. Date and Time",
          "Practice 6. Swapping two different values",
          "Practice 7. Method Overloading",
          "Practice 8. String Overloading",
          "Practice 9. Method Overriding",
          "Practice 10. Use of Final Keyword as a variable",
          "Practice 11. Use of final Keyword as a method",
          "Practice 12. Use of finalized keyword",
          "Practice 13. Static Variable",
          "Practice 14. Program for Interface",
          "Practice 15. Super class",
          "Practice 16. How to use This keyword",
          "Practice 17. Print numbers in Matrix Format",
          "Practice 18. Matrix Addition",
          "Practice 19. Matrix Subtraction",
          "Practice 20. Matrix Multiplication",
          "Practice 21. Triangular Pattern (1)",
          "Practice 22. Triangular Pattern (2)",
          "Practice 23. Triangular Pattern (3)",
          "Practice Triangular Pattern (4)",
          "Practice 25. Paschal Triangle",
          "Practice 26. Floyds Triangle",
          "Practice 27. Multiplication Table",
          "Practice 28. Area of a Triangle",
          "Practice 29. How to detect largest Number input from a user",
          "Practice 30. Use of maths operators for Calculator",
          "Practice 31. A program for calculating Factorial",
          "Practice 32. A program to determine Student's grade",
          "Practice 33. Detect Negative and Positive Numbers from a user",
          "Practice 34. Detect Even and Odd Numbers",
          "Practice 35. A program for Fibonacci Sequence",
          "Practice 36. A program to check palindrome number",
          "Practice 37. Program to check Vowels and Consonants",
          "Practice 38. Print out Arrays",
          "Practice 39. Print out Array from user",
          "Practice 40. Print out Arrays in ascending order",
          "Practice 41. Print out String Arrays",
          "Practice 42. Sorting an Array",
          "Practice 43. Program to search an element in an Array",
          "Practice 44. Insert Element in an Array",
          "Practice 45. Program to Reverse an Array",
          "Practice 46. Minimum and Maximum Element in Array",
          "Practice 47. A program to merge two Arrays",
          "Practice 48. A program to sort a Merged Array",
          "Practice 49. Abstract Class",
          "Practice 50. A program for Abstract class and Abstract Method",
          "Practice 51. Array to String",
          "Practice 52. A Program to calculate Array's average",
          "Practice 53. For Loop",
          "Practice 54. Infinite Loop",
          "Practice 55. Generate Random Numbers",
          "Practice 56. Reverse a Number",
          "Practice 57. Convert from Fahrenheit to Centigrade",
          "Practice 58. Convert Centigrade to Fahrenheit",
          "Practice 59. Reverse a Number using For loop",
          "Practice 60. Program to print out Prime Numbers",
          "Practice 61. A program to swap two different Numbers",
          "Practice 62. A program to swap two different numbers (2)",
          "Practice 63. Print out current Date and Time",
          "Practice 64. Program to detect a leap year",
          "Practice A program to detect Prime numbers only",
          "Practice 66. A program to check a perfect square",
          "Practice 67. Program to convert from Decimal to Binary",
          "Practice 68. Sum of Digits from User",
          "Practice 69. A program to find two top maximum numbers in an Array",
          "Practice 70. A program to convert from String to Character",
          "Practice 71. A program to convert from String to other Data Types",
          "Practice 72. A program to check Armstrong Numbers",
          "Practice 73. A program to calculate Arithmetic Mean",
          "Project 74. Program to calculate HCF and LCM",
          "Practice 75. Program to convert from Decimal to Octal",
          "Practice 76. A program to convert from Binary to Decimal",
          "Practice 77. Program to convert from Decimal to HexaDecimal",
          "Practice 78. Program to create current locale",
          "Practice 79. A program for Array List",
          "Practice 80. Iterate through HashMap",
          "Practice 81. A program to sort HashMap",
          "Practice 82. Sort HashMap by Values",
          "Practice 83. Program to find longest sub string",
          "Practice 84. A program to get Employee's data",
          "Practice 85. A program to sort Object using comparable interface",
          "Practice 86. A program to sort Object using Comparator Interface",
          "Practice 87. A program to detect first non-repeated character",
          "Practice 88. A program to generate permutation of a string",
          "Practice 89. A program to get the result of the longest Palindrome",
          "Practice 90. A program to sort Array in Descending order",
          "Practice 91. A program to remove duplicate element in a list",
          "Practice 92. A program to run a Thread",
          "Practice 93. A program to create a Thread using runnable interface",
          "Practice 94. A program to join two Threads",
          "Practice 95. Program to remove Multiple spaces in a String",
          "Practice 96. A program to find the union of two Arrays",
          "Practice 97. A program to find intersection of two Arrays",
          "Practice 98. A program to detect if a number is of power of 2",
          "Practice 99. A program for Exception Handling",
          "Practice 100. A program for Multiple catch Blocks in Exception Handling",
          "Practice 101. A program to implement Exception Handling using Finally Block",
          "Practice 102. A program to implement Try-Catch-Finally Blocks",
          "Practice 103. A program to implement Throw in java",
          "Practice 104. A program for User Define Exception",
          "Practice 105. A program for Constructor Inheritance",
          "Project 106. A program for super class in Inheritance",
          "Practice 107. A program to clone Objects",
          "Practice 108. A program to get sub-list from an Array with clone",
          "Practice 109. A program to sync Array list using Collections.synchochroniseList",
          "Practice 110. A program to get the last occurrence of an object in an Array list",
          "Practice 111. A program to demonstrate Single Inheritance",
          "Practice 112. A program to demonstrate Multilevel Inheritance",
          "Practice 113. A program to demonstrate Hierarchical Inheritance",
          "Practice 114. A project to print different String functions",
          "Practice 115. A program to count Number of words in a String variable",
          "Practice 116. A program to find Armstrong using Multithreading",
          "Practice 117. A program to find Prime Numbers using Multithreading",
          "Practice 119. A program to print out Alphabet using Alternate",
          "Project 120. A program to print out Numbers",
          "Practice 121. A program to check for Even Numbers",
          "Practice 122. A program to check for Odd Numbers",
          "Practice 123. A program to get square of Numbers with Multithreading",
          "Practice 124. A program to get Cube of numbers using Multithreading",
          "Congratulations! Keep Learning..."
        ]
      },
      "requirements": [
        "This courses requires basics of Java programming knowledge",
        "A computer (Windows/Mac/Linux)"
      ],
      "description": "Welcome to Practical Java programming practices (120+ common projects)! Learning Java programming language and understanding Java programming language are two different things. Almost every student enjoy learning Java programming language. But, only a few number of these students actually understand Java programming language afterwards. This is where the remaining students are left behind and kept wandering from one course to another over the internet to get the best knowledge on understanding Java programming language with cups of coffee on their table everyday.\nUnlock your potential in Java programming with this comprehensive course designed for beginners. Through 124 practical projects, you’ll gain the skills and confidence needed to tackle real-world coding challenges and advance your career in software development.\nWhat You’ll Learn:\nGetting Started with Java:\nWrite your first “Hello World” program.\nUtilize the PrintWriter for efficient output.\nPerform basic arithmetic calculations.\nUser Input and Data Handling:\nAccept and process user input.\nWork with date and time functionalities.\nSwap values between variables.\nAdvanced Method Techniques:\nImplement method overloading and overriding.\nUnderstand string overloading.\nExplore the use of final and static keywords.\nMatrix and Pattern Operations:\nPrint numbers in matrix format.\nPerform matrix addition, subtraction, and multiplication.\nCreate triangular patterns, Pascal’s Triangle, and Floyd’s Triangle.\nArithmetic and Logical Operations:\nDevelop a basic arithmetic calculator.\nDetect the largest number from user inputs.\nUse math operators for various calculations.\nCalculate factorials and Fibonacci sequences.\nString and Array Manipulations:\nReverse numbers and arrays.\nPrint, sort, and search arrays.\nConvert arrays to strings and vice versa.\nObject-Oriented Programming:\nUtilize abstract classes and methods.\nImplement interfaces and inheritance (single, multilevel, and hierarchical).\nWork with static variables, super classes, and the this keyword.\nException Handling and Multithreading:\nMaster exception handling with try-catch-finally blocks.\nHandle user-defined exceptions.\nExplore multithreading to perform concurrent programming tasks.\nData Conversion and Calculations:\nConvert between different data types (e.g., decimal to binary, string to character).\nCalculate HCF, LCM, arithmetic mean, and sum of digits.\nGenerate random numbers and perform various number conversions.\nWorking with Collections:\nIterate and sort hash maps.\nWork with array lists and synchronize them.\nFind the union and intersection of arrays.\nPractical Real-World Projects:\nCreate a basic arithmetic calculator.\nDevelop programs to check for prime numbers, Armstrong numbers, and perfect squares.\nImplement various sorting algorithms (bubble sort, selection sort).\nHandle date and time functionalities, including detecting leap years.\nBuild multithreading programs to perform tasks concurrently.\nAre you ready to master Java programming through practical, real-world projects? This comprehensive course is designed to help beginners build a solid foundation in Java by working through 124 diverse and engaging programming exercises.\nCourse Highlights:\nFundamental Concepts: Start with the basics like writing “Hello World” and using the printwriter to get comfortable with Java syntax.\nUser Input & Output: Learn how to accept user input and manipulate data with basic arithmetic calculators, date and time operations, and swapping values.\nAdvanced Techniques: Dive into method overloading and overriding, use of the final keyword, static variables, and more to understand advanced Java concepts.\nMatrix Operations: Master matrix addition, subtraction, and multiplication, and learn to print numbers in matrix format.\nPatterns & Shapes: Create various patterns such as triangular, Pascal’s, Floyd’s triangles, and more to enhance your logical thinking and problem-solving skills.\nMathematical Programs: Implement programs to detect the largest number, calculate factorials, detect even and odd numbers, and generate Fibonacci sequences.\nArray Manipulations: Learn to print, sort, search, merge, and reverse arrays, and perform various array operations to handle data efficiently.\nObject-Oriented Programming: Understand abstract classes, interfaces, inheritance, and more to build robust and scalable Java applications.\nData Type Conversions: Convert between different data types, including string to character, decimal to binary, and more.\nException Handling: Master exception handling with try-catch-finally blocks, user-defined exceptions, and multiple catch blocks.\nMultithreading: Explore multithreading concepts to perform concurrent programming, including creating threads, joining threads, and using runnable interfaces.\nCollections Framework: Work with array lists, hash maps, and understand sorting, synchronizing, and finding elements within collections.\nString Manipulations: Perform various string operations, including finding substrings, counting words, and handling duplicate elements.\nInheritance & Polymorphism: Implement single, multilevel, and hierarchical inheritance, and understand constructor inheritance and superclasses.\nCourse Objective Summary:\nHow to Write Hello World\nHow to Use the Printwriter\nBasic Arithmetic Calculators\nHow to Accept User Input\nDate and Time Operations\nSwapping Two Different Values\nMethod Overloading and Overriding\nUse of Final Keyword and Static Variables\nMatrix Operations\nCreating Various Patterns\nMathematical and Logical Programs\nArray Manipulations and Sorting\nObject-Oriented Programming Concepts\nException Handling Techniques\nMultithreading for Concurrent Programming\nWorking with Collections Framework\nAdvanced String Operations\nInheritance and Polymorphism\nWhy Enroll?\nThis course offers a hands-on approach to learning Java, ensuring you not only understand theoretical concepts but also gain practical experience. By the end of this course, you’ll be equipped with the skills to tackle complex Java programming challenges, making you a proficient and confident Java developer.\nWho Should Enroll?\nBeginners in Java Programming\nStudents and Aspiring Developers\nAnyone looking to improve their Java coding skills\nThose preparing for technical interviews and coding challenges\nCourse Benefits:\nHands-On Learning: Engage in 124 practical projects that reinforce your understanding of Java concepts.\nReal-World Applications: Work on projects that simulate real-world programming scenarios.\nComprehensive Curriculum: Cover a wide range of topics from basic syntax to advanced programming techniques.\nSkill Development: Enhance your problem-solving and logical thinking abilities.\nCareer Advancement: Gain the confidence to take on more challenging programming tasks and advance your career.\nJoin us and transform your Java programming skills with 124 practical projects that will set you on the path to becoming a proficient Java developer!\n120+ Java programming best practices for absolute beginner is a comprehensive and concise guide with over 8 hours of content that is designed to pick up every interested student from the state of “zero-knowledge” to a state of “Hero-knowledge” in Java programming with lots of practical Java projects.\nWhy Must I Take This Course?\nEmenwa Global instructors are industry experts with years of practical, real-world experience building software at industry leading companies. They are sharing everything they know to teach thousands of students around the world, just like you, the most in-demand technical and non-technical skills (which are commonly overlooked) in the most efficient way so that you can take control of your life and unlock endless exciting new career opportunities in the world of technology, no matter your background or experience.",
      "target_audience": [
        "Anyone who wants to learn to code",
        "Anyone looking to level up their skills and master a new programming language",
        "Anyone who wants to master Java programming"
      ]
    },
    {
      "title": "Scala Programming For Beginners Complete Guide 2020",
      "url": "https://www.udemy.com/course/scala_scalable_functional_programming_language_kids_beginners_scratch/",
      "bio": "Play with SCALA Programming - The Scalable Language | A MUST TAKING Programming course For Big Data Developer",
      "objectives": [
        "Fundamentals of the Scala programming language",
        "A Good Basic Understanding of the Scala Programming Language"
      ],
      "course_content": {
        "Introduction To Scala": [
          "Introduction To Scala"
        ],
        "Installation": [
          "Installation On Windows",
          "Scala Install Windows STUDY NOTE",
          "Installation On Linux",
          "Scala Install Linux STUDY NOTE"
        ],
        "Basic Concepts": [
          "Basic Overview of Scala",
          "Basic Overview of Scala",
          "Upcoming Lecture Each and every Weekend",
          "Start with Scala Programming",
          "Literals",
          "Literals Study Note",
          "Scala Values",
          "Scala Values Study Note",
          "Scala Variables",
          "Scala Variables Study Note",
          "Scala Types",
          "Scala Types Study Note"
        ],
        "Coding Section #1": [
          "Scala Coding Practice #1 || Literals, Value, Variable, Type"
        ],
        "If Else Statement": [
          "If Else Statement",
          "If Else Statement Study Note",
          "If else Statement with Match Condition",
          "If else Statement with Match Condition Study Note",
          "If else Statement With Value Binding Pattern",
          "If else Statement With Value Binding Pattern Study Note",
          "If else Statement with Wildcard Operator",
          "If else Statement with Wildcard Operator Study Note",
          "If Else Statement Matching with Pattern Guards",
          "Matching with Pattern Guards Study Notes"
        ],
        "Loop Condition": [
          "For Loop",
          "For Loop Study Note",
          "For Loop Iterator Guard",
          "For Loop Iterator Guard Study Note",
          "For Loop Nested Iterator",
          "For Loop Nested Iterator Study Note",
          "While Loop",
          "While Loop Study note"
        ],
        "Scala String": [
          "String",
          "Scala String Study Note"
        ],
        "Function": [
          "Introduction to Procedure",
          "Introduction to Procedure Study Note",
          "Recursive Function",
          "Nested Function",
          "Nested Function Study Note",
          "Partialilly Applied Function",
          "Partially Applied Function Study Note"
        ],
        "Scala Advance Concepts - Collection": [
          "Scala Programming Practices",
          "Scala Programming Practices Study Note",
          "List & Set",
          "List & Set Study Notes",
          "ReducingList Generic",
          "Reducing List Generic Study Note",
          "Scala Collection Reduce List",
          "Scala Collection Reduce List Study Note",
          "Mapping List",
          "Mapping List Study Note"
        ],
        "OOPS Concepts in Scala": [
          "Class and Inheritance on Scala",
          "Class and Inheritance on Scala Study Note",
          "Inheritance",
          "Inheritance Study Note",
          "Object",
          "Abstract Classes and Traits",
          "Abstract Classes and Traits Study Notes",
          "Case Classes",
          "Case Classes Study Note"
        ]
      },
      "requirements": [
        "A basic Programming Knowledge is an added Advantage",
        "Scala Programming is based on Java, so if you are aware of Java syntax, then it's pretty easy to learn Scala.",
        "Further if you do not have expertise in Java but if you know any other programming language like C, C++ or Python then it will also help in grasping Scala concepts very quickly."
      ],
      "description": "Topics Covered:\nLiterals, Values, Variables, and Types\nString Interpolation\nIf Else Statement and Expression\nMatch Expressions\nLoops – for and while\nPattern Matching\nFunctions\nRecursive Functions\nNested Functions\nCalling Functions with Named Parameters\nParameters with Default Values\nVarArg Parameters\nParameter Groups\nMethods and Operators\nHigher-Order Functions\nPartially Applied Functions and Currying\nCollections – List, Sets and Maps\nArray, Seq, Stream, Tuples\n\n\nIn this course you are going to learn Scala Programming. The course is designed to the point and from very beginning. This course is Totally for the Beginners Who do not have any concept in Scala. After completing this course you get a basic overview about Scala Programming.\nScala is one of the Hot Demanding Language in 2017!\nThe language is introduce by  Martin Odersky in 2003.\nThis Series explains Scala Programming in the User Friendly and Easy to understand Way!\nHere In this course we start form very basic Scala Setup and then We move to the Variables, Literals, Strings any Other Advance Concepts.If you do not have any knowledge in Scala that is O. K. We Guide you from the very basic step to the advance concepts.\nIf you have knowledge in Programming Language like C++, Java You get an additional Benifit.",
      "target_audience": [
        "Programmers and Developers"
      ]
    },
    {
      "title": "The Complete C Course",
      "url": "https://www.udemy.com/course/the-complete-c-course-ppa/",
      "bio": "Learn C in this course and become a Computer Programmer. Obtain valuable C skills and problem solving strategy",
      "objectives": [
        "Understand the fundamentals of the C Programming Language",
        "Understand the core language that most modern languages are based on",
        "Learn one of the most popular and widely used programming language in the world",
        "Learn to write your own C code",
        "Become an excellent problem solver",
        "Learn how to approach solution for a given problem",
        "Understand basic data structures and algorithms",
        "Coding exercises with solutions",
        "250+ practice problems to help you build your skills"
      ],
      "course_content": {},
      "requirements": [
        "A computer with either Windows, Mac or Linux to install the free software and tool needed to build your new apps (I will provide specific videos on installations for each platform).",
        "A strong work ethic, willingness to learn, and plenty of excitement about the awesome new programs you’re about to build.",
        "Problem solving attitude, you will see tremendous number of problems on the way and to build your understanding you need to solve each one of them.",
        "Nothing else! It’s just you, your computer and your hunger to get started today."
      ],
      "description": "Are you aiming to start your career in programming?\nThis course is designed to give you all the skills that you need to start your career in programming. By the end of this course you will understand C extremely and you will get an intelligent problem solving skills.\n\n\nPerhaps you have looked at the size of the course and are feeling a little overwhelmed at the prospect of finding time to complete it. Maybe you are wondering if you need to go through it all?\nThis course is designed as one stop shop for C. Here I have provided all the concepts of C in full details.\n\n\nWill this course give me problem solving skills ?\nYes it will. Throughout the course, a huge number of problems are solved with proper explanation for what is done and 250+ practice exercises are provided for you to practice.\n\n\nWhy should you take this course?\nThis is the only course to start your journey with programming. Once you complete this course, you will be a skilled computer programmer. After this course your basics of programming languages will be clear, as a result of that you will not feel any difficulty to learn advanced programming languages like  C++, Java, C# or Python.\n\n\nWhat if I have questions?\nAs if this course wasn’t complete enough, I offer full support, answering any questions you have 7 days a week (whereas many instructors answer just once per week, or not at all).\nThis means you’ll never find yourself stuck on one lesson for days on end. With my hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\n\n\nReady to get started?\nEnroll now using the “Enroll” button on the right, and get started on your way to learn C Programming.",
      "target_audience": [
        "Anyone willing to learn the fundamentals of C Programming Language.",
        "Whether you are brand new to programming and you have never programmed a computer before or you have got some programming experience then this course is made for you.",
        "If you have tried some other course and you still are not able to write your own programs then this is the right place for you.",
        "Beginners struggling with problem solving - learn how to solve problems from scratch and get your basis clear.",
        "Anyone interested in detailed study of Data Structures and Algorithms"
      ]
    },
    {
      "title": "FactorytalkView ME Training Using Studio 5000 PLC's.",
      "url": "https://www.udemy.com/course/factorytalkviewme-training-connecting-to-rslogix5000-plcs/",
      "bio": "This course will give students the basic knowledge and confidence to create a FactoryTalkViewME project.",
      "objectives": [
        "The student will be able to create and develop a FTviewME application and connect to PLC's using RSLogix/Studio 5000.",
        "FactorytalkViewME compared to SE. Learn the differences.",
        "See how to connect to a PanelviewPlus terminal.",
        "After this course, you will feel confident creating and fully implementing a project using a PVplus terminal"
      ],
      "course_content": {
        "Introduction": [
          "Introduction."
        ],
        "Introduction to FTview Studio and the Factory Talk Directory.": [
          "Creating a FactorytalkViewME Application and the Factorytalk Directory.",
          "Restoring a Runtime Application.",
          "Creating a FactoryTalkViewME Application. Test Your Knowledge."
        ],
        "Application and PanelviewPlus Terminal Setup.": [
          "Configuring FactorytalkViewME and PanelviewPlus Settings.",
          "Summary. Creating an Application and Setting up Comms.",
          "Transferring an Application to the PVplus Terminal.",
          "PanelViewPlus Terminal Features."
        ],
        "Creating a Graphic Display": [
          "Creating a Graphic Display.",
          "Summary. Basic Graphic Displays.",
          "What have you Learned about Creating a Graphic Display?"
        ],
        "Creation and Use of Tags.": [
          "Creating and Using Tags in FactorytalkViewME.",
          "Summary. Creating Tags.",
          "Test your Knowledge. How to create and use tags."
        ],
        "Adding Live Data and using Live Objects on a Display.": [
          "Making Your Graphics Live. Part One.",
          "Making Your Graphics Live. Part Two.",
          "Making Your Graphics Live. Part Three.",
          "Using Language Switching",
          "Summary. Making your Graphics Live.",
          "Making your Graphics Live."
        ],
        "Creating Alarms and using Alarm Displays.": [
          "Creating and Using Alarms and Macros in a FactorytalkviewME Application.",
          "Creating and Using Alarms and Macros Part 2.",
          "Summary. Creation and use of Alarms and Macro's.",
          "How well do you know your Alarms and Macro's?"
        ],
        "Creating and Using Parameter Files in FactoryTalkViewME.": [
          "Creating and Using Parameter Files.",
          "Do you Know Parameter Files?"
        ],
        "Creating Trends and Datalog Models.": [
          "Creating Trends and Datalogs.",
          "Summary. Creating Trends and Data Logs.",
          "Test your Knowledge. Trends and Data Log Models."
        ],
        "Configuring Runtime Security in FactoryTalkViewME.": [
          "Runtime Security Configuration.",
          "Using User Groups.",
          "Summary. Runtime Security.",
          "Know your Security."
        ]
      },
      "requirements": [
        "No specific knowledge required but Studio 5000 PLC and HMI knowledge will be an advantage. Computer literacy and FTviewSE knowledge will also help."
      ],
      "description": "This course FactoryTalkViewME Training connecting to Studio 5000 PLC's using Factory Talk Studio Software is for any of you who require the knowledge to create and maintain a FactorytalkView ME project and be familiar with all the tools available. This software is an HMI software used for operating and controlling operations across all aspects of industry and entertainment. It is especially suited to interface with RS Studio 5000 PLC programs but is not limited to this. It is extremely user-friendly and versatile and for me, it is the HMI I would use over and above anything else if at all possible.\nDuring this course, I shall be covering the Differences between SE and ME. There are many similarities, but also a number of significant differences which will be highlighted.\nI shall be your instructor during this training and I have had many years of practical experience creating projects and programming PLC's, HMI's, commissioning, and face to face training. I also possess a SAQA Further Education and Training Certificate: Measurement, Control and Instrumentation. This is South African but recognized in many countries internationally.\nThe course will start by introducing you to Factory Talk View Studio and the Factory Talk Directory\nThen we shall create our first project\nWho Should Take This Course?\nThis course, FactorytalkViewME Training connecting to RS Studio 5000 PLC's is designed for anyone already using Factory Talk View ME and wishes to enhance their knowledge further and feel confident to maintain and develop projects.\nFor anyone who is planning on using Factory talk View ME in the future, then this is a must-have. Some Studio 5000 knowledge is an advantage so if you still require this knowledge, just check out my PLC courses on Studio 5000.\nIf you have already taken my Factory Talk View SE  course and you wish to use the ME version, then this is the ideal course for you. I would advise you to enroll for both.\nListed below are some of the topics I will cover with you in this course.\nIntroduction to Factory Talk Studio and the Factory Talk Directory.\nSetting up Communications to the PLC and to the PanelviewPlus terminal.(Very Different to SE).\nThe PanelviewPlus Terminal.\nDirect Reference and HMI tags.\nConfiguring graphic displays.\nApplying live data to a graphic display.(Very Different to SE).\nCreating a Runtime Application.(Very Different to SE).\nAlarm configuration.(Very Different to SE).\nCreating Trends and Data Log Models(Very Different to SE).\nSecurity(Very Different to SE).\nPID Control.\nThis is just a short description explaining what you will learn but there is a lot more that you will learn if you take the FactoryTalk ViewME Training connecting to Studio 5000 PLC's.\nThere are a number of quizzes that you can complete after each section to help you reinforce your knowledge and gain confidence using the software. There are also some practical labs for you to complete with solutions attached.\nAt the end of the course, you will feel confident creating and running a project, interrogating an existing project, and carrying out necessary changes to a running operation.\nThe majority of the course consists of video tutorials where I will explain all the different aspects of FactorytalkViewME and demonstrate the use of the software for each of these aspects.\nThe more you can use the software, the better you will be.\nSo if you are really serious about learning FactoryTalkViewME using Factory Talk Studio, then this course is for you. Enroll on this course and you can be learning Today.",
      "target_audience": [
        "This is for PLC and HMI developers, but anyone who requires knowledge to be able to maintain a system will also benefit."
      ]
    },
    {
      "title": "Absolute beginner's guide to programming and computers",
      "url": "https://www.udemy.com/course/absolute-beginners-guide-to-programming-and-computers/",
      "bio": "Programming and app development for the complete newbie – Learn how to program and use programming creatively.",
      "objectives": [
        "Programming basics – what's a program and how to write one. We'll cover basics of software development and most important programming topics.",
        "Using documentation and developer resources to develop programming skills on your own – you'll know where to look for solutions and how to learn any technology.",
        "Using programming creatively in conjunction with user experience design and web design – basics of how to create a simple website (HTML, CSS and JavaScript).",
        "Fundamentals of C#, C++, JavaScript and Assembly programming languages (and programming languages in general) and how they work.",
        "Computer architecture basics – what makes a desktop computer and how its physical components allow the apps to run.",
        "Navigating your way through the OS – what are files, programs, processes, the console. You'll understand how a computer works and how apps are built."
      ],
      "course_content": {
        "Introduction to programming": [
          "Introduction and Welcome – Purpose, structure and goals",
          "What is a program?",
          "Solve the three algorithmic problems",
          "Installing software",
          "Basic precautions when installing software"
        ],
        "Bytes, files and semantics": [
          "What is a file?",
          "Create and modify an image by hand",
          "File reading exercise",
          "Web design and XML",
          "Create a simple XML file describing a film",
          "Create a simple HTML page",
          "Design a simple web page using CSS"
        ],
        "Programming languages": [
          "Adding functionality to web pages",
          "A simple JavaScript button",
          "Operating system and The Console",
          "Creating folders and files",
          "Building your first program",
          "Finding a minimum of an array in real assembly code",
          "Higher-level programming languages",
          "Finding the maximum in an array",
          "Sorting an array"
        ],
        "Building apps – user-interface, desktop and mobile": [
          "Creating a user-interface",
          "Events and adding functionality",
          "App publishing process"
        ],
        "Advanced topics": [
          "Threads, tasks and processes",
          "Instantiating tasks",
          "Adding math to the equation",
          "Adding mathematics"
        ],
        "Conclusion": [
          "Where to go from here?",
          "Final test",
          "Final words"
        ],
        "Troubleshooting": [
          "Solving problems step-by-step",
          "Exploring software functionality"
        ]
      },
      "requirements": [
        "No programming or tech knowledge is required.",
        "A computer with a Windows 10 operating system is preferred."
      ],
      "description": "What is programming and how to write a computer program? It's often the case that beginners who'd like to learn programming don't know where to start or even what it is they are looking for. This course was designed for any novice looking to learn about programming and computers in general. Here, you'll learn everything you need to get started with programming the basics you need to know to start learning on your own. You don't need to know anything about computers to get started – this guide will cover all important topics and give you an introduction to the most important programming topics.\nEach lecture is conceived in such a way to provide a new and interesting insight into how programming could be used not as a replacement career, but as a supplement to another. Besides being a useful tool in the modern technologically dominated society, programming can be an interesting and fun way to expand your creative endeavors.\nAbsolute beginner's guide to programming and computers is a course designed for the complete beginner. Unlike most standard programming courses, it minimizes the use of math and tech-heavy vocabulary and provides simple and relatable examples of programming, building real understanding of how to write a computer program and providing the student with actual usable skills within a minimal timeframe.\nInstead of heavily focusing on specific technologies, Absolute beginner's guide provides the student with the core principles and, through examples and analogies, demonstrates a programmer's way of thinking. The course goes through several programming languages and so-called programming paradigms and elucidates the fundamental concepts of each one, including some of the most important ideas of procedural programming, assembly, object-oriented programming, web development (HTML and CSS), multi-threading, mobile development and even game development. You'll learn the basics of C#, C++ and JavaScript in a way that will let you transfer these skills to other programming languages.\nThe course is presented in such a way to allow you to build your skills independently. In this guide, you will learn how to read documentation and where to find answers if you ever get stuck with a programming problem. This way, the student who finishes the course understands the basics of the key branches of software development and has the skill to further advance and research on their own.\nAlthough focusing on specific technologies can create experts in a specialized field, most professionals switch between many different technologies during their careers, but despite this constant switching, core ideas always remain, even when the details of a specific technology or platform have been forgotten. Instead of teaching details that could be forgotten when a new technology emerges, this absolute beginner's guide focuses on exactly those principles that are used across different technologies.\nThe course touches upon many topics while presenting only the most important material. It starts out lightly and gradually introduces more advanced concepts, all the while using little to no tech-focused vocabulary and nothing but elementary school math.",
      "target_audience": [
        "Creative individuals looking to learn the basics of programming and app development",
        "People with no prior experience with either programming or computers who want to broaden their knowledge",
        "Individuals from other disciplines who want to know what software development is about and whether they could be good at it",
        "Anyone looking to \"get into\" programming"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/csharp-in-depth-for-beginners/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Spring Data JPA Fundamentals (with Hibernate)",
      "url": "https://www.udemy.com/course/spring-data-jpa-fundamentals-with-hibernate/",
      "bio": "Learn how to use Spring Data JPA efficiently in your Spring Boot Applications",
      "objectives": [
        "The essentials of Repositories, Derived Queries, Sorting, Paging, Modifying, Projections, Transaction Management, and Concurrency",
        "Understand Entity Relationships, Inheritance Mapping, Polymorphic Queries and Repository Inheritance",
        "Understand how to handle concurrent transactions using Optimistic Locking and Pessimistic Locking",
        "How to manage and propagate transactions efficiently",
        "Essentials of Database Isolation Rules",
        "Some of the Best Practices and Performance Optimisations",
        "JPA Essentials of Entity State Transitions, 1st Level Caching, Automatic Dirty Checking, Persistence Context and Flushing"
      ],
      "course_content": {},
      "requirements": [
        "Fundamental understanding and programming experience of Java",
        "Prior exposure to SQL will be be helpful",
        "Basic understanding of Hibernate/JPA",
        "Fundamental understanding and programming experience of Spring framework and Spring Boot"
      ],
      "description": "If you’re a Spring/Java programmer who wants to learn the fundamentals and some of the advanced topics of Spring Data JPA with Hibernate, then you’re the one this course is designed for.\nIt uses Hibernate as the JPA provider for this course, which is also the default JPA provider of Spring Data JPA. You'll be learning the fundamentals and some of the advanced Spring Data JPA features covering Repositories, Derived Queries, Paging & Sorting, Query-By-Example (QBE), Auditing, Transactions & Concurrency, Modifying Queries, Projections, Mapping Associations and Mapping Inheritance.\nIt'll be discussing some of the Best Practices and Performance Optimizations as well.\nSpring Data JPA provides an abstraction layer built on top of the JPA API specification, so JPA is important for this course, but even if you have just some basic experiences with JPA/Hibernate, you should not find it difficult to complete this course successfully, as it also covers the most essential topics of JPA at the end of the course in Appendix A.\nThe course also discusses the SQL at runtime every step of the way, and the performance implications of it. There will also be Lab-Exercises and Quizzes throughout the course, to challenge you, and also to help you revise the concepts learnt in the previous sessions.\nMySQL and H2 in-memory database are the two RDBMS that the used in the course.",
      "target_audience": [
        "Spring/Java/JPA/Hibernate programmers who want to learn how to use Spring Data JPA with Hibernate in their Spring Boot projects",
        "Professionals working on Java/JavaEE/Spring technologies"
      ]
    },
    {
      "title": "The Complete MATLAB Computer Programming Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-computer-programming-boot-camp/",
      "bio": "Go from Zero to Hero in coding with MATLAB",
      "objectives": [
        "Develop your own computer programs from scratch in a practical, fun and easy way.",
        "Write code scripts and functions in MATLAB",
        "Impress future (or current) employers with your marketable skills in MATLAB"
      ],
      "course_content": {},
      "requirements": [
        "There is no prior experience required, even if you have never used MATLAB before.",
        "Matlab software. Downloadable from MathWorks website."
      ],
      "description": "This course will cover the basics of programming and students will be able to create their own code scripts. The course includes a unique learning approach and you are going to learn by doing! students will be able to develop fun, useful and practical code scripts from scratch.\nIn this course, students will be able to:\nExperience a true practical learning experience\nAccess all the codes and slides,\nReceive a certificate of completion to post on LinkedIn profile to showcase your skills in programming to employers.\nReceive a risk free trial with 30 day money back guarantee so you can give a course a try risk free!\nCheck out the preview videos and the outline to get an idea of the projects we will be covering.",
      "target_audience": [
        "For People who want to learn programming Fundamentals and develop their own codes",
        "For Complete Programming Beginners",
        "For People New to MATLAB programming"
      ]
    },
    {
      "title": "A Complete Introduction to the C++ Programming Language",
      "url": "https://www.udemy.com/course/intro-to-cplusplus/",
      "bio": "Learn the C++ programming language with a step-by-step introduction of all the important concepts and language features.",
      "objectives": [
        "Comfortably write, compile, link and run C++ programs",
        "Solve problems using the C++ programming language",
        "Apply modern C++ programming practices"
      ],
      "course_content": {
        "Overview": [
          "Course Introduction",
          "What is C++?",
          "Who Uses C++?",
          "Advantages",
          "Disadvantages",
          "What is Modern C++?",
          "Compilers",
          "Build Systems",
          "Libraries",
          "IDEs",
          "Homework: Choose Your Editor"
        ],
        "Getting Started": [
          "Source Code",
          "Preprocessor",
          "Compilation",
          "Linking",
          "Scripting",
          "Homework: Install and Use Cling"
        ],
        "Numeric Types": [
          "Type System",
          "Variables",
          "Integral Types",
          "Operators",
          "Floating-Point Types",
          "Mixing Numeric Types",
          "Auto",
          "Doing Math",
          "Numeric Types Quiz",
          "Homework: Solve a Quadratic Equation"
        ],
        "Control Flow": [
          "Logical Types",
          "Comparison Operators",
          "Logical Operators",
          "Scope",
          "If-Then-Else and the Ternary Operator",
          "Switch and Break",
          "Do-While Loops",
          "For Loop",
          "Control Flow Quiz"
        ],
        "Memory Management": [
          "Stack and Heap",
          "Stack",
          "Heap",
          "Pointers",
          "References",
          "Memory Management Quiz"
        ],
        "Arrays": [
          "Introducing Arrays",
          "Traversing Arrays",
          "Multidimensional Arrays",
          "std::array",
          "std::vector"
        ],
        "Characters and Strings": [
          "Characters and C-Style Strings",
          "std::string",
          "Common Operations",
          "Wide Strings",
          "Characters and Strings Quiz"
        ],
        "Functions": [
          "Introducing Functions",
          "Return Type",
          "Application Entry Point",
          "Function Pointers and std::function",
          "Lambda Functions"
        ],
        "User Defined Types": [
          "Type Definitions",
          "Enumeration",
          "Union",
          "Struct",
          "Mixing User-Defined Types"
        ],
        "Object-Oriented Programming": [
          "Fields and Member Functions",
          "Classes",
          "Constructor",
          "Destructor",
          "Inheritance",
          "Multiple Inheritance",
          "Encapsulation",
          "Polymorphism",
          "dynamic_cast"
        ]
      },
      "requirements": [
        "Very basic maths knowledge",
        "Experience in programming beneficial but not essential"
      ],
      "description": "This course will teach you the fundamentals of the C++ programming language, with a focus on Modern C++ features and the efficient use of tools. Start with the fundamentals and work your way up to advanced C++11 concepts and OOP mastery!\nThis course is presented as a combination of slide-based theory material and screencasts showing the IDE and the author writing programs and running them in the terminal.\nHere are some of the things we are going to cover in the course:\nC++ ecosystem: compilers, Integrated Development Environments (IDEs) and other tools\nThe compilation process (how C++ source files are compiled and linked)\nData types: numeric (integers, floating-point), strings, arrays, vectors, etc.\nControl flow constructs (if, switch, while, etc.)\nMemory management (stack and heap allocation, deletion, smart pointers)\nUser-defined types (how to define your own classes and class members)\nObject-oriented programming (polymorphism, inheritance, encapsulation)\nWhy take this course? Glad you asked. This course is...\nFast-paced, yet feature-complete — covers all core feature of the language\nCovers only modern C++ (C++11, 14, 17 and 20)... there is very little 'legacy' C/C++ covered in the course!\nOpinionated towards best practices using latest versions of the language\nAdditional content – driven by you!\nThat last part means that additional lectures will appear driven by your comments and requests. I read all feedback and comments and try to provide feedback as quickly as possible.\nEnjoy!",
      "target_audience": [
        "Beginner C++ programmers",
        "Developers wishing to learn C++"
      ]
    },
    {
      "title": "Learn To Program With Spring",
      "url": "https://www.udemy.com/course/learn-to-program-with-spring/",
      "bio": "Learn to program with Spring. An in-depth course on Spring programming from Infinite Skills",
      "objectives": [
        "Learn how to program with Spring"
      ],
      "course_content": {
        "Spring Core Introduction": [
          "Important - Download These First - Working Files",
          "0101 About The Course",
          "0103 Spring Source Tool Suite Installation",
          "0104 How To Access Your Working Files"
        ],
        "Spring Inversion Of Control": [
          "0201 Spring Inversion Of Control And Dependency Injection",
          "0202 Dependency Injection Overview",
          "0203 Dependency Injection In Practice",
          "0204 IOC Container",
          "0205 Spring IOC Container Benefits - Part 1",
          "0206 Spring IOC Container Benefits - Part 2"
        ],
        "Spring Beans": [
          "0301 Spring Beans Overview",
          "0302 Base Project Setup",
          "0303 Introduction To Beans",
          "0304 Constructor Injection - Part 1",
          "0305 Constructor Injection - Part 2",
          "0306 Setter Injection",
          "0307 P Namespace And C Namespace",
          "0308 Bean Instantiation With Factories",
          "0309 Bean Scopes",
          "0310 Method Injection And Application Context Aware",
          "0311 Collections",
          "0312 Auto-Wiring With XML - Part 1",
          "0313 Auto-Wiring With XML - Part 2"
        ],
        "Configuring The IOC Container With Annotations": [
          "0401 Configuring The IOC Container With Annotations Overview",
          "0402 Introduction To Annotation Configuration",
          "0403 Auto-Wiring With Annotations - Part 1",
          "0404 Auto-Wiring With Annotations - Part 2",
          "0405 @Qualifiers",
          "0406 @Resource",
          "0407 @Component Scanning",
          "0408 @Lazy",
          "0409 @Qualifier",
          "0410 @Scope"
        ],
        "Java Configuration": [
          "0501 Java Configuration Overview",
          "0502 Introduction To Java Configuration",
          "0503 Injecting Dependencies - Part 1",
          "0504 Injecting Dependencies - Part 2",
          "0505 Mixing Configuration Types"
        ],
        "Additional Container Features": [
          "0601 Additional Container Overview",
          "0602 Resolving Resources - Part 1",
          "0603 Resolving Resources - Part 2",
          "0604 Property Placeholder Configure",
          "0605 Using Imports To Organize Configuration",
          "0606 Bean Lifecycle Callbacks - Part 1",
          "0607 Bean Lifecycle Callbacks - Part 2",
          "0608 Profiles"
        ],
        "Foundations Of Data Access": [
          "0701 Foundations Of Data Access Overview",
          "0702 MySQL Installation And Setup",
          "0703 Data Model And Object Model",
          "0704 Benefits Of Spring Data Support",
          "0705 Persistence Layer Structure - Part 1",
          "0706 Persistence Layer Structure - Part 2"
        ],
        "JDBC With Templates": [
          "0801 JDBC With Templates Overview",
          "0802 Creating A Data Source",
          "0803 JDBC Template Introduction",
          "0804 Row Mapper - Part 1",
          "0805 Row Mapper - Part 2",
          "0806 Result Set Extractor",
          "0807 Inserts With JDBC Template",
          "0808 JDBC Template Updates And Deletes"
        ],
        "Spring Data": [
          "0901 Spring Data Overview",
          "0902 Spring Data Configuration",
          "0903 Repositories"
        ],
        "Spring MVC Introduction": [
          "1001 Spring MVC Introduction Overview",
          "1002 Configuring Spring MVC",
          "1003 Spring MVC Walkthrough"
        ]
      },
      "requirements": [
        "PC or Mac"
      ],
      "description": "This Spring Programming training course from Infinite Skills teaches you the fundamentals of this open-source application framework, which has become popular in the Java community.\n\nYou will start by learning about the Spring Inversion of Control (IOC), which is central to the Spring framework. You will then learn about Spring Beans, including setting up a project, Bean scopes, and auto-wiring with XML. This course will then teach you how to configure the IOC container with annotations. This video tutorial also covers Java configuration, container features, foundations of data access, and JDBC with templates. Finally, you will learn how to configure Spring data and Spring MVC.\n\nOnce you have completed this computer based training course, you will have gained the knowledge necessary to begin creating programs using Spring. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Programmers and Developers"
      ]
    },
    {
      "title": "Learn PyQt5 From Basics to Real World Projects",
      "url": "https://www.udemy.com/course/learn-pyqt5-from-basics-to-real-world-projects/",
      "bio": "Create Real-World Applications With Python's Most Famous Graphical User Interface (GUI)",
      "objectives": [
        "Learn the fundamentals of Python GUI Programming",
        "Learn about PyQt5 basics and advanced widgets",
        "Learn how to Use Qt Designer Tool",
        "Create Real World Application by writing the Code and by using Qt Designer",
        "Use Databases with Python and PyQt",
        "Improve your overall coding skills",
        "Improve your knowledge in Python and its different libraries"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Requirements",
          "PyQt5 Version"
        ],
        "PyQt5 Basic & Advanced Widgets": [
          "Date & Time Class",
          "First PyQt5 Application",
          "Buttons",
          "Layout",
          "Form Layout",
          "Label",
          "Line Edit",
          "Push Button",
          "Radio Button",
          "Check Box",
          "Combo Box",
          "Spin Box",
          "Slider",
          "Menu-Bar",
          "Tool Bar",
          "Input Dialog",
          "Font Dialog",
          "File Dialog",
          "Tab",
          "Stack",
          "Splitter",
          "Dock",
          "Status Bar",
          "Scroll Bar",
          "Calendar",
          "Drag & Drop"
        ],
        "Qt Designer": [
          "Download Qt Designer",
          "Introduction",
          "Widget Box",
          "Qt Designer First Application",
          "Convert Ui to Python Script",
          "Layout in Qt Designer",
          "Edit Tab Order",
          "Defining Buddies",
          "Edit Slots & Signals"
        ],
        "Dice Game": [
          "Dice Game Introduction",
          "Building the Application",
          "Adding Players",
          "Adding Score and Dice",
          "Create Hold and Roll Buttons",
          "Create the Roll Function",
          "Create the Hold, New Game & Winner Functions"
        ],
        "Quiz Project": [
          "Introduction",
          "Building Frame 1",
          "Building Frame 2",
          "Frame 2: Add Answer Function",
          "Frame 2: Add Quiz Timer",
          "Building Frame 3",
          "Building Frame 1 and 2's Backend",
          "Building Frame 3's Backend"
        ]
      },
      "requirements": [
        "Basic Knowledge of Python Programming Language is recommended"
      ],
      "description": "In this course, you are going to learn about python's most famous graphical user interface: PyQt5.\nWe are going to follow the following outline:\n-First, we are going to learn about the basic widget of PyQt5 such as the layout, label, buttons, bars, and much more.\n-Second, we are going to move into some advanced widgets and topics such as input, font, and file dialog, stacks, tabs, and splitters.\n-Then, we are going to learn about PyQt's famous tool \"Qt Designer\" which is going to allow to the creation of an application using the drag and drop technique. We will have a detailed walkthrough of all of the features of this tool to be able to build any application smoothly.\n-Finally, we are going to have a list of projects that will be always updated. The projects list contains:\n1-Dice Game: Build a Dice Game Using PyQt5 widgets and learn how to connect different functions to their corresponding buttons. In addition, you are going to learn how to use CSS in PyQt5 to improve the user's overall experience in your GUI applications.\n\n\nMore projects will be added on a regular basis.\n\n\nI hope you enjoy this course, and I would like to add that I will be available anytime throughout your journey in this course, and if you have any questions, concerns, or feedback, I will be happy to hear and answer them!",
      "target_audience": [
        "Python Developers",
        "Programmers who want to include a graphical interface to their programming projects, python programs, and assignments.",
        "Developers curious about Python GUI Programming"
      ]
    },
    {
      "title": "PyQT5 with Python GUI Programming | Python PyQT",
      "url": "https://www.udemy.com/course/learn-python-gui-programming-using-pyqt5-gui-python-2021/",
      "bio": "PyQT with Python GUI Programming To Build Python GUI Desktop Application with PYQT, QT, PYQT5 & Become Python Gui Master",
      "objectives": [
        "In the software world, python is mostly used in data science and artificial intelligence operations. So you may not have seen many python based applications.",
        "In this training, we aimed to develop an application using python for beginners with you.",
        "how to quickly develop interfaces in python gui",
        "how to communicate between windows",
        "how to use your database operations in python programming",
        "how to visualize your data in Python GUI",
        "In this course, we will make a simple \"employee leave tracking\" application with you. In this application we will have 3 screens and 2 dialogs. These screens",
        "employee information screen in python gui programming",
        "leave information screen in gui python",
        "charts screen in GUI Python",
        "In the application, we will first design each screen one by one and turn it into python codes. Later, we will provide communication between these screens.",
        "In the next step, we will create a database connection.",
        "python gui programming using pyqt5",
        "With the employee information screen, we will be able to see our employee information and add new employees.",
        "On the leave information screen, we will be able to see the leave used by our employees and add new leaves.",
        "Finally, we will be able to see the employees and departments that use the most leave via the charts screen.",
        "I hope it will be an interesting experience for you.",
        "PYQT5",
        "Python instructors on OAK Academy specialize in everything from software development to data analysis, and are known for their effective.",
        "Python is a general-purpose, object-oriented, high-level programming language.",
        "Python is a multi-paradigm language, which means that it supports many programming approaches. Along with procedural and functional programming styles",
        "Python is a widely used, general-purpose programming language, but it has some limitations. Because Python is an interpreted, dynamically typed language",
        "Python is a general programming language used widely across many industries and platforms. One common use of Python is scripting, which means automating tasks.",
        "Python is a popular language that is used across many industries and in many programming disciplines. DevOps engineers use Python to script website.",
        "Python has a simple syntax that makes it an excellent programming language for a beginner to learn. To learn Python on your own, you first must become familiar.",
        "Python gui with pyqt, pyqt5, qt with python",
        "Learn object oriented programming with python with examples",
        "Learn how can you work with API’s using python"
      ],
      "course_content": {
        "Intro to Python GUI Course using PyQt5": [
          "Introduction to Python GUI",
          "FAQ regarding Python, Python Gui, Python PyQt"
        ],
        "Installations for python gui": [
          "Installing Anaconda Distribution for Linux",
          "Installing Anaconda Distribution for Windows",
          "Installing Anaconda Distribution for MacOs",
          "Installing Python and PyCharm For Windows",
          "Installing Python and PyCharm For Mac",
          "Overview of Jupyter Notebook and Google Colab",
          "Installing Qt Creator in Python"
        ],
        "Fundamentals of Python": [
          "Data Types in Python",
          "Operators in Python For Beginners",
          "Conditionals in python",
          "Loops in Python",
          "Lists-Tuples-Dictionaries-Sets in Python",
          "Operators and Methods in Python gui, Pyqt5",
          "Modules in Python gui, Pyqt5",
          "Functions in Python gui, Pyqt5",
          "Exercise Analyse in Python gui, Pyqt5",
          "Exercise Solution in Python gui, Pyqt5",
          "Quiz"
        ],
        "Object Oriented Programming in Python (OOP)": [
          "Logic of OOP - Object Oriented Programming",
          "Constructor in Python gui, Pyqt5",
          "Methods in Python gui, Pyqt5",
          "Inheritance in Python gui, Pyqt5",
          "Overriding and Overloading in Python gui, Pyqt5",
          "Ouiz - python gui"
        ],
        "Fundamentals of Matplotlib in Python GUI": [
          "What is Matplotlib in Python gui",
          "Using Matplotlib in Python gui",
          "Pyplot – Pylab – Matplotlib in Python gui",
          "Figure, Subplot, Multiplot, Axes",
          "Figure Customization",
          "Plot Customization",
          "Quiz"
        ],
        "Project Overview in Python GUI": [
          "Project analysis in python gui"
        ],
        "Create the User Interface in GUI Python": [
          "Main Menu in python gui programming",
          "Employee Screen in gui python",
          "New Employee Screen in python gui programming using pyqt5",
          "Leave Screen in PYQT5",
          "Add Leave Screen in PYQT",
          "Chart Screen in Python gui",
          "Convert UI to Python file"
        ],
        "Let’s start to Coding our Python Program": [
          "Launching the Python GUI Project",
          "Main Window communication in GUI",
          "Navigating Back in Python GUI",
          "Creating a New Employee in python gui programming using pyqt5",
          "Database class creation in Python gui",
          "Add New Employee in Python gui",
          "Load Employee Table in GUI",
          "Context Menu in PYQT5",
          "Leave History query in Python gui",
          "Load Leave table in GUI",
          "Create an employee in Python gui",
          "Add leave in GUI Programming Using PyQt5",
          "Filtering in Python GUI Desktop Applications With PYQT",
          "Export table in gui python",
          "Delete employee in python gui programming using pyqt5",
          "Leave statistic chart in python gui",
          "Total leave per department chart in python gui programming"
        ],
        "Extra": [
          "PyQT5 with Python GUI Programming | Python PyQT"
        ]
      },
      "requirements": [
        "You'll need a desktop computer (Windows, Mac) capable of running Anaconda 3 or newer.",
        "We will show you how to install the necessary free software.",
        "A little bit of coding experience.",
        "At least high school level math skills will be required.",
        "Desire to learn Python GUI",
        "Curiosity for python gui programming using pyqt5",
        "Desire to learn python pyqt, pyqt5"
      ],
      "description": "Hello dear friends.\n\nWelcome to PyQT5 with Python GUI Programming | Python PyQT course\n\nPyQT with Python GUI Programming To Build Python GUI Desktop Application with PYQT, QT, PYQT5 & Become Python Gui Master\nWelcome to Developing Python GUI with PyQT5.\nMaster Python GUI development using Tkinter to build desktop applications!\nPython instructors on Udemy specialize in everything from software development to data analysis and are known for their effective, friendly instruction for students of all levels. Pyqt, pyqt5, python gui, python, python pyqt5, GUI, qt python, python gui programming, gui python, qt, python gui pyqt5, learn python gui programming using pyqt5 | gui python 2021, oak Academy, python pyqt, python desktop application, gui in python, qt creator, pyqt python, python gui programming using pyqt5, qt for python, pyqt5 python, python programming, qt designer, desktop application development, python desktop, pyqt5 gui\nWhether you work in machine learning or finance or are pursuing a career in web development or data science, Python is one of the most important skills you can learn. Python's simple syntax is especially suited for desktop, web, and business applications. Python's design philosophy emphasizes readability and usability. Python was developed upon the premise that there should be only one way (and preferably one obvious way) to do things, a philosophy that has resulted in a strict level of code standardization. The core programming language is quite small and the standard library is also large. In fact, Python's large library is one of its greatest benefits, providing a variety of different tools for programmers suited for many different tasks.\nIn this course we will learn what is the GUI, PyQT5 and how does it work. And also how we develop a program with python. For those who want to use Python not only in Artificial Intelligence ( AI ) and Data Science or Machine Learning but also develop a program using Python.\nThis course has suitable for everybody who is interested in Python PYQT. But not just only\nWelcome to our Python course. As you all know or have guessed, Python is the most powerful programming language used in data science and artificial intelligence. Everyone is talking about it. This is said everywhere. Python is for data science. But don't we programmers ever wonder?\nCan we code an application using Python?\nHow can we use GUI in Python?\nI wonder if we can quickly prepare a user interface in python gui programming using pyqt5 ?\nIn this course, we will seek answers to these questions with you. First of all, in our course, we will explain the fundamental topics of Python so that those who are new to Python can understand it. These fundamental topics will include the most powerful and important topics of both Python and software development, such as OOP and data visualization. Then we will try to develop a program using Python with you. While doing this, we will learn how to do GUI design in Python. We will also learn how to make database connections in Python.\nwhat will you learn in this Python GUI, Pyqt course:\nLearn about python fundamentals like data types, operators, reserved words\nYou will learn writing complex python 3 programs in a practical way.\nAppear confident in interviews and crack them easily\nLearn about python fundamentals like data types, operators, reserved words\nLearn about python flow control and loops\nLearn about python strings and how can you use them\nLearn about using python tuple and lists\nLearn about python sets and dictionary along with examples\nLearn what are python functions and modules. We will also understand how to use them.\nLearn object oriented programming with python with examples\nLearn how to create user interface for your python software using tkinter\nBuild real world projects like calculator, currency converter, URL shortener, web scraper, etc\nLearn how can you work with API’s using python\nPyqt\nPyqt5\nPython Gui\nPython Qt\nPython GUI programming\nQt Python\nqt for python\nPython GUI, pyqt\n\nWhat is python?\nPython is a general-purpose, object-oriented, high-level programming language. Whether you work in artificial intelligence or finance or are pursuing a career in web development or data science, Python bootcamp is one of the most important skills you can learn. Python's simple syntax is especially suited for desktop, web, and business applications. Python's design philosophy emphasizes readability and usability. Python was developed on the premise that there should be only one way (and preferably, one obvious way) to do things, a philosophy that resulted in a strict level of code standardization. The core programming language is quite small and the standard library is also large. In fact, Python's large library is one of its greatest benefits, providing different tools for programmers suited for a variety of tasks.\n\nPython vs. R: What is the Difference?\nPython and R are two of today's most popular programming tools. When deciding between Python and R, you need to think about your specific needs. On one hand, Python is relatively easy for beginners to learn, is applicable across many disciplines, has a strict syntax that will help you become a better coder, and is fast to process large datasets. On the other hand, R has over 10,000 packages for data manipulation, is capable of easily making publication-quality graphics, boasts superior capability for statistical modeling, and is more widely used in academia, healthcare, and finance.\n\nWhat does it mean that Python is object-oriented?\nPython is a multi-paradigm language, which means that it supports many programming approaches. Along with procedural and functional programming styles, Python also supports the object-oriented style of programming. In object-oriented programming, a developer completes a programming project by creating Python objects in code that represent objects in the actual world. These objects can contain both the data and functionality of the real-world object. To generate an object in Python you need a class. You can think of a class as a template. You create the template once, and then use the template to create as many objects as you need. Python classes have attributes to represent data and methods that add functionality. A class representing a car may have attributes like color, speed, and seats and methods like driving, steering, and stopping.\n\n\nWhat are the limitations of Python?\nPython is a widely used, general-purpose programming language, but it has some limitations. Because Python is an interpreted, dynamically typed language, it is slow compared to a compiled, statically typed language like C. Therefore, Python is useful when speed is not that important. Python's dynamic type system also makes it use more memory than some other programming languages, so it is not suited to memory-intensive applications. The Python virtual engine that runs Python code runs single-threaded, making concurrency another limitation of the programming language. Though Python is popular for some types of game development, its higher memory and CPU usage limits its usage for high-quality 3D game development. That being said, computer hardware is getting better and better, and the speed and memory limitations of Python are getting less and less relevant.\n\nHow is Python used?\nPython is a general programming language used widely across many industries and platforms. One common use of Python is scripting, which means automating tasks in the background. Many of the scripts that ship with Linux operating systems are Python scripts. Python is also a popular language for machine learning, data analytics, data visualization, and data science because its simple syntax makes it easy to quickly build real applications. You can use Python to create desktop applications. Many developers use it to write Linux desktop applications, and it is also an excellent choice for web and game development. Python web frameworks like Flask and Django are a popular choice for developing web applications. Recently, Python is also being used as a language for mobile development via the Kivy third-party library.\n\nWhat jobs use Python?\nPython is a popular language that is used across many industries and in many programming disciplines. DevOps engineers use Python to script website and server deployments. Web developers use Python to build web applications, usually with one of Python's popular web frameworks like Flask or Django. Data scientists and data analysts use Python to build machine learning models, generate data visualizations, and analyze big data. Financial advisors and quants (quantitative analysts) use Python to predict the market and manage money. Data journalists use Python to sort through information and create stories. Machine learning engineers use Python to develop neural networks and artificial intelligent systems.\n\nHow do I learn Python on my own?\nPython has a simple syntax that makes it an excellent programming language for a beginner to learn. To learn Python on your own, you first must become familiar with the syntax. But you only need to know a little bit about Python syntax to get started writing real code; you will pick up the rest as you go. Depending on the purpose of using it, you can then find a good Python tutorial, book, or course that will teach you the programming language by building a complete application that fits your goals. If you want to develop games, then learn Python game development. If you're going to build web applications, you can find many courses that can teach you that, too. Udemy’s online courses are a great place to start if you want to learn Python on your own.\nOur goal is to learn how to write a program using Python programming at the end of the course. Are you excited? Because I'm excited.\nCome on, let's start our new adventure PyQT5 with Python GUI Programming | Python PyQT together.",
      "target_audience": [
        "Anyone who has programming experience and wants to enter the python world. In this world your journey never ends.",
        "You can develop yourself at data science or Machine learning and even developing an application.",
        "Statisticians and mathematicians who want to learn python for machine learning and deep learning.",
        "Tech geeks who curious with Machine Learning and Deep Learning concept.",
        "Data analysts who want to learn machine learning and deep learning and data visualization.",
        "And also, who want to learn how to develop a GUI with Python very easily.",
        "If you are one of these, you are in the right place. But please don't forget. You must know a little bit of coding and scripting.",
        "Any developer who wants to improve on their coding skills",
        "Any self taught developer who wants to learn more and boost their programming skills",
        "Any developer or engineer who wants to crack programming interviews",
        "Students who want to learn about python gui, pyqt deeply"
      ]
    },
    {
      "title": "Java Programming: Become a Professional Java Engineer!",
      "url": "https://www.udemy.com/course/java-programming-the-authoritative-edition/",
      "bio": "Learn Java from start to finish using an exciting project driven approach",
      "objectives": [
        "Build responsive graphically pleasing programs using simple principles",
        "Build programs that reflect the modern principles in Java and program development",
        "Create responsive applications that solve real life complex problems",
        "Tackle large scale projects in a professional style",
        "Become a respected Java engineer using industry standard practices",
        "Have a excellent base to go into more specialized topics in Java"
      ],
      "course_content": {
        "Installations of Programs": [
          "How to install Java(Windows)",
          "How to install Java(Mac)",
          "How to install Java(Linux)",
          "How to install Eclipse(All Operating Systems)",
          "Why Another Java Course"
        ],
        "Introduction into Basic Programming": [
          "Why Java",
          "Intro into Eclipse IDE",
          "Java in the Backend",
          "Hello World(First Program)",
          "Introduction to Variables",
          "Taking Input",
          "Error Types",
          "Outputting to the Screen",
          "Numeric Data Types",
          "Operators",
          "Increment and Decrement",
          "Final Constants",
          "Precedence and Naming",
          "Random Class",
          "Case Study: Employee Program",
          "Case Study: Rectangle Program",
          "Chapter Quiz 1"
        ],
        "Java Data Types": [
          "Decimal Format Class",
          "Casting",
          "Boolean Basics",
          "Character Basics",
          "String",
          "String Methods",
          "Taking Input with Strings and Chars",
          "Case Study: String Analyzer",
          "Chapter 2 Quiz"
        ],
        "Control Statements": [
          "What are Control Statements",
          "New Boolean Operators",
          "If Statements",
          "Else and Else If",
          "Case Study: Grader",
          "Case Study: Addition Program",
          "Nesting",
          "Switch Statements",
          "Math Class",
          "Common Pitfalls",
          "Extended Assignment Operators",
          "Case Study: Similarity Checker",
          "Case Study: Leap Year",
          "Chapter 3 Quiz"
        ],
        "Loops": [
          "Intorduction into Loops",
          "While Loops",
          "Do While Loops",
          "For Loops",
          "Nesting with Loops",
          "Which Type of Loop to Use",
          "When to use a Loop",
          "Case Study: Even Number Counter",
          "Case Study: Primes",
          "Case Study: Repeated Addition with Loops",
          "Scope",
          "Escape Sequences",
          "Sentinel Controlled Programs",
          "Chapter 4 Quiz"
        ],
        "Methods": [
          "What are Methods",
          "Methods Basics",
          "Case Study: GCD Calculator",
          "Calling Methods",
          "Overloading Methods",
          "Case Study: Fractions Calculator",
          "Input and Output Redirection",
          "Case Study: Addition Program with Methods",
          "Error Checking with Methods",
          "Writing Programs with Methods",
          "Test Data",
          "Chapter 5 Quiz"
        ],
        "Classes": [
          "What are Classes",
          "Classes we have Used",
          "Creating our own Classes",
          "Instantiating our own Classes",
          "Objects vs Methods",
          "Constructors",
          "Case Study: Student Class",
          "Case Study: Student Class Part 2",
          "Case Study: Fruit Class",
          "Scope Again",
          "Chapter 6 Quiz"
        ],
        "Arrays": [
          "What is an Array",
          "When to use an Array",
          "Array Basics",
          "Array Errors",
          "Creating Arrays",
          "Outputting Arrays",
          "Copying Arrays",
          "For Each Loop",
          "Variable Argument Methods",
          "Arrays with Methods",
          "Parallel Arrays",
          "2 Dimensional Arrays",
          "Conditional Statements",
          "Command Line Arguments",
          "Ragged Arrays",
          "Multidimensional Arrays",
          "Arrays Class Methods",
          "Array List",
          "Case Study: Cards",
          "Case Study: Randomizer",
          "Case Study: Part 1: Building a Sorter",
          "Case Study: Part 2: Binary Search",
          "Chapter 7 Quiz"
        ],
        "Object oriented programming Principles": [
          "What is Object Oriented Programing",
          "Encapsulation",
          "Inheritance",
          "toString method",
          "InstanceOf Operator",
          "Dynamic Binding",
          "Polymorphism",
          "Association vs Composition",
          "Wrapper Classes",
          "Final Keyword",
          "Case Study: Calculator with Arguments",
          "Abstract Classes",
          "Abstract Methods",
          "When to use Abstract",
          "Interfaces",
          "Cloneable Interfaces",
          "Compareable Interface",
          "Abstract vs Interfaces vs Inheritance",
          "Case Study: Little World Part 1",
          "Case Study: Little World Part 2",
          "Chapter 8 Quiz"
        ],
        "Bonus Lessons": [
          "BigInteger and BigDecimal",
          "Date Class",
          "PrintWriter and File Classees",
          "URL Class",
          "Exceptions Part 1",
          "Exceptions Part 2",
          "Chapter 9 Quiz"
        ]
      },
      "requirements": [
        "Have a computer able to install Java",
        "An ability to do basic computing tasks (copying, pasting, running programs)",
        "A passion to learn!"
      ],
      "description": "THE HIGHEST RATED AND ONE OF THE MOST POPULAR JAVA COURSES AVAILABLE\n\nON SALE FOR JUST 24 MORE HOURS!\n\nNOW UPDATED FOR 2018 AND READY FOR JAVA 7, 8, and 9!!\n\nSEE WHAT OTHERS ARE SAYING:\n\n\"Very informational, calm and educational. Direct use of the learned subject allows for easy implementation into the real world application\" 5 Stars -Alex Weber\n\n\"The instructor is very articulate in explaining difficult concepts...Would recommend to those interested in learning Java in an easy user-friendly manner!\" - 5 Stars Bala\n\n\"Practical...yet covering advanced concepts...benefits those looking for quick insights and clarifications\" 5 Stars Sundar\nWould you like to simply drill boring basic concepts with no real life application? If so, this course isn't for you. Or would you rather learn a variety of powerful concepts using modern development techniques while learning each topic with a great deal of depth. If this is you, then together we can discover the power of the Java programming language together. Other courses try to cover a million different topics with little to no depth, or try and spend the entire course on a topic that needs just 20 minutes. In this course we will be covering the most important topics for a Java developer to know. These include, variables, arrays, OOP principles, exception handling, optimization, algorithms, loops, basics of generics, and GUI program design. We will also extensively cover how to design a program and how to make a readable and maintainable program, both essential to building code for either a company or school. Even if you don't have any prior experience with Java or even coding at all, we will be working from the beginning and building our way up. We will explain each topic with increasing complexity so that no matter your programming background, you can extract a benefit from each lesson. We will be using the most popular language in the world and an open source IDE(Integrated Development Environment) that is used by millions of people every day.\n\n\nWhy Java?\nJava is the most popular programming language in the world and is used for the smallest embedded computers to room-sized super computers. It is used throughout the world to build Android applications, desktop program, and server side applications. The compile once, run anywhere motto means that we can create our programs on any type of computer and run it on any other computer with no difficulty. Finally, Java is part of the JVM class of languages such as Scala and JRuby.\n\n\nFormat of the Course:\n\nThis course can best be defined as a project-driven course. This will mean we will be building projects that will be solving real life problems. Some of the examples we will be doing include a leap-year calculator, a complete graphical version of the game blackjack complete with a computer controlled AI, a normal calculator for operations, a mode finder, and addition problem generator. All of these will be done in the code-along format so we can work together to see how to construct each part of the program. If you run into a problem, you will be able to simply look at the code to find the problem. A quiz will be placed at the end of each chapter along with a detailed description for each lesson. These will allow us to test our understanding of the lessons in addition to the case studies. Detailed lessons with explanations complete with live demonstrations will be there for every topic. Additionally, there will be a big emphasis on not just learning how to code, but also how the code works. We will always go into how your computer will process the code for even the seemingly smallest details. Also, we will emphasize how to build readable and maintainable programs that can be easily edited by possible co-workers. This will allow you to easily transition into a company or school where sharing code is expected. We will also have lessons that are sized in a format that is conducive to viewing on mobile devices.\n\nTopics covered: We will be covering everything up to being a intermediate/experienced level programmer. This will include starting from the basics with variables, print statements, and taking input from the user. After this we will add more complexity with the more difficult control statements(if and else) where we will be using the basics of how to design a readable program. We will then add loops which will require the addition of more complex design patterns, and the construction of algorithms. We will cover all major loop types such as for and while loops. Methods and classes will be next, with in depth breakdowns of the conventions in Java that we must follow to make our program readable. We will the start to work with arrays and then add in how to handle exceptions and useful classes like the Date class. Interfaces and the large tenets of OOP design are going to be another major topic. Finally, we will finish by learning how to build complex GUI programs with the BreezySwing package.\n\n\nOther Advantages: I will personally provide detailed response to your questions within a day, compare to others who either don't respond at all or fail to actually respond. In addition there is a 30 day risk free trial so there really is no disadvantage to signing up today!!!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHopefully you'll join all of us on this great journey through one of the greatest programming languages in the world in this authoritative course on Java programming.",
      "target_audience": [
        "Anyone who wants to learn how to code",
        "Anybody with a willingness to learn Java",
        "Anyone who wants to increase their programming skills",
        "Anyone looking to learn how to use Java to build programs",
        "Those looking to brush up on their Java skills"
      ]
    },
    {
      "title": "Bash Shell Programming for Data Sciences: Animated Course",
      "url": "https://www.udemy.com/course/hello-big-data-at-bash/",
      "bio": "Innovative Project-based Animated Linux Command Line Masterclass: Bash Shell Programming Data Mining Science- 7.5 Hours",
      "objectives": [
        "Use Bash to quickly sort, search, match, replace, clean and optimise various aspect of a data set",
        "Use bash in processing real-world data sets (included)",
        "Use Bash commands and scripting",
        "Use Regular Expressions (RegEX) in Bash",
        "Use AWK programming language commands to tweak and format data",
        "Use SED and GREP to quickly search in large-scale data sets"
      ],
      "course_content": {
        "Course Intro": [
          "Welcome!",
          "Why Get this Course?",
          "Introduction",
          "Course Organization",
          "An Interactive Shell for Practicing Bash and Linux Commands"
        ],
        "Tutorial 0: Linux commands": [
          "Linux Terminal",
          "Redirection",
          "Pipe",
          "Alias",
          "Files and folders",
          "Wildcards",
          "Delete",
          "Copy and move",
          "Edit",
          "locate",
          "Find",
          "View",
          "Sort",
          "Archive",
          "Cron",
          "Linux Commands Cheatsheet"
        ],
        "Project 1: University ranking": [
          "Data preview (head command)",
          "Find the colleges in the ranklist (grep, pipe and wc)",
          "Find the number of Institutes from a given and all states (cut and sort)",
          "Finding the correlation between university tuition and ranks (tail and redirect)",
          "Demonstration",
          "Project documentation",
          "Project Dataset (Unirank)",
          "Bash commands quiz"
        ],
        "Project 2: Facebook": [
          "Data preview (head command)",
          "Find the number of status and most popular status entry (cut, sort, grep, awk)",
          "Building a function to find the most vibrant Facebook status (Bash functions)",
          "Demonstration",
          "Project data set (Facebook like and share data)",
          "Project documentation"
        ],
        "Project 3: Cities crime statistics": [
          "Data preview (head and csvlook commands)",
          "Finding rows and columns stats (wc, sed, csvstat)",
          "Finding the top most crime per city (awk)",
          "Finding the best city in Australia (Bash shell programming)",
          "Demonstration",
          "Project data set (Au Crime data set)",
          "Crimestat.sh source code description",
          "Project documentation"
        ],
        "Project 4: Plays and poems texts": [
          "Data preview (head command)",
          "Counting Plays/Poems",
          "Finding plays/poems by each author (complex example)",
          "Find the most frequent words by Shakespeare (Complex project)",
          "Project data set (Plays and poems data)"
        ],
        "Tutorial 1: Bash Shell Scripting!": [
          "Bash Scripting",
          "Hello! Bash",
          "\"Hello World!\" Bash Shell Programming",
          "Variables",
          "Bash variables and functions",
          "Bash command execution and passing arguments",
          "Bash meta characters",
          "Bash quotation basics",
          "Bash read and store user input",
          "Bash redirections",
          "Conditionals",
          "Bash conditional statements",
          "Looping",
          "Arithmatic",
          "Bash `loop` statements",
          "Bash arithmatic operations",
          "Functions",
          "Bash arrays",
          "Project",
          "Download the Bash shell scripting tutorials"
        ],
        "Tutorial 2: RegEx (Regular Expressions)": [
          "Hello! RegEx",
          "Basic Regular Expressions (BRE)",
          "Extended Regular Expressions (ERE)",
          "REGEX character classes",
          "REGEX look arounds",
          "REGEX atomic groups",
          "How to use REGEX in Bash shell scripting?",
          "Download the regular expressions tutorials"
        ],
        "Tutorial 3: AWK scripting": [
          "Hello! AWK",
          "AWK Built-in Variables",
          "AWK built-in functions",
          "AWK useful examples",
          "Download the AWK programming tutorial"
        ],
        "Tutorial 4: SED (Stream Editor)": [
          "Hello! SED - Stream Editor",
          "SED substitutions",
          "SED and regular expressions",
          "SED delete, print and grouping"
        ]
      },
      "requirements": [
        "A Linux based operating system installed on your computer"
      ],
      "description": "THIS IS THE BEST, MOST INNOVATIVE AND THE HIGHEST RATED AWARD WINNING LINUX COMMAND LINE COURSE (ANIMATED TUTORIALS & LINUX COMMAND LINE HD SCREEN CASTS) ON THE UDEMY PLATFORM. AWESOME FIVE STARS ⭐⭐⭐⭐⭐ VIDEOS OF 7.5 HOURS, ALL UPDATED FOR THE 2022.\nThis awesome course is specifically designed to show you how to use the Linux commands and Bash shell programming to handle textual data which can be a csv format data or systems log file. In this course you will  learn Bash by doing projects.\nHowever, you need to understand the fact that Bash may not the best way to handle all kinds of data! But there often comes a time when you are provided with a pure Bash environment, such as what you get in the common Linux based Super-computers and you  just want an early result or view of the data before you drive into the real programming, using Python, R and SQL, SPSS, and so on. Expertise  in these data-intensive languages also comes at the price of spending a  lot of time on them.\nIn contrast, bash scripting is simple, easy to learn and perfect for mining textual data! Particularly if you deal with  genomics, microarrays, social networks, life sciences, and so on. It  can help you to quickly sort, search, match, replace, clean and optimise  various aspect of your data, and you wouldn’t need to go through any  tough learning curves. We strongly believe, learning and using Bash  shell scripting should be the first step if you want to say, Hello Big Data!\nAlso Featured on! popular Data Analytics Portals! Towards Data Science, Code Burst, Devto and so on.\nThis course starts with some practical bash-based flat file data mining projects involving:\nUniversity ranking data\nFacebook data\nAU Crime Data\nText Mining with Shakespeare-era Play and Poems\n(Data sets and PDF text documentations are provided at the end of each section) + Free interactive playgrounds included!\nIf you haven’t used Bash before, feel free to skip the projects and get to  the tutorials part (supporting materials: eBook). Read the tutorials and then come back to the  projects again. The tutorial section will introduce with bash scripting,  regular expressions, AWK, sed, grep and so on. Students purchasing this course will receive free access to the interactive version (with Scientific code playgrounds) of this course from the Scientific Programming School (SCIENTIFIC PROGRAMMING IO). Based on your earlier feedback, we are introducing a Zoom live class lecture series on this course through which we will explain different aspects of Linux command line for Data analytics. Live classes will be delivered through the Scientific Programming School, which is an interactive and advanced e-learning platform for learning scientific coding.\nMONEY BACK GUARANTEE IF NOT 100% SATISFIED!\nWhen you enroll you will get lifetime access to all of the course contents and any updates and when you complete the course 100% you will also get a Certificate of completion that you can add to your resumé/CV to show off to the world your new-found Linux & Scientific Computing Mastery! So What are you Waiting For? Click that shiny enroll button and we'll See you inside. We created here a total of one university semester worth of knowledge (valued USD $2500-6000) into one single video course, and hence, it's a high-level overview.  Don't forget to join our Q&A live community where you can get free help anytime from other students and the instructor. This awesome course is a component of the Learn Scientific Computing master course.\nUDEMY EARLY ACCESS PROGRAM REVIEWS (5 out of 5 Stars):\n\"This is one of the best course I have reviewed in Udemy. All the chapters are very useful. The instructor explained exactly what you need  to use Bash as your data analysis tool in your pocket. I look forward more  coursed from this Instructor. The instructor is very experienced, explanations are  on point. Than you for creating a great course.\" -  Tarique Syed\n\"The instructor was very engaging. Changed a boring, hard-to-understand tool into something usable and easy-to-use, all the while making it fun to learn.\" - Prat Ram\"Well done. Well - structured and explained course. Will definitely recommend the course to my course. From my point of view, everything was OK in the course.\" - Sem Milaserdov  \"Overall, the course delivered what promised with a good resource for those who want to learn and do more. The course is filled with resource and the educator attached his own book on the subject for the learners.\" - Afshin Kalantari\n\"It's a very well organized course, from the background, basic Linux cli which everyone should be to build  data processing scenarios. wonderful class.\" - Charley Guan",
      "target_audience": [
        "Students who want to learn Bash and the command line to improve their career prospects",
        "Researchers who want to add Bash and other command line tools to their bag of tricks",
        "Scientists who want to learn to explore and analyze the data that their lab generates",
        "Journalists who want to polish their reporting by analyzing publicly-available datasets",
        "Anyone wants to deal with Big Data"
      ]
    },
    {
      "title": "Python for Absolute Beginners",
      "url": "https://www.udemy.com/course/beginner-python/",
      "bio": "The foundations you need to master the most in-demand programming language and truly understand what is going on",
      "objectives": [
        "Python",
        "Programming",
        "Python Best Practices",
        "Python Basics",
        "Basics of Python"
      ],
      "course_content": {
        "Introduction": [
          "Course outline",
          "How to get help"
        ],
        "Machine Setup": [
          "Introduction to Machine Setup",
          "Installing and using Python on Windows [Follow Along]",
          "Installing and using Python on macOS [Follow Along]",
          "Installing VSCode on Windows [Follow Along]",
          "Installing VSCode on macOS [Follow Along]",
          "Setup VSCode for Python [Follow Along]",
          "Creating Project Folder [Follow Along]",
          "VSCode Overview",
          "Common Installation Issues (Windows)"
        ],
        "Command Line": [
          "What is the Command Line?",
          "Using Command Prompt - Windows [Follow Along]",
          "Using the Terminal on macOS [Follow Along]"
        ],
        "Python Basics": [
          "Python Basics Overview",
          "Python Versions",
          "How to run Python",
          "Hello World [Follow Along]",
          "Comments [Follow Along]",
          "Variables and Duck Typing",
          "Variables in practice [Follow Along]",
          "Built-in Functions",
          "PEP-8 Guidelines",
          "Python basics quiz"
        ],
        "String Manipulation": [
          "Introduction to Python String Manipulation",
          "Format Function [Follow Along]",
          "Formatted String Literals (F-String) [Follow Along]"
        ],
        "Control Flow": [
          "Introduction to Python Control Flow",
          "Conditions",
          "If statements [Follow Along]",
          "For loops [Follow Along]",
          "While loops [Follow Along]",
          "Control Flow Exercise"
        ],
        "Functions": [
          "Introduction to Functions",
          "Writing first function [Follow Along]",
          "Function docstrings",
          "Arguments and Parameters",
          "Using Arguments and Parameters [Follow Along]",
          "Function scope",
          "Testing function scope [Follow Along]",
          "Return statement",
          "Using the return statement [Follow Along]",
          "Functions Coding Exercise"
        ],
        "Debugging": [
          "Introduction to debugging",
          "Common issues",
          "Using the debugger [Follow Along]",
          "Debugging quiz"
        ],
        "Data Structures": [
          "Introduction to data structures",
          "Introduction to lists",
          "Using lists [Follow Along]",
          "Introduction to sets",
          "Using sets [Follow Along]",
          "Introduction to tuples",
          "Using tuples [Follow Along]",
          "Introduction to dictionaries",
          "Using dictionaries [Follow Along]",
          "Iterating through data [Follow Along]",
          "Data Structures Coding Challenge"
        ],
        "Modules": [
          "Introduction to modules",
          "Creating a module [Follow along]",
          "Packages and importing",
          "Create a package [Follow along]",
          "Modules Coding Challenge"
        ]
      },
      "requirements": [
        "Internet Connection",
        "Positive Attitude",
        "Windows or macOS Machine"
      ],
      "description": "Welcome to Python for Absolute Beginners: These are the MUST learn foundations.\nThis course is designed to teach an absolute beginner the basics of Python.\nPython is a language that needs no introduction. It’s incredibly powerful, versatile, fast and it’s easy to learn.\nHowever, given its rapid rise in popularity over the last few years, there are loads of tutorials and guides out there which teach bad practices.\nOur goal is to change that, by creating a course which gives you a head start, by teaching best practices and underlying concepts.\nThis course covers:\nThe foundations of Python such as how to setup your machine, using the tools, syntax, packages and virtual environments\nHow to organise your code using conditions, functions and modules\nWorking with data and large files, and Object Oriented Programming\nHandling errors and exceptions, using various debugging tools\nConnectivity with third party services\nTo take this course, you will need:\nAccess to a computer running Windows or macOS\nAn internet connection\nA positive can-do attitude\nThis course combines the best of both theoretical explanations and hands-on coding challenges, into a complete beginner course to get you started with Python.\nAs we emphasise in the trailer, a positive attitude is needed for programming. Although this course is designed for beginners, each person learns at their own pace and style.\nProgramming is a hard concept to grasp in the beginning, but with repeated practice, patience, and self-love you will come to understand it.\nDon’t be discouraged if you have to re-watch sections over-and-over again.\nReach out to other developers, especially those at the same level as you.\nI taught myself how to code as a child by connecting with other developers online. I shared problems with them, studied their code, shared my code, and applied the problem solving method covered in the introduction of this course (it’s free to watch).\nI also helped other developers fix their problems, which was key for cementing my knowledge and contributing to the community.\nSo, if you get stuck don’t be afraid to ask questions, and if you know the answer to someone else's question, don’t be afraid to answer it. This will help you learn faster, and build your profile in the developer community.\nAnd if no one else answers, I do my best to respond to all students' questions within 7 days.\nReady to get started?\nSee you in the course.",
      "target_audience": [
        "Beginner Python developers",
        "Developers",
        "Beginners"
      ]
    },
    {
      "title": "Java - A 3-Step Process to Master Java in 7 days for Newbies",
      "url": "https://www.udemy.com/course/java-a-3-step-process-to-master-java-in-7-days-for-newbies/",
      "bio": "Master Java Coding with a 3-Step Process and Step-by-Step Examples! No previous programming or Java experience required.",
      "objectives": [
        "Learn how to develop impressing Java applications in a few minutes/ hours.",
        "Be able to sit for and pass the Oracle Java Certificate exams.",
        "Learn the basic Java skills needed to apply for Java developer positions in just 7 days.",
        "Gain enough experience to pass a core Java programming interview and perform well on the job."
      ],
      "course_content": {},
      "requirements": [
        "You will not need any any prior knowledge - so get started now!",
        "You should be committed to run through the course and become knowledgeable about Java.",
        "Nothing else! It’s just you, your computer and your hunger to get started today!"
      ],
      "description": "Master Java Coding! Learn the basic of computer programming, variables, if-statements and decision making, loops, funtions and files input-output, XML Processing and Database Handling.\nAfter this course you will be able to code your fancy app for your work or your personal porfolio. Learning Java will give you more opportunities for jobs and career advancement because Java is one of the most requested skills in 2020!\nThis course requires no previous programming or Java experience. If you’ve never programmed a computer before, or if you know another programming language and want to learn Java, this course will teach you everything you need.\nJava is one of the emerging technologies that researchers and industry leaders around the world have identified. This course attempts to introduce students to the fundamentals of coding as they apply to Java. The course begins with an introduction to coding before moving on to present developmental-based algorithms in Java. The course then covers advanced coding challenges and step-by-step examples to solve them.\n\n\nRead what other students are saying about \"Java - A 3-Step Process to Master Java in 7 days for Newbies\" course:\nGreat course, excellent content for totally beginners like me.  (Karakoumis  , 5 stars)\nIt was a very good course. I had lots of fun coding with a great instructor!  (Zotou  , 5 stars)",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous coding experience.",
        "Anyone who would like to be an Oracle certified Java developer.",
        "Anyone with the desire to learn Java programming."
      ]
    },
    {
      "title": "Scratch Programming - Basic to Expert",
      "url": "https://www.udemy.com/course/abdullah_scratch-programming/",
      "bio": "Learn to program, create games and have fun in Scratch 3.0. For beginners, parents and teachers!",
      "objectives": [
        "Learn the basics of Programming",
        "Program your own interactive stories, games, and animations",
        "Learn to think logically, reason systematically and work creatively",
        "Understand complex computer science concepts by applying them in code",
        "Go beyond Visual based language and start with Text based Languages such as Java, C#"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming knowledge is required"
      ],
      "description": "In this course, we'll learn to code and start with the basics of programming. Developed by MIT, Scratch is so fun to learn that it makes programming seem like a game.\nWe'll learn Scratch by first looking at all the code blocks in each category one by one and then we will go hands on and make tons of fun games.\nThis is the most in depth course available at Udemy as it not only shows you how to create games but also teaches you each and every code block available to us in Scratch Programming and then with the help of quizzes and by using concrete examples, it teaches you the difference between code blocks and why should we use one code block over the other. Gaining theoretical knowledge by watching lectures and doing quizzes will then help you to think logically and with that knowledge, you can practically write your own code.\nThe content is designed to be fun! We will learn to create cool animations and create some of the most popular games: Balloon Pop, Shark Attack, Whack a mole, Alien Invaders, Flappy Bird and many more. These games are handpicked to effectively learn computer science and programming topics while having fun along the way. I will update the course on a regular basis with new content and challenges!\nThis course is designed for\nParents or teachers who want to give their children the best skills and most fun\nBeginners who want to learn to code games\nAnyone new to programming who doesn't know where to start\nI had fun creating this course and really excited to welcome you in the growing field of Computer Science. Can't wait to have you in the course!\nThe course is regularly updated with new material, quizzes, tips and tricks that you can use in your games and projects!",
      "target_audience": [
        "Absolute beginners or no programming experience",
        "For parents and teachers",
        "Anyone who wants to learn how to code"
      ]
    },
    {
      "title": "Learn Collections in C# and .NET",
      "url": "https://www.udemy.com/course/learn-collections-in-c-and-net/",
      "bio": "A Masterclass Course on Collections in C# and .NET",
      "objectives": [
        "Have a solid and practical understanding of Collections in C# and .NET",
        "Jump into learning about common collections, including working with arrays, the HashSet, and the SortedSet."
      ],
      "course_content": {},
      "requirements": [
        "PC or Mac",
        "Working files are included, allowing you to follow along with the author throughout the lessons."
      ],
      "description": "In this Collections in C# and .NET training course, expert author Jeremy McPeak will teach you how to use the collection classes in the .NET framework. This course is designed for users that are already familiar with the basic fundamentals of C# and the .NET framework.\n\nYou will start by learning about attributes, then jump into learning about common collections, including working with arrays, the HashSet, and the SortedSet. From there, Jeremy will teach you how to create your own collection with Collection, bind data with BindingList, and prevent collection modifications with ReadOnlyCollection. Finally, you will learn about concurrent collections and how to write iterators.\n\nOnce you have completed this computer based training course, you will have gained a solid understanding of what the collection classes are in the .NET framework and how to use them. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Programmers and Developers of all levels",
        "This course is designed for users that are already familiar with the basic fundamentals of C# and the .NET framework."
      ]
    },
    {
      "title": "Java Basics in Practice with 35+ Exercises & Quizzes - 2025",
      "url": "https://www.udemy.com/course/java-intro-in-practice-iter-academy/",
      "bio": "Java Basics: IDEs, Data Types, Variables, Operators, if-else, switch Statements, Loops, Methods, Arrays, Strings",
      "objectives": [
        "Java",
        "Java Development Kit (JDK) setup",
        "Basic Java program execution",
        "Integrated Development Environment (IDE) understanding",
        "Primitive data types usage",
        "Variable declaration and initialization",
        "Type casting",
        "Primitive and non-primitive data type differentiation",
        "Array and string declaration",
        "Variable naming conventions",
        "Variable scope",
        "Console output",
        "Console input using the Scanner class",
        "Arithmetic operators usage",
        "Comparison and logical operators usage",
        "Operator precedence understanding",
        "if-else statement usage",
        "Switch statement usage",
        "Loop usage (for, while, do-while)",
        "Loop control (break, continue)",
        "Method definition and invocation",
        "Method overloading",
        "Recursion in methods",
        "Array manipulation",
        "String immutability understanding",
        "String concatenation",
        "String comparison",
        "String formatting",
        "String pool concept"
      ],
      "course_content": {},
      "requirements": [
        "Good news! There are no prerequisites for this course - it's perfect for anyone who's just getting started with programming. You don’t need any prior coding experience, and we’ll guide you through every step from the very basics.",
        "A computer (Windows, macOS, or Linux) to write and run Java programs.",
        "Basic computer skills, like installing software and managing files.",
        "Excitement to learn Java and have fun exploring the world of coding!"
      ],
      "description": "Welcome to the World of Java Programming!\nWelcome to our Java Basics Course! We are happy to have you here as you begin your journey into programming or grow your skills. This course is perfect for everyone—whether you’re just starting, thinking about switching careers, or simply curious about coding. You don’t need a computer science degree to join—just a desire to learn.\n\n\nWhy Take This Course?\nAt ITER Academy, we have already taught over 1,000 students in classrooms. Now, we are bringing all that knowledge and experience online, so more people can benefit. Your teacher, Andrii Partola, is a Senior Java Engineer who works with Java every day. He uses Java to create powerful and complex programs for real companies. He has taken his real-world experience and turned it into lessons that are easy to understand and fun to follow.\n\n\nWho Can Learn Java with Us?\nThis course is made for everyone.\nComplete beginners: Even if you’ve never written a single line of code, this course will guide you step by step.\nCareer changers: If you want to start a new career in tech, this course will give you the tools you need.\nAnyone curious about programming: If you’ve always wanted to try coding, this is a great place to start.\n\n\nLearn with Real-Life Examples\nLearning is easier when you can see how things work. That’s why this course is full of real-life examples. You’ll see how Java is used to solve problems, so you can understand not just what you’re learning, but also why it’s useful. These examples will help you remember things better and prepare you to use Java on your own.\n\n\nQuizzes to Check Your Knowledge\nTo make sure you really understand the material, this course includes quizzes after many lessons. These quizzes will help you review important ideas and see how much you’ve learned. They’re a fun way to test yourself and feel confident before moving on to the next topic.\n\n\nPractice Coding with Exercises\nThe best way to learn programming is by writing code yourself. That’s why this course has lots of coding exercises. These exercises give you a chance to practice what you’ve learned and solve problems like a real programmer. By doing this, you’ll get better and more confident with every lesson.\n\n\nLessons Designed for Success\nWe didn’t just create this course from scratch. We studied many other popular courses to learn what works best. Every lesson in this course is carefully organized, so it’s easy to follow and makes sense step by step. Each lesson is packed with useful information, so you learn quickly without wasting time.\n\n\nFree Access to All Code\nAll the code written in this course is available on GitHub. You can download it, use it, and practice with it whenever you need. This means you’ll always have access to examples to help you as you keep learning.\n\n\nWhy Choose ITER Academy?\nPractical knowledge: Learn the skills that are used in real programming jobs.\nSimple and clear lessons: No confusing words or hard-to-follow explanations.\nStep-by-step structure: Each lesson builds on the last one, so you never feel lost.\nExperienced teacher: Learn from a professional Java engineer with years of experience.\n\n\nStart Learning Today\nWith easy-to-follow lessons, plenty of examples, quizzes, and exercises, this course gives you everything you need to become confident in Java programming. Join us today and let’s start your journey into the world of coding together!",
      "target_audience": [
        "Newcomers to programming: You’ve never written a line of code before, and you’re eager to start with one of the most widely-used languages - Java!",
        "Students or professionals looking to build a foundation in programming to advance in fields like software development, data science, or game development.",
        "Self-learners who enjoy online learning and want a structured, beginner-friendly path to mastering Java.",
        "Career changers who are looking to enter the tech industry and want to start their journey with a strong foundation in Java.",
        "Hobbyists and tinkerers who want to learn how to build small programs and understand how coding works."
      ]
    },
    {
      "title": "Learn to Code in JavaScript",
      "url": "https://www.udemy.com/course/learn-to-code-in-javascript/",
      "bio": "Introduction to JavaScript, the first step in web development.",
      "objectives": [
        "Learn coding using JavaScript.",
        "Introduction to programming with the world's most popular language.",
        "Learn important concepts and techniques which can be applied to real-world professional situations.",
        "Learn all the important language aspects of JavaScript.",
        "Get an introduction to how JavaScript can interact with a web page.",
        "Learn JavaScript programming from the ground up!"
      ],
      "course_content": {},
      "requirements": [
        "You should have some familiarity with HTML. Very basic though.",
        "You should be interested web application developement."
      ],
      "description": "JavaScript is the primary language used to develop interactive and dynamic front-end web applications. There are multiple web frameworks that use JavaScript (or TypeScript*) such as Angular, Vue, React, Ember, Knockout. This course is intended to teach you the most important features of the JavaScript language so that you can then move on to learning about web frameworks. Because JavaScript primarily lives (and is executed) in the browser, this course will also touch on web topics such as HTML and the Document Object Model (or DOM). In this course we'll talk about:\nRunning a JavaScript program.\nHelloWorld\nPrimitive data types\nOperators\nStrings\nDates\nArrays\nConditionals\nLooping\nObjects\nFunctions\nClasses and Modules\nAt the end of this course you will have a thorough understanding of the JavaScript language and you will have dipped your toe into connecting this to a web page.\nI am truly excited to share my knowledge and my enthusiasm for developing software with you. Come on this journey and I will do my best to help you learn, enjoy, and finally become part of a community of developers who make this world go round!\nThis course comes with detailed explanations of each concept along with working examples for each lecture and a Verifiable Certificate of Completion.\n* TypeScript is a superset of JavaScript and adds some important concepts but all TypeScript is compiled into JavaScript for execution.",
      "target_audience": [
        "Beginning programmers who are interested in building we applications."
      ]
    },
    {
      "title": "Python Coding Intermediate: Python Classes, Methods and OOPs",
      "url": "https://www.udemy.com/course/python-coding-intermediate-python-classes-methods-and-oops/",
      "bio": "Learn Python Object Oriented Programming step-by-step guide to classes, Inheritance and Error Handling : Code Reusing",
      "objectives": [
        "Master Principles And Understanding Of Object Oriented Programming In Python",
        "You Will Learn How To Reuse Code For New Projects Implimentations",
        "Learn About 4 Pillars Of Object Oriented Programming!",
        "You Will Learn Each Important Topic - Classes, Object, Inheritance, Abstraction And More With Real-world Examples",
        "Learn To Write Clean And Proper Python Code With OOPs Concept.",
        "Apply How To Handle Error And Exceptions on Run Time With Python",
        "Learn to Apply Modules and Packages Library",
        "Working with Files like .csv File Import Using Pandas Module for Data Science",
        "Participate on Coding Exercises to test your real time learning skills"
      ],
      "course_content": {},
      "requirements": [
        "You Should Be Familiar With Basic Python Fundamentals",
        "Having Basic knowledge on Python, You will learn everything you need to know on OOPs",
        "No programming OOPs experience needed. You will learn everything you need to know"
      ],
      "description": "Take your Python skills to the next level with \"Python Coding Intermediate: Python Classes, Methods, and OOPs.\" This course is designed for individuals who have a basic understanding of Python and are ready to dive deeper into more advanced concepts, specifically Object-Oriented Programming (OOP).\n\n\nIn this course, you'll learn how to create and work with Python classes and methods, which are fundamental to writing efficient, modular, and maintainable code. You’ll explore key OOP principles like inheritance, encapsulation, and polymorphism, and understand how these concepts allow you to design and structure your programs effectively. You'll also learn about class constructors, instance variables, and the concept of self in Python, and how to build reusable code through class inheritance.\n\n\nThe course is packed with hands-on examples and projects, allowing you to apply your knowledge through real-world coding challenges. By the end of the course, you’ll be able to create and manage classes, handle multiple objects, and build scalable applications with ease.\n\n\nWhether you’re aiming to advance your career in software development, game development, or data science, mastering OOP concepts will enable you to solve complex problems more efficiently. This course is perfect for those looking to gain a deeper understanding of Python and improve their coding practices.\n\n\nJoin now and master Python classes, methods, and OOP to take your coding skills to new heights!",
      "target_audience": [
        "Beginner Python developers curious about data science",
        "Anyone who want learn Python skills on Object Oriented Programming (OOPs)",
        "Anyone who want to grasp the concept with real world example coding.",
        "Anyone who wants to become a Full stack web developer",
        "Anyone who wants to become independent programmer"
      ]
    },
    {
      "title": "Developing Smart contracts with Solidity",
      "url": "https://www.udemy.com/course/developing-smart-contracts-with-solidity/",
      "bio": "Learn how to develop smart contracts and DApps on the Ethereum Network using solidity.",
      "objectives": [
        "Learn how Ethereum is different from Bitcoin, and what Ethereum has introduced to the blockchain ecosystem.",
        "Understand the basics of Ethereum Virtual Machine (EVM) and how decentralization can potentially disrupt various industries.",
        "Understand the basic components of the Ethereum Blockchain, such as gas, transaction and consensus.",
        "Learn the basic structure of a smart contract, and use solidity to write your first smart contract.",
        "Take a deeper dive into solidity to learn more about the language, and be able to write more complex smart contracts.",
        "Learn code composability in solidity: inheritence, interfaces and fallback functions.",
        "Use solidity to develop practical smart contracts that can be used to control a \"parking lot\" in a hypothetical smart city."
      ],
      "course_content": {},
      "requirements": [
        "You need a Mac, PC or a linux system with good internet and a browser (Chrome, Brave or Firefox) that can run the Remix IDE.",
        "Basic knowledge of web technologies like JavaScript will help, but it is not required.",
        "Basic Knowledge of common programming ideas like integers, strings, booleans, arrays and function will help, but they are not required"
      ],
      "description": "April 2021 update: A section on breaking changes for solidity version 0.8 added\n*********************************************************************************************************************\nWhy learn Solidity?\nBlockchain is one of the most disruptive technologies of this decade. It is poised to drastically change many industries in the coming years. Institutional money is pouring in this space and many believe that cryptocurrency value and market share dynamics will be \"power law distributed\" meaning that a few cryptocurrencies will capture the majority of value. There is no doubt that Bitcoin and Ethereum will be part of that few.\nWhile bitcoin introduced trustless distributed ledger to the world, ethereum introduced \"distributed computational layer\" in conjunction to the distributed ledger opening up many possibilities. This brought about a revolution in the space, which is spearheaded by Ethereum. This extremely fast growing industry needs a lot of developers to support the growing ecosystem. There is a new project almost every week. This process only accelerated in 2020 with the emergence of DEFI - Decentralized Finance. With this abundance of projects and shortage of developers, it is not uncommon for quality developers to command high six figure salaries.\nThis is a golden opportunity to break into the space and jumpstart a profitable career as a blockchain developer on Ethereum network and beyond. Solidity is the most popular language used for developing on Ethereum. Therefore, in this course we will be focusing on smart contract development using solidity.\nWith this class, you take the first step of becoming a competent smart contract engineer.\nWho is this course for?\nBeginners who want to learn about programming on ethereum blockchain.\nExperienced developers who want to learn about developing smart contracts.\nTraders and Investors who want to learn more about the technology that powers the product they invest in.\nBlockchain enthusiasts who wants to learn how things work behind the scene.\nWhat will be covered in this class?\nLearn how Ethereum is different from Bitcoin, and what Ethereum has introduced to the blockchain ecosystem.\nUnderstand the basics of Ethereum Virtual Machine (EVM) and how decentralization can potentially disrupt various industries.\nUnderstand the basic components of the Ethereum Blockchain, such as gas, transaction and consensus.\nLearn the basic structure of a smart contract, and use solidity to write your first smart contract.\nTake a deeper dive into solidity to learn more about the language, and be able to write more complex smart contracts.\nLearn code composability in solidity: inheritence, interfaces and fallback functions.\nUse solidity to develop practical smart contracts that can be used to control a \"parking lot\" in a hypothetical smart city.",
      "target_audience": [
        "Beginners who want to learn about programming on ethereum blockchain.",
        "Experienced developers who want to learn about developing smart contracts.",
        "Traders who want to learn more about the technology that powers the product they invest in.",
        "Blockchain enthusiasts who wants to learn how things work behind the scene."
      ]
    },
    {
      "title": "Complete JavaScript Full Stack Course 2025 From A - Z",
      "url": "https://www.udemy.com/course/complete-javascript-full-stack-course/",
      "bio": "The Complete JavaScript Course for Everyone! Become Master in JavaScript By Building More Then 10 Real Life Projects.",
      "objectives": [
        "JavaScript Variables",
        "JavaScript Operators",
        "Conditional Statements",
        "JavaScript Loops",
        "String in JavaScript",
        "JavaScript Objects",
        "JavaScript Functions",
        "JavaScript Arrays",
        "ES6, ES7 and ES8 Features",
        "Error Handlings in JavaScript",
        "Regular Expression",
        "Object Oriented JavaScript",
        "Asynchronous Functions",
        "DOM",
        "Web Storage API",
        "MongoDB",
        "REST API with Mongoose",
        "User Authentication and Authorization",
        "Node JS With Project",
        "Express JS With Project",
        "React JS With Project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome to the Course",
          "How to Get The Most Out Of This Course",
          "Need Your Support",
          "Total Project Source Code and Excise File"
        ],
        "Variables and Data Types": [
          "Declare a Variable",
          "Uses of Let and Const",
          "Primitive Data types",
          "Reference types: Object (Basics)",
          "Reference types: Array (Basics)",
          "Reference types: Function (Basics)",
          "Template Literals",
          "Exercise - Person Object"
        ],
        "JavaScript Operators": [
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators",
          "Equality Operators",
          "Exercise Swap two numbers"
        ],
        "Conditional Statements": [
          "If else",
          "Switch case",
          "Ternary Operators",
          "Exercise Fizz Buzz",
          "Exercise Fizz Buzz (With Ternary Operators)",
          "Exercise Our Grading System",
          "Switch case with multiple logical operators"
        ],
        "JavaScript Loops": [
          "For loop",
          "While loop",
          "Do while loop",
          "For in loop",
          "For of loop",
          "Break and continue",
          "Infinite loops",
          "Nested Loops"
        ],
        "String in JavaScript": [
          "String Basics",
          "String Methods: charAt, toUpperCase, toLowerCase, includes, startsWith, endsWith",
          "String Methods: Search, IndexOf, lastIndexOf",
          "String Methods: toString, Concat, split",
          "String Methods: slice, subStr, subString",
          "Escape Sequences",
          "String Immutability"
        ],
        "Objects - The Core of Javascript & JSON": [
          "Object Basics with Dot Bracket Notation",
          "Adding, Modifying Deleting Properties",
          "Object Methods This Keyword",
          "Traversing Object Entries",
          "Exercise Total Salary",
          "Object Destructuring",
          "Cloning an object",
          "Math Object",
          "JSON Data Format"
        ],
        "JavaScript Functions": [
          "Function Basics",
          "Default Parameters",
          "Function as an Expression",
          "Arrow Functions",
          "Rest Parameter"
        ],
        "JavaScript Arrays": [
          "Array Basics",
          "Adding Elements",
          "Removing Elements",
          "Finding Elements (Primitive Type)",
          "Finding Elements (Reference Type)",
          "Iterating an array",
          "Sorting and Reversing an array",
          "Testing the elements of the array",
          "Combining and Slicing the array",
          "Spread Operators",
          "Joining Array",
          "Mapping an array",
          "Filtering an array",
          "Reducing an array"
        ],
        "Other ES6, ES7 and ES8 Features": [
          "Array Object Destructuring",
          "Data Structure: Set-",
          "Data Structure: Map",
          "Weak Set + Weak Map",
          "Module (Import Export)",
          "padStart, padEnd TrimStart, TrimEnd"
        ]
      },
      "requirements": [
        "A Windows, MacOS, or Linux-based computer is required",
        "Basic Idea in HTML & CSS"
      ],
      "description": "JavaScript is the most popular programming language for both front-end and back-end web development. Applications for JavaScript span from interactive websites to the Internet of Things, making it a great choice for beginners and experienced developers looking to learn a new programming language.\nWith this course, you are going to learn beyond just the basics like most online courses. You won't just learn patterns, techniques and best practices.\nMost importantly, you will become a top 10% javascript developer by going beyond the superficial basics that a lot of courses cover. We are going to dive deep and come out the other end a confident advanced javascript developer. I guarantee it. Whether you are a web developer, a React, Vue.js developer (frontend developer), or a Node.js backend developer, you will benefit from this course because Javascript is at the core of these professions.\nIn this course, I have shared almost every topic of JavaScript with live examples. First, you will learn basic all concept then you will create a project by this exprience. I think that is the best way to learn any programming langluage.\nThere have so many features but I want to share some of them with you.\nIn this course, you will learn almost everything like\nJavascript Variables and Data Types\n\n\nJavaScript Operators\nConditional Statements\nJavaScript Loops\nString in JavaScript\nJavaScript Objects\nJavaScript Functions\nJavaScript Arrays\nES6, ES7 and ES8 Features\nError Handlings in JavaScript\nRegular Expression\nObject-Oriented JavaScript\nAsynchronous Functions\nDOM\nWeb Storage API\nand much more.\n\n\nIn this course, you will not just learn you actually doing it. Learn and apply this on a live project with me.\nSound Great right?\n\n\nClick the \"Enroll Now\" button at the top right now!\n\nI am excited to see you on the course!\nSincerely,\nKazi Ariyan",
      "target_audience": [
        "Take this course if you want to gain a true and deep understanding of JavaScript",
        "Take this course if you want to get started with programming: JavaScript is a great first language!",
        "Take this course if you're interested in using a library/framework like React, Vue or Node in the future",
        "Anyone looking to understand and master Javascript"
      ]
    },
    {
      "title": "Core Java Programming from Scratch to Advanced",
      "url": "https://www.udemy.com/course/core-java-fundamentals/",
      "bio": "OOPs, Classes, Controls, Exceptions, Collections, Anonymous Inners, Multithreading Essentials, Functional Prg, Streams",
      "objectives": [
        "Setup development environment to start Java coding on your own Windows machine",
        "Work on Java IDE Eclipse/IntelliJ IDEA/Notepad++, Code/Compile/Test Java programs",
        "Hands-on coding approach",
        "Code Java Classes, Constructors, Keywords",
        "Declare/use Variables, Datatypes, Operators",
        "Code Control Statements, Arrays and Loops",
        "Code Methods, Access Modifiers, Exception Handling",
        "Apply Real World OOP concepts",
        "Essentials of Multithreading, Producer-Consumer Problem Solution",
        "Coding Lab Assignments, Fun Quizzes",
        "Use Collections framework",
        "Code Abstract Classes and Interfaces",
        "Lab assignments, Quizzes, Crack Java Programming Interviews",
        "Functional Programming with Interfaces and Streams"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction Quiz"
        ],
        "Setup development environment - Part 1": [
          "What is and Why development environment?",
          "What is and Why development environment?",
          "Installing JDK 1.8",
          "HelloWorld in your favorite text editor (TextPad, Notepad++)"
        ],
        "Java Language Fundamentals": [
          "Java Class Outline",
          "Java Classes at Runtime",
          "Java Classes at Runtime Quiz",
          "Constructors and their Types",
          "Constructors and their Types lab Quiz",
          "Java Language Keywords",
          "Java language keywords",
          "Variables their Data Types and Scopes",
          "Variables_their_Data_Types_and_Scopes_Quiz",
          "Java Operators their types and Expressions",
          "Java Operators their types and Expressions Quiz",
          "Java Control Statements",
          "Java Control Statements Quiz",
          "Getting input data from the user",
          "Anonymous Inner Classes"
        ],
        "Arrays and Loops": [
          "Arrays_and_Loops",
          "Arrays_and_Loops_Quiz"
        ],
        "Setup development environment - Part 2": [
          "Setup_Development_Environment-2",
          "Setup development environment - 2 Quiz"
        ],
        "Java Methods": [
          "Methods",
          "Java Methods Quiz",
          "Access modifers",
          "Access modifers Quiz"
        ],
        "Exception Handling": [
          "Exception Handling",
          "Exception Handling Quiz"
        ],
        "Object Oriented Programming concepts": [
          "Object Oriented Programming Concepts",
          "Object Oriented Programming Quiz"
        ],
        "Abstract Classes and Interfaces": [
          "Abstract Classes and Interfaces",
          "Abstract Classes and Interfaces Quiz"
        ],
        "Collections framework": [
          "Java Collections Framework (JCF)",
          "Java Collections Framework Quiz"
        ]
      },
      "requirements": [
        "Basic computer skills: keyboard typing, mouse, command prompt.",
        "Working Computer. Minimum processor i3, 32/64bit and RAM 4GB Windows 7 or higher",
        "JDK 11+",
        "Eclipse and IntelliJ IDEA",
        "Internet Connection"
      ],
      "description": "Do you want to learn how to code in Java programming language, compile, test, debug and package it and much more? Using your own computer with an internet connection; JDK version 8, Notepad++, Eclipse and Windows.\nJava is used to create Core, Desktop, Web based, Mobile applications and supported on the many other types of devices, software and hardware platforms; popular applications servers Oracle WebLogic, IBM WebSphere, Apache-Tomcat and Android development platforms supports it.\n\n\nTarget students for this Course:\nThis course is targeted for students who have got no programming skills and beginning to learn Core Java Fundamentals on Windows\nThose who are committed to constantly learn and improve themselves and those who are planning to enter the job market for an entry level Java programmer jobs\nYou will know how to apply real world OOPs concepts, code Abstract Classes and Interfaces, Collections framework\nA professional who wants to become a better programmer by improving your skillset.\nThen this course is for YOU!\n\n\nWe will learn about:\nClasses, Anonymous Inner Classes, Constructors, Keywords\nVariables, Datatype, Operators\nControl Statements, Arrays and Loops\nCode Methods, Access Modifiers, Exception Handling\nOOPs in real world, code Abstract Classes and Interfaces, Collections framework\nMultithreading essentials, Producer-Consumer Problem and Threading concepts\n\n\nFunctional Programming, Lambda Expressions, Streams\n\nDuring the course, I will support you with theory and concepts. It includes hands-on demos, quizzes, assignments; to challenge you as a part of learning process.",
      "target_audience": [
        "This is an in-depth course is targeted for students having NO prior programming skills and are beginning to learn Core Java Programming on Windows",
        "Those who are committed to constantly learn and improve themselves and those who are planning to enter the job market for an entry level Java programmer jobs",
        "This course is NOT suited for the people experienced with coding in Java programming",
        "This course is suited for the students who have taken video courses online in the recent past"
      ]
    },
    {
      "title": "Cracking Python Interview Questions On Programming",
      "url": "https://www.udemy.com/course/cracking-python-interview-questions-on-programming-12-hrs/",
      "bio": "Cracking Python Interviews: Automation and Development ( 12 hrs of python interview questions on programming)",
      "objectives": [
        "Answering Approach to python programming interview questions",
        "Confidence in resolving the python programming questions in the interviews. Confidence in clearing interviews.",
        "Ability to explain each and every line in the python program",
        "Ability to understand each and every line of the python code base",
        "Anybody who takes up this course will be able to crack python interviews on programming"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview"
        ],
        "Variables": [
          "how is char, integer, float and a string variable created and printed in python",
          "How a user function is defined in python ?"
        ],
        "Tuples": [
          "create a tuple with values belonging to single datatype and print the values.",
          "create a tuple with values belonging to mixed datatype and print the values",
          "create a tuple which contains the following:",
          "Explain the concept of tuple packing and tuple unpacking",
          "define a tuple which contains a string value. when queried, the tuple should be",
          "my_tuple = ('p','z','r','q','i','t'), if we print my_tuple[6], does it print '0'",
          "my_tuple = ('a', 'l', 'g', 'o', 'r', 'i', 't', 'm') use slicing and print l g o",
          "can we convert tuples to list and vice versa ?",
          "write a pgm to check whether a given element is present in the tuple",
          "can we convert tuples to list, from list to tuples and back to list from tuples",
          "using print statement do the following:"
        ],
        "Lists": [
          "Write a pgm to print a new list which contains all the 1st chars in the i/p list",
          "write a program to replace each string with an integer value in the given list",
          "Explain the logic of the solution which prints all duplicated values in a list",
          "write the program which prints all duplicated values in a list",
          "print True if the first element or last element is divisible by 4 in the list",
          "print True if the first and last elements are equal and odd numbers in the list",
          "print True if the sum of the first and last elements  are equal in the two lists",
          "Write a program to print the sum of all the elements in the given list",
          "Write a program to print a new list by doing a left rotate on the given list",
          "Write a program to find the maximum number from the given list of numbers",
          "Given two lists x and y, print two new lists as output which includes",
          "Write a program which prints all elements which are multiples of 4"
        ],
        "Shallow Copying And Deep Copying": [
          "Given a list   colours1 = [\"red\", \"green\"] with the help of a new list, modify",
          "Given a list list1 = ['a','b','c','d‘] with the help of 'slice' construct modify",
          "Given a list, lst1 = ['a','b',['ab','ba']]  with the help of 'slice' construct a",
          "Given a list    lst1 = ['a','b',['ab','ba']]  Use the function ‘deepcopy’ and",
          "Given a list    lst1 = ['a','b',['ab','ba']]  Use the function ‘copy’ and"
        ],
        "__str__ method": [
          "write a program to convert a integer to string"
        ],
        "__repr__ method": [
          "Write a pgm to compare two string using - str() and eval() functions"
        ],
        "Strings": [
          "Write a program to print a new string which contains 4 copies of the last three",
          "Write a program to print the output string which contains last half + first half",
          "Given a string, print the output string by removing the first and last character",
          "program to count the number of occurrences of each character in a given string",
          "Write a program to convert all the vowels to uppercase for the given input str",
          "Write a program to reverse the given input list",
          "Write a program to count number of occurrences of vowels in a given string",
          "Write a program to print the longest length string from given input list of str"
        ],
        "Numbers": [
          "Write a program to find if a given number is prime or not",
          "Write a program to find the factorial of a given number",
          "Write a program to construct two dimensional array and print the same"
        ],
        "File Operations": [
          "Create a directory with name “newdir” and create a file “tempo” in the new dir",
          "Rename  a file in a particular director Take the backup before renaming",
          "List all the files from a given path and verify the file test.txt file exists ?",
          "Write a program to retrieve the words XYZ and ABC from a given file",
          "Write a program to get some keywords from a file.",
          "Get the current working directory and navigate to all the directories",
          "Remove all the empty directories from a given path",
          "Get  file size, inode, owner of a each file in a given path",
          "Get the file permissions of all files in a given path and change all the file ..",
          "Execute standard Linux commands using python programming",
          "Create a helloworld. py file and run this program by invoking in other py file",
          "Create a helloworld. py, run this program in one terminal and ...",
          "Redirect the output of the file",
          "Write a more optimized program to display the contents in the text file",
          "Get system free, used , total memory",
          "Write a program to reverse the contents of the file"
        ]
      },
      "requirements": [
        "It is \"not\" necessary to have python basic knowledge to take up this interview course. We are starting with the real basic questions and answers of python concepts",
        "Each program in the python programming interview question list is explained very well. Each line in the program is covered with much detailed depth"
      ],
      "description": "Welcome to Cracking the Python Interview\n\nThis course is from a software engineer who has managed to crack interviews in around 16 software companies.\nSometimes, life gives us no time to prepare, There are emergency times where in we have to buck up our guts and start  bringing the situations under our control rather then being in the control of the situation.  At the end of the day, All leave this earth empty handed. But given a situation, we should live up or fight up in such a way that the whole action sequence should make us proud and be giving us goosebumps when we think about it right after 10 years.\nThis course covers all python programming interview questions extensively and will help you to crack all python interviews related to programming\nThis course will help you to crack python interviews to get your next python automation or development job. This course will teach you how to utilize your python programming skills in your next role as a python automation engineer and developer.\nAnybody who completes this course, in a mere 12 to 13 hours of journey in this course, he or she will able to gain up to 3 years of experience in python coding\nThe problem faced by most them is it is difficult for them to clear python automation or development interviews. Because in interviews, all can answer questions expecting one line answers in python. But most of them lose confidence when they are asked to write programs during interviews. Taking up this course will help you to develop and boost your programming skills especially during interviews. Understanding and learning every program here in this course will give you a lot of confidence to face the interviewer.\nSometimes, Even though people manage to clear the interviews, due to poor programming skills, it is difficult for them to survive in the organization. This course comes in handy during this situation. Apart from helping the students to clear the interviews, this course puts in great effort to explain each and every program in the course. Each and every line in these programs are explained to much greater depths.\nThis course covers the following:\nAdvanced and Basic Python Interview questions on Programming\nUnit and  Api Testing Module in Python\nStatic Code Analyzer Tool for Python\nCode Coverage Tool for Python\nCourse on How to sell yourself in Automation Face to Face Interviews (This has Tips, Tricks and Project ideas to clear Automation Interviews. This involves 10 Face to Face Interview case studies of Automation Interviews )\nThe following programming Questions are answered in the course:\n1. How is char, integer, float and a string variable created and printed in python\n2. Create a Tuple with values belonging to a single datatype. print the values\n3. Create a Tuple with values belonging to mixed datatypes. print the values\n4. Create a Tuple which contains the following:\n- a string\n- a Sub List of values belonging to a single data type\n- a Sub Tuple with values belonging to a single data type\n5. Explain the concept of Tuple Packing\n6. Explain the concept of Tuple Unpacking\n7. Define a tuple which contains a string value. When queried, the tuple should be of  type 'class str‘.\n8. Define a tuple which contains a string value. When queried, the tuple should be of  type 'class tuple‘.\n9. Can we define a tuple with out the conventional usage of the parenthesis\n10.Given a tuple:\nmy_tuple = ('p','z','r','q','i','t’), If we print my_tuple[6], does it print '0', \"\" or does it throw an error.\n11.Given a tuple:\nmy_tuple = ('p','z','r','q','i','t’), If we print my_tuple[2.0], does it print 'r' or will it throw an error\n12.Given a tuple:\nmy_tuple = ('p','z','r','q','i','t’)\nprint 't' and 'p' parsing from the other side of the tuple\n13.Given a tuple:\nmy_tuple = ('a','l','g','o','r','i','t','h','m')\nUsing the concept of slicing, print - 'l', 'g', 'o‘\n14.Given a tuple:\nmy_tuple = ('a','l','g','o','r','i','t','h','m')\nUsing the concept of slicing, print – ‘a', ‘l’\n15.Given a tuple:\nmy_tuple = ('a','l','g','o','r','i','t','h','m')\nUsing the concept of slicing, print – ‘h', ‘m’\n16.Given a tuple:\nmy_tuple = ('a','l','g','o','r','i','t','h','m')\nUsing the concept of slicing, print the whole tuple\n17.Given a tuple:\nmy_tuple = ('a','l','g','o','r','i','t','h','m')\n- delete the element at the 3rd index, print the tuple\n- delete the whole tuple\n18.Define a tuple having a list of 2 integers in it.\nmodify the first element in the list and print the Tuple\n19.Can tuples be reassigned\n20.Using print statement do the following:\n- output the concatenation of two tuples\n- using an example tuple in the print statement, print the word 'World' 3 times\n21.Check whether the given element is present in a tuple or not\n22.Write a program in 2 lines:\nUsing a for loop and a tuple to print the below:\nhello earth\nhello mars\n23.Can we convert tuples to lists and vice versa ?\n24. Write a program to print a new list which contains all the first characters of strings present in a list.\nlist_states  =[\" Madhya Pradesh\", \"Karnataka\", \"Chennai\", \"Goa“, \"Delhi\"]\n25. Write a program to replace each string with an integer value in a given list of strings. The replacement integer value should be a sum of  Ascci values of each character of the corresponding string.\nlist_rivers  =[\"Ganges\", \"Godavari\", \"Brahmaputra\", \"Narmada\", \"Yamuna\", \"Mahanadi\", \"Kaveri\", \"Tapti\"]\n26. Write a program which prints all duplicated values in a list\n27. Write a program to print True if the first element or last element is divisible by 4 in the given list.\n28. Write a program to print True if the first and last elements are equal and odd numbers in the given list.\n29. Write a program to print True if the sum of the first and last elements  are equal from the given two lists.\n30. Write a program to print the sum of all the elements in the given list.\n31. Write a program to sort a list of integer elements\n32. Write a program to print a new list by doing a left rotate on the given list.\nEx: input: [4, 5, 6, 7] output: [5, 6, 7, 4]\n33. Write a program to find the maximum number from the given list of numbers and replace all the numbers from the list with the maximum number.\n34. Given two lists x and y, print two new lists as output which includes all the elements of x and y except for the first and last elements.\n35. Given a list, Write a program which prints all elements which are multiples of 4.\n36. Given a list\ncolours1 = [\"red\", \"green\"] with the help of a new list,\nmodify the list colours1, such that\ncolour1 = [\"red\", \"blue\" ]\n37. Given a list\nlist1 = ['a','b','c','d‘] with the help of 'slice' construct and a new list, make changes in  list1, such that list1=['a','x','c','d']. Verify if the original list is modified\n38. Given a list, lst1 = ['a','b',['ab','ba']]  with the help of 'slice' construct and a new list, modify lst1 such that\nlst1=['a', 'b', ['ab', 'd']]\n39. Given a list\nlst1 = ['a','b',['ab','ba']]\nUse the function ‘deepcopy’ and a new list to make changes in the lst2. Verify if the list is modified\n40. Given a list\nlst1 = ['a','b',['ab','ba']]\nUse the function ‘copy’ and a new list to make changes in the lst2. Verify if the list is modified\n41. Convert a integer to string\n42. Write a pgm to compare two string using\n- str() and eval() functions\n43. Write a pgm to compare two string using\n- repr() and eval() functions\n44. Write a program to reverse a string\n45. Write a program to print a new string which contains 4 copies of the last three characters from the given string.\n46. Write a program to print the output string which contains last half + first half of the given string. The given string is of even length.\n47. Given a string, print the output string by removing the first and last character of the string.\n48. Given a string, Write a program which rotates left 2 and prints the output as below.\nEx: input: Hello\noutput: lloHe\n49. Concatenate two given strings by omitting the first character\n50. Write a program to count the number of occurrences of each character in a given string\n51. Write a program to convert all the vowels to uppercase for the given input string.\n52. Write a program to reverse the given input list\n53. Write a program to count number of occurrences of vowels in a given string.\n54. Write a program to convert lower case to upper case letter?\n55. Write a program to print the longest length string from given input list of strings.\n56. Write a program to find if a given number is prime or not\n57. Write a program to find the factorial of a given number\n58. Write a program to construct two dimensional array and print the same.\n59. Write a program to convert a number  to base 10,\nbase 2 , base 8 , base 16 number systems\n60. Create a directory with name “newdir” and create a file “tempo” in the new directory “newdir” .\n61. Rename  a file in a particular directory\nTake the backup before you rename the files.\n62. List all the files from a given path and verify the file test.txt file exists or not? If the file does not exist create it.\n63. Write a program to count each word from the given file\n64. Write a program to retrieve the words XYZ and ABC from a given file\n65. Write a program to get some keywords from a file.\n66. Get the current working directory and navigate to all the directories in the file.\n67. Remove all the empty directories from a given path\n68. Get  file size, inode, owner of a each file in a given path\n69. Get the file permissions of all files in a given path and change all the file permissions to 666\n70. Execute standard Linux commands using python programming\n71. Create a helloworld. py file and run this program by invoking it in another python file.\n72. Create a helloworld. py, run this program in one terminal and kill helloworld. py using another program\n73. Get system free, used , total memory\n74. Redirect the output of the file\n75. Write a more optimized program to display the contents in the text file\n76. Write a program to reverse the contents of the file\n77. Get a list of all the current running services on your system\n78. create two modules one. py and two. py. Define a function in one. py and call it from two. py. Design the one. py module in such a way that:\n- After importing, It can help two. py to call and execute the function defined in it\n- When one. py is run as a single script, It should execute successfully with out depending on the other module\n79. Given a string containing months, dates and years, Write a regular expression to match the month, date and print them accordingly\nString: \"July 24 2016, September 9 2016, Dec 12 2016“\n80. Given a string containing months, dates and years, Write a regular expression to match the month and print them accordingly\nString: \"July 24 2016, September 9 2016, Dec 12 2016“\n81. Given a string containing names and age of a list of people, Write a regular expression to match the name, age and print the starting and ending positions of all the matches in the string.\nString: \"Tom 25, Abel 26, Isabella 32\"\n82. Given a string containing months, dates and years, Write a regular expression to match the month, date and print them as\nInput: \"July 24 2016, September 9 2016, Dec 12  2016“\nOutput: 24 of July 2016, 9 of September 2016, 12 of Dec 2016\n83. Use the ‘re’ regular expression compilation feature and replace 'Hello Sir' with 'Hello John‘\n84. Using Regular Expressions. Of the below statement:\n\"girls are prettier than boys\"\nprint the below strings:\n'girls'   'prettier\n85. Write a regular expression to match email address and ip address\n86. Given a string   str=\"hello worldello ello\"\nReplace the substring 'ello' with substring 'HIII' and return the number of replacements successfully done\n87. Get all the count values from the file ‘comments.xml’ and print the sum of all the count\n88. Get only university names from the file ‘gjson.json’\n89. From the file comments.json, read all the data display the information based on the input name given\n90. Create a HTML table using python. Add the below section headers  in a row\nTestID  Test Name Test Steps Expected_Output Actual_Output Results Remarks\n91. Create a class with a class variable and a member function.   Print the value of the class variable\nThrough the class name, check whether the member function is bound or unbound\n92. Create a class with a class variable and a member function.   Create a object of the class and execute the following:   Print the value of the class variable using the object Through the object, check whether the member function is bound or unbound\n93. Explain the difference between Class and Instance Variables\n94. How we can declare constructor and destructor in python\n95. Explain the instance method\n96. Write an external function out of the class which will give us the count of the number of objects of the class\n97. Write an external function out of the class which will use the object of the class to give the count of the number of objects of the class\n98. Define a member function of the class which when called will always take class as the first argument and returns the count of the number of objects of the class\n99. Explain the application of a static method\n100. How do you find methods or attributes of a object\n101. Explain the concept of finally\n102. Explain the concept of zip\n103. Explain the below:\nProperty\nProperty decorators\nProperty setters\nProperty getters\n104. Print numbers in a list with out using loops\n105. With the aid of __iter__ function, develop your own number printing function without using loops. print the numbers in straight order\n106. With the aid of __iter__ function, develop your own number printing function without using loops. print the numbers in reverse order.\n107. Explain the concept of yield function in generators\n108. Using the yield construct, write a program to find the pattern in a file and print the corresponding lines\n109. Define a first function. Have a nested function called second function in first function and call the second function through the variable\n110. Facilitate a log such that\nBefore entering the function, a log 'Before the function call' is printed\nAfter the function is over, a log 'After the function call' is printed\nconditions: The log printing function should be generalized such that it can execute before and after any function.\nThe executing function should be independently called in the program\n112. How split and join methods works in python\n113. Create a module in python ?\n114. How you will share the global variables across the modules\n115. Create a package in python\n116. Explain the concept of lambda2.\n117. Given a list\nmy_list = [1, 5, 4, 6, 8, 11, 3, 12]\nprint the output as: [4, 6, 8, 12]\nprogram on below conditions:\n- should not use any loops\n- should not use user defined functions3.\n118. Given a list\nmy_list = [1, 5, 4, 6, 8, 11, 3, 12]\nprint the output as: [2, 10, 8, 12, 16, 22, 6, 24]\nprogram on below conditions:\n- should not use any loops\n- should not use user defined functions\n119. Given a list\nmy_list = [1, 2, 3, 4]\nprint the output as: 24\nprogram on below conditions:\n- should not use any loops\n- should not use user defined functions\n120. Concatenate and print the below lists with out using tempervory list or a variable\nlist1 = ['A','B','C']\nlist2 = [10,20,30]\n121. Write a single line of code to print the square of all the numbers  for a range of 10 numbers\n122. Write a single line of code to multiply every element of a list by three and assign it to a new list\n123. Write a single line of code to make a new list by taking the first letter of each word from the given list\n124. Write a single line of code to extract all the numbers from a string\n125. Explain the use of ‘pass’ in python\n126. Write a program which will open the file, write the contents but will not explicitly close the file.\nThe program should execute successfully\n127. Write a program which will open the file, write the contents but will not explicitly close the file.\nThe program should execute successfully\n128. What is inheritance\n129. What is multiple inheritance\n130. What is multilevel inheritance\n131. Numpy\n132. Write a program to do the following:\ncreate a new test suite\ncreate a new test case\nadd the test suite\nadd the new test case to the test suite\nrun the test suite\n133. Write a program to do the following:\n- create a new test suite\n- create a new test case\nIn an alternate way do the following:\n- add the test suite\n- add the new test case to the test suite\n- run the test suite\n134. Write a pgm to run a test suite having 2 testcases\n135. Write a pgm to explain the concept of setup and teardown apis\n136. Write a pgm which creates a testsuite with the test case that does the following test validations:\n- checks if the element is true or false\n- checks if the both the elements are equal or unequal\n137. Write a pgm which creates a testsuite with the test case that does the following test validations:\n- checks if an element belongs to a given class\n138. Write a pgm which creates a testsuite with the testcase that does the following test validations:\nchecks if an element is greater then the other element\nchecks if an element is less then the other element\nchecks if an element is greater then or equal to the other element\nchecks if an element is less then or equal to the other element\nchecks if an element is almost equal to the other element\nchecks if an element is almost not equal to the other element\n139. Write a pgm which creates a testsuite with the testcase that does the following test validations:\nchecks if a string is a substring of another string\nchecks if a string is not a substring of another string\nchecks if one dictionary is a subset of another dictionary\nchecks if both dictionaries are equal\nchecks if both lists are equal\nchecks if both tuples are equal\nchecks if both sets are equal\n140. Write a pgm to run a testsuite having 2 testcases. Run only the first testcase and have a mechanism to skip running the second testcase\n141. Write a pgm to run a testsuite having 2 testcases. Run both the testcases and have a mechanism to skip running the second part of the 2nd testcase while the first part being run\n142. Write a pgm to run a testsuite having 2 testcases. Run only the first testcase and have a mechanism such that based on a given condition skip running the second testcase\n143. Write a pgm to run a testsuite having 2 testcases. Force the second testcase to fail\n144. Write a pgm to run a testsuite having 2 testcases. demonstrate the use of  unittest.TextTestRunner() function\n145. Write a pgm to run 2 testsuites with 2 testcases each\n146. Write a unit test program to test the basic add functionality of the calculator program\n147. Write a sample add pgm and run the static code analyzer and fix the errors\n148. How can i customize my pylint checker to override the python coding standards by following my personal coding style\nhaving my own variable name styles\nhaving my own constant name styles\nhaving my own module name styles\nhaving my own function name styles\n149. Define a class and run the static code analyzer and fix the errors\n150. How to get the details of specific messages of pylint\n151. Generate the static code analysis report in the colorized format\n152. Use the static code analyzer to detect bad names in the code\n153. In the code using the static code analyzer convert bad names to gud names\n154. Define the maximum line length in the code\n155. Set the indent string\n156. code coverage\n157. how to sell yourself in automation interviews",
      "target_audience": [
        "All Manuel testers preparing for python interviews and looking forward to change their careers to python automation and development",
        "All Automation engineers preparing for python interviews and looking forward to change jobs",
        "All Fresh graduates preparing for python interviews to start their career in python",
        "All python developers preparing for python interviews to change jobs"
      ]
    },
    {
      "title": "Swift 3 - Master Swift Development From Scratch",
      "url": "https://www.udemy.com/course/swift-development/",
      "bio": "Go from beginner to an expert Swift Programmer in 4 weeks. Then learn building iOS10 Apps or Server Side Swift Apps.",
      "objectives": [
        "6.5 hours of Full HD video material divided into 65 downloadable lectures",
        "Ability to write and understand good quality Swift code",
        "Transition into a career in iOS App Development or Server Side Swift Development",
        "Become confident about Object Oriented Programming and Functional Programming Paradigms",
        "Become the coder who understands Swift better than everyone else"
      ],
      "course_content": {
        "Introduction to the course": [
          "Welcome and Getting Started",
          "Installing Swift on Linux and Windows",
          "Xcode Playgrounds and Your first Swift Code"
        ],
        "Variables, Constants and Types": [
          "Variables and Constants",
          "Variables And Constants Exercise",
          "Basic Data Types",
          "Basic Data Types Exercise",
          "Type Safety and Inference"
        ],
        "Math, Printing and Comments": [
          "Basic Math And Operators",
          "Basic Math and Operators exercise",
          "Printing and Comments",
          "Printing and Comments Exercise",
          "Tuples"
        ],
        "Control Flow": [
          "If else statements",
          "If else statements exercise",
          "Switch and Case",
          "Switch and Case exercise",
          "Loops",
          "Loops Exercise",
          "Continue and Break statements"
        ],
        "Collection Types": [
          "Arrays",
          "Arrays Exercise",
          "Dictionaries",
          "Dictionaries Exercise",
          "Sets"
        ],
        "Optionals and Strings": [
          "Introduction to Optionals",
          "Optionals Exercise",
          "Optional Forced Unwrapping And Binding",
          "Optional Forced Unwrapping and Binding Exercise",
          "Optional Implicit Unwrapping and Advantages",
          "Strings"
        ],
        "Functions and Closures": [
          "Introduction to Functions",
          "Introduction to Functions Exercise",
          "Function Parameters",
          "Function Types",
          "Introduction to Closures",
          "Introduction to Closures Exercise",
          "Closure Expressions and Examples"
        ],
        "Enumerations, Classes And Structures": [
          "Enumerations",
          "Enumerations Exercise",
          "Classes and Structures",
          "Classes and Structures Exercise",
          "Value versus Reference Types"
        ],
        "Properties and Methods": [
          "Stored Properties",
          "Stored Properties Quiz",
          "Computed Properties",
          "Computed Properties Quiz",
          "Computed Properties Exercise",
          "Property Observers and Type Properties",
          "Methods"
        ],
        "Inheritance and Initialization": [
          "Inheritance",
          "Inheritance Exercise",
          "Introduction to Initialization",
          "Initializer Delegation and Types"
        ]
      },
      "requirements": [
        "You do not need any prior programming experience for this course. You just need a computer with MacOS, Linux or Windows installed."
      ],
      "description": "The most comprehensive course on Swift 3.\nThe numbers speak for themselves.\nOver 2000 people in about 100 countries have enrolled in this course in just 5 days and are becoming great at Swift Programming.\n\n\nCourse 5 star Reviews:\n\nGood, clear explanations of Swift in small, manageable chunks, which makes it easy for study and review. Five stars! : Paul Denlinger\nThis is an amazing course for learning how to develop in Swift. Nikant is a great teacher who makes complex concepts easy to understand. : Jigar\n\n\nThe course has helped me to learn quickly and grow my skills. Nikant does an outstanding job teaching this course. Well organised, easy to follow.I highly recommend taking this. : Anurag\n\n\n\n\nSwift is being hailed as the future of iOS, Mac and server side development. The meteoric rise in the popularity of this language since its open source release in 2014 has been unheard of in world of programming languages. Swift not only runs on Apple platforms but has been released for Linux which makes it a great candidate to become the Server Side language of the future.\n\nIt's a great time to learn Swift. The language offers the performance of the compiled languages like C, C++ along with the expressiveness of a scripting language like Python, Ruby which makes it a fun language to learn for beginners as well as experienced programmers.\nIn this course you will learn the Swift Programming language from scratch beginning from the basics like Data Types, Loops going up to the advanced features like Protocols and Generics. The course has been designed keeping in mind that it caters to the audience with no prior programming experience as well as experienced programmers who want to learn Swift.\nThe curriculum offers a lot of fun lectures, exercises and quizzes that will help you to practice the content as you progress through this course.  You will deep dive into a lot of paradigms like Object Oriented Programming and Functional Programming which will solidify your understanding of other languages as well. We will also focus on the best practices to write Swift code so that after this course you become confident in producing good quality code.\nAs the Swift language is constantly evolving, I will keep on adding and refreshing course content so that you stay in line with the future developments of Swift.\nSwift has been developed by some really intelligent minds in Apple keeping the future in mind. This course will make it very easy for you to learn Swift whether you are an experienced programmer or a complete newbie. This will open a world of opportunities for you whether you decide to learn iOS app development after this or go into server side development with Swift.",
      "target_audience": [
        "This course is great for beginners who want to learn Swift Programming from scratch step by step.",
        "The course is also meant for experienced programmers who want to add Swift to list of their skills",
        "Objective C Programmers can take this course to transition to Swift for iOS App Development"
      ]
    },
    {
      "title": "Intermediate & Advanced Java Programming",
      "url": "https://www.udemy.com/course/intermediate-advanced-java-programming/",
      "bio": "Take your Java skills to the next level and start building real applications.",
      "objectives": [
        "To build real Java applications",
        "To go beyond beginner&#39;s Java programming courses"
      ],
      "course_content": {},
      "requirements": [
        "A computer"
      ],
      "description": "Take your Java skills to the next level and start building real applications.\nThere are lots of 'Java for Beginners' courses out there. This course will take your basic Java programming skills and teach you how to implement them in the real world. Learn object oriented programming and build real Java applications.\nSource codes are included for each lecture.",
      "target_audience": [
        "Java programmers",
        "Software developers"
      ]
    },
    {
      "title": "Build 10 C# Beginner Projects from scratch",
      "url": "https://www.udemy.com/course/build-10-c-beginner-projects-from-scratch/",
      "bio": "10 C# Beginner projects step by step",
      "objectives": [
        "Build a Web Browser",
        "Build a Digital Clock",
        "Build a Volume Converter",
        "Build a Calculator",
        "Build a Maths Operations App",
        "Build a Currency Converter",
        "Build a Google Maps",
        "Build a Paint Drawing App",
        "Build a Ping Pong Game",
        "Build a Music Player"
      ],
      "course_content": {
        "Setting Up Visual Studio": [
          "Introduction",
          "What is C#",
          "What is Visual Studio",
          "Visual Studio Installation requirements",
          "Installing Visual Studio 2019",
          "Create a basic console app",
          "Create a basic Windows Forms App",
          "Create a basic ASP.NET App",
          "Running Projects Outside Visual Studio",
          "Code Comments",
          "Source Codes for projects"
        ],
        "Build a Web Browser": [
          "Create a new windows forms project",
          "Creating the interface : Part 1",
          "Creating the interface : Part 2",
          "Adding some code logic",
          "Finishing Touches"
        ],
        "Build a Digital Clock": [
          "Create a new windows forms project",
          "Modify the form properties",
          "Design the clock interface",
          "Add a Timer",
          "Activate the clock"
        ],
        "Build a Volume Converter": [
          "Project Design",
          "Create a new windows forms project",
          "Add Some Controls to form",
          "Rename text property controls",
          "Rename Name Property Controls",
          "Write code for event handlers",
          "Test Application",
          "Customize application",
          "Run Application"
        ],
        "Build a Calculator": [
          "Create a new windows forms project",
          "Change form properties",
          "Design interface: Part 1",
          "Design interface: Part 2",
          "Create a button click event",
          "Clear default zero",
          "Create methods for operators",
          "Create methods for equal button",
          "Write code for the logic"
        ],
        "Build a Maths App": [
          "What we will create",
          "Project Design",
          "Create a new windows forms project",
          "Add controls to form",
          "Rename Controls",
          "Rename Text Property",
          "Rename Name Property",
          "Write Code for event handlers: Part 1",
          "Write Code for event handlers: Part 2",
          "Auto Generated Code",
          "Customize application",
          "Test Application",
          "Run Application Outside Visual Studio"
        ],
        "Build a Currency Converter": [
          "Create a new windows forms project",
          "Add Components to form",
          "Add Code logic"
        ],
        "Build your own Google Maps": [
          "Create a new windows forms project",
          "Resize form and add controls",
          "Customizing form and controls",
          "Writing code for the logic: Part 1",
          "Writing code for the logic: Part 2"
        ],
        "Build a Paint Drawing App": [
          "Create a new windows forms project",
          "Designing the interface : Part 1",
          "Designing the interface : Part 2",
          "Create variables and event handler method",
          "Rename event handler method",
          "Write code to enable drawing",
          "Write code to enable saving"
        ],
        "Build a Ping Pong Game": [
          "Create a new windows forms project",
          "Add controls to form",
          "Customizing form controls",
          "Writing code for the logic: Part 1",
          "Writing code for the logic: Part 2",
          "Test Application"
        ]
      },
      "requirements": [
        "Basic knowledge of C#",
        "Visual studio has to be installed. The course covers this."
      ],
      "description": "Welcome to this  C#  project based course for  beginners course (pronounced C Sharp). C# is designed to be a simple, modern, general-purpose, object-oriented programming language, borrowing key concepts from several other languages, most notably Java\nC# is one of the most popular programming languages. It can be used for a variety of things, including mobile applications, game development, and enterprise software. Knowing C# opens a great deal of doors for you as a developer.\n\n\nC# is used in :\n\n\nVideo games with Unity\n\n\nWeb apps with ASP.NET\n\n\nCloud Computing with Azure\n\n\nMobile apps with Xamarin\n\n\nIoT with .NET Core\n\n\nMachine Learning with ML.NET\n\nC# is an Object Oriented language and does not offer global variables or functions. Everything is wrapped in classes, even simple types like int and string, which inherits from the System.Object class.\nIn this course I will walk you through how to create  the following 10 beginner c # projects to help build up your C# programming skills.\nCalculator\nDigital Clock\nCurrency Converter\nMaths Operations App\nWeb browser\npaint drawing app\n2D Ping Pong game\nGoogle Maps\nVolume Converter\nMusic Player\n\n\nYou will be using the Visual studio integrated development environment to write the  and run the C# Code. This is the official tool provided by Microsoft for developers to use to create applications.   After completing the 10 projects you should be confident to build your own applications.",
      "target_audience": [
        "Beginner C# Developers"
      ]
    },
    {
      "title": "Learn PhalconPHP Framework",
      "url": "https://www.udemy.com/course/phalconphp/",
      "bio": "Learn the Most Advanced & Fastest PHP Framework & become a Master Developer.",
      "objectives": [
        "Learn how to start a PhalconPHP application from scratch",
        "Learn the inner workings of Controllers and Views",
        "Learn how to manage your Database with Models & the ORM",
        "Learn how to use the Dependency Injection Service",
        "Learn how to use the VOLT Template Library",
        "Create a PhalconPHP Project"
      ],
      "course_content": {
        "Introduction and Installation": [
          "What is PhalconPHP?",
          "Windows Installation",
          "Linux Installation",
          "Installation Quiz"
        ],
        "Basic Start": [
          "Create Application Structure",
          "Create the Bootstrap",
          "Bootstrap",
          "Understand Controllers",
          "Integrating Views",
          "Controller Quiz"
        ],
        "SQL, Models, and the ORM": [
          "Create a Database Schema",
          "Update the Bootstrap for Database Usage",
          "Model Setup & Create, Update, & Selecting Data.",
          "Models: Deleting Data",
          "Model CRUD Quiz",
          "Models Events",
          "Table/Model Relationships",
          "Model Saving Related Records",
          "Model Relationship Quiz"
        ],
        "Flexible Features": [
          "(Optional) Install APC (Linux) - For caching MetaData",
          "(Optional) Install APC (WAMP) - For caching MetaData",
          "Caching Models MetaData",
          "Using Sessions",
          "Session Quiz",
          "Request Environment (GET/POST)",
          "Custom Routing",
          "Route Quiz"
        ],
        "Assets & Volt Templating": [
          "Using the Assets Manager & Setting up a BaseController",
          "Enable the Volt Template Engine",
          "Volt Template Syntax",
          "Volt Quiz"
        ],
        "Build an App by Example (Part 1) [Level: Difficult]": [
          "Application Overhaul",
          "Application Overhaul Quiz",
          "ACL Setup (Part 1)",
          "ACL Setup (Part 2)",
          "Flashing Messages & Cleaning up the Namespaces"
        ],
        "Building our App (Part 2)": [
          "Create a Login Area tied into the ACL (Part 1)",
          "Create a Login Area tied into the ACL (Part 2)",
          "Securing Passwords and CSRF",
          "Setup Registration"
        ],
        "Advanced Topics": [
          "Using the Configuration Object",
          "Custom Components",
          "Using Composer in Phalcon"
        ],
        "Phalcon Development Tools & Building a Project \"Jumble\"": [
          "Phalcon Vagrant Setup (Any OS)",
          "Point Apache and Generate a Project",
          "Database & Migrations",
          "Scaffolding based on a DB Table"
        ],
        "Conclusion": [
          "Summary of What You've Learned"
        ]
      },
      "requirements": [
        "Linux or Windows using LAMP / WAMP / XXAMP (Sorry, No Mac Support)",
        "Some CLI/Terminal Knowledge",
        "Text Editor (Recommended: Sublime Text)"
      ],
      "description": "In this course I will teach you from the ground floor how to build an application in PHP's fastest full-scale framework; PhalconPHP. Controllers, Views, Routes, Templates, Models/Relationships/ORM; All covered.\nEach section is broken down for you to follow along with and write code as I do. After learning as you go, we'll create a project based on what you've learned.\nWe will make changes to the Bootstrap through each step in this follow-along series so you know exactly what's going on. This course is geared towards the medium to advanced skilled developer who have a well rounded knowledge of PHP and Object Oriented Design.\nThis course should take you around 2-3 weeks to complete, but you may need to come back a few times in order to absorb all the material. You should consider taking this course if you are interested in advanced development and bleeding-edge technology that will dominate PHP.",
      "target_audience": [
        "Proficient PHP Knowledge",
        "Some MVC Knowledge"
      ]
    },
    {
      "title": "C++ Programming - Master Class",
      "url": "https://www.udemy.com/course/cpp-master/",
      "bio": "C++ Development, Developer",
      "objectives": [
        "Fundamentals of C++ programming.",
        "Suite of tools for C++ programming.",
        "Coding based examples.",
        "Concepts of modular programming."
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge of programming is required."
      ],
      "description": "Welcome to the C++ Programming Master Class! Whether you're an aspiring developer, a seasoned programmer looking to brush up on your skills, or a student preparing for interviews, this course is designed to equip you with the essential knowledge and techniques needed to master C++ programming.\nIn this comprehensive course, we will cover the fundamentals of C++ programming, from basic syntax to advanced topics. You will gain a solid understanding of C++ language features, best practices, and techniques for building efficient and scalable applications.\n\nC++ PROGRAMMING - Master Class\n\n\nSection - Setup of iDE and Compiler\n- Dev C++ Setup\n- Online Compiler\n\n\nSection - C++ Basics\n- Datatypes\n\nSection - Functions\n- Random Numbers\n- Random Number Application - Dice Roll Simulation\n- Random Number Application - Instrumentation Reliability\n- Recursion\n- Recursion Example\n\nSection - Object Oriented Programming\n- Demo - Class and Objects - Programming Script\n- Demo - Pointer to an Object and Pointer to a Dynamic Object - Programming Script\n- Demo - Accessors and Mutators - Programming Script\n- Demo - Constructors - Non-Parameterized, Parameterized, Copy Constructor - Programming Script\n- Demo - This Pointer - Programming Script\n\nIMPLEMENTATION AND PROJECTS\nGetting started with C++ development\nHands-on coding\n\n\nJoin us on this journey to become a proficient C++ programmer! Whether you're looking to kickstart your career, enhance your coding skills, or dive deeper into C++ development, this course is tailored to meet your needs.\nThank you for enrolling in the C++ Programming Master Class. Let's embark on this exciting learning adventure together!",
      "target_audience": [
        "Beginner developer or programmer"
      ]
    },
    {
      "title": "Python design patterns masterclass",
      "url": "https://www.udemy.com/course/pythondesignpatterns/",
      "bio": "Improve your coding skills by learning Software Design Patterns applied to Python development",
      "objectives": [
        "Design patterns",
        "Proper Python development",
        "Creational patterns",
        "Structural patterns",
        "Behavioural patterns",
        "Coding best practices"
      ],
      "course_content": {
        "Introduction": [
          "What are design patterns",
          "Types of design patterns",
          "Important message about Udemy reviews",
          "Engage on social media"
        ],
        "Creational design patterns": [
          "Singleton",
          "Factory method",
          "Abstract factory",
          "Builder",
          "Prototype"
        ],
        "Structural design patterns": [
          "Adapter",
          "Bridge",
          "Composite",
          "Decorator",
          "Facade",
          "Flyweight",
          "Proxy"
        ],
        "Behavioural design patterns": [
          "Chain of responsibility",
          "Command",
          "Interpreter",
          "Iterator",
          "Mediator",
          "Memento",
          "Observer",
          "State",
          "Strategy",
          "Template method",
          "Visitor"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Python development knowledge",
        "Mac or PC"
      ],
      "description": "Knowing how to build well structured programs and apps, that are scalable and robust is essential for every developer.\nThat's why I've created this course on Design Patterns for Python.\nHere you will learn how to apply popular patterns to your code, such as Builder, Adapter, Abstract Factory, as well as lesser known but very useful patterns, such as Composite, Decorator, Strategy etc.\nThis course will teach you how to structure your code so that it is more maintainable as it grows, and that it's easier to debug and test. When building a new project, you are not trying to reinvent the wheel, but instead to implement the correct solutions to the problems that you encounter.\nIt will also teach you the terminology that you need when you communicate with top level developers. When they say they implemented a factory for a piece of code, or the added a builder pattern for the creation of a certain object, you will immediately know what they mean.\nThis course covers 3 types of design patterns\nCreational\nStructural\nBehavioural\nWe will also include code samples at each step of the way, so that you already know how to implement these patterns in practice.\nSign up today, and let's learn how to use Design Patterns in Python.",
      "target_audience": [
        "Beginner Python developers",
        "Intermediate Python developers"
      ]
    },
    {
      "title": "JPA & Hibernate: Complete Course with Online Shop Example",
      "url": "https://www.udemy.com/course/jpa-learnit/",
      "bio": "Crash course with practical examples to learn Jakarta (Java) Persistence API and ORM Hibernate with Java examples",
      "objectives": [
        "JPA",
        "Hibernate",
        "Entities, Relationships, Inheritance Mappings and JPA Annotations",
        "One to One, Many to One and Many to Many Relationships",
        "First Level Cache",
        "Second Level Cache with EhCache",
        "Query Level Cache",
        "JPQL",
        "Criteria API",
        "Native Queries",
        "N+1 Problem and Solution",
        "Spring Data JPA",
        "Spring JDBC"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Unlimited access to 'Learn IT' application for students",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "JPA & Hibernate": [
          "Introduction to JPA & ORM",
          "First JPA Project: Entity, ID GenerationType, Composite Primary Keys, etc)",
          "First JPA Project - Part 2: EntityManager, persistence.xml, Transactions in JPA",
          "Operations with Entity (Create, Read, Update, Delete) & JPA Entity Lifecycle",
          "Locking JPA: Optimistic & Pessimistic Locking",
          "Relationships Between Entities",
          "JPA Queries (Query, TypedQuery, NativeQuery, JPQL, Criteria API)",
          "Caching in JPA/Hibernate",
          "N+1: Problem and Solution"
        ],
        "===== ORM & JPA: Interview Preparation =====": [
          "Part 1: ORM & Hibernate Interview - Questions and Answers",
          "Part 2: ORM & Hibernate Interview - Questions and Answers",
          "Part 3: JPA Interview - Questions and Answers",
          "Part 4: JPA Interview - Questions and Answers"
        ],
        "===== EXAM TASK: JPA & Hibernate =====": [
          "===== EXAM TASK: JPA & Hibernate ====="
        ],
        "EXTRA: Spring Data": [
          "Intro to the section",
          "Spring Data & Spring Data JPA: Overview",
          "Spring Data JPA: Practice"
        ],
        "===== EXAM: Spring Data JPA - Online Shop =====": [
          "EXAM: Spring Data JPA - Online Shop"
        ],
        "Spring JDBC": [
          "Spring JDBC: Overview",
          "Spring JDBC: Practice"
        ],
        "===== EXAM: Spring JDBC - Online Shop =====": [
          "EXAM: Spring JDBC - Online Shop"
        ],
        "Bonuse Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Understanding of Java Syntax",
        "JDBC",
        "Basics of Relational Databases"
      ],
      "description": "From this course, you can learn JPA and Hibernate\nThere are a lot of other courses on this topic. So, why would you choose exactly this course?  Here are just a few reasons:\n\n- Coding examples\nTo learn to program is not enough just watching videos and reading books. You also need to have a lot of practice. In this training course, you will review multiple practical tasks and coding examples which will help you learn and understand Java better.\n\n- Open source code\nWe hide nothing from our students! Including the source code for the home task solutions and source code of examples that were shared during the lesson. Having the source code you can just copy and paste it to run it on your local computer to understand how things work better.\nYou are allowed to use all source code examples for learning purposes. This helps significantly to configure the environment and make tests work, especially in case students didn't work with any testing framework in the past.\n\n- Q&A support\nThe significant difference between the online and offline learning process is the instructor's availability. If you are in one room with a tutor he always can help you to get understand the specific concept or to help fix your code on your computer.\nIn this course, we are supporting students with answers to any questions flagged in the Q&A section. In case there will be recurring questions - separate video lessons will be created to show how to address the issue.\nSo with this course you are not just getting video materials, code exercises, source code, access to the free mobile application without limits (which is still pretty cool, huh? :) ), but you also get tutor support and answers to your questions along with this course.\n\n- Relevant knowledge\nAfter our team investigated other Java courses on Udemy we realized that most of them have nothing in common with real life. The information which is shared there is very old and significantly out of date. For example, the instructor teaches a framework which is not been used already for 15 years. Or instructors do stress on the programming design which is not used anymore at all!\nThe instructor of this course is a consultant in a top-rated IT outsourcing company and helps to bring cutting-edge solutions in IT for all his clients. Feel free to check the LinkedIn page of the instructor and check skills endorsement. More than 19 thousand people across all over the world (BTW most of them are from the top 100 companies of the world) evaluated the skills of Andrii Piatakha.\nWith this course, you can be sure that you will spend your time learning the right things from one of the best IT consultants in the world.\n\n- Free mobile App without limits for our students\nKnowing Java is one skill. Be able to pass interviews in the company - that is another skill :) Nowadays a lot of companies use tests to select candidates on the first level of interview. We developed applications to practice skills specifically for such purposes.\nIn this course, we will provide you link to download our FREE mobile app for android. (soon it will be also available for iOS platforms)\nThe instructor of this course comes up with hundreds of tests that are used to test the knowledge of candidates. With this application, you will be well-prepared for the interview.\nAlso, only for our students - there is no limit on attempts to pass certification. In the course, we will tell you how to set up a special bonus code that will remove restrictions for our students inside the app.\n\n- High concentration of useful material in each lesson\nSometimes you can notice that watching 5 minutes of our lesson is equivalent to watching another 30 minutes lesson.\nThis is because time spent for preparation for the lesson (script for the lesson, lesson structure) and video editing (to cut boring pieces of the lesson or time when the program loads) sometimes 10 times as much (sometimes even 20) as the final lesson duration after video editing.\nAlso, each topic is separated from another. In case some concept will be explained in the next lesson and you don't need to worry about understanding this in the scope of this lesson - the instructor will make an announcement when a specific topic will be covered.\nGo and try it yourself! We will appreciate your feedback.\n\n\n\n\nSo don't wait! Take a look at the lessons' preview if you still have doubts!\nBuy this course today, and you will get all updates for FREE!\nFor those who successfully passed this training course, or for students who were recognized for asking amazing questions, there is a special offer from the IT-Bulls company! The creator of this course is IT-Bulls company CEO and Founder. We are always in search of talents to run our amazing startups together with you. Probably you always dreamed about running your startup? In this course, you will be able to find the team who will teach you how to do that and (in particular cases) will be glad to help with implementation!\nHope you enjoy this course! And remember, we appreciate all your feedback! Your feedback will help us to become even better! Your feedback will help us to create to best Java course ever!\nSee you at the lessons! :)",
      "target_audience": [
        "This course is created for Java Software Engineers"
      ]
    },
    {
      "title": "Programming Fundamentals + Python 3 Cram Course in 7 Days™",
      "url": "https://www.udemy.com/course/fundamentals-of-programming-coding/",
      "bio": "Learn in 7 DAYS the language of the developers and be able to understand and write easily to every programming language!",
      "objectives": [
        "What is a programming language and how you can use it to automate things and boost your work efficiency.",
        "Why to use programming languages and what you can achieve by creating fancy apps with great functionalities.",
        "What are Variables, If-statement and loops.",
        "What are Arrays and how you can use Elements of High-Quality Program.",
        "Learn how to develop impressing Python applications in a few minutes/ hours.",
        "Add Python 3 to your Resume by Understanding Object-Oriented Programming (OOP)",
        "Automate Coding Tasks By Building Custom Python Functions.",
        "Use Loops to Improve Efficiency, Save Time, Maximize Productivity."
      ],
      "course_content": {},
      "requirements": [
        "You will not need any any prior knowledge - so get started now!",
        "You should be committed to run through the course and become knowledgeable about Computer Programming.",
        "You should be willing to learn."
      ],
      "description": "**** In this course, you'll learn the programming and algorithmic logic for applying it to EVERY PROGRAMMING LANGUAGE. ****\nFirstly, you will learn about how programming works, the sequential order and the variables. Next, we'll get into conditional statements, and while and do while loops. Once you know the basics, you can more easily learn specific languages to build on top of what you already know. It's time to introduce you to skills you can apply to almost any programming language in the future.\n\n\nJoin over 200,000 students just like you who’re having massive success in Python.\nWant to go from no previous coding experience -- overwhelmed and confused about where to even start -- to advanced Python programmer, able to seamlessly build creative and exciting programs with confidence?\nYou wouldn’t be reading this otherwise. Here’s the great news…\nYou’ve just stumbled upon the most complete, in-depth beginner to advanced Python programming course online.\nWhether you want to:\n- become an in-demand Python developer for exciting software companies\n- go freelance and work from home, setting your own schedule and rates\n- sharpen your core programming skills to reach the advanced level\n- simply bring your own ideas to life with your first profitable program\n...this complete Python developer course is exactly what you need, and more. (You’ll even get a certification of completion to add to your arsenal)\n\n\nWhat makes this course a bestseller?\nMaster Python in 7 Days! Learn the basic of computer programming, variables, if-statements and decision making, loops, funtions and files input-output, XML Processing and Database Handling.\nAfter this course you will be able to code your fancy app for your work or your personal porfolio. Learning Python will give you more opportunities for jobs and career advancement because Python is one of the most requested skills in 2022!\nThis course requires no previous programming or Python experience. If you’ve never programmed a computer before, or if you know another programming language and want to learn Python, this course will teach you everything you need.",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous coding experience, to intermediates looking to sharpen their skills to the expert level",
        "Anyone who has an interest in the computer programming methodology or certifications.",
        "Students who wish to learn programming languages and students who wish to learn computer science.",
        "Students who require a basic understanding of computer programming."
      ]
    },
    {
      "title": "COMPLETE PERL Programming",
      "url": "https://www.udemy.com/course/learn-perl-programming-t/",
      "bio": "learn to write CGI Perl and regular expressions with other logic in perl",
      "objectives": [
        "On completion of this course you could write complex PERL programs.",
        "You could develop CGI-PERL backend scripts for your website/web applications.",
        "You could perform advanced text analysis using PERL Regular Expressions, etc.",
        "Develop various application on PERL for Windows, Linux, and Mac environments."
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites at all. Previous programming experience could be useful, but not completely required!"
      ],
      "description": "This course is all about Perl programming language. This is a beginner level course, where you will learn Perl programming from scratch. As you proceed to the later sections of the course, you will learn some of the advanced concepts in Perl. Although Perl is considered an old programming language, but it has some of the best Text processing capabilities compared to other languages. Perl is a newer language when compared to C, but people do consider C as a foundational language that gives you far lesser option on Text Processing and Server side development. Nobody in the world uses C for writing backend server side scripts, but Perl has been very popular in this category since long time. In most recent time, Perl is again getting attention by the developer communities.\nThis course is divided into multiple sections. The course begins with Perl datatypes and operators, moving towards conditionals and loops. You would also learn Pattern Matching with Regular Expressions, and server-side programming with CGI-PERL. You would also learn various debugging options, and deployment of PERL programs, and modules with Perl compiler with various example programs.\nWe would cover topics such as Scalars, Boolean, strings, lists, mathematical operators, assignment operators, conditional operators, loops like while, for, foreach, do while, until, do until, and more with if else conditionals, control structures and Subroutines. Regular expression would be a broad category where various types of expressions in form of query could be generated and provided text operation is performed like searching, inserting, replacing, counting, on either STDIN, or external file.\nWe would learn to create useful CGI-PERL scripts for backend or server-side implementation of any web application or website, where we can retrieve information from html form, write back html pages, write emails, etc.\nVarious example programs for PERL in all the topics covered and provided with a downloadable zip file, that could be used by students to develop complex PERL applications.",
      "target_audience": [
        "Anyone who is passionate about learning PERL programming, be it Regular Expression for text analysis, CGI for web development, and simple PERL concepts."
      ]
    },
    {
      "title": "Learn C Programming : Complete Course for Beginners-Hands On",
      "url": "https://www.udemy.com/course/learn-c-programming-complete-course-for-beginners-hands-on/",
      "bio": "Step By Step guide to Learn C Programming for Beginners - 2021",
      "objectives": [
        "Understand the fundamentals of the C Programming Language.",
        "Understand variables and the different data types.",
        "Understand Operators, Conditional statements, Loops and jump statements in C programming.",
        "Understand arrays, different types of array and operations of array.",
        "Understand Pointers, User defined functions, Built-in functions and recursive functions.",
        "Make yourself more marketable for higher level programming positions.",
        "Understand dynamic memory allocation, different dynamic memory allocations functions.",
        "Understand Files & different built-in function of file.",
        "How to write high quality C code."
      ],
      "course_content": {},
      "requirements": [
        "Basic computer skills",
        "Ability to install software on your computer",
        "Admin rights may be required for software installation"
      ],
      "description": "Thanks for showing your interest in this course :)\nThis course specially designed for Students and Developers who are looking Beginners level concepts. Having C programming skills gives you great career opportunities, You’ll learn how to write high-quality C code and to make yourself more marketable for best programming positions.\nLet me tell you a little bit about the course:\nWe start the course by Introduction to C programming Language.\nWe will install software for the course that is Codeblocks.\nThen we will go through the process of compiling and executing C programming Environment.\nWe will learn Operators and its importance in C program.\nThen we will learn Conditional statements, Loops and jump statements in C programming Language.\nWe will learn Introduction to arrays, different types of array and operations of array.\nThen we will learn Introduction to strings and operations of string with and without built-in functions.\nThen we will go through introduction to pointer and combination of arrays and pointers.\nWe will understand user defined functions and built-in functions.\nWe will learn different form of function.\nThen we will learn Recursive functions with on example.\nThen we will learn User-defined data types such as structures, Union and enumeration.\nWe will learn dynamic memory allocation and different dynamic memory allocations functions.\nWe will learn introduction to files and different built-in function of file.",
      "target_audience": [
        "This course is for anyone who learn Fundamentals of C Programing.",
        "This course is for students",
        "This course is for anyone who is in the software industry.",
        "Developers who work on Coding in Embedded Systems Projects",
        "This Course is for Beginners"
      ]
    },
    {
      "title": "Data Analysis In-Depth (With Python)",
      "url": "https://www.udemy.com/course/data-analysis-in-depth-with-python/",
      "bio": "Data Analysis In-Depth (With Python)",
      "objectives": [
        "Data Analysis In-depth, Covers Introduction, Statistics, Hypothesis, Python Language, Numpy, Pandas, Matplotlib, Seaborn and Complete EDA",
        "Completing this course will also make you ready for most interview questions for Data Analysts Role",
        "This is Pre-requisite for Machine Learning, Deep Learning, Reinforcement Learning, NLP, and other AI courses",
        "Includes Optional Project and path to success"
      ],
      "course_content": {
        "Data Analysis In-Depth (In Python)": [
          "Introduction to Data Science Career Path",
          "Day 1 - Introduction to Data Science",
          "Day 2 - Introduction to Data Analytics",
          "Day 3 - Statistics for Data Analysis - Scalar, Vectors and Matrix",
          "Day 4 - Statistics for Data Analysis - Probability",
          "Day 5 - Statistics for Data Analysis - Probability",
          "Day 6 - Statistics for Data Analysis - Probability",
          "Day 7 - Statistics for Data Analysis - Probability",
          "Day 8 - Statistics for Data Analysis - Statistical Hypothesis",
          "Day 9A - Statistics for Data Analysis - Statistical Hypothesis",
          "Day 9B - Python for Data Analysis",
          "Day 10 - Python for Data Analysis",
          "Day 11 - Python for Data Analysis",
          "Day 12 - Python for Data Analysis",
          "Day 13 - Numpy",
          "Day 14 - Pandas",
          "Day 15 - Pandas",
          "Day 16 - Pandas",
          "Day 17 - Pandas",
          "Day 18 - Seaborn",
          "Day 19 A - Seaborn",
          "Day 19 B - EDA",
          "Day 20 A - EDA Cont",
          "Day 20 B - What Next, How to prepare for Job/Career Switch"
        ]
      },
      "requirements": [
        "No Pre-requisite required. Curiosity to learn."
      ],
      "description": "Data Analysis In-Depth (With Python)\n\n\n1. What will students learn in your course?\nData Analysis In-depth, Covers Introduction, Statistics, Hypothesis, Python Language, Numpy, Pandas, Matplotlib, Seaborn and Complete EDA\nCompleting this course will also make you ready for most interview questions for Data Analysts Role\nThis is Pre-requisite for Machine Learning, Deep Learning, Reinforcement Learning, NLP, and other AI courses\nIncludes Optional Project and path to success\n\n\n2. What are the requirements or prerequisites for taking your course?\nNo Pre-requisite required. Curiosity to learn.\n\n\n3. Who is this course for?\nPeople looking to advance their career in Data Science and Data Analytics\nAlready working in Data Science/ Data Analyst Roles and want to clear the concepts\nWant to make base strong before moving to Machine Learning, Deep Learning, Reinforcement Learning, NLP, and other AI courses\nCurrently working as Business Analyst / Analyzing data in Excel, Tableau, Qlik, Power BI, etc. And want to do scalable and automated analysis in Python.\n\n\n4. Is this course in depth and will make industry ready?\nAbsolutely yes, it will make you ready to creach Data Analyst roles interview as well as it is pre requisite for Machine Learning, Deep Learning, etc\n\n\n5. I am new to IT/Data Science, Will i understand?\nAbsolutely yes, it is taught in most simplest way for every one to understand",
      "target_audience": [
        "People looking to advance their career in Data Science and Data Analytics",
        "Already working in Data Science/ Data Analyst Roles and want to clear the concepts",
        "Want to make base strong before moving to Machine Learning, Deep Learning, Reinforcement Learning, NLP, and other AI courses",
        "Currently working as Business Analyst / Analyzing data in Excel, Tableau, Qlik, Power BI, etc. And want to do scalable and automated analysis in Python."
      ]
    },
    {
      "title": "Java Servlets Certification Training",
      "url": "https://www.udemy.com/course/java-servlets-training/",
      "bio": "Comprehensive course on Java Servlet with practical examples and coding on the go. Develop useful web-based applications",
      "objectives": [
        "Deep-dive into the world of Java Servlets",
        "Become a top web programmer with Java Servlet programming skills",
        "Java Servlet Architecture",
        "Important terms related to Java Servlets",
        "How Servlet works and Servlet Life Cycle",
        "ServletRequest, ServletResponse, ServletConfig, and ServletContext",
        "Steps to configure and deploy Servlet",
        "Servlet Collaboration",
        "Understand Java EE - Servlets, JSP, Scriptlets, JSTL, web-xml and EL",
        "Understand static and Dynamic webpages",
        "Create complex web applications using servlets",
        "Servlet interface, Generic and HttpServlet interfaces",
        "Annotation and Xml based configuration in Servlets",
        "Difference between Get & Post",
        "Load On Startup Configuration",
        "Request Scope in Servlets",
        "RequsetDispatcher interface",
        "Interservlet communication using Response sendRedirect",
        "Session Tracking using cookies",
        "HiddenFormFields, Url Rewriting, HttpSession",
        "Filters in servlets, FilterConfig",
        "Database connection in servlets",
        "CRUD operations using servlets to mysql database",
        "Events and Listeners in servlets",
        "ServletContext Listener and HttpSessionListener",
        "Understand the basics of using Maven, Tomcat and Eclipse",
        "Run Web Applications in Tomcat"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Java Servlets course by Uplatz.\n\n\nA Servlet is a Java Programming language class that is used to extend the capabilities of servers that host applications accessed by means of a request-response programming model. Although servlets can respond to any type of request, they are commonly used to extend the applications hosted by web servers. It is also a web component that is deployed on the server to create a dynamic web page.\nServlet Technology resides at server side and it generates dynamic web page, used to create web application. Java Servlets are programs that act as a middle layer between a requests coming from a Web browser / HTTP client and databases or the applications on the HTTP server.\nServlet is a Java class that runs inside the container. It allows you to process the HTTP request and generate dynamic web pages, but it's more Java then HTML like you need to code HTML inside Java, which is both erroneous and not recommended. Servlet is mainly used as a Controller in web applications created using the MVC design pattern. One of the famous examples of that is the DispatcherServlet of Spring MVC framework, which acts as a front controller. Its job is to receive request and process it, but the view generate or dynamic web page generation functionality is passed down to JSP. Though it provides the data that need to be shown in JSP, which makes the view part of the Model View Controller (MVC) design pattern.\nBefore servlets, we had CGI i.e. Common Gateway Interface. It is a standard way for a Web server to pass a user’s request to an application program and receives the response to forward to the user. When the user requests a Web page, the server sends back the requested page. However, when a user fills out a form on a Web page and sends it in, it is processed by an application program. The Web server typically passes the form information to a small application program. This program processes the data and sends back a confirmation message. This process of passing data back and forth between the server and the application is called the common gateway interface (CGI). It is part of the Web’s Hypertext Transfer Protocol.\nThis practical, application-oriented Java Servlets training by Uplatz teaches Java Servlets technology and shows how to use it to develop simple to complex web applications. It is intended for both the beginners as well as experienced Java (J2SE) programmers who want to build web applications or J2EE components and systems.\nThe Java Servlet course begins with an overview of server-side Java programming and web protocols. Then students learn the Java Servlets architecture, the request/response cycle, and servlet life cycle, and how to build interactive web applications that parse and/or generate HTML forms. Several prominent patterns for servlet application architecture are considered. Sessions are studied as a means to developing sophisticated client/server conversations over several HTML pages. Multi-tier applications are developed using servlets and JDBC for access to relational databases.\nThis Java Servlet training develops the important concept of the separation of programmatic and declarative development: use of configuration and context information in lieu of hard-coded values, resource locations, etc., to make the web application as portable and easy to administer as possible. The course introduces JavaBeans as a standard for business and data objects that can be shared among servlets and JSPs, and develops techniques for sharing such objects at session scope or by request forwarding. Finally, students learn how to implement filters to adapt existing servlets by pre- and post-processing the request and response.\n\n\nJava Servlets - course syllabus\nIntroduction to WorldWideWeb\nUnderstanding static and Dynamic webpages\nHow to create a HelloWorld application using servlets\nServlet interface, Generic and HttpServlet interfaces\nAnnotation and Xml based configuration in Servlets\nDifference between Get & Post\nHow Servlet works (Life cycle)\nLoad On Startup Configuration\nRequest Scope in Servlets\nRequsetDispatcher interface\nInterservlet communication using Response.sendRedirect\nServletConfig\nServletContext\nSession Tracking using cookies\nHiddenFormFields\nURL Rewriting\nHttpSession\nFilters in servlets\nFilterConfig\nDatabase connection in servlets\nCRUD operations using servlets to mysql database\nEvents and Listeners in servlets\nServletContext Listener\nHtttpSessionListener\n\n\nWhat you will learn in this Java Servlets course\nUnderstand and appreciate the role of Java Servlets in the overall Java 2 Enterprise Edition architecture, and as the best Java solution to HTTP application development\nUse request and response objects provided to a servlet to read CGI parameters and to produce an HTML response\nDevelop interactive web applications using HTML forms and servlets\nManage complex conversations with HTTP clients using session attributes\nUnderstand the role of JDBC in Java persistence code, and use JDBC for persistence in servlet applications\nPreserve portability and ease of administration for a servlet application by parameterizing servlet code, using initialization parameters, properties files, and JNDI\nUse JavaBeans classes to share complex business data between components\nImplement filters to adapt existing servlets with new features, and to maximize the decomposition of logic between vertical business functions and horizontal facilities\nUnderstand and manage HTTP sessions in a web application\nCreate servlet filters and listeners\nWrite pages created with JavaServer Pages technology (JSP pages)\nCreate easy-to-maintain JSP pages using the Expression Language and theJSP Standard Tag Library (JSTL)\nUse integrated development environments (IDEs) and application serversfor Java EE development and deployment\nWrite servlets using the Java programming language (Java servlets)\n\n\nJava Servlets: Servlet Architecture\nThe Java Servlet architecture includes communication interface, protocol used, requirements of client and server, the programming with the languages and software involved. Basically, it performs the below-mentioned tasks.\nFirst, it reads the explicit data sent by the clients (browsers). This data can include an HTML form on a Web page, an applet or a custom HTTP client program. It also reads implicit HTTP request data sent by the clients (browsers). This can include cookies, media types and compression schemes the browser understands, and so forth.\nAfter that, the servlet processes the data and generate the results. This process may require communicating to a database, executing an RMI, invoking a Web service, or computing the response directly.\nAfter processing, it sends the explicit data (i.e., the document) to the clients (browsers). This document can be sent in a variety of formats, including text (HTML or XML), binary (GIF images), or Excel formats.\nFinally, it also sends the implicit HTTP response to the clients (browsers). This includes telling the browsers or other clients what type of document is being returned\n\n\nServlet Life Cycle\nThe Servlet life cycle mainly includes the following four stages,\nLoading a Servlet\nInitializing the Servlet\nRequest handling\nDestroying the Servlet\n\n\nJava Servlets: Steps to Create Servlet\nCreate a directory structure\nCreate a Servlet\nCompile the Servlet\nAdd mappings to the web.xml file\nStart the server and deploy the project\nAccess the servlet",
      "target_audience": [
        "Java Developers, J2EE and Java EE Developers",
        "Application Developers and Senior Java/Application Developers",
        "Technical Architects",
        "Beginners who wish to make their career in Web Development/Programming",
        "Lead Java Developers Spring / J2EE",
        "Full Stack Java Developers and Programmers",
        "Engineering Managers (JavaScript & Java)",
        "Java Developers API - Technologists",
        "Android Developers",
        "Software Engineers and Senior Software Engineers",
        "Individuals & Enthusiasts who wish to develop their own sophisticated web applications"
      ]
    },
    {
      "title": "1 hour corporate training - Coding for beginners",
      "url": "https://www.udemy.com/course/1-hour-corporate-training-coding-for-beginners/",
      "bio": "Most of John Bura's courses are on sale for 9 dollars! https://www.udemy.com/u/johnbura/ Sale ends Oct 31 2013! Act now!",
      "objectives": [
        "To learn how websites work",
        "To learn about programming",
        "To learn about CSS",
        "To learn about HTML",
        "To learn about javascript"
      ],
      "course_content": {},
      "requirements": [
        "A computer with an uptodate browser"
      ],
      "description": "Coding is the new math. Coding is thought of as this hard to do task. Really it isn't that hard especially after you take this course. This course has an hour of jam packed materials so people can learn the most programming in one hour.\nThis is a great course for any workspace. Not only do you get to learn a valuable new skill but you and your company get to learn what is driving business forward.\nIf you take this course you will not only learn to code you will learn more about the digital world around you.",
      "target_audience": [
        "Beginners",
        "People who want to learn about how programming works",
        "People who have never thought they could program before"
      ]
    },
    {
      "title": "Beginners Guide to Learning Programming",
      "url": "https://www.udemy.com/course/beginners-guide-to-learning-programming/",
      "bio": "Want To Learn How To Program? This Infinite Skills Course Is Designed To Get You Started With Programming",
      "objectives": [
        "Do You Find Programming Confusing?",
        "Learn The Key Fundamentals That Make Programming In Any Language Simple"
      ],
      "course_content": {},
      "requirements": [
        "PC or Mac"
      ],
      "description": "Want To Learn How To Program? This Course Will Teach You The Core Principles Of Programming In Any Computer Language - Quickly And Easily.\nThis Learning Programming training course from Infinite Skills teaches you everything you need to know to start programming. This course is designed for the absolute beginner, meaning no programming or coding experience is required.\n\nYou will start by learning programming terms, such as statements, variables, parameters, and operators. From there, this course will teach you programming concepts, including how to create a solution, assign and change variable values, and perform mathematical calculations. This video tutorial will also cover abstract programming concepts, such as procedural and functional programming, pseudocode, and flowcharting. This course includes a project that allows you to demonstrate some of the topics that have been discussed throughout the course.\n\nOnce you have completed this computer based training course, you will have learned the programming basics. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Any One Who Wants To Learn How To Program",
        "No Prior Programming Skills Needed - A Course For Complete Novices"
      ]
    },
    {
      "title": "The Ultimate Guide to Python Programming With Python 3.10",
      "url": "https://www.udemy.com/course/python-wizard/",
      "bio": "Learn python programming from the Head-to-Tail, starting from the Bare Bones to Developing Real Applications with python",
      "objectives": [
        "Define Computer Architecture, Data Structures and Generic Programming Concepts",
        "Use Terminal to Navigate and Perform Basic File Operations",
        "Fundamental Programming and Implement Basic Data Structures With Python",
        "Use Structural Pattern Matching With match-case Statements in Python 3.10",
        "Create Different Array Data Structures like Lists, Tuples, Sets, Typed Arrays, Stacks, Queues and Priority Queues",
        "Use Python REPL to Write Python Code From the Terminal and Test Ideas Easily.",
        "Define Functions, Generator Functions and Decorator Functions.",
        "Use Third-Party Packages and Create Virtual Environments for Projects.",
        "Object-Oriented Programming With Python Classes and Objects",
        "Reading and Writing Files And JSON Data With Python",
        "Debug and Write Consistent and Efficient Python Programs"
      ],
      "course_content": {},
      "requirements": [
        "Switching Computer On"
      ],
      "description": "Welcome to this python programming course for beginners, where you'll become a Python Wizard! (python wizard is someone who can handle any problem like a boss and use the keyboard like a piano~ )\n\n\nAfter completing this course, you can easily handle any programming project. You'll be able to use core python features and its hidden secrets to develop consistent and efficient programs. You'll also learn about the often-forgotten basics and special features of programming and python in general.\n\n\nThe course can be divided into four broad levels -\nLevel 1 [ Geek ]\nComputers architecture\nBits & Bytes of Data\nWhat is Programming\nTerminal\nLevel 2 [ Newbie ]\nPython Installation & Setup\nHands-on Programming With Python\nBasics of Python, etc.\nClient-Info Application\nConsole IO\nLevel 3 [ Coder ] -\nData Types\nDecision Control\nLoops\nFunctions\nClasses & Objects\nError Handling\nModules & Packages\nPrankster Project\nLevel 4 [ Wizard ] -\nString Formatting\nStack & Queue Data Structures\nShallow & Deep Copies\nPacking & Unpacking Operators\nStructural Pattern Matching\npip - python package manager\nVirtual Environments\nList Comprehensions\nIterables & Generators\nFunction Decorators\nObject-Oriented Programming\nSingletons\nSpecial Methods\nOperator Overloading\nIterable Classes\nproperty\nClass __slots__\ndataclass\nMetaclass\nType Hinting\nFile IO\nThreading & Multiprocessing\nDebugging\nTkinter GUI\nSedentary Alert Application\n\n\nEach level takes you a step further to python mastery!\nIf you have some skills with python, then you're most welcome to brush up your skills and advance to the next level. Or even if you can use a computer only, that's completely fine! We will start from the complete basics of general programming and become an expert in python programming. So you can gain something new as well!\n\n\nJoin me with the thousands of students who have started their programming journey because\nCODERS ARE THE MORDERN WIZRADS!",
      "target_audience": [
        "Complete newbies who wants to learn to program",
        "Beginner python developers seeking expertise in python programming"
      ]
    },
    {
      "title": "Learn Coding: C++ & Python",
      "url": "https://www.udemy.com/course/learn-coding-c-python/",
      "bio": "Practical Hands On Coding with C++ and Python from scratch",
      "objectives": [
        "Setting Up C++ Development Environment",
        "Setting Up Python Development Environment",
        "Data Types",
        "Operators",
        "Conditional Statements",
        "Loops",
        "Getting Input from Users",
        "Creating and using Variables",
        "Python Data Structures",
        "Using Code Comments",
        "Python Functions",
        "Using Python Modules and Packages",
        "Handling Exception Errors in Python",
        "How to create a digital clock",
        "How to create a calculator"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of using a computer",
        "Basic knowledge of using the internet"
      ],
      "description": "Python is undoubtedly the most popular programming language and the ideal choice when starting to explore code. Not only is it easy to understand and follow, it’s also great for achieving quick results and it’s astonishingly powerful. We’re using Python 3, which is the latest version of the language and with it, you’re able to create everyday useful software, graphical games, text adventures and interactive programs that can be fashioned for use at home or at work. Python is a fantastic language and we will help you master the basics to set you on your way to becoming an accomplished Python programmer.\n\n\nC++ is one of the most powerful, high-performing and efficient programming languages you can learn. Web browsers, games, applications and even entire operating systems are coded and created using C++; which makes understanding it a highly sought after skill to have.  You will learn  how to get started with c++ , exploring  the whole process from entering a few lines of code that will generate something on your screen, through to data types and user interaction.",
      "target_audience": [
        "Beginners to coding |programming",
        "Beginners to Python",
        "Beginners to C++"
      ]
    },
    {
      "title": "Interview Questions and Answer on Python",
      "url": "https://www.udemy.com/course/interview-questions-and-answer-on-python-k/",
      "bio": "This Course include 150+ Questions and Answers of different levels which helps you to crack the interview",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Python is most popular language with it's attributes. If you want to be confident about cracking the aptitude test in programming , then Enroll our Course and go through the Question and Answer. Practice it.\n\n\nFor the students who are afraid of aptitude test in programming. We have designed a set of Interview Cracking course which enhances your knowledge and make you confident.\nThe practice tests will cover the following topics\n* Variables\n* Basic Operation\n* Formatting\n* Numeric Type\n* Data type\n* Problems on precedence\n* Bit-wise numeric\n* Loops\n* Strings\n* Lists\n* Tuples\n* Sets\n* Classes\n* Dictionary function\n* Built-in function\n\n\nThe passing score for the pure job interview practice exams is set to 60% to80%, as there are only correct answers given.\nLet us walk you through an example. You will start a test and get asked questions which can occur during a job interview.\nSo read the question – think by yourself what you would answer and then read the given answer.\nWe wish you a lot of gains in your knowledge and very much success in your next job interview!\n\n\nPlease be aware that we are working on this course on an ongoing basis. We always want to deliver highest quality to you and we try our best to do so. If you find any issue let us know and we will correct it immediately :)",
      "target_audience": [
        "Job seekers",
        "Students who wants to Crack placements",
        "Aptitude test preparation"
      ]
    },
    {
      "title": "JAVA Immersive Learning Course",
      "url": "https://www.udemy.com/course/java-immersive-learning-course/",
      "bio": "A full introduction to OOP.",
      "objectives": [
        "42. And possibly more. Although it's a bit hard to tell until it's over."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Variables and Console Output",
          "Math Functions",
          "More Math Functions",
          "Final and Casting",
          "Strings and string methods",
          "Input with Scanner",
          "Dialogue boxes",
          "Background Info on Numbers and Bases",
          "Introduction to More Advanced Operators",
          "Quiz 1"
        ],
        "Decision Statements": [
          "*If and Else",
          "If, Else If, Else",
          "Nested If",
          "Logic in If Statements",
          "String Comparison",
          "Conditional Operator",
          "Switch Statements",
          "Printf 1",
          "Printf 2",
          "Printf 3",
          "Quiz 2"
        ],
        "Loops": [
          "Prefix and Postfix Counting",
          "While Loops Examples 1",
          "While Loops Examples 2",
          "Nesting While Loops",
          "For Loops",
          "Nested For Loops 1",
          "Nested For Loops 2",
          "Random Numbers",
          "Problem Solving Ideas",
          "File Basics",
          "Quiz 3"
        ],
        "Functions": [
          "Intro to Functions",
          "Functions with Parameters",
          "Overloading Function Names",
          "Return Type Functions",
          "Recursive Functions",
          "Building Bigger Functions",
          "Quiz 4"
        ],
        "Classes I": [
          "Intro to Classes",
          "More Intro to Classes",
          "Getting and Setting (i.e. Accesors and Mutators)",
          "Constructors",
          "Composition",
          "Overloading Methods in Classes",
          "Quiz 5"
        ],
        "Arrays": [
          "Intro to Arrays",
          "Walking Through Arrays and the Enhanced For Loop",
          "Passing Arrays",
          "Returning Arrays from Functions",
          "Arrays of Objects",
          "Two Dimensional Arrays",
          "Jagged Arrays",
          "Deep Copy Vs Shallow Copy of an Array",
          "Motivation for ArrayList",
          "ArrayList",
          "Quiz 6"
        ],
        "Arrays II: Practice Problems": [
          "Output a word backwards",
          "Euler Totient Functon",
          "Statistics with Java",
          "MergeIt Function",
          "Composing and Concatentating Two Arrays",
          "1D arrays as 2D arrays",
          "Ramanujan Number",
          "Polynomial Evaluation",
          "Testing for Palindromes",
          "Testing if two numbers are permutations of one another",
          "Finding a substring within a greater string",
          "N_choose_K Version 1",
          "Hash Functions 1",
          "Hash Functions 2",
          "Sorting with Arrays (Insertion Sort and Selection Sort)"
        ],
        "Arrays III - Problem solving in arrays": [
          "The Collatz Question",
          "Modular Exponentiation",
          "N_choose_K Re-explained",
          "Rabin-Karp",
          "Collatz Answer"
        ],
        "Classes II": [
          "Review of Classes",
          "Static",
          "Passing Objects to Methods and Returning Objects from Methods",
          "toString and Equals Methods",
          "Review of Ideas up Until Now",
          "Copy Constructor and Copy Method",
          "Aggregation/Composition: HAS-A",
          "This",
          "Arrays in Classes",
          "Arrays of Objects",
          "Enum 1",
          "Enum 2",
          "Overall Review of Classes 1",
          "Overall Review of Classes 2",
          "Composition Example (Bread and Sandwich)",
          "Composition Example (Shirt and Person)"
        ],
        "Wrapper Classes": [
          "Character Wrapper Class",
          "String Wrapper Class",
          "StringBuilder",
          "Tokenizing, Autboxing, and more Wrappers"
        ]
      },
      "requirements": [
        "No previous knowledge is required for this course"
      ],
      "description": "There are many different types of programming styles, such as algorithmic programming, functional programming, and object-oriented programming. And while each style is suited to a different programming language, Java is capable of all three of the above and more. Java was originally built to focus on object-oriented programming (OOP) and this course starts with that in mind, explaining all the steps needed to learn standard topics, as would be taught in a college classroom. The course solves standard problems in Java, with attention to general as well as language-specific issues including event-driven programming; elements of graphical interfaces (GUIs), inheritance and polymorphism, recursion, file I/O, exception handling, packages, generics, dynamic data structures such as linked lists, array lists, testing and debugging, applications of simple data structures, multithreaded programming, and more. This will be a full course in Java, including design patterns.\nThe course begins with a solid understanding of the fundamental concepts of objected oriented programming and java language and builds from there, giving students many, many practice examples to code on their own and learn from for further building. Successful students will be able to write correct and complete Java implementations of homework projects. Successful students will also complete exam questions that test the use cases and will be able to write any program that is asked by employers when applying for internships or jobs. Good luck!",
      "target_audience": [
        "Everyone should take this course."
      ]
    },
    {
      "title": "Show And Tell: Sikuli - Pattern-Matching and Automation",
      "url": "https://www.udemy.com/course/sikuli-show-and-tell/",
      "bio": "A truly unusual technology - the power of machine learning for automating unusual stuff",
      "objectives": [
        "Automate data-pulls from sites and sources that block other scripting tools",
        "Generate alerts based on Facebook/Skype and other hard-to-detect events",
        "Search large PDFs for images that \"look like\" the one you are searching for"
      ],
      "course_content": {},
      "requirements": [
        "Absolutely basic Python or Java programming ability"
      ],
      "description": "SikuliX is very unusual - a scripting/automation technology that relies on pattern matching, and is available for use via Python or Java. Developed at the User Interface Design Group at MIT,  is a powerful and easy-to-use technology that uses image recognition to automate just about anything that appears on-screen.\n\nSikuli is rather hard to slot - it offers all of the functionality of an automation or scripting tool, but it also offers some powerful and very novel image-matching functionality for truly novel use-cases that revolve around image search. In addition it has an OCR-mode, in which image matches are performed after converting those image patterns to text. This gives rise to some pretty new applications.\n\nThe OCR-functionality is powered by Tesseract, an open-source optical character recognition engine whose development is sponsored by Google.",
      "target_audience": [
        "Yep! Automation testers and folks look to automate repetitive tasks",
        "Yep! Data professionals looking to extract hard-to-pull data",
        "Yep! Business professionals looking to dynamically update models they've built"
      ]
    },
    {
      "title": "Learn The Fundamentals of Programming: Core Concepts",
      "url": "https://www.udemy.com/course/computer-science-fundamentals-programming/",
      "bio": "Learn the fundamentals of computer science for programming",
      "objectives": [
        "Understand how computer programming works",
        "Learn the fundamentals of Computer Science"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Understanding Programming"
        ],
        "Using Code to Define Actions": [
          "Values and variables",
          "Use functions to repeat actions",
          "Break down tasks and customize functions with parameters",
          "Variables and scope",
          "Return values from functions and API"
        ],
        "Repeat Actions and Test for Conditions": [
          "Capture input from the user",
          "Manage different variable types",
          "Create conditional tests and build compound conditional tests",
          "Using Loops",
          "Arrays"
        ],
        "Objects and OOP": [
          "Object-oriented programming",
          "Work with existing classes and objects",
          "Make your own classes and objects",
          "Extend classes",
          "Use polymorphism using interfaces"
        ],
        "Beyond Programming": [
          "Debugging",
          "Refactor code",
          "Github",
          "Coding your app or program",
          "Quiz"
        ]
      },
      "requirements": [
        "basic knowledge of using computers"
      ],
      "description": "In this course, you'll learn how programming languages work. We'll start by explaining the job of a programmer, taking a set of steps or a process that needs to be performed by a computer.\nNext, we'll get into conditional statements, and for while and do while loops. Then we'll jump into object-oriented programming. We'll explain classes, hierarchy, and polymorphism. Finally, we'll go beyond programming, diving into debugging, refactoring, version control systems, and multi-platform support. Once you know the basics, you can more easily learn specific languages to build on top of what you already know. It's time to introduce you to skills you can apply to almost any programming language in the future.",
      "target_audience": [
        "Any one new to computer science or needing a refresher course"
      ]
    },
    {
      "title": "Angular 8 + Spring Boot Microservices and Spring Cloud",
      "url": "https://www.udemy.com/course/angular-8-spring-boot-microservices-and-spring-cloud/",
      "bio": "Angular 8, Spring Boot, Spring Zuul, Eureka Cloud, Mysql, Liquibase, Lombok, Gradle, Intellij, NodeJS, Load Balance",
      "objectives": [
        "To Create Project With Spring Boot",
        "To Create connection between projects with Spring Cloud",
        "Step by step microservice implementation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Microservices vs Monolithic",
          "Architecture Of All Microservices"
        ],
        "Preparation For Microservices, Spring Boot, Intellij, Lombok": [
          "Source Code",
          "Prerequests - Tools And Frameworks",
          "How Can We Open And Import Project In Intellij",
          "Lombok Installation",
          "Lombok Overview And Basic Annotations",
          "Spring Boot - Overview, Basic Annotations, Dependency Injection..."
        ],
        "User Service - Microservice 1": [
          "Source Code For User Service",
          "Overview",
          "Create Project with Spring Initalizer",
          "Open User-Service In Intellij",
          "Configuration - Application Properties",
          "Hibernate - Overview And Basic Annotations",
          "User Model Class And Role Enum Class",
          "Liquibase Overview",
          "SQL And Basic Queries",
          "Liquibase Implementation For User Model Class",
          "Java Persistence API (JPA) Repository Overview",
          "User Repository Implementation",
          "User Service Implementation",
          "Rest Controller Overview - Request (Get, Post, Put, Delete, Patch), Response",
          "User Controller Implementation",
          "Spring Security Overview",
          "Authentication In Spring Security",
          "User Details Service Implementation - Security",
          "Spring Security Default Configurations",
          "Spring Web Security Configuration"
        ],
        "Eureka Server": [
          "Source Code For Eureka Server",
          "Installation",
          "Configuration - Application Properties",
          "Run And Test Eureka Server"
        ],
        "User Service (Implement Eureka)": [
          "Enable Eureka in User Service",
          "Test Eureka With User Service",
          "Run And Test User Service"
        ],
        "Course Service - Microservice 2": [
          "Source Code For Course Service",
          "Overview",
          "Installation With Spring Initalizer",
          "Configuration - Application Properties",
          "Course Model Class",
          "Transaction Model Class",
          "Liquibase Implementation For Model Classes",
          "Liquibase Implementation For Test Data",
          "Course And Transaction JPA Repository Implementation",
          "Course Service Implementation",
          "Connect to User Service With Feign Client",
          "Course Controller Implementation",
          "Enable Eureka Discoverable Service on Course Service",
          "Allowing Origins for Cross-Origin Resource Sharing",
          "Run And Test Course Service"
        ],
        "Gateway Service - Spring Zuul": [
          "Source Code For Gateway Zuul Service",
          "Installation",
          "Configuration",
          "Timeout Configuration",
          "Allowing Origins for Cross-Origin Resource Sharing",
          "Reach To Microservices Over Gateway Service",
          "Run And Test Zuul Gateway Service",
          "Load Balance Example On User Service"
        ],
        "Client Side Preparation - Angular 8": [
          "Source Code For Client Side",
          "Prerequests",
          "Angular Overview - Component, Directives..."
        ],
        "Client Side - (Implementation)": [
          "Overview",
          "Installation",
          "Configuration - Modules, Bootstrap...",
          "Model View Controller Structure In Angular",
          "Routers",
          "User Model Class",
          "Course And Transaction Model Classes",
          "User Service Implementation",
          "Login Page Implementation",
          "Register Page Implementation",
          "Course Service Implementation",
          "Profile Page Implementation",
          "Home Page Implementation",
          "Course Detail Page Implementation",
          "Navigation Bar Implementation"
        ],
        "Result": [
          "Test It After All"
        ]
      },
      "requirements": [
        "Basic Java knowledge",
        "Basic Javascript knowledge"
      ],
      "description": "In this course, we will learn microservices with using Spring Boot and Spring Cloud. To create it, we will implement eveything step by step from initial to finalize so everything will be so clear. Also, we try to look into every detail of code. Of course, we can miss some points of them but in that case, you know that all time you can ask your questions from Q&A section or from direct message. All questions and messages will be answered.\nOur application goes on with two main components. These are server side and client side.\nOn server side, the main core thing will be Spring Boot and Spring Cloud. We will implement microservices with using these two libraries. Also, we will use these libraries on microservices;\nFirst one is Spring Boot Web; Because we will use Model View Controller structure on our service.\nSecond one is Spring Security; Because we will implement secure login.\nThe other one is Java Persistence Api; Because we will use Object relational mapping.\nThe other one is Rest Repositories; Because we will use JPA and CRUD repository.\nThe other one is Liquibase; Because we will use it for database migration.\nThe other one is MySQL; Because we will use it for database.\nThe other one is Eureka Discovery; Because we will use it for communication with other services.\nLast one is Lombok; Because we will use it for clean code.\n\n\nOn client side, we will use angular 8. We will create a course management sytem on front end. Also, we will implement it step by step.",
      "target_audience": [
        "All java developers curious about microservices."
      ]
    },
    {
      "title": "All about Blockchain & SmartContract Development on Solidity",
      "url": "https://www.udemy.com/course/learn-solidity-programming-to-build-deploy-smart-contracts/",
      "bio": "Build Deploy Your First Blockchain Smart Contract by learning & using Solidity Programming Language & Ethereum",
      "objectives": [
        "You will about Blockchain Technology and how it differs from regular Web Technology",
        "You will learn about the different of any Blockchain Network and how they work together",
        "You will learn about different features of Distributed Ledger Technology and various terminology",
        "You will learn about Solidity Programming Language and how compile and run program written with it",
        "You will learn about Smart Contract and How to build and deploy your own Smart Contract with Solidity and Ethereum"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Web Technology"
      ],
      "description": "In this course, we will start by learning everything about Blockchain and Distributed Ledger Technology.\nThen we will compare how Blockchain/Distributed Ledger Technology differs from the normal World Wide Web that we have today.\nWe will then go-ahead to learn various features, concepts and terminology of Blockchain/Distributed Ledger Technology.\nWe will then learn about Smart Contracts and understand how they are connected to Blockchain.\nAfter that, we will start learning Solidity Programming Language with real hands-on by writing and deploying small smart contracts for every concept.\nFollowing are the topics we will learn:\nWhy do we need Blockchain\nWhat is Blockchain and Distributed Ledger Technology\nFeatures of a Blockchain and Distributed Ledger Technology\nEVM(Ethereum Virtual Machine) Solidity Smart Contracts\nEnvironment Setup and Data Types in Solidity Programming\nString Arrays Compiling and Executing our first Smart Contract on Blockchain Network\nCustom Data Type and Functions and Comments in Solidity Programming\nAddress and Mapping type in Solidity Programming\nConstructor Function and Function Call and Validation\nSend Ether to a Smart Contract And Payable Constructor and View Function\nView and Pure function in Solidity and how they effect the transaction cost\nEvents and Modifiers and msg.value vs msg.sender\nPassing parameter to modifier\nMemory and Storage variables\nWe will then move to create our first fully functional Smart Contract and Deploy it onto Ethereum Test Network.\nFinally we will discus about the Roadmap to become a blockchain developer and start applying for Jobs.",
      "target_audience": [
        "Anyone who wants to become a blockchain developer using Solidity and Ethereum"
      ]
    },
    {
      "title": "Python Basics: A Beginners Course and Solved Exercises",
      "url": "https://www.udemy.com/course/python-kick-start/",
      "bio": "All what you need to start coding in Python within few hours, a concise course with 20 solved exercises",
      "objectives": [
        "Master python basics, variables types, conditional statements, loops and functions",
        "Practice using exercises with solutions to kick start your Python skills",
        "Identify needed functionalities to provide basic solutions in Python",
        "Acquire a better understanding of the potential of Python programming",
        "Write simple solutions in Python"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "About This Course",
          "How To Follow This Course",
          "Course Content Summary"
        ],
        "Installing Python": [
          "Installation Options",
          "Installing Anaconda",
          "First Python Code In Jupyter",
          "Saving And Opening Your Files",
          "Chapter Content Recap"
        ],
        "Variables And Basic Data Types": [
          "Variables And Basic Data Types 1/3",
          "Variables And Basic Data Types 2/3",
          "Variables And Basic Data Types 3/3",
          "Casting Variables 1/2",
          "Casting Variables 2/2",
          "Print() Function 1/2",
          "Print() Function 2/2",
          "Input() Function",
          "Section Content Summary"
        ],
        "Containers In Python": [
          "Lists 1/2",
          "Lists 2/2",
          "Tuples 1/2",
          "Tuples 2/2",
          "Sets 1/2",
          "Sets 2/2",
          "Slicing 1/3",
          "Slicing 2/3",
          "Slicing 3/3",
          "Dictionaries 1/2",
          "Dictionaries 2/2",
          "Section Content Summary"
        ],
        "Basic Operators": [
          "Introducing Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Comparison Operators",
          "Logical Operators",
          "Membership Operators",
          "Identity Operators",
          "Operators Precedence",
          "Section Content Recap"
        ],
        "Conditional Statement": [
          "Conditional Statement",
          "Nested Conditional Statement",
          "Ternary Conditional Statement",
          "Conditional Statement Recap"
        ],
        "Loops And Iterations": [
          "For Loops",
          "While Loops",
          "Break And Continue Statement",
          "Nested Loops",
          "Section Content Recap"
        ],
        "Comprehensions": [
          "Comprehensions In Python",
          "Types Of Comprehensions",
          "Nested Comprehensions",
          "Comprehensions Section Recap"
        ],
        "Functions": [
          "Defining Functions",
          "Variables Scope",
          "Recursive Functions",
          "Modules",
          "Lambda Functions",
          "Section Summary"
        ],
        "Working With Files": [
          "Opening And Reading Files",
          "Writing In Files",
          "CSV Files",
          "JSON Files",
          "Section Summary"
        ]
      },
      "requirements": [
        "No programming experience is needed this course starts from the very basic level"
      ],
      "description": "Welcome to the Python course! Python is a high-level, interpreted, and general-purpose dynamic programming language that is widely used for data analysis, web development, artificial intelligence, and much more. With its simplicity, versatility, and vast library of modules, Python is an ideal language for beginners and experienced programmers alike.\nHow to follow this course: In this course, you will be guided through the basics of the Python language and its various features, with a focus on hands-on examples and practical applications. The course is designed for students with no prior experience in programming, but those with some prior experience will also benefit from the in-depth coverage of the language. To maximize your learning experience, it is recommended that you actively participate in the course by following along with the examples, completing the exercises, and asking questions when you need help.\nCourse content description: The course will cover the following topics:\nIntroduction to Python and its features\nInstalling Python and setting up the environment\nVariables and basic data types, including integers, floating-point numbers, strings, and booleans\nContainers, including lists, tuples, and dictionaries\nBasic operators, including arithmetic, assignment, comparison, and logical operators\nConditional statements, including if, else, and elif\nLoops, including for and while loops\nComprehensions, a powerful feature for generating and processing lists and dictionaries\nFunctions and modules, including how to define and call functions, import modules, and create custom modules\nWorking with files, including how to read and write data to and from files.\nLearning values for students:\nIntroduction to Python and its features: In this section, students will be introduced to the basics of Python, including its history, features, and applications. They will also learn how to install and run Python on their own computer.\nVariables and basic data types: In this section, students will learn how to declare variables, store values in them, and manipulate the data stored in variables. They will also learn about the various data types available in Python, including integers, floating-point numbers, strings, and booleans.\nContainers: In this section, students will learn about containers, including lists, tuples, and dictionaries, and how they can be used to store and manipulate data. They will also learn how to access, modify, and manipulate elements in containers.\nBasic operators: In this section, students will learn about basic operators in Python, including arithmetic, assignment, comparison, and logical operators. They will also learn how to use these operators in expressions to perform operations on data.\nConditional statements: In this section, students will learn about conditional statements, including if, else, and elif, and how they can be used to control the flow of a program based on certain conditions.\nLoops: In this section, students will learn about loops, including for and while loops, and how they can be used to repeat operations or process data.\nComprehensions: In this section, students will learn about comprehensions, a powerful feature in Python for generating and processing lists and dictionaries.\nFunctions and modules: In this section, students will learn about functions and modules, including how to define and call functions, import modules, and create custom modules. They will also learn how to organize their code into reusable and modular components.\nWorking with files: In this section, students will learn how to read and write data to and from files, a crucial skill for working with large amounts of data. They will learn about different file formats, such as text files and CSV files, and how to open, read, write, and close files in Python.\n\n\nIn conclusion, this course offers a comprehensive introduction to the Python language and its various features, with a focus on hands-on examples and practical applications. By the end of the course, students will have gained a solid foundation in Python and be able to use it to perform a wide range of data analysis, web development, and artificial intelligence tasks. The course is designed to be both challenging and rewarding, providing students with the skills and knowledge they need to continue learning and growing as a programmer.",
      "target_audience": [
        "Beginner Python enthusiasts and aspiring data scientists"
      ]
    },
    {
      "title": "Learning Path: Go: Concurrency & Design Patterns for Gophers",
      "url": "https://www.udemy.com/course/learning-pathgo-concurrency-and-design-patterns-for-gophers/",
      "bio": "Put an end to all your software development problems using concurrency and powerful design patterns",
      "objectives": [
        "Learn the basic syntax and all the tools needed to start coding in Go",
        "Create unique instances that cannot be duplicated within a program",
        "Explore the popular design patterns in distributed systems and reactive programming",
        "Prepare cost-effective actions so that different parts of the program aren’t affected by expensive tasks",
        "Encapsulate the creation of complex objects in an idiomatic way in Go",
        "Explore 23 Gang of Four design patterns",
        "Deal with channels and GoRoutines within the Go context to build concurrent applications"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming knowledge",
        "No knowledge of design patterns is expected"
      ],
      "description": "Design patterns make developers’ life easy by efficiently addressing common problems faced during developing applications. Concurrency helps you to achieve parallelism in our programs. If you’re looking at implementing design patterns and concurrency in your applications, then go for this Learning Path.\nPackt’s Video Learning Paths are a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nGoogle’s Go is an open source programming language that helps you build efficient and reliable software. This language has proved to be a powerful option in many software development domains.\nThe highlights of this Learning Path are:\nConcise, readable, and maintainable software development with Go\nLearn design patterns and concurrency at one go\nLet’s take a quick look at your learning journey. This Learning Path starts with a brief introduction to essentials of Go programming and quickly moves on to explain the idea behind the creation of design patterns. Learn how to apply the 23 Gang of Four (GoF) design patterns in Go. Explore the CSP concurrency patterns, the \"killer feature\" in Go that has helped Google develop software to maintain thousands of servers. Moving ahead, you will use the majority of Go primitives to write concurrent apps and also develop some classical design patterns with concurrent structures to maximize parallelism. You will see how a classical pattern can become more complex if you need it to work in a concurrent way; however, the idea is to understand Go concurrent primitives so that you know how to write your own concurrent design patterns.\nBy the end of this Learning Path, you will be able to understand and apply concurrency and design patterns in an idiomatic way using Go.\nMeet Your Expert:\nWe have combined the best works of the following esteemed author to ensure that your learning journey is smooth:\nMario Castro Contreras is a software engineer who has specialized in distributed systems and Big Data solutions. He works as a site reliability engineer, and now he is focused on containerized solutions and apps using most of Google Cloud suite, especially Kubernetes. He has broad experience in systems and solutions integration, and he has written many scalable and reliable 12-factor apps using Go and Docker. He has designed Big Data architectures for financial services and media, and he has written data processing pipelines using event-driven architectures written purely in Go. Mario is also very active in the open source community, and you can find him on his GitHub account with the username sayden. He is passionate about programming languages, and he found the best balance between fun and productivity in Go; however, recently he has enjoyed writing in Rust and embedded systems in C. He is also passionate about road cycling and winter sports.",
      "target_audience": [
        "This Learning Path is for developers who want to implement concurrency and design patterns in their applications"
      ]
    },
    {
      "title": "7 Days Bootcamp | Learn Python Programming with Roll Plays",
      "url": "https://www.udemy.com/course/7-days-bootcamp-learn-python-programming-in-just-7-days/",
      "bio": "Master Python in a Week and Supercharge Your Programming Skills | Python Practices with AI Roll Play",
      "objectives": [
        "Learn Python syntax, variables, data types, and basic operations to start your journey into Python programming with confidence.",
        "Use if, else, elif, for, and while loops to build logic-driven programs and scripts using Python.",
        "Understand how to define Python functions, pass parameters, and return values to make your code modular and reusable.",
        "Learn Python scripting for automating data entry, reading/writing files, and handling repetitive tasks efficiently.",
        "Gain expertise in using lists, dictionaries, tuples, and sets to manage and manipulate collections of data.",
        "Apply Python skills through coding exercises, quizzes, and hands-on projects to reinforce practical understanding."
      ],
      "course_content": {},
      "requirements": [
        "A laptop or desktop with Python installed.",
        "Basic knowledge of any programming language is helpful but not required."
      ],
      "description": "Learn Python Programming in Just 7 Days – Intensive Bootcamp for Beginners\nTransform Your Future in Just One Week!\nAre you ready to learn Python programming and kickstart your career in tech, data science, automation, or web development? The 7 Days Bootcamp | Learn Python Programming in Just 7 Days is a fast-track, intensive course designed for beginners and motivated learners who want to master Python quickly, efficiently, and practically.\nWhether you’re a complete beginner, switching careers, or exploring new opportunities in data science, AI, or software development, this course gives you the confidence and hands-on experience to start coding in Python from Day 1.\nWhy Learn Python in 7 Days?\nPython programming is one of the most in-demand skills in tech, business, finance, AI, and data analytics.\nIts clean and readable syntax makes Python the best programming language for beginners.\nGain practical skills to write Python code and build real projects in just one week.\nFast-track learning for motivated students who want maximum results in minimum time.\nWhat’s Inside This Python Bootcamp?\nThis course covers everything you need to start coding confidently in Python:\nChapter 1: Introduction to Python, Installation, and Environment Setup\nChapter 2: Variables, Data Types, and User Input\nChapter 3: Operators and Decision-Making (if-else)\nChapter 4: Loops (for, while), Break and Continue\nChapter 5: Functions and Arrays\nChapter 6: File Handling and Exception Management\nChapter 7: Real-World Projects, Assignments, and Final Practice\nEach chapter includes:\nTheoretical Lessons – Understand concepts clearly\nPractical Coding Examples – Learn by doing\nExercises & Quizzes – Reinforce your learning\nAssignments with Solutions – Apply what you’ve learned\nWhy Students Love This Course\nLearn Python programming step-by-step in just one week\nReal coding exercises, quizzes, and assignments included\nPerfect for career changers, freelancers, and beginners\nBuild confidence through project-based learning\nTaught in a clear, beginner-friendly style\nFocused, practical, and no-fluff approach to Python\nWhat Can You Achieve After This Course?\nApply for entry-level Python developer jobs\nOffer Python automation, scripting, or freelancing services on platforms like Fiverr, Upwork, or Toptal\nBuild your own tools, bots, or Python applications and monetize them\nContinue your journey into data science, AI, machine learning, and web development\nTake Action Today – Your Future Starts Now\nYour time is valuable—make every hour count. This Python programming Bootcamp is your shortcut to real-world skills, career growth, and practical coding experience.\nEnroll now in Learn Python Programming in Just 7 Days – Intensive Bootcamp for Beginners and start coding your way to success!\nYour time is valuable—make every hour count. This Python programming Bootcamp is your shortcut to real-world skills, career growth, and practical coding experience.\nEnroll now in Learn Python Programming in Just 7 Days – Intensive Bootcamp for Beginners and start coding your way to success!\nThank you\nFaisal Zamir",
      "target_audience": [
        "Beginners looking for a fast and efficient way to learn Python.",
        "Programmers from other languages wanting to quickly add Python to their skillset.",
        "Job seekers or professionals who need Python skills to advance their careers."
      ]
    },
    {
      "title": "Scala Programming Language",
      "url": "https://www.udemy.com/course/scala-programming-language/",
      "bio": "Be efficient in Scala",
      "objectives": [
        "Discuss Scala in detail",
        "Have basic programming skill set in Scala"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Language Fundamentals": [
          "Introduction",
          "What is Scala and Installing",
          "Your First Scala Program",
          "Variables and Constants",
          "String Manipulations",
          "Variable Length Arrays",
          "List and Maps Introduction",
          "Sets",
          "Immutable Maps",
          "Conditionals",
          "Element Traversing and Streams",
          "Tuples and Zipping",
          "List Manipulations",
          "Conditionals and Loops",
          "Advanced Looping",
          "Project Instructions",
          "Project Solution I",
          "Project Solution II",
          "Summary"
        ],
        "Expressions": [
          "Introduction",
          "Statements and Expressions Introduction",
          "Expression Blocks and Pattern Guards",
          "Match-All and Wildcards",
          "Down Casting and Closures",
          "Project Instructions",
          "Project Solution",
          "Summary"
        ],
        "Functions": [
          "Introduction",
          "Functions Introduction",
          "Functions Advanced",
          "Project",
          "Summary"
        ],
        "Classes": [
          "Introduction",
          "Class Construction",
          "Auxiliary Constructors and Lazy Values",
          "Inheritance & Abstract Classes",
          "Polymorphism",
          "Project",
          "Summary"
        ],
        "Extra": [
          "Introduction",
          "File I/O",
          "Exceptions",
          "Project",
          "Summary",
          "Course Summary"
        ],
        "Bonus Material": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Some programming experience is helpful"
      ],
      "description": "There are few languages that are equally capable of building simple, one-line expressions and robust, high performance systems. There are even less languages that can function as both object-oriented and functional. Yet Scala, otherwise known as the 'scaleable' language, can do both impressively well. And guess what? It's pretty easy to learn. Interested? Here's what our Introduction to Scala online course will teach you...\nCombine OOP and Functional Programming\nGain basic proficiency in Scala\nGet to grips with functional programming\nLearn a derivative language of Java\nUnderstand how to scale your programs efficiently\nAdd a new language to your skill set!\n\n\nBuild Scaleable Programs\nIf you don't know Java or functional programming, don't worry; Scala is a perfect transitional language for both. This online course will guide you every step of the way, with mini-projects at the end of each section to compound your learning and a clear breakdown of the various components that make up the language. Previous programming experience will certainly help, but it's not totally necessary.\nYou'll start right at the beginning by installing Scala and and getting an overview of the variables, constants and string manipulations. From then on you'll learn the various facets of Scala section by section, using the Eclipse Scala IDE throughout. Among other things, you'll learn the language fundamentals, control flow, functions, classes, file I/O and exception handling.\nIf you want to learn Java, learn function programming, or just add a new language to your arsenal, this is the course for you. By the end, you'll have gained basic proficiency in Scala and be able to demonstrate an understanding of functional programming.\nAs one of the most popular functional programming languages out there and one of the most versatile languages across the board, learning Scala is a smart way to upgrade your skills as well as transitioning from object-oriented to functional styles.\nWhat is Scala?\nScala is an object-oriented programming language specially designed to be scaleable. However, it is also a functional language, seamlessly blending the most important elements of both for a powerful do-it-all tool that can be used for one-line expressions or 'mission critical' systems alike. It has a concise syntax, and makes an excellent stepping stone to Java.",
      "target_audience": [
        "Anyone wanting to learn a new programming language",
        "Anyone wanting to learn about functional programming",
        "Anyone wanting to learn a derivative language of Java"
      ]
    },
    {
      "title": "Fast Windows Presentation Foundation WPF for Beginners",
      "url": "https://www.udemy.com/course/easy-wpf-in-c-windows-presentation-foundation-for-beginners/",
      "bio": "Easily Learn WPF in C# to Design Real Apps , MVVM ,EF SQL in WPF for beginners , XAML , Windows Presentation Foundation",
      "objectives": [
        "3 Courses in One + 25 Hours - Longest WPF ,NET Core Course In Udemy! Learn with Projects , Beginners, Interm, Advance , SQL in WPF , MVVM in WPF",
        "Create Windows Apps by C# in WPF .NET Core & XAML , MVVM ,EF (Entity framework ) SQL Server in WPF",
        "Build Notepad and Memo App in WPF & C#",
        "Learn to design pro GUI for Apps in XAML",
        "WPF common controls and properties like: Button, Menu, Image, Slider, Checkbox...",
        "MDI and SDI projects",
        "Using Image , Open file & Save file dialog",
        "Resource, Events, Binding & Text file in WPF",
        "WPF panels: Stack, Canvas, Dock, Wrap",
        "Using Menu control for create pro WPF Apps",
        "Style, Trigger in WPF",
        "Using SQL in WPF to create database Apps",
        "Entity framework by SQL in C# and WPF"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download project files of this course"
        ],
        "Start WPF and XAML": [
          "First WPF project in C#.NET Core",
          "Customize Visual Studio IDE",
          "Deep diving project files",
          "Customize design and XAML view",
          "XAML structure",
          "Quiz 1"
        ],
        "WPF Window": [
          "Properties window",
          "Window properties- part 1",
          "Change background",
          "Change Border",
          "Using Font",
          "Size in XAML",
          "Window Icon",
          "Right to left support",
          "Show and hide elements",
          "Quiz 2",
          "Quiz 3"
        ],
        "Common Elements Part 1": [
          "Grid",
          "Button",
          "Label",
          "Textbox",
          "ComboBox",
          "Quiz 4",
          "Quiz 5"
        ],
        "MDI / SDI Projects": [
          "What are MDI/SDI Projects?",
          "Project: Design Gui of Phone Book"
        ],
        "Advance Design 1": [
          "Tab order",
          "Grouping elements",
          "Rotation",
          "Document outline",
          "Group alignment",
          "Quiz 6"
        ],
        "Start C# Coding": [
          "Prepare project",
          "What is the event?",
          "Show messagebox",
          "Change window title",
          "Change content by C#",
          "Using comment",
          "Changing backcolor,border & textcolor",
          "Disable / Enable elements",
          "Show / Hide elements",
          "Quiz 7",
          "Practice 1"
        ],
        "Advance Design 2": [
          "Margins",
          "Pro project by margins",
          "Horizontal & vertical alignment"
        ],
        "Project: Image and OpenFileDialog": [
          "Image project intro",
          "Start using image element",
          "Load image by C# code",
          "Show OpenFileDialog",
          "Load selected image by user",
          "Add filter to OpenFileDialog",
          "Quiz 8"
        ],
        "Project: NotePad Application": [
          "NotePad project intro",
          "Creating Notepad project in C#",
          "Adding menu and textbox",
          "Sub menus",
          "Accelerator keys",
          "‘Add new’ menu code",
          "‘Exit’ menu code",
          "Save text file by SaveFileDiaog",
          "Read text file content",
          "‘Edit’ menu code",
          "‘Wrap text’ code",
          "‘Zoom text’ code",
          "‘About us’ window",
          "Adding icon to menus",
          "Adding icon to ‘exe’ file",
          "Versioning information",
          "Publishing Notepad App"
        ]
      },
      "requirements": [
        "General knowlege of C# and SQL Server"
      ],
      "description": "Hi There!\nWith many years of programming skills I'm with you to share my knowledge with you.\nSo\nIf you try you will learn using WPF in C# to create C# Apps!\nIf you are beginners or student looking for a tutorial to create WPF App in C# in simplest way!\n\n\nI started from beginning and show you how to :\n3 Courses in One + 25 Hours + 3 live Projects\nCreate Windows Apps by C# in WPF & XAML\nBuild Notepad and Memo project in WPF & C#\nLearn to design pro GUI for Apps in XAML\nWPF common controls and properties like: Button, Menu, Image, Slider, Checkbox...\nUsing C# code in WPF to: Enable, Hide, Change text, color and …\nMDI and SDI projects\nUsing Image , Open file & Save file dialog\nResource, Events, Binding & Text file in WPF\nWPF panels: Stack, Canvas, Dock, Wrap\nUsing Menu control for create pro WPF Apps\nWorking with files and folders in C# and WPF\nCreate custom button\nCreate notepad app in WPF\nCreate Memo App in C# and WPF with save and search options\nHow to design Pro main window for WPF Apps\nStyle, Triggers in WPF\nSQL in WPF to create database Apps\nEntity framework in WPF\nMVVM for beginners\nand...\nDon't hesitate to start learning WPF in C#!\nEvery thing will be discussed with sample project and you will have lot of fun within my course.\nLet's go !!!",
      "target_audience": [
        "Any one who wanna learn WPF Deeply and quickly"
      ]
    },
    {
      "title": "AXI4 Implementations in FPGA Designs",
      "url": "https://www.udemy.com/course/axi4-implementations-in-fpga-designs/",
      "bio": "Learn AXI4 Bus implementation for your next FPGA design in Intel/Altera or AMD/Xilinx",
      "objectives": [
        "Learn the FPGA based AXI4 Bus Protocol, including AXI4-Lite and AXI4 Stream with RTL / Verification in VHDL and Verilog",
        "AXI4 Bus signals and Master / Slave Handshaking",
        "Verification of the AXI4 Protocol and interfacing to Vendor IP",
        "Simulation Demonstrations in Verilog and VHDL with sample code files"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "AXI4 Stream": [
          "Introduction to AXI4 Stream",
          "AXI4 Stream Slave in VHDL",
          "AXI4 Stream Slave in Verilog",
          "AXI4 Stream Master in VHDL",
          "AXI4 Stream Master in Verilog"
        ],
        "AXI4-Lite": [
          "AXI4-Lite Introduction",
          "AXI4-Lite Slave in VHDL",
          "AXI4-Lite Slave in Verilog",
          "AXI4-Lite Master in VHDL",
          "AXI4-Lite Master in Verilog"
        ],
        "AXI4 Full": [
          "Full AXI4 Introduction",
          "AXI4 Slave VHDL",
          "AXI4 Slave Verilog",
          "AXI4 Master VHDL",
          "AXI4 Master Verilog"
        ]
      },
      "requirements": [
        "Understand basic FPGA logic design in either VHDL or Verilog. Some experience with behavioral simulators can be helpful."
      ],
      "description": "A full instructional series for all aspect of the AXI4 Bus protocol, including AXI4 Stream, AXI4-Lite, and AXI4.  Each flavor of AXI4 has a bus flow, handshake, and signal requirements described in detail.  An example implementation for a Master and Slave in each of the subsets of AXI4 are included, with simulation demonstrations using example testbenches in edaplayground, and vivado, included using the vivado block diagram with AXI4 Protocol checking.\nWe learn the differences between each of the AXI4 flavors, where the AXI4 Stream protocol is used for uni-directional bulk data transfers from a master to a slave without addressing information.   The AXI4 Stream protocol is the easiest to implement and the most common.\nThe AXI4-Lite protocol is the other common interface that we learn how to implement.   We get a full understanding of how the AXI4-Lite Master handshakes with the AXI4-Lite Slave with both address and data, and allows single word writes and reads, with slave responses on valid or error transactions.\nThe full AXI4 protocol provides the highest data bandwith with burst modes up to 256 words of size 128 bytes.  With 5 separate busses, including an Address Write Bus, a Data Write bus, an Address Read Bus, a Read Bus, and a Write Reponse bus, each with separate handshaking, there is an extensive understanding required to implement the RTL components successfully.",
      "target_audience": [
        "FPGA Logic designers and FPGA embedded software designers"
      ]
    },
    {
      "title": "C Programming - Learn Computer Programming With C Language",
      "url": "https://www.udemy.com/course/learn-cprogramming-language/",
      "bio": "Discover your dreams and get into programming industry by learning C programming language",
      "objectives": [
        "Learn C programming language in details",
        "Learn encryption and decryption techniques using C programming language",
        "Learn how to build encryption and decryption application",
        "Learn how to write code in C++ using C language concepts",
        "Working with different environments"
      ],
      "course_content": {
        "Introduction": [
          "fundamentals of programming languages",
          "How To Study This Course",
          "Programming Tip : Tip 1"
        ],
        "Introduction To C Programming Language": [
          "Install IDE",
          "Hello Programmers",
          "Grammar Of A Language ( Syntax )",
          "Variables And Data Types",
          "C Level",
          "Basic stdio functions",
          "Basic Sample Programs- 1",
          "Basic Sample Program- 2",
          "Test Your Programming Knowledge",
          "CodeBlcoks IDE",
          "Review of Online IDEs"
        ],
        "Control Structures In C Langauge - Decision Making": [
          "Introduction To Control Structures",
          "Syntax of Selection Statments In Programming!",
          "Operators in C",
          "Conditional statement- (if) and ( if else)",
          "Quiz",
          "else-if Ladder",
          "Login System (using nested if-else conditions)",
          "Conditional Statement - (Switch)",
          "Sign UP application (using Switch Statement)",
          "Test Your Programming Knowledge",
          "Correct The Error In Following Program."
        ],
        "Control Structures in c Language - Loops": [
          "Introduction To Loops",
          "Syntax of Loops In Programming",
          "Control Structure - (While Loop)",
          "Guess The Output",
          "Print consecutive numbers (using While Loop)",
          "logic behind while loop",
          "Control Structure - (For Loop)",
          "Pattern designing Program (using For Loop)",
          "Print Even And Odd Numbers Using For Loop",
          "Pattern designing Program - 2 (using For Loop)",
          "Test Your Logical Thinking",
          "Sum of numbers (using While Loop)",
          "Control Structure - (Do-While Loop)"
        ],
        "Array": [
          "What is array?",
          "Practice array - 1 (storing names in array)",
          "Two Dimensional Array",
          "Practice array - 2 (addition of 2 matrices in array)",
          "Practice array -3 (Multiplication Table)"
        ],
        "Functions": [
          "Introduction to Function",
          "More on Function",
          "Function In depth",
          "Practice Function",
          "Function Parameters",
          "Function Introduction and Code Block IDE",
          "Practice Function - 1 (Sum of numbers)",
          "Practice Function - 1 (Reverse a number)",
          "Let's Practice",
          "How To Link C Programs to each other",
          "Practice Function - 1 (Palindrome number )",
          "Practice Function - 1 (Armstrong number)",
          "How a function is executed ?",
          "Function call and passing parameters",
          "Math Library - (math.h)",
          "Ctype Library - (ctype.h)"
        ],
        "Strings": [
          "What is a string?",
          "String Library - (string.h)",
          "Reading characters of string",
          "Reading characters of string and changing the case of each character",
          "change letters of a string using function",
          "Copy one String to another"
        ],
        "Pointers": [
          "What is pointer?",
          "Calling a function by reference",
          "introduction to Dynamic memory allocation",
          "Reallocation of memory"
        ],
        "Structures and Unions": [
          "What is Structure?",
          "Learn more about Structures",
          "Unions"
        ],
        "Security and Encryption": [
          "Introduction",
          "What Is Security ?",
          "Hacking",
          "Different Types Of Hacking Attacks",
          "Introduction To ASCII Code",
          "ASCII Code In Depth",
          "Working With ASCII Code",
          "Introduction To Encryption Concepts",
          "Caesar Cipher - Algorithm Of Application",
          "Preview Of Encryption Application",
          "Encryption Application - Part 1",
          "Encryption Application - Part 2",
          "Encryption Application - Part 3",
          "Encryption Application - Part 4",
          "Encryption Application - Part 5",
          "More On ASCII Helpful info",
          "Run your Encryption Application | Practice Enviroment"
        ]
      },
      "requirements": [
        "A computer with any OS"
      ],
      "description": "C Programming Language is one of the most widely used programming languages.\nIt is the most advised programming language for Beginners to start with.\n\n\nWhy you should learn c programming?\n\n\nBuilding block for many other programming languages\nC is considered to be the most fundamental language that needs to be studied if you are beginning with any programming language.\nMany programming languages such as Python, C++, Java, etc are built with the base of the C language.\n\n\nPowerful and efficient language\nC is a robust language as it contains many data types and operators to give you a vast platform to perform all kinds of operations.\n\n\nPortable language\nC is very flexible, or we can say machine-independent that helps you to run your code on any machine without making any change or just a few changes in the code.\n\n\nMiddle-level language\nC is a middle-level programming language that means it supports high-level programming as well as low-level programming.\nIt supports the use of kernels and drivers in low-level programming and also supports system software applications in the high-level programming language.\nThere is a lot of reasons why you should learn the C programming language.\n\n\nWhy enrolling in this course is the best decision you can make?\nIn this course, you will learn the fundamentals of programming languages in general and C language in specific, we will take C programming language under a microscope, we will debug and execute each and every statement for you in order to help you understand the concept of language well.\n\n\nBy the end of this course, you will be able to develop your own programs in C++ using Procedural Oriented Method\nas well as you will be able to compete in national and international coding competitions where you can make a link between yourself and top companies in the world and achieve cash prizes and championship titles.\nClick on the signup button to get into the course",
      "target_audience": [
        "Programming enthusiasts",
        "Those who wants to learn programming from scratch"
      ]
    },
    {
      "title": "Create and Deploy Java EE 8 Apps on Docker and Kubernetes",
      "url": "https://www.udemy.com/course/create-and-deploy-java-ee-8-apps-on-docker-and-kubernetes/",
      "bio": "Learn how to build, package, and deploy your Java EE 8 applications on Docker and Kubernetes",
      "objectives": [
        "Implement domain business logic using core Java EE components",
        "Realize HTTP communication using JAX-RS",
        "Configure enterprise applications using standard APIs",
        "Package, distribute, and run applications in Docker containers",
        "Install and configure containerized Java EE application servers",
        "Deploy enterprise applications as Kubernetes pods, deployments, and services",
        "Configure containerized and orchestrated applications"
      ],
      "course_content": {
        "Learning Java EE 8": [
          "The Course Overview",
          "Implementing domain business logic in Java EE",
          "EJBs and CDI managed beans",
          "CDI producers",
          "Qualifiers",
          "Scopes",
          "Events",
          "JAX-RS resources",
          "Integrating JSON-B",
          "Integrating JSON-P",
          "Custom HTTP responses",
          "Validating communication",
          "Exception handling",
          "Mapping domain entities with JPA",
          "Entity relations",
          "Datasources",
          "Transactions",
          "Interceptors",
          "Binding custom interceptors",
          "Configuring Java EE applications",
          "Caching",
          "Logging",
          "Asynchronous EJBs",
          "Asynchronous CDI events",
          "Managed threads",
          "Timers",
          "Asynchronous JAX-RS resources",
          "Accessing HTTP using JAX-RS",
          "Extended client usage",
          "Making HTTP clients resilient",
          "Asynchronous, reactive clients",
          "Implementing SSE resources with JAX-RS",
          "Server-sent event clients",
          "Implementing WebSocket server endpoints",
          "Accessing WebSocket endpoints",
          "Test Your Knowledge"
        ],
        "Containerizing Java EE 8 Apps Using Docker and Kubernetes": [
          "The Course Overview",
          "Starting Docker containers",
          "Life cycle of containers",
          "Images, tags & Dockerfiles",
          "Volumes",
          "Networking",
          "Distributing Docker images",
          "Troubleshooting containers",
          "Packaging Java EE applications",
          "Containerizing Java Enterprise",
          "Java in containers – challenges",
          "Leveraging Docker’s copy-on-write file system",
          "What to configure?",
          "Configuring dockerized application servers",
          "Configuring dockerized applications",
          "Communicating via Docker networks",
          "Deploying Docker images as Kubernetes pods",
          "Exposing pods via services and ingresses",
          "Kubernetes deployments",
          "Deploying applications with zero-downtime",
          "Example zero-downtime deployment",
          "Configuring environments using config maps and secrets",
          "Troubleshooting Kubernetes workloads",
          "Configuring enterprise applications in Kubernetes",
          "Managing application credentials",
          "Realizing persistence in Kubernetes",
          "Accessing services within clusters",
          "Defining workload resource limits",
          "Managing multiple application environments",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Familiarity with Java is assumed."
      ],
      "description": "Java EE provides a standard set of specifications that can be used to develop standardized applications, independent of the vendor. Enterprise applications do not change that often, and hence we need a robust platform such as Java EE to ensure sustainability. A lot of enterprises migrate their runtime environments to platforms that are based on Docker and Kubernetes. Container technologies, in combination with orchestration, provide significant advantages in the way companies deploy and operate their enterprise software.\nThis comprehensive 2-in-1 course teaches you how to develop enterprise applications using the Java Enterprise platform and modern APIs. It covers each and every concept of the Java EE platform with the help of practical examples making it easy for you to understand and implement in your own applications. You will also learn to package and deploy Java EE 8 applications on Docker and Kubernetes.\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Learning Java EE 8, course starts off by exploring the core Java EE components. You will then learn about HTTP endpoints. You will also learn how to map domain entities with JPA. Next, you will understand how interceptors realize technical cross-cutting concerns. You will learn to access external systems. Finally, you will learn about the asynchronous communication protocol.\nThe second course, Containerizing Java EE 8 Apps Using Docker and Kubernetes, begins with a practical approach to show you how you can use Docker in Java EE 8 and how to troubleshoot containers. You will then learn learn how to run Java EE in containers. You will also learn to configure containerized applications. Next, you will learn to orchestrate containers using Kubernetes. Finally, you’ll be able to integrate Java EE applications into Docker and Kubernetes.\nBy the end of this Learning Path, you'll be able to build, package, and deploy your Java EE 8 applications on Docker and Kubernetes.\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nSebastian Daschner is a Java freelancer working as a consultant, author, and a trainer. He is enthusiastic about programming and Java (EE). He is the author of the book Architecting Modern Java EE Applications. He participates in the JCP, helping to form the future standards of Java EE such as serving in the JAX-RS, JSON-P, and Config Expert Groups, and collaborating on various open source projects. For his contributions to the Java community and ecosystem, he was recognized as a Java Champion, Oracle Developer Champion, and double 2016 JavaOneRockstar. He is a regular speaker at international IT conferences such as JavaLand, JavaOne, or Jfokus.",
      "target_audience": [
        "This learning path targets software developers and architects who face the opportunity and challenge of creating and moving enterprise applications to modern, containerized environments. Developers who want to learn the nuts and bolts of putting applications into containers will also benefit from this course."
      ]
    },
    {
      "title": "Mastering Android Programming",
      "url": "https://www.udemy.com/course/mastering-android-programming/",
      "bio": "Learn the Android programming with Android SDK, Advance Java Concepts, OpenGL and SQLlite",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Our experienced team of developers and tutors have created and refined this course based on a proven system that works and is recognized in the industry.\n\nThe course will train you via a step-by-step, fun and easy to learn methodology which inherently is based on a simple principle of \"Learning by doing\". In this course you will  create lots of programs and applications while learning \"Key Concepts\" in each chapter.  After this course you should be able to take any Android Project and execute it successfully.",
      "target_audience": []
    },
    {
      "title": "Python Asyncio: High-level API",
      "url": "https://www.udemy.com/course/python-asyncio-high-level-api/",
      "bio": "Python asynchronous programming using AsyncIO module",
      "objectives": [
        "How to use Python Asyncio module",
        "Understanding of Python asynchronous programming base tools",
        "Understanding of Python async with, async for, async/await syntax, etc.",
        "How to use Queues, synchronization tools, etc."
      ],
      "course_content": {
        "Basics and Further Steps": [
          "Introduction",
          "Coroutines",
          "Tasks: creating and cancelling",
          "Non-obvious issues, how the run() works",
          "Asynchronous Context Managers and async with syntax",
          "Using the .gather() function to run groups of tasks",
          "Non-obvious issues #2 - understanding of await",
          "Using TaskGroup() class to run groups of tasks, and except* syntax",
          "Tasks cancelling: gather() vs TaskGroup()",
          "Asynchronous iterators and async for syntax",
          "Asynchronous comprehensions (list, dict, set)",
          "Asynchronous Generators and Context Managers (again)",
          "Queues and Producer-Consumer pattern",
          "Queues: practical example of async crawler",
          "Coroutine synchronization and Lock()",
          "Semaphore() class and the requests rate limiter example",
          "Event() class",
          "Condition() class"
        ]
      },
      "requirements": [
        "You need to be quite fluent in basics of Python",
        "Basics of OOP, decorators",
        "Some experience of using Django/Flask"
      ],
      "description": "Dive deep into the realm of asynchronous programming in Python with our comprehensive course on the high-level API of Asyncio. Asynchronous programming is crucial for building efficient, concurrent, and scalable applications, and this course equips you with the knowledge and skills to leverage Asyncio effectively.\n\n\nYou'll start by exploring the fundamentals of asynchronous programming, including coroutines and tasks. Learn how coroutines enable non-blocking operations and how tasks help manage concurrent operations efficiently.\n\n\nNext, discover the power of asynchronous context managers and the async with syntax for resource management in asynchronous code. Understand how to handle groups of tasks seamlessly using the TaskGroup() class and the gather() function, enabling you to coordinate and execute multiple asynchronous operations concurrently.\n\n\nGain proficiency in working with asynchronous iterators and the async for syntax, allowing you to iterate over asynchronous sequences effortlessly. Explore the capabilities of asynchronous comprehensions for creating asynchronous sequences efficiently.\n\n\nDelve into asynchronous generators to create asynchronous context managers easily. Learn how to utilize asynchronous queues for communication and data exchange between asynchronous tasks in a thread-safe manner.\n\n\nFinally, understand the importance of synchronization mechanisms such as Lock, Semaphore, Event, and Condition for coordinating access to shared resources and ensuring thread-safe execution of coroutines.\n\n\nBy the end of this course, you'll be equipped with the expertise to design and implement robust, concurrent Python applications using the high-level API of Asyncio. Take your asynchronous programming skills to the next level and unlock new possibilities in Python development.\n\n\n\n\nTopics\n- what are coroutines and tasks\n- asynchronous context managers, async with syntax\n- groups of tasks using TaskGroup() class and gather() function.\n- asynchronous iterators and async for syntax\n- asynchronous comprehensions\n- asynchronous generators\n- asynchronous queues\n- synchronization of coroutines using Lock, Semaphore, Event, Condition",
      "target_audience": [
        "Intermediate or Advanced Python developers"
      ]
    },
    {
      "title": "Fundamentals of Python Programming for Beginners",
      "url": "https://www.udemy.com/course/python-programming-fundamentals-in-one-hour/",
      "bio": "Learn The Core Python Fundamentals you REALLY need without wasting your valuable time in just ONE hour!",
      "objectives": [
        "Learn fundamental Python Coding principles",
        "Save your time to only learn what you really need BEFORE getting started in the field of Finance / Data Analytics / Data Science",
        "Be able to write simple Python programs",
        "Have a good foundation of the core Python concepts to tackle next steps"
      ],
      "course_content": {},
      "requirements": [
        "No Programming experience required"
      ],
      "description": "What is this course about?\nIn this course I am breaking down the most important fundamentals you need getting started with Python - or if you want to refresh your knowledge on the basics or try yourself out on one of the various coding tasks! :-)\n\n\nWhy should I be your constructor?\nI got years of experience coding in Python and know which topics are key to understand to actually move on to topics like Data Analytics, Machine Learning, Data Science or Algorithmic Trading.\nI wrote my Master Thesis on a quantitative Finance topic, currently working in the field of Data Science and got a YouTube channel teaching Algorithmic Trading and Data Science hands-on tutorials with over 50.000 subscribers.\nI love coding & I love teaching :-)\n\n\nWhy this course?\nThis course is giving a rock solid foundation for anyone interested in learning Python in specific to apply it to above mentioned topics.\nI am following an hands-on approach and provide a lot of quizzes and actual coding tasks (including solutions).\nThere is not a single time filler and we are getting straight into the topics.\n\n\nAny questions coming up?\nIf you got any questions please feel free to reach out! I am happy to hear from you.",
      "target_audience": [
        "People who want to start learning Python hands-on!",
        "People who want to save time and learn only the basics which you really need to move on",
        "People who want to get started with the fundamentals BEFORE diving into more complex topics"
      ]
    },
    {
      "title": "Introduction to YAML - A hands-on course",
      "url": "https://www.udemy.com/course/introduction-to-yaml-a-hands-on-course-2022/",
      "bio": "\"Unlock the Secrets of YAML: Become a Pro at Data Serialization with this Comprehensive Introduction Course!\"",
      "objectives": [
        "What is YAML",
        "The design goals of YAML",
        "All the syntax and components of YAML",
        "Use cases of YAML including Docker Compose and Kubernetes",
        "How to load and dump YAML content with Python"
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience required",
        "Some Computer Fundamentals Required"
      ],
      "description": "➡ Are you learning DevOps?\n➡ Are you a computer science student?\n➡ Are you a Programmer?\n\n\n✅ Then, you should learn about YAML now!!\n\n\nWelcome to our Introduction to YAML course! YAML is a powerful data serialization language that is widely used in a variety of applications and programming languages. Whether you're a developer, system administrator, or just someone interested in data management, understanding the basics of YAML is essential.\nThis course is designed to provide you with a comprehensive introduction to YAML. It covers everything from the basic syntax and structure of YAML to advanced features and best practices. By the end of this course, you will have a solid understanding of what YAML is, how it works, and how to use it effectively.\nThe course is divided into several sections, each of which covers a specific aspect of YAML. We begin with an introduction to the course and an overview of the basics of YAML, including its syntax and structure. We then move on to cover more advanced topics such as data structures, comments, and anchors.\nWe also explore the use of YAML in different contexts, such as configuration files, data interchange, and programming languages. The course also covers best practices for working with YAML, including tips and tricks for debugging, testing, and validating YAML files.\nIn conclusion, this course provides a thorough introduction to YAML, its syntax, structure, usage, best practices and how it can be used effectively. It is designed to help anyone\nYAML, which stands for \"YAML Ain't Markup Language,\" is a human-readable data serialization format. It is often used for configuration files, data exchange between languages or systems, and application data storage. The course is aimed for developers, system administrators, and other technical professionals who want to learn how to use YAML effectively.\n\n\nLearn one of the most popular data serialization languages i.e. YAML\n\n\n✅ Complete YAML Tutorial\n✅ A hands-on course where you will learn by doing\n✅ Python code to load and dump YAML\n✅ Follow along tutorial\n✅ Highly rated\n\n\nThe course covers following topics\n\n\n✔ Introduction to YAML and its use cases\n✔ Basic YAML syntax and structure\n✔ Creating and editing YAML files\n✔ Commonly used YAML data types (strings, numbers, booleans, arrays, and dictionaries)\n✔ Best practices for writing and maintaining YAML files\n\nThe hands-on excercises covers the following\n\n\n✔ Practice creating and editing YAML files using a text editor - Player profile\n✔ Create a YAML file from a JSON document\n✔Write a Python script to parse and read data from a YAML file\n\n\nBy the end of the course, attendees will have a strong understanding of YAML and be able to use it effectively in their own projects. They will also gain experience in reading and writing YAML files and have a good understanding of the best practices to follow when working with YAML.\nYAML is used in many applications, including OpenStack, Ansible, and Puppet, and is also supported by many programming languages, including Python, Ruby, and JavaScript. Learning YAML can help you become more proficient in these tools and technologies and make your work more efficient and streamlined.\n\n\nCheers,\nMohit",
      "target_audience": [
        "Begineer DevOps Engineer",
        "Software Developers who work with YAML",
        "Docker and Kubernetes Engineer"
      ]
    },
    {
      "title": "Using Elasticsearch and Kibana",
      "url": "https://www.udemy.com/course/elasticsearch-and-kibana/",
      "bio": "Scalable Search and Analytics for Document Data",
      "objectives": [
        "Construct robust, scalable search for production use in web and enterprise apps",
        "Query ES using the ES Domain Specific Language",
        "Perform aggregations to extract insights and run analytics on ES",
        "Interface with ES using Python"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of HTTP and JSON (Javascript Object Notation)",
        "Python is helpful for the portions of the course that deal with the ES Python client"
      ],
      "description": "Elasticsearch wears two hats: It is both a powerful search engine built atop Apache Lucene, as well as a serious data warehousing/BI technology.\nThis course will help you use the power of ES in both contexts\nES as search engine technology:\nHow search works, and the role that inverted indices and relevance scoring play\nThe tf-idf algorithm and the intuition behind term frequency, inverse document frequency and field length\nHorizontal scaling using sharding and replication\nPowerful querying functionality including a query-DSL\nUsing REST APIs - from browser as well as from cURL\nES as data warehouse/OLAP technology:\nKibana for exploring data and finding insights\nSupport for CRUD operations - Create, Retrieve, Update and Delete\nAggregations - metrics, bucketing and nested aggs\nPython client usage",
      "target_audience": [
        "Developers looking to add robust enterprise search functionality",
        "Business analysts looking to use ES and Kibana for business intelligence",
        "Data professionals looking to use the ElasticSearch search engine"
      ]
    },
    {
      "title": "Data Analytics Career Foundations With Python For Beginners",
      "url": "https://www.udemy.com/course/learn-python-3-with-chris/",
      "bio": "Go from ZERO To Learning Python AND Data Analytics, Visualization, and more for your career in Python!",
      "objectives": [
        "Has learning how to program in Python been difficult? Even if you have ZERO experience, I will teach you step-by-step how to program!.",
        "Concepts are presented visually, with in-depth fully explained code examples, and hands-on programming exercises.",
        "Learn important topics such as: Variables, Data Types, Input, Output, Lists, Dictionaries, Flow Control, Loops, and much more!",
        "Detailed Jupyter Notebooks, Practice programs with Solution Explanations, and downloadable course notes included!",
        "Python code is taught and explained along with detailed concepts to help you build the foundation you need to succeed!",
        "I will teach you the concepts and fundamentals to grow and learn more advanced programming."
      ],
      "course_content": {
        "Course Introduction and Setup": [
          "Course Introduction",
          "Environment Setup: Windows",
          "Environment Setup: MacOS ver 10 and above",
          "Environment Setup: Ubuntu",
          "Jupyter Notebooks - Environment Introduction",
          "Course Numbering and Tips!"
        ],
        "Variables and Input/Output": [
          "Section: 1.1 - Concept: What is a Variable?",
          "Section 1.1 - Code Examples: What is a Variable?",
          "Section 1.1 - Student Code Review",
          "Section 1.2 - Concept: The Print Function",
          "Section 1.2 - Code Examples: The Print Function",
          "Section 1.2 - Student Code Review",
          "Section 1.3 - Concept: Assignment Operations",
          "Section 1.3 - Code Examples: Assignment Operations",
          "Section 1.3 - Student Code Review: Assignment Operations",
          "Section 1.4 - Concept: Reading and Writing - Inputs and Outputs",
          "Section 1.4 - Code Examples: Reading and Writing - Inputs and Outputs",
          "Section 1.4 - Student Code Review: Reading and Writing - Inputs and Outputs"
        ],
        "Introduction to Types": [
          "Section 2.1 - Concept: Introduction to Types",
          "Section 2.1 - Code Examples: Introduction to Types",
          "Section 2.1 - Student Code Review: Introduction to Types",
          "Section 2.2 - Concept: Introduction to Integer Operations",
          "Section 2.2 - Code: Working with Integers - Introduction to Integer Operations",
          "Section 2.2 - Student Code Review: Introduction to Integer Operations",
          "Section 2.3 - Concept: Introduction to Float Operations",
          "Section 2.3 - Code Examples: Introduction to Float Operations",
          "Section 2.3 - Student Code Review: Introduction to Float Operations"
        ],
        "Introduction to Operators": [
          "Section 3.1 - Concept: Introduction to Operators",
          "Section 3.1 - Code Examples: Introduction to Operators",
          "Section 3.1 - Student Code Review: Introduction to Operators",
          "Section 3.2 - Concept: Assignment Operators",
          "Section 3.2 - Code Examples: Assignment Operators",
          "Section 3.2 - Student Code Review: Assignment Operators",
          "Section 3.3 - Concept: Introduction to Comparison Operators",
          "Section 3.3 - Code Examples: Introduction to Comparison Operators",
          "Section 3.3 - Student Code Review: Introduction to Comparison Operators",
          "Section 3.4 - Concept: Introduction to Logical Operators",
          "Section 3.4 - Code Examples: Introduction to Logical Operators",
          "Section 3.4 - Student Code Review: Introduction to Logical Operators"
        ],
        "Introduction to the String Data Type": [
          "Section 4.1 - Concept: String Data Type and Traversal",
          "Section 4.1 - Code Examples: String Data Type and Traversal",
          "Section 4.1 - Student Code Review: String Data Type and Traversal",
          "Section 4.2 - Concept: Working with Strings",
          "Section 4.2 - Code Examples: Working with Strings",
          "Section 4.2 - Student Code Review: Working with Strings",
          "Section 4.3 - Concept: String Escape Characters",
          "Section 4.3 - Code Examples: String Escape Characters",
          "Section 4.3 - Student Code Review: String Escape Characters",
          "Section 4.4 - Concept: String Conversions: Upper/Lower/Replace",
          "Section 4.4 - Code Examples: String Conversions: Upper/Lower/Replace",
          "Section 4.4 - Student Code Review: String Conversions: Upper/Lower/Replace",
          "Section 4.5 - Concept: Strings: Startswith, Endswith, Find, and Index",
          "Section 4.5 - Code Examples: Strings: Startswith, Endswith, Find, and Index",
          "Section 4.5 - Student Code Review:Strings: Startswith, Endswith, Find, and Index",
          "Summary: Sections 1 - 4"
        ],
        "Introduction to File Operations": [
          "Section 5.1 - Concept: Introduction to File Operations",
          "Section 5.1 - Code Examples: Introduction to File Operations",
          "Section 5.1 - Student Code Review: Introduction to File Operations",
          "Section 5.2 - Concept: Advanced Print",
          "Section 5.2 - Code Examples: Advanced Print",
          "Section 5.2 - Student Code Review: Advanced Print"
        ],
        "Flow Control, Conditional, and Control Statements": [
          "Section 6.1 - Concept: Introduction to the if statement",
          "Section 6.1 - Code Examples: Introduction to the if statement",
          "Section 6.1 - Student Code Review: Introduction to the if statement",
          "Section 6.2 - Concept: Introduction to the else statement",
          "Section 6.2 - Code Examples: Introduction to the else statement",
          "Section 6.2 - Student Code Review: Introduction to the else statement",
          "Section 6.3 - Concept: Introduction to the elif statement",
          "Section 6.3 - Code Examples: Introduction to the elif statement",
          "Section 6.3 - Student Code Review: Introduction to the elif statement"
        ],
        "Introduction to Loops": [
          "Section 7.1 - Concept: Introduction to Loops",
          "Section 7.2 - Concept: Introduction to For Loops",
          "Section 7.2 - Code Examples: Introduction to For Loops",
          "Section 7.2 - Student Code Review: Introduction to For Loops",
          "Section 7.3 - Concept: Introduction to For Loops Part II",
          "Section 7.3 - Code Examples: Introduction to For Loops Part II",
          "Section 7.3 - Student Code Review: Introduction to For Loops Part II",
          "Section 7.4 - Concept: Introduction to the While Loop",
          "Section 7.4 - Code Examples: Introduction to the While Loop",
          "Section 7.4 - Student Code Review: Introduction to the While Loop",
          "Summary Sections 5 - 7"
        ],
        "Data Types: Lists, Tuples, and Sets": [
          "Section 8.1 - Concept: Introduction to Lists, Tuples, and Sets",
          "Section 8.1 - Code Examples: Introduction to Lists, Tuples, and Sets",
          "Section 8.1 - Student Code Review: Introduction to Lists, Tuples, and Sets",
          "Section 8.2 - Concept: Introduction to List Operations",
          "Section 8.2 - Code Examples: Introduction to List Operations",
          "Section 8.2 - Student Code Review: Introduction to List Operations",
          "Section 8.3 - Concept: List split and join Operations",
          "Section 8.3 - Code Examples: List split and join Operations",
          "Section 8.3 - Student Code Review: List split and join Operations",
          "Section 8.4 - Concept: Working with Tuples",
          "Section 8.4 - Code Examples: Working with Tuples",
          "Section 8.4 - Student Code Review: Working with Tuples",
          "Section 8.5 - Concept: Working with Sets",
          "Section 8.5 - Code Examples: Working with Sets",
          "Section 8.5 - Student Code Review: Working with Sets"
        ],
        "The Dictionary Data Type": [
          "Section 9.1 - Concept: Introduction to the Dictionary Data Type",
          "Section 9.1 - Code Examples: Introduction to the Dictionary Data Type",
          "Section 9.1 - Student Code Review: Introduction to the Dictionary Data Type",
          "Section 9.2 - Concept: Working with Dictionary Keys and Values",
          "Section 9.2 - Code Examples: Working with Dictionary Keys and Values",
          "Section 9.2 - Student Code Review: Working with Dictionary Keys and Values",
          "Section 9.3 - Concept: Dictionary Operations",
          "Section 9.3 - Code Examples: Dictionary Operations",
          "Section 9.3 - Student Code Review: Dictionary Operations"
        ]
      },
      "requirements": [
        "A working computer, internet connection, and permissions to install software.",
        "Complete beginner or some code experience, everything is taught in detail, every line of code is explained!",
        "This course is detailed and provides information in-depth for each line of code. I focus on the teaching aspect,, to allow you to learn Python 3."
      ],
      "description": "Are you ready to take the steps to a new skill for your technical career?\n\n\nHi, I'm Chris, an award-winning Computer Science/Math tutor and an IT/Cybersecurity professional with over 20 years of experience.\n\n\nLet me ask you a question: Have you considered taking courses and wondered if they will be challenging or confusing?\n\nDo you think of coding and think that only math or technical people can learn to code?\n\n\nI have some great news: ANYONE can learn how to code and understand coding. Here's why...\n\n\nUnfortunately, most courses only \"show\" you how to code, and very few \"teach!\" I know; I've been there myself and know how frustrating it can be to feel unsure.\n\n\nI created this course to take you from feeling unsure or confused to developing a solid understanding and confidence.\n\n\nMy goal is to take you from your first line of code through building confidence and learning to program in Python confidently!\n...the future is here, and learning how to code is essential in today's technical world.\n\n\nNever programmed or new to programming?  Even if you are not technical, this course will teach you the foundations to advance your career today.\nDid you know that Python is one of the most popular and fastest-growing languages in AI and around the world? Now is the time to add a skill that will help you and open up opportunities.\n\n\nLearning Python is a great way to enhance your skills and learn code to work with Python and learn other languages.\nThis is a COMPLETE course with:\nHigh-Quality Videos\nLearn how to program using Anaconda Navigator, one of the most popular Data Analytics and Machine Learning platforms.\nDownloadable Jupyter Notebooks\nCode Reference & Cliff Notes\n50+ Hands-on practice programs with  detailed explanations\nGo from ZERO to learning code concepts to learning more advanced areas to unlock your skills!\nLearn important skills such as Python Data Analytics, how to work with Data, Data Wrangling, and much more!\nLearn how to work with Data using the powerful Python Pandas module\nLearn Visualization\nIntroduction to Machine Learning Masterclass!\nI'm here to help you learn the Python foundations needed to learn and help open up opportunities to advance your career. Whether you are technical, non-technical, or have never programmed.\n\n\nThis course is for anyone; whether you are a working professional new to programming, this course is for you.\n\nThis course provides you with the foundations needed to learn coding.  To succeed in today's technical world, you need to have an understanding of programming concepts, data analysis, working with data, visualization, and more!\nPython programming knowledge is a MUST-HAVE skill! This course will take you from 0 through learning Python/Programming fundamentals needed by employers.\n\nLearning Python will add a valuable skill and open up a world of opportunities!\n\n\nDo you struggle with programming or feel it doesn't make sense?\nDo you feel that programming is too hard to learn?  If so,  this course is designed for YOU.  With the right teaching, you can learn how to program.\n\n\nWhether you are completely new to programming and Python, or are a professional who wants to add Python to your skills to take the steps to a career in AI, I am here to show you that YES! You can learn how to code!\n\n\nThis course will teach you Python with outstanding detail.  My course \"teaches\" and explains EVERY line of code.  Like many other courses that skip important details, you do not need to worry about being lost. I created this course in a way that will make you feel like you are being taught one-on-one.  I took the time and care to provide details that make sense and are easy to understand.\n\n\nWhat do my students say?  \"After taking college courses and still being confused, your course is how every school should teach Python.  You break down each topic and explain it in a way that is easy to understand. \" -- Andrew B.\n\n\nHi, my name is Chris, and I have been teaching, tutoring, and creating courses with a high degree of success for over 20 years.  I have helped hundreds learn and excel in topics they never thought they could!  Now, it is YOUR turn to learn Python and begin your dream career.\n\n\nThis high-quality course will provide you with the guidance and materials to teach you Python foundations in the areas needed for a career in Artificial Intelligence.\n\nArtificial Intelligence is an advanced field. Without the right foundations, it can be difficult to find success in the advanced topics needed.  This course will prepare you for success by leaving you with a STRONG set of foundations that will allow you to advance into the field.\n\nYOU CAN LEARN HOW TO PROGRAM - Absolutely no experience needed, even if you are not technical.  This course teaches Python, so anyone can learn.\n\n\nYou might be wondering, Is this course for me?\nThis course was developed to help anyone who is new to programming and has NO experience OR anyone who has tried to learn how to program and has found it to be difficult.\nAre you new to IT?  This course is a great way to step into the world of IT and programming since it was created for complete beginners who do not have any programming experience.\n\n\nThis is also a fun course for anyone who simply wants to continue learning. The material will not only teach you, but it is also fun and engaging.\n\n\nAre you ready to learn and understand Python? Now, you can learn the latest fastest-growing language in the world and enhance your skills!\nYou might be wondering, don't I need some sort of experience? Well, I am here to tell you that absolutely No experience is needed, I will teach you Python from step 0 through intermediate step-by-step.\nAre you wondering how?  This course will carefully guide you through the important topics needed to learn Python.\nLearn the important concepts and fundamentals to achieve success in the latest version of Python and gain an important skill to add to your skills and resume.\nAre you new to programming?  Are you having difficulty understanding the concepts?  Have you taken courses and feel you still do not understand how to program? I am here to teach you that you CAN learn how to program and succeed!\nMy course was created for you!\nThis course will provide you with:\nDetailed explanations, with a unique approach that first provides you with the concepts of the code that provide the \"Why and How\"\nNext, I will walk you through Code Examples and explain every portion of the code so that you fully understand!\nDownload Jupyter Notebooks with Python Language details for quick, yet detailed review and reference materials.\nYou will write code with Hands-On Exercises designed to TEACH you Python 3\nFull Review of every exercise problem with in-depth explanations\nIf you want to learn Python or have tried to learn Python and walked away from courses without truly understanding the key concepts and fundamentals, this is the course for you! Whether you are new to programming or a professional interested in adding a new skill to your resume, success is dependent on having a solid foundation and understanding.  This course is focused on providing you with a firm grasp and understanding by providing in-depth detail and \"teaching\" you the how and why of Python code.\nHello, my name is Chris Romano, and as an IT professional, I have over 20 years of experience developing courses and teaching all ranges of students from entry-level to senior, and executives. I hold a B.S. Degree in Data Management and Data Analytics along with multiple professional certifications including the CISSP, ITIL V4, Network+ Ce, Project+, Microsoft Certified, and Certified Data Analyst.  I have taken my years of professional experience and have created a course to teach you the necessary fundamentals, which will allow you to learn Python 3 and succeed as you advance your learning.  The key to success is having a solid foundation upon which to build on.  This course will provide you with that foundation!\nMy course will teach you the key concepts and fundamentals of Python 3 which are critical to being successful with your career, advanced courses, and other programming languages.  This course is perfect for beginners and even experienced programmers who may want to dive into concepts used when creating programs.\nMy approach focuses on going step-by-step into the fundamental concepts so that you gain a solid foundation and understanding, which is important as you progress in Python and other languages.  I do not simply show you code, I provide detailed explanations to TEACH you how to code.\nI have carefully developed this course to engage and help anyone who is new to programming or has struggled with understanding programming concepts. In addition, this course is perfect for anyone who wants reference material or a refresher.\nMy teaching style breaks down complex concepts into understandable chunks.\nThis is important as simply walking you through code may seem easy, once you are coding on your own, a solid understanding of the concepts is critical to being able to progress into more advanced coding concepts and topics on your own.\nTo learn how to code, you need to code! In this course, you will learn Python with detailed explanations and hands-on exercises.\nHow will I TEACH you Python 3?\nI break down and explain concepts visually, then step you through code examples, and provide you with practice programs where you get to learn hands-on by writing programs. This will allow you to learn by relating to the material, technical terms, and concepts needed to advance.\nThis course is written in the latest version of Python and will work with any Python 3 version.\nI use detailed Jupyter notebooks to guide you through learning Python 3. Note: The Python 3 code will work in a Jupyter Notebook or the editor of your choice.\nIf you have taken courses and feel that you still do not have an understanding of the core concepts or how they come together, you have found the right course! Along with the course information, I will also provide you with material and tips on how to remember the necessary syntax and structure.\nThe key to success with learning Python 3 or any language is to \"write code\" and work along as you learn the material. I will provide step-by-step instructions so you can understand and succeed. This course will not only provide you with the core fundamentals of Python 3, but it will also teach you the key programming concepts that will help you with more advanced Python and an understanding of how to learn other languages.\nIn the current IT environment, programming is an essential skill that will benefit all IT professionals. Whether your goal is to learn how to program or become a Cybersecurity PenTester, SOC Analyst, Data Scientist, Data Analyst, or Software Developer, you will want to learn the fundamentals of Python 3 as it is one of the most popular languages and is supported by the fastest-growing communities.\nWhy learn Python?\nEvery language is designed with a purpose. Python was designed to be understandable and flexible.  Python is a high-level language with a growing community that develops libraries, modules, and frameworks.  Many of the largest companies utilize Python as development is fast and efficient.\nPython is a popular language in Machine Learning, Data Science, Artificial Intelligence, Data Analytics, Web Development, and many others.\nIf you are new to programming, it is important to understand the fundamentals. Python is a great first language since the syntax is friendly so this allows the student to focus on learning the fundamentals without having to learn complex syntax.  Learning Python and its concepts will allow a student to learn other languages faster as the concepts between programming languages are often similar.\nLearning Python is a skill that is in demand and can help your career goals or further enhance your resume, as programming is a very helpful skill no matter the field.\nIn this course, you will learn the following concepts and more, along with details within each, with examples and practice material.\nVariables\nPrint\nAssignments\nInput/Output\nTypes\nType Casting\nIntegers\nFloats\nStrings\nString Operations\nWorking with Files\nOutput Operations\nAdvanced Print Operations\nif, elif, and else Statements\nFlow Control\nMath Operators\nLogical Operators\nFor Loops\nWhile Loops\nData Types\nLists\nList Operations with Split and Join\nTuples\nSets\nDictionaries\nFunctions\nFunctions and Arguments\nGlobal and Local variables\nObject Oriented Programming with Classes\nPython Modules\nIntroduction to Python Pandas\nIntroduction to Data Analysis\nIntroduction to Data Visualization with Matplotlib\nIntroduction to Seaborn Data Visualization\nDebugging\nHow to work with Errors\nWriting Clean Code\nIntroduction to Machine Learning\nSummary and Recommendations\nIn addition to all of the important topics, I will provide insights into how these topics lead into the more advanced areas of Python without overwhelming you.  I hope you enjoy my course. Be sure to look out for more courses in the future. Now, let's learn the concepts and code.",
      "target_audience": [
        "This course is suitable for both technical, non-technical audiences, or anyone who would like a Python 3 refresher. Students may benefit as the concepts will be broken down and clearly explained. This course is also a great resource to use for review or reference in the future.",
        "This course is important for students who are pursing a career in data science, data analytics, software development, or want to learn the fundamentals of programming.",
        "NO experience is needed and for those with some experience, the concepts and in-depth explanations will provide deep insight into the Python code.",
        "If you want to learn Python 3 and understand key programming concepts, this course will provide you with a foundation which will allow you to grow!"
      ]
    },
    {
      "title": "Java Programming for Absolute Beginners",
      "url": "https://www.udemy.com/course/java-programming-for-absolute-beginners/",
      "bio": "The essentials of Java all in one easy to understand course.",
      "objectives": [
        "Get started programming with Java",
        "Understand basic programming concepts"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction"
        ],
        "Introduction to Java Programming": [
          "Getting Started with NetBeans",
          "Variables",
          "Strings & Mathematical Operators",
          "Methods (Functions)",
          "Boolean Logic & IF ELSE Statements (Part 1/2)",
          "Boolean Logic & IF ELSE Statements (Part 2/2)",
          "Loops",
          "Arrays",
          "For Loop"
        ],
        "Object Oriented Programming (OOP)": [
          "Object Oriented Programming (OOP)",
          "Constructors (OOP)"
        ],
        "Java Review": [
          "Review of Concepts So Far"
        ],
        "More Beginner Java": [
          "Multi-dimensional Arrays",
          "Array Lists",
          "String Functions",
          "Try Catch & Exceptions",
          "User Input",
          "File Reading/Writing",
          "Switch/Enumerations"
        ]
      },
      "requirements": [
        "Free NetBeans development environment"
      ],
      "description": "Have you ever wondered how all those cool applications and games around the web are made? The answer is: Java. Java is the most commonly used programming language in the world. Get started learning Java today, and in a few days with this Java Tutorial for Beginners you'll be a pro. To make your life a bit easier, you will learn Java from scratch using the NetBeans environment.\nJava allows you to play online games, chat with people around the world, calculate your mortgage interest, and view images in 3D, just to name a few. It's also integral to the intranet applications and other e-business solutions that are the foundation of corporate computing.\nThis course is the beginning portion of a larger course called Learn Java from Scratch, where you can learn many more beginner's topics, as well as intermediate and advanced topics.",
      "target_audience": [
        "New developers",
        "Those who need a brush up on Java programming"
      ]
    },
    {
      "title": "Hands-on Python for Finance",
      "url": "https://www.udemy.com/course/hands-on-python-for-finance/",
      "bio": "The practical guide to using data-driven algorithms in Finance",
      "objectives": [
        "General programing skills in Python and working with common Python interfaces",
        "Using Numpy, Pandas and matplotlib to manipulate, analyze and visualize data",
        "Understand the Time value of money applications and project selection",
        "Getting and with working data, time series forecasting methods and linear models",
        "Understand Correlation and portfolio construction",
        "Be comfortable with Monte Carlo Simulation, Value at Risk and Options Valuation"
      ],
      "course_content": {
        "Python Programming Primer": [
          "The Course Overview",
          "Installing the Anaconda Platform",
          "Launching the Python Environment",
          "String and Number Objects",
          "Python Lists",
          "Python Dictionaries (Dicts)",
          "Repetition in Python (For Loops)",
          "Branching Logic in Python (If Blocks)",
          "Introduction to Functions in Python"
        ],
        "The Python Data Environment": [
          "Introduction to NumPy Arrays",
          "NumPy – A Deeper Dive",
          "Pandas – Part I",
          "Pandas – Part II",
          "Introduction to Scipy.stats",
          "Matplotlib – Part I",
          "Matplotlib – Part II"
        ],
        "Time Value of Money": [
          "Present Value of a Stream of Cash Flows",
          "Future Value of Single and Multiple Cash Flows",
          "Net Present Value of a Project",
          "Internal Rate of Return",
          "Introduction to Amortization",
          "Creating an Amortization Application"
        ],
        "Time Series Evaluation and Forecasting": [
          "Opening and Reading a .CSV File",
          "Getting and Evaluating Data",
          "Moving Average Forecasting",
          "Forecasting with Single Exponential Smoothing",
          "Creating and Testing a Simple Trading System"
        ],
        "Linear Models, Correlation, and Valuation": [
          "Valuing Securities with Pricing Models",
          "Finding Correlations Between Securities",
          "Linear Regression",
          "Calculating Beta and Expected Return",
          "Constructing Portfolios Along the Efficient Frontier"
        ],
        "Build a Monte Carlo Simulation App": [
          "Introduction to Monte Carlo",
          "Monte Carlo Simulation",
          "Using Monte Carlo Technique to Calculate Value at Risk",
          "Putting It All Together – Monte Simulation Application"
        ]
      },
      "requirements": [
        "We will use step-by-step tutorials that blend financial and programming concepts. Viewers will work along with the tutorial to create working examples."
      ],
      "description": "Did you know Python is the one of the best solution to quantitatively analyse your finances by taking an overview of your timeline? This hands-on course helps both developers and quantitative analysts to get started with Python, and guides you through the most important aspects of using Python for quantitative finance.\nYou will begin with a primer to Python and its various data structures.Then you will dive into third party libraries. You will work with Python libraries and tools designed specifically for analytical and visualization purposes. Then you will get an overview of cash flow across the timeline. You will also learn concepts like Time Series Evaluation, Forecasting, Linear Regression and also look at crucial aspects like Linear Models, Correlation and portfolio construction. Finally, you will compute Value at Risk (VaR) and simulate portfolio values using Monte Carlo Simulation which is a broader class of computational algorithms.\nWith numerous practical examples through the course, you will develop a full-fledged framework for Monte Carlo, which is a class of computational algorithms and simulation-based derivatives and risk analytics.\nAbout the Author\nMatthew Macarty has taught graduate and undergraduate business school students for over 15 years and currently teaches at Bentley University. He has taught courses in statistics, quantitative methods, information systems and database design.",
      "target_audience": [
        "This course is for developers and analysts with some background in programming language and are interested in a concrete framework for using Python to augment or replace spreadsheet applications for financial tasks."
      ]
    },
    {
      "title": "16 beginner programming projects: Java, Python,JavaScript,c#",
      "url": "https://www.udemy.com/course/16-beginner-programming-projects-java-pythonjavascriptc/",
      "bio": "Learn to program in multiple programming languages with step by step projects",
      "objectives": [
        "Setup development environments",
        "Understand and create Variables",
        "Understand and create Arrays",
        "Use various Operators",
        "Use and understand Conditional Statements",
        "Understand Lists",
        "Use comments in code",
        "Understand and use various data types",
        "Understand and create Functions",
        "Create various projects in Java ; Python; JavaScript ; C#"
      ],
      "course_content": {
        "Introduction to Programming": [
          "Introduction",
          "What is Programming",
          "Programming languages",
          "What is Java",
          "What is Python",
          "What is JavaScript",
          "What is C#"
        ],
        "Programming in Java: Setting up Environment": [
          "Installing JDK and NetBeans Bundle",
          "Your First Java Program",
          "Basic structure of a java program",
          "What is a package"
        ],
        "Programming in Java - Basic Concepts": [
          "Primitive Data Types",
          "Basic Operators",
          "Variables",
          "Arrays",
          "Using comments",
          "Running Java outside IDE"
        ],
        "Programming in Java : Project 1: Adding two numbers": [
          "Creating the project",
          "Renaming the components",
          "Coding the exit buttons",
          "Coding the clear button",
          "Coding the addition button",
          "Running your project outside IDE"
        ],
        "Programming in Java :Project 2: Creating Digital Clock": [
          "Creating the project structure",
          "Importing Packages",
          "Using Classes",
          "Creating a Thread",
          "Modifying the Jlablel properties",
          "Building and deploying your application"
        ],
        "Programming in Java :Project 3: Creating a basic calculator": [
          "Creating the project and adding a Form",
          "Adding a Textbox and button to form",
          "Changing the form properties",
          "Java Form Events",
          "Coding the Plus Button",
          "Coding the equal and clear button",
          "Coding the Math Operators",
          "Building and deploying your project"
        ],
        "Programming in Java :Project 4: Creating Word Count Tool": [
          "Creating the project",
          "Designing the GUI -Part 1",
          "Designing the GUI -Part 2",
          "Styling the GUI",
          "Renaming the variables",
          "Programming the exit and clear buttons",
          "Programming the Count Button",
          "Deploying and running your project"
        ],
        "Programming in Python : Installing Python": [
          "Download and Install Python",
          "The Python IDLE",
          "Reserved Python Keywords"
        ],
        "Programming in Python: Basic Concepts": [
          "Arithmetic Operators",
          "Comparison Operators",
          "Variables",
          "SELF variables",
          "List",
          "Tuples",
          "Using Comments",
          "What is a class",
          "Your first Python program"
        ],
        "Python Tkinter": [
          "What is Tkinter",
          "TK and TCL",
          "Installing Python and TCL ,TK for Mac",
          "Creating your first tkinter app"
        ]
      },
      "requirements": [
        "Basic working knowledge of a Computer",
        "Basic internet navigational skills"
      ],
      "description": "Programming languages are the building blocks for communicating instructions to machines, without them the technology driven world we live in today wouldn’t exist. Programming can be fun as well as challenging.\nIn this beginners course we will be learning to code using four very popular and high in demand programming languages:\n\nJava\nPython\nJavaScript\nC#\n\n\nJava is a general purpose high-level, object-oriented programming language. Java is one of the most commonly used languages for developing  and delivering content on the web. An estimated nine million  Java developers use it and more than three billion mobile phones run it.  Java is an object-oriented language, which means that programmers\ndefine not only the data type of a data structure, but also the  types of functions that can be applied to the data structure.\nPython is an interpreted, object-oriented, high-level programming language with dynamic semantics. Its high-level built in data structures, combined with dynamic typing and dynamic binding, make it very attractive for Rapid Application Development, as well as for use as a scripting or glue language to connect existing components together.\nJavaScript is a programming language for the web. It is supported by most web browsers including Chrome, Firefox, Safari, internet Explorer, Edge, Opera, etc. Most mobile browsers for smart phones support JavaScript too.\nC# is an elegant and type-safe object-oriented language that enables developers to build a variety of secure and robust applications that run on the .NET Framework. You can use C# to create Windows client applications, XML Web services, distributed components, client-server applications, database applications, and much, much more.\nThe course will teach you topics like:\n\nSetting up various development environments\nVariables\nData Types\nString operators\nAssignment operators\nComparison operators\nLogical operators\nArrays\nFunctions\nLists\nConcatenation\nConditional Statements\n\n\nWe will be creating 16 projects  - 4 for each of the programming languages.",
      "target_audience": [
        "Beginner programmers",
        "Anyone who wants to learn something new"
      ]
    },
    {
      "title": "Cobol learning made easy",
      "url": "https://www.udemy.com/course/cobol-learning-made-easy/",
      "bio": "Learn cobol language programming which is used extensively in mainframe systems",
      "objectives": [
        "Develop good basics in Cobol programming",
        "Lifetime access to all videos in this course",
        "Give you a platform for further development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Cobol",
          "COBOL basics"
        ],
        "Theoretical Section": [
          "Cobol Theory part1",
          "cobol theory part 2",
          "cobol theory part 3",
          "cobol theory part 4",
          "Summary of previous theory topics and remaining theory topics",
          "Cobol Hand Notes",
          "COBOL Theory"
        ],
        "Programming Section": [
          "Hello world program",
          "program showing different data declarations in cobol",
          "program about figurative constants",
          "Program about MOVE in alphanumeric data declarations",
          "Program about MOVE verb",
          "Program about MOVE in numeric data declarations part 1",
          "Program about MOVE in numeric data declarations part2",
          "program showing Move verb for one to many",
          "program using ADD verb",
          "program using different types of SUBTRACT verb",
          "program using different types of MULTIPLY and DIVIDE verbs",
          "program to perform different types of arithmetic operations",
          "if statement program",
          "nested if condition program",
          "simple perform program",
          "evaluate program",
          "program demonstrating COND level number 88",
          "Demo of USAGE comp variables",
          "Editing PIC classes program",
          "perform n times program",
          "perform until program",
          "perform THRU program",
          "perform varying and perform varying after program",
          "tables program(single dimensional)",
          "file write program",
          "file read program",
          "program to call a subprogram",
          "inspect with tallying verb program",
          "inspect with replacing verb program",
          "program to concatenate small strings into a single string",
          "program for splitting large string to small parts"
        ],
        "Conclusion": [
          "conclusion"
        ]
      },
      "requirements": [
        "it's good to know any of the programming knowledge(it's not a mandatory)",
        "should have internet connection with good speed"
      ],
      "description": "Course Description\nThis course mainly concentrates on cobol programming language . Have you ever wanted to learn to code in cobol but don't know where to start? Learning how to code in cobol can get you a better job and lead to a better future. This course starts you off with the basic coding language of COBOL. This is a very good tutorial that will show you how to code in COBOL. Cobol is the most important language in mainframe development. having good basics in this cobol programming will help you to become a great mainframe developer. Enroll to begin your journey to be a COBOL development master.",
      "target_audience": [
        "anyone who are interested in COBOL programming",
        "who are aspiring to become COBOL or Mainframe developer",
        "COBOL programming experts are not recommended to take this course"
      ]
    },
    {
      "title": "Python: Python Programming for Artificial Intelligence (1)",
      "url": "https://www.udemy.com/course/python-python-programming-for-artificial-intelligence-1/",
      "bio": "Learn Python like a Pro! Start with basics to learn Data Science, Machine Learning and Artificial Intelligence - (2021)",
      "objectives": [
        "Go from a total beginner to a confident Python programmer",
        "You can write \"Advanced in Python for Artificial Intelligence\" with peace of mind in your CV",
        "It will be easier for you to adapt to other languages after learning Python",
        "This course is only 1 in 7 of what I want to teach you. This course will be the basis of our last course, artificial intelligence course. To give an example, if life is an artificial intelligence, this course is your first steps in this life",
        "Acquire the pre-requisite Python skills to move into specific branches - Machine Learning, Data Science and Artificial Intelligence",
        "You will learn the Numpy, Pandas and Matplotlib libraries which are the basic data science libraries.",
        "Optional: Add the Python Object-Oriented Programming (OOP) skills to your",
        "Learn Python from experienced professional software developers."
      ],
      "course_content": {
        "Introduction": [
          "Python Introduction",
          "Python Installation",
          "Datai Team Github and Resources",
          "Optional: Google Colab"
        ],
        "Python Basics": [
          "Variables",
          "Strings",
          "Numbers",
          "Variable - String - Number",
          "Built-in Functions",
          "User Defined Functions",
          "Default and Flexible Functions",
          "Built-in - User Defined - Default Functions",
          "Practice 1",
          "Lambda Function",
          "Lambda Function",
          "List",
          "Tuple",
          "Dictionary",
          "List - Tuple - Dictionary",
          "Conditionals (if-else Statements)",
          "Practice 2",
          "For Loop",
          "While Loop",
          "If Else Statement - For & While Loops",
          "Practice 3"
        ],
        "Object Oriented Programming": [
          "Class and Constructor",
          "Class Variables",
          "Class Example",
          "Object Oriented Programming",
          "Optional Section: Object Oriented Programming"
        ],
        "Dealing with Programming Errors": [
          "Syntax Error",
          "Try - Except 1",
          "Try - Except 2",
          "Programming Errors",
          "Practice Test 1: Midterm"
        ],
        "Numpy": [
          "Numpy Basics",
          "Numpy Basics",
          "Numpy Basic Operations",
          "Numpy Basic Operations",
          "Indexing and Slicing",
          "Indexing and Slicing",
          "Shape Manipulation",
          "Shape Manipulation",
          "Stacking Arrays",
          "Stacking Arrays",
          "Convert and Copy Array"
        ],
        "Pandas": [
          "Introduction to Pandas",
          "Pandas Basic Methods",
          "Pandas Basic Methods",
          "Indexing and Slicing Data Frames",
          "Indexing and Slicing Data Frames",
          "Filtering Pandas Data Frame",
          "Filtering Pandas Data Frame",
          "List Comprehension",
          "Concatenating Data",
          "Concatenating Data",
          "Transforming Data"
        ],
        "Visualization with Matplotlib": [
          "Pandas Review",
          "Line Plot",
          "Scatter Plot",
          "Histogram",
          "Bar Plot",
          "Subplots",
          "Matplotlib"
        ],
        "Python Final Exam": [
          "Practice Test 2: Final Exam"
        ],
        "Conclusion": [
          "Python Conclusion",
          "Python Additional Resources"
        ],
        "Optional Section: Object Oriented Programming": [
          "Classes",
          "Classes",
          "Attributes",
          "Attributes",
          "Methods",
          "Methods vs Functions",
          "Methods",
          "Constructor/Initializer",
          "Constructor/Initializer",
          "Calculator Project",
          "Calculator Homework",
          "Encapsulation",
          "Encapsulation",
          "Inheritance",
          "Inheritance",
          "Inheritance Project",
          "Abstract Classes",
          "Abstract Classes",
          "Overriding",
          "Overriding",
          "Polymorphism",
          "Polymorphism",
          "Lecture Project",
          "Rent a Vehicle Project Introduction",
          "Classes and Methods Used in Project",
          "Rent a Vehicle Class (Parent Class)",
          "Rent a Car Class (Child Class)",
          "Rent a Bicycle Class (Child Class)",
          "Customer Class",
          "Customer Login Page: Bicycle Menu",
          "Customer Login Page: Car Menu",
          "Rent a Vehicle Project Test",
          "Conclusion",
          "BONUS"
        ]
      },
      "requirements": [
        "No prior knowledge of Python programming is required",
        "It is enough to have a computer with internet connection",
        "Good dreams about goals and future"
      ],
      "description": "THIS COURSE IS THE FIRST PART OF 7-STEP ARTIFICIAL INTELLIGENCE JOURNEY.\nPython\nData Science\nVisualization Tools\nMachine Learning\nDeep Learning\nStatistical Learning\nReinforcement Learning\nWe will learn the Python language infrastructure required to learn our ultimate goal, Artificial Intelligence algorithms.\nPYTHON COURSE DESCRIPTION\nPython Introduction\nPython Installation\nUdemy Description\nDatai Team Github and Resource\nPython Basics\nVariables\nStrings\nNumbers\nBuilt-in Function\nUser Defined Function\nLambda Function\nList\nTuple\nDictionary\nIf-else statements\nFor and While Loops\nObject Oriented Programming (OOP)\nClass and Constructor\nClass Variables\nDealing with Programming Errors\nSyntax Errors\nExceptions\nNumpy Library\nNumpy Basics\nNumpy Operations\nIndexing and Slicing\nShape Manipulation\nStacking Arrays\nConvert and Copy Array\nPandas Library\nPandas Introduction\nPandas Basic Methods\nIndexing and Slicing\nFiltering\nList Comprehension\nConcatenating\nTransform Data\nMatplotlib Library\nPandas Review\nLine Plot\nScatter Plot\nHistogram\nBar Plot\nSubplots\nOptional: Object Oriented Programming (OOP)\nClasses\nAttributes\nMethods\nMethods vs Functions\nConstructor/Initializer\nEncapsulation\nInheritance\nAbstract Classes\nOverriding\nPolymorphism\nRent a Vehicle Project\n2 Practice Exam: Midterm + Final Exams\n26 Quizzes\nWHY PYTHON?\nAccording to 2020 IEEE research, Python is one of the most used and preferred programming languages worldwide.\nPython is the first choice of newcomers to coding thanks to its easy learning.\nPython is open source, supported by the world's largest companies such as Facebook or Google.\nWhen it comes to data science, machine learning or artificial intelligence, Python language comes to mind first. This causes Python to have a large worldwide audience.\nIn terms of professional career, Python is one of the languages with the most opportunities.\nTHE OPPORTUNITIES YOU WILL HAVE WITH THIS COURSE\nCoding ability from scratch: We will code together.\nCodes and Templates: You can download every Python template and code we have created in the course. Thanks to this code and template, you create the infrastructure for the applications and projects that you will make later.\nTheory and Logic: We not only tell you how to write code, but also the logic and theory behind the code we write, and why we write such a code.\nIn-class support: We don't just give you video lessons. We have created a professional Python Programmer team and community to support you. This means that you will get answers to your questions within 24 hours.\nWHO WE ARE: DATAI TEAM ACADEMY\nDATAI TEAM is a team of Python Programmers and Data Scientists.\nLet's register for the course.",
      "target_audience": [
        "Those who want to specialize in Python language",
        "Those who want to learn a programming language but cannot decide which one",
        "Those who want to start and continue their education or career in data science, machine learning or artificial intelligence",
        "Those who know Python basics and want to master Python for Artificial Intelligece"
      ]
    },
    {
      "title": "Learn GREP and SED on Linux for Beginners",
      "url": "https://www.udemy.com/course/learn-grep-and-sed-on-linux-for-beginners/",
      "bio": "This course explores in details of two powerful tools grep and sed",
      "objectives": [
        "Use Grep Efficiently",
        "Understand Switches Properly",
        "Use Regular Expressions"
      ],
      "course_content": {
        "Intro to Grep": [
          "Introduction To The Course",
          "Learn Switches : -i, -v, -c",
          "More on Switches : -l, -L, -n, -h",
          "Other Command Line Switches",
          "Piping Other Commands To Grep",
          "Meta Characters In Regular Expressions",
          "Example Of Validating E-mail Addresses",
          "Example Of Validating US Phone Numbers"
        ],
        "Intro to Sed": [
          "Sed Introduction",
          "Suppressing Output With -n, And Back Expressions",
          "Address Notation",
          "Printing Line Numbers With The = Command",
          "Other Commands And Scripting Sed",
          "Bonus Lecture - Coupon Code"
        ]
      },
      "requirements": [
        "Any Linux Based Operating System",
        "Knowledge of any Command Line is Helpful, but Not Necessary"
      ],
      "description": "One of the most important tasks we undertake in Linux is processing text in files. This course explores two powerful tools we have to do this: grep and sed. Grep and sed find and manipulate text in files using regular expressions, which use special characters for searching and replacing text.\n\nIn the course, we’ll introduce regular expression syntax in the context of learning grep, then apply what we’ve learned as we work with sed. Topics include:\n\n- finding text with grep\n- regular expression syntax\n- meta characters\n- validating emails and phone numbers\n- intro to sed\n- replacing text in files\n- line number addressing\n- outputting only found lines\n- printing line numbers\n- adding text before and after lines\n- simple sed scripts\n\nThe course is in two units, and runs just over an hour in length.",
      "target_audience": [
        "Any Fresher Who Wants to Learn Basic Linux Shell Commands",
        "Any Fresher Who Wants to Learn Basic Regex",
        "Expert who Needs to Brush up Regex Skills"
      ]
    },
    {
      "title": "C# Remoting : Build Client / Server Database Applications",
      "url": "https://www.udemy.com/course/c-sharp-remoting/",
      "bio": "Build client applications to use objects on remote computers such as using the database of the server remotely",
      "objectives": [
        "Build distributed C# applications",
        "Create SQL Server database and stored procedure and connect with C# applications",
        "Write clean codes in C# based on Software Layers",
        "Develop applications that support many clients and one server via LAN network"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "SQL Server Database": [
          "Database and tables creation",
          "Stored procedures creation"
        ],
        "Windows Form Application and APIs": [
          "Windows Form Application",
          "Data Access Layer - Connect to the Database",
          "Data Access Layer - Select Data",
          "Data Access Layer - Execute SQL Commands",
          "Presentation Layer - Select Data",
          "Presentation Layer - Insert Data",
          "Presentation Layer - Delete and Update Data",
          "Application Layer - Select and Insert Data",
          "Application Layer - Delete Data",
          "Application Layer - Update Data"
        ],
        "Class Library": [
          "Create Class Library"
        ],
        "Client Application": [
          "Client Application Form",
          "Connecting with the Server"
        ],
        "Server Application": [
          "TCP Channel"
        ],
        "Bonus Section": [
          "Bonus Lecture: Discounts on my other courses!"
        ]
      },
      "requirements": [
        "C# Knowledge is required",
        "Object Oriented Programming OOP understanding is required",
        "SQL knowledge is required"
      ],
      "description": "Establishing communication between the client and the server that is located thousands of miles apart, is a common development goal, especially when building widely-distributed applications.\n.NET remoting enables client applications to use objects in other processes on the same computer or on any other computer available on its network.\nYou will be able to use the .NET remoting to establish a connection between the server database and the client application.\nYou will also learn how to create SQL Server database, tables, and stored procedures. Moreover, you will be able to divide your application into layers in order to write clean codes; so that your coeds will be elegant and easy to develop.\nFurthermore, you will be able to create a class library and import it to any application.\nYou will make a complete client/server database application  throughout the course.",
      "target_audience": [
        "C# developers who seek after distributed applications",
        "C# developers who are curious about client and server database application using Remoting Technology",
        "C# developers who are curious about connecting SQL Server database with C# applications",
        "C# developers who are curious about stored procedures in SQL Server database engine",
        "C# developers who are curious about writing clean codes"
      ]
    },
    {
      "title": "Spring Interview Questions Preparation Course",
      "url": "https://www.udemy.com/course/spring-interview-questions-preparation-course/",
      "bio": "Get success in Spring interview!",
      "objectives": [
        "Understand Spring concepts",
        "Learn Spring Interview Questions",
        "Best practices of Spring",
        "Tricky questions on Spring",
        "Gain deep Spring knowledge",
        "Demand higher salary or promotion based on the knowledge gained!"
      ],
      "course_content": {},
      "requirements": [
        "Basic Software knowledge",
        "Basic Spring knowledge",
        "Internet access"
      ],
      "description": "Spring is one of the most popular software framework for enterprise applications implemented in Java. Big companies like Amazon, Netflix, Google etc use Spring Framework in their Software development architecture. This course is designed to help you achieve your goals in Spring Framework field. Software Engineers with Spring Framework knowledge may get more salary than others with similar qualifications without Spring Framework knowledge.\nIn this course, you will learn how to handle interview questions on Spring Framework in Software Design and Development. I will explain you the important concepts of Spring Framework.\nYou will also learn the benefits and use cases of Spring Framework in this course.\nWhat is the biggest benefit of this course to me?\nFinally, the biggest benefit of this course is that you will be able to demand higher salary in your next job interview.\nIt is good to learn Spring Framework for theoretical benefits. But if you do not know how to handle interview questions on Spring Framework, you can not convert your Spring Framework knowledge into higher salary.\nWhat are the topics covered in this course?\nWe cover a wide range of topics in this course. We have questions on Spring Framework best practices, Security. tricky questions etc.\nHow will this course help me?\nBy attending this course, you do not have to spend time searching the Internet for Spring Framework interview questions. We have already compiled the list of the most popular and the latest Spring Framework Interview questions.\nAre there answers in this course?\nYes, in this course each question is followed by an answer. So you can save time in interview preparation.\nWhat is the best way of viewing this course?\nYou have to just watch the course from beginning to end. Once you go through all the videos, try to answer the questions in your own words. Also mark the questions that you could not answer by yourself. Then, in second pass go through only the difficult questions. After going through this course 2-3 times, you will be well prepared to face a technical interview in Spring Framework.\nWhat is the level of questions in this course?\nThis course contains questions that are good for a Fresher to an Architect level. The difficulty level of question varies in the course from a Fresher to an Experienced professional.\nWhat happens if Spring Framework technology changes in future?\nFrom time to time, we keep adding more questions to this course. Our aim is to keep you always updated with the latest interview questions on Spring Framework.\nWhat are the sample questions covered in this course?\nSample questions covered in this course are as follows:\nWhat is Spring framework?\nWhat are the benefits of Spring framework in software development?\nWhat are the modules in Core Container of Spring framework?\nWhat are the modules in Data Access/Integration layer of Spring framework?\nWhat are the modules in Web layer of Spring framework?\nWhat is the main use of Core Container module in Spring framework?\nWhat kind of testing can be done in Spring Test Module?\nWhat is the use of BeanFactory in Spring framework?\nWhich is the most popular implementation of BeanFactory in Spring?\nWhat is XMLBeanFactory in Spring framework?\nWhat are the uses of AOP module in Spring framework?\nWhat are the benefits of JDBC abstraction layer module in Spring framework?\nHow does Spring support Object Relational Mapping (ORM) integration?\nHow does Web module work in Spring framework?\nWhat are the main uses of Spring MVC module?\nWhat is the purpose of Spring configuration file?\nWhat is the purpose of Spring IoC container?\nWhat is the main benefit of Inversion of Control (IOC) principle?\nDoes IOC containers support Eager Instantiation or Lazy loading of beans?\nWhat are the benefits of ApplicationContext in Spring?\nHow will you implement ApplicationContext in Spring framework?\nExplain the difference between ApplicationContext and BeanFactory in Spring?\nBetween ApplicationContext and BeanFactory which one is preferable to use in Spring?\nWhat are the main components of a typical Spring based application?\nExplain Dependency Injection (DI) concept in Spring framework?\nWhat are the different roles in Dependency Injection (DI)?\nSpring framework provides what kinds of Dependency Injection mechanism?\nIn Spring framework, which Dependency Injection is better? Constructor-based DI or Setter-based DI?\nWhat are the advantages of Dependency Injection (DI)?\nWhat are the disadvantages of Dependency Injection (DI)?\nWhat is a Spring Bean?\nWhat does the definition of a Spring Bean contain?\nWhat are the different ways to provide configuration metadata to a Spring Container?\nWhat are the different scopes of a Bean supported by Spring?\nHow will you define the scope of a bean in Spring?\nIs it safe to assume that a Singleton bean is thread safe in Spring Framework?\nWhat are the design-patterns used in Spring framework?\nWhat is the lifecycle of a Bean in Spring framework?\nWhat are the two main groups of methods in a Bean’s lifecycle?\nCan we override main lifecycle methods of a Bean in Spring?\nWhat are Inner beans in Spring?\nHow can we inject a Java Collection in Spring framework?\nWhat is Bean wiring in Spring?\nWhat is Autowiring in Spring?\nWhat are the different modes of Autowiring supported by Spring?\nWhat are the cases in which Autowiring may not work in Spring framework?\nIs it allowed to inject null or empty String values in Spring?\nWhat is a Java-based Configuration in Spring?\nWhat is the purpose of @Configuration annotation?\nWhat is the difference between Full @Configuration and 'lite' @Beans mode?\nIn Spring framework, what is Annotation-based container configuration?\nHow will you switch on Annotation based wiring in Spring?\nWhat is @Autowired annotation?\nWhat is @Required annotation?\nWhat are the two ways to enable RequiredAnnotationBeanPostProcessor in Spring?\nWhat is @Qualifier annotation in Spring?\nHow Spring framework makes JDBC coding easier for developers?\nWhat is the purpose of JdbcTemplate?\nWhat are the benefits of using Spring DAO?\nWhat are the different ways to use Hibernate in Spring?\nWhat types of Object Relational Mapping (ORM) are supported by Spring?\nHow will you integrate Spring and Hibernate by using HibernateDaoSupport?\nWhat are the different types of the Transaction Management supported by Spring framework?\nWhat are the benefits provided by Spring Framework’s Transaction Management?\nGiven a choice between declarative and programmatic Transaction Management, which method will you choose?\nWhat is Aspect Oriented Programming (AOP)\nWhat is an Aspect in Spring?\nIn Spring AOP, what is the main difference between a Concern and a Cross cutting concern?\nWhat is a Joinpoint in Spring AOP?\nWhat is an Advice in Spring AOP?\nWhat are the different types of Advice in Spring AOP?\nWhat is a Pointcut in Spring AOP?\nWhat is an Introduction in Spring AOP?\nWhat is a Target object in Spring AOP?\nWhat is a Proxy in Spring AOP?\nWhat are the different types of AutoProxy creators in Spring?\nWhat is Weaving in Spring AOP?\nIn Spring AOP, Weaving is done at compile time or run time?\nWhat is XML Schema-based Aspect implementation?\nWhat is Annotation-based aspect implementation in Spring AOP?\nHow does Spring MVC framework work?\nWhat is DispatcherServlet?\nCan we have more than one DispatcherServlet in Spring MVC?\nWhat is WebApplicationContext in Spring MVC?\nWhat is Controller in Spring MVC framework?\nWhat is @RequestMapping annotation in Spring?\nWhat are the main features of Spring MVC?\nWhat is the difference between a Singleton and Prototype bean in Spring?\nHow will you decide which scope- Prototype or Singleton to use for a bean in Spring?\nWhat is the difference between Setter and Constructor based Dependency Injection (DI) in Spring framework?\nWhat are the drawbacks of Setter based Dependency Injection (DI) in Spring?\nWhat are the differences between Dependency Injection (DI) and Factory Pattern?\nIn Spring framework, what is the difference between FileSystemResource and ClassPathResource?\nName some popular Spring framework annotations that you use in your project?\nHow can you upload a file in Spring MVC Application?\nWhat are the different types of events provided by Spring framework?\nWhat is the difference between DispatcherServlet and ContextLoaderListener in Spring?\nHow will you handle exceptions in Spring MVC Framework?\nWhat are the best practices of Spring Framework?\nWhat is Spring Boot?",
      "target_audience": [
        "Fresher, Software Engineer, Sr. Software Engineer, Member Technical Staff, Expert",
        "Software Architect, Development Manager, Director",
        "Anyone who wants to appear in Spring interview",
        "People interested in going up in career!!"
      ]
    },
    {
      "title": "SQLite databases with Python",
      "url": "https://www.udemy.com/course/sqlite-database-with-python/",
      "bio": "Quick intro to Databases with Python",
      "objectives": [
        "How to use SQLite databases with Python",
        "Basic SQL queries"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Create database",
          "Create table and insert data",
          "Open an SQLite Database",
          "Show table data",
          "Delete data",
          "Update data",
          "Summary"
        ],
        "Intermediate": [
          "Creating complicated tables",
          "Show data (intermediate)",
          "What's next?"
        ]
      },
      "requirements": [
        "Be able to run Python"
      ],
      "description": "In this course you will learn interacting with SQLite3 databases. It makes it easy to access sqlite databases from python code. Manipulate and analyze your data using Python.\nWhile you can store your data in files, this quickly becomes impractical.  A file can only be opened and written once, not by millions of people at the same time. If you want to make any kind of data-driven application you need to use a database system.\nSQLite is a great little database. basically, it is a low-overhead, cross-platform, self-contained, zero-configuration, transactional SQL database engine. It's great when you want to move beyond files on the disk and start working with databases.\nThe best part is that it has bindings in lots of languages. In python, those bindings are in Python Package Index (pypi) as python-sqlite3 package.\nThe course teaches you how to setup a database and basic SQL with Python. Once you know how to work with SQLite, you can transfer that knowledge to working with other database systems like MySQL or Postgres.You will learn how to insert, retrieve, update and delete data amongst other things.\nIf you are a Python beginner and want to work with databases, this course is for you.",
      "target_audience": [
        "Beginner Python developers"
      ]
    },
    {
      "title": "Data Structures And Algorithms In PHP",
      "url": "https://www.udemy.com/course/data-structures-and-algorithm-in-php-part-one/",
      "bio": "Linked list, Stacks, Queues And Interview Problems",
      "objectives": [
        "What are algorithms really is? Basic view on algorithms.",
        "What are time and space complexities in a easily understandable way. Yeah that's true.",
        "What are linked list and how linked list differs from Arrays?",
        "What are stacks and queues?",
        "Introduction to non-linear data structures"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge on PHP and object oriented PHP. Its okay if you are able to create classes and objects."
      ],
      "description": "PHP being the most popular server side scripting language powers more than 80% of the web. PHP is beyond Wordpress and it deserves more. By the release of  PHP 7 , it is also capable of creating an enterprise application. We already know the importance of problem solving and arise in demand for developers especially web developers.  Data structures are the core of computer science and it is the most involved topic on problem solving. Apart from being it is the most important topic asked in interview  data structures helps to solve most of the problems when developing applications. So next time when your are going for a PHP developer interview and the interviewer asks to implement some data structure don't think of using C , C++ or Java... lets implement it with PHP itself!!\n\n\nIn this series you will learn the most important world of linear data structures linked list, stacks and queues. You will learn how to implement it, how to perform insertion and deletion operations and some problems based on this data structures.\n\n\nLinked list :-\nDo you know PHP array(but trust me it is not the array like other languages) itself implemented with doubly linked list and hash table internally? In this you will learn the importance of linked list and why it is preferred for inserting and deleting the data when compared to array. You will learn\nHow to create an linked list in PHP\nHow to insert an element at first position of the list\nHow to insert an element at the last position of the list\nHow to insert an element at the given position\nHow to delete the first element of the list\nHow to delete the last element of the list\nHow to delete an element at the given position\nYou will learn all types of linked list that you definitely need to know.\n\n\nStack:-\nDo you know the function calls and variable declarations are internally maintained using stack. Yes programming languages itself make use of stack data structure for some of its operations. In this you will learn,\nHow to implement stack using array\nHow to implement stack using linked list(I hope you may come across this is interview)\nSome problems based on stack\n\n\nQueue:-\nOperating systems processes are rely on this cool data structure. In this you will learn\nHow to implement queue using array\nHow to implement queue using linked list\nSome problems on queue\n\n\nTake your next step by enrolling to the course. Developers are on rise. But not everyone get hired those who know how to solve problems are the one getting hired. Apart from learning Laravel,Yii,etc,.. lets learn the core of problem solving.\n\n\nThe reason I made two parts of this course is that next part consist of non-linear data structures which is some what difficult to grasp and more over we are going to develop an real world application based on all the data structures we learned. Yes!!! that's true. It is not enough to learn only the implementation of these data structures, we must need to know how to implement it at perfect scenario.\n\n\nJoin the course to see more!!!!",
      "target_audience": [
        "Beginner PHP developers who want to learn the most important world of computer science"
      ]
    },
    {
      "title": "Complete Python Masterclass™ | Zero to Hero Bootcamp",
      "url": "https://www.udemy.com/course/comprehensive-python-programming-bootcamp-masterclass/",
      "bio": "This modern Python 3 mega course takes you from basic to advanced Python programming with tones of exercises & projects",
      "objectives": [
        "Go from absolute beginner to become a confident Python Programmer",
        "Be grounded in the fundamental of Python programming to help you go from zero to hero",
        "Go deeper to understand complex topics in Python",
        "Learn Python programming through several exercises and solutions with the source codes",
        "Acquire the required Python knowledge you will need to go for Data Science, Machine learning, Ai and Deep learning",
        "Learn to use Python Object-Oriented Programming (OOP) in your program",
        "Learn to use Python GUI and create your own GUI projects",
        "Learn to to create your own Python applications.",
        "Learn Python from ardent Python programmer."
      ],
      "course_content": {},
      "requirements": [
        "No experience is required - I will teach you from scratch",
        "You only need a computer and internet access"
      ],
      "description": "Welcome to the - 2022 Complete Python Masterclass™ | Zero to Hero Bootcamp, the very course you will learn to code with Python.\nWith tones of challenges and solutions, projects, this Python course is without a doubt one of the most comprehensive Python programming courses you will ever find. It doesn't matter if you don't have any experience in programming because this course will take you from absolute beginner level to a true Python professional. See:\nWHY THIS COURSE?\nThis course is not rushed over.\nIt starts from the very basics of Python programming to advanced Python - the course was developed over a year.\nThis course is taught by an active Python programmer with several years of experience\nThis course is taught by examples, challenges with solutions, and projects\nYou will not only know the theory but learn to build your own projects using Pythons\nAll the students taught by the instructor have moved higher in their careers\nNo question asked by students is not answered with 48 hours. There is no too simple question or too hard question. All questions are taken very seriously by the instructor\nThe course is continuously updated to make sure everything topic is up to date\n\n\nYou don't need to take my words for it. See what existing students have to say concerning my courses:\n\n\n\"Mr. Donatus is indeed a great teacher! You can tell that he has mastered Python to a native level, and he knows how to transmit this knowledge in an incredibly efficient and effective way. I absolutely recommend this course to anyone looking for a Python course, being it that you want to learn from scratch, or being it that you want to refresh and improve your skills.\" - Ignacio Castro\n\"This is a great course!  It is deep. The instructor didn't leave any stone unturned. It gave me a better understanding of the more advanced concept. Above all, I love the style of teaching with challenges and solutions.\" - Paul Min\n\"It's been an amazing time having to learn and understand how python works.\" - Ana Gil\n\"This was an awesome match for me! I have been wanting to learn Python for a long time. I have taken other courses of this instructor, immediately when I saw this Python course I quickly dived into it because I know it will be awesome. I was not disappointed. I say Kudos to the Teacher. I recommend this course!\" - Binta Abdulsalam\n\"Well explained and easy to understand. This is indeed commendable and I appreciate your efforts.\" - Joanita Anderson\n\n\nI am not only confident you will love this course, but I am also confident you will spread the love to others. Hence, we are offering you 30 days' FULL money-back. What are you waiting for? Click Buy now and let's get started.\n\n\nWHO IS THIS COURSE FOR?\nThis course is for you if you want to learn python for the first time or you want to advance your understanding of Python programming.\nThis course is for you if you are coming from other programming languages and want to learn Python fast and know it really well.\nThis course is for you if you are tired of Python courses that are too brief, too simple, or too complicated.\nThis course is for you if you want to build real-world applications using Python.\nThis course is for you if you have to get the prerequisite knowledge to understand Data Science and Machine Learning using Python.\nThis course is for you if you want to master the in and out of Python.\nThis course is for you if you want to learn Python by doing exciting real-life challenges that will distinguish you from the crowd.\nThis course is for you if plan to pass a Python interview soon.\nBy the end of this course, you will be very fluent in Python programming, you will be able to build your own project and get promoted or get a new job.",
      "target_audience": [
        "All levels"
      ]
    },
    {
      "title": "Practical Akka Http and Microservices",
      "url": "https://www.udemy.com/course/practical-akka-http-and-microservices/",
      "bio": "Learn how to connect Akka systems to the outside world - a really practical hands-on course",
      "objectives": [
        "How to connect Akka systems to the outside word using REST",
        "How to integrate Akka into a Microservice Architecture",
        "How to send data to Akka for use as a source for a stream",
        "How to get Akka to source data from other systems by acting as a client"
      ],
      "course_content": {
        "Chapter 1 - Introduction": [
          "Course introduction",
          "Course Files",
          "How to get support for this course"
        ],
        "Chapter 2 - Creating our first server": [
          "Creating a source out of incoming connections",
          "Handling incoming connections synchronously",
          "Running the server"
        ],
        "Chapter 3 - Processing incoming connections": [
          "Marshalling and unmarshalling with JSON",
          "Marshalling and unmarshalling from Akka",
          "Handling incoming connections asynchronously"
        ],
        "Chapter 4 - Basic routing": [
          "Refactoring the code to use routes",
          "The routing DSL",
          "Routing with parameters"
        ],
        "Chapter 5 - Exercise 1 - building a server": [
          "Creating a server to receive transactions",
          "Solution walkthrough part 1 - posting a transaction",
          "Solution walkthrough part 2 - getting a transaction status",
          "Solution walkthrough part 3 - adding in paths and testing"
        ],
        "Chapter 6 - Security and custom directives": [
          "Setting up an SSL certificate",
          "Basic authentication",
          "Adding authorization",
          "Better authentication with custom directives"
        ],
        "Chapter 7 - Going deeper with routing": [
          "Understanding directives and Routes",
          "Building a routing tree",
          "PathMatchers, Dynamic path segments, and passing data to inner routes",
          "Revisiting rejecting routes",
          "Routing structure - best practice"
        ],
        "Chapter 8 - Scaling up and Backpressure": [
          "Backpressure and Akka Http",
          "Using Streams in the server",
          "Refactoring our code"
        ],
        "Chapter 9 - Integrating routes and streams": [
          "Using streams",
          "Extracting entities as sources",
          "Using complex graphs"
        ],
        "Chapter 10 - Exercise 2 - Integrating Streams": [
          "Exercise",
          "Solution"
        ]
      },
      "requirements": [
        "Reasonable level of Java knowledge",
        "Comfortable with Java's Lambda syntax",
        "Knowledge of Akka using Java and the Akka Typed API both Actors and Reactive Streams",
        "This is a follow on course to the \"Practical Java concurrency with the Akka Actor Model\" and \"Practical Reactive Streams with Akka and Java\" courses"
      ],
      "description": "This course builds on the \"Practical Java concurrency with the Akka Actor Model\" and the \"Practical Reactive Streams with Akka and Java\" courses and will extend your knowledge of using the Akka to build robust, concurrent and scalable applications in Java.\n\n\nTopics included in this course are:\n· using the Akka Http libraries to build Akka servers and clients,\n· using REST to communicate between Akka system and between Akka and non Akka systems,\n· implementing security, including HTTPS / SSL,\n· Marshalling and unmarshalling (converting objects to and from JSON)\n· Akka's advanced Routing DSL and how to apply it to your scenarios\n· Building custom directives to expand the Routing DSL for your own needs\n· Connecting akka into complex Reactive Stream graphs\n· Dealing effectively with exceptions and where Akka servers are unable to handle requests\n· Allowing a browser based client to connect to an Akka system\n\nThe course is very practical with real-world scenarios - you'll be expanding on the blockchain mining application built over the first 2 courses to make it into a genuine microservice.\n\n\nPlease note that although Akka is built in Scala, no Scala knowledge is needed for this course - the course covers Akka with Java and we won't be writing any Scala code.\n\n\nThis course covers the newer Akka Typed API only.",
      "target_audience": [
        "Experienced Java programmers who are looking to expand their skillset",
        "Programmers needing to build scalable, robust, highly concurrent systems in Java"
      ]
    },
    {
      "title": "Data Analysis and Visualization with Python for beginners",
      "url": "https://www.udemy.com/course/data-analysis-and-visualization-with-python-for-beginners/",
      "bio": "Practical Hands-on Data Analysis and Visualization using Python and Jupyter Notebook.",
      "objectives": [
        "Data Analysis",
        "Data Visualization",
        "Quantitative Visualization",
        "Qualitative Visualization",
        "Tabular Data",
        "Jupyter Notebook Server Setup",
        "Creating Jupyter Notebooks",
        "Exploring Pandas DataFrame",
        "Manipulating Pandas DataFrame"
      ],
      "course_content": {
        "Environment Setup": [
          "Introduction",
          "What is Python",
          "What is Jupyter Notebook",
          "Installing Jupyter Notebook Server",
          "Running Jupyter Notebook Server",
          "Common Jupyter Notebook Commands",
          "Jupyter Notebook Components",
          "Jupyter Notebook Dashboard",
          "Jupyter Notebook User Interface",
          "Creating a new Notebook"
        ],
        "Data Analysis and Visualization": [
          "Overview of data analysis and visualization with Python",
          "Kaggle Data Sets",
          "Tabular Data",
          "Exploring Pandas DataFrame",
          "Analyzing and Manipulating Pandas Data Frame",
          "Data Visualization",
          "Visualizing Qualitative Data",
          "Visualizing Quantitative Data",
          "Thank You"
        ]
      },
      "requirements": [
        "Jupyter Notebook Installation ( This is covered in the course)",
        "Basic Python Knowledge"
      ],
      "description": "Data is everywhere. That means more companies are tracking,\nanalysing, and using the insights they find to make better decisions.\n\n\nPython is a popular programming language.\nIt is used for:\nweb development (server-side),\nsoftware development,\nmathematics,\nData Analysis\nData Visualization\nSystem scripting.\n\n\nWhat can Python do?\nPython can be used on a server to create web applications.\nPython can be used alongside software to create workflows.\nPython can connect to database systems. It can also read and modify files.\nPython can be used to handle big data and perform complex mathematics.\nPython can be used for rapid prototyping, or for production-ready software development.\nPython can be used for data analysis and visualization.\nData analysis is the process of  analysing, interpreting, data to discover valuable insights that drive smarter and more effective business decisions.\nData analysis tools are used to extract useful information from business and other types of  data, and help make the data analysis process easier.\nData visualisation is the graphical representation of information and data.\nBy using visual elements like charts, graphs and maps, data visualisation tools\nprovide an accessible way to see and understand trends, outliers and patterns in data.\nThe Jupyter Notebook is an open-source web application that allows you to create and share documents that contain live code, equations, visualizations and narrative text. Uses include: data cleaning and transformation, numerical simulation, statistical modelling, data visualization, machine learning, and much more.",
      "target_audience": [
        "Beginners to Data Analysis an Visualization with Python"
      ]
    },
    {
      "title": "Learn Programming in C++ with the Power of Animation",
      "url": "https://www.udemy.com/course/learn-programming-in-cpp/",
      "bio": "A Programming Course in C++ language, great for beginners, that will teach you C++ coding from scratch using Animation.",
      "objectives": [
        "You will be able to use C++ as a programming language.",
        "Use the skills that you learn in order to start easily a different programming language.",
        "Develop a Library of Fundamental Programs in C++ with the Purpose of Modifying them and Using them in the Future.",
        "You will be able to understand and solve programming problems in C++ and other programming languages.",
        "The course will be updated.",
        "We are here to help you succeed and answer your questions as soon as possible."
      ],
      "course_content": {
        "Introduction": [
          "General Introduction to the C++ Course",
          "Introduction to Cpp First Program"
        ],
        "Variables in C++": [
          "What is a Cpp Variable",
          "A step further with Variables",
          "Input from the User in C++ Language",
          "How to Swap 2 Variables",
          "8 Steps to Solve a Programming Problem",
          "Swap with Only 2 Variables",
          "How to calculate Modulo",
          "Types of Variables",
          "How to find a Random Number",
          "Explanation of the Basic C++ Command Lines"
        ],
        "If Statement in Cpp": [
          "What is If Statement and How to Use it in Cpp",
          "Number is Even or Odd?",
          "Why Programming Seems Boring at First",
          "Calculate the maximum between 3 numbers",
          "Find the Discriminant in Cpp Language",
          "How to use AND / OR in C++",
          "Is the key number between the range?",
          "How to Stop Procrastinating During Programming",
          "General Rules for all exercises in the course",
          "Challenge: Absolute Number Part 1",
          "Challenge: Absolute Number Part 2"
        ],
        "For Loop in C++": [
          "First Introduction to For Loop with Cpp Language",
          "Sum every number until N in C++",
          "How to calculate the Factorial of a number",
          "What is Algorithmic Thinking and Why a Programmer Needs it",
          "Fibonacci Series in C++",
          "Scan a Mathematical Function in C++",
          "Print only odd numbers in Cpp",
          "Challenge: Power of a number Part 1",
          "Challenge: Power of a number Part 2"
        ],
        "One Dimensional Arrays in Cpp": [
          "Introduction to 1 Dimensional Arrays in C++ Language",
          "Theory about Arrays and Lists",
          "How to create a Random Array",
          "How to Start typing Faster on your Keyboard Without Effort",
          "Find the Average of an Array",
          "Find the Maximum number of an Array in C++",
          "Dynamic Programming",
          "Dynamic Factorial Series Programming",
          "Challenge: Calculate the points of a function Part 1",
          "Challenge: Calculate the points of a function Part 2"
        ],
        "While Loop in Cpp": [
          "Introduction to While Loop",
          "Find how many digits a number has",
          "Convert a For Loop to While Loop",
          "Create a User's Array",
          "How to Start a Big Programming Project without Getting Lost",
          "Separate a number and save to Array",
          "Search in 1 Dimensional Array for Key Number",
          "Challenge: From Decimal to Binary Part 1",
          "Challenge: From Decimal to Binary Part 2",
          "Challenge: From Decimal to Binary Part 3"
        ],
        "Sort an Array in C++": [
          "Sort an Array with the Maximum Number",
          "BubbleShort Analysis - Sort an Array"
        ],
        "General Exercises in C++": [
          "Challenge: Convert a number from Binary to Decimal Part 1",
          "Challenge: Convert a number from Binary to Decimal Part 2",
          "Challenge: Least Common Multiple Part 1",
          "Challenge: Least Common Multiple Part 2"
        ],
        "Final Video of the C++ language Course": [
          "Outro of the Cpp Course",
          "Bonus Lecture: Special Gift and Social Media Links"
        ]
      },
      "requirements": [
        "No, you don't even have to download C++. You can go to repl_it - C++ and create code there."
      ],
      "description": "C++ is a great language to master! I know that the process of learning programming especially in C++ language can be difficult and frustrating. For this reason, we decided to develop a different learning experience for you. Instead of just programming on a screen in a Cpp compiler:\nWe use the power of animation in order to analyze the basic ideas.\nAt the same time, we use a digital pen in order to develop the solution of the problem for you in a theoritical base that takes into consideration the C++ programming principles.\nAnd finally, when you come to a good level of understanding of the problem, we start the actual coding in C++ language.\nWith these 3 layers of teaching process, you will never feel that you can’t build a program in C++ as a beginner or in any other programming language, because we will be helping you in every step of the way. You will go a step further, by learning not only the command lines in C++ programming language but you will also develop your algorithmic way of thinking, in order to solve a problem efficiently and easily in any programming language including C++ programming.\nIf you already have previous exposure to a programming language, not only programming in C++ but also python that we already worked with in previous course or java, you already know that the challenging part is not how to write a Cpp command line correctly. It is how to use all the bits and pieces that you have learned in order to solve a problem. How to take an application idea that you have and transform it into a program in C++ that works correctly in every situation. For this reason, we pay the attention that every part of programming really needs. So in the first part of the course we will start by learning the basics about Variables in C++ for beginners course and how to solve interesting and challenging programs only with C++ Variables. Then in the next parts you will learn about the If statement, loops, functions and many more features that a programming language like Cpp contains. Our methodology involves solving carefully chosen problems and programming challenges. In many cases, we will create 2 or even 3 different solutions, in order to teach you not only how to solve a problem, but how to craft a solution in C++, and how you can take different paths in order to reach a certain destination.\nTo follow this course you need to have a compiler to work in. You have two main options:\nThe first one is to download C++ programminglanguage from the internet. This is easy even for a C++ beginner, you can find numerous tutorials for that on YouTube, so I really don’t want to waste your time with information that is not essential.\nThe second one is to use a special web site where you can program in C++ language without any installation. More specifically, you can find it in google just by writing “replit - C++ language”.\nFinally, I need to note that this is a C++ beginners course because especially in the first sections we teach you how and where to use every programming language technique with a C++ beginner driven teaching method. By starting from complete zero and going all the way to intermediate programmer.\nSo come along to check out how our different approach works for you!",
      "target_audience": [
        "Perfect course for someone who wants to start programming for the first time in C++.",
        "It is also ideal for someone who already knows coding but struggles to solve problems or turn ideas into actual code.",
        "Finally, it is a great place to expand your knowledge by learning C++, if you have already mastered other programming languages."
      ]
    },
    {
      "title": "Learn Python - The Complete Course on Python",
      "url": "https://www.udemy.com/course/learn-python-letsgo/",
      "bio": "A step by step comprehensive approach to master python!",
      "objectives": [
        "Learn complete basics of python in a step by step comprehensive way.",
        "Hands on sheets and Assessments to enhance your Problem Solving Skills",
        "Problem sets to consolidate theory that you learn in a more practical way.",
        "Complete edge on the Programming Language Python!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Variables",
          "Data Types"
        ],
        "Strings": [
          "strings, docstrings, indexing, splicing, len method, substrings, check ifs",
          "upper, lower, strip, replace, split, concatenation",
          "string formatting, escape characters, new line, tab",
          "capitalize, title, swap case, case fold",
          "isalnum, isalpha, isdigit, isnumeric, isidentifier, isprintable, istitle",
          "join, maketrans, translate, replace, format, split, splitlines, strip",
          "just, partition, startswith, endswith, find, index, count, center"
        ],
        "Lists": [
          "ordered, mutable, duplicates",
          "list, indexing, splicing",
          "update, append, insert, extend, delete, remove, pop, clear",
          "list comprehension, operation, condition, looping through index",
          "alphanumeric sorting, case sensitive sorting, case insensitive sorting",
          "concatenation, extend, count, index, copy"
        ],
        "Tuples": [
          "tuple, indexing, splicing, check if",
          "tuple method, update, append",
          "unpacking a tuple, using asterisk",
          "looping through tuple, concatenation, multiply tuple"
        ],
        "Sets": [
          "length of a set, membership, check if",
          "add, update, discard, clear",
          "union, update, intersection, symmetric difference, difference",
          "disjoint, subset, superset"
        ],
        "Dictionary": [
          "dictionary, access values, length",
          "access items, check if, copy, update, append, delete",
          "looping through keys, looping through values, looping through key : value pairs",
          "nested dictionary - step by step creation"
        ],
        "Conditional Statements and Loops": [
          "operators - arithmetic, assignment, comparison",
          "operators - logical, identity, membership",
          "conditional statements, boolean expressions, logical operators",
          "normal if else, nested if else",
          "for loop, while loop, for and if",
          "break, continue",
          "range, start stop step, splicing, reverse"
        ],
        "Consolidation Videos": [
          "Instructions",
          "Problem Set I Part I",
          "Problem Set I Part II",
          "Problem Set II",
          "Problem Set III",
          "Problem Set IV",
          "Course Completion"
        ]
      },
      "requirements": [
        "You will learn everything you need to know about python even if you have not written a single line of code in your life!"
      ],
      "description": "With intense brainstorming, Learn Python is a brilliantly crafted course in order to get an edge in the programming language python for your future ventures! Each topic is explained in a step by step comprehensive manner for your better understanding of the language. Each lecture is accompanied by lecture notes, each section is accompanied by assessments and the course ends with problem solving sheets and solution pdfs with explanation videos.\nMy name is Arya Krishna and I am your python tutor. I have years of experience in the programming field and have taught students from all around the world including Japan, South Africa, US, UK, Spain, Singapore, India, Pakistan, Hong Kong, Denmark, Columbia, Sweden and Canada through multiple freelancing websites with five star reviews.\nThe programming language python is on high demand as the world is inclining towards a digital era. You can't take a chance of not having this essential skill as all future jobs and tasks, be it in the field of IT, medicine, administration, business,  will have the involvement of python as a programming language.\nStart learning python now!\nYou will surely feel confident about python after completing the course as per the instructions in the course.\nHappy learning!",
      "target_audience": [
        "Complete beginners to learn a new skill , as well as for advanced programmers to brush up the programming language python."
      ]
    },
    {
      "title": "Comprehensive Guide for Running IOT Systems -AWS GreenGrass!",
      "url": "https://www.udemy.com/course/aws-greengrass/",
      "bio": "Local compute, messaging, data caching, sync, and ML inference capabilities for connected devices. Run IoT applications!",
      "objectives": [
        "Guide for walking through and deploying AWS Greengrass to integrate it with other services."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is AWS GreenGrass ?",
          "AWS GreenGrass group",
          "Devices in AWS GreenGrass",
          "SDK",
          "GGC V1.1.0",
          "GGC V1.0.0",
          "GG supported platforms and requirement"
        ],
        "Getting Started": [
          "GG getting started",
          "GG setting Raspberry Pi",
          "GG Amazon EC2",
          "GG Other Devices",
          "GG Module 2- AWS on AWS IoT",
          "Start AWS GG on Core Device"
        ],
        "Green Grass Config": [
          "GG config-json summary",
          "GG Lambda function",
          "GG Configure Lambda function",
          "cloud configurations"
        ],
        "lambda function": [
          "configure long lived Lambda",
          "GG test long lived lambda function",
          "GG Create AWS IoT DEvice in Greengrass Group",
          "GG Install AWS IoT Device for Python"
        ],
        "Green Grass Communication": [
          "GG Communication",
          "GG Mod 5 Config Devices & Download Files",
          "GG Test Communications Device Syncs Enabled-Disabled",
          "Mod 6 Config IAM Roles & Create Config Lambda Function",
          "GG Test Communications"
        ],
        "GG OTA Updates of AWS": [
          "GG OTA Updates of AWS - Greengrass OTA Agent",
          "GG integration with Init System",
          "GG Reset Deplyments",
          "GG Configure local resource access",
          "GG -add the Lambda function in group",
          "GG Configure Local Resource Access using AWS Step 1,2,3",
          "GG Steps 4,5,6, test local resource access #487",
          "GG Perfom Machine Learning Interface #488",
          "GG Requirements for Machine Learning #489",
          "GG how to config ML inference using AWS#490",
          "GG Step 5 and 6 #495",
          "GG Steps 7 and 8 and Test Inference App #496",
          "GG Configuring an NVIDIA Jetson TX2 and GG Discovery RESTful API #497",
          "GG Use gg OPCUA to Communicate #498",
          "GG AWS gg Security #500",
          "GG Device Connection, gg Messaging, MQTT Core Server, AWS gg Cipher Suites #501",
          "GG Monitoring with AWS gg Logs #502",
          "GG Logging Limitations and Troubleshooting AWS gg Applications #503",
          "GG Troubleshooting (End Part) #504"
        ]
      },
      "requirements": [
        "Basic Understanding of networking and IOT devices",
        "Basic understanding of overview of AWS services, framework and best practices"
      ],
      "description": "AWS Greengrass is software that lets you run local compute, messaging, data caching, sync, and ML inference capabilities for connected devices in a secure way. With AWS Greengrass, connected devices can run AWS Lambda functions, keep device data in sync, and communicate with other devices securely – even when not connected to the Internet. Using AWS Lambda, Greengrass ensures your IoT devices can respond quickly to local events, use Lambda functions running on Greengrass Core to interact with local resources, operate with intermittent connections, stay updated with over the air updates, and minimize the cost of transmitting IoT data to the cloud.\nML Inference is a feature of AWS Greengrass that makes it easy to perform machine learning inference locally on Greengrass Core devices using models that are built and trained in the cloud.\nAWS Greengrass seamlessly extends AWS to devices so they can act locally on the data they generate, while still using the cloud for management, analytics, and durable storage. With Greengrass, you can use familiar languages and programming models to create and test your device software in the cloud, and then deploy it to your devices. AWS Greengrass can be programmed to filter device data and only transmit necessary information back to the cloud. AWS Greengrass authenticates and encrypts device data at all points of connection using the security and access management capabilities of AWS IoT Core. This way, data is never exchanged between devices when they communicate with each other and the cloud, without proven identity.\nBenefits :\nRespond to Local Events in Near Real-time\nAWS Greengrass devices can act locally on the data they generate so they can respond quickly to local events, while still using the cloud for management, analytics, and durable storage. The local resource access feature allows Lambda functions deployed on Greengrass Core devices to use local device resources like cameras, serial ports, or GPUs so that device applications can quickly access and process local data.\nOperate Offline\nAWS Greengrass lets connected devices operate even with intermittent connectivity to the cloud. Once the device reconnects, Greengrass synchronizes the data on the device with AWS IoT Core, providing seamless functionality regardless of connectivity.\nSecure Communication\nAWS Greengrass authenticates and encrypts device data for both local and cloud communications, so that data is never exchanged between devices and the cloud without proven identity. Greengrass uses the same security and access management you are familiar with in AWS IoT Core, with mutual device authentication and authorization, and secure connectivity to the cloud\nSimplified Device Programming with AWS Lambda\nAWS Greengrass uses the same AWS Lambda programming model you use in the cloud, so you can develop code in the cloud and then deploy it seamlessly to your devices. Greengrass lets you execute Lambda functions locally, reducing the complexity of developing embedded software\nReduce the Cost of Running IoT Applications\nWith AWS Greengrass you can program the device to filter device data locally and only transmit the data you need for your applications to cloud. This reduces the amount of raw data transmitted to the cloud and lowers cost, and increases the quality of the data you send to the cloud so you can achieve rich insight at a lower cost.\nUse Cases\nAWS Greengrass ML Inference can be deployed on connected devices like security cameras, traffic cameras, body cameras, and medical imaging equipment to help them make predictions locally. With AWS Greengrass ML Inference, you can deploy and run ML models like facial recognition, object detection, and image density directly on the device. For example, a traffic camera could count bicycles, vehicles, and pedestrians passing through an intersection and detect when traffic signals need to be adjusted in order to optimize traffic flows and keep people safe.\nRetail and Hospitality\nRetailers, cruise lines, and amusement parks are investing in IoT applications to provide better customer service. For example, you can run object detection models at amusement parks to keep track of visitor count. Cameras locate the visitors and maintain a running headcount locally without having to send massive amounts of video feed to the cloud, which is often a challenge due to limited internet bandwidth at parks. This solution can predict wait times at popular theme park rides and help improve the customer experience.\nSecurity\nSecurity camera manufacturers are looking for new ways to make devices more intelligent and automate their threat detection capabilities. AWS Greengrass ML Inference can help improve the capabilities of security cameras. Greengrass enabled cameras can continuously scan premises to look for a change in the scene, such as an incoming visitor, and send an alert. The cameras are able to quickly perform scene detection analysis locally and send data to the cloud only when required, e.g., for additional analysis to identify whether a visitor is a family member.\nPrecision Agriculture\nThe agriculture industry is going through two major disruptions. First, the world’s population continues to grow causing the demand for food to outweigh the output. Second, climate change is resulting in unpredictable weather conditions, affecting crop yields. AWS Greengrass ML Inference can help transform agriculture practices and deliver new value to customers. Greengrass-powered cameras installed in greenhouses and farms can process images of plants, crops, and data from sensors in the soil to not only detect environmental anomalies such as change in temperature, moisture, and nutrition level, but also trigger alerts.\nPredictive Industrial Maintenance\nAs pricing pressure increases on manufacturers, they are looking for newer ways to help increase operational efficiency on factory floors. Delays in detecting issues on the manufacturing assembly line can lead to a waste of time and resources. AWS Greengrass ML Inference can help you in early detection of faulty equipment and issues on the factory floor. Greengrass-powered industrial gateways can continuously monitor the sensor data (e.g., vibrations, noise-level), predict anomalies, and take relevant actions such as send alerts or shut-off the power to minimize losses.",
      "target_audience": [
        "Anyone who is interested in AWS GreenGrass & Running IOT systems"
      ]
    },
    {
      "title": "Learn C++ in Less than 4 Hours - for Beginners",
      "url": "https://www.udemy.com/course/learn-c-plus-plus-in-less-than-4-hours-for-beginners/",
      "bio": "This course is an introduction to the C++ programming language with some focus on OOP concepts.",
      "objectives": [
        "Write a Program using C++ Language",
        "Understand Basic Principles of Object Oriented Programming",
        "Understand C++ Streams in depth"
      ],
      "course_content": {
        "Introduction of C++": [
          "Introduction",
          "Primitive Data Types in C++",
          "Namespaces and Resolving Scope",
          "Basic Console I/O",
          "Getting an Entire Input Line",
          "Initialization and Intro to the String Class"
        ],
        "Functions, stringstreams and more": [
          "stringstreams Topic",
          "File Input and Output",
          "Using file Input",
          "Functions"
        ],
        "Templates and Classes": [
          "Without Templates",
          "Function Templates",
          "Explicit Function Template Instantiation",
          "Intro to Classes",
          "Using Destructors"
        ]
      },
      "requirements": [
        "Any Programming Knowledge is Preferable, but not Compulasory"
      ],
      "description": "This course is an introduction to the C++ programming language for those who are already familiar with C syntax and some basic principles of object oriented programming. C++ is based on C, but extends the language with features such as function templates, namespaces, and (of course) classes. We'll spend a lot of time in the first hour of the course talking about streams, which simplify input and output a great deal.\nHere's a list of what you'll learn:\n- Primitive data types and variables\n- How to create and use namespaces\n- Basic I/O in C++ using streams\n- Using stringstreams: input and output directly from strings\n- File input and output using streams\n- Functions: how they're like C functions, and how they differ\n- Function templates - a look at writing generic code\n- Classes and objects\n- Constructors and destructors\n- Inheritance (Single and Multiple)\n- The idea of friend class members.\nIf you've been thinking about learning C++, then this course is a good first step.",
      "target_audience": [
        "Freshers wants to learn C++ Programming Language",
        "Those who Learned C++ Programming but now wish to Brush up their Skills"
      ]
    },
    {
      "title": "Rust Projects",
      "url": "https://www.udemy.com/course/rust-projects/",
      "bio": "Build fast, safe, and concurrent applications with Rust.",
      "objectives": [
        "Building command line interfaces in Rust with CLAP",
        "Creating web applications with Rocket",
        "Accessing a database in a typesafe manner",
        "Handling errors gracefully and idiomatically",
        "Organizing code with crates and workspaces",
        "Packaging and distribute Rust applications and libraries"
      ],
      "course_content": {
        "clap: The Command Line Argument Parser": [
          "The Course Overview",
          "Creating a Clean Command Line Interface with clap",
          "Parsing the Markdown with pulldown_cmark",
          "Generate HTML with Maud Static Template Macros",
          "Publishing Our Crate",
          "Test your knowledge"
        ],
        "Error Handling": [
          "An Introduction to Regex",
          "Building Extensible Errors with the Failure Crate",
          "Deriving the Fail Trait for Our Error Type",
          "Handle Multiple Types of Errors",
          "Test your knowledge"
        ],
        "Tokio and Futures": [
          "Starting to Understand Futures",
          "Communicating between Futures Using Channels",
          "Running Futures Together",
          "One-Shot Communication Across Simple Channels",
          "Getting Data Back out of Futures into Synchronous Code",
          "Test your knowledge"
        ],
        "A Chat Server": [
          "Use AsyncRead to Treat Input as an Asynchronous Stream",
          "Use AsyncWrite to Treat Output as a Future",
          "Listening over TCP",
          "Convert Our Input to a Rust Type Using Serde",
          "Completing the Application",
          "Test your knowledge"
        ],
        "Diesel Database ORM": [
          "Installing PostgreSQL Database",
          "Connect Diesel ORM to the PostgreSQL Database",
          "Creating Migrations and Models with the Diesel CLI",
          "Inserting Data into Our Database",
          "Reading Data from Our Database",
          "Updating Our Database",
          "Test your knowledge"
        ],
        "A Website Built on Actix": [
          "Getting a Website Online Using Actix",
          "Connecting Actix to the Database",
          "Connecting Actix to the Database in an Asynchronous Way",
          "Getting Request Information Using Actix Extractors",
          "Creating HTML Templates Using Serde and Handlebars",
          "Handling Long Term Sessions Using Cookies",
          "Course Summary",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Basic Rust knowledge is assumed."
      ],
      "description": "The Rust programming language is a boon for systems programmers because of its powerful and expressive type system and strict compile-time static analysis. Still, there are best practices to follow and idioms that the community has developed over time. This course tackles testing, building and distributing applications, and other real-world challenges using Rust, Cargo, and the Rustup toolchain manager.\nYou will build four projects, including a search tool, a Markdown parser, a chat server and client, and a blog. In this course, we’ll progress from command line applications, built with proper command line argument parsing and error handling, to more complex applications like a GUI text editor and several web applications. We’ll explore asynchronous programming and concurrent programming in Rust using real-world scenarios like file searching and stress testing. Finally, we’ll build a simple web app that interacts with a database in a type-safe manner using Diesel.\nBy the end of the course, you will be adept with the knowledge of Rust to practically implement it in real-world projects. You’ll know enough to build high-quality software that can be shared with the rest of the Rust community or even used in production.\nAbout the Author\nMatthew Stoodley is a programming expert and enthusiast and was drawn to learn about Rust and master its features initially due to its low power usage and memory safety capabilities. He primarily uses Rust to build board games. In addition, he also possesses several years of experience in Go, PHP, and JavaScript among many others.",
      "target_audience": [
        "This video is for Rust developers who would like to practically implement the Rust programming knowledge."
      ]
    },
    {
      "title": "Mastering Python OpenCV: With 31 Real-World Projects",
      "url": "https://www.udemy.com/course/mastering-python-opencv-with-multiple-real-world-projects/",
      "bio": "Master Computer Vision with Python OpenCV: 31 Practical Projects for Real-World Image and Video Processing Skills!",
      "objectives": [
        "Image and Video Processing Basics: Grasp foundational concepts and methods for image manipulation.",
        "Core OpenCV Functions: Master essential OpenCV functions for transforming images and videos.",
        "Computer Vision Applications: Explore real-world applications, including edge detection, object recognition, and motion tracking.",
        "Multiple Hands-On Projects: Build and complete unique projects that make learning both practical and fun.",
        "Live Video Processing: Learn to apply OpenCV techniques in live video streams to create interactive applications.",
        "Brightness Control With Hand Detection using OpenCV in Python",
        "Build a real-time multi-face recognizer",
        "Live Webcam Drawing using OpenCV",
        "Creating a Finger Counter Using Computer Vision and OpenCv in Python",
        "Detecting car using openCV",
        "Gun Detection using Python-OpenCV",
        "Invisible T-shirt using OpenCV",
        "Live Face Blur - Privacy Filter",
        "Detecting objects of similar color in Python using OpenCV",
        "Replace Green Screen using OpenCV- Python",
        "Detect and Recognize Car License Plate from a video in real time",
        "Right and Left Hand Detection Using Python",
        "Real-Time Face Mesh Detection with Python, OpenCV & MediaPipe!",
        "Real-Time Face Tilt Detection (Webcam + MediaPipe)",
        "Control your mouse using openCV",
        "Create a Screen recorder using Python",
        "Gesture-Controlled Webcam Filters using OpenCV & MediaPipe"
      ],
      "course_content": {
        "1. Introduction & Setup": [
          "Introduction",
          "What is OpenCV And How to install?"
        ],
        "Basic Image And Video I/O": [
          "Reading Images & Video",
          "What does the import cv2 statement do?"
        ],
        "Image Basics": [
          "Resizing and Rescaling Frames",
          "Drawing Shapes & Putting Text",
          "5 Essential Functions in OpenCV",
          "Open Cv Image Translation",
          "Open Cv Image rotation",
          "Open Cv Image croping"
        ],
        "Image Processing Fundamentals": [
          "Contour Detection part one",
          "Contour Detection part two",
          "Color Spaces",
          "Color Channels",
          "Blurring"
        ],
        "Advanced Image Analysis": [
          "BITWISE operations",
          "Masking",
          "grey scale image histogram",
          "colour image histogram",
          "thresholding openCV"
        ],
        "Basic level Projects": [
          "project 1 : Python Program to extract frames using OpenCV",
          "project 2 : White and black dot detection using OpenCV",
          "project 3 : Displaying the coordinates of the points clicked on the image",
          "project 4 : OpenCV BGR color palette with trackbars",
          "project 5 : Play a video in reverse mode using OpenCV",
          "project 6 : Draw rectangular shape and extract objects",
          "project 7 : Saving Operated Video from a webcam",
          "project 8 : Drawing with Mouse on Images using Python-OpenCV",
          "Project 9 : Cartooning an Image using OpenCV"
        ],
        "Intermediate level project": [
          "project 10 : Text Detection and Extraction using OpenCV and OCR",
          "project 11 : template matching",
          "project 12 : Detecting objects of similar color in Python using OpenCV",
          "project 13 : Pedestrian Detection using OpenCV-Python",
          "Project 14 : Background subtraction – OpenCV",
          "Project 15 : Invisible T-shirt using OpenCV",
          "project 16 : Face Detection using Python and OpenCV with webcam",
          "Project 17 : Live Face Blur - Privacy Filter",
          "Project 18 : Gun Detection using Python-OpenCV",
          "Project 19 : Detecting car using openCV",
          "Project 20 : Replace Green Screen using OpenCV- Python"
        ],
        "Project 21 : Live Webcam Drawing using OpenCV": [
          "Introduction",
          "Create colour track bar in OpenCV",
          "colouring point and drawing setup",
          "set up the paint Canvas",
          "Camera Setup and Main Loop",
          "identify the pointer using mask",
          "find the contour for the pointer",
          "handling the buttons",
          "draw lines for the stroke color"
        ],
        "Project 22 :Creating a Finger Counter Using Computer Vision and OpenCv in Python": [
          "import modules and setup mediapipe object",
          "creating finger counter function",
          "creating the main loop and run the project"
        ],
        "Project 23 : Brightness Control With Hand Detection using OpenCV in Python": [
          "import the library and set up the hand module",
          "start the while loop and read the frame",
          "control the brightness using finger"
        ]
      },
      "requirements": [
        "basic knowledge about Python programming"
      ],
      "description": "Unlock the power of computer vision with OpenCV in Python! This comprehensive course is designed to guide beginners and intermediate learners through the fundamentals of OpenCV, an industry-standard library for computer vision and image processing. With multiple exciting, hands-on projects, you’ll learn to analyze, manipulate, and enhance images and videos, transforming abstract concepts into real-world applications.\n\n\nFrom image recognition to advanced filtering, object tracking, and even live video manipulation, each module is packed with projects that reinforce learning and practical understanding. Through clear, step-by-step tutorials and engaging exercises, you’ll gain the skills needed to tackle a wide array of computer vision challenges confidently.\n\n\n**What You Will Learn:**\n- **Image and Video Processing Basics**: Grasp foundational concepts and methods for image manipulation.\n- **Core OpenCV Functions**: Master essential OpenCV functions for transforming images and videos.\n- ** Hands-On Projects**: Build and complete unique projects that make learning both practical and fun.\n- **Live Video Processing**: Learn to apply OpenCV techniques in live video streams to create interactive applications.\n\n\nBy the end of this course, you'll be equipped with the confidence and skills to build your own computer vision projects and apply OpenCV knowledge in areas like automation, AI, and augmented reality.\n\n\nWhether you’re a programmer, engineer, or enthusiast, this course will take you from Python OpenCV fundamentals to advanced vision techniques. Join us on this journey to master computer vision with Python and OpenCV!",
      "target_audience": [
        "student who enthusiast to work on computer vision and image processing"
      ]
    },
    {
      "title": "Complete Python from Scratch: Start your career in Python 3+",
      "url": "https://www.udemy.com/course/complete-python-from-scratch/",
      "bio": "Learn Python like a Professional!, Start from the scratch and reach all the way to creating your own applications",
      "objectives": [
        "Learn to use Python professionally, learn new Python 3+",
        "How ChatGPT AI will help you to apply for your software development",
        "Understand Strings and How to use built-in string methods",
        "Use operators to open Up your key analytical skills in Python 3",
        "How to use PyCharm IDE for Python project creations",
        "Jump Start to learn using Python Statements, Methods and Functions",
        "Apply Object Oriented Programming techniques",
        "Quick start using Module and Packages",
        "Learn Handing your code with Errors and Exception Handling",
        "Learn how to write Mini Project Games",
        "Get to know using Built-in modules and Your code performance",
        "Learn to Start coding Python Django Web Framework",
        "Build a complete understanding of eCommerce model Web Project!",
        "Know What is Generative AI / Gen AI"
      ],
      "course_content": {
        "Course Introduction Overview": [
          "Course Introduction",
          "Course Curriculum Overview",
          "Python What’s New",
          "What is source code",
          "ChatGPT AI for Software Developers",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "Python Environment Setup": [
          "Python Command Line Basics",
          "Python Installation (Step by Step)",
          "Pycharm-CE IDE Installation",
          "Setting Up Environment",
          "Running Python Code",
          "Git and GitHub Overview(optional)"
        ],
        "Python Object and Data Structure Basics": [
          "Python Data Types",
          "Python Arithmetic Operators with Numbers",
          "Variable Assignments",
          "Strings Introduction",
          "Indexing and Slicing with Strings",
          "String Properties and Methods",
          "Print Formatting with Strings",
          "Lists in Python",
          "Dictionaries in python",
          "Tuples in Python"
        ],
        "Python Operators": [
          "Comparison Operators in Python",
          "Logical Operators in Python",
          "Coding Exercise: Operators"
        ],
        "Python Statements": [
          "If Elif and Else Statements in Python",
          "For Loops in Python",
          "While Loops in Python"
        ],
        "Methods and Functions": [
          "Functions in Python",
          "Methods in Python",
          "List Methods in Python"
        ],
        "Nested Statements and Scope": [
          "Nested Loop in Python",
          "2D Lists using Nested Loop in Python"
        ],
        "Object Oriented Programming": [
          "Object Oriented Programming – introduction",
          "Object Oriented Programming – Attributes and Class keyword",
          "Object Oriented Programming – Class Object Attributes and Methods",
          "Object Oriented Programming – Inheritance",
          "Object Oriented Programming – Encapsulation",
          "Object Oriented Programming – Polymorphism"
        ],
        "Modules and Packages": [
          "Pip Install and Pypi",
          "Modules",
          "Packages"
        ],
        "Errors and Exception Handling": [
          "Errors and Exception Handling"
        ]
      },
      "requirements": [
        "Computer system access basic knowledge will helpful",
        "Be able to read and write on computer system with internet access",
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "Embark on an exciting journey into programming with \"Complete Python from Scratch: Start Your Career in Python 3+.\" This comprehensive course is designed to guide you step-by-step through mastering Python, one of the most versatile and in-demand programming languages in the world. Whether you're a complete beginner or seeking to enhance your coding skills, this course provides everything you need to succeed.\n\n\nYou’ll start with the basics, including Python syntax, data types, and control structures, laying a strong foundation. As you progress, you’ll delve into advanced topics such as object-oriented programming (OOP), file handling, error handling, and working with libraries and modules. The course also covers real-world applications, such as data analysis, web development, and automation.\n\n\nWhat sets this course apart is its focus on hands-on learning. You’ll work on engaging projects, including building applications, solving challenges, and creating real-world solutions. By the end of this course, you’ll not only understand Python concepts but also gain practical experience applying them in real-world scenarios.\n\n\nlearn to take notes and practice hands-on sessions regularly to master in python skills\n\n\nWhether you’re aspiring to be a software developer, data scientist, or tech enthusiast, this course equips you with the skills to kickstart your Python journey and achieve your career goals. Join now and start coding today!",
      "target_audience": [
        "Beginner Python developers curious about Python course",
        "People who want to learn Python using ChatGPT AI support",
        "People who have no idea about Python",
        "People who don’t know what is Python",
        "People who want to acquire Python knowledge",
        "People who beginners and wants to master in Python",
        "People who want to become a programmer on Python"
      ]
    },
    {
      "title": "Python Django: REST API Crash Course for Beginners - 2025",
      "url": "https://www.udemy.com/course/python-django-rest-api-crash-course-for-beginners-2023/",
      "bio": "Learn how to build REST API's in Django | Theory and hands-on demonstrations",
      "objectives": [
        "How to build your own REST API with Django and Python",
        "How to make use of the Django Rest Framework (DRF)",
        "Build a simple CRUD API",
        "Build a simple Register and Login API",
        "How to use one of the most in-demand full stack technologies today",
        "How to create serializers and view endpoints"
      ],
      "course_content": {
        "Course Introduction": [
          "Course welcome!",
          "Course prerequisites - [Important]",
          "Course overview",
          "Course support",
          "Thought process",
          "Project demonstrations"
        ],
        "Project resources": [
          "Final project code and slides - Download",
          "Final project code - Important information"
        ],
        "Environment setup: Python, VS Code, and Django Installation": [
          "Python and Visual Studio Code - Installation - Windows",
          "Python and Visual Studio Code - Installation - MacOS",
          "Django project setup - Windows",
          "Django project setup - MacOS"
        ],
        "Build a simple: CRUD API": [
          "Create and configure a Django app",
          "Connect the basic urls and views",
          "Apply our initial migrations",
          "Create and register our model",
          "What is a Rest API? - [Theory]",
          "API application example - [Theory]",
          "Install the Django Rest Framework (DRF)",
          "Create a serializer",
          "The concept of a serializer (DJ) - [Theory]",
          "HTTP methods - [Theory]",
          "What is CRUD? - [Theory]",
          "Create the view endpoints and GET request",
          "Download and setup Postman",
          "GET request - Obtain all objects",
          "POST request",
          "IMPORTANT NOTE! - Update",
          "GET request - Obtain a particular instance",
          "PUT request",
          "DELETE request",
          "Best practices with status codes",
          "Obtaining JSON from our browser"
        ],
        "Build a simple: Register and Login API": [
          "Important links!",
          "User registration - Serializer - Pt. 1",
          "User registration - Views - Pt. 2",
          "Exploring the token authentication docs",
          "Install and setup auth token for DRF",
          "Create a PostSave receiver",
          "Testing our auth tokens",
          "Generating auth tokens through our API"
        ],
        "Thank you!": [
          "Thank you! - A final message",
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Fundamental knowledge of Django is required",
        "You should also know the basics of HTML/CSS and JavaScript"
      ],
      "description": "Welcome! I'm here to teach you how to build a simple api for your Django web application.\n\n-- Please read carefully --\n\nThis course is primarily intended for developers who have a basic knowledge of Django and want to learn how to build their very own API's according to the best practices.\nIf you have primarily front-end development skills you'll be able to master the hidden language of the backend, since you will understand what is happening 'under the hood'. This will give you more confidence and broaden your understanding of how the front-end and back-end communicate with each other.\nWhether you are taking this course to just understand the fundamentals of how to build your rest api or because you want to create a simple application. Rest assured this course is for you.\n\n\nBy the end of this course you will be able to:\n- Create a virtual environment\n- Initialise the DRF (Django Rest Framework)\n- Create your serializer\n- Create your view endpoints\n- Handle POST, GET, PUT and DELETE requests\n- Learn how to consume your API\n- Understand one of the most complex concepts in back-end development\n- Create a CRUD API\n- Create a Register and Login API\n\nI want to help YOU to build your very own REST API with Python and Django.\n\n\nThe Python Django: Build a Simple REST API for Beginners course has been structured in a simple and logical order. Everything that has been designed from the styling to the graphics and topics covered is crafted with the absolute duty of care towards the student.\n\n\nIt consists of practical hands-on demonstrations.\nThe course is structured in a logical and cohesive way - not just random lectures here there and everywhere.\nIt starts off very simple and then builds on gradually throughout the course.\nThe course includes the full project source code.\n\n\nThe Python Django: Build a Simple REST API for Beginners course is a highly practical course and allows you to apply your knowledge\n\n\nYour instructor:\nMy name is Arno Pretorius. I'm a qualified IT teacher who has taught programming both in-person and online. My main passions are teaching and technology, so I thought why not just combine the best of both worlds to create something truly amazing and valuable. Over the years, I have created and deployed many real-world Django-based applications, including a job portal for university graduates and an exclusive social network.\nI'm a Software developer, an AWS Solutions Architect and Developer associate. I have a keen interest in cloud computing, web development and everything that relates to programming and technology.\nSo, let's go and become fluent in Django.\nTrust me you are in good hands!\n\n\nThis course also comes with:\n- 3 hours of on-demand video\n- Full lifetime access\n- A Udemy certificate of completion\n- Access on mobile and TV\n\n\nJoin me in this course if you want to master the fundamentals of learning how to build a REST API with Django.",
      "target_audience": [
        "This course is for absolute beginners who want to learn how to build API's with Python and Django"
      ]
    },
    {
      "title": "Python for Absolute Beginners",
      "url": "https://www.udemy.com/course/zero-to-knowing-python/",
      "bio": "This Course will Build You a Strong Foundation in the Fundamentals of Python & Get You Ready for Advanced Concepts",
      "objectives": [
        "Basic Syntax and Structure",
        "Control Structures: Working with Conditions",
        "Control Structures: Working with Loops",
        "Nesting our control structures",
        "Building and defining your own Functions",
        "Creating and working with Modules in Python",
        "Object Orientated Programming with Classes and Inheritance",
        "Bring Everything Together with Game Development in PyGame"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - Course Overview",
          "Setting up your environment",
          "Setting up VS code"
        ],
        "Working with Operators and basic Python Functions": [
          "Your first function and mathematical operators",
          "First Function Exercises",
          "Variables and Assignments",
          "Variable and Assignment Exercises",
          "Collecting Data from a User",
          "Data Collection Exercises",
          "Intro to Nesting Control Structures",
          "Nesting Control Structure Exercises"
        ],
        "Flow Control with Python": [
          "Creating Conditional Statements",
          "Conditional Statement Exercises",
          "Nesting our Conditional Statements",
          "Nesting Conditions Exercises",
          "Learning to Repeat with the While Loop",
          "First Looping Exercises",
          "Iterating with the For Loop",
          "For Loop Exercises"
        ],
        "Mini Project - Creating a Travel Chatbot (KayakGPT)": [
          "Travel Bot Project Overview",
          "Live Travel Bot Coding"
        ],
        "Creating Programs with Functions & Modules": [
          "Defining your First Functions",
          "Reviewing our Functions in VS code",
          "Defining Functions Exercises",
          "Calling Functions from within Functions",
          "Creating a Module in Python",
          "Creating Modules Exercises",
          "Working with the Random Module",
          "Random Module Exercises",
          "Time Module Exercises",
          "Working with the Time Module"
        ],
        "Object Orientated Programming with Python": [
          "What is an Object?",
          "Working with Objects Exercises",
          "Creating your own Classes",
          "Creating Classes Exercises",
          "Understanding Class Inheritance",
          "Class Inheritance Exercises"
        ],
        "Additional Data Types - Lists": [
          "Understanding a Lists in Python",
          "Creating Lists from a single input",
          "Working with Lists Exercises"
        ],
        "Working with PyGame": [
          "Understanding how the PyGame Module works",
          "Mini PyGame Exercise",
          "Project 1 - Retro Pong",
          "Retro Pong in VS Code",
          "Project 2 - Flappy Miner",
          "Flappy Miner in VS Code",
          "Final Project - Bitcoin Adventure",
          "Bitcoin Adventure in VS Code"
        ],
        "Course Completion": [
          "Until Next Time!"
        ]
      },
      "requirements": [
        "No experience needed, You'll learn everything you need to set a good foundation",
        "A Computer with a Stable Internet Connection"
      ],
      "description": "Welcome to \"Zero to Knowing - Python for Absolute Beginners 2024 Edition\" – the ultimate online Udemy course for those who want to embark on their programming journey! This course is specifically designed for beginners who are eager to learn Python programming and build a solid foundation in this popular language.\nWhether you're a complete novice to programming or have some basic understanding, this course will guide you through the fundamental concepts of Python in a clear and comprehensive manner. You'll start from scratch and gradually progress to more advanced topics, gaining confidence and expertise along the way!\nWith this course, you'll learn not only the syntax of Python but also the core concepts of programming, such as data types, variables, operators, conditionals, loops, functions, and more. You'll understand how to write clean, efficient, and scalable Python code, and how to solve real-world problems using Python.\n\n\nIf you are looking for an all-in-one course, this course is not for you.  If you are looking for a course to master the fundamentals to give you a good foundation to jump-start your programming career, This course is for you!\n\n\nA full-course breakdown:\n- Python Basics & Syntax\n-Data Types\n-Variables & Assignments\n-Gather User Data\n-Working with Conditional Statements\n-Loops such as the While Loop & For Loop\n-Nesting Control Structures\n-Defining Functions to create reusable code\n-Creating and Working with Objects\n-Classes & Inheritance\n-Working with Lists\n-Creating your own Modules\n-Working with Modules, such as Random, Time and PyGame\n\n\n\n\nThe course is packed with practical examples, hands-on exercises, and coding projects that will challenge and inspire you to apply what you've learned in real-life scenarios. You'll also have access to valuable resources, including the course content, downloadable code files, and reference materials, to help you solidify your understanding of Python.\nYou will build four projects, three of which will use everything you have learned throughout this course within a single application, putting your skills to the test to get you ready for your future as a Python Developer!\nBy the end of this course, you'll have a solid foundation in Python programming and be well-equipped to take your skills to the next level. Whether you want to pursue a career in software development, data analysis, and web development, or simply want to learn a new skill, this course will empower you to achieve your programming goals.\nEnroll now in \"Zero to Knowing Python in 2023\"  and join our community of learners who are unlocking the power of Python programming! Get started on your programming journey and build a strong foundation in Python today!",
      "target_audience": [
        "Those who want to start their programming journey",
        "People who want programming broken down to a new level"
      ]
    },
    {
      "title": "Git &Github Practice Tests & Interview Questions (Basic/Adv)",
      "url": "https://www.udemy.com/course/git-github-practice-tests-and-interview-questions-basic-advanced/",
      "bio": "Complete Git and GitHub guide via Practice Tests - Revisit all Git features: commits, branches, squashing etc",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "No matter if you're just getting started with Software development, if you're applying for a developer job or if you just need to refresh your knowledge - version control is a core skill you need to succeed as a developer! Git (a version control system) and Github (a cloud provider for Git managed projects) form an outstanding combination to provide the best possible experience to create and maintain a clearly structured project history!\n\n\nWhy Should I Know these Tools?\nVersion control is key to manage projects efficiently so not knowing Git and GitHub makes your daily developer life a lot more complicated. The same apply if you're currently looking for a new job in the industry, version control is required in any developer projects these days, so not knowing Git & GitHub puts you behind your competition!\n\n\nWhat topics are covered in these Tests?\nGit Installation and Beginners to Advanced usage\nCreating Git Repositories\nWorking with Commits\nBranches\nHEAD and the detached HEAD\nThe Stash\nMerging, Rebasing and Cherry Picking\nConnecting Local Git Repositories to Remote GitHub Repositories\nGit Push & Pull (+ Fetch)\nLocal, Remote Tracking & Remote Branches\nForks & Pull Requests\nGitHub Issues and so much more!\n\n\nWhat does this course offer you?\nThis course consists of 4 practice tests.\nPractice test consists of 30-40 questions each, timed at 30 minutes\nThe questions are multiple-choice.\nThe answers are randomized every time you take a test.\nQuestions are of varying difficulty - from easy to moderate to tough.\nOnce the test is complete, you will get an instant result report with categories of strength to weakness.\nYou can re-take the tests over and over again as and when it suits you.\nNew set of questions will be added frequently and you can practice along without having to buy the course again.\nLearning Resources will be shared over email frequently to all enrolled students, along with any latest news/events.\n\n\nWith this course you will get lifetime-long access to 100+ Interview and Practice Questions that are updated frequently. After the test you will become more confident of Git and GitHub and will be able easily perform basic and advanced Git tasks.\nBut most important is that you will UNDERSTAND Git.\nYou will also get 30-days money-back guarantee. No questions asked!\nDon't wait and join the course now!",
      "target_audience": [
        "You could be either complete beginner or experienced developer with years of usage of Git",
        "Anyone interested in learning Git in any capacity",
        "Web developers, data scientists, software engineers, mobile developers, game developers, etc.",
        "Anyone who works with code or in a code-adjacent role",
        "Anybody who wants to learn what version management is & how it can help to organize your code and projects efficiently",
        "Folks preparing for any kind of Software Development Interviews - Git is a must !",
        "Students learning Software Development and want to test their knowledge on Git to apply for internships"
      ]
    },
    {
      "title": "Java Coding Challenge Bootcamp",
      "url": "https://www.udemy.com/course/java-coding-challenge-bootcamp/",
      "bio": "Get to solve coding challenges using java and elaborate your problem solving skill",
      "objectives": [
        "Coding challenges in real time",
        "How to solve coding challenges",
        "Elaborating problem solving skill by solving problems"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download and setup intellij"
        ],
        "CC-01 : Coding challenge 01": [
          "Problem: Add, sub, mul, div & mod",
          "Solution"
        ],
        "CC-02: Coding challenge 02": [
          "Problem: Checking a number even or odd",
          "Solution"
        ],
        "CC-03: Coding challenge 03": [
          "Problem: Area of a circle",
          "Solution"
        ],
        "CC-04: Coding challenge 04": [
          "Problem: Swapping value of variable",
          "Solution"
        ],
        "CC-05: Coding challenge 05": [
          "Problem: Min max of two numbers (Ternary operator)",
          "Solution"
        ],
        "CC-06 : Coding challenge 06": [
          "Problem: Min max of three (Ternary operator)",
          "Solution"
        ],
        "CC-07: Coding challenge 07": [
          "Problem: Second largest of three (Ternary operator)",
          "Solution"
        ],
        "CC-08: Coding challenge 08": [
          "Problem: Sort value of variables in ASC order",
          "Solution"
        ],
        "CC-09: Coding challenge 09": [
          "Problem: Leap year",
          "Solution"
        ]
      },
      "requirements": [
        "Fundamentals of java must",
        "A Desktop or Laptop"
      ],
      "description": "Hello!\nWelcome to the \"Java Coding Challenge Bootcamp\" course.\nI designed this course for you to help you solving coding problems using java from scratch.\nIf you are beginner and looking for learn programming or you want to be a programmer as early as possible, then this is the course for you. I designed this course with easy to average level of coding questions for you.\n\n\nThe coding challenge you will learn from this course:\n# Add sub mul div & mod\n# Even or odd\n# Area of a circle\n# Swap values\n# Min max of two (ternary operator)\n# MIn max of three (ternary operator)\n# Second largest of three (ternary operator)\n# Sort values of variable in ASC order\n# Leap year\n# Distance between two points of a straight line\n# Sum of array elements\n# Factorial number\n# Greatest Common Divisor (GCD)\n# Prime number testing\n# Perfect number testing\n# Sum up to N\n# Sum up to N odd\n# Sum up to N even\n# Average of first N numbers\n# Fizzbuzz\n# Reverse a number\n# Counting digits of a number\n# Sum of digits\n# Palindrome (for number)\n# Reverse a string\n# Palindrome (for strings)\n# Binary to decimal\n# Decimal to binary\n# Decimal to octal\n# Octal to decimal\n# Decimal to hexadecimal\n# Hexadecimal to decimal\n# First recurring elements\n# Most frequent\n# Two sum\n\n\nNo worries, we have 30 days money back guarantee. So nothings to lose.\n\n\nSee you inside!",
      "target_audience": [
        "Who want to learn how to solve coding questions",
        "Serious about programming",
        "Trying to get into the programming world"
      ]
    },
    {
      "title": "C# Tutorial for Complete Beginners from Scratch",
      "url": "https://www.udemy.com/course/c-tutorial-for-beginners-for-absolute-beginners/",
      "bio": "If you’re ready to buckle down and learn C# programming, here’s where you should start.",
      "objectives": [
        "Use and understand variables",
        "By the end of this course, you should definitely be able to understand and write good C# code.",
        "Learn about core programming concepts",
        "Work with Classes and Objects"
      ],
      "course_content": {
        "The Basics": [
          "Introduction",
          "Input and Output to Console",
          "First C# Program Example",
          "Input and Output to Console Example",
          "Built-in Data Types , Escape Sequences and Verbatim literals",
          "Arithmetic Operators and Simple Calculator",
          "Arithmetic Operators and Simple Calculator Example",
          "If-Statement with Comparison Operators and Logical Operator",
          "If-Statement with Comparison Operators and Logical Operator Example"
        ],
        "Arrays": [
          "Arrays",
          "C# Arrays Example"
        ],
        "Statement": [
          "The switch statement",
          "The switch statement (C#) Example"
        ],
        "Loops": [
          "While Loop",
          "C# Do While Loop",
          "C# Do While Loop Example",
          "For and For each Loop",
          "For and Foreach Loop in C# Example"
        ],
        "Important Methods": [
          "Introduction to Methods",
          "Introduction to C# Methods example",
          "Passing Parameters and Return from Method",
          "Passing Parameters and Return from Method Example",
          "Pass by Reference , Output and params Parameter in method",
          "Method Overloading",
          "Method Overloading in C# Example"
        ],
        "C# Object Oriented": [
          "Classes and Objects",
          "Introduction to C# Classes and Objects Example",
          "Constructors and Destructors",
          "Constructor and Destructors in C# Example",
          "Class Inheritance in C#",
          "Class Inheritance in C# Example",
          "Method Hiding in C#",
          "Method Hiding in C# Example",
          "Polymorphism",
          "Polymorphism in C# Example",
          "Difference between Method Overriding and Method Hiding",
          "Difference between Method Overriding and Method Hiding Example",
          "Getter and Setter",
          "Properties",
          "Properties in C# Example",
          "Interfaces",
          "Explecit Interface Implementation",
          "Abstract classes",
          "Interface versus Abstract classes",
          "Delegates in C #",
          "Delegates Example"
        ],
        "C# Windows Form Application": [
          "How to Make a Calculator in C# Windows Form Application Part-1",
          "How to Make a Calculator in C# Windows Form Application Part-2"
        ]
      },
      "requirements": [
        "The course is aimed to teach you C#, whether you are an experienced programmer or just getting started"
      ],
      "description": "1) This is by far the most comprehensive C# course you'll find here, or anywhere else.\n\n2) This C# tutorial Series starts from the very basics and covers advanced concepts as we progress. This course breaks even the most complex applications down into simplistic steps.\n3) It is aimed at complete beginners, and assumes that you have no programming experience whatsoever.\n4) This C# tutorial Series uses Visual training method, offering users increased retention and accelerated learning.\n5) You don't need to buy any software for this course! You can use the free Visual Studio Express Edition from Microsoft.\n6) This course focuses on the language, and not the graphical aspects of windows programming.\nTake the first step and start your programming career now.",
      "target_audience": [
        "A basic knowledge of programming is helpful but not necessary to get the most out of this course",
        "A genuine interest to learn."
      ]
    },
    {
      "title": "Python for Beginners & Interns: Learn to Code from Scratch",
      "url": "https://www.udemy.com/course/python_speed16/",
      "bio": "Learn Python Programming Systematically and Step by Step",
      "objectives": [
        "You will be able to code in Python.",
        "Apply skills in problem solving for finding solutions to real life problems.",
        "Identify methods and choose the most appropriate one for solving problems.",
        "You will become Conceptually Strong.",
        "You will Develop Strong Analytical Thinking.",
        "You will find Improvement in your Mental Ability, Sharpness, Creativity, Intelligence & Self Confidence.",
        "You will become perfect in Programming. You will Achieve Overall Success."
      ],
      "course_content": {
        "Unit 1: Introduction to Programming and Python": [
          "1.1 How to use this Video Course",
          "1.2 Introduction to Programming (skip this now & watch later)",
          "1.3 Introduction to Python Programming",
          "1.4 Jupyter Notebook Installation Guide and Exploring Google Colab",
          "1.5 Basic Concepts of Python Programming",
          "1.6 Some Simple Python Programs",
          "Quizzes (Test your Knowledge)",
          "Unit 1 Assignments",
          "Anaconda Distribution (Jupyter Notebook) Installation Guide"
        ],
        "2. Data Types (in brief)": [
          "2.1 Introduction to Data Types",
          "2.2 Numbers (int,float, complex)",
          "2.3 Numbers (bin, oct, hex)",
          "2.4 Strings",
          "2.5 Lists",
          "2.6 Tuples",
          "2.7 Range",
          "2.8 Sets",
          "2.9 FrozenSet",
          "2.10 Dictionary",
          "2.11 Boolean and None",
          "Quizzes: Test your Knowledge"
        ],
        "3. Operators and Expressions": [
          "3.1 Introduction to Operators",
          "3.2 Arithmetic Operators",
          "3.3 Comparison Operators",
          "3.4 Assignment Operators",
          "3.5 Logical Operators",
          "3.6 Bitwise Operators",
          "3.7 Membership Operators",
          "3.8 Identity Operators",
          "3.9 Expressions",
          "Quizzes: Test your Knowledge"
        ],
        "4. Decision Control Statements": [
          "4.1 Introduction to Decision Control Statements",
          "4.2 ‘if’ statement",
          "4.3 ‘if - else’ statement",
          "4.4 ‘elif’ statement",
          "4.5 Nested ‘if’",
          "Quizzes: Test your Knowledge"
        ],
        "5. Loops": [
          "5.1 Introduction to Loops",
          "5.2 while loop",
          "5.3 for loop",
          "5.4 for loop - Programs",
          "5.5 Nested loops",
          "5.6 Loop Control Statements (break, continue and pass)",
          "5.7 else statement with loops"
        ],
        "6. Numbers": [
          "6.1 Introduction to Numbers",
          "6.2 Math Module (Core Methods)",
          "6.3 math module (Power & Logarithmic Functions)",
          "6.4 math Module (Remaining Functions)",
          "6.5 Number related built in functions",
          "6.6 Random Numbers"
        ],
        "7. List": [
          "7.1 Basic Concepts of List",
          "7.2 List - Builtin Functions",
          "7.3 List - Builtin Methods (Part-1)",
          "7.4 List - Builtin Methods (Part-2)",
          "7.5 List - Builtin Methods (Part-3)",
          "7.6 Some Programs on Lists"
        ],
        "8. Tuple": [
          "8.1 Tuple – Basic Concepts",
          "8.2 Tuple - Builtin Functions",
          "8.3 Tuple - Builtin Methods",
          "8.4 Some Programs on Tuples"
        ],
        "9. Set": [
          "9.1 Set - Basic Concepts",
          "9.2 Set - Builtin Functions",
          "9.3 Set - Builtin Methods (Part-1)",
          "9.4 Set - Builtin Methods (Part-2)",
          "9.5 Set - Builtin Methods (Part-3)",
          "9.6 Some Programs on Sets"
        ],
        "10. Frozenset": [
          "10.1 Frozenset - Basic Concepts",
          "10.2 Frozenset - Functions & Methods"
        ]
      },
      "requirements": [
        "Basic English & Basic Math"
      ],
      "description": "Python is an immensely popular and one of the most highly-demanded programming languages in the world.\nThe language has become so popular in recent times that aspirants are drifting to learn the language and acquire Python programming skills.\nYou can learn Python Programming Systematically and Step by Step by referring this video course.\nFeatures of \"Python Programming\" Video Course:\nSimple and Easy English\nSystematic Classification of Topics.\nComplete Working Procedure\nMany Solved Programs with Relevant Explanation\nStep by Step Solution for Better Understanding\nGraphical Representations for Easy Remembrance.\nExercises for Practice.\nLearn with Fun Concept\nand Many More..\n\n\nFeatures of Python:\nFast to Develop\nOpen Source with a Vibrant Community\nA Broad Standard Library and plethora of third party modules\nInteractive Mode (run basic python code on command prompt)\nPortable (Cross Platforms)\nDatabases (MySQL, IBM DB2, Oracle, PostgreSQL, SAP DB Sybase)\nGUI Programming Support\nAutomatic Garbage Collection (automatic memory allocation & de allocation)\nIt can be integrated with other Languages (C, C++, Java etc.)\n\n\nCourse Outcome (What you learn after reading \"Python Programming\" Book, eBook & Video Course):\nAfter completion of this Course:\nYou will be able to code in Python.\nApply skills in problem solving for finding solutions to real life problems.\nIdentify methods and choose the most appropriate one for solving problems.\nYou will Develop Strong Analytical Thinking.\nYou will find Improvement in your Mental Ability, Sharpness, Creativity, Intelligence & Self Confidence.\nYou will become perfect in Programming.\nYou will Achieve Overall Success.",
      "target_audience": [
        "Students",
        "Software Engineers (Fresher & Experienced)",
        "Parents (For Self Learning & Teaching their Kids)",
        "Teachers and Programming Lovers",
        "Homemakers, Unemployed etc. (Learn & Earn by Tutoring)"
      ]
    },
    {
      "title": "Learn Java From Scratch",
      "url": "https://www.udemy.com/course/learn-java-from-scratch/",
      "bio": "Introductory Java taught in a concise and easy to understand manner.",
      "objectives": [
        "Install and understand NetBeans environment",
        "Learn the basics of programming with Java",
        "Work on several projects that provide real results"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course"
        ],
        "Introduction to Java Programming": [
          "Getting Started with NetBeans",
          "Variables",
          "Strings & Mathematical Operators",
          "Methods (Functions)",
          "Boolean Logic & IF ELSE Statements (Part 1/2)",
          "Boolean Logic & IF ELSE Statements (Part 2/2)",
          "Loops",
          "Arrays",
          "For Loop",
          "Object Oriented Programming (OOP)",
          "Constructors (OOP)",
          "Java Review",
          "Multi-dimensional Arrays",
          "Array Lists",
          "String Functions",
          "Try Catch & Exceptions",
          "User Input",
          "File Reading/Writing",
          "Switch/Enumerations"
        ],
        "Object Oriented Programming (Intermediate Java Section)": [
          "Concepts and Syntax",
          "Constructors, 'this' keyword & toString Method",
          "Inheritance & 'extends' keyword",
          "Abstraction & equals method",
          "Interfaces & 'implements' keyword"
        ],
        "Threads": [
          "Introduction to Threads",
          "Implementing a 'Runnable'",
          "Starting and Stopping",
          "Basic Thread Logic"
        ],
        "Build a Real Java Application": [
          "JFrame & Basic Drawing",
          "Getting User Input",
          "Render Manager Part 1",
          "Render Manager Part 2",
          "Input Manager Part 1",
          "Input Manager Part 2",
          "Application Structure Part 1",
          "Application Structure Part 2"
        ],
        "Advanced Java | Java Networking": [
          "Introduction | Client Setup",
          "Server Setup",
          "Sending and Receiving Messages",
          "Client GUI Setup",
          "Server/Client Logic",
          "Debugging and Connecting Clients to Server"
        ]
      },
      "requirements": [
        "A computer"
      ],
      "description": "Like us on Facebook and/or Follow us on Twitter. Message us to let us know you liked us, or Tweet us @sr_elearning.\nLink to Our Facebook Page\nLink to Our Twitter Profile\nStone River eLearning\n_____________________________________________________________________________________\nHave you ever wondered how all those cool applications and games around the web are made? The answer is: Java. Java is the most commonly used programming language in the world. Get started learning Java today, and in a few days with this Java Tutorial for Beginners you'll be a pro. To make your life a bit easier, you will Learn Java from Scratch using the NetBeans environment.\nJava allows you to play online games, chat with people around the world, calculate your mortgage interest, and view images in 3D, just to name a few. It's also integral to the intranet applications and other e-business solutions that are the foundation of corporate computing.",
      "target_audience": [
        "Beginning Java programmers",
        "Experience Java programmers who need a brush-up"
      ]
    },
    {
      "title": "Create Windows Forms Applications With C# and Visual Studio",
      "url": "https://www.udemy.com/course/create-windows-forms-applications-with-c-and-visual-studio/",
      "bio": "Build Windows Forms (Winforms) Applications from scratch.",
      "objectives": [
        "Create new windows forms projects",
        "Add controls to Windows forms",
        "Designing windows forms interface",
        "Customize windows forms controls",
        "Modify Windows forms controls properties",
        "Writing code for event handlers",
        "Building and running windows forms project outside visual studio",
        "Creating a Windows Form Calculator Project",
        "Creating a Windows Form Volume Converter App"
      ],
      "course_content": {
        "Visual Studio Setup": [
          "Introduction",
          "What is Visual Studio",
          "What is C#",
          "Minimum Installation Requirements for visual studio 2019",
          "Installing Visual Studio 2019",
          "Create a basic Windows Forms Application"
        ],
        "Project: Building a Volume converter": [
          "Project Design",
          "Creating a new windows forms project",
          "Adding Controls",
          "Renaming text property controls",
          "Renaming Name Property Controls",
          "Writing code for event handlers",
          "Testing Application",
          "Customizing Application",
          "Running Application Outside Visual Studio"
        ],
        "Project: Build a Calculator": [
          "Creating a new Windows Form Project",
          "Changing the form properties",
          "Designing the interface - Part 1",
          "Designing the interface - Part 2",
          "Create a button click event",
          "Clear the default zero",
          "Create a method for operators click event",
          "Create method for the equal button",
          "Hook up the rest of the code",
          "Thank You"
        ]
      },
      "requirements": [
        "Visual Studio is required. The Installation is covered in this course."
      ],
      "description": "Windows Forms is a Graphical User Interface(GUI) class library which is bundled in .Net Framework.\nIts main purpose is to provide an easier interface to develop the applications for desktop, tablet, PCs.\nWindows Forms are also referred to as WinForms applications can contain the different type of controls like labels, list boxes, tooltip etc.\nIn Windows Forms, a form is a visual surface on which you display information to the user. You ordinarily build Windows\nForms applications by adding controls to forms and developing responses to user actions, such as mouse clicks or key presses.\n\n\nWhat You can do with Windows Forms:\nDevelop smart clients ( Smart clients are graphically rich applications that are easy to deploy and update)\nBuild rich, interactive user interfaces\nRequest input from users, and communicate with remote computers over a network.\nCreate powerful Windows-based applications.\nIn this course we will build two windows forms project ( A calculator and volume converter) step by step from scratch using the C# programming language and visual studio integrated development environment ( IDE)",
      "target_audience": [
        "Beginners to Windows Forms"
      ]
    },
    {
      "title": "Beginner's ES6 Programming. Code for the Web in JavaScript!",
      "url": "https://www.udemy.com/course/beginners-es6-programming-code-for-the-web-in-javascript/",
      "bio": "A Beginner's Guide to ES6 Programming for Aspiring Web Developers & Entrepreneurs. Learn to Code in JavaScript.",
      "objectives": [
        "Get started with JavaScript basics",
        "Learn about ES6 and its new features",
        "Apply ES6 concepts in your projects",
        "Use build tools like Gulp and Webpack",
        "Compile ES6 into ES5 using Babel"
      ],
      "course_content": {
        "Introduction": [
          "What is ES6?",
          "Functionality of ES6",
          "Testing your Code",
          "Common Pitfalls",
          "Things to Know about this Course",
          "Tips to Getting Started with Javascript",
          "Top 7 Things You Will Learn"
        ],
        "Basic Types": [
          "Numbers and Strings",
          "Introduction to Booleans",
          "Further Look into Booleans",
          "Objects",
          "Further Look into Objects",
          "Arrays",
          "Further Look into Arrays"
        ],
        "Variables": [
          "Introduction to Variables",
          "Variable Arrays",
          "Boolean Variables",
          "Naming Conventions for Variables",
          "Scoping and Intro to Let",
          "Let Statements",
          "Intro to Const",
          "Summary"
        ],
        "Operators": [
          "Intro to If Statements",
          "Equal Sign Operators",
          "Other Comparison Operators",
          "Nested If Statements",
          "Logical Operators",
          "Not Operators",
          "Else and Else If Statements"
        ],
        "Functions": [
          "Introduction to Functions",
          "Making Code Reusable",
          "The Return Keyword",
          "Hoisting",
          "Function Expressions",
          "Functions Changing Non-Primitive Properties",
          "Nested Functions",
          "Internal Functions",
          "Un-Nesting Functions"
        ],
        "More Functions": [
          "Function Expressions",
          "Returns and Brackets",
          "(Example) Concise Function",
          "For Each Loop",
          "Default Values",
          "Reset Parameters",
          "Arrow Functions",
          "Enclosing Context (Note)"
        ],
        "Switch Statements": [
          "Introduction",
          "Break Statement",
          "Volume Example",
          "Alternate Methods",
          "Return Statements"
        ],
        "Loops": [
          "Introduction",
          "While Loops",
          "Integer and Names Examples",
          "Do While Loop",
          "Purchase Validity Check Example",
          "For Loop",
          "Else If Statements in For Loops",
          "Controlling Loops",
          "Closing Over For Loop",
          "For In and For Each Loops",
          "For Of Loop",
          "Sets in For Of Loops"
        ],
        "Document Object Model (DOM)": [
          "Introduction",
          "Example Using DOM",
          "getElementbyId",
          "Creating Additional Divs",
          "List Example with getElementById",
          "DOM Query Selector",
          "Selecting Multiple Things at Once",
          "Traversing the DOM",
          "Getting and Setting ID and Class",
          "Styling Divs",
          "Adding a Class",
          "Toggling a Class",
          "Creating Elements",
          "Appending Elements",
          "Removing Elements"
        ],
        "Events": [
          "Introduction",
          "Buttons",
          "Firing and Function Removing Events",
          "Events Propagation",
          "Common Design Pattern",
          "Preventing Default Behavior",
          "Making a Form",
          "Key Events",
          "Showing Text when Typing",
          "DOMContentLoaded",
          "Load Event",
          "Adjust Styling",
          "Recommendations"
        ]
      },
      "requirements": [
        "Modern web browser",
        "Basic HTML/CSS knowledge is helpful but not required"
      ],
      "description": "\"This course has made clear to me many obscure concepts about JS. I've tried to learn it for years. This makes it easy.\"\nIn this course, you will learn the fundamentals of coding in JavaScript, including ES6. You will learn how to change what is displayed on a webpage using JavaScript.\nNo prior experience in JavaScript is required. We will explore ES6 in depth and cover many of its new features. You will learn the newest possibilities and fundamental building blocks of JavaScript.\nWhat is ES6?\nWith ES6 (ECMAScript 6th Edition), you can code for the web. ECMAScript is another name for JavaScript. ES6 has standardized features that JavaScript engines implement. ES6 is well-supported across different web browsers.\nYou too can become a web developer by learning the popular programming language JavaScript. Enroll today to join the Mammoth community.",
      "target_audience": [
        "JavaScript beginners",
        "JavaScript developers who want to learn ES6"
      ]
    },
    {
      "title": "Create a CRUD Contacts Database App with Python and SQLite",
      "url": "https://www.udemy.com/course/create-a-crud-contacts-database-app-with-python-and-sqlite/",
      "bio": "Build a contacts database application from scratch with Python and SQLite",
      "objectives": [
        "Setup Python",
        "Setup SQLite",
        "Create database and table",
        "Import from tkinter module",
        "Create logo image",
        "Create application window",
        "Create application Graphical User Interface -GUI",
        "Create class and methods",
        "Add and position Widgets",
        "Connect application GUI to SQLite Database",
        "Set and fix size for application window",
        "Perform CRUD Operations from app GUI"
      ],
      "course_content": {
        "Setting up Python and SQLite": [
          "Introduction",
          "What is Python",
          "Installing Python on windows",
          "Installing Python3 on a mac",
          "Installing Atom",
          "What is SQLite",
          "Download and install SQLite",
          "Install DB browser for sqlite",
          "Create a database and table"
        ],
        "Creating the Application GUI": [
          "What is Tkinter",
          "What we will create",
          "Application Design Sketch",
          "Creating a logo image",
          "Creating a project directory and Python file",
          "Importing from tkinter module",
          "Creating a Python Class and App Window",
          "Adding widgets - Part 1",
          "Adding widgets - Part 2",
          "Adding widgets - Part 3",
          "Adding widgets - Part 4"
        ],
        "Connecting App GUI to Database": [
          "Setup database connectivity from Python file",
          "Creating functions -Part 1",
          "Creating functions -Part2",
          "Creating functions -Part 3",
          "Setting a size for the application Window",
          "Source Code"
        ]
      },
      "requirements": [
        "Basic knowledge of SQL and SQLite",
        "Basic knowledge of Python"
      ],
      "description": "Python is a dynamic modern object -oriented programming language that is easy to learn and can be used to do a lot of things both big and small. Python is what is referred to as a high level language. That means it is a language that is closer to humans than computer.It is also known as a general purpose programming language due to it's flexibility.\nWe are going to use the SQLite database which is a light and portable database system. It is ideal for small projects.\nWe will interact and perform various CRUD  (Create|Read|Update|Delete) operations  on the SQLite database from our application graphical user interface.\nIn this course,you  learn the basics of  graphical user interface (GUI) programming. The primary GUI toolkit we will be using is Tk, Python’s default  GUI. We’ll access Tk from its Python interface called Tkinter (short for “Tk interface”).Tkinter is Python’s default GUI library Python, along with Tkinter, provides a fast and exciting way to build useful applications\nWe will be creating a contacts database application that we can use to store a list of contacts.",
      "target_audience": [
        "Ne-wish beginners to Python",
        "Ne-wish beginners to SQL and SQLite"
      ]
    },
    {
      "title": "Master Embedded C Interview: 500+ Most Asked Questions: 2025",
      "url": "https://www.udemy.com/course/master-embedded-c-interview-500-most-asked-questions-2023/",
      "bio": "Crack Embedded C Interview with confidence: 500+ Questions [Code+ Conceptual + Descriptive] with Detailed explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to \"Master Embedded C Interview: 500+ Most Asked Questions: 2025\", your comprehensive guide to mastering Embedded C programming and acing interviews with confidence. This course is meticulously designed to cover a wide array of topics, providing a deep understanding of Embedded C concepts, programming skills, and interview preparation strategies.\nCourse Highlights:\n1. C Programming Basics:\nData Types and Variables: Dive into the fundamentals of int, float, char, enumerations, and structures, mastering the art of variable declaration and manipulation.\nOperators and Expressions: Explore arithmetic, relational, logical, and bitwise operators, gaining proficiency in crafting complex expressions.\nControl Structures: Grasp conditional statements like if, else if, else, and various loops (for, while, do-while) for efficient program control.\nFunctions: Learn the intricacies of function declaration, definition, recursion, and harness the power of arrays and pointers.\nMemory Management: Understand dynamic memory allocation techniques, pointers, arrays, and memory optimization strategies for efficient programming.\n2. Embedded Systems Concepts:\nMicrocontrollers and Microprocessors: Delve into architectural differences and memory organization, laying the foundation for embedded systems development.\nInterrupts and Timers: Master interrupt handling mechanisms and timer programming techniques, crucial for real-time event management.\nI/O Programming: Learn GPIO configuration, analog-to-digital conversion, and interfacing with hardware peripherals.\nRTOS (Real-Time Operating Systems): Explore task scheduling, synchronization, and inter-task communication strategies, vital for real-time systems.\nEmbedded C Libraries: Understand standard peripheral libraries like CMSIS for ARM processors and device-specific libraries for effective code development.\n3. Embedded C Specifics:\nBit Manipulation: Unlock the power of bitwise operations for efficient bit manipulation and hardware interaction.\nMemory-mapped I/O: Access hardware registers directly, ensuring precise control over embedded systems.\nVolatility and Optimizations: Master the usage of the volatile keyword and comprehend compiler optimizations' impact on embedded code.\nFixed-Point Arithmetic: Grasp Q-format representation and learn fixed-point arithmetic operations for accurate numerical computations.\nInterrupt Service Routines (ISRs): Acquire skills in writing efficient ISRs and context saving/restoring techniques for interrupt-driven applications.\n4. Debugging and Testing:\nDebugging Tools: Familiarize yourself with debuggers like GDB and JTAG, and explore code profiling techniques for efficient debugging.\nUnit Testing: Develop testable code and implement mocking and stubbing techniques for comprehensive unit testing.\nCode Review: Discover best practices for code review, identify common code smells, and anti-patterns to ensure code quality.\n5. Communication Protocols:\nUART, SPI, I2C: Learn protocol basics, configuration, error handling, and synchronization techniques for seamless communication.\nCAN (Controller Area Network): Understand message framing, arbitration, and error detection/handling mechanisms for reliable networking.\nWireless Protocols (Bluetooth, Wi-Fi): Explore fundamental principles and configurations for Bluetooth and Wi-Fi protocols, enabling wireless communication solutions.\n6. RTOS and Multithreading:\nTask Creation and Management: Grasp task priorities, scheduling policies, synchronization, and communication strategies in real-time operating systems.\nSemaphores and Mutexes: Implement mutual exclusion using semaphores and mutexes, understanding their usage and advantages.\nRTOS API Functions: Explore queue, event, and timer management functions, along with memory management techniques for efficient RTOS applications.\nBy the end of this course, you will not only possess a deep understanding of Embedded C programming but also gain the confidence to tackle interviews with 500+ carefully curated code, conceptual, and descriptive questions. Join us on this learning journey and crack your Embedded C interviews with confidence!",
      "target_audience": [
        "Aspiring Embedded Systems Developers: Individuals aiming to build a strong foundation in embedded systems programming.",
        "Students and Enthusiasts: Students pursuing computer science or electronics engineering degrees and enthusiasts keen on mastering embedded C programming.",
        "Job Seekers: Job seekers preparing for interviews in the embedded systems domain, focusing on both theoretical knowledge and practical coding skills."
      ]
    },
    {
      "title": "NodeJs API Project: School Management System API course",
      "url": "https://www.udemy.com/course/nodejs-school-management-system-api-course/",
      "bio": "Mastering NodeJS, MongoDB, ExpressJS, Mongoose, and RESTful API Development for Building School Management System",
      "objectives": [
        "You will have a clear understanding of how to develop a school management system",
        "You will learn how to create exams endpoints",
        "You will learn how to allow students to take exams",
        "You will learn how to implement generate exams report",
        "You will learn how to promote a student from one class to another",
        "You will learn how to allow students to check their exams results",
        "You will learn how to allow admin to publish and unpublished exams results",
        "You will learn how admin assign programs and classes to teachers",
        "You will learn how admin will register new students",
        "You will learn how admin can suspend and withdraw students",
        "You will learn how to prevent students to write exams if suspended or withdrawn",
        "You will learn how admin can create classes, programs, academic terms/years/year group/subjectss",
        "You will learn how to implement role access level",
        "You will learn how to implement pagination and filtering",
        "You will learn how to implement advanced results middleware"
      ],
      "course_content": {},
      "requirements": [
        "Basics of mongodb and node js using express framework"
      ],
      "description": "The \"Nodejs School Management System API course\" is a comprehensive and hands-on course designed to teach students how to build a fully functional school management system API using Node.js. The course is intended for developers, programmers, and anyone interested in building robust and efficient web applications.\nThroughout the course, students will learn how to use Node.js and its various modules to create a RESTful API that can handle all the necessary functionality for a school management system. Students will learn how to create endpoints, handle routing, and interact with a database using MongoDB. They will also learn how to implement security measures such as authentication and authorization to protect the API from unauthorized access.\nThe course will cover a wide range of topics including Node.js fundamentals, Express.js, MongoDB, and RESTful API development. Students will also learn how to test  their API using a tool called Postman.\nBy the end of the course, students will have a solid understanding of how to build and deploy a production-ready school management system API.\nIn addition to the technical aspects of the course, students will also learn how to design a scalable and maintainable API architecture. They will learn how to design the database schema and handle database migrations.\nThis course is ideal for students who have some basic programming experience and are looking to improve their skills in building web applications. By the end of the course, students will have developed a strong foundation in Node.js, MongoDB, and RESTful API development, and will be well-prepared to build their own school management system API or any other web applications.",
      "target_audience": [
        "Beginner nodejs developer curious to master API development",
        "Anyone interested to build school management system API"
      ]
    },
    {
      "title": "TypeScript - Very Informative - 2025",
      "url": "https://www.udemy.com/course/expert-typescript/",
      "bio": "An advanced TypeScript course for everyone! A complete informative course on TypeScript. Beginner to Expert.",
      "objectives": [
        "Understand TypeScript in modern web apps",
        "Master the TSC compiler, and advanced TypeScript concepts",
        "Grasp how JavaScript can be enhanced with TypeScript",
        "Produce solid, powerful JavaScript code, free of errors",
        "Build an entire project using TypeScript",
        "Enhance code organization through by using latest modules and ESNext",
        "Write JavaScript in a static way, to reduce errors and enhance code",
        "Understand the future of TypeScript",
        "Understand how TypeScript can be used alongside JSDocs and //@ts-check",
        "Understand advanced concepts such as generics, compiler installation, shebang lines, extends and more!"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of JavaScript",
        "A Mac or PC, so you can code alongside me"
      ],
      "description": "*** BEST TYPESCRIPT COURSE ON UDEMY ***\nWHY TYPESCRIPT MATTERS?\nEnhance code quality with static typing\nCatch errors before JavaScript runtime\nImproves developer experience with robust tooling\nSeamlessly integrates with existing JavaScript projects\nScales effectively for large applications\nTypeScript is the premier tool used by advanced developers to keep their JavaScript code structured and clean.\nInstallation? Covered. TypeScript Configuration files? We got it. Building a real project in pure TypeScript? Its here!\nYou'll dive deep into TypeScript, a powerful superset of JavaScript that adds static types to your code.\nMastering TypeScript can be challenging, but this course is designed to make it straightforward and accessible. You'll learn how to leverage TypeScript's features to enhance your development process and optimize your applications.\nWHY TYPESCRIPT?\nUnderstanding Type Annotations and Static Typing: TypeScript introduces static typing to JavaScript, allowing developers to specify types for variables, function parameters, and return values. This helps catch errors during development rather than at runtime, improving code quality and maintainability.\nTypeScript is gaining popularity in the development community for its ability to catch errors early and improve code quality. This course is the most comprehensive TypeScript course available online, focusing on practical applications and real-world scenarios.\nCOURSE HIGHLIGHTS\nUnderstand why TypeScript is self-hosted, meaning it compiles itself and runs on its own type system. Did you know that TypeScript is self-hosted, meaning it is written in TypeScript itself? This allows it to leverage its own features during development and compilation, demonstrating the language's capabilities and providing insights into its design philosophy.\nExplore the different ways to install TypeScript, such as npm and via NuGet.\nLearn about the LIB and BIN folders that are created when you install TypeScript. When you install TypeScript, it creates LIB and BIN folders. The LIB folder contains reusable libraries, while the BIN folder holds executable files. Knowing the purpose of these folders helps in managing dependencies and understanding the structure of your TypeScript environment\nDiscover the various ways you can use TypeScript, from writing server-side applications to building client-side web apps.\nThis course is not just an opportunity; it's a gateway to becoming an indispensable asset in your development team.\nWHAT YOU WILL LEARN\nInstallation: Most developers think the only way to use TypeScript is via npm. You’ll learn the various ways to use and install TypeScript.\nUnderstanding LIB and BIN Folders: Gain insights into the inner workings of the TypeScript compiler (tsc) by exploring the LIB and BIN folders, and the meaning of the Shebang line. This knowledge will empower you to understand how the compiler operates when you run it within your terminal.\nSelf-Hosted and Bootstrapping Concepts: Did you know that TypeScript is unique in that it is self-hosted, meaning that the TypeScript compiler itself is written in TypeScript? This self-hosted nature allows for a more consistent and powerful development experience, as the language can leverage its own features for its implementation. Understanding this concept is crucial for grasping how TypeScript operates under the hood.\nNode.js for Transpilation: Understand why Node.js is the most popular choice for transpiling TypeScript code into JavaScript.\nMastering tsconfig.json: Get hands-on experience with the tsconfig.json file, using the tsc init command, and learn how to create TypeScript configurations from scratch.\nUsing the --watch Command: Implement the --watch command in your projects while setting up ES6 modules for a modern development environment.\nAdvanced Type Features: Delve into type aliases, generics, conditional types, event types, DOM casting, enums, arrays, tuples, and objects—equipping you with advanced type manipulation skills.\nFunctional vs. Class Syntax: Explore both functional approaches and the newer class syntax in TypeScript, including access modifiers to create public properties on objects.\nThe Future of TypeScript: Discover what companies like Svelte and Drizzle are doing with TypeScript and why Turbo 8 decided to drop it. Plus, get a brief overview of JSDoc and its role as TypeScript's \"little brother.\"\nWHY THIS COURSE?\nWhile TypeScript can seem daunting at first, this course will guide you through each concept with clarity. You'll find that mastering TypeScript requires just a bit of focus and practice. With clear explanations and practical examples, you'll quickly grasp how to apply TypeScript effectively in your projects.\nI design courses that I would want to take myself, ensuring every topic is covered in detail with supporting pictures and examples. You'll learn the background of each feature and understand where and how to apply them to solve real-world problems effectively.\nJoin this course and become a proficient TypeScript developer!\nLet's get crackin'",
      "target_audience": [
        "Any developer with a basic knowledge of JavaScript",
        "A developer wishing to upskill their coding skills to write better code",
        "Anyone interested in learning the inner workings of TypeScript",
        "Developers wanting to understand the relationship between TypeScript and JavaScript"
      ]
    },
    {
      "title": "The complete Python GUI with PySimpleGUI",
      "url": "https://www.udemy.com/course/the-complete-python-gui-with-pysimplegui-for-2020/",
      "bio": "The complete Python GUI with PySimpleGUI will teach you how to build desktop applications with Python and PySimpleGUI",
      "objectives": [
        "Start from a complete beginner to an expert python programmer",
        "How to create stand-alone desktop applications",
        "How to create a GUI for python scripts",
        "How to create a calculator application",
        "How to create a to-do application",
        "How to create a file backup application"
      ],
      "course_content": {},
      "requirements": [
        "A computer Windows, Linux or mac OS",
        "No previous programming knowledge is needed",
        "No previous python knowledge is required"
      ],
      "description": "Python is the fastest-growing programming language in the industry, and among the most popular programming languages in the world.\nIt's not a hard language for beginners to pick up and for intermediate or advanced programmers to advance, which is why the need to learn this language has increased exponentially over the past few years.\n\n\nPython is a scripting language which means that you will write some code and run it in the terminal or command line. Running the code in the command-line will make it harder for the users to adopt your applications, so what if you want your application to have a fancy user interface this requires that your applications have a GUI.\nIn simple terms, GUI is a desktop app that provides you with an interface that helps you to interact with the script and enriches the user experience.\n\n\nMy name is Yasser Abbass. I'm a software engineer and I will be your instructor for this course\nI have been in programming for the past 30 years and specifically in python for the past decade.\nDavid Schaffer: \"This course made me literally fall in love with PysimpleGUI. I recommend it. The teacher's great; I wish he had more courses on python on Udemy.\"\n\n\nThis course assumes that you have previous Python knowledge for instance (data types, conditional logic, loops, collections, etc)  and it will teach you how to create professional python GUI stand-alone applications\n\n\nThe course is divided into several lectures we will be building 3 projects with varying levels of difficulty.\n\n\nSome of the projects we will be building together are:\n- Calculator Project\n- Todo List Project\n- File Backup Project.\nBut don't worry you will be able to create those projects and more as you follow along with the course and with the skills you learned you will be able to apply them to your projects. You will also be able to download all the source code for all the lectures and the projects.\n\n\nDuring this course, you will learn:\n- How to install the software on Windows, Mac, and Linux.\n- An introduction to Jupiter-lab.\n- Data types, Conditional logic, looping, and collections.\n- Functions, modules, and built-in functions.\n- How to install the PySimple GUI.\n- How to install PyInstaller.\n- How to create and work with popups.\n- How to create and work with Elements (buttons, sliders, checkbox, etc).\n- How to create and work with Windows.\n- How to create and work with Layouts.\n- How to create dynamic Layouts.\n- How to show and hide elements.\n- How to add and remove elements to the window while it is running.\n\n\nFinally, if you are stuck you can drop a question in the Q&A and me, or one of my teaching assistants will answer you promptly",
      "target_audience": [
        "Beginner programmers who wants to master python GUI",
        "Programmers from other languages that want to start their python GUI journey",
        "Python programmers who want to learn new skills and master advanced python and create a desktop stand-alone applications"
      ]
    },
    {
      "title": "Perl Programming",
      "url": "https://www.udemy.com/course/perl-by-digiflax/",
      "bio": "A Course on Perl Programming",
      "objectives": [
        "Introduction to Perl",
        "Hello world",
        "Operations",
        "Array operation, Push-Pop array and array function",
        "String functions",
        "Comments"
      ],
      "course_content": {},
      "requirements": [
        "Not any other prerequisites to learn Perl"
      ],
      "description": "Perl is a well-established programming language that has been developed through the time and effort of countless free software programmers into an immensely powerful tool that can be used on practically every operating system in the world.\nThe Perl languages borrow features from other programming languages including C, shell script (sh), AWK, and sed; They provide text processing facilities without the arbitrary data-length limits of many contemporary Unix command line tools.[15] Perl 5 gained widespread popularity in the late 1990s as a CGI scripting language, in part due to its unsurpassed regular expression and string parsing abilities.\nIn addition to CGI, Perl 5 is used for system administration, network programming, finance, bioinformatics, and other applications, such as for GUIs. It has been nicknamed \"the Swiss Army chainsaw of scripting languages\" because of its flexibility and power, and also its ugliness. In 1998, it was also referred to as the \"duct tape that holds the Internet together,\" in reference to both its ubiquitous use as a glue language and its perceived inelegance.\nPerl is a highly expressive programming language: source code for a given algorithm can be short and highly compressible.\ndifferent purposes but developed for use in multiple applications. For those just delving into the world of programming, this can be a little overwhelming. Luckily, there are plenty of languages that are simple to learn, highly versatile to use, and make a great starting point for gaining fluency in the coding universe. Perl is one of those languages, and this course will teach you everything you need to know.\nPerfect Perl the Easy Way\nWork with different data types including strings, numbers, variables and user input\nCreate and use array, subroutines, hashes, and regular expressions in Perl applications\nGain a conceptual understanding and practical skills to construct your own levels\nBecome competent with the Perl language family and its use in various applications\nPrepare a foundation of knowledge for learning other more complex languages.",
      "target_audience": [
        "This course is made for Programmers who are curious to learn Perl Programming"
      ]
    },
    {
      "title": "Java Essentials 2025: Code, Concepts & Careers",
      "url": "https://www.udemy.com/course/learn-java-fundamentals/",
      "bio": "Master Java from the ground up with real-world applications, preparing you for software development jobs in today's tech",
      "objectives": [
        "Master Java basics: syntax, variables, data types, and control flow, setting a solid foundation for advanced programming",
        "Develop practical coding skills through hands-on exercises, focusing on real-world applications of Java arrays and strings",
        "Understand and apply Java operators, from arithmetic to logical, enhancing problem-solving abilities in software development",
        "Gain the ability to write, debug, and execute Java programs, preparing for careers in software development and technology"
      ],
      "course_content": {},
      "requirements": [
        "No previous experience required"
      ],
      "description": "Welcome to \"Java Essentials 2024: Code, Concepts & Careers,\" your gateway to mastering Java in this evolving digital age. This course is designed not just as an introduction to Java but as a deep dive into its core, ensuring you emerge well-equipped for the challenges and opportunities of software development careers today.\n\n\nWhy This Course?\nJava remains a cornerstone in the world of programming, versatile in its application from web services to mobile apps. As we step into 2024, the demand for skilled Java developers continues to surge. This course is tailored to meet these demands, offering a blend of foundational knowledge, advanced skills, and real-world applications.\n\n\nCourse Outline\nModule 1: Java: The Beginning\n- Embark on your Java journey with a look into its history, setting up your development environment, and crafting your first Java program. Understand the intricacies of how Java programs run, laying a solid groundwork.\n\n\nModule 2: Java's Building Blocks: Variables and Data Types\n- Dive into the basics of variables and data types, engage in hands-on exercises, and explore type conversion and casting. This module is designed to build your fluency in Java's language, essential for all aspiring developers.\n\n\nModule 3: Java Operators: Arithmetic to Logical\n- From arithmetic to bitwise operations, learn the logic behind Java programming. Make decisions with logical operators, enhancing your ability to solve complex programming problems.\n\n\nModule 4: Control Flow in Java: Statements and Loops\n- Master control flow in Java through conditional statements, switch-case, and various loops. Practical exercises guide you through the essential concepts, enabling you to write efficient and effective code.\n\n\nModule 5: Java Arrays and Strings\n- Arrays and strings are fundamental to Java programming. Learn to manipulate data, perform operations, and apply these concepts in practical scenarios, preparing you for advanced development tasks.\n\n\nWhat You'll Gain\n- Hands-on Experience: Engage with practical exercises and projects that reinforce learning and prepare you for real-world programming challenges.\n- Comprehensive Knowledge: From the basics to more advanced topics, gain a deep understanding of Java that covers all essential aspects.\n- Career Advancement: Equip yourself with in-demand Java programming skills that are crucial for numerous software development roles.\n\n\nJoin Us Today\n\n\nEmbark on a learning journey that transcends the basics, diving deep into the essence of Java programming. With \"Java Essentials 2024: Code, Concepts & Careers,\" you gain more than just knowledge; you acquire a skill set that opens doors to endless opportunities in the tech industry. Enroll now to begin your journey to becoming a proficient Java developer in 2024 and beyond.",
      "target_audience": [
        "Beginners eager to learn Java",
        "Intermediate programmers seeking to solidify their understanding and learn advanced Java concepts",
        "Professionals aiming for certification or career advancement in Java development"
      ]
    },
    {
      "title": "Data Analysis with Python, Pandas and NumPy",
      "url": "https://www.udemy.com/course/python-for-data-analysis-numpy-pandas-matplotlib-seaborn/",
      "bio": "Data Analysis with Python libraries - NumPy, Pandas, MatplotLib and Seaborn | 150+ MCQ Question | 2 Projects",
      "objectives": [
        "Student will learn data analysis techniques using numpy, pandas, matplotlib and seaborn.",
        "This course provides theoretical and practical understanding of the key concept of data analysis and data visualization",
        "The course provides excellent learning tool for creating strategies and correct business decision from the data at hand.",
        "Student will learn NumPy and Pandas introduction, Data ingestion, Data Preparation, Data Wrangling and Data Aggregation.",
        "Student will learn Data Visualization techniques using matplotlib, seaborn & pandas object."
      ],
      "course_content": {},
      "requirements": [
        "Basic and intermediate understanding of Python programming.",
        "Enthusiasm to learn the data analysis with python and willingness to devote time for learning."
      ],
      "description": "Data Analysis with Python is for everyone who would like to create meaningful insight out of the data with the power of Numpy, Pandas, Matplotlib & Seaborn. The course has the right recipe to equip student with the right set of skill to ingest, clean, merge, manipulate, transform and finally visualize the data to create the meaning out of the data at hand.\nThe goal of this course is many fold :\n- To provide theoretical and practical understanding of data analysis with Python package like NumPy and Pandas.\n- To provide the knowledge of visualization tool ( matplotlib and seaborn ) so that one will be able to visualize and make correct decision based on the data.\n- And finally practice with real life data to feel confident of the topic and be able to ready to work on data analysis project or interview.\n\n\nThe whole project is divided into following module :\n- NumPy introduction\n- Pandas introduction (Series and dataframe objects )\n- Data ingestion & Storage ( CSV, Excel, SQLite, JSON, HTML, Pickle and HDF5 storage etc. )\n- Data Preparation ( Identify missing data, Handle missing data, handling duplicate data, Data transformation, Manipulating Row & Columns, Bucket Analysis, Outlier detection, Sampling, Creating dummy variable etc. )\n- Data Wrangling ( Data Aggregation, Merging, Joins - Inner, Outer, Left & Right join, Join, Concatenate, Pivot, Melt etc. )\n- Data Aggregation (Split, Apply & Combine, GroupBy clause, Binning data, Pivot table and Cross tabulations etc. )\n- Visualization ( MatplotLib, Pandas Object visualization, Seaborn )\n- Project - Practice data analysis with real life datasets.",
      "target_audience": [
        "Python developers who aim to learn data ingestion, data analysis and data visualization",
        "Data analyst who would like to derive business insight out the data."
      ]
    },
    {
      "title": "Qt6 C++ GUI & Mobile App Development",
      "url": "https://www.udemy.com/course/qt6-c-gui-mobile-app-development/",
      "bio": "Learn how to build Graphical User Interface (GUI) applications and Android Applications with Qt6 and C++",
      "objectives": [
        "Learn how to build GUI applications with Qt6 and C++",
        "Learn how to work with different widgets and layout systems in Qt6",
        "You will learn how to integrate MySQL and SQLite database with Qt6",
        "You will learn working with Charts, Drag and Drop and also SDI & MDI Windows",
        "Learn how to create Music and Video player with Qt6",
        "You will learn how to work with Animations and WebEngine in Qt6",
        "You will learn how to work with QtQuick in Qt6",
        "You will learn how t build android applications with Qt6 and C++"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction",
          "Course Requirements"
        ],
        "Qt6 Introduction & First Window": [
          "Qt6 Introduction & Installation",
          "Creating First Project in Qt6",
          "Creating Window From Scratch in Qt6",
          "Adding Icon to Window",
          "Window Type Classes"
        ],
        "Qt6 Widgets": [
          "QLabel Class",
          "QPushButton Class",
          "QLineEdit Class",
          "QHBoxLayout Class",
          "QVBoxLayout Class",
          "QGridLayout Class",
          "Signals & Slots in Qt6",
          "QRadioButton Class",
          "QCheckBox Class",
          "QSpinBox Class",
          "QLCDNumber Class",
          "Random Generator with QLCDNumber",
          "QComboBox Class",
          "QSlider Class",
          "QListWidget Class",
          "QFontComboBox Class",
          "QTableWidget Class",
          "QCalendarWidget Class",
          "QInputDialog Class",
          "QColorDialog Class",
          "QFontDialog Class",
          "QMessageBox Class"
        ],
        "Signals & Slots in Qt Designer": [
          "Introduction to Qt Designer",
          "Signals & Slots with Qt Designer",
          "Signals & Slots with ProgressBar",
          "Single Signal with Multiple Slots",
          "Single Slot with Multiple Signal"
        ],
        "Building Contact List Application": [
          "Creating Menubar & MenuItems",
          "Trigger Signal for MenuItems",
          "Adding TableView & Widgets",
          "Add Header to TableView",
          "Add Item To TableView",
          "Add Item By Clicking Button",
          "Clear Fields",
          "Adding MessageBox to App",
          "Clear All Items from TableView",
          "Clear One Item From TableView"
        ],
        "Building Simple Notepad Application": [
          "Creating Menubar & MenuItems",
          "Add Icons and Toolbar",
          "Working on New and Open",
          "Working on Save and Save As",
          "Working on Print & Print Preview Dialog",
          "Working on Export PDF",
          "Working on Undo & Redo",
          "Working on Cut, Copy and Paste",
          "Working on Bold, Underline and Italic",
          "Working on Left, Right & Center",
          "QColor and QFont Dialog"
        ],
        "Painting & Graphics": [
          "Drawing Text & Line",
          "Drawing Rect with QPen Style",
          "QPainterPath Class",
          "Draw Image",
          "Creating Clock with QPainter",
          "Add Effects to the Graphic",
          "Creating Paint Application - Part One",
          "Creating Paint Application - Part Two",
          "Creating Paint Application - Part Three"
        ],
        "Qt6 Database Connection": [
          "SQLite Database Connection",
          "Create Table in SQLite Database",
          "Adding Data to SQLite Table",
          "MySQL Database Connection",
          "Insert Data to MySQL Database",
          "Update Data in MySQL Database",
          "Delete Data from MySQL Database",
          "Select Data in QTableWidget",
          "Change Data in QTableWidget",
          "QSqlQueryModel Class with MySQL Database",
          "QSqlTableModel Class with MySQL Database"
        ],
        "QtCharts in Qt6": [
          "Creating QBarChart in Qt6",
          "Creating LineChart in Qt6",
          "Creating PieChart in Qt6",
          "Creating Donut Chart in Qt6"
        ],
        "Drag & Drop in Qt6": [
          "Drag & Drop with QListWidget",
          "Language Chooser Drag & Drop - Part One",
          "Language Chooser Drag & Drop - Part Two",
          "Language Chooser Drag & Drop - Part Three"
        ]
      },
      "requirements": [
        "You should have some knowledge in C++"
      ],
      "description": "Hello students and welcome to my another new course on Qt6 C++ GUI & Mobile App Development, so Qt is a cross-platform software for creating graphical user interfaces as well as cross-platform applications that run on various software and hardware platforms such as Linux, Windows, macOS, Android or embedded systems with little or no change in the underlying codebase while still being a native application with native capabilities and speed.\n\n\nNow this course is divided in to different sections.\n\n\n1:  Intro & Creating Window - In this section we will have a simple introduction to Qt6, also we will learn that how you can install Qt6 and at the end we are going to build our first GUI window with Qt6 and C++.\n2. Qt6 Widgets - In this section we will talk about different widgets and layout systems.\n3. Signals & Slots in Qt Designer - In this section we learn that how you can work with Qt Designer and Signals and Slots\n4. Building Contact List Application - In this section we build a simple Contact List Application.\n5. Building Simple Notepad Application - In this section we want to build a simple notepad application.\n6. Painting & Graphics - In this section we talk about 2D Graphics and Paintings.\n7. Qt6 Database Connection - In this section we learn that how you can connect your Qt6 application with MySQL and SQLite databases.\n8. QtCharts in Qt6 - In this section we talk about creating modern and beautiful charts using Qt6 and C++.\n9. Drag & Drop in Qt6 - In this section we learn about Drag and Drop functionalities in Qt6.\n10. Multimedia in Qt6 - In this section we are going to build Music and Video Player with Qt6\n11. MDI & SDI Windows - In this section we talk about MDI and SDI windows in Qt6\n12. Qt6 Animation - In this section we are going to build different animations in Qt6\n13. Qt6 WebEngine - In this section we talk about QtWebEngine and also we are going to build a simple Web Browser using Qt WebEngine.\n14. Qt Quick - In this section we talk about QtQuick\n15. QtQuick Controls - In this section we talk about QtQuick Controls and also we are going to learn about different widgets with QtQuick Controls.\n16. QtQuick Multimedia - In this section we want to talk about  QtQuick Multimedia, we learn that how we can play Music and Video with QtQuick Multimedia.\n17. Charts in QtQuick - In this section we learn that how we can build charts with QtQuick.\n18. QtQuick3D - In this section we want to learn how to build 3D objects with QtQuick3D\n19. Animation in QtQuick - In this section we want to learn about animations in QtQuick\n20. Painting in QtQuick - In this section we want to learn about building 2D graphics with QtQuick\n21. Android App Development - In this section we are going to learn how to build android applications with Qt6 and C++",
      "target_audience": [
        "C++ Developers who want to build GUI and Android applications with Qt6 and C++"
      ]
    },
    {
      "title": "Digital Design from Scratch",
      "url": "https://www.udemy.com/course/digital-design-from-scratch/",
      "bio": "Using VHDL in FPGAs from the ground up",
      "objectives": [
        "Digital design basics, including logic gates, binary/hexadecimal numbers, registers, shift registers, counters, timing diagrams, propagation/setup/hold timing",
        "VHDL language basics, including VHDL file formats/libraries, coding logic equations, conditional statements, arrays, timing constraints",
        "Coding, including case statements, state machines, coding from timing diagrams, while-loops, standard/unsigned types, VHDL components (modules), simulation",
        "Practical examples: memories (inferred/dual port), FIFOs, memory-mapped buses, serial interfaces (RS232, UARTs, I2C, SPI), DSP, PLLs, Manchester/8B10B encoding"
      ],
      "course_content": {
        "Fundamentals": [
          "1.1: Introduction",
          "1.2: Boolean logic gates, binary state, and timing diagrams",
          "1.3: traffic light example, coding Boolean equations",
          "1.4: the latch",
          "Exercises for lectures 1.1-1.4",
          "1.5: enabled latches, series operations, and rising-edge pulses",
          "1.6: process and conditional statements, clocked registers",
          "1.7: register-to-register transfers, hold/setup time",
          "1.8: elsif, enabled set/reset flop, propogation delays",
          "Assignement 2: Exercises for lectures 1.5-1.8"
        ],
        "Functional Design Components": [
          "2.1: binary and hexadecimal numbers",
          "2.2: shift registers, counters, vectors, and 1k vs. 1K",
          "2.3: counter in the traffic light application, edge and terminal count detect.",
          "2.4: coding from timing diagrams",
          "Exercises for lectures 2.1-2.4",
          "2.5: introduction to state machines",
          "2.6: case statements",
          "2.7: state machines, case statements, and the traffic example",
          "2.8: coding the simple traffic state machine",
          "Exercises for lectures 2.5-2.8"
        ],
        "FPGAs, VHDL, and simulation": [
          "3.1: introduction to FPGAs",
          "3.2: VHDL head-on, text editors",
          "3.3: entities and architectures, vector types, and VHDL libraries",
          "3.4: modular design, debounce, falling-edge detection",
          "Exercises for lectures 3.1-3.4",
          "3.5: introduction to simulation",
          "3.6: simulation testbench, creatiing stimulus",
          "3.7: introduction to Modelsim, constants, stalling process statements",
          "3.8: using Modelsim",
          "Exercises for lectures 3.5-3.8"
        ],
        "Practical FPGA Elements": [
          "4.1: single and dual-port memories",
          "4.2: arrays and while loops",
          "4.3: inferred memories, coded dual-port memory, shared bus RAM, tri-state buffer",
          "4.4: FIFOs",
          "Exercises for lectures 4.1-4.4",
          "4.5: Avalon and AXI memory-mapped buses",
          "4.6: serial interfaces, RS232, UARTs",
          "4.7: I2C, SPI, clocks and timing",
          "4.8: introduction to DSP",
          "Exercises for lectures 4.5-4.8"
        ],
        "Bonus: clock recovery in serial interfaces": [
          "Serial interface clock recovery"
        ]
      },
      "requirements": [
        "A rudimentary understanding of algebra is helpful, but not necessary."
      ],
      "description": "VHDL is a powerful programming language for developing FPGAs, but is useless without an in-depth understanding of digital design. This course provides the student a comprehensive working knowledge of both of these in parallel. VHDL describes digital logic, and, as such, is an ideal vehicle for developing a deep understanding of the functional power available in modern FPGA devices.",
      "target_audience": [
        "Entry level students interested in developing programs for FPGAs.",
        "Technicians and engineers who would like to learn VHDL (an FPGA programming language)."
      ]
    },
    {
      "title": "Programming AutoCAD with SQL Server Database using C#",
      "url": "https://www.udemy.com/course/programming-autocad-with-sql-server-database-using-csharp/",
      "bio": "Programming AutoCAD .NET API with SQL Server Database integration using C#. You will perform database CRUD operations",
      "objectives": [
        "Learn to connect AutoCAD to SQL Server Database using C#",
        "Learn how to extract AutoCAD Objects and store in SQL Server Database",
        "Learn how to perform CRUD (Create, Retrieve, Update, Delete) Operations using C#"
      ],
      "course_content": {
        "Introduction": [
          "Course Topics",
          "Introduction"
        ],
        "Section 2 - Tools and SQL Queries": [
          "Section Overview",
          "Downloading Visual Studio 2019",
          "Downloading SQL Server Express",
          "Downloading SQL Server Management Studio (SSMS)",
          "SQL Queries - Overview",
          "INSERT SQL Statement - Demo",
          "SELECT SQL Statement - Demo",
          "UPDATE SQL Statement - Demo",
          "DELETE SQL Statement - Demo"
        ],
        "Section 3 - Create Database and Tables": [
          "Section Overview",
          "Creating the CADDB Database",
          "Creating the Lines Table",
          "Creating the MTexts Table",
          "Creating the Plines Table",
          "Creating the BlocksNoAttribute Table",
          "Creating the BlocksWithAttributes Table"
        ],
        "Section 4 - Loading into SQL Server Database": [
          "Section Overview",
          "Loading Lines into SQL Server Database",
          "Creating the CADDB Project",
          "Creating the Settings File",
          "Creating the GetConnection Method",
          "Creating the LoadLines() Method",
          "Creating the User Interface for the LoadLines() method",
          "Running the LoadLines() Method",
          "Loading MTexts into SQL Server Database - Overview",
          "Creating the LoadMTexts() Method",
          "Running the LoadMTexts() Method",
          "Loading LWPolylines into SQL Server Database - Overview",
          "Creating the LoadPolylines() Method",
          "Running the LoadPlines() Method",
          "Loading Blocks (No Attribute) into SQL Server Database - Overview",
          "Creating the LoadBlocksNoAttribute() Method",
          "Running the LoadBlocksNoAttribute() Method",
          "Loading Blocks (with Attributes) into SQL Server Database - Overview",
          "Creating the LoadBlocksWithAttributes() Method",
          "Running the BlocksWithAttributes() Method"
        ],
        "Section 5 - Retrieving Data from Database": [
          "Section Overview",
          "Retrieving Lines from SQL Server Database - Overview",
          "Creating the DBRetrieveUtil Class",
          "Creating the RetrieveAndDrawLines() Method (Part 1)",
          "Creating the GetColorIndex() Method",
          "Creating the RetrieveAndDrawLines() Method (Part 2)",
          "Running and Testing the RetrieveAndDrawLines() Method",
          "Retrieving MTexts from SQL Server Database - Overview",
          "Creating the RetrieveAndDrawMTexts() Method",
          "Running and Testing the CreateAndDrawMTexts() Method",
          "Retrieving LWPolylines from SQL Server Database - Overview",
          "Creating the RetrieveAndDrawPlines() Method",
          "Running and Testing the RetrieveAndDrawPlines() Method",
          "Retrieving Blocks (No Attribute) from SQL Server Database - Overview",
          "Creating the RetrieveAndDrawBlocksNoAttribute() Method",
          "Running and Testing the RetrieveAndDrawBlocksNoAttribute() Method",
          "Retrieving Blocks (with Attributes) from SQL Server Database - Overview",
          "Creating the RetrieveAndDrawBlocksWithAttributes() Method",
          "Running and Testing the RetrieveAndDrawBlocksWithAttributes() Method"
        ],
        "Section 6 - Updating Data in SQL Server Database - Overview": [
          "Section Overview",
          "Updating Lines in SQL Server Database - Overview",
          "Creating the DBUpdateUtil Class",
          "Creating the UpdateLines() Method",
          "Creating the User Interface for UpdateLines() Method",
          "Running and Testing the UpdateLines() Method",
          "Updating MTexts in SQL Server Database - Overview",
          "Creating the UpdateMTexts() Method",
          "Creating the User Interface for UpdateMTexts()",
          "Running and Testing the UpdateMTexts() Method",
          "Updating the LWPolylines in SQL Server Database - Overview",
          "Creating the UpdateLWPolylines() Method",
          "Running and Testing the UpdateLWPolylines() Method",
          "Updating Blocks (No Attributes) in SQL Server Database - Overview",
          "Creating the UpdateBlocksNoAttributes() Method",
          "Creating the User Interface for UpdateBlocksNoAttributes() Method",
          "Running and Testing the UpdateBlocksNoAttributes() Method",
          "Updating Blocks With Attributes in SQL Server Database - Overview",
          "Creating the UpdateBlocksWithAttributes() Method",
          "Creating the User Interface for UpdateBlocksNoAttributes() Method",
          "Running and Testing the UpdateBlocksWithAttributes() Method"
        ],
        "Section 7 - Deleting Data in SQL Server Database from AutoCAD - Overview": [
          "Section Overview",
          "Deleting Lines in SQL Server from AutoCAD - Overview",
          "Creating the DBDeleteUtil Class",
          "Creating the DeleteLines() Method",
          "Creating the User Interface for the DeleteLines() Method",
          "Running and Testing the DeleteLines() Method",
          "Deleting MTexts in SQL Server Database from AutoCAD - Overview",
          "Creating the DeleteMTexts() Method",
          "Creating the User Interface for DeleteMTexts() Method",
          "Running and Testing the DeleteMTexts() Method",
          "Deleting LWPolylines in SQL Server Database from AutoCAD - Overview",
          "Creating the DeletePlines() Method",
          "Creating the User Interface for the DeletePlines() Method",
          "Running and Testing the DeletePlines() Method",
          "Deleting Blocks (No Attribute) in SQL Server Database from AutoCAD - Overview",
          "Creating the DeleteBlocksNoAttribute() Method",
          "Creating the User Interface for DeleteBlocksNoAttribute() Method",
          "Running and Testing DeleteBlocksNoAttribute() Method",
          "Deleting Blocks (With Attributes) in SQL Server Database from AutoCAD - Overview",
          "Creating the DeleteBlocksWithAttributes() Method",
          "Creating the User Interface for DeleteBlocksWithAttributes() Method",
          "Running and Testing the DeleteBlocksWithAttributes() Method"
        ]
      },
      "requirements": [
        "Basic knowledge of AutoCAD Programming using C#",
        "Basic knowledge of SQL Server Database"
      ],
      "description": "This course will walk you through programming AutoCAD .NET API with SQL Server Database integration using C#. This is a hands-on course with lots of coding to teach you how to perform basic database operations like Create, Read, Update, and Delete (CRUD). You will learn how to extract AutoCAD objects' properties and load them into SQL Server database.\nYou will learn the following:\n- Learn AutoCAD .NET API Programming using C#\n- Learn how to use Windows Forms for your User Interface\n- Learn how to use XDATA to attach to and read from the object\n- Learn how to connect to SQL Server database using ActiveX Data Object (ADO)\n- Learn to perform Create, Read, Update and Delete (CRUD) using SQL Server Database\n- Learn how to use SQL Server Management Studio\n- Learn how to extract Line Object's Properties and store/retrieve into/from SQL Server Database\n- Learn how to extract MText Object's Properties and store/retrieve into/from SQL Server Database\n- Learn how to extract LWPolyline Object's Properties and store/retrieve into/from SQL Server Database\n- Learn how to extract Blocks (with/without attributes) Object's Properties and store/retrieve into/from SQL Server Database\nAfter taking this course, you will have a strong knowledge working with AutoCAD and SQL Server Database by storing your data persistently that you can use for other Applications.",
      "target_audience": [
        "AutoCAD Developers who want to learn database processes",
        "Anyone who wants to learn how to interface AutoCAD and SQL Server Database"
      ]
    },
    {
      "title": "Functional Programming with Python Comprehensions",
      "url": "https://www.udemy.com/course/functional-programming-with-python-comprehensions/",
      "bio": "Functional Programming with Python: Harness the Power of Comprehensions for Clearer, Concise, and Efficient Code.",
      "objectives": [
        "How to understand and apply the 'action source condition' model of comprehensions.",
        "The difference between imperative and declarative programming styles.",
        "How to identify, write and use functional code.",
        "How to create clean, concise list, set and dictionary comprehensions.",
        "How to create and use generator comprehensions.",
        "How to create and use nested comprehensions.",
        "How to solve job interview style questions using functional code.",
        "List Comprehensions",
        "Set Comprehensions",
        "Dictionary Comprehensions",
        "Generator Comprehensions",
        "Lazy Evaluation",
        "Declarative Programming",
        "Functional Programming",
        "Immutability"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Imperative vs Declarative": [
          "Programming Paradigms",
          "Imperative Programming",
          "Declarative Programming",
          "Programming Paradigms - Knowledge Check"
        ],
        "The Cornerstones of Comprehensions": [
          "Action, Source, Condition",
          "Converting from Imperative to Declarative",
          "Comprehensions - Knowledge Check"
        ],
        "List Comprehensions": [
          "Our First List Comprehensions",
          "Passing User Defined Functions as Actions",
          "Applying a Simple Condition",
          "Using Complex Conditions",
          "Passing a User Defined Function as a Condition",
          "The Walrus Operator",
          "Using 'Else' in a List Comprehension",
          "Alternatives to Comprehensions",
          "Experimenting with Actions",
          "Stop and Code! - List Comprehensions",
          "List Comprehensions - Knowledge Check",
          "List Comprehensions - Coding Challenge 1",
          "List Comprehensions - Coding Challenge 2",
          "List Comprehensions - Coding Challenge 3"
        ],
        "Set Comprehensions": [
          "A Brief Primer on Sets",
          "Basic Set Comprehensions",
          "Stop and Code! - Set Comprehensions",
          "Set Comprehensions - Knowledge Check",
          "Set Comprehensions - Coding Challenge"
        ],
        "Generator Comprehensions": [
          "What is a Generator?",
          "Retrieving Items from your Generator Comprehension",
          "Stop and Code! - Generator Comprehensions",
          "Generator Comprehensions - Knowledge Check",
          "Generator Comprehensions - Coding Challenge 1",
          "Generator Comprehensions - Coding Challenge 2"
        ],
        "Dictionary Comprehensions": [
          "Dictionary Comprehension Basics",
          "Applying Functions to Keys/Values",
          "Using Conditions with Dictionary Comprehensions",
          "Dictionary Comprehensions - Knowledge Check",
          "Dictionary Comprehensions - Coding Challenge 1",
          "Dictionary Comprehensions - Coding Challenge 2"
        ],
        "Nested Comprehensions": [
          "A Comprehension inside a Comprehension - How does that work?",
          "Nested Comprehensions - Worked Examples",
          "Stop and Code! - Nested Comprehensions",
          "Nested Comprehensions - Knowledge Check",
          "Nested Comprehensions - Coding Challenge"
        ],
        "The Monthly Comprehension Challenge - Apply Your Knowledge!": [
          "Monthly Comprehension Challenge - September 2023",
          "Monthly Comprehension Challenge - October 2023",
          "Monthly Comprehension Challenge - November 2023",
          "Monthly Comprehension Challenge - December 2023",
          "Monthly Comprehension Challenge - January 2024",
          "Monthly Comprehension Challenge - February 2024",
          "Monthly Comprehension Challenge - March 2024",
          "Monthly Comprehension Challenge - April 2024",
          "Monthly Comprehension Challenge - May 2024",
          "Monthly Comprehension Challenge - June 2024",
          "Monthly Comprehension Challenge - July 2024",
          "Monthly Comprehension Challenge - August 2024",
          "Monthly Comprehension Challenge - September 2024",
          "Monthly Comprehension Challenge - October 2024",
          "Monthly Comprehension Challenge - November 2024",
          "Monthly Comprehension Challenge - December 2024",
          "Monthly Comprehension Challenge - January 2025",
          "Monthly Comprehension Challenge - February 2025",
          "Monthly Comprehension Challenge - March 2025",
          "Monthly Comprehension Challenge - April 2025",
          "Monthly Comprehension Challenge - May 2025",
          "Monthly Comprehension Challenge - June 2025",
          "Monthly Comprehension Challenge - July 2025",
          "Monthly Comprehension Challenge - August 2025"
        ]
      },
      "requirements": [
        "Some basic Python would be ideal, such as a good understanding of the syntax, basic data types and loops."
      ],
      "description": "Welcome to Functional Programming with Python Comprehensions!\n\n\nThis course is carefully crafted to bridge the gap between beginner and intermediate Python programming, focusing specifically on functional programming principles. Throughout the course, you'll embark on a transformative journey, mastering the art of using list, set, dictionary, and nested comprehensions to write clearer, concise, and more efficient code.\n\n\nAt the end of this course you can expect to have a real understanding of:\n\n\nList Comprehensions.\nSet Comprehensions.\nDictionary Comprehensions.\nGenerator Comprehensions.\nNested Comprehensions.\nThe difference between Imperative & Declarative Programming styles.\n\n\n\n\nEach section is supplemented with quizzes and coding exercises that allow you to practice and solidify your understanding of the material. These exercises are designed to mirror real-world scenarios and job interview scenarios, enabling you to develop problem-solving skills while applying functional programming concepts.\n\n\n\n\nAdditionally, this course offers a unique feature—a monthly job interview style question. Each month, you'll be presented with a challenging question designed to test your understanding of functional programming concepts and your ability to apply them in a practical setting. These exercises will not only help you gauge your progress but also prepare you for real-world coding interviews.\n\n\n\n\nBy the end of this course, you'll have mastered the art of functional programming with Python comprehensions. You'll possess a deep understanding of the benefits and applications of functional programming, allowing you to write cleaner, more concise, and highly efficient code. Whether you aim to enhance your career prospects, tackle complex coding challenges, or simply expand your programming skill set, this course equips you with the knowledge and confidence to excel.\n\n\nEnroll now and embark on a transformative journey into the realm of functional programming with Python comprehensions. Let's unlock the power of functional programming together and take your Python programming skills to new heights!",
      "target_audience": [
        "This course is for beginner/intermediate Python programmers wanting to include functional programming concepts in their code.",
        "Programmers wanting to learn how to use comprehensions in their programs.",
        "Programmers wanting to understand how to use declarative code, and be able to translate code from imperative to declarative.",
        "Programmers wanting to prepare for job interviews and careers where clean functional code is common place."
      ]
    },
    {
      "title": "Java Functional Programming",
      "url": "https://www.udemy.com/course/introduction-to-java-8-functional-programming/",
      "bio": "Learn one of the most trending paradigms in programming and go functional with lambda expressions",
      "objectives": [
        "getting To know the concept of Functional Programming",
        "use Lambda expressions with functional interfaces",
        "manipulate your data and make comparisons with filtering operations",
        "design your applications with lambda expressions"
      ],
      "course_content": {},
      "requirements": [
        "just any IDE for Java that supports at least java 8"
      ],
      "description": "this course will teach you the following Parts of Functional Programming:\nGetting to know the concept: we will answer to the questions of What is Functional Programming and why should we use it.\nHow to use Lambda expressions on Collections: collections are a very important part of JAVA and every developer is concerned with it so in this course we will discover how you can use lambda expressions to improve your usage of java collections.\nHow to use Comparators and Filters: complex operations like filtering and comparing data is made very easy like never using lambda expressions with some quiet beautiful utilities offered by JDK.\nHow to design with lambda expressions: if you are designing your applications using strategy pattern (which makes you handling more and more hierarchy problems), lambda expressions is made for you to minimize the complexity generated by the hierarchy of your classes and interfaces.",
      "target_audience": [
        "every student should have the basics of java",
        "every student should have the basics of object oriented programming in java"
      ]
    },
    {
      "title": "Functional Programming Deep Dive with C#",
      "url": "https://www.udemy.com/course/functional-programming-deep-dive-with-c-sharp/",
      "bio": "Take your code to the next level with Functional Programming in C#. Improve your software’s architecture. C# 9.0.",
      "objectives": [
        "Why functional programming is useful",
        "Improve your code's quality, readability, and stability",
        "Design and Implement Immutable Types and Maybes/Options for Nulls",
        "Impress your peers with high quality code",
        "Improve your code's quality, readability, and stability",
        "Improve your own reasoning of software architecture"
      ],
      "course_content": {
        "Course Overview": [
          "Introduction",
          "What is Functional Programming"
        ],
        "Pure/Higher Order/First Class Functions": [
          "What are Pure, Higher Order, and First Class Functions",
          "Code Follow Along Introduction",
          "Code Follow Along and Practical Applications"
        ],
        "Immutability's Importance in Functional Programming": [
          "The Importance of Immutability",
          "Code Follow Along and Libraries",
          "Referential Transparency and Practical Applications"
        ],
        "Lambda Expressions": [
          "Using Lambda Expressions Functionally",
          "Code Follow Along and Libraries"
        ],
        "Composition and Currying": [
          "What is Composition and Currying",
          "Code Follow Along and Practical Applications"
        ],
        "Recursion": [
          "What is Recursion?",
          "Code Follow Along and Practical Applications"
        ],
        "Method Chaining": [
          "What is Method Chaining and Pipelining"
        ],
        "Null Handling": [
          "Handling Nulls Functionally",
          "Code Follow Along and Practical Applications"
        ],
        "Error Handling": [
          "How to Handle Errors Functionally",
          "Code Follow Along and Practical Applications"
        ],
        "Yield Return": [
          "What is Yield Return?"
        ]
      },
      "requirements": [
        "Solid understanding of C#, SOLID Principles , Lambdas, and Delegates.",
        "Visual Studio 2019 Community Edition (preferrably version 16.9 or later)",
        "Willingness to re-think the way you write software"
      ],
      "description": "Take your code to the next level of maintainability, efficiency/concurrency, and ease-of-understanding. Learn the principles of functional programming, how and where to apply it in C#, and why it will make you a better programmer. Improve your software’s architecture and leapfrog your code quality over that of your peers.\n\n\nWhat You’ll Learn\nWhy functional programming is useful\nHow to apply functional principles and patterns in C#\nDesign and Implement Immutable Types and Maybes/Options (Null values)\nWriting Pure Functions (functions without side effects)\nUsing recursion with functional programming paradigms to simplify your code\nUsing LINQ to clean up code and condense logic\nHandle errors in functional style\nUtilizing extension methods to write fluent, easy to read code.\nMake use of new C# 8 and 9 features in functional style\n\n\nCourse Description\nLearn how to apply function paradigms and patterns to codebases in C#. If you want to improve the maintainability, understandability, stability, and terseness of your code; this course will help you do that. This is meant for experienced C# developers that already have a solid, moderately deep understanding of the C# language.\nEach video will introduce a concept, and lay out an example of implementing that concept.\nIf you want to improve your code’s quality, make your application faster and easier to understand, and increase your own productivity, then this course will help you tremendously.\nEach video in this series can be watched independently. You can get value out of each video by itself if you already know certain concepts or are looking to learn something specific.\n\n\nTeaching Style\nAll videos are short, to-the-point, and avoid fluff.\n\n\nThe course covers the following topics:\nTheoretical Foundations of Functional Programming\nCore Concepts of Functional Programming\nFunctional Features in C# (C# 9 included)\nImmutability, Extensibility, and Extendibility in C#\nDealing with Errors and Nulls gracefully\n\n\nCourse Keywords:\nC# Clean Code\nC# Best Practices\nFunctional Programming in C#\nC# Functional Programming\nClean Code in C#\nFunctional Programming\nCode Readability\nStable Code in C#",
      "target_audience": [
        "Experienced programmers looking to expand their knowledge further"
      ]
    },
    {
      "title": "The Complete Course for Operational Management",
      "url": "https://www.udemy.com/course/molecular-chemistry-and-basic-codes-and-principles/",
      "bio": "You will master Operational Management topics such as Database setup, task tracking, team collaboration!",
      "objectives": [
        "You will learn operational Management",
        "You will learn how to to setup database in operational management tool",
        "You will learn how to track and collaboration of team",
        "You will learn how to analyze the data with operational management Tool."
      ],
      "course_content": {},
      "requirements": [
        "You must have some knowledge on Project Management prior to this course"
      ],
      "description": "This course covers everything about Operational Management. Operational Management is a versatile project management tool that combines the simplicity of spreadsheets with the functionality of databases, making it a powerful solution for managing projects across various industries. It offers a user-friendly interface that allows teams to collaborate seamlessly while keeping track of tasks, deadlines, and project milestones.\nOne of Operational Management key strengths lies in its flexibility. Users can create customized workflows tailored to the specific needs of their projects. Whether it's a marketing campaign, product development, event planning, or content creation, Operational Management adapts to different project types. This adaptability is facilitated through various views, such as grid, calendar, gallery, and Kanban, which provide multiple ways to visualize and manage data. For instance, the Kanban view is particularly useful for teams that follow agile methodologies, allowing them to move tasks across different stages of the project lifecycle.\nAutomation is another standout feature of Operational Management. With Operational Management Automations, users can set up custom triggers and actions to streamline repetitive tasks. For example, an automation can be configured to send an email notification when a task status changes or to create a new record in response to a specific condition. This not only saves time but also reduces the risk of human error, ensuring that processes run smoothly and efficiently.",
      "target_audience": [
        "It is for project management professionals who want to use operational management for Project Management"
      ]
    },
    {
      "title": "Building a Virtual Machine for Programming Language",
      "url": "https://www.udemy.com/course/virtual-machine/",
      "bio": "Essentials of Low-level Interpretation",
      "objectives": [
        "Virtual Machines implementations",
        "Stack-based vs. Register-based VMs",
        "Bytecode interpreter",
        "Compiler construction",
        "Call stack and Stack frames",
        "Low-level interpretation",
        "Object-oriented programming",
        "Functional programming",
        "Closures implementation",
        "Garbage Collection",
        "Mark-Sweep GC",
        "Understand how programming languages work under the hood",
        "Bytecode optimization"
      ],
      "course_content": {
        "VM basic operations": [
          "Introduction to Virtual Machines",
          "Stack-based vs. Register-based VMs",
          "Logger implementation",
          "Numbers | Introduction to Stack",
          "Math binary operations",
          "Strings | Introduction to Heap and Objects",
          "Syntax | Parser implementation",
          "Compiler | Bytecode",
          "Complex expressions"
        ],
        "Control flow and variables": [
          "Comparison | Booleans",
          "Control flow | Branch instruction",
          "Disassembler",
          "Global variables",
          "Blocks | Local variables",
          "Control flow | While-loops"
        ],
        "Functions and Call stack": [
          "Native functions",
          "User-defined functions",
          "Call stack | Return address",
          "Lambda functions",
          "Bytecode optimizations"
        ],
        "Closures implementation": [
          "Closures | Scope analysis",
          "Closures | Compilation",
          "Closures | Runtime"
        ],
        "Garbage Collection": [
          "Tracing heap | Object header",
          "Mark-Sweep GC"
        ],
        "Object-oriented programming": [
          "Class objects | Methods storage",
          "Instance objects | Property access",
          "Super classes | Inheritance",
          "Final VM executable Final VM executable"
        ]
      },
      "requirements": [
        "Basic C++",
        "Basic data structures (maps, lists, stack, trees)",
        "\"Building an Interpreter from scratch\" class (if needed)"
      ],
      "description": "Course overview\nHow programming languages work under the hood? What’s the difference between compiler and interpreter? What is a virtual machine, and JIT-compiler? And what about the difference between functional and imperative programming?\nThere are so many questions when it comes to implementing a programming language!\nThe problem with “compiler classes” in school is such classes are usually presented as some “hardcore rocket science” which is only for advanced engineers.\nMoreover, classic compiler books start from the least significant topic, such as Lexical analysis, going straight down to the theoretical aspects of formal grammars. And by the time of implementing the first Tokenizer module, students simply lose an interest to the topic, not having a chance to actually start implementing a programing language itself. And all this is spread to a whole semester of messing with tokenizers and BNF grammars, without understanding an actual semantics of programming languages.\nI believe we should be able to build and understand a full programming language semantics, end-to-end, in 4-6 hours — with a content going straight to the point, showed in live coding sessions as pair-programming and described in a comprehensible way.\nIn the Building a Virtual Machine class we focus specifically on runtime semantics, and build a stack-based VM for a programming language very similar to JavaScript or Python. Working closely with the bytecode level you will understand how lower-level interpretation works in production VMs today.\nImplementing a programing language would also make your practical level in other programming languages more professional.\n\n\nPrerequisites\nThere are two prerequisites for this class.\nThe Building a Virtual Machine course is a natural extension for the previous class — Building an Interpreter from scratch (aka Essentials of Interpretation), where we build also a full programming language, but at a higher, AST-level. Unless you already have understanding of how programming languages work at this level, i.e. what eval, a closure, a scope chain, environments, and other constructs are — you have to take the interpreters class as a prerequisite.\nAlso, going to lower (bytecode) level where production VMs live, we need to have basic C++ experience. This class however is not about C++, so we use just very basic (and transferrable) to other languages constructs.\nWatch the introduction video for the details.\nWho this class is for?\nThis class is for any curious engineer, who would like to gain skills of building complex systems (and building a programming language is an advanced engineering task!), and obtain a transferable knowledge for building such systems.\nIf you are interested specifically in compilers, bytecode interpreters, virtual machines, and source code transformation, then this class is also for you.\n\n\nWhat is used for implementation?\nSince lower-level VMs are about performance, they are usually implemented in a low-level language such as C or C++. This is exactly what we use as well, however mainly basic features from C++, not distracting to C++ specifics. The code should be easily convertible and portable to any other language, e.g. to Rust or even higher-level languages such as JavaScript — leveraging typed arrays to mimic memory concept. Using C++ also makes it easier implementing further JIT-compiler.\nNote: we want our students to actually follow, understand and implement every detail of the VM themselves, instead of just copy-pasting from final solution. Even though the full source code for the language is presented in the video lectures, the code repository for the project contains /* Implement here */ assignments, which students have to solve.\n\n\nWhat’s specific in this class?\nThe main features of these lectures are:\nConcise and straight to the point. Each lecture is self-sufficient, concise, and describes information directly related to the topic, not distracting on unrelated materials or talks.\nAnimated presentation combined with live-editing notes. This makes understanding of the topics easier, and shows how the object structures are connected. Static slides simply don’t work for a complex content.\nLive coding session end-to-end with assignments. The full source code, starting from scratch, and up to the very end is presented in the video lectures\n\n\nWhat is in the course?\nThe course is divided into five parts, in total of 29 lectures, and many sub-topics in each lecture. Below is the table of contents and curriculum.\nPART 1: VM BASIC OPERATIONS\nIn this part we describe compilation and interpretation pipeline, starting building our language. Topics of Stack and Register VMs, heap-allocated objects and compilation of the bytecode are discussed.\nPART 2: CONTROL FLOW AND VARIABLES\nIn this part we implement control flow structures such as if expressions and while loops, talk about Global object and global variables, nested blocks and local variables, and also implement a disassembler.\nPART 3.1: FUNCTIONS AND CALL STACK\nIn this part we start talking and implementing function abstraction and function calls. We describe concept of the Call stack, native and user-defined functions, and IILEs (Immediately-invoked lambda expressions).\nPART 3.2: CLOSURES IMPLEMENTATION\nIn this part we focus on closures implementation, talking about scope and escape analysis, capturing free variables, and adding runtime support for closures.\nPART 4: GARBAGE COLLECTION\nThis part is devoted to the automatic memory management known as Garbage collection. We discuss a tracing heap and implement Mark-Sweep garbage collector.\nPART 5: OBJECT-ORIENTED PROGRAMMING\nIn the final part we add support for Object-oriented programming, implementing classes and instances. In addition we build the final VM executable.",
      "target_audience": [
        "Any curious engineer",
        "Programming language implementors"
      ]
    },
    {
      "title": "Intro ASP .NET Core 6 & MVC Web Design for absolute beginner",
      "url": "https://www.udemy.com/course/windows-forms-with-c-for-absolute-beginners/",
      "bio": "Easily learn Basics of ASP .Net Core MVC - Bootstrap and Entity Framework Database First method",
      "objectives": [
        "Quick start to basics of ( ASP .Net Core MVC + Entity Framework + Bootstrap )",
        "Using Entity Framework Core with database first method by SQL",
        "Simple examples and easy to learn in depth learning",
        "Using Model, View and Controller in MVC Core",
        "Routing in MVC Core Projects",
        "Working with Layouts",
        "Using ViewBag and ViewData"
      ],
      "course_content": {},
      "requirements": [
        "Only A pc with windows Os",
        "General knowledge of C#",
        "General knowledge of Html"
      ],
      "description": "Hi There!\nWith my many years programming skills I'm with you to share my knowledge with you.\nSo\nIf you are beginners or student looking for a tutorial that teach ASP .Net Core MVC basics in simplest way!\nIf you want really to be a programmer so it's best place that you can start to learn Asp. net Core MVC basics\nThis course includes :\nStart using C# and ASP. Net Core MVC with Visual Studio 2022 From Scratch\nStructure of MVC website in ASP .NET core\nUsing Controller in MVC core project\nViews in MVC core project\nAction in MVC core project\nRouting in MVC core project\nLayout in MVC core project\nViewStart in MVC core\nTagHelpers : Navigate between views\nViewImports : Navigate between views\nViewBag : Transfer data & change page title\nViewData : Transfer data & change page title\nEntity Framework with SQL Database\nCreating SQL database\nCreating new project & installing NuGet Packages\nGenerating Models and DbContext\nGenerating Controller and Views\nRegister DbContext and run Web site\nSecure connection string\nDeep diving design of ‘Index’ view\nUsing ‘Html.DisplayNameFor’\nDeep diving ‘Index’ Action in Controller\nDeep diving design of ‘details’ view\nDeep diving Action of ‘Delete’ view\nDeep diving of ‘Create’ view\n‘Edit’ view Deep diving\nand …\n\n\nEvery thing will be discussed with sample project and you will have lot of tips and tricks within my course.\nLet's go !!!",
      "target_audience": [
        "Anyone how is abolute beginner and wanna learn the basics of Asp .NET coere mvc"
      ]
    },
    {
      "title": "Make Music with Code: Complete Guide to Coding with Sonic Pi",
      "url": "https://www.udemy.com/course/make-music-with-code/",
      "bio": "Learn how to use code to write and perform music on this fun course. No prior programming experience needed!",
      "objectives": [
        "Gain a deep understanding of the fundamentals of coding and program flow.",
        "Learn how to generate, create, record and perform music with Sonic Pi.",
        "Use synths, samples, filters and envelopes in code to enhance your sound design repertoire.",
        "Use Sonic Pi's randomisation function to create generative music.",
        "Take the knowledge gained in this course and be able to create entire musical compositions using code as your instrument."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience required. Access to a PC, Mac or Raspberry Pi will allow you to follow along.",
        "All software used in the course is available as a free download."
      ],
      "description": "Aimed at musicians with little or no coding experience, this fun course will teach you how to compose and perform music using code as your instrument. Based on the free Sonic Pi framework, popular in the Algorave scene, you'll cover everything from the very basics of programming to using Sonic Pi for live performance, including writing a drum sequencer. Later in the course, you'll even learn how to integrate your code with MIDI & audio instruments.\n\n\nWith four hours of video split across fifty lectures, you will find detailed descriptions and demonstrations of:\n\n\nHow to create music by coding musical patterns with synths and samples.\nFundamental programming concepts, including program flow and Sonic Pi's built-in data structures.\nCreating a drum sequencer, looping melodies, chord progressions and bass lines from scratch.\nHow to use filters and ADSR envelopes for code-based sound design.\nHow to add effects such as distortion, delay and reverb to make your sounds more interesting.\nHow to control MIDI and audio from your code.\nHow to use the features of Sonic Pi to enhance your live performances.\n\n\nWe'll be using the free Sonic Pi throughout the course, and by the end, you'll be able to apply what you've learned to create unique musical compositions and perform live using code. As you’ll see, anyone can learn to program. We take each new concept step-by-step, and it’s easier than you think, even if you have absolutely no prior coding experience!",
      "target_audience": [
        "Musicians wishing to gain some knowledge of programming, to use code as an instrument for composition, recording and live performance."
      ]
    },
    {
      "title": "C Programming accelerator: Start your journey ->0 to 100%",
      "url": "https://www.udemy.com/course/lcpro-lang-from-the-grnd-up/",
      "bio": "Improve your Chances of Success with other Languages by 101% . Learn in less than 30 hours from a Friendly Instructor .",
      "objectives": [
        "Master C Language from Basic to Advanced. A Stepping stone in world of Programming.",
        "Make a Strong Programming Foundation with C.",
        "Basic Building Blocks of C",
        "Simple and Easy explanation of Concepts.",
        "Variables, Operators, Input/Output",
        "Loops and how they execute",
        "Taking Logical Decisions using if-else control statements",
        "Using Functions to add features to your program",
        "RECURSION of Functions.",
        "Arrays and Strings for Data Management. 1D , 2D",
        "Structures and Unions.",
        "Learn how to use different types of POINTERS , Memory Management and Master it easily.",
        "POINTERS made easy.",
        "Writing to and Reading from a File using File I/O functions",
        "Using Standard Library of Pre-Defined Functions in your program",
        "Conditional Compilation. #ifdef , #else , #endif , #ifndef , #undef",
        "Advanced Variables, enum, Type Casting",
        "You will learn to Conquer your fear of programming.",
        "Well Equip yourself for programming positions .",
        "To the point , summarized and easy to understand Concise Material."
      ],
      "course_content": {
        "Introduction": [
          "What this Course Offers ?",
          "What is a Programming Language ?",
          "What are Compilers ? And the role of Compilers in Programming.",
          "Types of Programing Languages",
          "Brief History of C Programming Language."
        ],
        "Getting Ready with I.D.E : Selection, Installation and usage.": [
          "Choosing Between IDEs",
          "Downloading and Installing Code::Blocks for Windows",
          "Downloading and Installing Microsoft Visual Studio",
          "Downloading and Installing Borland Turbo C++",
          "Exploring Code::Blocks IDE and It's Usage",
          "[Optional]Exploring Microsoft Visual Studio IDE and It's Usage.",
          "[Optional]Exploring Borland Turbo C++ IDE and It's Usage."
        ],
        "Laying a Strong Foundation. Structure of a C Program and Basics you should know.": [
          "Structure of a C Program.",
          "Exploring Basic Input/Output functions in C",
          "Brief about Binary, Bits, Bytes, Memory and its Working.....",
          "Section 3 Quiz",
          "I/O Quiz"
        ],
        "Exploring Variables and there Data Types.": [
          "What are Variables ?",
          "Variable Declaration/Definition and intialization.",
          "Variables Quiz",
          "Let's Discuss Data Types.",
          "Sizes of Various Data Types and Qualifiers long,short.",
          "Using Format Specifiers and Field Width Specifiers:- I / O Fuctions Revisited.",
          "Escape Sequences",
          "Scope of Variables- in blocks of Code",
          "Scope Quiz",
          "Constants"
        ],
        "Operators and There Usage": [
          "Types of Operators",
          "Arithmetic Operators",
          "Precedence of Operators",
          "Arithmetic Assignment Operators",
          "The Increment/Decrement Operator",
          "Relational Operators",
          "Precedence of Operators- Revisited",
          "Operators Quiz"
        ],
        "Loops": [
          "The for(;;) Loop",
          "The for Loop Demo Example",
          "The multi-statement for Loop",
          "Demo Example-The mulit-statement.",
          "Demo Example-The multi-initialization for Loop",
          "Nested for(;;) Loops",
          "Demo Example-The Nested for Loop .",
          "For Loop Quiz",
          "The while() Loop",
          "Demo Example-The while loop.",
          "Demo Example-Nested while() Loops.",
          "While Loop Quiz",
          "The do - while() Loop",
          "Demo Example-The do-While ."
        ],
        "Decisions": [
          "Introduction to Decisive Statements in C",
          "The if(condition) statement",
          "Demo Example-The if statement.",
          "Demo Example---The word count program.",
          "Nested If statements",
          "Demo Example-The Nested if.",
          "The if - else statement",
          "Demo Example-The if -- else .",
          "The if-else Quiz",
          "The Nested if else statements",
          "Demo Example-The nested if-else-if.",
          "Nested if -else Quiz",
          "The Logical And, Or , Not operators",
          "Demo Example-Logical Operators .",
          "Precedence of Operators - Revisited",
          "Demo Example - The 4 function Calculator",
          "Demo Example - Using The break Statement",
          "The switch() Statement",
          "Demo Example-The switch() Statement.",
          "The Conditional Operator - an option for if(condition) else construct",
          "The Switch Quiz"
        ],
        "Function I - Add features to your program.": [
          "What is a function ?",
          "The Structure of a function.",
          "Function Quiz",
          "Demo Example- A Simple function",
          "Functions with return value .",
          "Demo Example-Return Value of a function.",
          "Local Variables in function-Scope of Variables Revisited.",
          "Function Quiz 2"
        ],
        "Functions II - Some Advanced but easy concepts.": [
          "Functions with Arguments.",
          "Demo Example - passing Arguments to function.",
          "Using Multiple functions in a program",
          "Demo Example-Using more then one functions.",
          "Assignment for Lecture 70",
          "Introducing the #define directive and const keyword",
          "Demo Example-Using #define and const",
          "Macros - The Little functions.",
          "Fucntions II Quiz"
        ],
        "The Exciting Arrays - 1D, 2D .": [
          "What is a Array ?",
          "Demo Example1-Using Arrays.",
          "Demo Example 2- Using Arrays.",
          "Initializing Arrays.",
          "Demo Example - Initializing Arrays.",
          "2- Dimensional Arrays.",
          "Demo Example 1- Using 2-D Arrays.",
          "Demo Example 2 - Using 2D Arrays.",
          "Functions Revisited - Passing Arrays as arguments.",
          "Demo Example-Passing Arrays as Arguments .",
          "Passing Multi- Dimensional arrays to functions.",
          "Demo Example-Multi Dimensional Arrays as Arguments to Fucntions",
          "An Array Sorting Program.The famous Bubble Sort",
          "Arrays Quiz"
        ]
      },
      "requirements": [
        "No programming Experience required.",
        "Windows OS /Linux / MAC OS PC with atleast-> 4 GB RAM and 500 GB HDD",
        "Basic knowledge in Mathematics."
      ],
      "description": "Welcome to \"C Programming Mastery: The 100% Comprehensive Guide\" - the ultimate guide to learning C programming from scratch! If you're interested in coding and want to learn one of the most fundamental and widely-used programming languages, then this course is for you.\nIn this comprehensive course, you'll learn everything you need to know about C programming - from the basics of data types and control structures to more advanced topics like pointers and dynamic memory allocation. Through a series of engaging video lectures and hands-on coding exercises, you'll build a strong foundation in C programming and develop the skills you need to tackle real-world coding challenges.\nWith this course, you'll benefit from:\nClear, concise instruction: Our instructor has years of experience in C programming and knows how to teach complex concepts in a way that's easy to understand.\nPractical coding exercises: You'll get plenty of opportunities to practice your coding skills with our hands-on exercises and quizzes.\nReal-world examples: You'll see how C programming is used in real-world scenarios, from systems programming to game development.\nPersonalized support: Our instructor is available to answer your questions and provide feedback on your coding projects.\nBy the end of this course, you'll be able to write C programs with confidence and tackle more advanced programming challenges. You'll also be prepared to take on other programming languages, as C provides a solid foundation for learning other languages.\nDon't miss this opportunity to learn one of the most widely-used programming languages with C Programming Mastery: The 100% Comprehensive Guide\". Enroll today and start your journey to becoming a skilled programmer!",
      "target_audience": [
        "Students, Job Seekers, Hobbyists",
        "Professionals looking to Refresh C skills"
      ]
    },
    {
      "title": "JAVA for Beginner : Complete OOPs concepts with Practicals",
      "url": "https://www.udemy.com/course/java-for-beginner/",
      "bio": "Complete JAVA with Oops/DSA Concepts :With Real time Practical Examples with easy explanation- Best course for Beginner",
      "objectives": [
        "- By the end of this course you will be able to implement JAVA in your Automation/Developments Projects *This is completely design for Beginner*.",
        "- You will be able to answer What, Why and when to use with easy explanation.",
        "- You will gain confidence with “Real time scenario” so that you can answer to anybody with confidence- This is Main focus.",
        "- Get all the notes and Practical Example",
        "- Learn Complete basics Java Concepts",
        "-Learn Complete OOPs Concepts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & Welcome",
          "Need Support !!",
          "Better Learning Experience - Must for new to Udemy | Optional who know",
          "Introduction to the Course (Complete JAVA Package)",
          "How to Reach out to Instructor"
        ],
        "ALL Basic Concept from beginner level (ABC of Java)": [
          "Java - What is Java? and Why Java?",
          "Download & Install JAVA - on Windows",
          "Download & Install JAVA - on MAC",
          "Java - main Method Explanation",
          "Java - Creating Java Project from Scratch",
          "Java - Understanding java naming convention , Identifiers",
          "Java - Understanding Literals Concept in Java",
          "Java - Use of Void Method with Real time Example",
          "Java - Use of Method with Return with Real time Example",
          "Interview Questions and Teaching Materials"
        ],
        "BASIC JAVA : Variables in JAVA": [
          "Local Variable - Use of Local Variable with Real time Example",
          "Static Variable - Use of Static Variable with Real time Example",
          "Instance Variable - Use of Instance Variable with Real time Example"
        ],
        "BASIC JAVA : Data Types in JAVA": [
          "Java - Introduction and Use of Data Types",
          "Java - Practical Example of Data Type"
        ],
        "BASIC JAVA : Coding Standards and Java Comments": [
          "Coding Standard - Java Comments with Practical Explanations",
          "Coding Standard - with Practical Explanations"
        ],
        "BASIC JAVA : Flow Control and Conditional Statements": [
          "Java - Use of For Loop with Real time example",
          "Java - Use of For-each Loop with Real time Example",
          "Java - Use of While and Do while with Real time Example",
          "Java - Use of Conditional Statement if-else with Real time Example",
          "Java - Use of Multiple Conditional Statement Switch-Case with Real time Example"
        ],
        "BASIC JAVA : Different Operator in Java": [
          "Operator in JAVA - Introduction",
          "Operator - Unary Operator with Practical Examples",
          "Operator - Arithmetic Operator with Practical Examples",
          "Operator - Relational Operator with Practical Examples",
          "Operator - Bitwise And vs Logical And with Practical Examples",
          "Operator - Bitwise OR vs Logical OR with Practical Examples",
          "Operator - Ternary Operator with Practical Examples",
          "Operator - Assignment Operator with Practical Examples",
          "Interview Questions and Teaching Materials"
        ],
        "BASIC JAVA : Package in Java with Practical": [
          "Introduction to Package",
          "Concepts of Creating Package",
          "Why we need Package and fully qualified name ?",
          "Practicals Examples on Package",
          "Types of Package"
        ],
        "BASIC JAVA : Modifiers Concepts in Java with Practical - Must Watch": [
          "Introductions to Access Modifier",
          "Modifier - Practical Examples on Access Modifier - I",
          "Modifier - Practical Examples on Access Modifier - II",
          "Modifier - Summary of Access Modifier",
          "Modifier - Introductions to Non Access Modifier",
          "Modifier - Different's Types of Non Access modifiers",
          "Modifier - Practical Examples on Non Access Modifier",
          "Modifier - Summary of Non Access Modifier"
        ],
        "BASIC JAVA : Arrays and It's Use with Real time Example": [
          "Array - Why We need Array ?",
          "Array - Basic Object Creation",
          "Array - Single Dimentional Array",
          "Array - Different Example of Array",
          "Array - Multidimensional Array",
          "Array - 2D Array Explanation Part - I",
          "Array - 2D array explanation Part - II",
          "Interview Questions and Teaching Materials"
        ]
      },
      "requirements": [
        "*******You need NOT have any Prior JAVA experience to start this course*********",
        "******Anyone can follow this course comfortably******"
      ],
      "description": "Master Java from Scratch: A Complete Guide to Java Programming & OOPS Concepts!\nCourse Updated Regularly with Latest Examples & Real-Time Scenarios!\nAre you ready to learn Java and open doors to high-paying tech jobs? Whether you're starting from scratch or looking to strengthen your programming skills, this course has you covered!\nJava is a versatile, general-purpose programming language used in software development, mobile apps, web applications, and more. With its object-oriented design and cross-platform capabilities, Java remains one of the most in-demand programming languages worldwide.\n\n\nWhy Choose This Java Course?\nUnique, Real-Time Learning Experience:\nThis is the only course that covers Java with real-time examples, helping you understand why and when to use different approaches.\nWe provide you with a clear path from beginner concepts to advanced object-oriented programming (OOP), making it suitable for absolute beginners.\nNo prior coding experience required! We start from the very basics and gradually build up to more complex topics like Java OOPS concepts and frameworks.\nIndustry-Level Examples:\nLearn Java through real-time scenarios that show you how different components work in actual industry projects.\nGain the confidence to implement Java and use it in a professional setting, whether you're working in software development, automation, or web development.\nMore Than 9+ Hours of High-Quality Content:\nPacked with real-life examples, live demos, and hands-on exercises.\nIncludes interview questions after each section to help you prepare for your next job and ace your interviews.\n\n\nWhat Will You Learn?\nBasic Java Concepts: Start with the fundamentals and master the core Java concepts.\nObject-Oriented Programming (OOP): Dive into encapsulation, inheritance, polymorphism, and abstraction with practical coding examples.\nJava Frameworks: Get an introduction to basic frameworks and tools used in real-world projects.\nHands-on Coding: Apply what you learn with live coding demonstrations and practical exercises.\nInterview Preparation: Strengthen your understanding with quiz questions and mock interviews based on industry standards.\nJava in Action: Gain the skills to automate tasks, build web apps, or work on enterprise-level projects.\n\n\nWhy This Course Is Different From Others?\nNo Experience Needed: We assume you have no prior programming experience. All you need is a desire to learn!\nReal-World Relevance: Every topic is covered with examples directly related to industry use cases, making you job-ready.\nLearn by Doing: Practice-based learning through exercises and live projects.\nLifetime Access: Revisit the material anytime you want, whether you’re on the web app or the mobile app.\nInterview-Ready: We include 200+ interview questions and tips to help you get hired in your first Java developer job.\n\n\nWho Should Enroll?\nBeginners with no prior programming experience who want to start learning Java from scratch.\nAspiring Java Developers who want to master Java fundamentals and OOPS concepts.\nTest Automation Engineers looking to use Java for test automation and Selenium frameworks.\nDevelopers who want to get better at Java programming and object-oriented design.\nCareer Changers looking to transition into the world of software development with Java.\nStudents or professionals preparing for Java developer interviews and coding assessments.\n\n\nWhat Makes This Course the Best Choice?\nComprehensive Content: From Java basics to advanced OOPS concepts, we cover it all!\nReal-World Focus: Learn Java by working on real-life problems and examples.\nHands-On Experience: Practical coding sessions and live demonstrations for every concept.\nComplete Interview Guide: Prepare for interviews with real-time interview questions and quizzes after each section.\n\n\nMost students are enrol from below categories:\nJava Programming from Scratch\nLearn Java for Beginners\nJava OOPS Concepts\nCore Java Programming\nMaster Java for Beginners\nJava Object-Oriented Programming\nJava for Software Development\nJava Developer Course\nJava Interview Preparation\nJava Programming and OOP Concepts\nJava Development Tutorial\nJava Programming for Automation\nJava Coding for Web Development\nJava Basic to Advanced\nLearn Java for High-Paying Jobs\nJava Frameworks and OOPs Course\nJava Coding for Beginners\nJava Developer Interview Questions\nJava Automation with Java\nJava Tutorial with Real-Time Examples\n\n\nThis is life time supported course - Any time you can access these course via Mobile App or Web App\nEnrol today, and start your Java programming journey from scratch!\n\n\nRegards,\nPankaj Gupta",
      "target_audience": [
        "* Manual testers, Non-programming aware testers interested in learning Java/Automation",
        "* Freshers/Graduates/ Software Testers",
        "* Automation Tester",
        "* Any Developer who have to implement something using JAVA",
        "* Anyone who wants to Understand Basic of JAVA"
      ]
    },
    {
      "title": "Create a NEW programming Language from scratch",
      "url": "https://www.udemy.com/course/create-a-new-programming-language-from-scratch/",
      "bio": "Learn to create programming language and create a compiler for programming language from scratch",
      "objectives": [
        "On completion of this course you could create your OWN programming Language,",
        "And you would be able to design your own compiler implementing all the concepts",
        "behind such as including LEXICAL Analysis, PARSING, etc.",
        "You will learn some concepts of Compiler Design with practical examples"
      ],
      "course_content": {
        "Introduction": [
          "Part-1 Introduction and fundamentals with GRAMMAR and AST",
          "Part-2 Exploring LEXER, PARSER and COMPILER",
          "Creating a Programing language (Optional Reading)"
        ],
        "More Concepts and Jump Start": [
          "Part-3 More concepts and Project Specification",
          "Part-4 Jump Start with Calculator Language"
        ],
        "Enhancing our Language to support Variables, strings, pre-defined methods": [
          "Part-5 Programming Language Approach",
          "Part-6 Enhancing Language to support Variables, Strings, and pre-defined methods",
          "Fundamental Concepts"
        ]
      },
      "requirements": [
        "You must be familiar with any programming language at beginner level.",
        "You might need familiarity of some concepts in Compiler Design and Automata, and you need to be familiar with Java Programming language.",
        "Although if you don't have any exposure to these terms, you can still benefit from this course, but you should try to learn more on Compiler Design and Automata later."
      ],
      "description": "Welcome to this course, where you would learn how you create a programming language with some functionalities, right from the beginning in short amount of time. The key concepts involved in a programming languages are Compiler Design and Theory of Automata. You might need familiarity of some concepts in these domains, and you need to be familiar with Java Programming language. Although if you don't have any exposure to these terms, you can still benefit from this course, but you should try to learn more on Compiler Design and Automata later. These are the core building blocks of a programming language, being complex topics, and we tried to simplify a few of them and provide a quick roadmap of steps involved in developing a completely new Programming Language.\nBefore heading to create a Programming language, you may need to be clear with what kind of Programming language you would like to develop. Just put a sheet of paper and write your requirements beforehand, based on these questions:\nWill it be based on a Compiler or an Interpreter or both?\nDoes it require UNICODE literals (for non-English syntax, like Hindi, Tamil, Chinese, Russian, Arabic, etc.)\nOr can it be written with ASCII (for English syntax or Roman script)\nWould it require bytecode, or does it directly convert to machine code?\nIf it requires bytecode, can you use any existing bytecode program like JVM?\nWill it be an Object Oriented language like Java, Python or Procedural like C?\nWould you require bootstrapping (writing compiler in the same NEW language you are creating) or not?\nWould you require to manually perform operations like Lexical Analysis, Parsing, Syntax tree, etc or will you Automate some of these?\nYou can ask yourself more such questions, and here you will be learning to create a programming language that will follow this set of features:\nIt will be based on Compiler\nIt will be implemented in ASCII (as the new language is based on English)\nYes, it will be implementing bytecode, and based on JVM (Java Virtual Machine)\nIt will be a simple procedural language, but you can add Object Oriented and other feature later.\nIts compiler will be written in Java, No bootstrapping involved.\nSome parts of the compiler will be automated\nIn the beginning of this course, you will learn about the Grammar. You will learn how to create a grammar file and what are the next steps involved in creating the programming language. Next you will be learning about Lexical Analysis, Parsing and Compiler Design. In the following section you will learn how to create a simple calculator based programming language, and in the last section you will learn how to enhance language to support variables. You would be able to print strings, perform operations on variables. Later you can add control statements in a similar manner.",
      "target_audience": [
        "Anyone who is passionate about creating His/Her very OWN Programming Language. Also for learners who want to explore into designing a COMPILER."
      ]
    },
    {
      "title": "Data Structure, Algorithm & Design Pattern in C# & .NET Core",
      "url": "https://www.udemy.com/course/data-structure-algorithm-design-pattern-in-c-net-core/",
      "bio": "Implement basic data structures and algorithms in C# to code faster by implementing high-quality design patterns",
      "objectives": [
        "Implement algorithms such as the Tower of Hanoi on stacks of C# objects",
        "Build enhanced applications by using hash tables, dictionaries, and sets",
        "Effectively find the shortest path in the graph",
        "Write better code by exploring SOLID principles",
        "Maintain and expand your code with Dependency Inversion in modern C# applications",
        "Get familiar with the Singleton design Pattern to work with single instances",
        "Look for value changes using the Observer pattern"
      ],
      "course_content": {
        "Beginning Data Structures and Algorithms in C#": [
          "The Course Overview",
          "Programming Language and Data types",
          "Installation and Configuration of the IDE",
          "Input and Output",
          "Arrays",
          "Multi-Dimensional Arrays",
          "Jagged Arrays",
          "Selection Sort and Insertion Sort",
          "Bubble Sort and Quick Sort",
          "Simple Lists",
          "Sorted and Linked Lists",
          "Circular-Linked Lists",
          "Stacks",
          "Queues",
          "Priority Queues",
          "Hash Tables",
          "Dictionaries",
          "Sorted Dictionaries",
          "Hash Sets",
          "Sorted Sets",
          "Basic Trees",
          "Binary Trees",
          "Binary Search Trees",
          "Test Your Knowledge"
        ],
        "Design Patterns using C# and .NET Core": [
          "The Course Overview",
          "Introduction to SOLID",
          "The Single Responsibility Principle",
          "The Open/Closed Principle",
          "The Liskov Substitution Principle",
          "The Interface Segregation Principle",
          "The Dependency Inversion Principle",
          "Introduction to Design Patterns",
          "The Singleton Pattern",
          "The Factory Pattern",
          "Loose Coupling",
          "The Object Pool",
          "Introduction to Dependency Injection",
          "Creating a Custom Container",
          "The Built-in ASP.NET Core IoC Container",
          "Singleton Versus Transient Versus Scoped",
          "The Decorator Pattern",
          "The Adapter Pattern",
          "The Facade Pattern",
          "The Composite Pattern",
          "The Proxy Pattern",
          "The Strategy Pattern",
          "The Observer Pattern",
          "The Command Pattern",
          "The Template Method",
          "The State Pattern",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Basic C# programming knowledge would be an added advantage."
      ],
      "description": "Data structures allow you to organize data efficiently, but critical to various problems and their suitable implementation can provide a complete solution that acts like reusable code; whereas design patterns are reusable solutions to common programming problems where they speed up the development process by providing tested, proven development paradigms.\nThis course follows a practical approach, where you'll first start learning about arrays, lists, dictionaries, and sets together with real-world examples of your application. Then, you'll be learning creational design patterns, patterns related to the creation of objects, such as Singleton, Factory, and Dependency Injection. Next, you'll gain deep knowledge about dependency Inversion pattern, which will teach you how to write highly extensible, maintainable, and testable code along with insights into structural & behavioral design patterns.\nBy end of this course, you will be able to build your own desktop applications in C# 7.x much faster and with ease also improve the maintainability and testability of your application and gain the confidence to start a new project with Functional Programming paradigms.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Beginning Data Structures and Algorithms in C# you will learn how to use various data structures while developing in the C# language as well as how to implement some of the most common algorithms used with such data structures. Initially, you will get to know arrays, lists, dictionaries, and sets together with real-world examples of your application. Then you will learn how to create and use stacks and queues. In the following part of the book, more complex data structures will be introduced—trees and graphs—together with some algorithms for searching the shortest path in a graph. We will also discuss how to organize code in a manageable, consistent, and extendable way. By the end of the course, you will have learned how to build components that are easy to understand, debug, and use in different applications.\nThe second course, Design Patterns using C# and .NET Core starts at the nuts-and-bolts level and shows you everything through to advanced patterns and features, going in-depth to give you the knowledge you need. You will begin this course with an introduction to SOLID principles, which will introduce you to clean-code concepts and will elevate your skills. With this knowledge in your toolbox, you will be ready to move on to studying creational design patterns, patterns related to the creation of objects, such as Singleton, Factory, and Dependency Injection. You will then acquire more in-depth knowledge of one specific creational pattern, the Dependency Inversion pattern, which will teach you how to write highly extensible, maintainable, and testable code. Moving on, you will get your hands dirty with structural design patterns and you will complete this course by learning the last group of patterns: behavioral design patterns. By the end of this course you will be very confident in implementing a new feature in C# and .NET Core because, every time you have a problem, the correct design pattern will spontaneously come to mind.\nAbout the Authors:\nMarcin Jamro, PhD, is an entrepreneur and researcher, as well as a developer and architect of various kinds of applications. He is the President of the Board at TITUTO Sp. z o.o. [Ltd.] in Rzeszów, Poland. Marcin is interested in many aspects of computer science, including software engineering and project management. He is the author of two other books—Windows Phone 8 Game Development (2013) and Windows Application Development Cookbook (2017), both by Packt Publishing. Marcin has published several papers, participated in many conferences, organized a few of them, and participated in two internships at Microsoft in Redmond, USA. He has MCP, MCTS, and MCPD certificates.\nDimitris Loukas is a software engineer currently writing Single Page Applications and using the latest JavaScript with Aurelia, Angular, C#, and .NET Core for a trading software firm. He has worked for two start-ups in the past, is active in the open source community, and loves taking up small side-projects. He has mastered Angular, Aurelia, and Vue.JS and is now interested in entering the ReactJS world. He is an early adopter of .NET Core and is fascinated by modern JavaScript and where the web is going.",
      "target_audience": [
        "This course is targeted at C# developers, C# software developers, C# application developers aiming to incorporate Functional Programming paradigms to build applications in a much faster and easy way."
      ]
    },
    {
      "title": "Learn C# Programming For Absolute Beginners From Scratch",
      "url": "https://www.udemy.com/course/learn-c-programming-for-absolute-beginners-from-scratch/",
      "bio": "Learn C# from scratch with easy to follow lectures that you can code along with.",
      "objectives": [
        "Develop your creative and technical skills to build apps written in C#",
        "Start a new career as a junior C# programmer or developer",
        "Program your own console apps",
        "Develop apps faster using visual studio"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "What is C#",
          "What is dotNet (.NET)",
          "What is Visual Studio",
          "Please Read"
        ],
        "Visual Studio 2019 Setup": [
          "Minimum Installation Requirements for visual studio 2019",
          "Installing Visual Studio 2019",
          "Creating a basic Console App",
          "Creating a basic Windows Forms App",
          "Creating a basic ASP.NET and C# Web App",
          "Running Projects outside Visual Studio Environment"
        ],
        "Create your first console and web app": [
          "Creating your first console app with a text editor",
          "Compile your first console app",
          "Create a simple C # Console App with visual studio",
          "Troubleshooting Code Compiling errors",
          "Create your first web app",
          "Add a web form",
          "Customize the controls",
          "Write code for the controls",
          "Understanding the web app we created.",
          "Working with solutions and projects in visual studio",
          "Code Challenge"
        ],
        "Data Types": [
          "Basic Data types",
          "What is a String",
          "Data type Conversion - Part 1",
          "Data type Conversion - Part 2",
          "Converting to string and truncating"
        ],
        "C# Essentials": [
          "What are Variables",
          "Guidelines to naming variables",
          "Arrays",
          "Challenge on Arrays",
          "Conditional Statements",
          "Lists",
          "List Concatenation",
          "Dictionaries",
          "Removing items from dictionaries",
          "Using Conditional Statements with Dictionaries",
          "While Loops",
          "Do While Loops",
          "For Loops",
          "Foreach Loops",
          "Switch Statements"
        ],
        "Basic Arithmetic Operators": [
          "Basic Maths Operators",
          "Using Basic Arithmetic Operators in your c# app",
          "Operator Precedence",
          "What is Concatenation",
          "Adding comments to your code"
        ],
        "Course Project: Create a Complete Maths Quiz": [
          "Creating the quiz form",
          "Adding the controls for addition",
          "Create the timer box",
          "Adding controls for substraction",
          "Adding controls for multiplication",
          "Adding controls for division",
          "Create the start button",
          "Generate Random Addition Maths Problems",
          "Generate Random Substraction Maths Problems",
          "Generate Random Multiplication Maths Problems",
          "Generate Random division Maths Problems",
          "Check Answer with a Check Answer Method()",
          "Add Enter Event Handlers For NumericUpDown Controls",
          "Implement a count down timer",
          "Thank You"
        ]
      },
      "requirements": [
        "You should be able to use a PC at a beginner level",
        "You should have visual studio . We will cover how to download and install that in the course",
        "You should be able to navigate the internet",
        "Desire to learn"
      ],
      "description": "Welcome to this C# absolute beginners course (pronounced C Sharp). C# is designed to be a simple, modern, general-purpose, object-oriented programming language, borrowing key concepts from several other languages, most notably Java.\nC# is an Object Oriented language and does not offer global variables or functions. Everything is wrapped in classes, even simple types like int and string, which inherits from the System.Object class.\nC# could  be compiled to machine code, but in real life, it's always used in combination with the .NET framework. Therefore, applications written in C#, requires the .NET framework to be installed on the computer running the application. While the .NET framework makes it possible to use a wide range of languages, C# is sometimes referred to as THE .NET language, perhaps because it was designed together with the framework hence it's popularity.\nC# is an object-oriented language designed by Microsoft and used by systems engineers, desktop programmers, and mobile app developers the world over.\nThis course  will  guide you through C#'s basics, its core syntax, and the fundamentals of writing strong C# code.  I will  show you how to install Visual Studio, a great IDE for developing in C#, and then dive into the language itself. Along the way, we will cover topics such as:\nDeclaring and initializing variables with a variety of data types\nData type Conversions and Truncating\nExploring  Basic Arithmetic operators\nCreate your first C# web and Console App\nTroubleshoot Compile errors\nControlling flow with conditional code\nCreating custom classes\nCreating a complete maths quiz that will generate random problems for the quiz taker to solve\nIf C# is your first step into programming or adding it your existing skillset, these training videos will help you understand the language and use it to build your own great software.\nWelcome :-)",
      "target_audience": [
        "This course is for beginner programmers",
        "This course is for absolute beginners to C# programming",
        "This course is for beginner web designers who want to add programming to their skills"
      ]
    },
    {
      "title": "Physics + Python - Solve basic physics problems with Python",
      "url": "https://www.udemy.com/course/physics-python-solve-physics-problems-with-python/",
      "bio": "Learn how to use the popular programming language Python to solve high school-level problems of physics",
      "objectives": [
        "You'll learn how to model problems of physics computationlly",
        "You'll develop algorithmic thinking",
        "You'll review some concepts of physics",
        "You'll learn one of the most popular programming languages"
      ],
      "course_content": {
        "Introduction": [
          "Course overview/introduction",
          "Introduction to Python",
          "COLAB environment"
        ],
        "Variables and data types": [
          "Variables and data types",
          "Arithmetics",
          "User input",
          "Exercises",
          "Solution: Calculating the force",
          "Solution: Gravitational force"
        ],
        "Strings": [
          "Strings: methods and manipulation",
          "Exercises",
          "Solution: Text manipulation",
          "Solution: Table construction"
        ],
        "Logical operators and conditional statements": [
          "Logical and relational operators",
          "Conditional statements",
          "Complex and nested conditions",
          "Exercises",
          "Solution: solving a quadratic equation",
          "Solution: Menu of thermal expansion calculation"
        ],
        "Loops": [
          "The for loops",
          "Nested for loops",
          "The while loops",
          "Exercises",
          "Solution: Menu of formulas",
          "Solution: Option menu with loops",
          "Solution: Distance from the soil in a free fall"
        ],
        "Collections": [
          "Tuples",
          "Lists",
          "Dictionaries",
          "Nested data structures",
          "Exercises",
          "Solution: Euclidean distance between atoms",
          "Solution: Temperatures in a list",
          "Solution: Atoms and atomic number",
          "Miniproject: simulating a physics exam",
          "Solution: part 1",
          "Solution: part 2"
        ],
        "Functions": [
          "Definition and introduction to functions",
          "Optional parameters, nested functions and docstrings",
          "Exercises",
          "Solution: temperature conversion",
          "Solution: Function of ideal gas law",
          "Solution: Function of the gravitational force formula",
          "Solution: Creating functions for the quadratic equation"
        ],
        "Modules in Python": [
          "Math module",
          "Time module",
          "Random module",
          "Exercises",
          "Solution: Projectile motion",
          "Solution: Free fall time"
        ],
        "Errors and exceptions in Python": [
          "Errors and exceptions in Python",
          "Treating errors and exceptions",
          "Exercise",
          "Solution: Error treatment in inputs"
        ],
        "A brief introduction to the Numpy module": [
          "Difference in operations between numpy arrays and lists",
          "Methods available both in arrays and lists",
          "Arrays may have more than 1 dimension",
          "Additional functions of the numpy module",
          "Representing matrices and matrix multiplication",
          "Matrices and linear systems",
          "Exercises",
          "Solution: Manipulating arrays",
          "Solution: new arrays",
          "Solution: Linear system in an electric circuit"
        ]
      },
      "requirements": [
        "Basic knowledge of Math",
        "Basic knowledge of Physics",
        "No prior knowledge in Programming is required"
      ],
      "description": "Did you know that, nowadays, programming is everywhere, especially in science? This course is for those who want to model basic problems of physics computationally. In this course, we will use one of the most popular programming languages: Python! Python is a programming language used in different fields, such as data science, statistics, artificial intelligence, and also scientific computing.\n\n\nHere, we will use this programming language to solve basic problems of physics. By basic problems of physics, I mean high school level problems, like calculating the velocity, solving electric circuits, thermal dilation, etc. A perfect match for those that are in basic scientific areas and want to start learning how to program!\n\n\nAt the end of the course, you will have a brief introduction to two third-party libraries of Python:\n1-Numpy, which is primarily used for number crunching and linear algebra, and\n2-Matplotlib, the most commonly used library to plot data in Python.\nEach session of the course is divided into three parts:\n\n\n1-Basic Python lectures:\nIn these lessons, you will learn how to use the basic commands, data structures and functions of Python\n2-Exercises:\nIn these lessons, I propose exercises to be solved and explain how these exercises are supposed to be solved\n3-Solution:\nIn these videos, I show you the solution of the exercises step-by-step\n\n\nThroughout this course, you'll solve 20+ exercises to model problems of physics with Python, including:\nCalculating the force\nGravitational force formula\nText manipulation with strings\nThermal expansion formulas\nSolving a quadratic equation\nBuilding a menu to choose formulas\nCalculating the Euclidean distance between two atoms\nSimulating a physics exam\nCreating functions for temperature conversion\nPlotting the trajectory of an object\nand many more!!\n\n\nTherefore: if you wish to model basic physics' problems and learn one of the most popular programming languages, then this course is for you!",
      "target_audience": [
        "Students/professionals of math/physics",
        "Students/professionals of engineering",
        "Students/professionals of computer science",
        "Students/professionals of chemistry",
        "People interested in the subject"
      ]
    },
    {
      "title": "The Complete Java Developer Course from Scratch",
      "url": "https://www.udemy.com/course/complete-java-developer-course/",
      "bio": "Become an Oracle Certified job-ready developer. Mentored step-by-step by professionals. World-class study experience.",
      "objectives": [
        "Build your own Java applications using well-structured and standards-compliant code.",
        "Gain a solid understanding of object-oriented programming.",
        "Understand concepts such as inheritance, abstraction, interfaces, polymorphism and encapsulation.",
        "Understand Java expressions, keywords, statements and structures.",
        "Create a user interface using JavaFX.",
        "Be fluent with best-practices and new features of Java 9.",
        "Be industry-ready and experienced to achieve the Oracle Certified Associate (1Z0-808) certification."
      ],
      "course_content": {
        "Introduction & Setup": [
          "Welcome",
          "Set up Java and IntelliJ on Windows",
          "Setting up environment variables on Windows",
          "Set up Java and IntelliJ on Mac",
          "Set up Java and IntelliJ on Linux"
        ],
        "Hello, World!": [
          "Introduction",
          "How Java is Structured - JDK, JRE and JVM.",
          "Creating a Hello World Application.",
          "Behind the Scenes - Compiling and Interpreting Code Manually.",
          "Homework 1 - Make Yourself a Class!",
          "Homework 1 Solution - Make Yourself a Class!",
          "Quiz - Module 2"
        ],
        "OOP Concepts, Part 1: Introduction to Object-Oriented Programming": [
          "Introduction & Naming Conventions.",
          "Object-Oriented Programming: A Primer.",
          "Organising Your Code with Packages.",
          "Homework 2 - Devise a Class & Package Structure.",
          "Homework 2 Solution - Devise a Class & Package Structure.",
          "Quiz - Module 3"
        ],
        "Variables & Data Types, Part 1": [
          "Introduction.",
          "What is a variable?",
          "Java’s Primitive Data Types.",
          "Assignment and Expression Statements.",
          "Homework 3 - Pick the Right Data Type.",
          "Homework 3 Solution - Pick the Right Data Type.",
          "Quiz - Module 4"
        ],
        "Statements": [
          "Introduction.",
          "Code Blocks, Scopes and indentation best practices.",
          "Making Decisions using Conditional Statements (if statements).",
          "Using the Java switch Statement.",
          "Best Practice: Boolean Expressions in Conditional Statements.",
          "Repeating Blocks of Code using Iteration Statements (loops).",
          "Pre-Tested vs Post-Tested Loops.",
          "Transfer of Control Statements 1 (break and continue).",
          "Transfer of Control Statements 2 (return).",
          "Homework 4: An Application with Decisions and Loops.",
          "Homework 4 Solution: An Application with Decisions and Loops.",
          "Quiz - Module 5"
        ],
        "PROJECT - Test Your Mettle 1-3": [
          "Test Your Mettle 1, 2 and 3.",
          "Test Your Mettle #1 (Easy)",
          "Test Your Mettle #2 (Medium)",
          "Test Your Mettle #3 (Hard)",
          "Solution to Test Your Mettle 1.",
          "Solution to Test Your Mettle 2.",
          "Solution to Test Your Mettle 3."
        ],
        "Operators and Operator Precedence": [
          "Introduction.",
          "The Assignment Operators.",
          "Arithmetic Operators (+, -, /, *, %).",
          "Relational and Equality Operators (==, <, <=, >, >=).",
          "Logical Operators (&&, ||, !).",
          "Operator Precedence.",
          "Prefix and Postfix Increment/Decrement Operators (--, ++).",
          "Homework 5: The Insurance Premium Calculator.",
          "Homework 5 Solution: The Insurance Premium Calculator.",
          "Quiz - Module 7"
        ],
        "Strings and Their Methods": [
          "Introduction.",
          "Strings and String Concatenation.",
          "Useful String Methods.",
          "String Mutability and the StringBuilder class.",
          "String Equality.",
          "Homework 6: Using String and StringBuilder.",
          "Homework 6 Solution: Using String and StringBuilder.",
          "Quiz - Module 8"
        ],
        "User Input": [
          "Introduction.",
          "Using the Java Scanner class.",
          "Let’s Create a BMI Calculator.",
          "Homework 7: Create an ATM.",
          "Homework 7 Solution: Create an ATM.",
          "Quiz - Module 9"
        ],
        "PROJECT - Test Your Mettle 4-6": [
          "Test Your Mettle 4, 5 and 6.",
          "Test Your Mettle #4 (Easy)",
          "Test Your Mettle #5 (Medium)",
          "Test Your Mettle #6 (Hard)",
          "Solution to Test Your Mettle 4.",
          "Solution to Test Your Mettle 5.",
          "Solution to Test Your Mettle 6."
        ]
      },
      "requirements": [
        "No prior programming experience is needed. Beginners welcome!",
        "You should have a computer running Windows, macOS or Linux. We'll walk you through the installations needed.",
        "You should be able to use a computer and willing to learn."
      ],
      "description": "Quick Overview\nThis course is uniquely run by a leading ICT institute, featuring:\n\nBest-in-class instructor using a learn-by-doing, fun, bite-size approach to learning.\nProfessional content in line with the Oracle Certified Java Associate examination syllabus.\nBeautifully crafted videos in studio quality and detailed courseware (Presentations & Code Examples).\nReal-world projects and challenges with answer video explanations and files.\nPersonalised reviews through e-mail support from your instructor.\nAccess to a coach-supported forum.\n--\n\n\nThe Course\nA course that starts from absolute scratch, explains all the core concepts of programming, uses the popular and powerful Java language and the world’s best development tool (IntelliJ IDEA) to teach you.\n\nThe Instructor\nAn Oracle Certified Professional, with a passion for programming and technology with 15 years of industry experience, including more than a decade of training experience to individuals and teams of all sizes - including Fortune 500 brands.\n\nTestimonials\n\"Educator is very experienced, a great mentor, and a great character to spend time in a classroom with - always willing to help out outside of the lectures themselves. I learnt more than I expected to learn and I'm looking forward for my next course. System.out.println(\"Thank you ICE Malta!\");\"\n\"This isn't my first time studying at ICE Malta and once again I really enjoyed the study experience. I was an absolute beginner and now I'm very confident in my newfound skills.\"\n\"What a super study experience! I completed the course pumped and enthusiastic to transform my career into a winner.\"\n\"Amazing job! The educator always explained concepts in a practical, fun, easy way - brilliant.\"\n\"This course was a game-changer, it opened so many doors of opportunity.\"\n\nCourse Description\nThe course starts from scratch, but if you haven’t programmed in Java for a while, or would like to update your skills to Java SE 9, then this course has something for you too. During the course, we use IntelliJ IDEA as our development environment, however we also learn how to do away with an IDE and go behind the scenes to compile and run code manually. If you have previous experience using another IDE such as NetBeans, Eclipse or BlueJ - you are more than welcome to use any of those instead.\nThis study experience doesn’t just train you in Java - it gives you an education on the core concepts of programming and encourages you to develop your personal research and development skills to become a well rounded IT professional, regardless of technology used.\nThe course consists of 108 beautifully crafted lessons, each explaining a core programming concept and how this concept is implemented in Java. For each lesson, you get both a theoretical and practical explanation, and are provided with all slides and code examples used. Furthermore, the course also challenges you with interesting homework assignments as well as ‘Test Your Mettle’ bonus sections, to encourage personal research skills and feature discovery.\nAs an enrolled student, you will have access to all course material, a personal e-mail contact with your instructor as well as a discussion area. This means you will be able to carry out homework, Test Your Mettle challenges and even additional exercises, and have your questions answered directly by your instructor - too! Your success is our obsession.\nWe hope to join you on your exciting learning journey in the world of Java!\n#RaiseYourGame #MasterJava #EveryoneCanCode",
      "target_audience": [
        "Absolute beginners with no programming experience - we'll start from absolute scratch.",
        "Developers interested in learning another language.",
        "Java developers interested in sharpening their skills, learning best practices and understanding new Java 9 concepts.",
        "Developers interested in achieving the Oracle Certified Associate certification."
      ]
    },
    {
      "title": "ES6 Javascript Essentials (With Exercise Files)",
      "url": "https://www.udemy.com/course/es6-javascript-essentials/",
      "bio": "A step-by-step tutorial on whats new in ES6 with exercise files.",
      "objectives": [
        "Understand everything thats new in ES6",
        "Write better Javascript code",
        "Use Babel to take advantage to everything new in ES6"
      ],
      "course_content": {},
      "requirements": [
        "Basic Javascript"
      ],
      "description": "Welcome to ES6 Javascript Essentials! In this course we will go over everything new in ES6. There are two main factors that make this course different than other courses out there going over the same topic.\nYou get exercise files included at no additional cost to you. You will be able to follow along with me throughout the videos, and have the finished code at the end of each vide.\nI will spend more time on the more important features so you can truly master them. I want this course to make you an overall better developer. Not just give you an overview on everything new in ES6. In this course, I make sure we dedicate more time to certain topics where it is necessary.\nThis course is divided up into three main sections. The first two, are what I consider to be the more important sections. The last section is the nice-to-haves. Things you might not use everyday, but can still be very beneficial to your applications. There is a lot to learn in this course so I am excited to get started!",
      "target_audience": [
        "This course is more suited for those who have prior experience with Javascript."
      ]
    },
    {
      "title": "Functional Streams for Scala with FS2",
      "url": "https://www.udemy.com/course/functional-streams-for-scala-with-fs2/",
      "bio": "Dealing with flows of data the right way.",
      "objectives": [
        "Understand the differences between Lists and Streams",
        "Implement memory efficient tasks via streaming (e.g. file i/o)",
        "Build complex flows for your application with streams",
        "Handle concurrency and resource safety declaratively"
      ],
      "course_content": {},
      "requirements": [
        "Working knowledge of the Scala language",
        "Knowledge of the Cats Effect library"
      ],
      "description": "Many applications involve dealing with large flows of data. Examples are processing files in ETL jobs, reading results from a database or getting a big response from http calls. Handling large amounts of data often means sacrificing either readability or performance.\nWith streams, you can get the best of both worlds:\n- Data is processed using a constant amount of memory, even if the total amount of data is very large\n- The processing is built declaratively as if you were dealing with regular Lists or Sequences, with high level methods such as map, filter and flatMap\nFurthermore, streams in FS2 are effect-aware. They work in the context of an effect monad like IO, which enables them to do all sorts of useful stuff such as processing elements in parallel, throttling, retrying on failure and many more.\nIn this course we will turn streams inside out and learn things like:\n- Create and combine pure streams\n- Add effects to our streams and learn how to compose them\n- Handle errors & resources safely\n- Apply patterns involving time, such as retries, throttling and debouncing.\n- Build our own stream transformations with Pulls and Pipes\n- Handle concurrency using many different patterns\n- Communicate between streams using primitives such as Signals, Channels, Topics and Queues\nJoin me in this journey and add yet another amazing tool to your functional programming toolkit!",
      "target_audience": [
        "Scala functional developers with some experience who want to add functional stream to their toolkit"
      ]
    },
    {
      "title": "The Ultimate Scratch Programming Course",
      "url": "https://www.udemy.com/course/scratch2021/",
      "bio": "For non-programming working professionals and kids",
      "objectives": [
        "Start thinking like programmers",
        "Develop animations and games in scratch",
        "Better Coding Skills",
        "Ready to learn languages such as Java, C# and Python",
        "Develop big projects such as an arithmetic calculator and Tic Tac Toe Game"
      ],
      "course_content": {
        "Introduction": [
          "Course Contents",
          "Join Scratch",
          "Understanding Scratch Interface",
          "Creating Your Very First Scratch Project"
        ],
        "All About Motion and Movement on Scratch Screen": [
          "Understanding 2D Cartesian Plane",
          "Moving Sprites on the Screen",
          "Mastering Motion Blocks",
          "First Programming Challenge",
          "Second Programming Challenge",
          "More Motion Blocks"
        ],
        "Event Driven Programming": [
          "Introduction to Events Blocks and Event Driven Programming",
          "Animation Project: Flying Parrot",
          "Animation Project: Roaming Cat"
        ],
        "Looks Blocks": [
          "Introduction to Looks Blocks"
        ],
        "Introduction to Sounds": [
          "Introduction to Sound Blocks",
          "Animation Project 3: Using Looks and Sound Blocks"
        ],
        "Understanding Control Structures": [
          "Mastering Control Blocks"
        ],
        "Understanding Sensing Blocks": [
          "Mastering Sensing Blocks"
        ],
        "Understanding Operator Blocks": [
          "Mastering Operator Blocks"
        ],
        "Develop Pong Game": [
          "Creating User Interface Elements",
          "Adding Functionality",
          "Adding Multiple Levels to the Game"
        ],
        "Develop Jumping Game": [
          "Jumping Game"
        ]
      },
      "requirements": [
        "Willingness to learn. No programming experience is required."
      ],
      "description": "This course introduces you to the world of programming with the help of the Scratch programming language. You develop multiple animations, games, and some serious programming projects during this course. After completing this course you will be ready to learn more complex programming languages such as Java, Python, and C#.\nOther than various examples, you will be creating 3 major animations, 2 interesting games, and 2 advanced projects during this course.\nThe focus of the course is to enable you to think like programmers and be able to develop any animation or game on your own. This is where this course deviates from the typical scratch courses where the focus is usually only on follow-along instructions.\nDedicated lessons have been provided on various code blocks categories such as Motion, Looks, Sound, Control, Events, Sensing, and Operator.\nEach section has examples and projects to enforce the concepts taught in each section.\nSince the course is designed for kids and nonprogrammers, I maintain a special focus on the fun part of the learning.\nI am confident that this course will enable the kids and other students to unleash their creativity and provide them with a competitive advantage over their classmates or fellows.\nI am looking forward to seeing you on the course.",
      "target_audience": [
        "For kids of age 7 to 70 and beyond",
        "For people with zero programming language who aspire to be programmers",
        "For people who think programming is difficult"
      ]
    },
    {
      "title": "Master Object Oriented Programming (OOP) in Python 3",
      "url": "https://www.udemy.com/course/oop-in-python-3/",
      "bio": "OOP in Python 3 | All four pillars of Object Oriented Programming in Python 3 for beginners from scratch",
      "objectives": [
        "Understand What is Object Oriented Programming",
        "Why we need to learn Object Oriented Programming",
        "Understand how Classes & Objects work in OOP in Python",
        "Understand Abstraction & Encapsulation witn tiny project",
        "Understand the importance of Inheritance and it's advantages",
        "You will learn how Polymorphism helps us to save our memory",
        "In fact every topic need to cover in Object Oritented Programming in Python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course & Course Content"
        ],
        "Installing & Setting Up Environment for Coding": [
          "Setting Up Coding Environment"
        ],
        "Basics of Classes & Objects": [
          "Introduction to Object Oriented Programming",
          "Concept of Classes & Objects",
          "Implementing Classes & Objects",
          "Instance Attributes & Class Attributes",
          "Instance Methods & Static Methods"
        ],
        "self & __int__ in Python": [
          "__int__ Special Method in Python",
          "self Parameter in Python"
        ],
        "First & Second Pillar of OOP => Encapsulation & Abstraction": [
          "Understanding the Concept of Encapsulation & Abstraction",
          "Implementing the concept of Encapsulation & Abstraction"
        ],
        "Third Pillar of OOP => Inheritance": [
          "Introduction to Inheritance & Single Inheritance",
          "Multilevel Inheritance",
          "Multiple Inheritance",
          "Diamond Shape Problem"
        ],
        "Access Modifiers OR Access Specifiers": [
          "Understanding the Concept of Access Specifiers in OOP"
        ],
        "Fourth Pillar of OOP => Polymorphism": [
          "Introduction to Polymorphism & Function Overriding",
          "super() method",
          "Function Overloading (NOT SUPPORTED IN PYTHON)",
          "Operator Overloading"
        ],
        "Abstract Classes & Abstract Methods": [
          "Clearing Concept of Abstract Classes & Abstract Methods"
        ],
        "Final Quiz": [
          "Final Quiz of Course"
        ]
      },
      "requirements": [
        "Basic Knowledge of Programming in Python",
        "A Computer / Laptop and a good internet connection"
      ],
      "description": "WHY WE NEED TO LEARN OBJECT-ORIENTED PROGRAMMING\nThere is no doubt that Python is one of the most powerful programming languages right now in the world. In every general-purpose programming language, Object-Oriented Programming (OOP) is the most important part to understand. If you want to grow in programming then you must need to learn all about OOP.\n\n\nWhen you move further in Python like Data Science or Machine Learning then there you definitely need OOP skills. Otherwise, you can't survive there. Also, Object-Oriented Programming (OOP) concepts are the first thing that is asked in any coding interview. It's compulsory for you to learn these concepts as a professional programmer.\n\n\nABOUT THIS COURSE:\nThis course is designed for all types of programmers, who want to enhance their skills. This course is crisp and clear to understand. Everything is to the point. No extra stuff is added. After taking this course you will be an intermediate Python Developer, then you can move further on and learn advanced libraries or modules of Python according to your field.\nThis course will cover all the concepts of Object-Oriented Programming and will make you confident in your skills. If you don't have basic knowledge, then you can go to my profile and take my FREE Python course for absolute beginners. Complete that and come back and take this course. That could be a better idea.\n\n\n\n\n===   Super Fiendly Support   ===\nIf you ever get stuck in any problem, I'm here to unstuck you. I always respond as fast as I can. Because I know there’s nothing worse than getting stuck into problems, especially programming problems. So, I am always here to support you.\n\n\n\n\nIf you know about data types, variables, conditional statements, loops, functions,s, and lists then you are good to go. Join the course right now without wasting any time.\n\n\nIn this course you will all about:\nClasses & Objects\nAttributes & Methods\nEncapsulation\nAbstraction\nInheritance\nPolymorphism\nand more many topics in OOP (Python)\n\n\nSo, you really make up your mind and take your Python programming skills to the next level. Then JOIN THIS COURSE RIGHT NOW!",
      "target_audience": [
        "Especially designed for Python Developers",
        "Students will basic knowledge of programming in Python",
        "Anyone who wants to boost his programming skills",
        "Anyone who wants to clear his concepts of Object Oriented Programming"
      ]
    },
    {
      "title": "Certified Python Exams for all Fields Chapter-Wise (2023)",
      "url": "https://www.udemy.com/course/python-certification-exam-preperation-chapter-wise-2023/",
      "bio": "Crack Job Interviews, University Exams, Professional Exams, Best Python Exams from Basics to Expertise Level Fields",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Now is the time to get certified for Python!\nThis course is designed to help you prepare for the Python Professional Certification exam by providing you with a series of chapter-wise practice tests.\nThis Exams all over contains 20 Chapters to give you the best thrilling experience on the Complete Python Programming Exam Tests!\nAbout:\nEvery Question has complete explanation.\nAll Questions are carried from the best programming institutes and all the knowledgeable areas.\nNo matter you are a student or a professional programmer, this exam is well designed for everyone from the experts.\n\n\nExam Syllabus (Chapter Wise):\nChapter 1: Introduction to Python\nWhat is Python?\nHistory of Python\nFeatures of Python\nAdvantages of using Python\nSetting up the Python environment\nRunning a Python program\nChapter 2: Variables, Data Types and Operators\nVariables and Naming Conventions\nData Types: Numbers, Strings, Booleans\nType Conversion and Type Checking\nOperators: Arithmetic, Assignment, Comparison, Logical, Bitwise\nChapter 3: Control Statements\nConditional Statements: if, else, elif\nLooping Statements: for loop, while loop\nLoop Control Statements: break, continue, pass\nNested loops and conditional statements\nChapter 4: Functions and Modules\nDefining and calling a function\nFunction Arguments: Positional, Keyword, Default and Variable-length arguments\nReturning values from a function\nModules: Creating and importing modules\nStandard Libraries\nChapter 5: Object-Oriented Programming (OOP) concepts\nClasses and Objects\nData Hiding and Encapsulation\nInheritance and Polymorphism\nAbstract classes and Interfaces\nChapter 6: File Handling and Input/Output Operations\nOpening and Closing Files\nReading and Writing to Files\nBinary Files and File Modes\nWorking with Directories\nChapter 7: Exception Handling\nWhat are exceptions?\nHandling exceptions using try and except blocks\nMultiple except blocks and else clause\nRaising exceptions\nChapter 8: Regular Expressions\nWhat are regular expressions?\nPattern matching and substitution\nMeta-characters and Character Classes\nRegular Expression functions in Python\nChapter 9: Working with Databases and SQL\nConnecting to a database\nCreating tables and inserting data\nRetrieving data from tables\nUpdating and Deleting data\nSQL Injection and Prevention\nChapter 10: Data Structures\nLists\nTuples\nDictionaries\nSets\nArrays\nChapter 11: NumPy and SciPy Libraries\nIntroduction to NumPy and SciPy\nArrays in NumPy\nMathematical Operations on Arrays\nLinear Algebra using SciPy\nChapter 12: Pandas Library\nIntroduction to Pandas\nData Structures in Pandas\nData Manipulation using Pandas\nData Analysis using Pandas\nChapter 13: Matplotlib Library\nIntroduction to Matplotlib\nTypes of Plots: Line, Bar, Scatter, Histogram, etc.\nCustomizing Plots\nSubplots and Figures\nChapter 14: Flask Web Framework\nIntroduction to Flask\nCreating a Flask Application\nRouting and Requests\nTemplates and Forms\nChapter 15: Django Web Framework\nIntroduction to Django\nCreating a Django Application\nModels, Views, and Templates\nAdmin Interface\nChapter 16: Machine Learning and Data Science with Python\nIntroduction to Machine Learning\nScikit-Learn Library\nLinear Regression\nClassification\nClustering\nChapter 17: Natural Language Processing (NLP) with Python\nIntroduction to NLP\nText Preprocessing\nText Classification and Sentiment Analysis\nNamed Entity Recognition\nChapter 18: GUI Programming with Tkinter Library\nIntroduction to Tkinter\nCreating a GUI Application\nWidgets and Layouts\nEvent Handling\nChapter 19: Advanced Python Concepts\nMultithreading and Concurrency\nNetworking\nGUI Toolkits: PyQt, Kivy, etc.\nDebugging and Profiling\nChapter 20: Secret\nSecret!\n\n\nNote: This exam Covers all the topics on Complete Python Programming from Scratch!\nWhat are you waiting for? Join now and get Certified!",
      "target_audience": [
        "Everybody who is preparing for the Python certification.",
        "Everybody who is preparing for a Python job interview.",
        "College Students who are having exams this will be the best option for your preparation.",
        "Professionals who want to test their knowledge and skills.",
        "Beginners developers who are planning to give interviews, and want to test their knowledge before giving Job Interview."
      ]
    },
    {
      "title": "Python OpenCV Based GUI Application Development using PyQt5",
      "url": "https://www.udemy.com/course/python-opencv-pyqt5/",
      "bio": "Create stunning professional looking image processing Python OpenCV GUI application easily.",
      "objectives": [
        "Will be able to create their stunning image processing GUI application",
        "Customized Application Development"
      ],
      "course_content": {
        "OpenCV GUI Development for Images": [
          "Overview of the Course",
          "1- Install Python 3.6, PyQt5 and OpenCV 3.3.1",
          "2- Install PyCharm IDE, PyQt5 and PyQT5 Designer Tool",
          "3- Create Your First Python GUI Application using PyQT5",
          "4- Laod and Display OpenCV Image using QLabel and QPushButton",
          "5- Load and Save an OpenCV Image Using QFileDialog and Button",
          "6- Load Image, Apply Canny Edge Algorithm and Save Image",
          "7- OpenCV createTrackbar for Canny Edge using PyQt5 Slider",
          "8- Eye & Face Detection and Display to the QLable using PyQT5",
          "9- Rotate an Image and Save it Using PyQt5 GUI Window"
        ],
        "OpenCV GUI Development for Webcam Video Feed or Video Files": [
          "10- Display WebCam Video Feed on QLabel",
          "11- Apply Canny to OpenCV WebCam Video",
          "12- OpenCV Face Detection Application using PyQt5"
        ],
        "Download Resource Files": [
          "Download Tutorial Code Files"
        ]
      },
      "requirements": [
        "Python Programming Knowledge",
        "Basic Understanding of Image"
      ],
      "description": "In this course, we will learn how to develop Graphical User Interface (GUI) for processing images as well as processing real-time webcam video feeds or video files. You will learn how to quickly acquire an image from your camera using  OpenCV and then use PyQt5 library to build the user interface.\nYou may find many instructional videos about how to use Python for everyday tasks, but actually finding a detailed guide about how to build a desktop application using Python is quite difficult. Building GUIs aren't so complicated, what actually makes them complex are the factors you need to consider that will let your user interact with the program.\nUpon completion, this course will provide you a better comprehensive overview of how to design a GUI-application framework, splitting important elements into modules. You'll also learn building applications completely from scratch and also learn about making professional look-alike apps using PyQt5 library. Every step will be provided with detailed instructions in this course. So get ready to build your first image processing GUI application.",
      "target_audience": [
        "Beginner OpenCV developers who are interested to create awesome GUI application for their everyday use.",
        "Any image processing based company employee",
        "College, University Students"
      ]
    },
    {
      "title": "RabbitMQ with PHP : Asynchronous Messaging with PHP",
      "url": "https://www.udemy.com/course/rabbitmq-with-php-asynchronous-messaging-with-php/",
      "bio": "Messaging Service With RabbitMQ. Learn Asynchronous Messaging, Queue, Exchange And Routing Of Messages With PHP",
      "objectives": [
        "Messaging Service",
        "RabbitMQ Message Broker",
        "How to create Exchange & Queue",
        "Publishing Message To RabbitMQ",
        "Consuming Message From RabbitMQ",
        "Real Time Example with JSON Message.",
        "Different Types Of Exchanges With Examples"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction RabbitMQ and Messaging Service": [
          "Understanding Messaging Service",
          "What is Exchange and Queue ?",
          "Different Types Of Exchanges",
          "RabbitMQ Installation"
        ],
        "Getting Started With RabbitMQ": [
          "Create Queue in RabbitMQ",
          "PHP Project Set Up",
          "Publishing Message To Queue",
          "Consuming Message From Queue",
          "Multiple Consumers Scenario & Round Robin Fashion",
          "Real Time Example with JSON message"
        ],
        "Direct Exchange": [
          "What is Direct Exchange ?",
          "Creating Direct Exchange & Binding Queues with it",
          "Publishing Message To Direct Exchange"
        ],
        "Fanout Exchange": [
          "What is Fanout Exchange ?",
          "Creating Fanout Exchange & Binding Queues with it",
          "Publishing Message To Fanout Exchange"
        ],
        "Topic Exchange": [
          "What is Topic Exchange ?",
          "Creating Topic Exchange & Binding Queues with it",
          "Publishing Message To Topic Exchange"
        ],
        "Headers Exchange": [
          "What is Headers Exchange ?",
          "Creating Headers Exchange & Binding Queues with it",
          "Publishing Message To Headers Exchange"
        ],
        "Thank You": [
          "Bonus Lecture",
          "Thank You"
        ]
      },
      "requirements": [
        "Knowledge of Core PHP is required.",
        "Having knowledge of Composer will add an advantage."
      ],
      "description": "***** Some Reviews From Students *****\n\" learned a lot about rabbitmq in one shot. The explanations are good and provided step by step guidance. Keep up the good work and Thank you. \"\n\" I solved my problem with the solution from this course. Thank you. \"\n\" It was a good match for me \"\nVery good on explaining the different types of Queues in Rabbit MQ. Really liked it. For understanding queueing in RabbitMQ I can recommend this course.\nRabbitMQ : It is an open  source message broker software. You might have heard Messaging Service by which two PHP applications can communicate with each other.\nUsing RabbitMQ message broker two PHP applications can interact with each other in same way as we human being do by text message.\nMessage can not go directly from one PHP app to other and hence we need Queue and Exchange.\nDo you aware of RabbitMQ ,Queue, Exchange OR Messaging Service ? If NO, then you came to right place as you will learn all these things in this course. You can say Its all in one for you.\nThis course is all about RabbitMQ with core PHP.\nLet me give you an idea that what you will learn from this course.\nYou will learn concept of Messaging Service & RabbitMQ Message Broker.\nYou will learn how to publish and consume messages using core PHP and RabbitMQ message broker.\nYou will learn different types of exchanges like Direct, Fanout, Topic and Headers Exchange in details with Examples.\nYou will learn real time examples using JSON message where you can implement RabbitMQ with PHP to boost up performance of your application.\nNow what are you waiting for ?\nGrab the course quickly and get started to learn RabbitMQ message broker with PHP.\nSee you in the course...Till then Happy Learning and Happy Coding...",
      "target_audience": [
        "Any PHP Developer Curious For RabbitMQ and Messaging Service."
      ]
    },
    {
      "title": "JSP and Servlets - The Complete Course",
      "url": "https://www.udemy.com/course/jsp-and-servlets-the-complete-course/",
      "bio": "JSP, Servlets for Beginners. Learn JSP and Servlet practically from Experts. Learn Web Applications With Java",
      "objectives": [
        "Set up your JSP/Servlet development environment with Tomcat and Eclipse",
        "Build a fully functioning JSP and Servlets web applications from scratch",
        "Create-Deploy Servlets & Understand Servlet LifeCycle",
        "Learn how to Manage Session and Implicit Objects",
        "Develop Dynamic Web Applications",
        "MVC in JSP",
        "Login App using Servlet & MySQL",
        "Login app using JSP"
      ],
      "course_content": {
        "Introduction": [
          "Tomat Setup and Create Web App",
          "Servlet & HTTP Servlet Theory"
        ],
        "Lifecycle of Servlet": [
          "Lifecycle of Servlet"
        ],
        "Getting Started": [
          "Sending Back HTML Response",
          "Servlet Request and Post Request",
          "Request Dispatcher Forward & Include",
          "Servlet Config"
        ],
        "Login App": [
          "Login App Using Servlet",
          "Login App Using Servlet & Mysql"
        ],
        "Session Tracking": [
          "Session Tracking Techniques",
          "Session Tracking Servlet",
          "Login App Using Cookies for Session Management",
          "HTTP Session for Session Tracking",
          "Session Tracking Hidden form Field",
          "Session Tracking Using URL Rewriting"
        ],
        "Servlet Config & Context": [
          "Servlet Config and Servlet Context Theory",
          "Servlet Config and Servlet Context Examples",
          "Attribute in Servlet with Example"
        ],
        "Filter": [
          "Filter and its Example",
          "Filter Config Example"
        ],
        "JSP Scripting Elements": [
          "JSP Scripting Elements"
        ],
        "JSP Implicit Objects": [
          "JSP Implicit Objects",
          "Response Implicit Objects",
          "Implicit Object Config",
          "Application Implicit Object",
          "Implicit Object Session",
          "Page Context, Page and Exception Implicit Object"
        ],
        "JSP & Page Directive": [
          "JSP Directive & Page Directive Theory",
          "Page Directive Example"
        ]
      },
      "requirements": [
        "Eclipse IDE",
        "Tomcat Web Server",
        "Basic JAVA knowledge is required"
      ],
      "description": "The JSP and Servlet Programming training course covers dynamic web development using JSP and Servlets. This course focuses on the key concepts, technologies, syntaxes, and best-practices required when building dynamic driven web applications.\n\nThis course is ideal for Front-end designers and Java developers looking to implement the back-end logic of a web application.\nAt the end of JSP / Servlet Training course, you will be able to:\nSet up your JSP/Servlet development environment with Tomcat and Eclipse\nBuild a fully functioning JSP and Servlets web applications from scratch\nCreate-Deploy Servlets & Understand Servlet LifeCycle\nLearn how to Manage Session and Implicit Objects\nDevelop Dynamic Web Applications\nLearn MVC in JSP\nLogin App using Servlet & MySQL\nLogin app using JSP\nBenefits of Taking This JSP/Servlets Course\nJSP Servlets is one of the most popular asset for modern web development industry. Knowing JSP and Servlets can get you a nice job with a decent salary or if you are already working, you may get a good raise in salary.\nJoin in, As for learning JSP Servlets, this course is the authority and equally important you will even get a certification of completion that validates your skills.\nFeel forward to have a look at course description and demo videos and we look forward to see you inside.",
      "target_audience": [
        "Front-end designers and Java developers looking to implement the back-end logic of a web application.",
        "Anyone who wants to master web apps using JSP and Servlets",
        "The course is ideal for all Java developers i.e from beginners to expert"
      ]
    },
    {
      "title": "Mastering LEETCODE with Easiest Explaination (Javascript)",
      "url": "https://www.udemy.com/course/learn-leetcode-with-easy-explaination-javascript/",
      "bio": "Learn How to Solve Leetcode Problems using Chrome Debugging with Easy Explanation.Excel Coding Interviews and Algorithms",
      "objectives": [
        "Javascript Bascis",
        "Easy way to tackle Leetcode Problem",
        "Clear Job Interviews",
        "Confident in solving programming problems"
      ],
      "course_content": {
        "Introduction": [
          "Beginner Friendly Competitive Programming Course 2024 (LEETCODE)",
          "What To Expect In This Course"
        ],
        "TOP INTERVIEW PROBLEMS SOLVED(easy -medium- hard)": [
          "Merge Sorted Array(Problem - 1 - EASY)",
          "Remove Element(Problem -2 - EASY)",
          "Remove Duplicated From Sorted Array(Problem - 3 - EASY)",
          "Remove Duplicates from Sorted Array II (Problem - 4 - MEDIUM - *Debugging)",
          "Majority Element (Problem - 5 - EASY) Boyer-Moore Voting Algorithm"
        ],
        "Debugging Solution (Deep Dive Into Solution)": [
          "(DEBUGGING - 1920) EASY SOLUTION"
        ],
        "Lecture 2: 1929. Concatenation of Array (Free Leetcode Solution)": [
          "Leetcode Solution 1929. Concatenation of Array"
        ],
        "ARRAY based EASY Leetcode Problems": [
          "Leetcode Solution 1480. Running Sum of 1d Array",
          "Leetcode Solution 2011. Final Value of Variable After Performing Operations",
          "Leetcode Solution 2469. Convert the Temperature",
          "Leetcode Solution 2769. Find the Maximum Achievable Number",
          "Leetcode Solution 2798. Number of Employees Who Met the Target",
          "Leetcode Solution 2413. Smallest Even Multiple",
          "Leetcode Solution 2824. Count Pairs Whose Sum is Less than Target"
        ],
        "Leetcode Problems EASY": [
          "Problem 1",
          "Problem 2",
          "Problem 3",
          "Problem 4",
          "Problem 5",
          "Lecture 10",
          "Leetcode 2652. Sum Multiples",
          "Lecture 1816. Truncate Sentence"
        ],
        "Linked List (Deep Dive Easy Explanation)": [
          "Leetcode 2807: Insert-greatest-common-divisors-in-linked-list"
        ],
        "Easy Level Leetcode Problem Deep Dive": [
          "Leetcode 2574. Left and Right Sum Differences",
          "Leetcode 1773. Count Items Matching a Rule",
          "Leetcode 2626. Array Reduce Transformation",
          "Leetcode 2194. Cells in a Range on an Excel Sheet"
        ],
        "Medium Level Leetcode Probelms Deep Dive": [
          "Leetcode 2396. Strictly Palindromic Number",
          "Leetcode 2621. Sleep",
          "Leetcode 2161. Partition Array According to Given Pivot",
          "Leetcode 2545. Sort the Students by Their Kth Score"
        ]
      },
      "requirements": [
        "Basics of Javascript"
      ],
      "description": "The course  is not to teach you how to scramble your way into a top tech company, but to help you learn how to acquire algorithmic problem solving skills, which in turn will help you get the jobs you want. We'll start with some general tips that apply pretty much to anything that you want to get better at\nConsistency is key. You want to start as much in advance as you can, and do it daily. Doing it for one hour a day is better than doing it for seven hours on Sunday only.Focus on active improvement. This means that if you're on auto-pilot or if you're not focusing, then it's OK to just stop and come back later.Remember that everybody is different and there is no one-size-fits-all. So feel free to deviate from this (or any) guide.\n\n\nEventually, you're going to find a problem that's too hard, and you'll get stuck. That's totally fine. In fact, it's absolutely fine (and perhaps even efficient) to give up on some problems. It's possible that it requires an algorithm or data structure that you haven't seen before, and there's no need for you to pull your hair out trying to re-discover an algorithm or data structure. Here are some tips for how to get un-stuck.\n\nSO join this course and learn proramming and how to solve leetcode problems using javascript",
      "target_audience": [
        "Beginner Javascript Developers"
      ]
    },
    {
      "title": "Serverless Microservices on AWS in 10 Hours",
      "url": "https://www.udemy.com/course/serverless-microservices-on-aws-in-10-hours/",
      "bio": "The perfect course to implementing cost-effective, and scalable Microservices and APIs using serverless computing on AWS",
      "objectives": [
        "Improve the reusability, composability, and maintainability of code",
        "Create a highly available serverless microservice data API",
        "Build, deploy and run your serverless configuration and code",
        "Implement over 15 microservices architecture patterns without needing containers or EC2 instances",
        "Speed up delivery, flexibility and time to market using serverless microservices",
        "Add your microservices to a continuous integration & continuous delivery pipeline"
      ],
      "course_content": {
        "Building a Scalable Serverless Microservice REST Data API": [
          "The Course Overview",
          "Monolithic and Microservice Architectures",
          "Virtual Machines, Containers, and Serverless Computing",
          "Serverless Computing in AWS",
          "Setting Up Your Serverless Environment in AWS",
          "Overview of Security in AWS",
          "Overview of AWS Identity and Access Management (IAM)",
          "Securing Your Serverless Microservice",
          "Building a Serverless Microservice Data API",
          "Setting Up a Lambda in the AWS Management Console",
          "Setting Up the API Gateway and Integrating It with a Lambda Proxy",
          "Creating and Writing to a NoSQL Database Called DynamoDB",
          "Creating a Lambda to Query DynamoDB",
          "Connecting API Gateway, Lambda, and DynamoDB",
          "Unit Testing Your Python Lambda Code",
          "Running and Debugging Your AWS Lambda Code Locally",
          "Integration Testing Using Real Test Data",
          "Performance and End-to-End Testing at Scale",
          "Overview of Serverless Stack Build and Deploy Options",
          "Creating an S3 Bucket, IAM Policies, and IAM Roles Resources",
          "Building and Deploying API Gateway, Lambda, and DynamoDB",
          "Building a Scalable Serverless Microservice Data API Conclusions",
          "Next Course",
          "Test Your Knowledge"
        ],
        "Implementing Serverless Microservices Architecture Patterns": [
          "The Course Overview",
          "Overview of Microservice Integration Patterns",
          "Communication Styles and Decomposition Microservice Patterns",
          "Serverless Computing to Implement Microservice Patterns",
          "Implementing Database Per Service and Shared Database Patterns",
          "Accessing DynamoDB from API Gateway Via a Lambda Function",
          "Accessing DynamoDB Directly from API Gateway",
          "Implementing the Transaction Log Tailing Pattern",
          "Implementing the Saga Pattern",
          "Securing Your DynamoDB Databases",
          "Relational Versus Non-Relational Databases",
          "Overview of Amazon Virtual Private Cloud",
          "Setting Up Amazon Virtual Private Cloud for Accessing RDS and Aurora",
          "Setting Up RDS and Accessing It from Your Local Network",
          "Accessing RDS from API Gateway Via a Lambda Function",
          "Accessing Aurora from API Gateway Via a Lambda Function",
          "Securing Your RDS and Aurora Databases",
          "API Gateway and API Composition Patterns",
          "Implementing the Serverless API Composition Patterns",
          "Event Sourcing and CQRS Patterns",
          "Architectures of the Serverless Event Sourcing Pattern",
          "Implementing the Serverless Event Sourcing Pattern",
          "Architectures of the Serverless CQRS Pattern",
          "Implementing the Serverless CQRS Pattern",
          "Securing Your Event Streams and Queries",
          "Monitoring and Observability Patterns",
          "Implementing Serverless Metrics and Health Check API Patterns",
          "Implementing the Serverless Centralized Logging Pattern",
          "Implementing the Serverless Audit Logging Pattern",
          "Implementing the Serverless Distributed Tracing Pattern",
          "Creating a Serverless Discovery Service and Catalogue",
          "Continuous Integration and Continuous Delivery",
          "Serverless Continuous Integration and Continuous Delivery Setup",
          "Using CodeCommit for the Serverless Data API Code",
          "Using CodeBuild to Build-Test the Serverless Data API Stack",
          "Using CodePipeline as CI/CD for the Serverless Data API Stack",
          "Using Other CI/CD Solutions with the Serverless Data API Stack",
          "When to Use and Not Use Serverless Computing?",
          "Estimating Serverless Stack Costs",
          "Database and Event Streaming Scalability",
          "Web Scale Best Practices",
          "Conclusion",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Basic knowledge of programming and AWS is required. Familiarity with DevOps will be beneficial, but not necessary."
      ],
      "description": "Microservices are a popular new approach to building maintainable, scalable, cloud-based applications. AWS is the perfect platform for hosting Microservices. Recently, there has been a growing interest in serverless computing due to the increase in developer productivity, built in auto-scaling abilities, and reduced operational costs.In combining both microservices and serverless computing, organizations will benefit from having the servers and capacity planning managed by the cloud provider, making them much easier to deploy and run at scale.\nThis comprehensive 2-in-1 course is a step-by-step tutorial which is a perfect course to implementing microservices using serverless computing on AWS. Build highly available microservices to power applications of any size and scale. Get to grips with microservices and overcome the limitations and challenges experienced in traditional monolithic deployments. Design a highly available and cost-efficient microservices application using AWS. Create a system where the infrastructure, scalability, and security are managed by AWS. Finally, reduce your support, maintenance, and infrastructure costs.\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Building a Scalable Serverless Microservice REST Data API, covers practical solutions to building Serverless applications. In this course we show you how to build an end-to-end serverless application for your organization. We have selected a data API use case that could reduce costs and give you more flexibility in how you and your clients consume or present your application, metrics and insight data. We make use of the latest serverless deployment and build framework, share our experience on testing, and provide best practices for running a serverless stack in a production environment.\n\nThe second course, Implementing Serverless Microservices Architecture Patterns, covers implementing Microservices using Serverless Computing on AWS. In this course, We will show you how Serverless computing can be used to implement the majority of the Microservice architecture patterns and when put in a continuous integration & continuous delivery pipeline; can dramatically increase the delivery speed, productivity and flexibility of the development team in your organization, while reducing the overall running, operational and maintenance costs. By the end of the course, you’ll be able to build, test, deploy, scale and monitor your microservices with ease using Serverless computing in a continuous delivery pipeline.\nBy the end of this course, you will be able to build, test, deploy, scale, and monitor your APIs and microservices  with ease using serverless computing in a continuous delivery pipeline.\n\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nRichard T. Freeman, PhD currently works for JustGiving, a tech-for-good social platform for online giving that’s helped 25 million users in 164 countries raise $5 billion for good causes. He is also offering independent and short-term freelance cloud architecture & machine learning consultancy services. Richard is a hands-on certified AWS Solutions Architect, Data & Machine Learning Engineer with proven success in delivering cloud-based big data analytics, data science, high-volume, and scalable solutions. At Capgemini, he worked on large and complex projects for Fortune Global 500 companies and has experience in extremely diverse, challenging and multi-cultural business environments. Richard has a solid background in computer science and holds a Master of Engineering (MEng) in computer systems engineering and a Doctorate (Ph.D.) in machine learning, artificial intelligence and natural language processing. See his website for his latest blog posts and speaking engagements. He has worked in nonprofit, insurance, retail banking, recruitment, financial services, financial regulators, central government and e-commerce sectors, where he:\n-Provided the delivery, architecture and technical consulting on client site for complex event processing, business intelligence, enterprise content management, and business process management solutions.\n-Delivered in-house production cloud-based big data solutions for large-scale graph, machine learning, natural language processing, serverless, cloud data warehousing, ETL data pipeline, recommendation engines, and real-time streaming analytics systems.\n-Worked closely with IBM and AWS and presented at industry events and summits, published research articles in numerous journals, presented at conferences and acted as a peer-reviewer.\n-Has over four years of production experience with Serverless computing on AWS.",
      "target_audience": [
        "This course is for developers, architects, and DevOps administrators who would like to build and deploy serverless APIs and microservices with AWS for their organizations."
      ]
    },
    {
      "title": "MATLAB Graphical User Interface with the MATLAB GUIDE tool",
      "url": "https://www.udemy.com/course/matlab-graphical-user-interface-guide-basics-to-advanced/",
      "bio": "Learn from Top Experts in the field, wrap your code with a graphical user interface by using the GUIDE...",
      "objectives": [
        "Work with a variety of User Interface Elements and be familiar with all of their useful properties",
        "Visualize Data Within The Interface Application",
        "Create Different Kinds of Menus - Toolbar, Menubar, Context Menu",
        "Work with the Handles structure",
        "Validate Incoming Data and Prevent false inputs from the end users"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to The Course (MUST WATCH)",
          "Creating a New GUIDE Project",
          "An Overview of the Available Elements",
          "Object Browser, Property Inspector and the Most Commonly Modified Properties",
          "Generating The Actual Code Behind The Elements"
        ],
        "Available Elements - Your First Project": [
          "Single Choice Elements - Radio Buttons, Button Groups, PopUp Menu and Listboxes",
          "The \"handles\" Structure and State Elements - Checkboxes and Toggle Buttons",
          "Input and Cosmetic Elements - EditText, StaticText and Panels Part 1",
          "Input and Cosmetic Elements - EditText, StaticText and Panels Part 2",
          "Action Elements - The Push Button",
          "Mid Cleaning Up and Documenting Our Code",
          "Data Visualizing Elements - Axes",
          "Decorating the Data Visualization Axes",
          "The Slider Element - Limited Value User Input",
          "Final Cleaning Up and Documenting Our Code",
          "Align The Elements in The Graphical User Interface",
          "Renaming a Project The Correct Way!",
          "First Project Source Code"
        ],
        "Binaural Beat Project": [
          "Binaural Beat Project - Build the Skeleton of the Project",
          "Visual Interface Validation - Default Values and Strings",
          "Validating the User Input - Error Messages and Default Values",
          "Interaction Between Separate Callbacks - Updating The \"handles\" Structure",
          "The \"guidata\" Function Explained Again",
          "Second Project Source Code"
        ],
        "Toolbars": [
          "What is a Toolbar and Adding a Predefined Toolbar Menu Items",
          "Creating Your Own Custom Toolbars"
        ],
        "Toolbar Menus and Context Menus": [
          "Creating a Menubar type Menu - Save and Load Data for Your Application",
          "Creating a Context type Menu - Change the Axes Properties",
          "Copying an Axes into the Windows Clipboard From Your Application",
          "First Project Source Code with Menus"
        ],
        "Packaging Your GUI Into a Standalone Application": [
          "Packaging the Application into a MATLAB Application",
          "Packaging the Application into a Standalone App that does NOT Require MATLAB"
        ],
        "Project 3 - Loading and Saving Files": [
          "Introduction to the Project - Transforming a Colorful Image to Black and White",
          "Loading the image file and visualizing it (working with the Open dialog window)",
          "Graying the colorful image and resetting it back to the original image",
          "Saving the grayed image file (working with the Save dialog window)",
          "Source Code - Graying an Image"
        ]
      },
      "requirements": [
        "Familiarity with MATLAB Programming - Conditional Statements, Loops",
        "Familiarity with Arrays and Data Types",
        "MATLAB Installed on your Computer",
        "Desire to Learn Something New :)"
      ],
      "description": "What You will learn in this course:\nYou will be intimately familiar with every available tool in the GUIDE Environment\nYou will know how to work with every available element in the GUIDE Environment and practice it by building two different projects\nWork with the handles structure and use it to interact between separate elements\nVisualize Data within Your GUI\nValidate incoming data from your end users and handle it\nCreate Toolbar Menus for easier use of the end users\nCreate Menubars and Context menus, to add even more functionality to your applications\nPackage your app into a MATLAB App or a Standalone Application that does not require the user to have MATLAB installed\nBuild Two Big projects, one oriented more towards the interface part of the project and the other oriented more at the \"behind the scenes\" part\nWhy to Develop Graphical User Interface?\nOften times people judge a book by the cover. And for sure the code that you wrote works flawlessly, but does it have a good looking cover and how easy is it to use it? And if you want your code to be used by people who have no coding skills or at the very least, their skills are not good enough to understand it. Why not wrap your code with an interface that will enable anyone to use it? Let us help you with this!\nThe Development of a intuitive graphical user interface can make your work more popular, since it will be available to a much broader audience of people, that way it can reach more people, and be valued by more people. The graphical user interface, gives the ability to the end user to use the “point and click” strategy, to work more easily with the software application, so the need for the user to know the actual language in which it was written is eliminated.\nWhy with MATLAB?\nMatlab (Matrix Laboratory) is a programming language of a higher level with interactive development environment, that can satisfy the needs even of the most demanding software developers.\nThe advantages of MATLAB are:\nSpecially designed to work with data structures\nBuilt on a modular principle from many different toolboxes, that make specialized functions available for many scientific fields – finances, cartography, numerical biology, data processing, signal processing, parallel calculations and many others)\nPlatform independent language – it works on any Operating System\nIt can directly communicate and operate with hardware periphery (sound cards, video cameras, Arduino, DAQ systems and many more)\nGives you the ability to package your code into an (.exe) executable file\nRich documentation with thorough explanations of all of its functions, available both offline in the MATLAB environment itself, and in the MATLAB Central website\nWhy with MATLAB GUIDE?\nGUIDE (Graphical User Interface Development Environment) is a MATLAB integrated working environment that provides instruments and techniques for accelerated, easy and intuitive design and development of GUI for user oriented applications. The approach is straightforward, arrange the user interface elements using the GUIDE Layout Editor, then GUIDE will automatically generate the code behind these elements (Callbacks), which are responsible for the behavior of each of your elements, and finally populate these automatically generated Callbacks with their appropriate behaviors (code), package the app and make it available to the end users.\nIn conclusion:\nIf you ever wanted to be a movie producer, this is a great opportunity – become the screenwriter of your own graphical user interface and a producer of its implementation. Create the product, share it with the users, and enjoy the end result! Don’t be the only one who understands and uses your own code, wrap it in an interface and make it available to the broader audience! As always – Express Yourself!",
      "target_audience": [
        "Researchers",
        "Engineers",
        "University Assistants & Professors",
        "Students"
      ]
    },
    {
      "title": "Master Data Visualization with Python and Matplotlib 3",
      "url": "https://www.udemy.com/course/master-data-visualization-with-python-and-matplotlib-3/",
      "bio": "Become a data visualizations expert with Python and Matplotlib 3 by learning effective data visualization recipes.",
      "objectives": [
        "Use Matplotlib for data visualization with the Python programming language.",
        "Construct different types of plot such as lines and scatters, bar plots, and histograms.",
        "Use Matplotlib 3’s animation and interactive capabilities to spice up your data visualizations",
        "Use Matplotlib 3’s animation and interactive capabilities to spice up your data visualizations",
        "Visualize data using PyPlot; plot functions, create complex subplots and troubleshoot issues.",
        "Build interactive plots with Matplotlib 3. Understand and implement event handling and GUI widgets and learn how to turn interactive plots into videos.",
        "Build Matplotlib 3D graphs functionality to visualize data with multiple variables and dimensions.",
        "Draw on plots, ranging from inserting lines, adding text, and drawing different shapes and annotations.",
        "Draw special-purpose advanced plots such as non-Cartesian plots, vector fields, violin graphs, and more."
      ],
      "course_content": {
        "Matplotlib for Python Developers": [
          "The Course Overview",
          "Understanding Data, Dimensionality, and Why We Plot",
          "Setting Up Your Environment",
          "Beginning with the Most Basic Plots",
          "Differentiating Line and Scatter Plots",
          "Constructing Bar Plots and Histograms",
          "Exploring Images and Contours",
          "Working on Plots with Uncertainties",
          "Looking at Other Useful Plot Types",
          "Making Multiple Panel Plots",
          "Using Color Bars and Legends",
          "Workingwith the Components of a Matplotlib Plot",
          "Figure and Axes – How Do They Work?",
          "Working with Transformations",
          "Controlling Axes and Ticks",
          "Ticker Formatting",
          "Working on Back Ends",
          "The Jupyter Notebook",
          "Using Pandas to Manipulate Tabular Data",
          "Slicing and Dicing Pandas Data",
          "Pandas Built-in Plotting",
          "Test your knowledge"
        ],
        "Developing Advanced Plots with Matplotlib": [
          "The Course Overview",
          "Customizing Pylab in Style",
          "Color Deep Dive",
          "Working on Non-Trivial Layouts",
          "The Matplotlib Configuration Files",
          "Putting Lines in Place",
          "Adding Text on Your Plots",
          "Playing with Polygons and Shapes",
          "Versatile Annotating",
          "Non-Cartesian Plots",
          "Plotting Vector Fields",
          "Statistics with Boxes and Violins",
          "Visualizing Ordinal and Tabular Data",
          "Plotting with 3D Axes",
          "Looking at Various 3D Plot Types",
          "The Basemap Methods",
          "Plotting on Map Projections",
          "Adding Geography",
          "Interactive Plots in the Jupyter Notebook",
          "Event Handling with Plot Callbacks",
          "GUI Neutral Widgets",
          "Making Movies",
          "Test your knowledge"
        ],
        "Data Visualization Recipes with Python and Matplotlib 3": [
          "Course Overview",
          "Getting Data into Matplotlib",
          "Drawing Scatter Plots",
          "Creating Line Plots",
          "Visualizing Data with Bar Charts",
          "Drawing Subplots",
          "Creating Histograms",
          "Building Heatmaps",
          "Plotting Data on Box Plots",
          "Drawing Pie Charts",
          "Customizing Labels, Titles, and Legends",
          "Adding Grids and Customizing Ticks",
          "Using Matplotlib Styles",
          "Creating Custom Styles",
          "Plot Annotation",
          "Build Plots from the Ground-Up Using Plot Scaffolding",
          "Building Custom Plots Using Figures",
          "Customizing Plot Axes",
          "Building 3D Graphs Using Wireframe",
          "Creating 3D Scatter Plots",
          "Drawing 3D Bar Charts",
          "Customizing Wireframes",
          "Drawing Animated Graphs",
          "Building an Animated Histogram",
          "Creating Animated subplots",
          "Adding Interactivity to Plots",
          "Creating Visualizations that Update Interactively with Data",
          "Change the Plot Sizes",
          "Save Plot Image to a File",
          "Create Legend Outside the Plot",
          "Display Plots Inline in a Notebook",
          "Clear a Plot",
          "Change Font Sizes of Plot Elements",
          "Troubleshoot Value Errors",
          "Test your knowledge"
        ],
        "Mastering Matplotlib 3": [
          "The Course Overview",
          "Creating Plots Using the Plot Function",
          "Creating Subplots",
          "Subplot Parameters",
          "Learn How Pyplot Works",
          "Troubleshooting Pyplot",
          "Creating Interactive Plots",
          "Event Handling with Plot Callbacks",
          "GUI Neutral Widgets",
          "Converting Interactive Plots into Videos",
          "Customizing Pylab in Style",
          "Color Deep Dive",
          "Working on Non-Trivial Layouts",
          "The Matplotlib Configuration Files",
          "Stylesheets",
          "Putting Lines in Place",
          "Adding Text to Your Plots",
          "Playing with Polygons and Shapes",
          "Versatile Annotating",
          "Non-Cartesian Plots",
          "Plotting Vector Fields",
          "Statistics with Boxes and Violins",
          "Visualizing Ordinal and Tabular Data",
          "Plotting with 3D Axes",
          "Looking at Various 3D Plot Types",
          "The Basemap Methods",
          "Plotting on Map Projections",
          "Adding Geography",
          "Visualizing Categorical Data",
          "Plotting Distributions",
          "Visualizing Data on Multi-Plot Grids",
          "Customizing Plots"
        ]
      },
      "requirements": [
        "Prior Python programming experience is a requirement, whereas experience with Data Analysis and Machine Learning analysis will be helpful."
      ],
      "description": "Matplotlib is a multi-platform data visualization tool for creating advanced-level and interactive data visualizations that showcase insights from your datasets. One of Matplotlib’s most important features is its ability to work well with many operating systems and graphics backends. Matplotlib helps in customizing your data plots, building 3D plots and tackling real-world data with ease. Python’s elegant syntax and dynamic typing, along with its interpreted nature, make it a perfect language for data visualization. If you're a Python Developer or a data scientist looking to create advanced-level Data Visualizations that showcase insights from your datasets with Matplotlib 3, then this Course is perfect for you!\nThis comprehensive 4-in-1 course follows a step-by-step approach to entering the world of data Visualization with Python and Matplotlib 3. To begin with, you’ll use various aspects of data visualization with Matplotlib to construct different types of plot such as lines and scatters, bar plots, and histograms. You’ll use Matplotlib 3’s animation and interactive capabilities to spice up your data visualizations with a real-world dataset of stocks. Finally, you’ll master Matplotlib by exploring the advanced features and making complex data visualization concepts seem very easy.\nBy the end of the course, you’ll become a data visualizations expert with Matplotlib 3 by learning effective and practical data visualization recipes.\nContents and Overview\nThis training program includes 4 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Matplotlib for Python Developers, covers understanding the basic fundamentals of plotting and data visualization using Matplotlib. In this course, we hit the ground running and quickly learn how to make beautiful, illuminating figures with Matplotlib and a handful of other Python tools. We understand data dimensionality and set up an environment by beginning with basic plots. We enter into the exciting world of data visualization and plotting. You'll work with line and scatter plots and construct bar plots and histograms. You'll also explore images, contours, and histograms in depth. Plot scaffolding is a very interesting topic wherein you'll be taken through axes and figures to help you design excellent plots. You'll learn how to control axes and ticks, and change fonts and colors. You'll work on backends and transformations. Then lastly you'll explore the most important companions for Matplotlib, Pandas, and Jupyter used widely for data manipulation, analysis, and visualization. By the end of this course, you'll be able to construct effective and beautiful data plots using the Matplotlib library for the Python programming language.\nThe second course, Developing Advanced Plots with Matplotlib, covers exploring advanced plots and functions with Matplotlib. In this video course, you’ll get hands-on with customizing your data plots with the help of Matplotlib. You’ll start with customizing plots, making a handful of special-purpose plots, and building 3D plots. You’ll explore non-trivial layouts, Pylab customization, and more on tile configuration. You’ll be able to add text, put lines in plots, and also handle polygons, shapes, and annotations. Non-Cartesian and vector plots are exciting to construct, and you’ll explore them further in this tutorial. You’ll delve into niche plots and visualizing ordinal and tabular data. In this video, you’ll be exploring 3D plotting, one of the best features when it comes to 3D data visualization, along with Jupyter Notebook, widgets, and creating movies for enhanced data representation. Geospatial plotting will be also be explored. Finally, you’ll learn how to create interactive plots with the help of Jupyter. By the end of this video tutorial, you’ll be able to construct advanced plots with additional customization techniques and 3D plot types.\nThe third course, Data Visualization Recipes with Python and Matplotlib 3, covers practical recipes for creating interactive data visualizations easily with Matplotlib 3. This course cuts down all the complexities and unnecessary details. It boils it down to the things you really need to get those visualizations going quickly and efficiently. The course gives you practical recipes to do what exactly needs to be done in the minimum amount of time. All the examples are based on real-world data with practical visualization solutions. By the end of the course, you’ll be able to get the most out of data visualizations where Matplotlib 3 is concerned.\nThe fourth course, Mastering Matplotlib 3, covers mastering the power of data visualization with Matplotlib 3. This course will help you delve into the latest version of Matplotlib, 3, in a step-by-step and engaging manner. Through this course, you will master advanced Matplotlib concepts and will be able to tackle any Data Visualization project with ease and with increasing complexity. By the end of the course, you will have honed your expertise and mastered data visualization using the full potential of Matplotlib 3.\nBy the end of the course, you’ll become a data visualizations expert with Matplotlib 3 by learning effective and practical data visualization recipes.\nAbout the Authors\nBenjamin Keller is currently a Ph.D. candidate at McMaster University and achieved his BSc in Physics with a minor in Computer Science from the University of Calgary in 2011. His current research involves numerical modeling of galaxy evolution over cosmological timescales. As an undergraduate at the U of C, he worked on stacking radio polarization to examine faint extragalactic sources. He also worked in the POSSUM Working Group 2 to determine the requirements for stacking applications for the Australian SKA Pathfinder (ASKAP) radio telescope. His current research is focused on developing and improving subgrid models used in simulations of galaxy formation and evolution. He is particularly interested in questions involving stellar feedback (supernovae, stellar winds, and so on) and its impact on galaxies and their surrounding intergalactic medium.\n\n\nHarish Garg is a co-founder and software professional with more than 18 years of software industry experience. He currently runs a software consultancy that specializes in the data analytics and data science domain. He has been programming in Python for more than 12 years and has been using Python for data analytics and data science for 6 years. He has developed numerous courses in the data science domain and has also published a book involving data science with Python, including Matplotlib.\n\n\nAmaya Nayak is a Data Science Domain consultant with BignumWorks Software LLP. She has more than 10 years' experience in the fields of Python programming, data analysis, and visualization using Python and JavaScript, using tools such as D3.js, Matplotlib, ggplot, and more. With over 5 years' experience as a data scientist, she works on various data analysis tasks such as statistical data, data munging, data extraction, data visualization, and data validation.",
      "target_audience": [
        "This Course is perfect for:",
        "Python Developers, Data Scientists, and Data Analysts who are familiar with Matplotlib and want to master their skill on an advanced level to get better in creating effective and interactive data visualizations."
      ]
    },
    {
      "title": "ArcPy for Data Management and Geoprocessing with ArcGIS Pro",
      "url": "https://www.udemy.com/course/arcpy-for-data-management-and-geoprocessing-with-arcgis-pro/",
      "bio": "Learn from an Esri MVP! DISCOUNT CODE: OCTOBER2025",
      "objectives": [
        "DISCOUNT CODE: OCTOBER2025",
        "Leverage ArcPy for Geospatial Data Management workflows.",
        "Learn the fundamentals of ArcGIS Pro Geoprocessing tools using ArcPy.",
        "Become familiar with ESRI documentation for ArcPy Geoprocessing tools and functions.",
        "There's many ways to achieve a similar output, ArcPy offers many tools to achieve your goal.",
        "Complete workflows that chain multiple Geoprocessing tasks.",
        "Create a custom ArcTool for use in ArcGIS Pro"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of ArcGIS Pro",
        "Basic knowledge of Shapefiles, File Geodatabases, Feature Classes, and Tables",
        "Basic knowledge of Domains and Subtypes",
        "Basic knowledge of Python",
        "Basic knowledge of GIS core concepts."
      ],
      "description": "**DISCOUNT CODE**:\nUse the current month in uppercase followed by the year.\nExamples: SEPTEMBER2024, NOVEMBER2024, OCTOBER2025\n\n\nWant to stand out from the crowd? A little code goes a long way! Gaining an understanding of ArcPy and how to apply automation with regards to geospatial data management, data manipulation, and analysis via Geoprocessing tools will aid with standing out from the crowd and get you noticed. ArcPy is in high-demand, so up-skill today and put yourself in this high-demand category.\nArcPy is a fantastic ally for all your daily ArcGIS Pro tasks. This course will initially focus on using ArcPy for data management. Data management is often one of the most overlooked aspects of GIS and unfortunately can be the difference between a good GIS and a bad one. Good data practices open up the door for even better automation.\nLists are a big factor in ArcPy workings. You will look at creating lists of various objects such as workspaces, feature classes, and fields for examples, and perform actions on different elements. You will look at using ArcPy to describe the various elements and use lists and descriptions to generate a comprehensive data catalogue.\nAdding to the data management side, the course slides into data validation rules with domains and subtypes. Domains are used to constrain the value allowed for a particular field. Basically, they enforce data integrity. You will look at the whole suite of tools available for domains, from creating and altering, to applying to a field. Subtypes are used to categorize your data. Think of a road network, you can categorize roads into primary, secondary, and tertiary roads for example. You can set defaults values on fields in each subtype category that is automatically applied when creating a new feature. Subtypes can be used in tandem with domains to improve data integrity.\nNo we're getting into the heart of things. ArcPy is a great tool for creating templates and standardising your data structures. You will create a file geodatabase, a feature dataset, and a set of feature classes, all using ArcPy. We will take you through adding fields and take a look at a long list of tools associated with fields, from the Field Object itself, to creating a field (Add Field), altering a field, assign a default, field calculations, and mapping fields from one tool to another.\nThere's no getting away from Excel in today's GIS society. This course will embrace that fact here and look at some conversion tools; Table to Excel, Excel to Table, and the Export Table that allows a more diverse choice such as a CSV. You will create a point dataset from an Excel file and save it to memory showcasing several tools that get the job done. ArcPy offers an array of data conversion tools.\nI'd like to say that cursors are the main event but that would be doing the rest of the material a huge injustice. Cursors will rapidly become a daily routine in your ArcPy life. Cursors are used to read and write attributes and geometries. You can use the Search Cursor to read through a dataset, the Update Cursor to update attributes and geometries, and the Insert Cursor to add new records.\nArcPy boasts a host of general data tools to aid with data management, processing, and workflows. We will dive into them and perform checks; such as whether a dataset or data structure exists, testing for a schema lock; this is often the crux of geoprocessing that the data is locked, join datasets based on a common field, merge and append data.\nWhere would we be without the analysis tools provided by ArcGIS Pro? What about everyone's ultimate favourite tool, the Buffer? Well, we can use ArcPy for that too, and many more. ArcPy provides the bed for repeatable geospatial analysis through automation.\nSelecting data with ArcPy enables you to perform geoprocessing tasks on the subset. The most notorious are Select Layer by Attribute and Select Layer by Location, but there are others patiently waiting their turn to be called into an ArcPy script.\nFinally, you will create a custom ArcTool for use in ArcGIS Pro as a GUI and chain geoprocessing tasks to achieve a desired output.\n\n\nThis course uses PyScripter to write the Python code. You can use any code editor software that you prefer. The course solely focusses on ArcPy and no other third-party modules are utilized.\n\n\nThe ArcPy for Data Management and Geoprocessing with ArcGIS Pro course requires a Basic license for ArcGIS Pro. Only tools and workflows that can be performed at the basic license level are used and assessed during the course.\n\n\nPlease Note! ArcGIS Pro requires a license to use which is a paid license. You can get a 21-day free trial, or you can get a Personal Use license for a fraction of a Commercial license.\nIt is recommended to get the free trial if you have no other access to ArcGIS Pro software.\n\n\nYour course instructor, Glen Bambrick, has over 16 years' experience with GIS and geospatial data, with over half of those years utilizing ArcPy on major projects to standardize and automate workflows.\n\n\nBy the end of this course... you will be fully armed with the fundamentals of ArcPy for data management, manipulation, creation, analysis, and to perform repetitive workflows. You will have a deep understanding of capabilities of ArcPy and some knowledges of the nuances that can be encountered and how several tools can be used to achieve the same or similar output.\nThe ideal student for this course would have some basic knowledge of Python and is somewhat familiar with ArcGIS Pro. No knowledge of ArcPy is necessary, after all, that is what this course is for.\n\n\nWant to stand out from the crowd? Well what are you waiting for?",
      "target_audience": [
        "ArcGIS Pro users who want to begin their automation adventures with ArcPy.",
        "Geospatial Professionals who want to improve and innovate data management processes.",
        "GIS Analysts who want to automate repetitive Geoprocessing tasks."
      ]
    },
    {
      "title": "ROS2 for Beginners: Build Your First Robot with ESP32",
      "url": "https://www.udemy.com/course/ros2-for-beginners-build-your-first-robot-with-esp32/",
      "bio": "Explore Microros with ESP32 and Learn Command-Line Control to Master the ROS2 Framework",
      "objectives": [
        "Students will learn to assemble the drawing robot using provided CAD and circuit files, gaining hands-on experience in building a functional robotic system.",
        "Command-Line Control Mastery: Learners will grasp the fundamentals of ROS2 by mastering command-line control of their Lineturtle robot.",
        "MicroROS Integration and Understanding: Through step-by-step guidance, students will comprehend the integration of MicroROS into the Lineturtle robot.",
        "Unleash Creativity and Fun: By the end of the course, learners will have the knowledge and skills to unleash their creativity and have fun with their robots."
      ],
      "course_content": {
        "Basic Introduction": [
          "Introduction to Course",
          "What is ROS"
        ],
        "ROS2 Installation and command-line interface tools": [
          "ROS2 Installation",
          "Envirnoment Setup",
          "turtlesim simulator & rqt",
          "Understanding Nodes",
          "Explore ROS2 Topics",
          "Role of Services in ROS2",
          "What are ROS2 Parameters"
        ],
        "Creation of ROS2 Package and Fun Coding with Python and Cpp": [
          "Use of Colcon to build packages",
          "Customized Package Creation",
          "Publisher using C++",
          "Subscriber using C++",
          "Publisher using Python",
          "Launch in ROS2",
          "Transformation of Frames using tf2 library"
        ],
        "Joystick Magic and Microros Setup": [
          "Joystick Ineterface",
          "Setup the Microros",
          "Microros Command Velocity Topic example"
        ],
        "Craft Your Lineturtle Robot: 3D Printing and Circuitry Adventure!": [
          "Gathering Lineturtle's Essential Components",
          "Electrifying Lineturtle: Crafting the Robot's Nervous System"
        ],
        "Enabling Lineturtle Robot: Integrating Sensors and Actuators with ROS2": [
          "Bringing the Body to Life with 3D Printing",
          "Lighting the Path: A Deep Dive into Controlling LEDs",
          "Wireless Bridge: Linking Your Robot and PC via a common WiFi",
          "Mastering Servo Control for Precise Pen Manipulation",
          "Revealing Power: Visualizing Battery Level",
          "Decoding Motor Motion: Analyzing Encoder Ticks",
          "Robot Maneuvers: Navigating with the Command Velocity Topic",
          "Personalized Control: Customizing Joystick Configuration",
          "Attaining Complete Mastery over Robot Control with Python Node",
          "Perfecting the Robot Package: Launching with a Single Command"
        ],
        "Concluding the Lineturtle Experience: What's Next?": [
          "Lineturtle Robotics: Course Recap",
          "Lineturtle's Final Remarks"
        ]
      },
      "requirements": [
        "Basic Programming Skills: A fundamental understanding of Python, C++, and C programming is beneficial, as some portions of the course involve working with code and customizing the robot's behavior.",
        "Ubuntu Machine: Access to a computer running Ubuntu is required for setting up the ROS2 environment and working with MicroROS."
      ],
      "description": "Welcome to \"ROS2 Robotics for Beginners: Build Your First Drawing Robot,\" where creativity meets cutting-edge technology! This hands-on course is designed to introduce you to the exciting world of robotics using ROS2, the industry-standard Robot Operating System while creating your very own drawing robot.\nCourse Overview:\nAre you ready to embark on a journey of innovation, exploration, and fun? This course is your gateway to the fascinating world of robotics, and it's tailored specifically for beginners. No prior robotics experience is required; all you need is enthusiasm, a desire to learn, and a curious mind.\nKey Highlights:\nLearn ROS2 from Scratch: We'll start from the very beginning, guiding you through the essentials of ROS2. You'll grasp the fundamental concepts, understand ROS2 architecture, and learn how to work with ROS2 topics for seamless communication.\nBuild a Real Drawing Robot: Imagine having your own robot that can create beautiful drawings on any surface. In this course, you'll build \"Lineturtle,\" a customizable drawing robot capable of bringing your artistic visions to life. You'll learn to assemble the hardware, interface with servos, and mount a marker for drawing.\nJoystick Control and Autonomous Movement: Discover the thrill of controlling your robot's movements using a joystick. You'll explore manual control via the joystick interface and delve into autonomous movement using ROS2's \"/cmd_vel\" topic, enabling your robot to follow commands.\nUnleash Your Creativity: Lineturtle is not just a robot; it's a canvas for your imagination. Experiment with different patterns, designs, and colors. Learn to draw lines, and shapes, and even create your own artistic masterpieces.\nBattery-Powered and Rechargeable: Lineturtle is desigcned to keep the fun going. It features a long-lasting rechargeable battery, ensuring you have plenty of time to explore, draw, and innovate.\nComprehensive Learning: Along the way, we'll cover essential topics such as motor control, servo operation, LED control, and battery monitoring. You'll gain a deep understanding of how robots work, setting a solid foundation for future robotics projects.\nAccess to CAD and Circuit Files: We provide you with CAD files for 3D printing and circuit files for electronics. You'll have everything you need to build Lineturtle step by step.\nCommunity and Inspiration: Join the vibrant RoboFuntastic community! Connect with other learners, share your creations, and get inspired by the limitless possibilities of robotics.\nUnlock the secrets of robotics with \"ROS2 Robotics for Beginners: Build Your First Drawing Robot.\" Whether you're a hobbyist, a student, or just curious about the world of robotics, this course is your launchpad into a realm of creativity and exploration. Let's build Lineturtle together, draw lines, make memories, and discover the joy of robotics. Enroll now and start your robotic adventure today!",
      "target_audience": [
        "This course is perfect for beginners with little to no prior robotics experience, as well as enthusiasts eager to delve into the world of ROS2. If you're excited about building and controlling your own drawing robot using MicroROS, while learning the fundamentals of command-line control, this course is tailored for you."
      ]
    },
    {
      "title": "Lua Programming: Become a Master of Lua",
      "url": "https://www.udemy.com/course/lua-programming-become-a-master-of-lua/",
      "bio": "Learn Web Scripting with Lua programming",
      "objectives": [
        "Understand all the Basics of Lua Programming"
      ],
      "course_content": {},
      "requirements": [
        "Basics of Computer Science",
        "Basics of Programming",
        "It would help if you have a basic understanding of working with a simple text editor and command line."
      ],
      "description": "Lua is an open source language built on top of C programming language. Lua has its value across multiple platforms ranging from large server systems to small mobile applications. This course covers various topics ranging from the basics of Lua to its scope in various applications. This course is designed for all those readers who are looking for a starting point to learn Lua. It has topics suitable for both beginners as well as advanced users. It is a self-contained course and you should be able to grasp the concepts easily even if you are a total beginner. However it would help if you have a basic understanding of working with a simple text editor and command line.",
      "target_audience": [
        "Students",
        "Learners who want to be a Lua Programmer",
        "Game Developers who want to clear the basics of Lua Programming"
      ]
    },
    {
      "title": "Learn Multithreading and Parallel Programming in C# and .Net",
      "url": "https://www.udemy.com/course/learn-multithreading-and-parallel-programming-in-c-and-net/",
      "bio": "Understanding in multithreading and asynchronous programming and parallel programming in C# and .Net",
      "objectives": [
        "Understand everything about the Threads",
        "Able to create MultiThreading application in C#",
        "Understand all the concepts such as \"Process\"; asynchrony programming\", \"multithreading\"",
        "Understand the Parallel programming in dotnet and C#",
        "Able to understand the asynchronous programming in Advance level"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Multithreading in C#": [
          "What is multitasking",
          "Threading in C#",
          "Thread Class in C#",
          "Life Cycle of a thread in C#",
          "Drawbacks of Single-Threaded Applications",
          "Implement multithreading in C#",
          "Constructors of Thread class in C# | ThreadStart Delegate",
          "ParameterizedThreadStart delegate in C#",
          "Passing data to the Thread function in a type safe manner in C#",
          "Retrieving data from Thread function using callback method",
          "Thread.Join and Thread.IsAlive functions of thread class",
          "Protecting shared resources from concurrent access in multithreading by locking",
          "Protecting shared resources from concurrent access in multithreading by monitor",
          "Difference between Locking and Monitor in Multithreading",
          "Monitor pulse, wait and pulseAll Method in multithreading in C#",
          "ManualResetEvent in Multithreading in C#",
          "AutoResetEvent in multithreading in C#",
          "Mutex in multithreading in C#",
          "Semaphore in multithreading in C#",
          "Deadlock in multithreading in C#",
          "Resolve Deadlock in multithreading in C#",
          "Thread Pool in C#",
          "Performance testing using and without using Thread Pool in C#",
          "Performance Testing of a Multithreaded Application in C#"
        ],
        "Asynchronous programming in C#": [
          "Introduction",
          "Synchronous Programming With C#",
          "Solution to the Synchronous Problem With C#",
          "Asynchronous Programming Patterns in dotnet",
          "Asynchronous Programming Model Pattern in dotnet",
          "Event Based Asynchronous Programming Patterns in dotnet",
          "Task based Asynchronous Pattern (TAP)",
          "Thread vs Task in C#",
          "Creating a task object using Factory Property in C#",
          "Creating a Task object using the Run method in C#",
          "Task using Wait in C#",
          "Task Return Value in C#",
          "Returning Complex Type Value From a task in C#",
          "Chaining Tasks by Using Continuation Tasks in C#",
          "Create a continuation for multiple antecedents in C#",
          "Different overloaded Continuation Tasks in C#",
          "Async Await In C#",
          "Return Type of Asynchronous Method In C#",
          "Exception Handling in C# Asynchronous Programming",
          "When To Use Task And Async Await in C#"
        ],
        "Parallel Programming in C#": [
          "Introduction",
          "Parallel Programming in C#",
          "Task Parallel Library in C#?",
          "Parallel For in C# with Examples",
          "ParallelOptions class in C#",
          "Terminating a Parallel Loop",
          "Parallel ForEach Loop in C#",
          "Parallel Invoke in C# with Examples",
          "PLINQ in C#"
        ]
      },
      "requirements": [
        "Basic knowledge of C# and .NET framework"
      ],
      "description": "I welcome you all to this amazing course. Hope the learning would add value to your knowledge and you will learn to make an Application using the multithreading and asynchronous programming  parallel programming in C#\nWishing you a happy learning. Please do comment and provide feedback on the course.\nRequirements\nVisual Studio 2013 or above\nBefore continuing on this course we should have basic knowledge in below technology. C#\n\n\n\n\nThis course is about .NET multithreading, asynchronous programming, and Parallel Programming with C# and Dotnet framework, namely the Task Parallel Library (TPL) and Parallel LINQ (PLINQ).\n\n\nThis course will teach you about:\n\n\nMultitasking:- Concept of multitasking, and how multitasking works\nThread:- How to use thread in C#\n\n\nTask Programming: how to create and run tasks, cancel them, wait on them and handle exceptions that occur in tasks.\n\n\nParallel Loops which us to iterate over the thread in C#\n\n\nParallel LINQ, the parallel version of . NET's awesome Language-Integrated Query (LINQ) technology.\n\n\nAsync/Await and . NET's support for asynchronous programming.\n\n\nThis course is suitable for:\n\n\nBeginner and experienced .NET/C# developers\n\n\nAnyone interested in multi-threading, asynchronous programming parallel programming\n\n\nAbout project implementation\nIn this course, we will see each topic with a real-time example and we will see how to implement all concepts in Visual studio so we are able to understand it very well.\nI recommend, please install visual studio 2013 or the above version so it will be helpful to implement logic in visual studio and you will learn every concept practically.\nIt will be very helpful if you have basic knowledge of C#.\nI am glad that you successfully completed the course.\nHope you enjoyed it.\nKeep growing.\nHave a wonderful life ahead!!!!!",
      "target_audience": [
        "Student",
        "Beginner developer",
        "Experience Developer"
      ]
    },
    {
      "title": "The Complete MATLAB Course #1:An Ultimate Guide For Beginner",
      "url": "https://www.udemy.com/course/complete-matlab-course-1/",
      "bio": "Essential MATLAB Guides for beginners and refresher everything included and Easy to follow",
      "objectives": [
        "Master all the MATLAB key concepts starting from scratch.",
        "You will learn how to write MATLAB codes.",
        "You will get the 36 lecture of 1 hours content.",
        "You will be able to ask any question. I will answer it ASAP.",
        "You will be able to create your own programs. If you have any problem I will help you.",
        "You will get complete source codes of lectures.",
        "Regular course updates: new lectures, applications and documents.",
        "Ask for a raise or apply for a better job using the skills gained from this course.",
        "Learn how to use MATLAB enviroment.",
        "Using MATLAB for basic calculations.",
        "Learn how to define and maniplate variables using MATLAB .",
        "Learn how to define and do basic calculations with vectors.",
        "Using MATLAB for defining and manipulting on matrices."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "MATLAB User Interface",
          "Basic Commands",
          "Basic Commands Source",
          "Using Help Topics in MATLAB",
          "Help Topics Source"
        ],
        "Basic Calculations in MATLAB": [
          "Basic Arithmetic Functions and Operators Precedence",
          "Basic Arithmetic Functions Source",
          "Scientific Notation, Special Constants and Precision",
          "Scientific Notation, Special Constants and Precision Source"
        ],
        "Variables Manipulation in MATLAB": [
          "How to Define and Use Variables",
          "How to Define and Use Variables Source",
          "Semicolon Effect and Commenting",
          "Semicolon Effect and Commenting Source"
        ],
        "Working with Vectors in MATLAB": [
          "Defining Vectors",
          "Defining Vectors Source",
          "Basic Operations on Vectors",
          "Basic Operations on Vectors Source",
          "Advanced Operations on Vectors",
          "Advanced Operations on Vectors Source",
          "Statistics Operations on Vectors",
          "Statistics Operations on Vectors Source"
        ],
        "Matrix Manipulation in MATLAB": [
          "Matrix Defention in MATLAB",
          "Matrix Defention in MATLAB Source",
          "Basic Operations on Matrices",
          "Basic Operations on Matrices Source",
          "Matrices Multiplication",
          "Matrices Multiplication Source",
          "Size and Sum of Elements in Matrices",
          "Size and Sum of Elements in Matrices Source",
          "Ones, Zeros and Identity Matrices",
          "Ones, Zeros and Identity Matrices Source",
          "Matrix Transpose and Diagonal Elements",
          "Matrix Transpose and Diagonal Elements Source",
          "Determinant, Inverse and Trace",
          "Determinant, Inverse and Trace Source"
        ]
      },
      "requirements": [
        "You should have a great desire to learn programming and do it in a hands-on fashion, without having to watch countless lectures filled with slides and theory.",
        "All you need is a decent PC/Laptop (2GHz CPU, 4GB RAM). You will get the rest from me.",
        "No need to MATLAB programming skills I will teach you from zero.",
        "I am going to use only trial MATLAB software throughout the course.",
        "You should already be familiar with programming concepts and syntax."
      ],
      "description": "Join Over 3,700+ Students Who Have Enrolled In My Courses!\nThis course is COMPLETE! You receive 36+ lectures and 1+ hours of content!\n____________________________________________________________________________\nStudent Testimonials!\n\n\n\"The contains of this course is very interesting for everybody who like to be a web developer. The directions are clear and concise, and the instructor is knowledgeable. I would definitely recommend this course.\"\nMr. Catalin\n\n\n\"Well organized! Clear direction and step by step lectures, just want I needed.Thank you very much for taking time explaining everything in details. Highly recommend!! :)\"\nElmira\n____________________________________________________________________________\nMATLAB (matrix laboratory) is a multi-paradigm numerical computing environment and fourth-generation programming language. A proprietary programming language developed by MathWorks, MATLAB allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages, including C, C++, C#, Java, Fortran and Python.\nAlthough MATLAB is intended primarily for numerical computing, an optional toolbox uses the symbolic engine, allowing access to symbolic computing abilities. An additional package, Simulink, adds graphical multi-domain simulation and model-based design for dynamic and embedded systems.\nMATLAB has several advantages over other methods or languages:\nMATLAB allows you to test algorithms immediately without recompilation ssimply write and run.\nThe MATLAB Desktop environment, that allows you to work interactively with your data.\nClearly written documentation with many examples, as well as online resources.\nEverything is stored in matrices, this capibility makes data analysis easy.\nProfessional researchers and scientists use MATLAB for their calculations.\nSimple and easy syntax.\n\n\nMATLAB language is the most important language in calculation and scientific research. Anybody who want to make accurate and optimal calculations should learn MATLAB so it is crucial for you to learn it.\n\nDuring this course you learn essential elements of MATLAB. You also learn use matlab to work with vectors and matrices.\nThe objective of this course is to take someone without any skill of MATLAB and teach them MATLAB basics.\nIn this course I assume that you have no prior knowledge about MATLAB so everything that you must know to star your journey are presented.\nYou will also learn following items:\nMATLAB Enviroment\nMATLAB Help\nBasic Calculations\nMATLAB syntax\nVariables Definition and Manipulation\nVectors Definition\nBasic and Advanced Vectors Operations\nMatrices Definition\nBasic and Advanced Matrices Operations\n\n\nAt the end of this course you are able to write MATLAB codes and every essential things about it added in this course. After learning essential of the MATLAB programming language you can do your own Calculation without any problem.\nYou also learn advance features of Vectors and Matrices like dot & cross product, ones & zeros matrices and scientific notation. By learning them you are able to do advanced calculation and solve your algebraic and geometry problems.\nFinally after learning this course you can do your own calculations and promote yourself for better jobs and positions.\n\n\n___________________________________________________________________________\nImportant information before you enroll:\nIn case you find the course useless for your career, don't forget you are covered by a 30 day money back guarantee, full refund, no questions asked!\nOnce enrolled, you have unlimited, lifetime access to the course!\nYou will have instant and free access to any updates I'll add to the course.\nYou will give you my full support regarding any issues or suggestions related to the course.\nCheck out the curriculum and FREE PREVIEW lectures for a quick insight.\n___________________________________________________________________________\nIt's time to take Action!\nClick the \"Take This Course\" button at the top right now!\n...Don't waste time! Every second of every day is valuable...\nI can't wait to see you in the course!\nBest Regrads,\nSobhan",
      "target_audience": [
        "Anyone who wants to make the right choice when starting to learn MATLAB programming.",
        "Junior Programmers, Analyser and Software Engineers.",
        "Data analyser, Researcher, Engineers and Students need accurate and fast calculations.",
        "Anyone who want to create easy and accurate programs with MATLAB",
        "Any kind of Entrepreneur who wish to learn MATLAB and optimize their calculations."
      ]
    },
    {
      "title": "Python Automation Made Easy!",
      "url": "https://www.udemy.com/course/python-automation-made-easy/",
      "bio": "Leverage Python to automate your infrastructure & accomplish administrative task",
      "objectives": [
        "Write Python code proficiently in a structured fashion",
        "Identify the boundaries of a coding problem and spot the best libraries to solve it",
        "Design and Implement a wide range of applications from simple stand-alone one-liner scripts to complex web applications depending on external services",
        "Explore different tools used for the automation.",
        "Understand enterprise automation with using python scripting.",
        "Perform administrative tasks like user, database and process management using automation."
      ],
      "course_content": {},
      "requirements": [
        "Basic programming knowledge with Python scripting would be necessary"
      ],
      "description": "Python is an easy to learn, powerful programming language with efficient high-level data structures and a simple but effective approach to object-oriented programming. Python’s elegant syntax and dynamic typing, together with its interpreted nature, make it an ideal language for scripting and rapid application development in many areas on most platforms.\nThis is an easy to follow, practical approach course, designed to guide you in implementing real-world\nautomation in your enterprise using python. Initially you will be you will start with a deep-dive into Python software development basics, then you'll move on to write scripts to automate file system operations and file contents processing on your local host. Learn network automation & administration tasks with Python Fabric to automate the execution of web server with simple python programs. Moving forward you will also you will be creating users on multiple servers to manage users and then check the health of the Enterprise and then you will be performing automation tasks on the cloud infrastructure with python. Finally, you will leverage Python programming to automate server configuration and administration tasks.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Python for Everyday Life start with a deep-dive into Python software development basics, then move on to write scripts to automate file system operations and file contents processing on your local host, then you will learn how to interact with web-based services such as websites and APIs in order to robotize the cool things that we do everyday - such as tweeting, posting to social networks, reading RSS feeds, etc. - moreover you will practice how to set up a web-based services yourself in the form of web applications and in the end you will learn how to analyze and visualize datasets in order to extract knowledge. By the end of this course you will have learned how to proficiently write structured Python code in a wide range of applications – from one-liner scripts to complex web applications – aiming at the automation of lots of common everyday life tasks.\nThe second course, Enterprise Automation with Python will start by introducing the modules and the tools we will be using and how to set up a python environment to perform automation tasks and to deal with file editors and IDE like Pycharm. The course will cover network automation tasks and administration tasks with Python Fabric to automate the execution of web server with simple python programs. Moving ahead, you will learn to create database servers with python and backup them. Also, you will be creating users on multiple servers to manage users and then check the health of the Enterprise and then you will be performing automation tasks on the cloud infrastructure with python. The course will make the most of Python libraries and modules to automate your infrastructure. Leverage Python programming to automate server configuration and administration tasks. By the end of the course, you will be able to efficiently develop your python skills making it an alternate automation tool from the major automation frameworks.The use cases in this course will help you to track the processes with high utilization on all servers and create web server via python code. So, now need not depend on Network Automation Tools like a puppet, Ansible, and chef and grab this course to make your daily work easy with automation and python modules which will help you to deliver the service more faster than before.\nAbout the Authors:\nClaudio Sparpaglione holds an MD in Computer Engineering from Università degli studi di Pavia, Italy, achieved in 2007. He later worked as software engineer and architect in various industries (Geospatial Application Systems development and integration, Web and Mobile Advertising, Telecommunications, Fashion Brand Protection).Claudio worked in London in 2014 for a UK start-up as a software engineer and in 2015 became CTO of an Italian start-up. He currently works for the largest Italian bank as application engineer and deals with innovation topics.\nClaudio is a Pythonista with exposure to other languages (JavaScript, Java, and PHP). He’s passionate about the design and implementation of highly-scalable web systems and APIs, about cloud, mobile and scientific computing, and he’s fascinated by cryptocurrencies. Claudio is a Linux advocate and an active contributor to the open source software community: he’s the maintainer of the PyOWM Python project and contributes to projects such as Requests and Reactive Manifesto.\nTomasz Lelek is a Software Engineer who programs mostly in Java and Scala. He is a fan of microservice architectures and functional programming. He dedicates considerable time and effort to be better every day. Recently, he's been delving into big data technologies such as Apache Spark and Hadoop. He is passionate about nearly everything associated with software development.Tomasz thinks that we should always try to consider different solutions and approaches to solving a problem. Recently, he was a speaker at several conferences in Poland - Confitura and JDD (Java Developer's Day) and also at Krakow Scala User Group.",
      "target_audience": [
        "This course is ideal for:",
        "Python developers with basic knowledge of python.",
        "System administrator or DevOps engineer at the enterprise who wants to facilitate the work through python and are looking for an alternative from major automation frameworks like Puppet and Chef"
      ]
    },
    {
      "title": "Master Go (Golang) Programming: From Basics to Advanced",
      "url": "https://www.udemy.com/course/master-go-golang-programming-from-basics-to-advanced/",
      "bio": "Go (Golang) Programming for Beginners – Master Concurrency, Build Real Apps & Boost Your Career",
      "objectives": [
        "Master Core Go Concepts – Understand variables, control structures, functions, and Go’s unique type system, including slices, maps, and structs.",
        "Implement Concurrency Effectively – Learn goroutines, channels, and synchronization techniques to build high-performance concurrent applications.",
        "Design Robust Applications – Use interfaces, error handling, and composition to write clean, maintainable, and scalable Go code.",
        "Build Real-World Tools – Develop CLI applications, work with file I/O, and leverage testing/benchmarking to create production-ready software.",
        "Optimize & Debug Like a Pro – Use Go’s profiling tools, race detector, and logging to troubleshoot and optimize code."
      ],
      "course_content": {
        "Introduction": [
          "1.0 Introduction to Golang",
          "1.1 Course Overview",
          "1.2 GO & VD Code Installation",
          "1.3 GOPATH and reading Documentations",
          "1.4 FirstCode"
        ],
        "Go Language Fundamentals": [
          "2.1 Variables-DataTypes",
          "2.2 Variables-DataTypes-Hands-on",
          "2.3 ControlStructures If-Else",
          "2.4 Switch-Select Statements",
          "2.5 Function-parameters",
          "2.6 Named return parameters-variadic functions"
        ],
        "Composite Types and Collections": [
          "3.1 Arrays",
          "3.2 Slices",
          "3.3 Maps",
          "3.4 Structs",
          "3.5 Pointers",
          "3.6 HandsOn Part-1",
          "3.7 HandsOn Part-2"
        ],
        "Interfaces and Object-Oriented Pattern": [
          "4.1 Interfaces-in-Go",
          "4.2 Embedding",
          "4.3 Composition",
          "4.4 Polymorphism",
          "4.5 Real world example- io.Writer",
          "4.6 Real world Example- http.Handler",
          "4.7 Factory Pattern",
          "4.8 Strategy Pattern",
          "4.9 Singleton Pattern",
          "4.10 Observer Pattern",
          "4.11 Adapter Pattern",
          "4.12 Decorator Pattern"
        ],
        "Concurrency Basics": [
          "5.1 Concurrency-vs-Parallelism",
          "5.2 Concurrency-HandsOn",
          "5.3 Goroutines- Basics",
          "5.4 Goroutines Deep-dive",
          "5.5 Goroutines HandsOn",
          "5.6 Channel Basics",
          "5.7 Blocking Behaviour",
          "5.8 Buffered vs Unbuffered Channels",
          "5.9 Synchronization using Channel",
          "5.10 Closing Channel",
          "5.11 Select Statement Basics",
          "5.12 Implementing TimeOut with Select",
          "5.13 Select Statement Example",
          "5.14 Projesct HandsOn Part-1",
          "5.15 Projesct HandsOn Part-2"
        ],
        "Advanced Concurrency and Synchronization": [
          "6.1 sync. WaitGroup",
          "6.2 sync. Mutex",
          "6.3 sync. RWMutex",
          "6.4 Deadlocks",
          "6.5 Race Conditions",
          "6.6 Worker Pools",
          "6.7 Pipelines",
          "6.8 Context packages",
          "6.9 Producer Consumer Pattern",
          "6.10 Fan in fan out Pattern"
        ],
        "Module 7: Error Handling and Testing": [
          "7.1 Error Handling Idioms",
          "7.2 Error Handling Idioms (Part-2)",
          "7.3 Panic and Recover",
          "7.4 Unit Testing",
          "7.5 Benchmarking and Profiling"
        ],
        "Building CLI Tools and Applications": [
          "8.1 Command Line Basics",
          "8.2 File input output",
          "8.3 Logging in Go",
          "8.4 Final Project Part-1",
          "8.5 Final Project Part-2",
          "8.6 Final Project Part-3",
          "8.7 Final Project Part-4"
        ]
      },
      "requirements": [
        "No prior Go experience needed! Perfect for beginners.",
        "Basic programming knowledge (variables, loops, functions) in any language (Python, JavaScript, Java, etc.) is helpful but not required.",
        "A computer (Windows, macOS, or Linux) with internet access.",
        "Free tools – We’ll install Go and VS Code (or your preferred IDE) together."
      ],
      "description": "Master Go (Golang) Programming - From Fundamentals to Real-World Applications\nReady to learn one of the most in-demand programming languages powering today's cloud infrastructure, microservices, and high-performance systems? This comprehensive Go (Golang) course takes you from absolute beginner to job-ready developer through hands-on projects and expert guidance.\nWhat You'll Learn:\nGo Fundamentals - Master variables, functions, structs, and Go's unique type system\nConcurrency Mastery - Harness goroutines and channels to build lightning-fast applications\nReal-World Development - Build CLI tools, REST APIs, and concurrent systems\nBest Practices - Learn error handling, testing, and performance optimization\nCareer-Boosting Skills - Develop projects you can showcase in your portfolio\n\n\nWhy Learn Go?\nUsed by tech giants like Google, Uber, and Docker\nTop choice for cloud-native development and DevOps\nCombines Python's simplicity with C++'s performance\nOne of the highest-paying programming languages\nCourse Highlights:\n8 Progressive Modules with Hands-on Exercises\nBuild 5+ Real Projects (CLI Tools, Concurrent Apps)\nExpert Tips from Industry Professionals\nLifetime Access to Course Materials\nPerfect For:\nBeginners wanting a modern, efficient first language\nExperienced developers adding Go to their skillset\nDevOps engineers building better infrastructure tools\nBackend developers creating scalable microservices\nNo prior Go experience needed! We start from scratch and guide you to mastery. Enroll today and join the growing community of Gophers building the future of software!\nBonus: Includes downloadable cheat sheets, interview prep guide, and certificate of completion.\nStart your Go journey now and unlock new career opportunities in cloud computing, distributed systems, and backend development!",
      "target_audience": [
        "Beginners – New coders who want a fast, modern, and easy-to-learn language.",
        "Python/JavaScript/Java Developers – Programmers transitioning to Go for better performance, concurrency, or cloud-native development.",
        "Backend & DevOps Engineers – Professionals building microservices, APIs, or CLI tools with Go’s efficiency.",
        "System Programmers – Developers working on high-performance networking, cloud, or infrastructure projects.",
        "Tech Enthusiasts & Career Switchers – Anyone looking to boost their resume with a high-demand language (used by Google, Kubernetes, Docker, and more)."
      ]
    },
    {
      "title": "Learning Path: Haskell: Functional Programming in Haskell",
      "url": "https://www.udemy.com/course/learning-path-haskell-functional-programming-in-haskell/",
      "bio": "Explore functional programming and build real-world applications with Haskell",
      "objectives": [
        "Understand how functional programming addresses complexity",
        "Get familiar with the general characteristics of functional programs",
        "Learn GHCi in brief",
        "See how Haskell compares with other functional programming languages",
        "Learn how to parse command-line options using the applicative style",
        "Understand how to use strict and lazy file I/O",
        "Learn to handle various common Haskell string types",
        "Learn to read, create, delete, and update data items in your application"
      ],
      "course_content": {},
      "requirements": [
        "Experience in Object-oriented programming is required."
      ],
      "description": "Haskell is one of the powerful functional programming language designed to work with complex data. Its emphasis on \"purity\" makes it easier to create rock-solid applications which stay maintainable and error-free even as they grow in scale.\nIf you're a developer with some experience in object-oriented programming languages, such as C, C++, Java, and wish to build applications using Haskell, then you should surely go for this Learning Path.\nPackt’s Video Learning Path is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nLet's take a quick look at your learning journey. This Learning Path begins with making your familiar with the concepts of functional programming and Haskell language. Then, you will learn to address all the problems with functional programming and Haskell with distinguishing the difference between the two. You will also learn Haskell in depth with creating your first Haskell program. Next, you will be briefed through GHCi (Glasgow Haskell Compiler). As you progress, you will learn to develop real programs that will make use of file I/O, command-line parsers and various third-party packages. You will then see how to perform data processing and handling of the program. Finally, you will learn the different ways of storing data in your file system and interacting with them.\nBy the end of this Learning Path, you will be able to write your own Haskell programs and also have ample knowledge of the important functionalities of Haskell.\n\nAbout the Author:\nFor this course, we have the best works of this esteemed author:\nRichard Cook is a staff software engineer at Tableau Software and works on high-performance relational database systems. He works primarily in C++, but has experience in a broad range of languages and technologies. He is a keen user of Haskell in his spare time and is frequently able to apply his functional programming and Haskell experience to his daily work. He is organizer of the Seattle Area Haskell Users’ Group and an active member of the Seattle functional programming community. He is currently developing a machine-learning framework for Haskell. He has a deep interest in programming languages and type systems in general, having developed compilers and developer tooling in the past. He is also a keen user of Python and C# and works regularly on all major desktop operating systems and dabbles with web applications.",
      "target_audience": [
        "This Learning Path is for software developers with some experience in object-oriented programming languages such as C, C++, Java, C#, Python, or Ruby."
      ]
    },
    {
      "title": "Perl Fundamentals",
      "url": "https://www.udemy.com/course/perl-fundamentals/",
      "bio": "Perl Fundamentals",
      "objectives": [
        "Get an introduction of Perl",
        "Understand the concept of literals and variables",
        "Use string functions",
        "Understand loops and conditionals",
        "Get an overview of the data structures such as lists",
        "Understand the command line input",
        "Learn about subroutines and regex"
      ],
      "course_content": {
        "Chapter 01 - Introduction to Perl": [
          "Topic A: Introduction to Perl - Part 1",
          "Introduction to Perl - Part 2",
          "Introduction to Perl - Part 3",
          "Topic B: Literals and Variables - Part 1",
          "Literals and Variables - Part 2",
          "Literals and Variables - Part 3",
          "Topic C: String Functions - Part 1",
          "String Functions - Part 2",
          "String Functions - Part 3",
          "Topic D: Variables - Part 1",
          "Variables - Part 2",
          "Variables - Part 3",
          "Topic E: Conditionals - Part 1",
          "Conditionals - Part 2",
          "Conditionals - Part 3",
          "Topic F: Loops - Part 1",
          "Loops - Part 2",
          "Loops - Part 3",
          "Review - Question"
        ],
        "Chapter 02 - Data Structures, Input and Output": [
          "Topic A: Lists - Part 1",
          "Lists - Part 2",
          "Lists - Part 3",
          "Topic B: List Demos - Part 1",
          "List Demos - Part 2",
          "List Demos - Part 3",
          "Topic C: Command Line Input - Part 1",
          "Command Line Input - Part 2",
          "Command Line Input - Part 3",
          "Topic D: File Input and Output - Part 1",
          "File Input and Output - Part 2",
          "File Input and Output - Part 3",
          "Topic E: Hashing - Part 1",
          "Hashing - Part 2",
          "Hashing - Part 3",
          "Review - Question"
        ],
        "Chapter 03 - Subroutines and Regex": [
          "Topic A: Subroutines - Part 1",
          "Subroutines - Part 2",
          "Subroutines - Part 3",
          "Topic B: Arguments and Return Values - Part 1",
          "Arguments and Return Values - Part 2",
          "Arguments and Return Values - Part 3",
          "Topic C: Simple Regular Expressions - Part 1",
          "Simple Regular Expressions - Part 2",
          "Simple Regular Expressions - Part 3",
          "Topic D: Metacharacters - Part 1",
          "Metacharacters - Part 2",
          "Metacharacters - Part 3",
          "Topic E: Text Manipulations - Part 1",
          "Text Manipulations - Part 2",
          "Text Manipulations - Part 3",
          "Review - Question"
        ]
      },
      "requirements": [
        "The course has no formal pre-requisites and is ideal for beginners in the field of Perl programming language.",
        "The course helps the candidates to kick start their careers in software development and designing."
      ],
      "description": "Perl is a generic term used for the two programming languages, Perl 5 and Perl 6. Perl languages are increasing in their popularity because of their use in system administration, network programming, finance, bioinformatics and many other applications. This course covers the basic concepts of Perl and enables the students to start using Perl programming languages to develop efficient applications that could be used to solve the day-to-day problems.\nThe Perl: Fundamentals course introduces the students to the basic concepts required to get started with Perl programming languages for software and application development. The course focuses on the fundamental topics such as data structures, input, output, subroutines and Regex. The course is very helpful for beginner level software developers who are looking to grow in this ever-growing field.",
      "target_audience": [
        "Software engineers",
        "Quality assurance engineers",
        "Programmers"
      ]
    },
    {
      "title": "Machine Learning with ML.Net for Absolute Beginners",
      "url": "https://www.udemy.com/course/machine-learning-with-mlnet-for-absolute-beginners/",
      "bio": "Use your dotnet skills for building Machine Learning apps using ML.Net",
      "objectives": [
        "Create a Machine Learning app with C#",
        "Use TensorFlow or ONNX model with dotnet app",
        "Using Machine Learning model in ASP dotnet",
        "Use AutoML to generate ML dotnet model"
      ],
      "course_content": {
        "Introduction": [
          "Intro to Course",
          "What is Machine Learning?",
          "ML v/s AI v/s DL",
          "What is ML.Net?",
          "Setting up Environment",
          "ML.Net SDK"
        ],
        "Creating First Program": [
          "ML.Net Flow",
          "ML Terminology",
          "Section Summary",
          "Create Regression",
          "Evaluate Model: with Test Dataset",
          "Evaluate Model: with same Dataset",
          "Cross Validate Model",
          "Algorithms & Hyperparameters",
          "Section Summary"
        ],
        "Data Load and Save": [
          "Load data from TextFile",
          "Load data from Multiple TextFile",
          "Load data from Binary",
          "Load data from Database",
          "Save data",
          "Filter data",
          "Section Summary"
        ],
        "Model Save and Load": [
          "Section Introduction",
          "Save Model",
          "Load Model"
        ],
        "Binary Classification": [
          "Binary Classification",
          "Logistic regression",
          "Sentiment Analysis - 1",
          "Sentiment Analysis - 2",
          "Fast Tree & Fast Forest"
        ],
        "Multiclass Classification": [
          "Multiclass Classification",
          "SdcaMaximumEntropy",
          "OneVersusAll",
          "LightGbm"
        ],
        "Computer Vision": [
          "Computer Vision",
          "Using Multiclass classification - 1",
          "Using Multiclass classification - 2",
          "Using TensorFlow"
        ],
        "Other Training Tasks": [
          "Anomaly Detection",
          "Ranking",
          "Forecasting",
          "Clustering",
          "Recommendation"
        ],
        "Transform - 1": [
          "Text: Featurize & Normalize",
          "Text: Tokenize & Stopwords",
          "Text: WordBags & Ngram",
          "Conversion: Convert & Hash",
          "Conversion: Key & Value",
          "Conversion: Vector",
          "Conversion: Dictionary & Lookup",
          "Section Summary"
        ],
        "Transform - 2": [
          "Categorical: OneHotEncoding",
          "Categorical: OneHotHashEncoding",
          "Copy & Concatenate Columns",
          "Select & Drop Columns",
          "Custom Mapping",
          "FeatureSelection",
          "Missing Values",
          "Expression & Normalization",
          "TimeSeries: ChangePoint",
          "TimeSeries: Anomaly & Spike",
          "Section Summary"
        ]
      },
      "requirements": [
        "Basic C# development",
        "Basic concept of Machine Learning",
        "Visual Studio 2019"
      ],
      "description": "Note: This course is designed with ML.Net 1.5.0-preview2\nMachine Learning is learning from experience and making predictions based on its experience.\nIn Machine Learning, we need to create a pipeline, and pass training data based on that Machine will learn how to react on data.\nML.NET gives you the ability to add machine learning to .NET applications.\nWe are going to use C# throughout this series, but F# also supported by ML.Net.\nML.Net officially publicly announced in Build 2019.\nIt is a free, open-source, and cross-platform.\nIt is available on both the dotnet core as well as the dotnet framework.\nThe course outline includes:\nIntroduction to Machine Learning. And understood how it’s different from Deep Learning and Artificial Intelligence.\nLearn what is ML.Net and understood the structure of ML.Net SDK.\nCreate a first model for Regression. And perform a prediction on it.\nEvaluate model and cross-validate with data.\nLoad data from various sources like file, database, and binary.\nFilter out data from the data view.\nExport created the model and load saved model for performing further operations.\nLearn about binary classification and use it for creating a model with different trainers.\nPerform sentimental analysis on text data to determine user’s intention is positive or negative.\nUse the Multiclass classification for prediction.\nUse the TensorFlow model for computer vision to determine which object represent by images.\nThen we will see examples of using other trainers like Anomaly Detection, Ranking, Forecasting, Clustering, and Recommendation.\nPerform Transformation on data related to Text, Conversion, Categorical, TimeSeries, etc.\nThen see how we can perform AutoML using ModelBuilder UI and CLI.\nLearn what is ONNX, and how we can create and use ONNX models.\nThen see how we can use models to perform predictions from ASP.Net Core.",
      "target_audience": [
        "This is for newbies who want to learn Machine Learning",
        "Developer who knows C# and want to use those skills for Machine Learning too",
        "A person who wants to create a Machine Learning model with C#",
        "Developer who want to create Machine Learning"
      ]
    },
    {
      "title": "10 Day Python Blitz - 2 hrs/day to learn Python in 2025",
      "url": "https://www.udemy.com/course/10-day-python-blitz-learn-python-2023/",
      "bio": "Python for ~2 hours a day - getting from basics to understanding w/game programming!",
      "objectives": [
        "You'll learn how to program in Python by doing!",
        "You will understand the core concepts of programming",
        "Create an interactive game that uses all of a Python developer's skills",
        "Learn how to interact with 3rd party Python modules and their API's"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Writing code - in lecture 1!",
          "How the course organized",
          "All the code for this course (link)",
          "All the code for this course (explained)",
          "Installing Python and VS Code on a Mac",
          "Installing Python and VS Code on Windows",
          "Running Python on YOUR computer",
          "Terminal Shortcuts - IMPORTANT!",
          "Terminal Shortcut Cheatsheet",
          "How To Get Help Or Report An Issue"
        ],
        "Day 1 - The Basics. Variables, Data Types, Conditionals, Input": [
          "Woah... what just happened? What is Python and how does it work?",
          "What's actually Important In Programming",
          "Variables. What are they?",
          "Variable Cheat Sheet",
          "Primitive Data Types",
          "Data Type Cheat Sheet",
          "Data type interaction and Collecting User Input",
          "Data Type Interaction Notes",
          "Conditionals - if/else statements and the importance of indentation",
          "The spacing/tab thing... why?",
          "When do I have to indent note",
          "Multi-part Conditionals - elif",
          "Math operators - stuff like + and *",
          "Conditional Operand CheatSheet",
          "Casting - changing a variables data type!",
          "Code challenge instructions - Guess the Number",
          "Code Challenge Walkthrough",
          "String interpolation with f-string - a better way to format strings",
          "Multi-condition/complex conditionals",
          "Update Guess the Number",
          "Checking Data Types"
        ],
        "Day 2 - Loops, lists, methods, and functions": [
          "Day 2 Intro - Where are we? Planning out our trajectory",
          "Loops. Awesome. Explained",
          "Loop syntax",
          "Update our guessing game to go until correct",
          "Update our guessing game to go for X guesses",
          "Lists (data type). More Awesome. Explained.",
          "Lists Code",
          "The Docs",
          "What's a method? .append()",
          "More list methods - insert, pop, and remove",
          "More list methods - clear, count, sort, & reverse",
          "Lists and Loops - an awesome combo!",
          "Functions. More awesome. Explained",
          "Functions syntax",
          "Code organization matters - with functions",
          "Arguments vs. Parameters vs. Ordered Arguments",
          "Variable & Function scope",
          "The global Keyword",
          "New Coding Challenge Instructions/Tour",
          "Coding Challenge Explanation",
          "Functions, lists, and loops - Print off the 100th fibonacci number",
          "Print Off 100th Fibonacci Number Solution"
        ],
        "Day 3 - More On Functions, Dictionaries, and Some Extras": [
          "Return Values",
          "Using the return statement in a program",
          "Finishing our is_palidrome program",
          "Finding an element in a list or string",
          "More ways to loop through a string",
          "Code Challenge - Loop, functions",
          "Functions with return - The Caesar Cipher",
          "Code Challenge Walkthrough",
          "Tuples and Sets - Tuples",
          "Tuples and Sets - Sets",
          "Set methods to know - CheatSheet",
          "String Methods and Mutation",
          "Number methods",
          "Dictionaries (data type). More Awesome. Explained.",
          "Dictionaries - coding",
          "Dictionaries - adding keys after creation",
          "Dictionaries With Lists",
          "Dictionaries With Loops",
          "Dictionaries With Lists AND Loops",
          "Dictionaries In Action - Grocery Store",
          "Grocery Store Solution Walkthrough"
        ],
        "Day 4 - Putting the Core All Together - A simple text-based RPG game": [
          "Importing modules",
          "Importing files as modules",
          "Start Game! Also, .pyc/ cache files",
          "Create hero and game loop",
          "Move options to dictionary and make an enemy dictionary",
          "Fight function",
          "Move data and settings to its own module",
          "The random module - generating a random number",
          "Battle mechanics - part 1",
          "Battle mechanics - part 2",
          "Mutation, reference, and value - explained",
          "Mutation, reference, and value - code",
          "Mutation, reference, and value in functions",
          "The .copy() method - the right way to copy mutable varaibles",
          "Abstracting fight function",
          "Add \"drink potion\" to our battle engine",
          "Day wrap and code challenge choice"
        ],
        "Day 5 - Classes, Objects, and OOP": [
          "OOP, Classes, & Objects explained",
          "What is a class?",
          "Classes and Objects - coding",
          "Class Conventions",
          "self and dunder methods (__init__)",
          "Self & Passing Args to __init__",
          "Changing Object Values (Without Changing Another Object!)",
          "Starting the Bones of Our Class Based RPG",
          "Add Character Parameters",
          "Add Battle Engine Back In",
          "The Differences of Working With Objects (Not Dictionaries)",
          "Inheritance - From Character to Monster Classes",
          "Inheritance - Syntax",
          "Super and super().__init__()",
          "Inheritance... Two Layers Deep!",
          "Overriding Parent Methods"
        ],
        "Day 6 - Text based RPG... With Inheritance!": [
          "Add Hero Class - SubClass of Character",
          "Add Monster Class - SubClass of Character",
          "Test SubClasses and Make Adjustments",
          "Pause For Celebration",
          "Take Damage Method",
          "Damage And Defense Modifiers",
          "battle_victory method",
          "Level Up inside battle_victory",
          "Color Codes For Next Lecture",
          "Color Text",
          "Sleep and Clear",
          "Shop dictionary for next lecture",
          "Add Shop",
          "List Shop Items",
          "Annoy Shopkeeper Easter Egg",
          "Buy Items and Leave Shop",
          "Test Armor And Weapon",
          "Troll Class - subclass of Monster",
          "Hero Death :(",
          "Weight random monster pulls based on level",
          "Weight Enemies and Dragon Classes"
        ],
        "Day 7 - Ninjas vs. Monsters & 3rd party modules": [
          "Venv and pip",
          "venv",
          "Universal Method - No venv (use as last resort)",
          "Commands for the next 2 lectures",
          "venv - Virtual Environment Creation",
          "Activating the Virtual Environment on Mac/Linux - MAC ONLY",
          "Activating the Virtual Env for Windows - WINDOWS ONLY",
          "Making Sure pip is installed (and installing pygame!)",
          "Graphics & init pygame",
          "Setup Screen For Graphics",
          "Comment Code and Fill the Screen!",
          "Putting An Image On The Screen - blit()",
          "Scaling Our Background Image to Fit the Screen",
          "Player Class",
          "Update Screen Function",
          "Check Events Function",
          "Scale Player To Right Size",
          "Move Character"
        ],
        "Day 8 - Ninjas vs. Monsters continued": [
          "Loading Animation Images",
          "Animating The Character Running",
          "shouldMove - Smooth our our player movement",
          "Diagonal Moving And CleanUp",
          "Animation Images, Tick, and Idle",
          "Animate Run and Flip Image",
          "Set Borders For Player Movement",
          "Attack As An Animation",
          "Attack As An Action",
          "Get And Load Troll Images",
          "Image Load Function - Make Life Simpler!",
          "Animate And Move Troll"
        ],
        "Day 9 - Ninjas Vs. Monsters Wrap Up": [
          "Pygame Sprites and a monsters Group",
          "Class Variables",
          "Collision Testing - Did Our Player Run Into a Troll?",
          "Group Collision Continued - rect.x and rect.y",
          "Group Collision Continued - Start Moving Again",
          "Troll 1-3 Stats List, Ork 1-3 Stats List",
          "Add Ork Images",
          "Troll Class (you'll need troll_stats for this)",
          "Render Troll and Stagger Entry Point",
          "Orc Class and Monster Speed",
          "Stop Bobbing When You Attack Monsters!",
          "On Player Attack And Monster Collide",
          "Monster takeDamage() Method",
          "Remove Monster From Group On Death and Switch Hurt To Attack",
          "Treasure Class",
          "Treasure Images and Position",
          "Treasure Collision and Removal",
          "Game Over Screen (Part 1)",
          "Add a \"Game Over\" Button (GameButton class)",
          "Add Player Score"
        ]
      },
      "requirements": [
        "Zero experience needed. We'll start from the beginning.",
        "A Mac or Windows computer with Internet access",
        "You'll have to download some free software, but that's it",
        "A desire to learn Python and willingness to put the effort in!"
      ],
      "description": "Welcome to the 10-Day Python Blitz: Your Fast Track to Python Mastery!\nAre you ready to embark on an exciting journey into the world of programming? Have you ever wanted to learn Python, one of the most versatile and in-demand programming languages today, but didn't know where to start? Look no further... my comprehensive course, \"10-Day Python Blitz,\" is designed especially for beginners with no prior coding experience.\nWhy Choose the 10-Day Python Blitz?\nI teach concepts by drawing on a board before going to a code editor. It is becoming increasingly important in a world full of AI spam and automation to have a real human as close as possible... especially when you are learning a new (hard) skill. Don't underestimate the power of the old-school ways!\nWe will code out two different games which are a fun, incredibly effective way to learn how to program. You can be creative and add your own features or just follow me.\nThe course is divided into 10 easy-to-follow sections, one for each day, about 2 hours of content per day. You can do it at this pace, or you can slow things down, either way you can grasp Python fundamentals gradually. No need to rush; we will keep moving forward but you shouldn't feel overwhelmed.\nHands-On Experience: From lecture 2, you'll be writing Python code. I believe that the best way to learn is by doing, so be prepared to roll up your sleeves and tackle fun coding challenges.\n\n\nWhat You'll Learn:\nDays 1-3: Python Basics: Start with the fundamentals of Python programming. Learn about variables, data types, lists, and other essential programming concepts.\nDays 4: Game Development: We’ll apply what you’ve learned in days 1-3 by making a text-based RPG (no graphics). There’s nothing better than game programming to work on your coding skils.\nDays 5: Classes and Objects: We will tackle one of the most important concepts in programming: objects and classes. This will set you up to excel for the rest of the course.\nDays 6: Remake of Day 4: We’ll take the same project we made on day 4, but with classes and objects. This is a fantastic way to build confidence in what you’re learning. Instead of focusing on a completely new project, we can focus on applying the principals we’ve just covered, on something that you are familiar with. No more “new concepts.” Just applying what we’ve covered.\nDays 7-9: Game Development Part 2: We’ll make another game, but this time we’ll make one that has graphics! This will introduce you to 3rd party modules and, like Day 6, will use everything we’ve covered,\nDay 10: Algorithmic Thinking: I’ll challenge you with various algorithms and code challenges. This will give you a chance to apply what you’ve learned in a create and problem-solving manner. Nothing is more valuable than creative application when learning a new skill!\nWhy Me?\nI've been a code instructor since 2014 and an engineer since 2004. I have a special passion for helping people start from scratch and having worked with 100s of learners in person, I have seen and heard all the requests of new students and put them into practice. I use a lightboard to help teach concepts visually. In the world of AI, more and more content is detached and impersonal as you get farther away from a human. This will help you \"see\" the concepts from a real person!\nWhy Python?\nPython is renowned for its simplicity and readability, making it an ideal choice for beginners. Moreover, it's a language with vast applications, from web development and data analysis to artificial intelligence and automation. Learning Python opens doors to numerous career opportunities. You won’t master it here, but you will get a solid grasp of what it’s capable of and how it works\nJoin the \"10-Day Python Blitz\" and take your first step toward a rewarding programming journey. Whether you're looking to boost your career prospects or explore a new hobby, my course will equip you with the skills you need. Don't miss out on this opportunity to become a Python pro in just 10 days. Enroll now and unlock the world of endless possibilities that Python has to offer!",
      "target_audience": [
        "Anyone who wants to learn how to code and has no experience",
        "Anyone wanting to begin their journey towards becoming a professional Python developer",
        "Anyone wanting to establish good understanding of programming before jumping into another langauge"
      ]
    },
    {
      "title": "Learn C++ File Handling Project (console): Mini Database",
      "url": "https://www.udemy.com/course/learn-c-file-handling-project-console-mini-database/",
      "bio": "C++ File Handling Project (Console based) :Mini database: Student Database Management System & Result Calculation System",
      "objectives": [
        "Students will learn to make a console-based project in C++ based on file handling concepts.",
        "Learn how to create mini-database( which is a binary file) that contains records of students",
        "Learn to add, delete, update, search records of students in the database",
        "Learn to create Result Calculation System that calculates the result of whole class & also shows individual student result.",
        "Learn to implement concepts & make project after doing C++ beginners level course"
      ],
      "course_content": {
        "Introduction to Project: Student Database Management & Result Calculation System": [
          "Introduction",
          "Preview of Project Demo & Download Project Complete Source Code",
          "Dev C++ Installation",
          "How To Run Project In Dev C++",
          "How To Run Project in Visual Studio",
          "How To Run Project in Code Blocks",
          "Designing Home Screen Of Project"
        ],
        "Student Database Management System (SDMS) Implementation ( Part A )": [
          "Creating student class & adding some member variables",
          "Adding getdata() function of class & creating class object in main function",
          "Adding other class functions e.g showdata(),Tabular Display() & getstudentrollno",
          "Adding Show Student Record () function : (searches and displays student record)",
          "Adding Constructor to student class",
          "Quiz 1"
        ],
        "Student Database Management System (SDMS) Implementation ( Part B )": [
          "Add Entry Menu ( ) Function that shows SDMS menu",
          "Display All Records : SDMS Menu Option 2 Implementation",
          "Add/Create Student Record : SDMS Menu Option 1 Implementation",
          "Search Student Record : SDMS Menu Option 3 Implementation",
          "Update Student Record : SDMS Menu Option 4 Implementation",
          "Update Case # 1",
          "Update Case # 2",
          "Update Case # 3",
          "Update Final Summary",
          "Delete Student Record : SDMS Menu Option 5 Implementation",
          "Quiz # 2 (Regarding Student Database Managment System)"
        ],
        "Result Calculation System Implementation": [
          "Creating Menu of Result Calculation System",
          "Show class Result : Result Calculation Menu Option 1",
          "Show Student Report Card : Result Calculation Menu Option 2"
        ],
        "Summary": [
          "Project Code Summary"
        ],
        "Bonus Lecture : How to create your own header file in C++ & Books recommended": [
          "Bonus Lecture : How to create your own header file in C++ & Books recommended"
        ]
      },
      "requirements": [
        "Access to a computer with internet to install Dev C++",
        "Student should know all basic concepts of C++ like data types, operators , decision making statements, loops, functions, arrays, pointers, structures, classes, File Handling in C++ etc"
      ],
      "description": "The Course basically creates a project that teaches how to create a mini-database using the concept of File Handling in C++. Once created, course teaches students how to use C++ File Handling Concepts to create, search, update and delete records in the database(a binary file is used as database to store students records). It also teaches how to retrieve records of students and show the class result or individual student result on the output screen. These all functions are performed by one program in C++ which is the project that we will teach students how to create and run that program.",
      "target_audience": [
        "C++ Intermediate students who just completed C++ beginners level course and want to implement C++ basics & File Handling concept by creating a mini-database."
      ]
    },
    {
      "title": "Python Django Full Stack Development: Build Modern Web App",
      "url": "https://www.udemy.com/course/python-django-full-stack-development-build-modern-web-app/",
      "bio": "Advance Your Web Development Skills: Learn Full Stack Django and Build Modern, Scalable Applications.",
      "objectives": [
        "Build dynamic, responsive, and secure full-stack web applications with Django",
        "Master Python fundamentals and Django framework for backend development",
        "Integrate frontend and backend seamlessly using Django Templates",
        "Build real-world projects Portfolio Website",
        "Working with Forms and User Input",
        "Database Interaction"
      ],
      "course_content": {},
      "requirements": [
        "No experience required"
      ],
      "description": "Unlock the Power of Full Stack Web Development with Python and Django!\nAre you ready to build modern, dynamic, and powerful web applications from start to finish? This comprehensive course takes you on a journey through the entire web development process using the robust and highly popular Python Django framework. Whether you're a beginner looking to launch your web development career or an experienced developer wanting to master the full stack, this course provides you with the knowledge and practical skills you need to succeed.\nGo Beyond the Basics: Master Both Frontend and Backend Development\nThis course isn't just about Django; it's about becoming a true full-stack developer. You'll learn how to build the server-side logic with Python and Django, design engaging user interfaces with HTML, CSS, and JavaScript, and connect them seamlessly to create sophisticated web applications. We'll also explore how to work with databases, handle user interactions, implement authentication and authorization, build RESTful APIs, and even deploy your applications to the real world.\nLearn by Doing: Build Real-World Projects\nWe believe in learning by doing. That's why this course is heavily project-based. You won't just be listening to lectures; you'll be actively building real-world web applications alongside the instructor. Through these hands-on projects, you'll solidify your understanding of core concepts and gain practical experience that you can showcase in your portfolio.\nWhat You'll Learn:\nPython Fundamentals for Web Development: Get a solid foundation in Python programming, the backbone of Django. We'll cover essential concepts like data types, control flow, functions, and object-oriented programming.\nDjango Core Concepts: Dive deep into the Django framework, understanding its architecture, models, views, templates, and forms. Learn how to create dynamic web pages and handle user requests effectively.\nFrontend Development Essentials: Build engaging user interfaces with HTML for structure, CSS for styling, and JavaScript for interactivity. Understand how to integrate these technologies seamlessly with your Django backend.\nUser Authentication and Authorization: Implement secure user registration, login, and permission systems to protect your web applications.\nWorking with Forms and User Input: Handle user data effectively using Django's form system, including validation and data processing.\nTemplate Engines and Dynamic Content: Utilize Django's template language to create dynamic web pages that display data from your backend.\nTesting Your Django Applications: Write unit tests and integration tests to ensure the reliability and stability of your code.\nDeployment Strategies: Learn how to deploy your Django applications to production environments so they can be accessed by users worldwide.\nBest Practices and Security: Discover industry best practices for Django development and learn how to protect your applications from common security vulnerabilities.\nModern Web Development Workflows: Understand how to use tools and techniques for efficient and collaborative development.\nWho is this course for?\nAnyone interested in building modern, scalable, and secure web applications.\nBy the end of this course, you will be able to:\nBuild complete, full-stack web applications using Python and Django.\nUnderstand the fundamental concepts of both frontend and backend development.\nDesign and implement database models using Django's ORM.\nCreate dynamic and interactive user interfaces.\nImplement user authentication and authorization.\nDeploy your web applications to a live server.\nApply best practices for Django development and security.\nConfidently tackle your own web development projects.\nJoin us on this exciting journey and become a proficient Python Django full-stack developer! Enroll now and start building the web applications of your dreams!",
      "target_audience": [
        "Anyone who want to learn web development with Python Django"
      ]
    },
    {
      "title": "Image Manipulation with Python and Pillow",
      "url": "https://www.udemy.com/course/python-pillow/",
      "bio": "Learn how to edit images programmatically",
      "objectives": [
        "Convert images to other file formats automatically",
        "Transform images through resizing, flipping, and adding filters",
        "Crop images dynamically",
        "Remove solid color backgrounds",
        "Write a simple command line application",
        "Add logos",
        "Create your own watermarks"
      ],
      "course_content": {
        "Welcome!": [
          "Welcome & Setup"
        ],
        "Project #1: Image Converter": [
          "Opening an Image",
          "Displaying an Image",
          "Converting and Saving Images",
          "Creating a Command Line Tool"
        ],
        "Geometric Transformations: Resizing, Rotating, Flipping": [
          "Resizing Images",
          "Creating Thumbnails",
          "Rotating and Flipping",
          "Cropping",
          "Quiz"
        ],
        "Project #2: Smart Cropping": [
          "Smart Cropping",
          "Removing Outliers"
        ],
        "Project #3: Adding a Logo": [
          "Adding a Logo"
        ],
        "Project #4: Watermarking an Image": [
          "Drawing a Watermark",
          "Centering Text",
          "Drawing a Rectangle Around the Text",
          "Rotating the Watermark"
        ],
        "Project #5: Removing the Background (Chroma Key)": [
          "Removing the Background",
          "Detecting Errors"
        ],
        "Filtering and Enhancing Images": [
          "ImageFilter and ImageEnhance",
          "Next Steps"
        ]
      },
      "requirements": [
        "Basic understanding of Python data types and functions",
        "Ability to install Python dependencies, i.e. \"pip install ...\"",
        "Access to a computer"
      ],
      "description": "Pillow is a free and open source library for the Python programming language that allows you to easily create and manipulate images.\nIn this course, we'll take a hands-on approach to learning the library with several projects:\nA command line application to convert image file types\nA tool to detect the edges of an object to crop around it\nResizing and adding logos and watermarks dynamically to a source image\nRemoving solid backgrounds similar to the Chroma key effect\nAll of the source code is included with the course, so you can learn by coding along, watching the videos, or refactoring the code to meet your needs.\nIf you're looking to automate your image editing workflow, expand your knowledge of Python, or are seeking your next creative project, this course is a must for you.",
      "target_audience": [
        "Developers looking to automate image editing",
        "Beginner+ Python developers who are looking for accessible, hands-on projects",
        "Marketers with some coding background who want to automate images for their campaigns"
      ]
    },
    {
      "title": "Complete Java Developer Bootcamp",
      "url": "https://www.udemy.com/course/complete-java-developer-bootcamp/",
      "bio": "The complete Java Course to Master Core Java Development, OOP, Hibernate and Java Interview Questions Step-by-Step",
      "objectives": [
        "Complete Knowledge of Java Programming, OOP, HIbernate etc.",
        "How to develop innovative, functional Java 8 apps with ease",
        "Take Any Java Job Interview with great Confidence",
        "Able to write high performance advanced Java programs",
        "Able to develop Java EE applications"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Computer and Programming",
        "A Computer with either Windows, Mac or Linux to install the softwares (Free Softwares) required for the course",
        "Willingness to learn, code, and excitement to program, Nothing else required."
      ],
      "description": "This course will help you learn Java programming and create solution to the real-world problems using Java Programming Language.\n**** This course gets updates every week with new Topics related to Java Development. ******\nAt the end of this course, you will have the basic knowledge and skills that you can apply in writing and creating real world applications using Java.\nAll lectures are having practical hands on sessions where complete and detailed insight is provided into each concept being taught.\nThis course will cover everything you need to know to become a successful Java programmer starting as a beginner.\nJava is a set of several computer software and specifications developed by Sun Microsystems, later acquired by Oracle Corporation, that provides a system for developing application software and deploying it in a cross-platform computing environment. Java is used in a wide variety of computing platforms from embedded devices and mobile phones to enterprise servers and supercomputers.",
      "target_audience": [
        "Anyone interested in Learning Java Programming and Development",
        "This Course is great beginners with zero previous knowledge as it start from scratch and proceed to advanced topics",
        "Perfect for those who want to sharpen their existing intermediate knowledge and move to next level",
        "Developers/Programmers looking to build Java apps or looking for high-paying Java Developer jobs"
      ]
    },
    {
      "title": "REST API: Data Extraction with Python - without Web Scraping",
      "url": "https://www.udemy.com/course/rest-api-data-extraction-automation-python/",
      "bio": "Use REST APIs to exctract the data you need from websites - no need for web scraping",
      "objectives": [
        "Data Extraction with REST APIs and Python - no need for Web Scraping",
        "Using Postman to test API requests before writing your code",
        "Handling different types of authentication required by APIs",
        "Completing practical projects to extract currency exchange rates and business details and reviews using popular APIs",
        "Source codes (*.py files) for all Exercises can be downloaded",
        "Q&A board to send your questions and get them answered quickly"
      ],
      "course_content": {},
      "requirements": [
        "Some prior programming experience in Python (e.g. Data Structures and File Handling) will help.",
        "This course adopts a step-by-step approach and requires you to open a Python editor, download available *.py code files, and start applying the provided examples and exercises.",
        "Python 3: Codes of this course are tested on Python 3. It is up to you to adapt them if you want to run them in Python 2."
      ],
      "description": "Do you want to extract data from a website? Before using web scraping, you have to check first if this website has an API that gives you access to the data you need. There are several popular platforms that give developers access to their “web services”, also known as “APIs”. So using APIs is the official way for data extraction and doing other automation stuff allowed by such applications. You can even benefit from some APIs to build your own applications. If an API allows you to get the data you want to extract from a website, then you do not need regular web scraping.\n\n\nREST APIs usually generate output in JSON or XML format because most of programming languages can handle these formats easily. In fact, JSON is very similar to data types in programming languages; for example, it is very similar to Python dictionaries.\n\n\nSome APIs require authentication to control their usage, using an API Key or Client ID and Client Secret, similar to a username and password, so to speak.\n\n\nIn this course, you will start by learning how to extract data using a very simple currency rate conversion API that does not require any authentication but it will teach you the fundamentals of using REST APIs. After that, you will study more advanced video tutorials on sophisticated APIs such as Yelp and Google Places. You will also learn how to use the REST API client, Postman, to test an API before writing your code.\n\n\nBy the end of this course, you will not only be able to apply the given practical examples, but you will also be able to apply the same fundamentals you learned to any other REST API to extract the data you need from popular websites. So let’s start.\n\n\nCourse Contributors, special thanks to:\nMajid Alizadeh (Coding & Instructions)\nMichael Bukachi (Coding & Instructions)\nYasmin Moslem (Coding & Instructions)\nYusuf Yurtsever (Video Creation & Narration)",
      "target_audience": [
        "Those who want to learn how to use REST APIs and Python for data extraction and automation."
      ]
    },
    {
      "title": "Java Certification - I (OCA): Practice for 1Z0-808 Exam",
      "url": "https://www.udemy.com/course/java-certification-i-oca-practice-for-1z0-808-exam-i/",
      "bio": "Be an Oracle Certified Associate(OCA) Java SE 8 Programmer-I; Preparation for Interview. MCQ with solution & explanation",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "This course is for complete preparation of the Oracle Java SE 8 Programmer – I examination includes 5 Practice Tests with  350 multiple-choice questions (MCQ). All questions have been designed based on real exam questions. Some questions may have more than one answer because in the actual exam you might expect some questions with multiple answers. I have explained the solution to every question and related possible questions.\n\nWhy is this course important?\nThis course contains 350 questions similar to Oracle Java SE 8 Programmer – I real exam.  By regular study and practice those questions, you will be an ideal candidate for the exam with complete preparation. Throughout the 5 sample practice test, you will get a flavor of the actual exam. The journey to complete this course will improve your programming skills to a great extent, which will be helpful in the job interview.\nKey features of practice sections and model test:\nYou can pause the test at any time and resume later.\nYou can retake the test as many times as you would like.\nThe progress bar at the top of the screen will show your progress as well as the time remaining in the test. If you run out of time, don’t worry; you will still be able to finish the test.\nYou can skip a question to come back to at the end of the exam.\nYou can also use “Mark for Review” to come back to questions you are unsure about before you submit your test.\nIf you want to finish the test and see your results immediately, press the stop button.\n\n\nOCA -Java SE 8 Programmer – I exam details:\nExam Number: 1Z0 808\nExam Title: Java SE 8 Programmer I\nDuration: 150 min\nNumber of Questions: 70\nPassing Marks: 65%\nExam topics (All covered in this course):\nJava Basics\nWorking with Java Data Types\nUsing Operators and Decision Constructs\nCreating and Using Arrays\nUsing Loop Constructs\nWorking with Methods and Encapsulation\nWorking with Inheritance\nHandling Exceptions\nWorking with Selected classes from the Java API\n\n\nWhere to register the exam?\nYou may visit ORACLE website to get information for registration",
      "target_audience": [
        "Anybody who is planning to attend Oracle Java Certification Exam",
        "Anyone who is preparing for Java job interview"
      ]
    },
    {
      "title": "Javascript Practice - Zero to Master - The Coding Interview",
      "url": "https://www.udemy.com/course/javascript-practice-zero-to-master-the-coding-interview/",
      "bio": "The Javascript Bootcamp Course to master Javascript, data structures and algorithms and pass your coding Interview",
      "objectives": [
        "Practice to become an advanced and confident programmer from scratch",
        "Get interview-ready by understanding how to problem solve coding interview challenges",
        "Javascript fundamentals: variables, if/else, operators, boolean logic, functions, arrays, objects, loops, strings, and more",
        "Object-oriented programming: constructor",
        "Get support and make connections online with an active focused community with developers and mentors",
        "How to problem solve and dig through documentations like a developer",
        "Practice your skills with 30+ challenges and assignments (source code solutions included)"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. We go through everything step by step"
      ],
      "description": "Are you familiar with Javascript and programming in general, perhaps considering a coding interview soon, but are looking to train, sharpen and master your Javascript skills and your data structures and algorithms with an anthology of some of the most important practice examples and a journey that can smoothly get you there?\nIf you understand Javascript conceptually, or have recently just gotten started, but find you still need a solid extra boost to really lock it in and gain confidence as a developer and during interviews, than this course is specifically designed for you!\nThe reality is that we have all been there on the other side of the table and it doesn't matter how many interesting lessons you've learned, if you don't have enough focused practice experience, problems which would otherwise be quite simple to solve seem needlessly challenging.\nThis course will cover from the ground up some of the most essential coding interview questions in Javascript and programming data structures and algorithms. We will gradually introduce more and more challenging concepts to give you a complete picture with a master tool box of knowledge to impress your next interviewer and colleagues.\nLearning programming feeling fluent and able to write out your thoughts and problem solve on the fly may seem overwhelming, especially when staring at a blank page under pressure, but there is one thing that can break through the barriers for you and take you to the next level - practice.\nThis course offers an efficient model of hours upon hours of practice examples that come with multiple solutions as well as a glossary of definitions. That way you can move through the course freely at your pace and start at very very beginning of programming in Javascript learning about datatypes or jump right in to leet code examples, matrices, Fibbonaci sequences and much more.\nWalking into a coding interview and having the confidence from fresh practice examples is what makes the difference between landing your dream job at a 150K+ versus feeling frustrated and uncertain.\nI have worked for some of the biggest Unicorn companies in the valley, as well as have built successful applications with large dev team force and overseen popular interview questions from Google, Amazon, Uber and beyond. This course specifically focuses and encourages a disciplined approach to improving your ability to break down and problem solve data structures and algorithms with Javascript and help lift you up.\nWhy is this the right Javascript course for you?\nThis is the most practice friendly for complete beginners to advanced Javascript practice and coding interview Course on Udemy. It's an all-in-one topic by topic focused approach that will take you from the very fundamentals of Javascript and programming, all the way to building advanced algorithms.\nYou will learn Javascript from the very beginning, step-by-step. I will guide you through the console with many code alongs and examples, important theory about how Javascript works behind the scenes and more.\nYou will also learn how to problem solve like a developer, how to build out formulas from scratch, the proper conventions for your code, how to debug code, and many other real-world skills that you will need in order to confidently write programs from scratch.\nAnd unlike other courses, this one actually contains beginner, intermediate, advanced, and even expert topics.\nBut... You don't have to go into all these topics. This is a long course that focuses on Javascript. and The Coding Interview and it is designed to bring you a combination of courses all in one! But you can improve your skills by focusing only on specific parts of this course. You can use this course as the lifetime reference guide for certain topics as you continue to build projects, do interviews, land new jobs and learn more that you can always come back to anytime you wish to advance in a particular topic.\nBy the end of the course, you will have the knowledge and confidence that you need in order to take on coding interview questions.\nWhy am I the right Solidity teacher for you?\nMy name is Clarian, I've worked as a head engineer with top tech and entertainment companies around the world for over 15 years, tech developer, CEO, consultant in the space, and I am fully passionate and dedicated to what I teach.\nI have recently been spending my time building comprehensive training models with clear explanations to help others evolve and grow by demystifying common misconceptions and problems.\nWhat do we learn exactly in this course?\nCareful and practical definitions, followed by clear examples, and exercises for you to try hands on in which we go over multiple solutions every time.\nEssential breakdowns of coding interview questions and solutions for data structures and algorithms that show you how to do it on your own.\nAn enormous amount of practice exercises. Prepare to train to become a Javascript ninja from working on virus assymetric hacking models, extracting uber databases, accessing game levels, to highly common asked interview questions such as fibonnaci sequences, the rain water matrix, truncating, chunking, and much much more...\nOptimization and refactoring techniques to not just write code, but write code that works according to its appropriate context.\nIndustry level experience and advice including key tricks and tips to look out for.\nQ&A and a live online free active school with over 10,000 of my students including graduates and mentors working at Google, AWS, and deep in the startup life.\nLessons include: Palindromes, Truncating, Reversing strings, Assymetric Arrays, Nested Loops, Anagrams, Reg Ex, Async Await, Promises, Recursion, Callbacks, Build calculators, Fetch Databases, Manipulate Data, Virus detection, Formatting Automation, and much much more\nCheck out the course curriculum for an even more detailed overview of the content :)\n\n\nThis is what's also included in the package:\nConsistently updated content with video and downloadable code files you can reference whenever you want.\nClear explanations which come with exercises, solutions, and discussions\nAn online community of active developers and students is available for support and discussion.\nFree support in the course Q&A\n\n\nThis course is for you if...\n... you want to gain a clear and advanced understanding of Javascript and coding interview challenges\n... you have been trying to learn Javascript but: 1) still don't really understand programming completely, or 2) still don't feel confident to code out problems\n... you are interested in working as a programmer in the future\n... you already know Javascript and development and are looking for a course to clearly go over advanced topics. This course includes expert topics!\n... you want to get started with programming: Javascript is an awesome and very interesting first language!\nDoes any of the above sound good to you? If so, then whenever you're ready, start this new adventure today, and join me and thousands of other developers in one of the most practice oriented Javascript course that you will ever need!\nThis Javascript course is ideal for anyone searching for more info on the following: coding interview - data structures and algorithms and practicing and mastering javascript",
      "target_audience": [
        "Take this course if want to gain a clear and advanced understanding of Javascript",
        "Take this course if you have been trying to learn Javascript but: 1) still don't really understand JavaScript, or 2) still don't feel confident with the coding interview",
        "Take this course if are interested in working as a programmer in the future",
        "Take this course if you want to advance with data structures and algorithms"
      ]
    },
    {
      "title": "Complete Swift development masterclass",
      "url": "https://www.udemy.com/course/completeswift/",
      "bio": "Master the fundamentals and advanced features of Swift development",
      "objectives": [
        "Swift",
        "Basics of Software Development",
        "Beginner Swift concepts",
        "Advanced Swift concepts",
        "Object Oriented Programming",
        "Principles of Software development"
      ],
      "course_content": {},
      "requirements": [
        "Interest in iOS app development and Swift",
        "Mac"
      ],
      "description": "This course is a unique experience on Udemy.\nThere are loads of Swift resources online to choose from, but this is the only course that takes you from a complete beginner in software development, teaches you the fundamentals, advanced topics, and makes you an expert in this field.\nIn addition, you have loads of practice exercises, challenges and projects to work on. I didn't just add a bunch of exercises at the end. Instead, each concept is put in code and practiced so that we make sure you apply and learn everything through action.\nYou get over 20 hours of on-demand videos, exercises and most importantly projects to apply the knowledge we talk about.\nI've spent years building applications in Swift, and years again teaching people how to build code for themselves.\nThis is the most complete course I've ever done, and it's all to help you on your journey to become an expert developer.\nWe will cover basic topics such as\nlanguage fundamentals\ncollections\nflow control\nloops\nhandling errors and exceptions\nfunctions\nclosures\nhigher order functions\nAs well as advanced topics such as\nObject Oriented Programming\nPrinciples of development\nStandard functions\nTypes of classes\nExtensions\nGenerics\nAsynchronous programming\nAnd we will put everything in practice through examples and projects.\nIf you want to take ONE COURSE to master Swift take this course.",
      "target_audience": [
        "Complete newbies",
        "Intermediate developers",
        "Beginner developers",
        "iOS developers"
      ]
    },
    {
      "title": "Complete Rust Course - Zero To Advanced 2023",
      "url": "https://www.udemy.com/course/complete-rust-course-zero-to-master/",
      "bio": "Learn Rust Coding For All Levels - System Programming - Code Alongs with Examples & Exercises",
      "objectives": [
        "Code along and become an advanced and confident Rust developer from scratch",
        "Get interview-ready by understanding how Rust and safe memory (including data races) really works under the hood",
        "Rust fundamentals: variables, if/else, operators, boolean logic, functions, arrays, vectors, loops, strings, macros and more",
        "Public & Private visibility (correctly securing data), struct and enums, muilding libraries and modules",
        "Object-oriented programming: main functions, enums and structs, interfaces, abstractions and hash tables",
        "How to problem solve and dig through documentations like a developer",
        "Practice your skills with 30+ challenges and assignments (source code solutions included)"
      ],
      "course_content": {
        "What is Rust and Why Does It Matter": [
          "What Is Rust And Why It Matters - Quick Overview",
          "Join Our Online Live School",
          "What Is Rust Concurrency",
          "Rust's Growth in Popularity",
          "Rust - The Borrow Checker",
          "Safe Mode and Unsafe Mode in Rust",
          "Data Races in Rust",
          "Issues with Rust",
          "What Is Rust - Summary",
          "Exercise - Meet The Online Community"
        ],
        "Rust Course Set Up": [
          "Setting Up The Rust IDE Play Ground",
          "The Rust IDE Text Editor And Console Basics",
          "The Rust IDE Setting Basics",
          "Rust IDE Configuration and Customization"
        ],
        "Beginner Lessons in Rust": [
          "How To Write Comments in Rust",
          "First Exercise Solution on How To Write Comments in Rust",
          "Hello World Example in Rust",
          "What Are Datatypes in Rust",
          "How To Declare Variables in Rust - Strings Integers and Booleans in Rust",
          "Printing Variables as Arguments in Rust",
          "Exercise - Write Variables in Rust",
          "Solution - Write Variables in Rust",
          "What Are Macros in Rust",
          "What Is The Print Line Println macro in Rust",
          "Print line Println Exericse in Rust",
          "What Are Integers in Rust",
          "Integer Range and Integer Overflow in Rust",
          "Integer Exercise Example in Rust",
          "Integer Solution Example in Rust",
          "What Are Variables in Rust",
          "Exercise - What Are Variables in Rust",
          "What is Const in Rust - Constants",
          "What Are String Literals str in Rust",
          "What is The String Object in Rust - from() and len()",
          "String Object Methods in Rust",
          "Exercise - Modifying String Literals in Rust",
          "Solution - Modifying String Literals in Rust",
          "What Are Operators in Rust",
          "Arithmetic Operators in Rust",
          "Relational Operators",
          "Logical Operators in Rust",
          "Decision Making Statements in Rust",
          "Rlse If statements and nested If Statements in Rust",
          "Match Statements in Rust",
          "Exercise- Decision Making Structures in Rust",
          "Exercise Solution - Decision Making Structures in Rust",
          "What Are Loops in Rust",
          "What Is The For loop in Rust",
          "While Loop in Rust",
          "The Loop Keyword in Rust",
          "Exericse - How To Loop in Rust",
          "Solution - How To Loop in Rust",
          "What Is A Function In Rust",
          "What Is A Function In Rust II",
          "Exercise - What Are Functions in Rust",
          "Solution - What Are Functions in Rust"
        ],
        "Beginner To Intermediate Lessons": [
          "What Are Tuples in Rust",
          "Exercise - Destructing Tuples with Rust",
          "Solution - Destructing Tuples with Rust",
          "What Are Arrays in Rust",
          "Exercise - Loop Through And Modify an Array in Rust",
          "Solution - Loop Through And Modify an Array in Rust",
          "The Stack vs The Heap in Rust",
          "Ownership in Rust",
          "Borrowing In Rust - The & Symbol in Rust",
          "Exericse - Borrowing in Rust",
          "Solution - Borrowing in Rust",
          "How To Slice in Rust",
          "Exercise - How To Slice in Rust",
          "Solution - How To Slice in Rust",
          "What Are Structs in Rust",
          "Exercise - Write Methods and Structs in Rust",
          "Solution - Write Methods and Structs in Rust",
          "What Are Enums in Rust",
          "Exercise - Matching Enums in Rust",
          "Solution - Matching Enums in Rust",
          "What Are Modules in Rust",
          "Exercise - Nested Modules in Rust",
          "Solution - Nested Modules in Rust",
          "What are HashMaps in Rust",
          "Exercise - Build A Hash Table with HashMap in Ruat",
          "Solution - Build A Hash Table with HashMap in Rust"
        ],
        "Intermediate to Advanced Videos in Rust": [
          "Error Handling in Rust",
          "Exercise - Write Error Handling For A Program in Rust",
          "Solution - Write Error Handling For A Program in Rust",
          "What Are Generic Types in Rust",
          "What Are Traits in Rust",
          "Reader And Writer Types in Rust Input and Output",
          "Reader and Writer Inputs and Outputs II in Rust",
          "Install Rust on Your Computer",
          "How To Use The Cargo Tool in Rust",
          "What is Iter in Rust and Iterators",
          "Exercise - Iterate through a vector in Rust",
          "Exercise - Iterate through a vector in Rust II",
          "Solution - Iterate Through A Vector In Rust",
          "What Are Closures in Rust",
          "What Are Smart Pointers in Rust",
          "Code Along And Customize Your Own Smart Pointer in Rust",
          "Exercise - Customize Your Own Custom Smart Pointer",
          "Solution - Customize Your Own Custom Smart Pointer",
          "Multi Threads in Rust",
          "Exercise - Build Your Own Multi Threads in Rust",
          "Solution - Build Your Own Multi Threads in Rust"
        ]
      },
      "requirements": [
        "No programming needed to get started. You will learn everything from the ground up."
      ],
      "description": "Rust is one of most beloved and important languages in the world. It is a programming language focused on memory safety, protection, high performance during the processing of large amounts of data, concurrency and a highly efficient compiler.\nOver 300 of the biggest companies in the world reportedly use Rust in their tech stacks, including Dropbox, Sentry, and Brilliant. Rust is mostly used if you're looking for work in project types as Web Development, Systems Programming, and CLI Tools\nWhy is this the right Rust course for you?\nThis is the most complete Rust focused course on Udemy. It's an all-in-one topic by topic focused approach that will take you from the very fundamentals of Rust and programming, all the way to complex concepts such as multi threading and error handling.\nYou will learn Rust from the very beginning, step-by-step. I will guide you through building programs from scratch and fun code along with examples, an important theory about how Rust works behind the scenes, and compiling and deploying your own programs from basic geometric calculations to spawning threads and manipulating the multi process level coding.\nYou will also learn how to problem solve like a developer, how to build programs scratch, the proper conventions for your code, how to debug code, and many other real-world skills that you will need on your developer job.\nAnd unlike other courses, this one actually contains beginner, intermediate, advanced, and even expert topics, so you don't have to buy any other course in order to master Rust from the ground up!\nBut... You don't have to go into all these topics. This is a long course that focuses purely on Rust, because, after all, it's \"The Complete Rust Course\". It is designed to bring you a combination of courses all in one! But you can enhance your skill level by only watching sections of this course. You can use this course as the lifetime reference guide for certain topics as you continue to build projects and learn more that you can always come back to anytime you wish to advance in a particular topic.\nBy the end of the course, you will have the knowledge and confidence that you need in order to ace your Rust job interviews and become a  developer for programming in Rust.\nWhy am I the right Rust teacher for you?\nMy name is Clarian, I've worked as a head engineer and and am fully passionate and dedicated to what I teach. I have worked and built with top SF Valley companies and blockchain from NEAR to Solana consulting including working on projects that use Rust for coding out smart contracts. Problem-solving and building complex design projects is my love and my life. I am someone who is passionate and committed to building quality projects from the ground up.\nI have recently been spending my time building comprehensive training models with clear explanations to help others evolve and grow the space. This is the most clearly focused and in-depth solidity course that you will find on Udemy (and maybe the entire internet) that provides video code alongs, plenty of challenges, and exercises with solutions and discussions combined into one.\nI know how students learn Rust and what they need in order to master it. And with that knowledge, I designed the ideal course curriculum. It's a focused approach on core fundamentals, multiple real world examples, advanced pattern techniques and hands on projects, that will take you from zero to professional and confident Rust developer in a matter of weeks.\nWhat do we learn exactly in this course?\nBuild multiple complex programs from scratch for your portfolio! In these projects, you will learn how to think and properly develop your ideas into written code including how to maximize your time by finding and reading documentation and best practices.\nMaster the Rust fundamentals: variables, if/else, operators, boolean logic, String Object, functions, arrays, modifiers, macros, loops, strings, vectors, object handling, concurrency, memory allocation, stack vs the heap and more\nLearn Rust from the beginning: Public & Private visibility (correctly securing data), struct and enums, special macros and  variables, functions, hashMaps etc\nHow Rust works behind the scenes: Memory safety and data races (low level language), events and error handling, scoping, threading and much more\nDeep dive into functions: functions, methods, closures, recursion, main function and more\nDeep dive into object-oriented programming: Structs and Enum building from scratch, GenericTypes and Traits for libraries and modules and much more. Even though structs and enums with methods aren't called objects, they provide the same functionality, according to the Gang of Four's definition of objects.\nLearn the Rust techniques that are used by professionals including concretion version abstractions and interface design, the cargo tool, IDE, debugging and compiling.\nCheck out the course curriculum for an even more detailed overview of the content :)\nThis is what's also included in the package:\nDownloadable code files you can reference whenever you want.\nClear explanations which come with exercises, solutions, and discussions\nAn online community of active developers and students is available for support and discussion.\nFree support in the course Q&A\n30+ Exercises to practice your new skills (solutions included)\nThis course is for you if...\n... you want to gain a clear and advanced understanding of Rust\n... you have been trying to learn Rust but: 1) still don't really understand Rust, or 2) still don't feel confident to write programs in the language\n... you are interested in working on a Rust based project in the future\n... you already know Rust and are looking for a course to clearly go over advanced topics. This course includes expert topics!\n... you want to get started with programming: Rust is an awesome and very interesting first language!\nDoes any of the above sound good to you? If so, then whenever you're ready, start this new adventure today, and join me and thousands of other developers in the most focused Rust course that you will ever need!\nThis Rust course is ideal for anyone searching for more info on the following: Rust - systems programming - concurrency - web developer - Rust interview preparation.",
      "target_audience": [
        "Take this course if want to gain a clear and advanced understanding of Rust",
        "Take this course if you have been trying to learn Solidity but: 1) still don't really understand Rust, or 2) still don't feel confident to program in the language",
        "Take this course if are interested in working on a Rust project in the future",
        "Take this course if you already know Rust and are looking for a course to clearly go over advanced topics. This course includes expert topics!",
        "Take this course if you want to get started with programming: Rust may not be your typical first language to learn, but we pay extra attention to break things down in simple format!"
      ]
    },
    {
      "title": "Ansible for Network Engineers: Hands-On & Capstone Projects",
      "url": "https://www.udemy.com/course/ansible-for-network-engineers-hands-on-capstone-projects/",
      "bio": "100% Hands-On : Master Ansible from Basics to Advanced for Network Engineers with 100+ Videos and Capstone Projects",
      "objectives": [
        "Master Ansible Basics and Advanced Concepts: Configure and automate network devices with Ansible playbooks, modules, and templates tailored for network engineer",
        "Integrate Ansible with ServiceNow: Use ServiceNow modules with Ansible to create seamless end-to-end automation workflows for ITSM integration.",
        "Automate Cisco Devices with Ansible: Manage network tasks like configuration backup, IOS upgrades, and username updates using powerful Ansible modules.",
        "Build Practical Skills with Capstone Projects: Complete projects like VLAN automation and IOS upgrades to tackle real-world networking challenges.",
        "Leverage Ansible Automation Platform: Set up workflows, manage dynamic inventories, and schedule jobs using Ansible Automation Platform..",
        "Optimize Ansible for Scalability: Use roles, collections, tags, and advanced strategies to streamline and optimize automation workflows."
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of networking concepts (e.g., IP addressing, routing, and switching).",
        "Familiarity with Cisco devices and their configuration basics.",
        "No programming experience needed"
      ],
      "description": "Unlock the power of network automation with Ansible! Designed specifically for network engineers, this comprehensive course takes you from beginner to advanced levels, emphasizing real-world, hands-on labs to build practical expertise.\nWhat makes this course unique?\n\n\nServiceNow Integration: Learn to integrate Ansible with ServiceNow to orchestrate end-to-end automation workflows seamlessly.\nFour Capstone Projects: Tackle real-world scenarios and build projects that prepare you for industry challenges.\n100+ Videos: Dive deep into a wealth of content covering concepts, labs, and advanced topics.\nThis course is perfect for those who want to:\n\n\nNetwork engineers aiming to master Ansible for device configuration and management.\nProfessionals looking to implement end-to-end automation with ServiceNow.\nLearners preparing for the DevNet Expert certification journey.\nWhat you'll get:\n\n\nStep-by-step creation and management of Ansible playbooks for network devices.\nReal-world applications with a variety of network equipment.\nAdvanced features like Ansible Collections, Roles, Templates, Automation Platform, Custom Modules, and integrations with ServiceNow and Slack.\nJoin the growing community of network professionals leveraging automation to simplify and optimize their workflows. Start your journey towards becoming a DevNet Expert today!\n\n\nCourse Outline:\n\n\nCourse Introduction\n\nIntroduction\nIntroduction to Ansible for Network Engineers\n\nWhy use Ansible for Network Automation\nComparing Ansible with Puppet, Chef, and SaltStack: Key Differences\nAnsible Architecture & Concepts\nAnsible Control Node Installation and Setup\nLab Setup for Network Automation\nAnsible Basics: Configuration, Inventory, and Playbooks\n\nAnsible Configuration\nAnsible Ad-Hoc command and Inventory Basics\nYAML 101\nInventory in YAML format\nAnsible Playbook\nMastering Variables in Ansible\n\nUnderstanding Variables in Ansible\nValid Variable Names\ngroup_vars and host_vars\nRegister\nansible_facts\nMagic Variables\ninclude_vars\nset_fact\n[ Capstone Project 1] - Configuration Backup\n\nCapstone Project 1 - Configuration Backup - Overview\nCapstone Project 1 - Configuration Backup - Solution\nUsing Conditionals\n\nloop and with_items\nRegistering variables with a loop\nloop_control\nuntil\nUsing when\nManaging Cisco IOS Devices with Ansible\n\nios_facts module\nios_command - Part 1\nios_command - Part 2 - prompt\nios_config - Introduction\nios_config -  parents\nios_config - after\nios_config - before and match\nios_config - backup and backup-options\nios_config - diff_against and diff_ignore_lines\nios_config - save_when\nios_config - src\nResource Module - hostname\nResource Module - interfaces\nResource Module - l2_interfaces and l3_interfaces\nRegEx and Parsers\n\nRegEx in Ansible\ncli_parse and TextFSM, NTC-templates, and pyATS\n[ Capstone Project 2] - Automated Local Username Update and Cleanup\n\nCapstone Project 2 - Automated Local Username Update and Cleanup - Overview\nCapstone Project 2 - Automated Local Username Update and Cleanup - Solution 1\nCapstone Project 2 - Automated Local Username Update and Cleanup - Solution 2\nFilters Plugins and Jinja2\n\nFilters - Introduction\nFilters combine\nFilters ternary\nFilters map\nFilters to_json and to_nice_json\nFilters to_yaml and to_nice_yaml\nFilters zip\nFilters ip_addr\nFilters to_datetime and strftime\nJinja2 Introduction\nJinja2 - if else\nJinja2 - for loop\nJinja2 - include\nJinja2 - ios_config\nDeep Dive into Lookup and Callback Plugins\n\nLookup Plugins Overview\nLookup Plugin - File\nLookup Plugin - env\nLookup Plugin - pipe\nLookup Plugin - template\nCallback Plugin - stdout\nCallback Plugin - aggregate\nCallback Plugin - notification - log_plays and email\nCallback Plugin - notification - slack integration\nManaging Task Execution with Blocks, Assert, and Handlers\n\nBlock\nAssert\nHandlers\nReusable Automation with Collections, Roles, Includes and Imports\n\nCollections\nRoles\nInclude and Import\nAnsible Best Practices and Optimizations\n\nStrategies in Ansible\nForks and Serial in Ansible\nUsing tags\nUsing check_mode\nDelegation\nno_log and log_path\nignore_errors\nfailed_when and changed_when\nAnsible Lint\nansible_vault\n[ Capstone Project 3] - Automated IOS Upgrade\n\nCapstone Project 3 - Automated IOS Upgrade - Overview\nCapstone Project 3 - Automated IOS Upgrade - Solution\nAnsible Automation Platform (AAP) and AWX Essentials\n\nAnsible Automation Platform Overview and Installation\nSetting up AAP to manage hosts\nUsers, Teams and Roles in AAP\nJob Template Surveys\nScheduling Jobs\nNotifications in AAP\nCreating Dynamic Inventory in AAP\nUsing Workflow in AAP\nAdvanced Ansible: Custom Inventory Plugins and Modules\n\nCustom Inventory Plugin\nCustom Module\nServiceNow Integration with Ansible\n\nServiceNow Overview and snow_record Module\nServiceNow snow_record update using Jinja2 and HTML\nServiceNow ITSM Incident Module\nServiceNow ITSM Change Module\n[ Capstone Project 4] - Automated VLAN Configuration using ServiceNow Workflow and AAP\n\nCapstone Project 4 - Automated VLAN Configuration using ServiceNow Workflow and AAP - Overview\nCapstone Project 4 - Automated VLAN Configuration using ServiceNow Workflow and AAP - Solution",
      "target_audience": [
        "Network Engineers: Professionals looking to automate network device management and workflows using Ansible.",
        "IT and Automation Enthusiasts: Anyone eager to learn network automation concepts and apply them in real-world scenarios.",
        "DevNet Certification Aspirants: Learners preparing for the DevNet Expert certification and seeking hands-on experience with Ansible.",
        "Beginner to Intermediate Learners: Individuals with basic networking knowledge (no programming required) who want to build expertise in network automation."
      ]
    },
    {
      "title": "Python Programming Fundamentals for beginners",
      "url": "https://www.udemy.com/course/python-programming-fundamentals-for-beginners/",
      "bio": "Learn to code with Python from scratch",
      "objectives": [
        "Learn how to write Python Expression",
        "Learn how to write Python Statements",
        "Learn how to write Python Variables",
        "Learn how to write Python Lists",
        "Learn how to write Python Conditional Statements",
        "Learn how to write Python Loops",
        "Learn how to write Python Functions"
      ],
      "course_content": {
        "Setting Up Your Programming Environment": [
          "Python Programming Fundamentals",
          "Introduction",
          "What is programming",
          "What is Python",
          "Installing Python on Windows",
          "Installing Python 3 on MacOS",
          "Installing PyCharm on Windows",
          "Installing PyCharm on MacOS",
          "Installing Atom",
          "What is Command Line Interface"
        ],
        "Programming Basics": [
          "Expressions",
          "Statements",
          "Code Comments",
          "Code Indentaton",
          "Variables",
          "Creating Variables",
          "Number Data Type",
          "String Data Type",
          "Boolean",
          "List",
          "Creating a List",
          "if statements",
          "else statements",
          "for loops",
          "Functions"
        ]
      },
      "requirements": [
        "No Python Programming experience required"
      ],
      "description": "Python is an interpreted high-level general-purpose programming language. Its design philosophy emphasizes code readability with its use of significant indentation. Its language constructs as well as its object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.\nPython is an in-demand programming language that can help you unlock the door to a better paying job. Whether you're a new programmer looking to switch careers or an experienced coder looking to expand your fit within a challenging job market.\nComputer programming is the process of performing a particular computation, usually by designing/building an executable computer program. Programming involves tasks such as analysis, generating algorithms, profiling algorithms' accuracy and resource consumption, and the implementation of algorithms.\nComputer Science is a creative, challenging, and rewarding discipline. Computer programmers, sometimes called software engineers, solve problems involving data: computing, moving, and handling large quantities of data are all tasks made easier or possible by computer programs.\nLearning to program a computer is a skill that can bring you great enjoyment because of the creativity involved in designing and implementing a solution to a problem. Python is a good  language to learn because there is very little overhead in learning to write simple programs. Python also has many libraries available that make it easy to write some very interesting programs including programs in the areas of Computer Graphics and Graphical User Interfaces.",
      "target_audience": [
        "Beginners to Python"
      ]
    },
    {
      "title": "MultiThreading In Python",
      "url": "https://www.udemy.com/course/multithreading-in-python/",
      "bio": "Python MultiThreaded Programming",
      "objectives": [
        "you will be able to write Multithread programs using the multithreading APIS in python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Write a pgm to create a thread which will print 'hello world' on the screen",
          "Write a pgm to create 5 threads which in turn each will print 'hello world'",
          "Write a pgm to create a thread which adds 2 numbers and prints the result",
          "Write a pgm to create 5 threads which executed in parallel, each will ..",
          "Write a pgm to print the default thread name while the thread is under execution",
          "Write a pgm which creates a thread, officially names it and tries to ...",
          "Write a pgm where in we use the logging function to print the thread name and ..",
          "Write a pgm to create a thread which is not dependent on the main thread ...",
          "Write a pgm to Create a daemon thread  and From the main thread function",
          "Write a pgm to Create a daemon thread and From the main thread function ...",
          "Write a pgm to check if the thread is still active and is the thread a daemon",
          "Write a pgm to create a daemon thread & using the enumerate and join function do",
          "Write a pgm to create 3 daemon threads & using enumerate and join do",
          "Write a pgm to override the run() function of thread",
          "Write a pgm to override the constructor and run() functions of thread",
          "Write a pgm where in a thread waits for a particular event indefinitely and",
          "Write a pgm where in a thread waits for a particular event for a particular",
          "Write a pgm which creates 2 threads which does the following with out conflict:",
          "Write a pgm where in the main thread tries to acquire the lock twice in a",
          "What is the advantage of using a with statement to acquire a lock in a thread",
          "Write a pgm where two consumer threads wait on the producer thread to notify the",
          "Explain the usage of semaphores in threads",
          "Explain the usage of threading. local()",
          "Exercise and Interview Questions. Pls visit the description for listof questions"
        ],
        "Explain the programs below:": [
          "Question 1",
          "Question 2",
          "Question 3",
          "Question 4",
          "Question 5",
          "Question 6",
          "Question 7",
          "Question 8",
          "Question 9",
          "Question 10",
          "Question 11",
          "Question 12",
          "Question 13",
          "Question 14",
          "Question 15",
          "Question 16",
          "17",
          "Question 18"
        ]
      },
      "requirements": [
        "Basics of Python"
      ],
      "description": "Welcome to the Course \"MultiThreading In Python\":Python Multithreaded Programming\nThis course is from a software engineer who has managed to crack interviews in around 16 software companies.\nSometimes, life gives us no time to prepare, There are emergency times where in we have to buck up our guts and start  bringing the situations under our control rather then being in the control of the situation.  At the end of the day, All leave this earth empty handed. But given a situation, we should live up or fight up in such a way that the whole action sequence should make us proud and be giving us goosebumps when we think about it right after 10 years.\nSome feel threads are too hard and painful for programmers to use. It can be difficult to get a good education in how to program with threads. Most of the times, concurrent programming remains somewhat esoteric.\nIf you’re a programmer and you’re not already writing concurrent software, you should start. 100+ cores could be common ten years from now (or possibly even sooner).\nAs the typical number of CPUs increases, concurrency is changing from a beneficial option to a necessity.  That will increase demand for understanding of concurrent programming, and every programmer needs the knowledge of concurrent programming.\nThis course contains A simplistic programming approach which helps you to learn the concepts and usage of different multi threading apis in the Multi Threading module of Python.\nThe following programming questions are dealt in this course:\n1. Write a pgm to create a thread which will print 'hello world' on the screen\n2. Write a pgm to create 5 threads which in turn each will print 'hello world' on the screen\n3. Write a pgm to create a thread which adds 2 numbers and prints the result\n4. Write a pgm to create 5 threads which executed in parallel, each will add 2 numbers and print the result\n5. Write a pgm to print the default thread name while the thread is under execution\n6. Write a pgm which creates a thread, officially names it and tries to print the official name of the thread\n7. Write a pgm where in we use the logging function to print the thread name, the debug level while the thread is executing\n8. Write a pgm to create a thread which is not dependent on the main thread (create a daemon thread)\n9. Write a pgm to do the following:\n- Create a daemon thread\n- From the main thread function, wait indefinitely for the daemon thread to complete execution\n10. Write a pgm to do the following:\n- Create a daemon thread\n- From the main thread function, wait for a stipulated period to the daemon thread to complete execution\n11. Write a pgm to check if the thread is still active and is the thread a daemon\n12. Write a pgm to create a daemon thread, and using the enumerate and join function, wait for the daemon thread to complete execution\n13. Write a pgm to create 3 daemon threads, and using the enumerate and join function, wait for the deamon threads to complete execution\n14. Write a pgm to override the run() function of thread\n15. Write a pgm to override the constructor and run() functions of thread\n16. Write a pgm where in a thread waits for a particular event indefinitely. once the event is set by the main thread, the thread stops waiting and resumes execution\n17. Write a pgm where in a thread waits for a particular event for a particular period of time. once the event is set by the main thread, the thread stops waiting and resumes execution\n18. Write a pgm which creates 2 threads which does the following with out conflict:\nAcquire the lock, increment the counter value and release the lock.\n19. Write a pgm where in the main thread tries to acquire the lock twice in a sequential fashion\n20. What is the advantage of using a with statement to acquire a lock in a thread.\n21. Write a pgm where two consumer threads wait on the producer thread to notify them about the availability of the resource\n22. Explain the usage of semaphores in threads\n23. Explain the usage of threading. local()\n24. What are the different lock types a Condition object can be associated  with?\n25. What is the method that wakes up all threads which are waiting for the condition to set\n26. Which method is used to identify a particular thread?\n27. What is the method used to retrieve the list of all active threads?\n28. Which kind of lock supports the following statement:\n- If a thread already owns the lock, acquire() will increment the recursion level by one, and return immediately.\n29. The following states/features supported by the ____________ object\nLocked\nUnlocked\n30. The following states/features supported by  the _______________ object\nLocked\nUnlocked\nOwning thread\nRecursion level\n31. Which thread method is used to wait until it terminates?\n32. How to detect the status of a python thread?\n33. How to check if a particular thread is a Daemon or a normal thread ?\n34. Which one is reentrant lock type?\n35. How to terminate a blocking thread?\n36. How is the run() method invoked?\n37.  _____________ synchronization method is used to secure the resources with limited capacity",
      "target_audience": [
        "Python Automation Engineers",
        "Python Developers",
        "Students, Fresh Graduates",
        "Anybody who is interested to learn the MultiThreading concepts in Python"
      ]
    },
    {
      "title": "Building Reusable Code with Rust",
      "url": "https://www.udemy.com/course/building-reusable-code-with-rust/",
      "bio": "Use generics, traits, and macros to write clean and reusable Rust libraries that are easy to understand and maintain",
      "objectives": [
        "Write clean and reusable Rust code for your applications",
        "Use loop, map, filter and fold to avoid duplicated code",
        "Understand generics and learn to use it to abstract algorithms for multiple data types",
        "Define and enforce clear interface using traits",
        "Work with macros and compiler plugins for metaprogramming",
        "Explore how the standard library uses features such as generics, traits and macros",
        "Structure your code with modules and crates and publish them online"
      ],
      "course_content": {
        "Basics of Code Reuse": [
          "The Course Overview",
          "Setting Up the Rust Development Environment",
          "Exploring Code Reuse in Rust",
          "Loops and Iterators",
          "Using Functional Programming Loops",
          "Functions in Rust"
        ],
        "Using Generics in Rust": [
          "Exploring Generics",
          "Use Generic Functions to Reuse Algorithms",
          "Reuse Structures in Enums and Structs",
          "Working with Generic in Struct Methods",
          "Generics in the Rust Standard Library – Part I",
          "Generics in the Rust Standard Library – Part II"
        ],
        "Defining Interfaces with Traits": [
          "Exploring Traits",
          "Using Trait Bounds and Trait Objects to Communicate Interfaces",
          "Associated Types versus Generics and Trait Inheritance",
          "Exploring Traits, Generics, and Performance",
          "Traits in the Rust Standard Library – Part I",
          "Traits in the Rust Standard Library – Part II"
        ],
        "Hacking the Language with Macros and Compiler Plugins": [
          "Write Code with Code – Metaprogramming in Rust",
          "Use Declarative Macros to Write Less Code",
          "Using Procedural Macros for Custom Derive",
          "Macros in the Rust Standard Library – Part I",
          "Macros in the Rust Standard Library – Part II"
        ],
        "Reusing the Code with Other People Using Modules and Crates": [
          "Introducing Crates",
          "Using Modules to Define the Structure of Crates",
          "Using a Crate with Cargo.toml",
          "Publishing to crates.io"
        ]
      },
      "requirements": [
        "Basic knowledge of Rust programing is required."
      ],
      "description": "Rust is the ideal language for writing safe, correct code in a way that won't make you pull your hair out. This course will teach you how to build reusable Rust code so that you can stop copying and pasting code. Write code that can adapt to many different usages.\nYou will reuse code by using advanced features such as traits, generics and macros. You will work with different forms of code reuse, loops, map, filter and fold to save time and resources. Achieve higher-level reuse without sacrificing runtime performance. Organize your code into modules and crates to publish them to crates. io.\nBy the end of the course you will be able to avoid code duplication and write clean reusable code.\nAbout the Author\nShing Lyu is a software engineer and open-source promoter. Shing contributed to Mozilla's Servo and Gecko (Firefox) browser engines using Rust, and is active in Rust study groups, training, and conference talks. Shing is passionate about coding, automated testing, and promoting free and open-source software craftsmanship.",
      "target_audience": [
        "This course will appeal to Rust developers who are already familiar with the language and want to learn how to build Rust libraries that are maintainable and reusable, and have an API that honors Rust conventions."
      ]
    },
    {
      "title": "Learn Computer Programming from Absolute Zero",
      "url": "https://www.udemy.com/course/computer-programming-from-absolute-zero/",
      "bio": "Programming fundamentals: Learn how to program computers, clear and easy, with no prerequisites!",
      "objectives": [
        "You'll understand how computers work, how they are programmed, how to design a program, and you'll get a solid base to continue your education."
      ],
      "course_content": {
        "Introduction": [
          "What will we learn?",
          "Why programming?",
          "The author",
          "Course structure"
        ],
        "About Computers": [
          "What will we learn?",
          "What is a computer?",
          "Why do we need computers, anyway?",
          "The premise of computers",
          "The transistor",
          "Inversion",
          "Breadboard",
          "\"AND\" card game",
          "\"OR\" card game",
          "AND logic gates",
          "OR logic gates",
          "Logic gates - conclusion",
          "Boolean algebra",
          "Boolean algebra - conclusion",
          "Decomposing numbers, part 1",
          "Decomposing numbers, part 2",
          "Base-8 numbers",
          "Binary system",
          "XOR logic gate",
          "Addition using XOR and AND",
          "What have we learned?"
        ],
        "About Programming": [
          "What will we learn?",
          "What does it mean to program?",
          "Languages",
          "Types of languages",
          "Machine language",
          "Operating systems",
          "Compilers, interpreters, transpilers",
          "What have we learned?"
        ],
        "Algorithms and Flowcharts": [
          "What will we learn?",
          "Algorithms",
          "Algorithm example",
          "Boxes",
          "Multiplying together three numbers",
          "Testing the algorithm",
          "Variables",
          "Conditions",
          "Loops",
          "i = i + 1",
          "Algorithm: count to 10 (end condition)",
          "Algorithm: count to 10 (start condition)",
          "Algorithm: add together numbers from 1 to 10",
          "Algorithm: number guessing game",
          "Arrays",
          "Arrays using playing cards",
          "Algorithm: traversing an array",
          "Algorithm: the smallest card",
          "Algorithm: summing an array",
          "Algorithm: product between min and max of an array",
          "What have we learned?"
        ],
        "The Architecture of a Computer": [
          "What will we learn?",
          "General architecture of a computer",
          "Processor",
          "Memory",
          "Peripherals",
          "Data",
          "What have we learned?"
        ],
        "Editors": [
          "What will we learn?",
          "From typewriter to text editors",
          "IDE",
          "File operations in code editors",
          "What have we learned?"
        ],
        "The Ruby Programming Language": [
          "What will we learn?",
          "About Ruby",
          "Installing Ruby",
          "iRB",
          "Scripting",
          "Comments",
          "Variables",
          "Data types, part 1",
          "Data types, part 2",
          "Type conversions",
          "Input",
          "Logic values",
          "Conditions",
          "Loops",
          "Number guessing game",
          "Methods",
          "Object-oriented programming",
          "What we have learned (and what we haven't)",
          "Assignment"
        ],
        "Conclusion": [
          "What have we learned during the entire course",
          "Where to now?"
        ]
      },
      "requirements": [
        "Basic arithmetics -- the four operations. Nothing else at all. That's why it's called \"from absolute zero\"!"
      ],
      "description": "Have you ever wanted to know how computers are programmed? Have you tried to learn, but got discouraged but too much maths, too much technology, too much studying? This course will explain everything from scratch, step by step and idea by idea, and you won't need anything but the four basic operations. (Psst! Actually you don't even need division.)\nYou're going to discover what makes a computer tick, how these machines are programmed, and what are the secrets that enable programmers to get along with them -- all in short, easy and synthesised video lectures. The course begins at an absolute zero, and will guide you all the way to using a modern programming language, called Ruby.\nAll this is taught using presentation, animations, videos of wires and coloured lights, playing card games and imagination exercises about people from different universes. There's one single assignment at the end, and you'll also find a few resources to help you on your way.\nAfter completing this course you'll be able to carry on by yourself, or choose a more advanced course, without any fear that you'll get bogged down in strange or scary concepts!\nThis is the English translation of a successful course that I've been teaching for many years. There are students of this course who today have rewarding careers as programmers. You can have one, too!",
      "target_audience": [
        "People looking to get into programming without any prerequisites",
        "People interesting in finding out more about this profession",
        "People who don't like to cram, but want to get somewhere in IT"
      ]
    },
    {
      "title": "Python Accelerator : Mastering Python with Google Bard AI",
      "url": "https://www.udemy.com/course/python-accelerator-mastering-python-with-google-bard-ai/",
      "bio": "Unlock the Full Potential of Python Programming with AI-guided Learning Experience",
      "objectives": [
        "You will Mastering Python Fundamentals, a solid understanding of Python syntax, variables, data types, and control flow statements",
        "Data Manipulation and Analysis, How to work with data structures in Python like lists, tuples, and dictionaries",
        "Object-Oriented Programming: Understand the principles of object-oriented programming (OOP) and learn how to create classes, objects, and methods",
        "Learn to apply inheritance, polymorphism, abstraction class, and encapsulation",
        "Utilizing Python Libraries: Discover popular Python libraries like NumPy for data manipulation",
        "File Handling and Exception Handling: Learn how to read from and write to files in Python",
        "Collaboration with Google Bard AI: Explore the unique capabilities of Google Bard AI and learn how to assistance with coding tasks, and function optimization",
        "Practical Projects and Real-World Applications: Apply your Python knowledge to practical projects and real-world scenarios",
        "Problem-Solving and Critical Thinking: Develop problem-solving skills and learn to approach programming challenges with a logical and analytical mindset",
        "Fast-Paced Learning: Experience an accelerated learning journey with a carefully designed curriculum that focuses on core concepts and practical application",
        "Self-Paced Learning: Access the course materials online and learn at your own pace",
        "Carefully designed curriculum that focuses on core concepts and practical application. Benefit from the efficiency and guidance provided by Google Bard AI",
        "learn What is Generative AI for prompt engineering",
        "Participate in Practice test to test your learning skills"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience is needed, You will learn everything you need to know",
        "You need a computer system with an active internet"
      ],
      "description": "Python Mastery: Accelerate Your Coding Journey with Google Bard AI\n\n\nAre you looking to master Python programming in record time? Join our cutting-edge online course, \"Python Accelerator: Mastering Python with Google Bard AI.\" This unique program combines the power of Python with the assistance of Google Bard AI, enabling you to fast-track your Python skills and become proficient in no time.\n\n\nIn this course, you will delve into the fundamentals of Python programming, gaining a solid understanding of syntax, variables, data structures, and control flow. With the guidance of Google Bard AI, you'll navigate through hands-on exercises and real-world examples, building a strong foundation in Python programming principles.\nlearn what is Generative AI for future learning\n\n\nParticipate in Practice test to test your learning skills\n\n\nHarness the power of Python, one of the most popular and versatile programming languages, and unlock its full potential with the assistance of Google Bard AI. This innovative course combines interactive lessons, hands-on projects, and AI-guided learning to deliver an immersive and dynamic learning experience.\n\n\nStarting with the fundamentals, you'll learn Python syntax, data types, and control structures, enabling you to write clean and efficient code. Through practical examples and exercises, you'll gain proficiency in handling data structures, file manipulation, and exception handling.\n\n\nDiscover the art of object-oriented programming (OOP) and leverage its principles to design elegant and scalable code. You'll learn to create classes, inherit functionality, and employ polymorphism, empowering you to build complex software systems with ease.\n\n\nWhat sets this course apart is the integration of Google Bard AI. Throughout your learning journey, you'll have a virtual programming assistant that provides personalized guidance, offers optimization suggestions, and helps you debug your code effectively. Embrace the power of AI to enhance your learning and achieve exceptional results.\n\n\nBy the end of the course, you'll be equipped with the skills to tackle real-world Python projects confidently. Collaborate with fellow learners, showcase your creativity, and apply your knowledge to solve hands-on coding challenges. Our comprehensive curriculum and AI-powered learning environment ensure a fast-paced and engaging experience tailored to your individual needs.\n\n\nDon't miss this opportunity to master Python programming efficiently. Enroll in \"Python Mastery: Accelerate Your Coding Journey with Google Bard AI\" and embark on a learning adventure that will shape your future as a skilled Python developer.\n\n\nBy the end of this course, you will be fluent in Python course and ready to work with any Python application you can dream of.\nSign up today, and look forward to:\nHD Video Lectures\nPython Challenges and Exercises\nLovely real-world dynamic examples\n\n\nAbout Your Instructor\nSekhar Metla is a software engineer with 20+ years of professional experience. He is the author of several online-selling courses with more than 40,000+ students in many countries. He has a Master of Science in Computer Applications in Software Engineering. His students describe him as passionate, pragmatic, and motivational in his teaching.\nEnroll now to join the world of Python programming and start building your own applications today!",
      "target_audience": [
        "Anyone who wants to win a career as a Python professional using Google Bard AI",
        "Beginners Software developers curious about Python for artificial intelligence",
        "Who wants to learn to master skills in Python for machine learning",
        "Who wants to start a career in Python programming",
        "Beginner Python Developer curious about to Data Science"
      ]
    },
    {
      "title": "Python Programming for Biological Problems",
      "url": "https://www.udemy.com/course/python-programming-for-biological-problems/",
      "bio": "Solve more than 30 exercises and 4 Biology projects using Python programming language! Step by step implementations!",
      "objectives": [
        "Learn the basic syntax of Python language quickly and easily",
        "Implement the main Python language operators: mathematical, logical, relational and conditional",
        "Create loop structures using for and while commands",
        "Implement functions for modularization of programs",
        "Implement the main Python language collections: tuples, lists, dictionaries, sets and arrays",
        "Manipulate text files",
        "Perform error and exception handling",
        "Learn the basic intuition and practice about regular expressions",
        "Learn the basic intuition and practice of Object Orientation",
        "Estimate the rate of recombination between genes",
        "Analyze genetic sequences",
        "Model bacterial growth",
        "Write a code that simulates a biology test, where at the end the grade is calculated",
        "Analyze gene sequence files directly from databases in .fasta format",
        "Analyze protein structure files in .pdb format",
        "Build a basic identification key for plant species"
      ],
      "course_content": {
        "Introduction": [
          "Course content - Jones",
          "Course content - Guilherme",
          "Introduction to Python",
          "Installation",
          "Python IDEs",
          "COLAB file"
        ],
        "Variables, data types, and user inputs": [
          "Variables and constants",
          "Mathematical operations",
          "Exercises",
          "Exercise 1: Ki calculation",
          "Exercise 2: Recombination of genotypes"
        ],
        "Logical and relational operators": [
          "Logical and relational operators",
          "Exercise",
          "Exercise 1: Comparing weights of proteins"
        ],
        "Strings": [
          "Strings",
          "Exercises",
          "Sequences to be used in exercise 2",
          "Solution: abbreviating scientific names",
          "Solution: Extracting an exon from a gene"
        ],
        "Conditional operators": [
          "Conditional operators",
          "Exercises",
          "Solution: Taxonomic families",
          "Solution: Codons in a RNA sequence"
        ],
        "Loops": [
          "For loop",
          "While loop",
          "Exercises",
          "Solution: transcription of DNA",
          "Solution: Bacterial growth"
        ],
        "Collections": [
          "Tuples and lists",
          "Dictionaries and sets",
          "Matrices",
          "Exercises",
          "Dictionary with the symbols of their aa's and the mass",
          "Solution: mass of aminoacid sequeces",
          "Solution: transcription of DNA",
          "Project 1: Simulating a biology test",
          "Questions for the test",
          "Solution: part 1",
          "Solution: part 2",
          "Solution: part 3"
        ],
        "Functions": [
          "Functions",
          "Exercises",
          "Solution: function of recombination",
          "Solution: Ki calculation",
          "Solution: transcription function",
          "Project 2: calculating gene frequencies",
          "Chi-square distribution table",
          "Project 2: part 1",
          "Project 2: part 2"
        ],
        "Modules": [
          "Math and datetime",
          "Random and time",
          "Exercises",
          "Solution: generation of random DNA sequence",
          "Solution: function of population growth"
        ],
        "Custom modules": [
          "Creating packages",
          "Exercises",
          "Solution: DNA module",
          "Solution: module for ecology functions"
        ]
      },
      "requirements": [
        "Programming logic",
        "Basic biological knowledge"
      ],
      "description": "Biologists, biology students, and professionals in related fields generally have little or no contact with computer programming. However, the growing of data in genomic, protein and organism databases can be used to model the solution for some problems, such as the discovery of medicines and insecticides. It leads biologists to benefit from computer programming knowledge, so that they can develop useful applications in molecular biology, ecology, research on diseases, among others.\nThis course was developed with the purpose of introducing biologists, students of biology, biomedicine, ecology, pharmacy and professionals in related areas to programming using Python, which is nowadays one of the most used programming languages. It has a clear syntax and is easy to learn especially if you are a professional who are not familiar with technology. Many tools used in the field of biology were written in Python, which makes it a great option for establishing your first contact with computer programming. You will learn the following topics:\n\nPython installation and main tools (IDEs)\nVariables, constants and strings\nMath operations\nLogical, relational and conditional operators\nLoops (for and while)\nFunctions\nLists, dictionaries, tuples, sets and arrays\nManipulation of text files\nError and exception handling\nRegular expressions\nObject oriented\nAfter learning the basic concepts of Python, you will be able to apply the concepts in exercises, challenges and practical projects related to Biology. Below are some of the case studies that we will implement step by step:\n\n\nPrediction of the mass of a peptide sequence according to its amino acid composition\nSchedule a biology test that calculates the grade and whether the user got each question right or wrong\nCreating classes related to objects in the biological world\n.fasta gene sequence analysis\nAnalysis of gene frequencies according to the Hardy-Weinberg Theorem\nCreating functions for population ecology calculations\nDiscover patterns in RNA sequences\nEstimation of gene distances\nBasic species identification\nTroubleshooting gene frequencies\nCreating scripts for parsing .pdb-type protein sequence files\nTranscription of DNA sequences into RNA\nThere are more than 80 classes, concepts, code demonstration, and exercises with solutions! More than 30 proposed challenges and 4 small projects applying the concepts learned in each section in a biological context, with step-by-step resolution.",
      "target_audience": [
        "Biology students or similar areas, such as biomedicine, pharmacy, forestry engineering, etc.",
        "Biology or related professionals who wish to learn a programming language",
        "Developers or IT professionals who are interested in applying programming knowledge in the field of biology",
        "Undergraduate students taking programming courses",
        "People interested in programming languages"
      ]
    },
    {
      "title": "Mastering Rust: Building Safe and Efficient Software",
      "url": "https://www.udemy.com/course/mastering-rust-programming-building-safe-and-efficient-software/",
      "bio": "Essential Skills for Modern Software Development: A Comprehensive Journey Through Rust, from Basics to Building a Game",
      "objectives": [
        "Set up a Rust development environment and run basic programs.",
        "Master Rust's variables, data types, and control structures.",
        "Understand and implement Rust functions and modular code.",
        "Apply ownership and borrowing concepts for memory safety.",
        "Create and manipulate structs, enums, and use pattern matching.",
        "Create and manipulate structs, enums, and use pattern matching.",
        "Handle errors efficiently using Rust’s Result and Option types."
      ],
      "course_content": {
        "Introduction to Rust Programming": [
          "Overview of Rust: history, features, and benefits",
          "Setting up Rust development environment",
          "Hello World program in Rust",
          "Course Materials"
        ],
        "Rust basics": [
          "Variables and constants in Rust",
          "Primitive Data types in Rust",
          "Compound Data types",
          "User input",
          "Arithmetic operators, type casting and overflow",
          "Logic operators and if statements",
          "Infinite loops",
          "while and for loops"
        ],
        "Rust Functions and Modules": [
          "Functions in Rust: defining, calling, and returning values",
          "Functions using chatgpt",
          "Ownership and borrowing in Rust",
          "Modules and crates: organizing code in Rust projects"
        ],
        "Rust Structs, Enums, and Pattern Matching": [
          "Structs: defining custom data types in Rust",
          "Types of structures in Rust",
          "Enums: representing a group of related values",
          "Pattern matching: matching patterns to control program flow"
        ],
        "Advanced rust concepts": [
          "Option enum",
          "Error handling in Rust: Result and Option types",
          "Generics and traits in Rust",
          "Vectors"
        ],
        "Project : Rust Snake Game": [
          "Generating the code using chatGPT",
          "Code revision with ChatGPT",
          "Understanding the game logic used by ChatGPT",
          "Rendering the game graphics and displaying the game screen",
          "Handling user input",
          "Drawing the snake and understanding its movement and growth",
          "Updating game event",
          "Overview of the course and conclusion"
        ]
      },
      "requirements": [
        "Basic understanding of programming concepts.",
        "A computer capable of running Rust and associated tools.",
        "Internet access for software installation and resources.",
        "No prior experience with Rust is required, making it beginner-friendly."
      ],
      "description": "Embark on a comprehensive journey into the world of Rust programming with our course, \"Mastering Rust: Building Safe and Efficient Software\". This meticulously structured course is designed for both beginners and experienced developers looking to deepen their understanding of Rust, a language celebrated for its performance and safety features.\nStarting with the basics, you will first get acquainted with Rust's history, its unique features, and benefits. You'll set up your Rust development environment and craft your first \"Hello World\" program. As the course progresses, you'll delve into the core aspects of Rust including variables, constants, data types, and control structures like loops and conditional statements. Practical exercises will help you grasp the essentials of user input and data handling.\nThe course then advances to more complex topics such as functions, modules, and effective code organization using crates. A special focus will be on Rust’s innovative ownership and borrowing concepts, which ensure memory safety without a garbage collector.\nMoving further into structured data types, you'll explore structs and enums, along with the power of pattern matching. These concepts will be crucial as you begin building a Rust-based Snake game. This project will not only solidify your understanding of the language but also enhance your problem-solving skills as you implement game logic, handle user interactions, and manage game events.\nBy the conclusion of this course, you will not only have a thorough understanding of Rust’s fundamental and advanced concepts but also gain hands-on experience in applying these concepts in real-world applications. Whether you are starting your programming journey or looking to upgrade your coding arsenal, this course offers valuable insights and skills in one of the most sought-after programming languages in the industry today.",
      "target_audience": [
        "Beginners interested in learning a new, efficient programming language.",
        "Software developers looking to enhance their skills with Rust.",
        "Computer science students needing practical experience with system-level languages.",
        "Game developers eager to explore game programming with Rust.",
        "Professionals in tech fields seeking to improve their coding practices for better performance.",
        "Hobbyists and tech enthusiasts curious about modern programming trends and applications."
      ]
    },
    {
      "title": "Complete C++ Programming with Data Structures and Algorithms",
      "url": "https://www.udemy.com/course/c-plus-plus-programming/",
      "bio": "C++ Programming basics to Arrays, Strings, Pointers, Recursion, OOP's, Linked Lists, Stacks, Queues, Trees, Graphs ,DP",
      "objectives": [
        "For Complete Beginners",
        "Learn from the very basics concepts like loops ,Arrays 1D and 2D, Functions to advance topics like pointers, Dynamic Memory Allocations ,Recursion ,Strings",
        "Learn Object Oriented Programmings Concepts with Class Object Inheritance Polymorphism Abstraction and Encapsulation and lots more..",
        "Also Learn Data Structures and Algorithms Concepts like Linked List, Stacks and Queues, Trees, BSTs",
        "Learn Dynamic Programming with Advance Algorithms like Kruskals, Prims and Dijastra's Algorithms in Graphs",
        "Get the access of all typed materials",
        "The best is that all Codes which will be typed from the very beginning to enhance your skills in C++ Programming ."
      ],
      "course_content": {
        "Introduction Section": [
          "Topics for the Course",
          "Source Codes (Codes are also provided in each Section based on the Topics)",
          "Installing Dev C++ (For mac users check the resources)",
          "Basics Of Programming",
          "DataTypes",
          "TakingInput",
          "Finding_SimpleInterest",
          "ArithmeticOperators",
          "Fahrenheit to Celsius Conversion Program",
          "RelationalOperators",
          "Logical Operators",
          "Codes of part 1"
        ],
        "Conditional Statements": [
          "Conditional Statements",
          "Finding The Greatest Number Code",
          "Grading a Student Code"
        ],
        "While Loop": [
          "While Loop",
          "Syntax of While Loop",
          "Finding sum of N numbers",
          "sum of Even Numbers",
          "Prime Number Code and Pattern Printing Introduction",
          "Codes of part 2 and part 3"
        ],
        "Patterns": [
          "Pattern 1",
          "Pattern 2",
          "Triangle Pattern",
          "Increment and Decrement Operators"
        ],
        "For loop": [
          "For loop Introduction",
          "Scope of Variables",
          "Understanding Break and Continue",
          "Factorial of a given Number",
          "Reversing a given Number",
          "Palindrome Number",
          "Fibonacci Nth Number",
          "Codes of part 4 and 5"
        ],
        "Functions": [
          "Functions Introduction and Calculating nCr",
          "From N given numbers Find Prime Numbers",
          "How Function Call Works",
          "Scope in Functions",
          "Pass By Value In Functions",
          "Codes of part 6"
        ],
        "Arrays": [
          "Arrays Introduction",
          "Finding Max and Min in an Array",
          "Arrays and Functions 1",
          "Arrays and Functions 2",
          "Reversing an Array",
          "Linear Search",
          "Finding Duplicates in Array"
        ],
        "Sorting and Seaching Algorithms": [
          "Binary Search",
          "Selection Sort",
          "Bubble Sort Algorithm",
          "Insertion Sort",
          "code of part 7 and 8"
        ],
        "Strings(Character Arrays)": [
          "Length of String",
          "Reversing a String",
          "Dry Run for Reversing a String Program",
          "Replace Characters",
          "Inbuilt Functions and finding Prefixes of Strings"
        ],
        "Two Dimensional Arrays": [
          "Two Dimensional Arrays",
          "Sum and Maximum In Two Dimensional Array",
          "Sum Of columns",
          "How are 2D arrays Stored",
          "Codes of part 9 and 10"
        ]
      },
      "requirements": [
        "C++ Compiler and IDE, Like DevC++, CodeBlocks , Xcode etc.",
        "No previous knowledge is required to take this course, course starts from Basics and goes to Advance level like Data Structures and Algorithms.",
        "No Programming knowledge required.",
        "Anyone who wants to learn C++ can join this course ."
      ],
      "description": "So you want to learn C++ Programming from Basics to Advance ??\nWell this can be the course for you where you will learn from basics of C++ to advance topics to C++ like\nArrays, Recursion, Pointers , Object Oriented Programing, Linked Lists, Stacks, Queues, ,Trees, BST's ,Dynamic Programming , Graph etc.\nThe best part is you will Learn Data Structures and Algorithms in C++ in the same course.\nThis Course is made for   people who don't have any knowledge about programming & want to get started with  C++\nWhat I will learn ?\nBasics - Datatypes and Variables, Operators and Expressions, Conditional Statements, Loops, Pointers, Functions, Function Overloading, Oops Concepts, Classes and Objects, Constructors, Destructors, Operator Overloading, Inheritance, Polymorphism, Abstract Classes, Function Overriding, Static Members, Templates, Linked List, Stacks, Queues, Trees, Binary Trees, Binary Search Trees, Priority Queues, Dynamic Programming, Graphs\n\n\nSo, you've heard a lot about C++, but you don't know how to get started? Then this  course is exactly what you need!\nThis course assumes no previous coding experience . It doesn't matter if you have never written any programs or you have no idea about programming... After this course all of this will change.\nA major focus is problem-solving skills, algorithms and strong fundamentals. Also, the focus of this course will be to make sure that you have done the substantial amount of coding by the end of it. You'll be exposed from very easy to hard level of questions and Concepts\nCourse is designed keeping in mind the requirements of beginners. Course starts with fundamentals of logic building and problem solving..\nThis course will enhance the problem solving skills of the students using C++. Course follow step-by-step approach to make students fall in love with programming and ignite their passion of coding with the help of problems ranging to easy to intermediate to expert level.\nThis course will teach you all the fundamentals you need.\nWith more than 50+ hours of video this comprehensive course leaves no stone unturned!\nYou will learn how to program in C++ in a fast and easy way! .This course will teach you C++ in a practical manner\nAs for the curriculum, curriculum is designed to make students proficient in programming .\nYou will learn theory and you will also gain lots of practice. During the course we will write many programs that will make you a great programmer.\nI believe that when learning coding, it is best that you learn it while typing codes on your computer rather than just listening. This course exactly do that\nI have made the course as friendly as possible.",
      "target_audience": [
        "Beginners - (Concepts are Covered from Basics to Advance) who are willing to learn C++",
        "Anyone who want enhance C++skills by learning the basics of Object Oriented Programming (OOPS)",
        "ANYONE who wants to be a master in C++ Programming Language."
      ]
    },
    {
      "title": "Build & Sell Your Own Robust AI Agents Using Python & OpenAI",
      "url": "https://www.udemy.com/course/build-sell-your-own-robust-ai-agents-using-python-openai/",
      "bio": "Launch Your Own Powerful AI Tool/Agent for AI Text and Image Generation Using Python Programming and OpenAI from Scratch",
      "objectives": [
        "Build a full working AI Agent for Generating AI Text and AI Image using prompts with polished interface",
        "Explore prompt engineering techniques to guide and control model behavior",
        "Create a sleek GUI AI Agent using Python",
        "Capture user input and display AI responses in a human-like conversational format",
        "Enhance your AI Agent with history tracking and customization",
        "Learn to send prompt-based image generation requests via API",
        "Build an interface to visualize and refine AI-generated images",
        "Add image editing and saving functionality to your application",
        "Learn modular architecture to make your apps scalable and easy to extend",
        "Discover strategies to package and sell your applications as software products",
        "Explore marketplaces and real-world opportunities for monetization"
      ],
      "course_content": {
        "First AI Agent Project | Build and Deploy a Simple Text AI Chat Assistant": [
          "Download and Installation of Visual Code Studio",
          "Download and Installation of Python"
        ],
        "Create and Activate a Virtual Environment": [
          "Create and Activate a Virtual Environment"
        ],
        "Install Required Libraries and Dependencies": [
          "Install Required Libraries and Dependencies"
        ],
        "Setup OpenAI API Key": [
          "Setup OpenAI API Key"
        ],
        "Import Required Libraries and Load Environment Variables": [
          "Import Required Libraries and Load Environment Variables"
        ],
        "Initialize the OpenAI Client and Start Conversation with a System Role": [
          "Initialize the OpenAI Client and Start Conversation with a System Role"
        ],
        "Create Conversation Loop and Interact with your AI Chat Agent": [
          "Create Conversation Loop and Interact with your AI Chat Agent",
          "Exiting Chat with the AI"
        ],
        "Clear and Restart Your AI Chat Conversations": [
          "Clear and Restart Your AI Chat Conversations"
        ],
        "Return Your Chat History with AI Chat Agent": [
          "Return Your Chat History with AI Chat Agent"
        ],
        "Display Instruction Manual, Handle User Empty Messages and Deploy Your App": [
          "Display Instruction Manual and Handle User Empty Messages",
          "Handle Errors in your AI Chat Agent Conversations",
          "Deploy an Executable File for AI Chat Agent",
          "Source Code for AI Chat Assistant Project"
        ]
      },
      "requirements": [
        "A basic understanding of Python programming",
        "A computer with Python installed (Windows, macOS, or Linux)",
        "Internet access to interact with OpenAI APIs",
        "A willingness to experiment, build, and think creatively!"
      ],
      "description": "Welcome to \"Build & Sell Your Own Robust AI Agents using Python & OpenAI\" — the ultimate hands-on course designed to transform you from a curious learner into a profitable AI innovator. In this comprehensive course, you'll learn how to build powerful, production-ready AI applications using Python, OpenAI's GPT models, and cutting-edge prompt engineering techniques.\nThis course focuses specifically on building custom ChatGPT-powered AI Agents, fully functional Text Chat Applications, and AI Image Generators — tools that not only demonstrate your technical skill but can be monetized and deployed for real-world use.\nYou'll go step-by-step through building your own AI ChatApp, integrating speech recognition, generating high-quality images from text prompts using advanced diffusion models, and structuring your code for scalability and commercial distribution. Whether you're planning to sell these applications as software products, offer them as freelance services, or integrate them into your business, this course will equip you with the tools and strategies to succeed.\nSteps to Achieve Your Goal:\nMaster Foundations of Building AI Agents\nBuild Your Own ChatGPT-Powered Text Chat Application\nCreate Advanced AI Image Generators Using Text Prompts\nAdd Functional Tools for a Full AI Creation Suite\nStep into the future of technology and entrepreneurship with this cutting-edge, hands-on course that empowers you to build, customize, and monetize your own AI-powered applications using Python and OpenAI's powerful models. Whether you're a developer, digital entrepreneur, freelancer, or tech enthusiast, this course is your gateway to joining the next generation of AI innovators.\nIn this comprehensive and practical training, you'll learn how to craft intelligent, ChatGPT-style AI agents capable of natural conversation, generate high-quality AI images from prompts, and create complete AI-driven applications ready to deploy and sell. No fluff—just real-world AI development, guided by practical steps and revenue-focused strategies.",
      "target_audience": [
        "Developers and coders who want to harness AI to build real applications",
        "Students and hobbyists eager to break into the world of AI with practical projects",
        "Entrepreneurs and freelancers looking to launch or scale AI-driven products and services",
        "Tech enthusiasts who want to learn how AI tools like DeskGPT and DALL·E can be customized",
        "Marketers, content creators, and professionals who want to automate and enhance their workflows"
      ]
    },
    {
      "title": "Python for Beginners: Foundation for AI & Machine Learning",
      "url": "https://www.udemy.com/course/easy-python-programming-for-absolute-beginners-r/",
      "bio": "Master Python fundamentals with game development while building problem-solving skills essential for AI and tech careers",
      "objectives": [
        "Utilize Google Colab for Python Programming",
        "Apply Python Data Types in Practical Scenarios",
        "Construct Formatted Strings Using F-Strings",
        "Implement Functions and Methods in Python",
        "Employ Comparison Operators in Logical Expressions",
        "Control Program Flow Using if/elif/else, Loops and other statements",
        "Master problem decomposition and computational thinking skills essential for AI development",
        "Develop simple Python Games",
        "Build a strong Python foundation ready for AI, machine learning, and data science applications"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course!",
          "What is computing?",
          "Why Python?",
          "Course Overview",
          "Introduction"
        ],
        "Using Google Colaboratory": [
          "Registering for a Google Account",
          "What is Google Colab?",
          "Registering for Google Colab",
          "Google Colab Notebook Demo and First Code",
          "To Follow along with the lectures, use Notebooks located under the Resources tab",
          "What to do when you got an error?",
          "Google Colab - Quiz"
        ],
        "Assignments, Variables, Math Operators, and Comments": [
          "Section Introduction",
          "Assigning variables",
          "Demo: Variable Assignments",
          "Best Practices: Naming Variables",
          "Math Operators: Introduction",
          "Demo: Math Operators",
          "In-place Addition and Subtraction",
          "Math Operators: Conclusion",
          "Order of Operations: Introductions",
          "Demo: Order of Operations",
          "Python Comments: Introduction",
          "Demo: Python Comments",
          "Why use comments?",
          "variable_assignments",
          "Body Mass Index Calculation Assignment",
          "Assignments, Variables, Math Operators, and Comments"
        ],
        "Built-in Functions and Import Statements": [
          "Section Introduction",
          "Built-in Functions: Introduction",
          "Demo: Built-in Functions",
          "Guess a Secret Word",
          "Import Statements: Introduction",
          "Demo: Import Statements",
          "Simple Random Number Generator",
          "Built-in Function and Import Statements Quiz"
        ],
        "Data Types": [
          "Section Introduction",
          "Strings, Integers, and Floats",
          "Booleans and Typecasting",
          "Tuples",
          "Lists and Sets",
          "Dictionary",
          "None and File-like",
          "Demo: Quick Guess: 2-point Challenge Game",
          "Understanding Python Data Types",
          "Understanding Python Data Types: Part II",
          "Data Types Quiz"
        ],
        "F-Strings": [
          "Section Overview",
          "F -Strings",
          "String Interpolation",
          "F-Strings"
        ],
        "Methods": [
          "Section Overview",
          "Introducing Methods",
          "Modifying Data in Lists and Dictionaries",
          "The Alchemy of Strings",
          "Word Organizer",
          "Demo: Capital Conundrum",
          "Demo: The Magic Bag List Methods",
          "String, List, Dictionary Methods",
          "Methods - Quiz"
        ],
        "Comparisons": [
          "Section Overview",
          "Comparison Operators",
          "Examples of Comparison Operators in Action",
          "Object Identity in Python",
          "Great Operator Safari",
          "Comparison Operators: True or False"
        ],
        "Control Flow": [
          "Section Overview",
          "If Statements",
          "If/Else-If Statements",
          "If/Else-If /Else Statements",
          "While Loops",
          "Game Loop Explanation",
          "For Loops",
          "Range and Enumerate",
          "Pass, Break, and Continue",
          "Logic and/or",
          "List Comprehensions",
          "Dict Comprehensions",
          "Demo: Aethoria Trading Card Duel",
          "High Card Showdown: The Ultimate Card Duel",
          "Lucky Lottery: The Ultimate Number Match Game",
          "Control Flow - Quiz"
        ],
        "Writing Functions": [
          "Section Overview",
          "Simple Functions",
          "Returning Values from Functions",
          "Default Return Value",
          "Positional and Keyword Arguments",
          "Scope",
          "Demo: Cirque du Hilarity - Introduction",
          "Demo: Cirque du Hilarity - Game Plan",
          "Demo: Cirque du Hilarity - Draw cards",
          "Demo: Cirque du Hilarity - Choose a Card",
          "Demo: Cirque du Hilarity - Computer's Turn and Battle",
          "Demo: Cirque du Hilarity - Game Loop",
          "Problem Decomposition",
          "Problem Decomposition",
          "Slice 'n Dice Those Tricky Problems",
          "Function Follies",
          "Circus Showdown",
          "Number Duel",
          "Functions - Quiz"
        ]
      },
      "requirements": [
        "No programming experience needed.",
        "No programming experience required - perfect for aspiring AI professionals starting from scratch"
      ],
      "description": "Course Title: Python Programming for Beginners: Foundation for AI & Machine Learning\nCourse Description:\nMaster Python programming through an engaging, game-based approach that builds both coding skills and the computational thinking abilities essential for success in today's AI-driven world. This comprehensive course transforms complete beginners into confident Python programmers while developing the problem-solving mindset that powers artificial intelligence and machine learning.\nWhy This Course Matters: Python is the dominant programming language in AI, data science, and machine learning. By learning Python fundamentals through game development, you'll build a solid foundation for future AI careers while developing the analytical thinking skills that remain uniquely human and valuable in an automated world.\nWhat Makes This Different: Unlike traditional programming courses, this game-based approach makes complex concepts intuitive and memorable. Each lesson builds practical coding skills while strengthening your computational thinking abilities - the same problem-solving framework used by AI engineers and data scientists.\nCourse Structure - 11 Comprehensive Sections:\nIntroduction: Welcome to Python and its role in the modern tech landscape\nGoogle Colab: Set up your coding environment for immediate hands-on learning\nVariable Assignment: Master data handling, mathematical operations, and coding best practices\nBuilt-in Functions and Import Statements: Leverage Python's power through functions and external libraries\nData Types: Work with Python's data structures - the building blocks of AI applications\nF-Strings: Create dynamic, readable code with advanced string formatting\nMethods: Develop object-oriented programming skills used in professional development\nComparison Operators: Build logical decision-making capabilities into your programs\nControl Flow: Master loops and conditionals that control program behavior\nCreating Functions and Problem Decomposition: Learn to break down complex problems into manageable solutions - a core AI development skill\nFinal Project: Build a complete game that demonstrates your mastery of Python fundamentals\nWhat You'll Achieve:\nComplete mastery of Python programming fundamentals\nA fully functional game project that demonstrates your coding skills\nComputational thinking abilities that transfer to any field\nStrong foundation for advancing into AI, machine learning, or data science\nProblem-solving skills that remain valuable regardless of technological changes\nPerfect For:\nComplete beginners with no programming experience\nProfessionals preparing for AI-adjacent careers\nAnyone curious about the programming language powering modern AI\nStudents seeking an engaging, game-based approach to learning code\nCareer changers looking to enter the tech industry\nStart your journey into the world of Python and AI today. Join thousands of students who've discovered that learning to code is about more than syntax - it's about developing a new way of thinking that opens doors to the future.",
      "target_audience": [
        "Beginners interested to learn more about Python and general programming.",
        "Professionals preparing for AI-related careers",
        "Anyone interested in learning the programming language that powers modern AI",
        "Students seeking foundational skills for data science and machine machine learning"
      ]
    },
    {
      "title": "Rust Programming Language: The Complete Course",
      "url": "https://www.udemy.com/course/rust-programming-language-complete-tutorial/",
      "bio": "Master Systems Programming with Rust Programming Language",
      "objectives": [
        "Rust Programming Langauge concepts.",
        "Solve problems using Rust Programming."
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Rust Installation and VS Code Setup for Rust",
          "IntelliJ IDEA ide installation setup (Optional)"
        ],
        "Basic Programming Concepts": [
          "Variables",
          "Mutability",
          "Data Types",
          "Integers",
          "Floating-point",
          "Booleans",
          "Characters",
          "Tuples and Arrays - Compound Data Types",
          "Comments",
          "Functions in Rust",
          "Statement vs Expression - Returning value from function",
          "Control Flow - if/else",
          "Control Flow - while loops",
          "Control Flow - for loops"
        ],
        "Rust Ownership Principles": [
          "Rust Ownership Model 1",
          "Rust Ownership Model 2 - Memory Allocation",
          "Rust Ownership Model 3 - Clone and Copy",
          "Rust Ownership Model 4 - References and Borrowing",
          "Rust Ownership Model 5 - Data Races and Mutable References",
          "Rust Ownership Model 6 - Slices"
        ],
        "Structuring Data - Structs": [
          "Using Structs",
          "Initializing Structs - Field Init Shorthand",
          "Initializing Structs - Struct Update Syntax",
          "Tuple Structs",
          "Examples of Struct - Area of Rectangle",
          "Method Syntax"
        ],
        "Enums and Pattern Matching": [
          "Enums",
          "Option Enum",
          "Match statement and Enum"
        ],
        "Error handling": [
          "Error handling in Rust",
          "Unrecoverable errors with panic!",
          "Recoverable errors with Result enum",
          "Shortcuts to Panic with Error: unwrap and expect"
        ],
        "Generic Types and Traits": [
          "Generics : Introduction",
          "Generic Struct",
          "Generic Functions",
          "Traits: Introduction",
          "Defining a Trait",
          "Trait Implementation"
        ],
        "Input/Output in Rust": [
          "Input/Output - Introduction",
          "Input/Output - Read trait",
          "Write Trait (Writers)"
        ],
        "File I/O": [
          "File I/O: File struct",
          "File I/O: Write to file",
          "File I/O: Read from file",
          "OpenOptions struct",
          "Append to a file"
        ],
        "Iterators and Closures": [
          "Introduction to Iterators",
          "Methods of getting Iterator of Collection",
          "Closure"
        ]
      },
      "requirements": [
        "Basic programming experience in any programming language."
      ],
      "description": "Rust is an open-source Systems Programming language that focuses on speed, memory safety, and parallelism. Developers use Rust to create a wide range of new software applications, such as game engines, operating systems, file systems, browser components and simulation engines for virtual reality.\nThis course teaches you how to install Rust and then familiarize yourself with basic concepts like variables, data types, method syntax, enums, and more. Discover how the unique Ownership Principles of Rust impact the language. Data Handling, Pattern Matching, and Error Handling are also covered. The course also demonstrates use of generic types and traits, File I/O, Iterators and Closure. Then we explore Smart Pointers, Concurrency and Object-Oriented programming in Rust.\nCourse Contents:\nInstalling Rust and IDE\nData types\nRust Ownership Model\nMemory allocations\nRace conditions\nFunctions\nReferences and Borrowing\nStructs\nMethod syntax\nDemonstrating recoverable errors with Result\nWorking with enums\nGeneric Types and Traits\nInput/Output\nFile I/O\nIterators and Closures\nSmart Pointers\nConcurrency in Rust\nSo let's dive into the course.",
      "target_audience": [
        "System Programmers, Software Developers, Computer Scientists"
      ]
    },
    {
      "title": "Master Parallel & Concurrent Programming Using Python:2 in 1",
      "url": "https://www.udemy.com/course/master-parallel-concurrent-programming-using-python2-in-1/",
      "bio": "Dive head-first into the world of concurrency in Python & build modern software",
      "objectives": [
        "Implement message passing communication between processes to build parallel applications",
        "Manage computing entities to execute distributed computational tasks",
        "Master the similarities between thread and process management",
        "Process synchronization and interprocess communication"
      ],
      "course_content": {
        "Python Parallel Programming Solutions": [
          "The Parallel Computing Memory Architecture",
          "Memory Organization",
          "Memory Organization (Continued)",
          "Parallel Programming Models",
          "Designing a Parallel Program",
          "Evaluating the Performance of a Parallel Program",
          "Introducing Python",
          "Working with Processes in Python",
          "Working with Threads in Python",
          "Defining a Thread",
          "Determining the Current Thread",
          "Using a Thread in a Subclass",
          "Thread Synchronization with Lock",
          "Thread Synchronization with RLock",
          "Thread Synchronization with Semaphores",
          "Thread Synchronization with a Condition",
          "Thread Synchronization with an Event",
          "Using the \"with\" Statement",
          "Thread Communication Using a Queue",
          "Evaluating the Performance of Multithread Applications",
          "Spawning a Process",
          "Naming a Process",
          "Running a Process in the Background",
          "Killing a Process",
          "Using a Process in a Subclass",
          "Exchanging Objects between Processes",
          "Synchronizing Processes",
          "Managing a State between Processes",
          "Using a Process Pool",
          "Using the mpi4py Python Module",
          "Point-to-Point Communication",
          "Avoiding Deadlock Problems",
          "Using Broadcast for Collective Communication",
          "Using Scatter for Collective Communication",
          "Using Gather for Collective Communication",
          "Using Alltoall for Collective Communication",
          "The Reduction Operation",
          "Optimizing the Communication",
          "Using the concurrent.futures Python Modules",
          "Event Loop Management with Asyncio",
          "Handling Coroutines with Asyncio",
          "Manipulating a Task with Asyncio",
          "Dealing with Asyncio and Futures",
          "Using Celery to Distribute Tasks",
          "Creating a Task with Celery",
          "Scientific Computing with SCOOP",
          "Handling Map Functions with SCOOP",
          "Remote Method Invocation with Pyro4",
          "Chaining Objects with Pyro4",
          "Developing a Client-Server Application with Pyro4",
          "Communicating Sequential Processes with PyCSP",
          "A Remote Procedure Call with RPyC",
          "Using the PyCUDA Module",
          "Building a PyCUDA Application",
          "Understanding the PyCUDA Memory Model with Matrix Manipulation",
          "Kernel Invocations with GPU Array",
          "Evaluating Element-Wise Expressions with PyCUDA",
          "The MapReduce Operation with PyCUDA",
          "GPU Programming with NumbaPro",
          "Using GPU-Accelerated Libraries with NumbaPro",
          "Using the PyOpenCL Module",
          "Building a PyOpenCL Application",
          "Evaluating Element-Wise Expressions with PyOpenCl",
          "Testing Your GPU Application with PyOpenCL",
          "Python Parallel Programming Solutions"
        ],
        "Concurrent Programming in Python": [
          "The Course Overview",
          "Advanced OSes and Programming Environments",
          "Concurrency Versus Parallelism with Examples",
          "Operating System’s Building Blocks of Parallel Execution",
          "Libraries in Python Used to Achieve Concurrency and Parallelism",
          "Python’s Global Interpreter Lock (GIL)",
          "Overview of Threading Module",
          "Creating Threads",
          "Managing Threads",
          "Synchronization in Python",
          "Using Synchronization Primitives",
          "Producer–Consumer Pattern",
          "Using Python Queue Module",
          "Multithreading in GUI Programming",
          "Limitations Imposed by GIL",
          "Multiprocessing",
          "Similarities Between Thread and Process Management",
          "Difference Between Thread and Process Management",
          "Libraries for Practice",
          "Process Synchronization",
          "Inter-Process Communication",
          "Best Practices and Anti-Patterns",
          "Pool of Workers for Maximizing Usage of the Hardware",
          "When and How to Use a Pool of Workers",
          "Best Practices and Anti-Patterns",
          "Concurrent Programming in Python"
        ]
      },
      "requirements": [
        "Basic Prior knowledge of Python Programming is assumed."
      ],
      "description": "Are you looking forward to get well versed with Parallel & Concurrent Programming Using Python? Then this is the perfect course for you!\nThe terms concurrency and parallelism are often used in relation to multithreaded programs. Parallel programming is not a walk in the park and sometimes confuses even some of the most experienced developers.\nThis comprehensive 2-in-1 course will take you smoothly through this difficult journey of current programming in Python, including common thread programming techniques and approaches to parallel processing. Similarly with parallel programming techniques you explore the ways in which you can write code that allows more than one process to happen at once.\nAfter taking this course you will have gained an in-depth knowledge of using threads and processes with the help of real-world examples along with hands-on in GPU programming with Python using the PyCUDA module and will evaluate performance limitations.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Python Parallel Programming Solutions will teach you parallel programming techniques using examples in Python and help you explore the many ways in which you can write code that allows more than one process to happen at once.\nStarting with introducing you to the world of parallel computing, we move on to cover the fundamentals in Python. This is followed by exploring the thread-based parallelism model using the Python threading module by synchronizing threads and using locks, mutex, semaphores queues, GIL, and the thread pool. Next you will be taught about process-based parallelism, where you will synchronize processes using message passing and will learn about the performance of MPI Python Modules.\nMoving on, you’ll get to grips with the asynchronous parallel programming model using the Python asyncio module, and will see how to handle exceptions. You will discover distributed computing with Python, and learn how to install a broker, use Celery Python Module, and create a worker.\nThe second course, Concurrent Programming in Python will skill-up with techniques related to various aspects of concurrent programming in Python, including common thread programming techniques and approaches to parallel processing.\nFilled with examples, this course will show you all you need to know to start using concurrency in Python. You will learn about the principal approaches to concurrency that Python has to offer, including libraries and tools needed to exploit the performance of your processor. Learn the basic theory and history of parallelism and choose the best approach when it comes to parallel processing.\nAbout the Authors:\nGiancarlo Zaccone, a physicist, has been involved in scientific computing projects among firms and research institutions. He currently works in an IT company that designs software systems with high technological content.\nBignumWorks Software LLP is an India-based software consultancy that provides consultancy services in the area of software development and technical training. Our domain expertise includes web, mobile, cloud app development, data science projects, in-house software training services, and up-skilling services",
      "target_audience": [
        "This course is for software developers who are well versed with Python and want to use parallel programming techniques to write powerful and efficient code & it also aims at Python developers who want to learn how to write concurrent applications to speed up the execution of their programs, and to provide interactivity for users, will greatly benefit from this course."
      ]
    },
    {
      "title": "C++ Programming Course - Complete Beginner to Advanced",
      "url": "https://www.udemy.com/course/master-c-programming-complete-beginner-to-advanced/",
      "bio": "Become an expert in C++ programming; learn all C++ concepts from scratch like Array, Pointers, Looping, Function, STL,",
      "objectives": [
        "Data Structures",
        "Algorithms",
        "Programming",
        "Problem solving",
        "C++ Language"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience required"
      ],
      "description": "Get a complete beginner-friendly C++ programming course to learn the C++ language from scratch to an advanced level. Whether you're a complete beginner or looking to advance your skills, this advanced C++ course covers all the essential and advanced topics in C++ to help you become a master in C++ programming.\n\n\nStart with the fundamentals of C++, including basic syntax, variables, data types, operators, expressions, and input/output streams. Also, learn about control structures like conditional statements and looping constructs. Get deeper into core C++ concepts such as functions, arrays, strings, and pointers, object-oriented programming (OOP)\n\n\nAdvance your C++ coding skills with complex topics including multiple inheritance, virtual functions, abstract classes, dynamic polymorphism, and friend functions.\n\n\nThis C++ Course will teach you advanced data structures also like linked lists, trees, and graphs. Gain proficiency in the Standard Template Library (STL) by learning about vectors, lists, maps, and iterators.\n\n\nNot only will you be learning C++ from an expert programmer, but you'll also be guided by an instructor with years of successful teaching experience. This ensures that you will learn C++ correctly and efficiently. You can take this course with confidence, knowing you will master C++ in the shortest possible timeframe.\n\n\nWho Should Enroll:\nBeginners: Those new to programming who want to build a strong foundation in C++.\nStudents: College and university students studying computer science or related fields, looking to enhance their programming skills.\nIT Professionals: System administrators, software engineers, and IT specialists seeking to add C++ to their skill set.\nAspiring Competitive Programmers: Those interested in participating in coding competitions like GeeksforGeeks, Codeforces, CodeChef, AtCoder, or other renowned platforms.\nPrerequisites:\nBasic Computer Literacy: Familiarity with using a computer, including navigating files and folders.\nBasic Mathematical Skills: An understanding of basic mathematics is recommended.\nInterest in Programming: No prior programming experience required, just a willingness to learn and practice.\n\n\nCourse Materials:\nOnline Resources: Access to coding platforms and exercises for hands-on practice.\nSoftware: Guidance on setting up the C++ development environment.\nInstructor:\nThe C++ course is developed and taught by industry experts and competitive programming enthusiasts, including GeeksforGeeks CEO Mr. Sandeep Jain, who brings their years of experience and expertise to provide you with the best learning experience.",
      "target_audience": [
        "Beginner to Advance C++ Programmer"
      ]
    },
    {
      "title": "Introducing Test Driven Development in C#",
      "url": "https://www.udemy.com/course/introducing-test-driven-development-in-c/",
      "bio": "Learn how to use TDD in everyday work and write high-quality code",
      "objectives": [
        "How to test your code using unit tests and unit test frameworks",
        "How to add test support to your project",
        "Explore the essentials of TDD",
        "How to write testable and maintainable code",
        "Understand why SOLID principles are important for testing",
        "Learn which anti-patterns should be avoided",
        "Learn what mocking is and how to use mocking frameworks",
        "Understand the selection of design patterns"
      ],
      "course_content": {
        "Learn How Your Software Works with Test Automation": [
          "The Course Overview",
          "Exploring Test Automation",
          "Types of Automation Tests",
          "Implementing Automation Frameworks in .NET",
          "Automated Testing Demonstration with an Example"
        ],
        "TDD – The Workflow to Bulletproof Your Code": [
          "Understand TDD with an Example",
          "TDD Versus Traditional Testing",
          "Development Cycle of TDD"
        ],
        "Adding Test Support to a .NET Project": [
          "Creating the Test Project in Visual Studio",
          "Creating the Test Project in Visual Studio Code",
          "Using Patterns for Arranging and Formatting Code",
          "Dive into Continuous Testing and Code Coverage"
        ],
        "The Art of Writing Testable Code": [
          "Testable Code and Single Responsibility Principle",
          "Anti-Pattern – Singleton Pattern",
          "Anti-Pattern – The new Operator",
          "Anti-Pattern – Static Methods"
        ],
        "Testing Modular Code Via Mocking": [
          "Introduction to Mocking",
          "Manually Mocking Interfaces",
          "Using Moq Framework"
        ],
        "Modularizing Code and Inversion of Control": [
          "Dependency Inversion Principle and Inversion of Control",
          "Factory Method Design Pattern and Abstract Factory Design Pattern",
          "Using Delegate Types"
        ],
        "Dependency Injection Pattern – The Holy Grail of Modular Design": [
          "Dependency Injection",
          "Dependency Injection Patterns",
          "Dependency Injection Containers",
          "Composition Root"
        ],
        "Concrete Examples of Common Abstractions": [
          "Repository Pattern Introduction",
          "Repository Pattern Implementation",
          "Service Layer"
        ]
      },
      "requirements": [
        "Knowledge of software development in .NET and in the C# programming language is required. Also, a familiarity with Visual Studio and Visual Studio Code is expected."
      ],
      "description": "Even after so many years, TDD is still one of the main buzzwords at almost every conference. This technique has proven itself to be one of the best practices out there when it comes to writing maintainable, robust, and testable code. This course covers key concepts, methods, and patterns behind TDD through concrete and practical examples in C# 7.\nThis course starts off with an introduction to unit tests and unit test frameworks. Basically, you will learn how to write and automate tests for your implementations. After that, we shift the paradigm and see how to write your tests before implementation itself. We explore how to add full test support to our projects, as well. Through practical examples you will witness how this technique helps us write higher-quality code. In the final sections of this course, you will learn proven methods and patterns for writing modular and testable code. The principles of TDD will help you write better and cleaner code. In addition, you’ll see how solid tests give you a new sense of confidence when you need to modify existing code, refactor, and add new features.\nBy the end of this course, you will have the tools you need to start building bulletproof applications, backed by an automated suite of tests to ensure quality software delivery.\nAbout the Author\nNikola Živković is a software developer with over seven years' experience in the industry. He earned his Master’s degree in Computer Engineering from the University of Novi Sad in 2011, but by then he was already working for several companies. At the moment he works at Vega IT Sourcing from Novi Sad. He has worked on large enterprise systems as well as on small web projects. Also, he frequently talks at meetups and conferences and he is a guest lecturer at the University of Novi Sad.",
      "target_audience": [
        "This course is aimed at developers."
      ]
    },
    {
      "title": "Python Beginner Projects: Create 17 Projects from scratch",
      "url": "https://www.udemy.com/course/python-beginner-projects-create-17-projects-from-scratch/",
      "bio": "Build 17 Practical and Useful Projects with Python Step by Step.",
      "objectives": [
        "How to import Python Modules",
        "How to create Python Functions",
        "How to install a virtual environment",
        "How to create and activate a virtual environment",
        "How to use Tkinter Module to create GUI Applications",
        "How to install Django",
        "How to create projects with Python and Django",
        "How to use database in a Python Project",
        "How to use version control in a Python Project",
        "How to create and use classes in Python Projects"
      ],
      "course_content": {
        "Setting Up Development Environment": [
          "Introduction",
          "What is Python",
          "Installing Python on a mac",
          "Installing Python on windows",
          "What are plain text editors",
          "Installing Atom",
          "Creating project directory",
          "Updating Pip",
          "Installing and creating a virtual environment",
          "Activating virtual environment"
        ],
        "Project 1: Create an Image Slider": [
          "What we will create",
          "Project design sketch",
          "Creating Python File and Importing Modules",
          "Creating Python Class",
          "Adding more methods to class",
          "Testing and Running Program",
          "Source Code"
        ],
        "Project 2: Currency Converter": [
          "What we will create",
          "Project design sketch",
          "Creating a python file",
          "Building the application part 1",
          "Building the application part 2",
          "Building the application part 3",
          "Building the application part 4",
          "Building the application part 5",
          "Testing and running the application",
          "Source code"
        ],
        "Project 3: Loan Calculator": [
          "What we will create",
          "Project design sketch",
          "Creating a python file",
          "Building the application part 1",
          "Building the application part 2",
          "Building the application part 3",
          "Building the application part 4",
          "Testing and running application",
          "Source code"
        ],
        "Project 4: Digital Clock": [
          "What we will create",
          "Project design sketch",
          "Creating a python file",
          "Building the clock part 1",
          "Building the clock part 2",
          "Building the clock part 3",
          "Running the application",
          "Source code"
        ],
        "Project 5: Music Player": [
          "What we will create",
          "Project design sketch",
          "Building the project part 1",
          "Building the project part 2",
          "Building the project part 3",
          "Building the project part 4",
          "Testing and running application",
          "Source code"
        ],
        "Project 6: Converting Text to Speech Program": [
          "Creating Text to Speech Program",
          "Writing the code",
          "Testing and running application",
          "Source code"
        ],
        "Project 7: Random Password Generator": [
          "What we will create",
          "Project design sketch",
          "Creating Python File and Importing Modules",
          "Create a method and while loop",
          "Testing and running application",
          "Source code"
        ],
        "Project 8: Feet to Meters conversion tool": [
          "Building the application part 1",
          "Building the application part 2",
          "Building the application part 3",
          "Source code"
        ],
        "Project 9: Calculator": [
          "Building the application part 1",
          "Building the application part 2",
          "Building the application part 3",
          "Source code"
        ]
      },
      "requirements": [
        "Computer with internet access",
        "Basic knowledge of HTML and CSS",
        "Basic knowledge of Python"
      ],
      "description": "Python is a dynamic modern object -oriented programming language that is easy to learn and can be used to do a lot of things both big and small. Python is what is referred to as a high level language. That means it is a language that is closer to humans than computer.It is also known as a general purpose programming language due to it's flexibility.\nPython is object -oriented means it regards everything as an object. An object in the real world could be a person or a car.\nPython is an interpreted language that does not need to be complied like for example java programming language.\nIt is interpreted and run on the fly the same time.\nPython has been used in a lot of places like in creating games, for statistical data and visualisation,speech and face recognition.\nSome of the biggest websites on this planet earth use python\nin one way or another. Examples include:\nGoogle\nYoutube\nFacebook\nNasa\nDisney\nPixar\nReddit\nPinterest\nInstagram\nSpotify\nSurvey Monkey\nYahoo Maps\n\n\n\n\n\n\nProjects we will create:\n\n\nImage Slider\nCurrency Converter\nLoan Calculator\nDigital Clock\nMusic Player\nConverting Text to Speech\nRandom Password Generator\nWeight Conversion Tool\nBasic Calculator\nCountdown Timer\nBasic Encryption\nBirthday Reminder\nWeb scraping Project\nMachine Learning Project\nPortfolio Project\nTodo Web App Project\nLottery Number Simulator\nScreen break program\nRandom Number Generator\nTimes Table Generator\nProgram to Removing vowels\nNumber guessing game",
      "target_audience": [
        "Beginner Python Developers",
        "Beginners to Programming",
        "Beginners to web development"
      ]
    },
    {
      "title": "Python for Beginners: Build Real Projects (2025 Edition)",
      "url": "https://www.udemy.com/course/python-for-beginners-master-the-essential-basics-of-python/",
      "bio": "Learn Python Basics Fast with Hands-On Exercises, 2 Real Projects, and Master Key Programming Concepts (Updated)",
      "objectives": [
        "Python Syntax and Basics",
        "Building 2 Python hands-on projects",
        "Variables and Data Types",
        "Input Functions to Interact with Users",
        "Essential Python Operators",
        "Conditional Statements in Python",
        "Loops for Repetitive Tasks",
        "Write and Use Functions",
        "Handle Files in Python",
        "Handle Errors in Python",
        "Gain insight into Real-World Applications of Python"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge or experience with Python is required.",
        "A computer with internet connection"
      ],
      "description": "Start your Python journey the right way with this beginner-friendly course!\nLearn Python fundamentals — variables, data types, loops, functions, file handling — through hands-on exercises and build 2 real-world projects. No experience needed — we start from scratch!\nPython powers careers in Data Science, Web Development, Automation, AI, Cybersecurity, and more. This 2025 Edition course is fully Updated to help you master essential programming skills faster. Whether you're a student, career changer, or tech enthusiast, you'll gain the confidence to create Python applications and move to advanced projects.\nDon't miss the chance to kickstart your tech career.\n\n\nEnroll now and start building your future today!\nWhat You’ll Learn:\nPython Basics Made Easy: Understand the fundamental building blocks like Syntax, Variables, Data Types, and Input Functions.\nMaster Operators: Learn how to use Arithmetic, Logical, Comparison, and Assignment Operators to perform essential tasks.\nControl Program Flow: Explore Conditional Statements, For and While Loops, and Functions to create dynamic and efficient programs.\nFile Handling and Error Handling: Build robust applications with skills in managing files and debugging errors.\nBuilding 2 Python hands-on Projects\n\n\nWhy Learn Python?\nPython is used everywhere, from small automation scripts to complex artificial intelligence systems. By learning Python, you’re preparing yourself for a future in:\nData Science and Analytics: Process, analyze, and visualize data to make smarter decisions.\nAutomation and Robotics: Automate repetitive tasks and drive innovation in robotics.\nWeb and Game Development: Create interactive websites and build engaging games.\nMachine Learning and AI: Power intelligent applications and predict the future with AI.\nCybercrime and Networking: Protect data, build secure systems, and troubleshoot networks.\n\n\nWho Should Take This Course?\nAbsolute beginners with no prior programming experience.\nAspiring professionals interested in entering fields like Data Science, Data Analysis, Automation, Robotics, Game Development, Machine Learning, Artificial Intelligence (AI), Web Development, Cybersecurity and Networking.\nStudents, career changers, and tech enthusiasts looking to build a solid programming foundation.\n\n\nBy the end of this course, you will:\nWrite Python programs confidently.\nUnderstand essential programming concepts that apply to almost all fields.\nBe ready to advance to more complex topics or real-world projects.\n\n\nWhy Wait? Start Now!\nJoin thousands of learners worldwide who have kickstarted their careers with Python. Enrol today and unlock endless possibilities with one of the easiest and most powerful programming languages.",
      "target_audience": [
        "Absolute beginners with no prior programming experience.",
        "Students, career changers, and tech enthusiasts looking to build a solid programming foundation.",
        "Aspiring professionals interested in entering fields like Data Science, Data Analysis, Automation, Robotics, Game Development, Machine Learning, Artificial Intelligence (AI), Web Development, Cybersecurity and Networking."
      ]
    },
    {
      "title": "Learn Java Programming from Java Basics to Advanced Java",
      "url": "https://www.udemy.com/course/complete-java-programming-from-java-basics-to-advanced-java/",
      "bio": "Learn Java programming from java basics to java advanced topics such as java OOP java loops java EH java conditionals",
      "objectives": [
        "Java programming in detail"
      ],
      "course_content": {
        "Introduction and Code Editor for Java Setup": [
          "Code Editor Installation",
          "Three important interview questions",
          "Is Java Platform Independent?",
          "JDK JRE and JVM",
          "JIT"
        ],
        "Datatypes": [
          "Datatypes Introduction",
          "Printing in Output",
          "Getting User Input"
        ],
        "Arrays": [
          "Array Explanation",
          "Array Code"
        ],
        "Loops": [
          "For loop",
          "while loop",
          "Infinite while loop"
        ],
        "Exception Handling": [
          "Exception",
          "Exception types",
          "Finally"
        ],
        "Functions": [
          "Functions Explanation",
          "Scope of variable"
        ],
        "Object Oriented Programming": [
          "What are Class and Objects?",
          "Class Coding Example",
          "Constructor",
          "Heap and Stack"
        ],
        "Inheritance": [
          "Inheritance Explanation",
          "Inheritance Code"
        ],
        "Polymorphism": [
          "Polymorphism Explanation",
          "Polymorphism Code",
          "Overloading and Overriding"
        ],
        "Abstraction": [
          "Abstraction and Interfaces Explanation",
          "Types of abstraction in java",
          "Abstract Class code",
          "General idea of abstraction"
        ]
      },
      "requirements": [
        "No prerequisites"
      ],
      "description": "This course covers Java programming all the way from Basics to Advanced topics like Object Oriented Programming(OOP).\nIn this course we will cover:\nDatatypes in java programming\nFunction in Java programming\nLoops in Java programming\nArrays in Java programming\nAnd much more in Java programming\n\n\nIn Advanced section of java programming we will cover:\nObject Oriented Programming in Java (OOP)\nClass and Object programming\nInheritance in Java programming\nPolymorphism in Java programming\nAbstraction in Java programming\nI strongly recommend this course for students who are new to programming or java and want to learn in detail.\nBecause there are animations and explanations that are of much importance in understanding concepts for beginners in java programming.\nBeside these topics this course has coding tutorials that will help you in learning concepts in java programming better.\nSome concepts are explained in a way that it become easy topics like Object Oriented Programming in Java (OOP).\nAnimation + code makes this course better to understand.\nAnimations Sometimes it can become very difficult to understand the working of a specific topic for a person new to programming so you will find in this course a very detailed explanation of subjects that are of core importance which will help you understand the working of that particular concept.There are animations designed to help you understand the working of a particular concept.",
      "target_audience": [
        "Students starting to learn java programming."
      ]
    },
    {
      "title": "Learn Matlab",
      "url": "https://www.udemy.com/course/learn-matlab/",
      "bio": "Discover The Language of Technical Computing.",
      "objectives": [
        "Over 4 hours of content!",
        "At the end of this course you are a confident Matlab Programmer",
        "By the end of the course, you are able to formulate intermediate and some advanced engineering projects into Matlab and solve them using programming skills"
      ],
      "course_content": {
        "Introduction to Matlab": [
          "Introduction"
        ],
        "Syntax": [
          "Syntax for mathematical operations",
          "Various constant names for simple mathematical operations",
          "Commenting and creating sections in Matlab",
          "Use of the semi-colon",
          "Use of colon"
        ],
        "Variables": [
          "Variables"
        ],
        "Commands": [
          "Basic commands",
          "More basic commands",
          "Formatting",
          "Commands Quiz"
        ],
        "Operators": [
          "Logical and Relational operators",
          "Arithmetic operators",
          "Set operators"
        ],
        "Loops and Decisions": [
          "If statements",
          "For loops",
          "While loops",
          "Nested loops",
          "Loops and Decisions Quiz"
        ],
        "Vectors and Matrices": [
          "Vector manipulation",
          "How to create matrices of varying lengths",
          "Perform mathematical manipulations on matrices 1",
          "Perform mathematical manipulations on matrices 2",
          "Perform mathematical manipulations on matrices 3"
        ],
        "Creating and running a script": [
          "Creating and running a script",
          "Creating and running a script Quiz"
        ],
        "Manipulation of strings": [
          "Basics of strings",
          "Find and replace",
          "Comparison of strings"
        ],
        "Creating functions": [
          "Create simple functions",
          "Create simple functions - Quiz",
          "Create primary, sub and nested functions",
          "Create primary, sub and nested functions - Quiz",
          "Create private functions",
          "variable GLOBAL",
          "Create private functions & variable GLOBAL - Quiz"
        ]
      },
      "requirements": [
        "Matlab Software Installation: You are requried to install the Matlab Software on your machine, so you can start exectuing the codes, and examples we work during the course. Please visit : https://www.mathworks.com/programs/trials/trial_request.html?prodcode=ML for requesting a free trial of the software if you didn't have it already. Most of the Universities offer a free student version of the software, therefore, if you are a student, first contact your university to see if such a program is avaiable. If you are not a student or your university didn't offer it, you can purchase the student version directly from Mathworks.",
        "The will to learn programming and Matlab!"
      ],
      "description": "MATLAB is a higher level programming language that has various uses in everyday problems. And this tutorial does exactly that.\nWe first go through the basics needed to begin the start of your programming journey. Such basics include but are not limited to :\n1. Assigning numerical values to variables\n2. Manipulating these variables in a meaningful way\n3. Creating and manipulating vectors for problem solving\n4. Creating and manipulating matrices for problem solving\n5. Plotting various graphs to effectively display information\n\nAfter mastering the basics, we move on to more advanced topics to manipulate data and various types of information in a more specific way.\nAdvanced topics include creating a graphical user interface and utilizing the image processing toolkit in MATLAB. This tutorial is designed to make MATLAB easier to understand and hopefully, not so scary!",
      "target_audience": [
        "Engineers",
        "Programmers",
        "Researchers",
        "Teachers",
        "College Students",
        "High School Students",
        "Entrepreneurs"
      ]
    },
    {
      "title": "Ultimate Python - ML, AI, Hacking, Speech Recognition & more",
      "url": "https://www.udemy.com/course/complete-python-programming-course-beginner-to-expert/",
      "bio": "Master the Python Programming Language! Learn Speech Recognition, Data Science, Game Dev, Hacking, Automation, and more!",
      "objectives": [
        "Master Python Programming Hands-On with a focus on getting you professional Python experience you can use to GET A JOB!",
        "Start from Zero and Go to Hero with this ALL IN ONE, COMPREHENSIVE Python programming course!",
        "Use Python for Mobile App Development, Data Science, Machine Learning, Ethical Hacking, Speech Recognition, Game Development, AND MORE!",
        "Build a SPEECH RECOGNITION program using Python to convert audio and microphone input into text",
        "Build MACHINE LEARNING programs using REGRESSION, CLUSTERING, CLASSIFICATION, and RECOMMENDER SYSTEMS",
        "Learn how to HACK and write CYBERSECURITY code using Python! Full section on ETHICAL HACKING using Python code!",
        "Understand all 23 Gang of Four design patterns and HOW TO IMPLEMENT EACH OF THEM, in Python in an easy-to-understand manner",
        "Understand HOW to implement all of the major search and sort algorithms in computer science, and WHEN to use each approach",
        "Covers how to implement a Network Scanner, Denial-of-Service attack, Client-Side validation spoof, and application layer hacking in Python. PROFESSIONAL HACKING TECHNIQUES!",
        "Build hands-on projects, including APPS and GAMES",
        "Write Python code that can read, create, modify, edit, and save SPREADSHEETS from Microsoft Excel",
        "Create CRYPTOGRAPHY programs using Python to ENCRYPT and DECRYPT data",
        "Take a DEEP DIVE into collections and data structures and become a master at understanding the PROS and CONS of each!",
        "Learn the ins-and-outs of the Panda3D Python GAME ENGINE and how to use it to make 3D VIDEO GAMES",
        "Build a 2D SUPER MARIO game, a 2D GALAGA Game, and a 2D BATMAN video game!",
        "Learn how to program enemy AI characters for games and use Python for ARTIFICIAL INTELLIGENCE programming",
        "Use Python to work with IMAGES and animate COMPUTER GRAPHICS",
        "Learn DATA SCIENCE programming using NUMPY and MATPLOTLIB",
        "Learn how to AUTOMATE TASKS in Python like organizing files, sending emails, and launching programs",
        "Packed with CODING EXERCISES to get you hands-on exposure to writing Python code!",
        "Learn all major SEARCHING and SORTING algorithms and how to implement them in Python!",
        "Use Python to work with and parse data in JSON and XML",
        "Learn how to DEBUG and TEST your code through hands-on CODING EXERCISES!",
        "Work with SELENIUM WEB DRIVER to automate testing in the browser",
        "Learn how to run pip commands to install Python libraries like PyAudio, SpeechRecognition, Pillow, PyCrypto, pyautogui, openpyxl, Kivy, and more",
        "Learn Python variants like IRON PYTHON (C# + Python) and JYTHON (Java + Python)",
        "Learn how to build games using the PyGame game engine, one of the most popular Python game frameworks!",
        "Prepare to Ace the PCEP-30 and PCAP-31 Python Certification Exams"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is Your Instructor?"
        ],
        "Computer Science Basics": [
          "Section Introduction",
          "What is Computer Science?",
          "What is Computer Programming?",
          "5 Generations of Programming Languages",
          "What is Python and why should you use it?",
          "What happens under the hood of the computer?",
          "The Heap and the Stack",
          "How to get the most out of this course",
          "Tips for becoming the best Python programmer you can be",
          "Section Summary"
        ],
        "Setup and Install PyCharm on your Computer": [
          "Section Introduction",
          "Downloading and Installing PyCharm",
          "Introduction to PyCharm",
          "Setup and Install pip",
          "Referring to the Python Documentation",
          "Section Summary"
        ],
        "Getting Started with Python": [
          "Section Introduction",
          "Python Version 2 vs. Python Version 3",
          "Hello World",
          "Coding Exercise: Hello World in Python",
          "Answer to Coding Exercise: Hello World in Python",
          "Variables",
          "Console",
          "Conditional Statements",
          "Loops",
          "Variable Scope",
          "Modules",
          "Comments",
          "Function Basics",
          "Errors",
          "Basic Python Syntax",
          "Modulus Operator",
          "Python Keywords",
          "Section Summary"
        ],
        "Types, Data Structures, and Collections": [
          "Section Introduction",
          "What is a Data Type?",
          "String (str)",
          "Integer (int)",
          "Floating Point (float)",
          "Boolean (bool)",
          "What is a Collection?",
          "List (list)",
          "Tuple (tuple)",
          "Dictionary (dict)",
          "Set (set)",
          "None",
          "Section Summary"
        ],
        "Working with Strings": [
          "Section Introduction",
          "Single, Double, and Triple Quotes",
          "What is a substring?",
          "Indexing and Slicing",
          "String Functions",
          "Concatenation",
          "Working with Strings",
          "Answer to Coding Exercise: Working with Strings",
          "Section Summary"
        ],
        "Python Math Module": [
          "Section Introduction",
          "A look at Python's Math Module",
          "Constants",
          "Number-Theoretic and Representation Functions",
          "Power and Logarithmic Functions",
          "Trigonometric Functions",
          "Angular Conversion Functions",
          "Hyperbolic Functions",
          "Convert Fahrenheit to Celsius",
          "Answer to Coding Exercise: Convert Fahrenheit to Celsius",
          "Section Summary"
        ],
        "Working with Date and Time Data in Python": [
          "Section Introduction",
          "datetime",
          "date",
          "time",
          "calendar",
          "Section Summary"
        ],
        "Control Flow Statements and Loops": [
          "Section Introduction",
          "if, elif, else",
          "for loops",
          "while loops",
          "break",
          "continue",
          "range",
          "else",
          "If Statement",
          "Answer to Coding Exercise: If Statement",
          "For Loop",
          "Answer to Coding Exercise: For Loop",
          "While Loop",
          "Answer to Coding Exercise: While Loop",
          "Section Summary"
        ],
        "File I/O": [
          "Section Introduction",
          "input",
          "Basic File Concepts",
          "open and close",
          "getcwd",
          "mkdir and chdir",
          "rename and remove",
          "read, readline, and readlines",
          "write and append",
          "Section Summary"
        ]
      },
      "requirements": [
        "A computer with Windows, Mac, or Linux",
        "Eagerness and willingness to learn Python programming and build some awesome projects",
        "Note: All software and programs for this course are FREE and I walk you through installing them step-by-step"
      ],
      "description": "The goal of this course is to make you a master of the Python programming language. It is packed with hands-on projects, examples, and coding exercises and focuses on a learn by doing approach to building programming skills and experience.\n\n\nWhat are some of the cool projects you will build in this course?\nA speech recognition program that converts audio into text\nA program that allows you to automate working with spreadsheets in Microsoft Excel\nA mobile app that allows the user to paint images on their phone and save and export the images\n3 full 2D video games - Galaga, Batman, and Super Mario\nA car racing game using the PyGame Game Engine\nHacking programs that allow you to hack websites, crack codes and break ciphers\nA network communication program using sockets where you can run code for a server and send it data from a client\nAn AI Program with Selenium Web Driver that opens the browser, finds a game, and plays it by itself all through automated code (bot that plays an online game)\nA program that automates virtual keystrokes and mouse clicks to interface with other programs on your computer (robotic process automation)\n...and much more!\n\n\nWhy should you learn Python?\nPython is an in-demand skill, and one of the most popular programming languages in the world\nIt is incredibly powerful and versatile, and is used to build Speech Recognition programs, machine learning apps, data science programs, mobile apps, and video games.\nThis course will teach you not only Python, but the key computer science concepts like Data Structures and Algorithms, Searching and Sorting, and Gang of Four Design Patterns. This course will help you ace interviews and get a job.\n\n\nWhat topics are taught in this course?\nComputer Science Basics\nSetup and Install PyCharm on your Computer\nGetting Started with Python\nTypes, Data Structures, and Collections\nWorking with Strings\nPython Math Module\nWorking with Date and Time Data in Python\nControl Flow Statements and Loops\nFile I/O\nFunctions\nRegular Expressions (REGEX)\nParsing XML using Python\nParsing JSON using Python\nCharacter Encodings\nObject Oriented Programming (OOP)\nTrees\nGraphs\nLinked Lists\nDebugging and Testing\nPEP (Python Enhancement Proposal) Standards\nDocumenting your Code\nRefactoring Python Code\nReflection and Introspection\nBitwise Operations in Python\nPython Task Automation\nSocket Programming and Multithreading\nAsynchronous Programming using Asyncio\nShell Scripting using Python\nCybersecurity Programming and Ethical Hacking using Python\nPython Version 2 – Legacy Systems Maintenance\nSelenium Web Driver\nMobile App Development\nData Science\nMachine Learning\nCryptography\nSpeech Recognition\nIronPython (Python + C# = IronPython)\nJython (Python + Java = Jython)\nImages\nPython GUI with TKinter\nTurtle Graphics Module\n2D Game Development - Galaga Video Game\n2D Game Development - Batman Action Video Game\n2D Game Development - Super Mario Video Game\nPyGame Game Engine\n3D Game Development - Panda3D Game Engine\nTechnical Art (Blender)\n23 Gang of Four Design Patterns\nSearching and Sorting\nPython Programming Quizzes\n\n\nWho is your instructor?\nMy name is Rob Gioia and I current work as a Mobile Software Engineer in New York City. Python is the first programming language that I learned and I taught Python at the college level as a teacher’s assistant for 2 years.\nI’ve created some popular Python courses aimed at teaching beginners to program in Python, this course is a step up to dig deeper into the language and teach you the skills you need to land a job in the industry.\nMy background has been gaming focused, but I want to emphasize that this is NOT A GAME DEVELOPMENT COURSE! Python can be used in so many other capacities, and this course is meant to make you a master of Python, and then teach you how to build all kinds of projects using this powerful programming language.\n\n\nWhat if you have questions?\nAny questions you have can be posted to the Q&A forum or messaged to me on Udemy. I check my Udemy account every day to see if students have questions, and do my best to be as responsive and helpful as possible.\nIf you get stuck at any point during this course, send me a message and I will get you unstuck!\n\n\nThere is no risk in taking this course!\nThis course comes with a full 30 day money-back guarantee. You either end up with Python skills, go on to develop great programs and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\n\n\nYou literally can’t lose.\nAre you ready to master the Python programming language and build an awesome set of software engineering skills? Then enroll now using the “Add to Cart” button on the right!",
      "target_audience": [
        "Anyone that wants to master the Python programming language, one of the most popular programming languages in the world",
        "This course is perfect for absolute beginners with no previous coding experience, to intermediates looking to sharpen their skills to the expert level",
        "Those looking to build creative and advanced Python apps for either personal use or for high-paying clients as a self-employed contractor"
      ]
    },
    {
      "title": "C Programming : A Comprehensive Theory Course",
      "url": "https://www.udemy.com/course/mastering-c-programming-a-comprehensive-theory-course/",
      "bio": "Ultimate C Programming Resource: Illustrated Examples and Slide-based Tutorials for Beginners and Advanced Learners",
      "objectives": [
        "Understand the fundamental concepts and principles of the C programming language.",
        "Develop a solid understanding of variables, data types, and operators, enabling efficient manipulation of data in C.",
        "Master the use of arrays, multidimensional arrays, and pointers for efficient memory management and manipulation of complex data structures and lot more.",
        "Gain hands-on experience and build confidence in coding by implementing the concepts through practical exercises."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Environment & IDE setup",
          "Variables & constants",
          "Identifiers, keywords & variable declaration",
          "Data types",
          "Input & output",
          "Operators"
        ],
        "Flow Control": [
          "If & else statements",
          "Loop introduction",
          "Loop continued (part-2)",
          "Break & continue Statement",
          "Switch case",
          "Goto statement"
        ],
        "Functions": [
          "Functions & types of functions",
          "Function types",
          "Methods of calling a function",
          "Recursion",
          "Functions assignment"
        ],
        "Arrays": [
          "Array intro",
          "Array question",
          "Multidimensional array",
          "2D array question"
        ],
        "Pointers": [
          "Pointers intro",
          "Pointers & arrays",
          "Pointers & functions",
          "Dynamic memory allocation"
        ],
        "Strings": [
          "Strings introduction",
          "Strings & functions"
        ],
        "Structure & Union": [
          "Structure introduction (part-1)",
          "Structure continued (part-2)",
          "Structure & pointers and structure & functions",
          "Union & difference between struct and union"
        ],
        "File Input / Output": [
          "File Input / Output Introduction (part-1)",
          "File Input / Output continued (part-2)"
        ],
        "Standard Library": [
          "Standard Library Introduction (part-1)",
          "Standard Library Continued (part-2)"
        ],
        "Mini Project (Library Management System)": [
          "Mini Project Introduction",
          "Main Menu",
          "Add book function",
          "Delete function",
          "Update function & all available books function",
          "GitHub link of the project code"
        ]
      },
      "requirements": [
        "Basic computer literacy: Learners should have a basic understanding of computer operations, including file management, navigating the operating system, and running software applications.",
        "Familiarity with programming concepts: A basic understanding of programming concepts such as variables, loops, conditionals, and functions would be beneficial. However, no prior programming experience is required.",
        "Basic understanding of algorithms: A conceptual understanding of algorithms and problem-solving approaches would be helpful but not mandatory.",
        "System requirements: Learners should have access to a computer with a compatible operating system (Windows, macOS, Linux) and the ability to install and run a C programming environment, such as a C compiler and an Integrated Development Environment (IDE).",
        "Eagerness to learn: A strong motivation and willingness to engage in self-paced learning, practice coding, and complete assignments are essential to make the most of the course."
      ],
      "description": "\"Mastering C Programming: A Comprehensive Theory Course\" is an all-inclusive program designed to provide you with the knowledge and expertise necessary to become a proficient C programmer. Whether you are a novice without any prior programming experience or an experienced developer seeking to enhance your skills, this course is tailored to meet your requirements.\nThis course adopts a theory-based approach, laying a strong foundation in the principles and concepts that form the bedrock of the C programming language. Starting with an introduction to C, you will explore its historical significance and relevance in the programming world. We will guide you through the process of setting up your programming environment and acquainting you with popular Integrated Development Environments (IDEs) to ensure a seamless learning experience.\nAs you progress through the course, you will delve deeply into the fundamental building blocks of C programming. From variables and constants to data types and operators, you will develop a comprehensive understanding of how to effectively utilize these essential elements. Various input and output techniques will be explored, enabling you to manipulate data proficiently using C's powerful operators.\nFlow control is a critical aspect of programming, and this course extensively covers it. You will learn how to employ if and else statements to make decisions in your code, create loops for repetitive tasks, and efficiently branch using switch case statements. Moreover, you will discover the potency of function-oriented programming and explore different types of functions, including recursive functions.\nArrays, pointers, and strings are indispensable components of C programming, and you will acquire the skills to leverage their capabilities. You will gain an understanding of multidimensional arrays and harness pointers for memory manipulation, thereby unlocking the full potential of these features. Additionally, you will explore structures and unions, enabling you to construct complex data structures within C.\nTo showcase your newfound skills, you will undertake a hands-on project focused on library management. This project will test your knowledge as you develop a functional system for book addition, deletion, and updates. Furthermore, you will learn how to perform file input/output operations and utilize standard libraries to augment your programs.\nBy the conclusion of this course, you will possess a profound comprehension of C programming and be equipped with the skills necessary to develop robust applications. Are you prepared to embark on your journey to becoming a C programming expert? Enroll now and seize the opportunity to master C programming!",
      "target_audience": [
        "Beginners: Individuals with no prior programming experience who want to start their programming journey with C.",
        "Students: Computer science or engineering students who need to learn C as part of their academic curriculum.",
        "Programmers transitioning to C: Individuals who already have experience in other programming languages and want to expand their skills by learning C.",
        "Hobbyists and enthusiasts: Individuals passionate about coding and eager to explore the power and intricacies of the C language.",
        "Professionals seeking a career in programming: As C is widely used in various industries, this course can benefit individuals aiming to enhance their programming skills and increase their employability.",
        "Anyone interested in the foundations of programming: C serves as the foundation for many programming languages, so this course can benefit individuals who want to build a strong understanding of programming principles and concepts."
      ]
    },
    {
      "title": "NodeJS in Action",
      "url": "https://www.udemy.com/course/nodejs-in-action/",
      "bio": "Complete course to learn Node.JS with integrated with Elasticsearch, Redis, AngularJS, Yeoman, Grunt, PassportJS, etc...",
      "objectives": [
        "Learn NodeJS basics",
        "Web Development in NodeJS",
        "Elasticsearch integration",
        "Redis integration",
        "Socket IO integration",
        "Authentication system",
        "Usage of popular modules like Mongoose, PassportJS, ExpressJS, etc...",
        "Database integration",
        "Frontend technologies interaction like AngularJS, Yeoman, Grunt",
        "Become NodeJs geek",
        "Heroku Deployment",
        "Elasticsearch Basics",
        "MongoDB Basics"
      ],
      "course_content": {},
      "requirements": [
        "Basic level of Javascript and HTML is a plus"
      ],
      "description": "As you know, Javascript popularity increased tremendously last couple of years. One of the biggest reason is NodeJS. This course aims to teach NodeJS and third party applications from zero to expert level. You will not just learn Hello World project, you will learn What is Blocking, Non-Blocking I/O, Event Loop Mechanism, how is node.js used in real life by interacting other popular technologies and modules like;\nElasticsearch: You will cover Elasticsearch basics, how to use this in order to provide full text search mechanism to your application.\nMongoDB: Store your data in to db, and make json queries to this document based database\nPassportJS: You will also learn PassportJS to construct authentication system in your application. You will be able to restrict some endpoints by using internal PassportJS properties\nExpressJS: During this course, you will develop complete two web applications. ExpressJS is for developing controllers, communicate this controllers with views, and provide some db interactions by using ORM frameworks like MongooseJS\nIronCache: Do you want to make your application faster? You can cache your data to IronCache (Cache as a service) in this lecture also\nIronMQ: You will be able to use message queue system by using IronMQ in NodeJS.\nSocketIO: Converting your application into realtime application\nWell, you will do full stack development in this course. That means, you will be able to develop frontend application with AngularJS by Yeoman, Grunt, Bower. This forntend application will communicate with rest service devloped in this course again.\nYeoman: You will be generating your frontend application with this\nGrunt: Your application tasks will be managed and executed by using Grunt\nBower: Tired of using lots of third party js frameworks and deal with conflict, let Bower do that for you\nAfter completing two beautiful application, you will deploy your application into Heroku.\nI can give guarantee about becoming expert in NodeJS and related technologies by taking this course. We will do lots of best practices about each technology, and develop examples progressively. Also, at the end of each section, you will be provided Quiz for specific section. Although, this course is a complete reference to NodeJS and related technologies, you can require extra video tutorials for any topic related to NodeJS in order to clearify question marks in your mind. I will publish them in Wishes section.\nIf you ready to become a NodeJS expert, join this course!",
      "target_audience": [
        "Anyone who wants to learn Web Development"
      ]
    },
    {
      "title": "Java Programming for Beginners-The Ultimate Course on Java",
      "url": "https://www.udemy.com/course/java-programming-for-absolute-beginners_part-1/",
      "bio": "Learn how to create programs from scratch using the Fundamentals of Java.",
      "objectives": [
        "Good understanding on how to program in java",
        "Learn the Fundamentals of Programming",
        "Get the necessary skills in fundamentals of programming and in the principles of algorithm",
        "Develop great Java programs",
        "Build Apps"
      ],
      "course_content": {},
      "requirements": [
        "NO EXPERIENCE NEEDED!",
        "Basic knowledge of computers"
      ],
      "description": "In this introduction to Java Programming course, you'll learn and practice key concepts by building your own programs. You'll learn java, a powerful, easy-to-learn, and widely used programming language. You'll explore basics of Java as you build your programs. You will know if you have learned it because there will be simple assignments following each chapter. There is no prior programming knowledge needed for this course. I have listed the schedule in the syllabus.",
      "target_audience": [
        "Students",
        "Programmers",
        "Any one interested in learning Java Programming skills"
      ]
    },
    {
      "title": "Python for Beginners: Solve 50 Exercises Live",
      "url": "https://www.udemy.com/course/python-tutorial/",
      "bio": "Basics to Advanced core programming. Dive in to become a master programmer along with fun projects like Gmail/fb bomb.",
      "objectives": [
        "Understand various paradigms of a programming language",
        "Get confident using Python",
        "Have appreciation for programming as a problem solving tool",
        "Solve Programming challenges with varying level of difficulty"
      ],
      "course_content": {
        "Introduction": [
          "Python Installation Part I",
          "Python Installation Part II"
        ],
        "Working with numbers": [
          "Python Introduction to numbers",
          "Numbers"
        ],
        "String, Lists, Loops": [
          "Introduction to String and Lists Demo",
          "Introduction to Lists and String live Part 1",
          "Introduction to String and Lists live Part2 - Gotchas",
          "For and if then else constructs Demo",
          "For and if then else constructs live",
          "Exercises",
          "1st Exercise",
          "2nd Exercise",
          "3rd Exercise",
          "4th Exercise",
          "5th Exercise",
          "6th Exercise",
          "7th Exercise",
          "8th Exercise",
          "9th Exercise",
          "10th Exercise",
          "11th Exercise",
          "12th Exercise",
          "13th Exercise",
          "14th Exercise",
          "15th Exercise",
          "16th Exercise",
          "17th Exercise",
          "18th Exercise",
          "19th Exercise",
          "Lists and Strings",
          "Lists and Strings"
        ],
        "Dictionaries": [
          "Dic Demo",
          "Dic Live",
          "20th Exercise",
          "21st Exercise",
          "22nd Exercise",
          "Dictionaries"
        ],
        "Advanced Strings and Regular Expressions": [
          "Strings Advanced part 1",
          "Strings Advanced part 2",
          "Regular Expressions Part I Demo",
          "Regular Expresssions Part I live",
          "Regular Expression Part II Demo",
          "Regular Expression Part II live 1st",
          "Regular expression Part II live 2nd",
          "23rd Exercise",
          "24th Exercise",
          "25th Exercise",
          "Advanced Strings",
          "Regular Expressions",
          "Regular Expressions"
        ],
        "Higher order functions and list comprehensions": [
          "Anonymous, higher order functions, list comprehensions Demo",
          "Anonymous, higher order functions, list comprehensions Live Part 1",
          "Anonymous, higher order functions, list comprehensions Live Part 2",
          "26th Exercise",
          "27th Exercise",
          "28th Exercise",
          "29th Exercise",
          "30th Exercise",
          "31st Exercise",
          "List Comprehensions and Higher order functions",
          "List Comprehensions and Higher order functions"
        ],
        "Input/Output Operations": [
          "Basic file operations Demo",
          "Basic file operations Live",
          "Exercise 32",
          "Exercise 33",
          "Exercise 34",
          "Exercise 35",
          "Exercise 36",
          "Exercise 37",
          "Exercise 38",
          "Exercise 39",
          "Exercise 40",
          "Exercise 41",
          "Input/Output Operations"
        ],
        "Advanced Regular Expressions": [
          "Regular Expression Advanced Demo",
          "Regular Expression Advanced Live Part 1",
          "Regular Expression Advanced Live Part 2",
          "Regular Expression Advanced Live Part 3",
          "Exercise 42",
          "Regular Expressions"
        ],
        "Data Structures and Algorithms": [
          "Sets and Tuples Demo",
          "Sets and Tuples Live",
          "Generators Demo",
          "Generators Live",
          "Data Structures and Algorithms Part I",
          "Data Structures and Algorithms Part II",
          "Exercise 43",
          "Exercise 44",
          "Algorithmic Complexity"
        ],
        "Recursion, Collections": [
          "Recursions, Collections Demo",
          "Recursions, Collections live",
          "Exercise 45",
          "Exercise 46",
          "Recursion And Collections"
        ]
      },
      "requirements": [
        "Open up a computer and connect to a internet.",
        "Will to learn, want to learn programming.",
        "Can dedicate few hours not just a hour or two"
      ],
      "description": "It's a Beginner level course. No prerequisites required. All the more It's better if you haven't coded before. If you know how to use a computer and want to learn programming this is it.\nOnce started you will become addicted to short and beautiful syntax of python but don't we fooled by it's simplicity we will look at some of the very challenging problems and solve them in just few lines of code.\nThe course vastly differs from others in the practical approach we take here. We don't just teach syntax, we work along with you to solve a assorted collected to problem sets and solve ~50 of these. Students often lack in the problem solving capability and are just aware of the syntax. This course fills this gaps by working out each and every exercise and giving multiple approaches to solve similar problems. It makes you a hardcore programmer.\nWe start from basics like printing, looping to advanced features like regular expressions, algorithmic complexity. As part of the core language you won't feel missing as the course is comprehensive in nature.\nBrief list of topics covered.\n1. List\n2. Strings\n3. Dictionaries\n4. Sets\n5. Tuples\n6. Regular Expression\n7. List Comprehensions\n8. Higher Order Functions\n9. Input/Output operations\n10. Algorithmic Complexity\n11. Recursions\n12. Collections\n13. OOPs\n14. Competitive Programming\n\nWe recommend to first solve each of the problem yourself then only look at the solution. Remember you can always pause, forward and rewind the video.\nBut \"All work and no play makes JACK a DULL boy\". Therefore in the end we will look at some cool and mischievous projects. We will make a GMAIL bomb, FACEBOOK bomb, YOUTUBE downloader.\n*All instructions taught here are meant for educational purposes only.",
      "target_audience": [
        "People who have never coded before and want to learn programming",
        "People who want to get started with Python",
        "People who are aware of basic syntax but want to solve programming challenge with varying level of difficulty",
        "People who want to master Python core syntax",
        "It's not meant for advanced Python users who are already aware with the Python core syntax, data structures. Please go over the curriculum so see what all course covers."
      ]
    },
    {
      "title": "YAML, JSON & JSONPath: For Absolute Beginners",
      "url": "https://www.udemy.com/course/yaml-json-jsonpath-for-absolute-beginners/",
      "bio": "Checkout why this is the best course to get start with learning YAML, JSON and JSONPath. Comes with practices exercises.",
      "objectives": [
        "Understanding the Basics of JSON, YAML and JSONPath",
        "Getting Comfortable with Writing Manifest files in JSON and YAML And writing JSONPath Expressions",
        "Using various tools to Validate and Test the JSON, YAML & JSONPath",
        "Learning How to Convert XML to JSON, JSON to YAML and Vice Versa.",
        "Couse Comes with Practice Exercises to test your skills in JSON, YAML and JSONPath",
        "Provided \"Further Readings\" for each topic to help you expand your knowledge in JSON, YAML & JSONPath"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "JSON - Getting Started": [
          "TOP 10 Things To Know About JSON",
          "JSON Syntax",
          "JSON Object",
          "JSON Array",
          "JSON Data Types",
          "Writing POD Config in JSON",
          "DEMO: Validate & Testing JSON"
        ],
        "YAML - Getting Started": [
          "TOP 10 Things To Know About YAML",
          "YAML Data Types",
          "YAML Maps & Lists ( AKA Objects & Arrays)",
          "Writing POD Config in YAML",
          "DEMO: Validate & Testing YAML"
        ],
        "JSONPath - Getting Started": [
          "JSONPath Overview",
          "JSONPath Object (Includes Demo)",
          "JSONPath Array ((Includes Demo)",
          "JSONPath ArrayRange (Includes Demo)",
          "JSONPath - Conditional Operations / Filters (Includes Demo)",
          "JSONPath Wildcards (Includes Demo)"
        ]
      },
      "requirements": [
        "Basic Understanding of XML and Kubernetes"
      ],
      "description": "In this course, you will learn about JSON, YAML, and JSONPath.\nIn the first part, you will learn about JSON. JSON is primarily used in web development, where the data is being stored and transmitted. This is slowly replacing the XML.\nOnce you get comfortable with it, we will move on to the second part, which is YAML. YAML is primarily used in Tools such as Ansible and Kubernetes.\nFinally, in part-3, you will learn about JSONPath. JSONPath is used to extract a subset of data from JSON files. This is similar to SQL for relational Databases.\nThis course is going to be a good start for anyone who is just getting started with JSON, YAML, and JSONPath.\nAnd one more good news is, you can purchase this course at the price of a lunch.\nIf you are NOT satisfied after your purchase, you will get a 100% money-back guarantee with no questions asked.\nWith that, I'm very excited to be part of your Journey. See you all in this course!\n\nAbout Me:\nHi! I'm Srinath Challa. I'm the founder of KubeEd(com) and started this company with a passion for teaching Technology, especially Kubernetes. I've helped hundreds of thousands of students learn Kubernetes and change their lives by becoming a DevOps Engineer/SREs with building a solid foundation in Kubernetes. I've been invited by many mid-to-large scale companies to teach their employees Kubernetes.",
      "target_audience": [
        "Anyone who is curious to learn the basics of JSON, YAML and JSONPath."
      ]
    },
    {
      "title": "A Guide to Understand Java Generics with Examples",
      "url": "https://www.udemy.com/course/java-generics-complete-course/",
      "bio": "With Simple Examples Step by Step",
      "objectives": [
        "Guide to Understand Generics with Examples"
      ],
      "course_content": {
        "Introduction": [
          "Java Generics Introduction"
        ],
        "Java Generics Concepts": [
          "Java Generics Overview",
          "Example to Understand the power of generics",
          "Arrays vs Collection Introduction",
          "Arrays vs Collection vs Generics Example",
          "Why we need generics",
          "Generic Class Syntax Introduction",
          "Generic Class Example Part1",
          "Generic Class Example Part2",
          "Generics Naming Conventions",
          "Generic Example With K Type and V Type",
          "Type Inference in Java with Generics",
          "Generic Method Introduction",
          "Generic Method With Void Example",
          "Generic Method With Return Example",
          "Raw Type Generic Example"
        ],
        "Java Generic Bounds": [
          "Upper Bound Generic Introduction",
          "Upper Bound Generic Example",
          "Multiple UpperBound Example",
          "Upper Bound Wildcard Introduction",
          "Upper Bound Wildcard Example1",
          "Upper Bound Wildcard Example2",
          "Upper Bound Restriction",
          "Lower Bound Example Introduction",
          "Lower Bound Example",
          "UnBounded Wildcard Example"
        ],
        "Type Erasure in Generics": [
          "Type Erasure Introduction",
          "Type Erasure With Object Example",
          "Type Erasure with Bounded Example",
          "Restriction With Generics in Java"
        ],
        "Thanks": [
          "Thank you !!!"
        ]
      },
      "requirements": [
        "Before you start doing practice with various types of examples given in this reference, I'm making an assumption that you are already aware of basic Java Programming."
      ],
      "description": "Java Generics\nJava Generic methods and generic classes enable programmers to specify, with a single method declaration, a set of related methods, or with a single class declaration, a set of related types, respectively. Generics also provide compile-time type safety that allows programmers to catch invalid types at compile time. This reference will take you through simple and practical methods using Java Generics.\nThe Java Generics programming is introduced in J2SE 5 to deal with type-safe objects. It makes the code stable by detecting the bugs at compile time.\nBefore generics, we can store any type of objects in the collection, i.e., non-generic. Now generics force the java programmer to store a specific type of objects.\nIt would be nice if we could write a single sort method that could sort the elements in an Integer array, a String array, or an array of any type that supports ordering.\nJava Generic methods and generic classes enable programmers to specify, with a single method declaration, a set of related methods, or with a single class declaration, a set of related types, respectively.\nGenerics also provide compile-time type safety that allows programmers to catch invalid types at compile time.\nUsing Java Generic concept, we might write a generic method for sorting an array of objects, then invoke the generic method with Integer arrays, Double arrays, String arrays and so on, to sort the array elements.",
      "target_audience": [
        "This reference has been prepared for the beginners to help them understand the basic functionality related to functionality available in Java Generics."
      ]
    },
    {
      "title": "Learn to code by creating 14 projects with JavaScript and C#",
      "url": "https://www.udemy.com/course/learn-to-code-by-creating-14-projects-with-javascript-and-c/",
      "bio": "Learn to write computer code by creating 14 projects from scratch using JavaScript and C# Programming language",
      "objectives": [
        "Create Calculator using JavaScript",
        "Create Digital clock using JavaScript",
        "Create a Image slider using JavaScript",
        "Create a Todo List App using JavaScript",
        "Create a Word count Tool using JavaScript",
        "Create a Percentage Calculator using JavaScript",
        "Create a Maths Addition Interactive Game using JavaScript",
        "Create a Currency Converter using C#",
        "Create a Web Browser using C#",
        "Create a Ping Pong Game using C#",
        "Create a Image Upload using C#",
        "Create a Database driven Login Form using C#",
        "Create a Matching Pairs Game using C#",
        "Create a Music Player using C#"
      ],
      "course_content": {
        "Introduction and the basics": [
          "Introduction",
          "HTML Document Structure",
          "Css Syntax",
          "JavaScript Syntax",
          "JQuery Library",
          "What is variable",
          "Variable naming convention",
          "What is a string",
          "Basic data types",
          "Concatenation"
        ],
        "Downloads and Installations": [
          "System Requirements for Visual studio",
          "Download and install visual studio",
          "Completing visual studio installation",
          "SQL Server 2014 Express Requirements",
          "Download SQL Server 2014 Express",
          "Install SQL Server 2014 Express",
          "Download sample database",
          "Add sample database to SQL Server"
        ],
        "Create your first WebApp with C# and Visual Studio": [
          "Add a template",
          "Add a Form and controls",
          "Customize the controls",
          "Coding the controls",
          "Understanding our first web app",
          "Working with Solutions and Projects in Visual Studio",
          "Code challenge"
        ],
        "Project 1: Create a Calculator with JavaScript": [
          "Overview",
          "What We Will Create",
          "Create directory and files",
          "Create HTML",
          "Add CSS",
          "Write JavaScript Code"
        ],
        "Project 2: Create a Digital Clock with javaScript": [
          "Overview",
          "What we will create",
          "Create directory and files",
          "Create HTML",
          "Add CSS",
          "Write JavaScript Code"
        ],
        "Project 3: Create a Percentage Calculator using JavaScript": [
          "Overview",
          "What we will create",
          "Create directory and files",
          "Create the HTML",
          "Add Styling",
          "Write JavaScript code"
        ],
        "Project 4: Create a Word Count App using JavaScript": [
          "Overview",
          "What we will create",
          "Create directory and files",
          "Create App structure with HTML",
          "Add Styling with CSS",
          "Write JavaScript Code"
        ],
        "Project 5: Create an Image Slider using JavaScript": [
          "Overview",
          "What we will create",
          "Create project directories and files",
          "Create the HTML",
          "Add the CSS",
          "Write JavaScript Code"
        ],
        "Project 6: Create a Todo List with JavaScript": [
          "Overview",
          "What we will create",
          "Create directories and files",
          "Create HTML",
          "Add Css",
          "Create functionality -Part 1",
          "Create functionality -Part 2"
        ],
        "Project 7: Create a Maths Addition Game with JavaScript": [
          "Overview",
          "What we will create",
          "Create directories and files",
          "create HTML",
          "Add CSS",
          "Write JavaScript Code"
        ]
      },
      "requirements": [
        "Basic computer knowledge",
        "Desire to learn"
      ],
      "description": "Welcome to this beginners course on how to program using JavaScript and C#\nIf you use the internet there is a chance that you've interacted with JavaScript because it is hosted or gets executed  inside the web browser.\nJavaScript is the programming language of HTML and the Web.\nC# is an object oriented programming language developed by Microsoft.\nThe best way in my opinion to learn any programming language is by creating hence this course is a practical hands-on course . We will create 7 JavaScript and 7 C# projects from scratch and hopefully you will pick up some useful skills along the way.\nThe JavaScript projects we will create are :\n• Calculator\n• Digital Clock\n• Image slider\n• Todo List App\n• Word count Tool\n• Percentage Calculator\n• Maths Addition Interactive Game\nThe C# project we will create are:\n• Currency Converter\n• Web Browser\n• Ping Pong Game\n• Image Upload\n• Database driven Login Form\n• Matching Pairs Game\n• Music Player\n\nA good text editor makes writing code fun and productive.\nI will be using sublime text editor for this course. It is a cross platform text editor that will work on any platform  like windows and macs.It is free to download and use but recommend that you purchase a full license after trying it out if you enjoy using it.\nAnother good cross platform text editor is brackets which is open source and completely free to use. By open source I mean  developers from around the world can contribute to enhance it.\nI will  show you how to install Visual Studio, a great IDE for developing in C# applications. Along the way, we will cover topics such as:\n• Declare and initialize variables with a variety of data types\n• Troubleshoot Compile errors\n• Controlling flow with conditional code\n• Creating Method\n• Creating Event Handler methods\n• Using controls and changing their properties.",
      "target_audience": [
        "Novice programmers",
        "Novice developers"
      ]
    },
    {
      "title": "Complete Data Structures and Algorithms: Software Interviews",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-software-interviews/",
      "bio": "Learn data structures and algorithms with Python. Solve technical questions by Google, Amazon, Meta, Netflix and more!",
      "objectives": [
        "Data Structures",
        "Algorithms",
        "Technical Interview Question Solutions",
        "Python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Outline"
        ],
        "Big O Notation": [
          "Big O Introduction",
          "What is Big O?",
          "Big O Code Examples",
          "Space Complexity",
          "Big O GitHub Link"
        ],
        "Lists & Arrays": [
          "Lists Introduction",
          "Arrays 101",
          "Lists",
          "Arrays & Lists GitHub Link",
          "Contains Duplicate",
          "Contains Duplicate Solution",
          "Contains Duplicate GitHub Link",
          "Find Single",
          "Single Number Solution",
          "Find Single GitHub Link",
          "Majority Element",
          "Boyer Moore",
          "Majority Element GitHub Link"
        ],
        "Stack, Queue & Deque": [
          "Stack, Queue, Deque Introduction",
          "What is Stack, Queue, Deque?",
          "LifoQueue",
          "Stack Implementation",
          "Queue Implementation",
          "Deque Implementation",
          "Stack, Queue, Deque GitHub Link",
          "Implement Stack Using Queue",
          "Writing the Stack",
          "Implement Stack GitHub Link",
          "Baseball Game",
          "Baseball Solution",
          "Baseball GitHub Link",
          "Daily Temperatures",
          "Daily Temperatures Solution",
          "Daily Temperatures GitHub Link"
        ],
        "Linked List": [
          "Linked List Introduction",
          "What is Linked List?",
          "Doubly Linked List",
          "Linked List O Notation",
          "Linked List GitHub Link",
          "Remove nth Node",
          "Remove nth Node Solution",
          "Remove nth Node GitHub Link",
          "Linked List Intersection",
          "Intersection Solution",
          "Intersection GitHub Link",
          "Duplicate",
          "Floyd",
          "Duplicate GitHub Link"
        ],
        "Tree": [
          "Tree Introduction",
          "What is Tree?",
          "Tree Big O Notation",
          "Insert Method",
          "Finishing BST",
          "Tree GitHub Link",
          "Recursion",
          "Recursion GitHub Link",
          "Reverse String",
          "Reverse String Recursion",
          "Reverse String GitHub Link",
          "Fibonacci",
          "Recursion vs Iteration",
          "Memoization",
          "Fibonacci GitHub Link",
          "Invert Binary Tree",
          "Invert Tree Solution",
          "Invert Binary GitHub Link"
        ],
        "Tree Traversal": [
          "Tree Traversal Introduction",
          "BFS vs DFS",
          "BFS Implementation",
          "DFS Implementation",
          "DFS Other Methods",
          "Tree Traversal GitHub Link",
          "BST to Tree",
          "DFS Solution",
          "Greater BST GitHub Link",
          "Binary Tree Max Path Sum",
          "DFS Returning Solution",
          "Binary Tree Max GitHub Link"
        ],
        "Graph": [
          "Graph Introduction",
          "What is Graph?",
          "Graph Implementation",
          "Graph GitHub Link",
          "Reorder Routes",
          "DFS Solution",
          "Reorder Routes GitHub Link",
          "Number of Islands",
          "BFS Solution",
          "Number of Islands GitHub Link",
          "Redundant Connection",
          "Union Find",
          "Redundant Connection GitHub Link"
        ],
        "Searching & Hash Tables": [
          "Hash Tables Introduction",
          "Sequential vs Binary",
          "Search Implementation",
          "Search Algorithms GitHub Link",
          "What is Hash Table?",
          "Hash Function",
          "Hash Table Implementation",
          "HashTable GitHub Link",
          "Two Sum",
          "HashMap Solution",
          "Two Sum GitHub Link",
          "Encode Decode",
          "Tiny Url Solution",
          "Tiny Url GitHub Link",
          "Brick Wall",
          "Brick Wall Solution",
          "Brick Wall GitHub Link"
        ],
        "Sorting & Heap": [
          "Heap Introduction",
          "Sorting Algorithms",
          "Bubble Sort",
          "Selection Sort",
          "Insertion Sort",
          "Merge Sort",
          "Merge Sort Implementation",
          "Quick Sort",
          "Quick Sort Implementation",
          "What is Heap?",
          "Heap Sort",
          "Sorting Algorithms GitHub Link",
          "K Closest Points",
          "Heap Solution",
          "K Closest GitHub Link",
          "Data Stream",
          "Max Heap Solution",
          "Data Stream GitHub Link"
        ]
      },
      "requirements": [
        "Knowledge in any programming language"
      ],
      "description": "Welcome to the Complete Data Structure & Algorithms: Technical Interviews course\nData structures and algorithms is not just a subject which every programmer should master but also a major topic in technical interviews by giant technology companies such as Google, Amazon, Microsoft, Netflix, Uber, Tesla etc.\nNot only we will learn about the theory and practical implementations of the data structures & algorithms but also we will solve many technical interview questions and practice what we learn in each section.\nDuring the course we will use Python programming language for all implementations and question solutions. However if you are sufficient in any other programming language before, you would be fine. We have a quick Python Refresher section where you can learn about the fundamentals if you want to adapt. Alternatively you can learn all the algorithms and solutions and implement them in your own preferred language as well.\nThis course is brought to you by Atil Samancioglu, teaching more than 300.000 students worldwide on programming and cyber security along with the Codestars, serving more than 1 million students! Atil also teaches mobile application development in Bogazici University and he is founder of his own training startup Academy Club.\nSome of the topics that will be covered during the course:\nTechnical Interview Questions\nBig O Notation\nStack\nQueue\nDeque\nArrays\nLinked List\nHeap\nGraph\nTree\nHashTable\nAfter you complete the course you will be able to solve technical interview questions, improve your programming skills and implement ideas in real life problems. You will be given many opportunities to solve questions on your own during the training and it will be vital for you to follow these instructions.\nIf you are ready, let's get started!",
      "target_audience": [
        "Programmers trying to land a job in big technology companies",
        "Programmers looking forward to improve their coding skills",
        "Programmers looking to learn about data structures & algorithms"
      ]
    },
    {
      "title": "Learn groovy programming basics",
      "url": "https://www.udemy.com/course/groovy-basics/",
      "bio": "Groovy: A companion to your SoapUI automation.",
      "objectives": [
        "Write groovy code with great ease",
        "Get source code of each tutorials",
        "Would be able to understand basics of unit testing of java code with groovy"
      ],
      "course_content": {},
      "requirements": [
        "Little bit java"
      ],
      "description": "Groovy is known as super-set of java and its has provided scripting feature to java and more over it has provided the features like other scripting language like perl,ruby, python and its integration is seamless with java and this has provided a gateway to java programmer to groom themselves quit easily.\nThis course is best suited for all the programmer and automation engineer who are coping with groovy script while learning SOAPUI. This will give a good start to your learning.\nThis course would help you to\n- Become a good automation engineer by writing good script in SOAPUI\n- It can help you to handle any files quite easily\nSo good luck !!",
      "target_audience": [
        "Any one with small knowledge of programming"
      ]
    },
    {
      "title": "Learn JavaScript in 2 Weeks (Complete JavaScript Bootcamp)",
      "url": "https://www.udemy.com/course/javascript-course-coding2go/",
      "bio": "Build Dynamic and Interactive Websites with JavaScript. Learn the Basics fast & start building projects today!",
      "objectives": [
        "Learn all Basics and modern Syntax in JavaScript",
        "Learn Advanced and Expert-Level Coding in JavaScript",
        "Build real JavaScript Projects from scratch using DOM manipulation and events",
        "Build a Cookie Clickers Clone to learn the DOM Basics practically",
        "Build a Todo Application that can store user data",
        "Learn about Data Types, Conditionals, Loops, Functions, Arrays, Objects, DOM, Events, Forms",
        "Improve your problem-solving skills to prepare for typical job interview tests",
        "Solve many Coding Exercises and Quizzes for optimal learning"
      ],
      "course_content": {
        "Introduction | Material | Downloads": [
          "Why should you learn JavaScript?",
          "About the Course | Topics Overview | Optimal Learning Path",
          "What is JavaScript?",
          "What software is used in this course?"
        ],
        "First Steps in JavaScript": [
          "Setup Visual Studio Code",
          "Write your first lines of JavaScript",
          "Write JavaScript in a separate file",
          "How to use the JavaScript Console",
          "Before We Begin: A Few Quick Eplanations",
          "Summary Cheat Sheet - Key Concepts Recap"
        ],
        "Variables, Data Types & Operators": [
          "What to Expect from This Section",
          "Create your first Variables",
          "Data Types",
          "Typeof",
          "Check your knowledge on variables and data types",
          "What are Operators?",
          "Arithmetic Operators",
          "Type Conversion & Coercion",
          "EXERCISE: Variables and Operators",
          "SOLUTION: Variables and Operators",
          "BEGINNER QUIZ (Complete before going to the next section)",
          "OPTIONAL QUIZ: Type Conversion and Coercion (DIFFICULTY: HARD)",
          "Summary Cheat Sheet - Key Concepts Recap"
        ],
        "Logic & Control Flow": [
          "Comparison Operators",
          "If Statements",
          "EXERCISE: Online Shop Discount Calculator",
          "SOLUTION: Online Shop Discount Calculator",
          "Quiz: Comparison Operators & If Statements",
          "Nested If Statements",
          "Logical Operators",
          "EXERCISE: Ticket Price Calculator",
          "SOLUTION: Ticket Price Calculator",
          "The Ternary Operator",
          "EXERCISE: Can you drive | Ternary Operator",
          "SOLUTION: Can you drive | Ternary Operator",
          "Check your knowledge",
          "Summary Cheat Sheet - Key Concepts Recap"
        ],
        "Loops & Repetition": [
          "While Loop",
          "EXERCISE: Practice the While Loop",
          "SOLUTION: Practice the While Loop",
          "For Loop",
          "Break and Continue",
          "EXERCISE: Count Even Numbers (But Skip One!)",
          "SOLUTION: Count Even Numbers (But Skip One!)",
          "Check your knowledge on loops",
          "Summary Cheat Sheet - Key Concepts Recap"
        ],
        "Functions | Make your code reusable!": [
          "What is a Function?",
          "Create your first Function",
          "Scope",
          "Parameter & Arguments",
          "EXERCISE: Custom Range Printer",
          "SOLUTION: Custom Range Printer",
          "Return Statements",
          "Hoisting",
          "Callback Functions",
          "EXERCISE: Login Simulation with Callbacks",
          "SOLUTION: Login Simulation with Callbacks",
          "Function Declaration vs Function Expression",
          "Check your knowledge on functions",
          "Summary Cheat Sheet - Key Concepts Recap"
        ],
        "Working with Strings": [
          "Template Literals & String Interpolation",
          "String Methods & Properties",
          "String Exercise & Method Chaining",
          "More String Methods",
          "EXERCISE: Abbreviation Generator",
          "SOLUTION: Abbreviation Generator"
        ],
        "Working with Arrays": [
          "Array Introduction",
          "Add and Remove Values",
          "More Array Methods",
          "Reference Types vs Primitive Types",
          "Turn String Into Array",
          "Arrays and Loops",
          "ForEach Loop",
          "Check your knowledge on Arrays"
        ],
        "Working with Objects": [
          "What are Objects",
          "Create Objects",
          "Modify Objects",
          "Iterate over Objects",
          "Object Methods And This",
          "The Spread Operator",
          "Objects Inside an Array"
        ],
        "Advanced Array Methods": [
          "Introduction into Advanced Array Methods",
          "The Map Method",
          "EXERCISE: Apply Targeted Discounts",
          "SOLUTION: Apply Targeted Discounts",
          "Filter Method",
          "EXERCISE: Search Products By Name or Category",
          "SOLUTION: Search Products By Name or Category",
          "Reduce Method",
          "EXERCISE: Count Items in Stock",
          "SOLUTION: Count Items in Stock"
        ]
      },
      "requirements": [
        "No programming experience required! You will learn everything you need to know",
        "Basic HTML & CSS skills recommended but not mandatory as the basics are also taught in the course"
      ],
      "description": "Learning to code feels overwhelming? Let’s change that.\n\n\nAbout the Course\nThis course will teach you JavaScript from the very beginning to an advanced level, where you can build amazing and interactive websites.\nBy the end, you’ll not only understand how JavaScript works — you’ll be able to write your own code, build real-world projects, and think like a developer.\n\n\nWhat you will learn\nHow to write your very first JavaScript code — even if you’ve never programmed before\nThe difference between var, let and const — and when to use which\nHow to store, update, and work with data using variables\nMastering data types like strings, numbers, booleans, null, undefined\nMaking decisions in your code with if statements and logical operators\nHow to repeat actions with for, while, and do while loops\nWriting clean and reusable code using functions\nUnderstanding parameters, return values, hoisting, and scope\nBuilding logic using nested conditionals and loops\nInteracting with the user using input fields and buttons\nResponding to user actions with event listeners\nMastering the DOM (Document Object Model) to make websites dynamic\nCreating elements, changing text, adding styles — all with JavaScript\nTraversing the DOM to access parents, children, and siblings\nBuilding a Cookie Clickers Clone\nBuilding a fully working Todo App with add, delete, and check-off features\nSaving your app data with localStorage so it stays even after a refresh\nLearning best practices that professional developers use every day\nLaying a strong foundation for future learning: React, backend, and beyond\n\n\nHow this course is different\nMost beginner courses either go too fast or stay too theoretical. This one is project-based and practical from the start.\nWe don’t just explain how things work — we show you how to build real things, step by step.\nYou'll constantly apply what you’ve learned through exercises, quizzes, and projects.\nAnd since we are coming from a YouTube background, we made sure to keep the videos engaging enough\n\n\nWhile it is expected that you know at least the basics of HTML & CSS before going into this course...\nDon't stress if you haven't learned these languages yet. We included a quick HTML & CSS section into this JavaScript course that will get you started with all the basics you need to know.\n\n\nYour Instructors\nHey, we are Fabian and Pavel coming from a coding YouTube channel who has helped thousands of students making sense of web development with HTML, CSS and JavaScript. We’ve designed this course with simplicity, clarity, and real-world relevance in mind. If you want to learn how to think like a developer, and feel confident writing JavaScript…\nYou’re in the right place.\nYou can watch some preview lessons before buying the course to get familiar with our teaching style.\nIf you like what you see, get the course and start learning today!\n\n\nOne Day or Day One?\nYou’ve been thinking about learning to code. Maybe even started and stopped a few times.\nBut the best part about online learning is: You don’t need to wait.\nYou don’t need permission. You don't need to wait for the start of a new year, new month, new week, new me.\nDo you want to become a JavaScript developer \"One Day\" somewhere in the future?\nOr will today become day one of your journey.\nLet’s make it happen. Get the course now and I will be happy to see you in the first lesson",
      "target_audience": [
        "Beginners that seek a high paying job in web development",
        "Students who already know some HTML & CSS and want to make their websites interactive",
        "Creative Minds who want to build tools, apps, and websites with logic behind them",
        "Self-starters who learn best by building projects",
        "Students who prefer learning online instead of a university classroom"
      ]
    },
    {
      "title": "Go Programming: Master the Basics with Ease",
      "url": "https://www.udemy.com/course/go-programming-learn-the-basics-in-2-hours/",
      "bio": "Kickstart Your Coding Journey: Learn Go with Simple, Fun, and Interactive",
      "objectives": [
        "Students will learn the basic syntax of Go, including how to write variables, functions, and loops.",
        "Learners will become familiar with Go's primary data types, such as integers, strings, and arrays, and how to use them in simple programs.",
        "Students will be able to create and run basic Go programs that perform tasks like calculations, text manipulation, and simple decision-making.",
        "Learners will understand how to define and use functions in Go, including passing arguments and returning values.",
        "Students will get hands-on experience with Go's fundamental data structures like arrays, slices, and maps."
      ],
      "course_content": {
        "Beginner’s Guide to Go: Introduction and Setup": [
          "Beginner’s Guide to Go - Introduction",
          "Beginner’s Guide to Go - Installation",
          "Beginner’s Guide to Go - Introduction and File creation",
          "Important Course Information"
        ],
        "Beginner’s Guide to Go: Comments and Variables": [
          "Beginner’s Guide to Go - Single and Multi Line Comments",
          "Beginner’s Guide to Go - Variable Declaration",
          "Beginner’s Guide to Go - Short Variable Declaration",
          "Beginner’s Guide to Go - Block Declaration",
          "Beginner’s Guide to Go - Constant Declaration"
        ],
        "Beginner’s Guide to Go: Data types": [
          "Beginner’s Guide to Go - Integer Datatype",
          "Beginner’s Guide to Go - Float Datatype",
          "Beginner’s Guide to Go - String Datatype",
          "Beginner’s Guide to Go - Boolean Datatype"
        ],
        "Beginner’s Guide to Go: Output Functions": [
          "Beginner’s Guide to Go - Print Function",
          "Beginner’s Guide to Go - Println Function",
          "Beginner’s Guide to Go - Printf Function"
        ],
        "Beginner’s Guide to Go: Casting and Strings": [
          "Beginner’s Guide to Go - Type Casting",
          "Beginner’s Guide to Go - String Handling Part 1",
          "Beginner’s Guide to Go - String Handling Part2"
        ],
        "Beginner’s Guide to Go: Operators": [
          "Beginner’s Guide to Go - Arithmetic Operators",
          "Beginner’s Guide to Go - Assignment Operators",
          "Beginner’s Guide to Go - Comparison Operators",
          "Beginner’s Guide to Go - Logical Operators",
          "Beginner’s Guide to Go - Bitwise Operators"
        ],
        "Beginner’s Guide to Go: Conditional Statements": [
          "Beginner’s Guide to Go - If Condition Statement",
          "Beginner’s Guide to Go - If Else Condition Statement",
          "Beginner’s Guide to Go - Else If Condition Statement",
          "Beginner’s Guide to Go - Nested If Condition Statement",
          "Beginner’s Guide to Go - Switch Statement"
        ],
        "Beginner’s Guide to Go: Data Structure(Arrays)": [
          "Beginner’s Guide to Go - Array Introduction and Creation",
          "Beginner’s Guide to Go - Array Initialization Concepts",
          "Beginner’s Guide to Go - Array Index Concepts",
          "Beginner’s Guide to Go - Array Update Concepts",
          "Beginner’s Guide to Go - Array Length"
        ],
        "Beginner’s Guide to Go: Data Structure(Slice)": [
          "Beginner’s Guide to Go - Slice Introduction and Creation",
          "Beginner’s Guide to Go - Slice an Array Concept",
          "Beginner’s Guide to Go - Slice Creation using Make",
          "Beginner’s Guide to Go - Slice Index and Update Concepts",
          "Beginner’s Guide to Go - Slice Length and Methods",
          "Beginner’s Guide to Go - Slice Methods"
        ],
        "Beginner’s Guide to Go: Loop": [
          "Beginner’s Guide to Go - For Introduction and Creation",
          "Beginner’s Guide to Go - Continue statement",
          "Beginner’s Guide to Go - Break Statement",
          "Beginner’s Guide to Go - ForEach Concept"
        ]
      },
      "requirements": [
        "No programming experience required. You will learn everything you need to know"
      ],
      "description": "Course Description: Go Programming: Learn the Basics in 2 Hours\nUnlock the power of Go, a modern programming language known for its simplicity and efficiency. This course is designed specifically for beginners who want to dive into Go programming and build a solid foundation in a structured, easy-to-follow format.\n\n\nWhat You'll Learn:\nBasic Syntax and Concepts: Get to grips with Go's core syntax, data types, and essential programming concepts.\nFunctions and Control Structures: Learn how to write and use functions, loops, and conditionals to create functional programs.\nData Structures: Explore Go's built-in data structures, including arrays, slices, and maps, and understand how to use them effectively.\nWhy Take This Course?\nBeginner-Friendly: No prior experience with GO or any other language is required. This course is designed to start from the very basics.\nHands-On Learning: Engage in practical exercises and real-world examples that will help you understand and apply GO concepts effectively.\nValuable Skills: GO is an essential tool for any developer.\n\nBy the end of this course, you will have a solid understanding of GO, enabling you to manage your coding projects with confidence and efficiency. Join us and start your journey to becoming a proficient GO user today!\n\n\nREMEMBER… I'm so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the buy now button and join the world's highest-rated development course.",
      "target_audience": [
        "Individuals from non-software development backgrounds who are moving into a coding or software engineering role.",
        "Professionals Transitioning into Software Development: Professionals from other fields who are transitioning into software development and need to learn GO.",
        "Individuals new to programming who want to start learning with a simple and efficient language like Go.",
        "Anyone interested in self-paced learning, looking to add a new language to their skill set without prior experience in Go.",
        "Tech enthusiasts and hobbyists who want to learn a modern, powerful language that’s used in developing cloud services, microservices, and web applications.."
      ]
    },
    {
      "title": "Learn Python Programming Masterclass",
      "url": "https://www.udemy.com/course/learn-python-programming-masterclass/",
      "bio": "Python Practical Training For Beginners 2021: Go From Basics To Advanced By Developing 6 Real Python Projects",
      "objectives": [
        "Learn Python from Zero to Hero.",
        "Fundamental understanding of the Python programming.",
        "Learn to use Python professionally, learning both Python 2 and Python 3.",
        "Learn advanced Python features, like collections, modules.",
        "Learning all the basic topics, like conditional statements, looping, advanced operators",
        "Understand how to use Data Structures, like Lists, Tuple, Set and Dictionary.",
        "Get an understanding of how to create GUIs.",
        "Developing 6 major projects including Face Recognition, Automate Weather Forecast and many such interesting projects.",
        "Learn how to use Object Oriented Programming with classes.",
        "Understand how to execute the .py programs with ATOM and Visual Studio.",
        "Course includes Python Cheat Sheet"
      ],
      "course_content": {
        "Python in 2021": [
          "Course Introduction",
          "Welcome - Lets Get Started"
        ],
        "Setup Installing Python": [
          "Python Programming - Is Python A Bubble",
          "Installing Python on Windows",
          "Python 3.9 Version Update",
          "Different Methods To Execute Python Codes"
        ],
        "Writing our 1st Python Program": [
          "Variables and Python Memory Management"
        ],
        "DataTypes in Python": [
          "Datatypes in Python",
          "Sequences in Python",
          "Sets, Dictionary",
          "Literals and Identifiers",
          "Reserve Words - You Can't Use Them!"
        ],
        "Operators in Python": [
          "Operators Arithmetic, Assignment",
          "Operators Unary Minus, Relational, Logical, Boolean",
          "Understanding Escape Characters"
        ],
        "Input and Output": [
          "Introduction to Input and Output Statements",
          "Output Statements",
          "Input Statements",
          "Python Built-in Functions and Built-in Module",
          "Practice Questions",
          "Solutions for Practice Questions"
        ],
        "Integrated Development Environment (IDE)": [
          "Editor 1 - Working With ATOM",
          "Editor 2 - Working With VS Code",
          "Run .py file through System Terminal"
        ],
        "Python Conditional Statements": [
          "Conditionals If, If ... Else and Indentation",
          "Conditionals If ... Else Statements With Operators",
          "Conditionals if... elif ... else Statements, Nested if Statements",
          "Practice Questions",
          "Solutions for Practice Questions",
          "Conditional Statement Problem 1",
          "Conditional Statement Problem 2",
          "Conditional Statement Problem 3"
        ],
        "Loops in Python": [
          "While Loop",
          "For Loops - Part 1",
          "For Loops - Part 2",
          "Break and Continue Statements",
          "Practice Questions",
          "Solutions for Practice Questions",
          "Looping Problem 1",
          "Looping Problem 2",
          "Looping Problem 3",
          "Looping Problem 4",
          "Looping Problem 5"
        ],
        "Strings and Characters": [
          "Comments and Doc Strings",
          "Diving Deep With Strings",
          "Practice Questions",
          "Solutions for Practice Questions",
          "String Problem 1",
          "String Problem 2",
          "String Problem 3"
        ]
      },
      "requirements": [
        "Access to a computer with an internet connection."
      ],
      "description": "Welcome to Python Programming Bootcamp. One single course to start your Python Journey as a Fresher Step by Step. This course touches on each and every important concept of Python with latest version of Python 3.7, Python 3.8, and Python 3.9.\nLearn one of employer's most requested skills of 2021!\nThroughout the course, we will explore the most important Python Programming Features -\nBasics of Python - Expressions, Variables, and Input Output Statements\nOperators - Assignment Operators, Relational and Logical Operators, Short Hand Operators\nConditional Statements - If Else Statement, Nested If Else\nMethods - Parameters, Passing Arguments, and Return Values\nComplete Object Oriented Programming - Classes and Objects\nOOPs Features - Encapsulation, Inheritance, and Abstract Classes.\nData Structures In depth - List, Set, Dictionary, and Tuples\nLoops - For Loop, While Loop, Keywords: Break and Continue\nMutability and Immutability of Python Basic Types.\nBuilt-in And User Defined Modules\nErrors And Exception Handling with try except block - try, except, else, and finally.\nCustom Exception - Raising Exception, Creating, and Raising a Custom Exception.\nPython 3 Cheat sheet\nHere are some projects that we will explore:\nFace recognition with OpenCV in Python\nData Analysis With Pandas\nGraphical User Interface Application with Tkinter\nPassword Generator with Random Module\nUnderstanding the basics of Databases and Integrating Desktop Application with SQLite3 Database.\nAutomate Weather Forecast\nAutomated Web Scraper and Mailing System with BeautifulSoup\nSo basically we will work on 6 different Projects With OpenCV, Pandas, Tkinter, BeautifulSoup & more.\nThe main goal of this course is to learn programming by building projects.",
      "target_audience": [
        "Beginners who have never programmed before.",
        "Programmers who are switching other programming languages to Python.",
        "Programmers who want to level up their skills."
      ]
    },
    {
      "title": "A Beginners Guide to Developing Apple TV Apps With TVML Kit",
      "url": "https://www.udemy.com/course/guide-to-developing-tvos-apps/",
      "bio": "Learn rapid Apple TV (tvOS) development with no coding experience by developing 2 full Apple TV apps for streaming media",
      "objectives": [
        "Have knowledge on how to design and develop Apple TV apps.",
        "Have knowledge of rapid (fast) Apple TV development.",
        "Have knowledge on how to develop your own TV and music streaming apps.",
        "Freelance as an Apple TV developer."
      ],
      "course_content": {},
      "requirements": [
        "Little or No Programming Knowledge is Required.",
        "Have Access to a Mac Computer OR a Windows PC running OS X.",
        "Have a Bit Of Creativity."
      ],
      "description": "Hey guys! Welcome to the most comprehensive course on the internet that actually teaches you how to develop a fully functional app that streams media content.\nThis course is focused on learning how to develop Apple TV applications using the TVMLKit Framework. The TVMLKit Framework allows for rapid (quick) development of Apple TV apps. This course is developed to show you how TVMLKit allows for a consistent way of developing tvOS apps based on a template system, whilst still maintaining the intuitive native familiar experince.\nMy name is Tinashe Munyaka, a developer and designer, and a lover of anything creative! and I'll be walking on this journey with you while we explore the world of Apple TV apps.\nWhat should you expect to learn?\n\nDeveloping Apple TV apps without any programming or coding knowledge.\nUnderstanding tvOS and TVMLKit\nHow to go about developing your own apps using TVMLKit\nUnderstand how to design your own Apple TV apps\nLearn how to run your Apple TV apps locally in the simulator\nWhere to get image resources to use in your Apple TV app\nWhere to find video streaming URL's to use within your app\nWhere to find audio streaming URL's to use within your app\nHow to pull in content locally as well as dynamically in your Apple TV app\nHow to run your own app on your own Apple TV\nAnd loads more...\nSo why this course on TVML? Well...\nIf you're looking to develop Apple TV apps with much less effort then this course is for you. This course will show you how you can reduce the development time and effort in creating Apple TV apps, as well as shorten the time for you to take your Apple TV app to market.\nSo, if you want to develop rich media apps where people browse and consume media, with no performance tuning or optimization of the user interface then this course is for you!\nJoin me as I show you how to create awesome Apple TV apps that offer a great user experience. Cool, can't wait to meet you inside!",
      "target_audience": [
        "Anyone wanting to explore the world of Apple TV.",
        "Anyone wanting to know how to develop Apple TV Apps.",
        "If you're a new developer or have no coding experience at all and want to learn how to develop Apple TV apps the easy way.",
        "Anyone wanting to learn rapid Apple TV (tvOS) development."
      ]
    },
    {
      "title": "AutoCAD to Excel - VBA Programming Hands-On!",
      "url": "https://www.udemy.com/course/autocad-to-excel-vba-programming-hands-on/",
      "bio": "Your ultimate VBA Programming tutorial to Exporting AutoCAD Drawings to Excel and other formats (and Importing back).",
      "objectives": [
        "You will learn and understand how AutoCAD interacts with Excel",
        "You will learn how to extract different AutoCAD Objects Properties and export them into Excel such as Lines Mtexts Attribute Blocks",
        "You will learn how to extract LWPolyline Objects into a CSV (or a Pipe) Delimited File",
        "You will learn how to import Excel Spreadsheet into AutoCAD",
        "You will learn how to import CSV (or Pipe) Delimited File into AutoCAD",
        "You will learn how to design a User Interface (UI) and write the code behind the control",
        "You will also learn lots of VBA Programming Techniques (e.g. Debugging, ErrorHandling, Conditionals, Looping, SelectionSets, etc. etc.)"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of AutoCAD is required. Basic knowledge of VBA would be helpful."
      ],
      "description": "This course will show you how easy it is to Export AutoCAD Drawing Information to Excel (and other Formats) using VBA.\nWe will walk through the actual development starting from User Interface design to coding the logic behind the form and explain every single line in detail. You will learn and have a good understanding of VBA Programming as we progress along the course. By the end of this course, you can be productive right away and you should be able to perform all these tasks and start building your own program or build upon the Projects that we’ve developed throughout this course.\n\nNote 1: If you haven't installed AutoCAD VBA IDE yet, please refer to Section 2 of my other course AutoCAD VBA Programming - Beginner Course. This section is available for viewing and will walk you through the process of downloading and installation as well as have a good tour of Integrated Development Environment (IDE).\n\n\nNote 2: This course dives directly into the actual process of extracting AutoCAD objects to Excel. If you are not very familiar with VBA yet, I suggest that you take my course \"AutoCAD VBA Programming - Beginner Course\". This course teaches you all the basics and fundamentals of using VBA which will help a lot when  you start learning this AutoCAD to Excel course.",
      "target_audience": [
        "All AutoCAD Users who want to learn how to interface AutoCAD and Excel Applications such as:",
        "Engineers Quantity Surveyors Architects CAD Designers",
        "All AutoCAD Users who want to learn VBA Programming",
        "Notes: Although not required, it will help if you have a basic knowledge of AutoCAD VBA Programming."
      ]
    },
    {
      "title": "SQL Foundation for data engineer | ETL | Testing | Analytics",
      "url": "https://www.udemy.com/course/sql-for-data-engineer-etl-testing-basics-foundation/",
      "bio": "A comprehensive course to teach you how to complete SQL queries",
      "objectives": [
        "Manage and Interact with Datasets with SQL",
        "Provide Data in Order to Answer Top Questions for Meetings",
        "Write Complex SQL Queries Using Table Joins",
        "Retrieve Proper Data from a Database Using a SQL WHERE Clause with Criteria",
        "Obtained a knowledge of SQL, and MySQL, allows students to apply for jobs in the IT sector.",
        "Have a detailed knowledge and understanding of using SQL, one of the most widely used databases in the world.",
        "Complete basic SELECT statements querying against a single table",
        "Filter data using the WHERE clause",
        "Sort data using the ORDER BY clause",
        "Understand the difference between the INNER JOIN, LEFT/RIGHT OUTER JOIN, and FULL OUTER JOIN",
        "Complete SQL statements that use aggregate functions",
        "Filter groups of data using the HAVING clause",
        "Group data together using the GROUP BY clause"
      ],
      "course_content": {},
      "requirements": [
        "A PC (Windows or Linux) or Mac is required",
        "No prior knowledge of Databases, SQL is needed."
      ],
      "description": "Do you want to learn a skill that can help you earn nearly $100,000 per year? If so, then this course is for you!\nSQL (Structured Query Language) is the language we use to interact with databases that store data. This allows us to retrieve data with ease and simplicity. As terms like business intelligence and big data become more familiar, businesses will need more people to learn the SQL language.\nThis course will teach you how to use the SQL language.\nYou will have plenty of video lessons to teach you the majority of the content. Each section includes practice problems with proper explainations. On completion of the course you will be able to query and extract insights from any dataset.\n\n\nLEARN SQL WITH MySQL\nIn order to make intelligent business decisions you need the proper data. In order to get the proper data you will need to communicate with and query data within a database. This is where SQL comes into play. SQL stands for Structured Query Language. It's the language used to communicate with a database and more importantly the data needed to make intelligent decisions that will save time and money.\n\n\nWHY THIS COURSE\nThis SQL course starts with the absolute basic building blocks necessary to communicate effectively with any database. You'll learn how to query and manage a database using MySQL. MySQL is a free open-source relational database management system (RDBMS), used by many of the world's largest organizations.\nEach section of the course will focus on a key topic of working with SQL. The video lectures have been created so you can follow along as the instructor demonstrates each concept. At the end of each section you can test your understanding through a section quiz and exercise. Once you complete a section the next section will build on the topics of the previous section. This encourages your learning as you build upon the knowledge you learn as you move from one section to the next.\nThis course is not just a sit back and watch the instructor type on the screen kind of course. The lectures and course flow has been designed to help you engage in the topic and participate by writing your own SQL. The TRUE LEARNING happens when you apply what you're learning and try it yourself.\nThe course also contains downloadable resources you can use away from the course as you continue to learn SQL. The QA board found within the course offers you the opportunity to ask questions and get answers from the instructor and interact with the other students enrolled in the course.\n\n\nCOURSE OBJECTIVES\nIn this SQL course you will learn the fundamental building blocks of creating, querying and working with databases using MySQL.\nLearn Proper SQL Syntax Using the MySQL Workbench\nLearn Relational Database Design Concepts\nUse the SQL SELECT Statement in Order to Query Data from a Database\nUse Column Alias to Give additional Context and Meaning to the Data\nLearn How to Filtering Database Query Results Using the SQL Where Clause\nCreate Advanced Queries by Using the Proper Filter Operators\nUse the SQL ORDER BY Keyword to Sort the Results of a Query\nLearn How to Properly Group Data and Create Calculations for Reporting\nUse the SQL HAVING Clause to Filter within Data Groups\nCreate a MySQL Database from Scratch\nLearn How to Create Tables and Manage Records within the Tables\nAnd Much More...",
      "target_audience": [
        "Anyone who wants to learn how to use SQL"
      ]
    },
    {
      "title": "Quick JavaScript Core learning Course JavaScript Essentials",
      "url": "https://www.udemy.com/course/quick-javascript-core-learning-course-javascript-essentials/",
      "bio": "JavaScript in 1 hour Essentials Training learn Core JavaScript coding step by step fundamentals of JavaScript quickly",
      "objectives": [
        "learn to write JavaScript",
        "learn how to program using javascript",
        "create javascript",
        "add JavaScript to their websites"
      ],
      "course_content": {},
      "requirements": [
        "Browser",
        "Computer",
        "desire to learn",
        "basic understanding of HTML and CSS"
      ],
      "description": "Learn Step by Step how to code using JavaScript. We cover all the core fundamental concepts of JavaScript in 1 hour!\n\nLearn about these JavaScript code concepts and much more.....\nVariables\nFunctions\nLoops\nConditions\nSwitches\nObjects\nArrays\nLearn JavaScript with our Step by Step training, we show you how to create dynamic interaction on your web pages. Learn to use JavaScript to create better user interaction experiences on web pages. Understand the structure of JavaScript code and how to apply it. Learn at your own pace resources are included, source code and everything you need to practice and learn JavaScript. We show you useful examples of JavaScript Code snippets and explain the development process.\nJavaScript is the foundation for so much online.\nKnowing how to apply JavaScript is an excellent skill to have. JavaScript is everywhere and by the end of this course you will have what you need to use it on your own webpages. Interact with your web users, dynamic web content using JavaScript.\n\nWe walk you through step by step with detailed explanations of code and more. We add and update a webpage from scratch adding JavaScript to bring it to life.\nno wasted time watching someone type\npractice with coding exercises\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons and code samples\ncode snippets\nLinks to top resources to save time\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions\nWe teach you the latest techniques and tools to use in order to create amazing web content.\nEverything you need to know is included in this course.\nLearn at your own pace, lifetime access to this course.\nWe show you how to write JavaScript code, easy to learn. Our tutorials are easy to follow and effective in teaching JavaScript.",
      "target_audience": [
        "beginners to Javascript",
        "anyone who wants to learn more about web development",
        "web designers",
        "web developers",
        "Students who want to learn Javascript",
        "Web developers looking to improve their skill set"
      ]
    },
    {
      "title": "Javascript Basics 2023",
      "url": "https://www.udemy.com/course/javascript-es6-2022/",
      "bio": "Begin your journey as a JavaScript developer by writing your first program, mastering the basics.",
      "objectives": [
        "Understand how to configure Visual studio code for javascript",
        "Learn shortcuts tips and tricks to use visual studio code editor efficiently",
        "Understanding what is JavaScript & Why to use JavaScript",
        "Understand how JavaScript works and it's fundamental concepts from scratch",
        "Learn new quick tips for coding faster in visual studio code"
      ],
      "course_content": {},
      "requirements": [
        "No coding experience required",
        "All you need just a computer (Windows, macOS, or Linux)",
        "You will learn everything you need to know"
      ],
      "description": "JavaScript is one of the most popular programming languages in the world, powering many of the interactive features you see on websites and web applications. Whether you're a complete beginner or an experienced developer looking to brush up on your skills, the \"JavaScript Basics\" course on Udemy is the perfect place to start.\nThis fast-paced, concise course will take you from zero to hero in just 86 minutes, covering all the essential concepts you need to know to start writing JavaScript code. You'll learn about data types, variables, functions, control flow, and more, as you build your own programs from scratch.\nOne of the unique features of this course is its focus on real-world examples and practical applications. You'll work on hands-on exercises that simulate real-world scenarios, such as building a simple calculator or a dynamic web page. This approach not only makes the learning experience more engaging, but also ensures that you develop the skills you need to start building your own projects.\nThe course is designed to be accessible to everyone, regardless of their prior programming experience. The instructor, a seasoned developer with years of experience in JavaScript, takes a step-by-step approach that makes it easy to follow along, even if you've never written a line of code before. The lessons are presented in a clear, concise manner, with plenty of examples and visual aids to reinforce the concepts.\nIn addition to the video lessons, the course also includes a variety of supplemental resources to help you reinforce your learning. You'll have access to quizzes and exercises that test your understanding of the material, as well as downloadable code examples that you can use as reference material as you work on your own projects.\nAt the end of the course, you'll have a solid foundation in JavaScript programming, and the skills and confidence to start building your own web applications. Whether you're interested in pursuing a career as a web developer or simply want to learn a valuable new skill, the \"JavaScript Basics in 86 Minutes\" course on Udemy is the perfect place to start. With its engaging, practical approach and expert instruction, this course is a must-have for anyone looking to master the fundamentals of JavaScript.",
      "target_audience": [
        "Anyone willing to learn JavaScript from Scratch",
        "JavaScript developer who wants a quick revision",
        "Front end developer"
      ]
    },
    {
      "title": "Beginner's Guide to HTML and HTML5",
      "url": "https://www.udemy.com/course/learn-html-in-1-hour/",
      "bio": "HTML and HTML5 for beginners",
      "objectives": [
        "Learn the basics of coding in HTML",
        "Receive 24/7 Support",
        "Create a solid foundation for future HTML development",
        "Learn the different elements and attributes of the tags used in HTML5",
        "Understand how to format content in HTML environments",
        "Receive invaluable resources from thousands of hours of development",
        "Be able to control styling (fonts, colors, and more)",
        "Be able to carry out basic tasks in HTML"
      ],
      "course_content": {},
      "requirements": [
        "Students will need Internet Access",
        "No coding experience is required",
        "No designing experience is required"
      ],
      "description": "********************* 5 Star Rating *********************\n\"As a beginner with zero to little exposure to HTML, this course really instilled confidence in my ability to interact with the world of HTML5. After each lecture, I found myself gasping in delight at what I had the capability of doing to a webpage thanks to this course.\"\n~ Darcie N.\nGuaranteed responses to your questions with 24 hours!\nWatch and learn while Stephen Fullington reviews the structure of a typical HTML document, and shows how to section pages and format your content with HTML. Learn how to create links and lists, and find out how HTML works with CSS to create rich, engaging user experiences.\nStudents will\n\nReceive invaluable resources I have compiled from thousands of hours of development.\nComplete quizzes throughout the course to help them retain information on HTML.\nReceive support responses within 24 hours, 7 days a week!",
      "target_audience": [
        "Aspiring web developers",
        "Anyone with a strong desire to learn HTML",
        "This course is a great for beginners"
      ]
    },
    {
      "title": "AngularJS Essentials - From Beginner to Advanced Developer",
      "url": "https://www.udemy.com/course/angularjs-essentials-from-beginner-to-advanced-developer/",
      "bio": "AngularJS for Absolute Beginners: No Coding Experience Required Your Step-by-Step Guide to Mastering AngularJS",
      "objectives": [
        "Core Concepts of AngularJS: Understand directives, expressions, modules, and controllers.",
        "Understand the MVC architecture and how it applies to AngularJS.",
        "Learn to set up a new AngularJS project and configure it for development.",
        "Advanced Techniques: Master custom directives, filters, and performance optimization."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Angular JS",
          "Understanding command lines",
          "Controllers in Angular JS",
          "Scope and its relation with Controller View",
          "Understanding Scope Inheritance",
          "Data Binding",
          "Angular JS ng-show and ng-hide",
          "NG-Repeat",
          "Angular JS Filters",
          "NG-Include",
          "Angular JS Form & ng-model",
          "Dependency",
          "Class Project 1",
          "Class Project 2"
        ]
      },
      "requirements": [
        "No experience required"
      ],
      "description": "Are you ready to unlock the power of AngularJS and build dynamic, interactive web applications?\nThis comprehensive course is your ultimate guide to mastering AngularJS, from the fundamentals to advanced techniques. Whether you're a complete beginner or an experienced developer looking to enhance your skills, this course has everything you need to succeed.\nWhat You'll Learn:\nCore Concepts:\nUnderstand the fundamental principles of AngularJS, including modules, controllers, directives, and services.\nLearn how to set up a new AngularJS project and structure your code effectively.\nExplore the data binding and dependency injection mechanisms.\nAdvanced Topics:\nDive deep into advanced topics like custom directives, filters, and routing.\nMaster the art of testing AngularJS applications with unit and end-to-end tests.\nLearn how to optimize your AngularJS applications for performance and scalability.\nReal-World Applications:\nBuild real-world AngularJS applications, from simple to complex.\nLearn how to integrate AngularJS with other technologies like RESTful APIs and Firebase.\nDiscover best practices for developing maintainable and scalable AngularJS applications.\nWhy Choose This Course?\nClear and Concise Explanations: Our expert instructors break down complex concepts into easy-to-understand explanations.\nHands-On Projects: Learn by doing with practical exercises and real-world projects.\nStep-by-Step Guidance: Follow along with detailed instructions and code examples.\nCertificate of Completion: Showcase your new skills with a verified certificate.\nEnroll today and start your journey to becoming an AngularJS expert!",
      "target_audience": [
        "Aspiring web developers eager to learn AngularJS from scratch."
      ]
    },
    {
      "title": "(NEW) Coding for non-programmers in Julia",
      "url": "https://www.udemy.com/course/coding-for-non-programmers-in-julia/",
      "bio": "Learn practical programming quickly",
      "objectives": [
        "You can now code, for real.",
        "You can write programs that looks interesting to your friends. Street cred!",
        "Did you learned website design or mobile app development, but feel like you still lack \"something\"? Here, you will learn that \"something\", and now you can combine those skills to build the core service, and complete your shiny product."
      ],
      "course_content": {
        "Questions you may have for me (Optional)": [
          "Q: Is this course right for me?",
          "Q: Why Julia?",
          "Q: Early access course? What does that means?",
          "Mutual understanding check"
        ],
        "Development environment": [
          "Section introduction",
          "JuliaBox basic",
          "JuliaBox basic",
          "JuliaBox notebook basic",
          "JuliaBox notebook basic",
          "Advanced interface concepts",
          "Advanced interface concepts"
        ],
        "A better calculator": [
          "Elementary arithmetic operations, and BODMAS (PEMDAS)",
          "Elementary arithmetic operations, and BODMAS (PEMDAS)",
          "Calling mathematical functions",
          "Calling mathematical functions",
          "Storing variables",
          "Storing variables",
          "Allowed variable names",
          "Allowed variable names",
          "More operators",
          "More operators",
          "Excel in Julia without spreadsheet",
          "Excel in Julia without spreadsheet",
          "Write your own functions",
          "Write your own functions"
        ],
        "New unorganised content": [
          "Work in Progress - Updates"
        ]
      },
      "requirements": [
        "Bring your enthusiasm and an open mind to try things with us.",
        "Your basic computer usage skill and reasoning skill. No other pre-requisite.",
        "Your computer, with always-on internet access for using JuliaBox.",
        "That's all folks! Leave your purse at home. We use JuliaBox to code online, which is free to use with a Google account."
      ],
      "description": "This Julia beginner programming course is specifically designed for beginners to programming. In this course, you will not only learn a powerful programming language taught in MIT and Stanford, but also internalize practical programming techniques and habits. This will help you become a good programmer and problem-solver, aiding you to learn other languages. By the end of this course, you will have the basics of Julia and be capable and confident to continue learning programming on your own.\n\nWe will be using the Julia programming language to achieve our aim. Julia is a new language developed in MIT, and taught in major universities such as Stanford, Cornell University, Purdue University, and so on. It gathers the best practices from interpreted languages like Python, Ruby, Javascript, and the best from compiled languages like C/C++ and FORTRAN. It is easy to learn, yet very practical to do real development work. Some examples of what I have done on Julia include data processing, quick scripting of repetitive office tasks like mail merge, creating high-performance time-critical components like financial and cryptographic algorithms, writing interactive web applications, and the list goes on.\nEverything in this course, from the way we present concepts in the lectures to make them easy to absorb; and the tricky questions in the quizzes that reveal your weakness in the content so we can work on it further; to the intellectual exchange we foster in the lecture discussions; everything is exquisitely crafted to maximise your learning potential with us.\nThere is not a need to take my word for it. There is a 30-day money back guarantee! Let the content do the talking for us.\nSee you in the course!\n\n\nNOTE: This is an Early Access Course\nGreat discount for new course\nGet instant access and start learning from existing content. Our course fee is priced on the current content, and so will rise accordingly when more is added. This means that you get the full course at a great discounted price by signing up now!\nGet involved with the course as it develops\nIs there any part of the course that you would like to change? Is the video too fast? Do I talk too slowly? Content too dry? Too simple? Too dense? Feedback to us, tell us the change you want and the reason to do so. We listen to what you would like to tell us, and will shape the course according to all feedback we received. Come, let's build this course together.",
      "target_audience": [
        "You are new to programming - We are careful in our choice of words to ensure that you understand us.",
        "You tried toy programming and want to take it further - We keep all the fun, and make it practical.",
        "You struggle with other programming course - We touch on the foundational techniques and habits of programming. You can go places easily after being with us.",
        "You are interested in the Julia programming language - We are the first Udemy course to teach in Julia!",
        "You want to be part of something big and awesome - Julia is the future of programming, and you are part of it now."
      ]
    },
    {
      "title": "Python for absolute beginners 2025",
      "url": "https://www.udemy.com/course/python-3-for-beginners-2020/",
      "bio": "Learn Python Programming from basics to advanced level with demo",
      "objectives": [
        "Learn how to download and install Python and PyCharm IDE",
        "Learn Python 3 concepts with DEMO.",
        "Learn Python features, like Indentation, comments , variables, Data types, User input, Conditional Statements, Loops, Functions, Scope and Arrays",
        "Learn Object Oriented Programming concepts like Classes or Objects, Inheritance",
        "Learn advanced features like Iterators, Modules, Dates, JSON, Regular Expression, Exception Handling, String formatting and File Handling"
      ],
      "course_content": {
        "Python Introduction and Set up": [
          "Introduction",
          "Python Installation, Execute first program",
          "PyCharm Installation, Execute first program"
        ],
        "Python Indentation, Comments and Variables": [
          "Indentation and Comments",
          "Variables"
        ],
        "Python Data types": [
          "Data Types Introduction",
          "Numbers",
          "Casting",
          "Strings",
          "Booleans",
          "Operators",
          "Collections",
          "Lists",
          "Tuples",
          "Sets",
          "Dictionaries"
        ],
        "Python User input, Conditional Statements, Loops": [
          "User Input",
          "If…Else",
          "While Loops",
          "For Loops",
          "LoopsExample"
        ],
        "Python Functions": [
          "Functions",
          "Lambda function"
        ],
        "Python Scope, Arrays": [
          "Scope - local/global",
          "Arrays"
        ],
        "Python Object Oriented Programming": [
          "Classes/Objects",
          "Inheritance"
        ],
        "Python Iterators, Modules": [
          "Iterators",
          "Modules"
        ],
        "Python Dates, JSON, Regular Expression": [
          "Dates",
          "JSON",
          "RegularExpression"
        ],
        "Python Exception Handling, String formatting": [
          "Exception Handling",
          "String Formatting"
        ]
      },
      "requirements": [
        "No prior programming experience.",
        "Access to a computer with an internet connection."
      ],
      "description": "Learn Python programming with hands on experience.\nWe will walk you step-by-step instructions on how to download and install Python, various fundamental concepts of Python programming. You will develop new skills and improve your understanding of all the concepts.\nWe will cover the following topics:\nPython Installation, execute first program\nPyCharm Installation, execute first program\nIndentation and Comments\nVariables\nData Types\nNumbers\nCasting\nStrings\nBooleans\nOperators\nCollections\nLists\nTuples\nSets\nDictionaries\nUser Input\nIf…Else\nWhile Loops\nFor Loops\nFunctions\nLambda function\nScope - local/global\nArrays\nClasses/Objects\nInheritance\nIterators\nModules\nDates\nJSON\nRegEx\nTry…Except\nString Formatting\nFile Handling\nAnd many more..\nYou will get lifetime access to over 35 lectures and more to come.\nThis course comes with a 30 day money back guarantee! If you are not satisfied in any way, you'll get your money back.\nThis course is designed to give you the Python skills you need to get a job as a software engineer or a developer.  By the end of the course, you will understand Python so well and be able to build your own Python applications.\n\nAfter going through this course, several students have got enough knowledge to get their first job or promote to the next level in their career.\n\n\nEach concept is explained with practical examples to better understand the theory. This is the course to advance your career and gain the knowledge required for absolute beginners. So, what are you waiting for? Go ahead and enroll..\nHappy learning!!",
      "target_audience": [
        "Complete beginners who have never programmed before",
        "Programmers switching from other languages to Python"
      ]
    },
    {
      "title": "From Zero to Async: A Complete Guide to AsyncIO in Python",
      "url": "https://www.udemy.com/course/from-zero-to-async-a-complete-guide-to-asyncio-in-python/",
      "bio": "Master AsyncIO: Harness the Power of Asynchronous Programming in Python",
      "objectives": [
        "Core concepts of asynchronous programming and how they apply in Python.",
        "The mechanics of the event loop in Python's AsyncIO library.",
        "How to write, run, and manage asynchronous code using the async/await syntax.",
        "Techniques for efficiently managing tasks and utilizing concurrency with AsyncIO.",
        "Building and handling asynchronous network applications, including clients and servers.",
        "Strategies for integrating asynchronous database operations into Python applications.",
        "Mixing synchronous and asynchronous code effectively and safely.",
        "Debugging and optimizing asynchronous Python applications for better performance.",
        "Real-world applications of AsyncIO, including web scraping and chat applications.",
        "Best practices for using AsyncIO in production environments."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Python programming language and syntax.",
        "Familiarity with core programming concepts such as functions and loops.",
        "Experience with using and managing Python environments and packages.",
        "Access to a computer with Python installed (Python 3.6 or later recommended).",
        "An editor or IDE for writing and executing Python code.",
        "A willingness to learn about concurrent programming patterns and practices."
      ],
      "description": "Unlock the Full Potential of Asynchronous Programming in Python!\nWelcome to \"Mastering AsyncIO in Python,\" the comprehensive guide to mastering asynchronous programming to elevate your Python projects. Asynchronous programming is a powerful paradigm that allows your applications to be more efficient, scalable, and responsive. This course is designed to take you from the basics of AsyncIO, through to advanced techniques and real-world applications, providing you with the knowledge and skills to leverage the full potential of Python's asynchronous programming capabilities.\n\n\nWhat You Will Learn:\nFoundational Concepts: Understand the principles of asynchronous programming and how it compares to traditional synchronous and multithreaded approaches.\nEvent Loop Mastery: Dive deep into the event loop, the core of AsyncIO, learning how to write, run, and manage asynchronous code efficiently.\nAsync/Await Syntax: Get hands-on experience with the async/await syntax, the modern way to write asynchronous code in Python.\nConcurrency Techniques: Explore how to manage multiple tasks and operations concurrently, optimizing your applications for performance and speed.\nReal-World Applications: Apply your knowledge to build practical, real-world applications, including networked programs, database integrations, and web scraping tools.\nDebugging and Optimization: Learn how to debug and profile asynchronous Python applications, identifying bottlenecks and optimizing performance.\nProduction Best Practices: Discover best practices for writing maintainable and scalable asynchronous code that's ready for production.\n\n\nWho Is This Course For?\nPython Developers: Programmers with a basic understanding of Python looking to explore the advanced capabilities of asynchronous programming.\nSoftware Engineers: Professionals aiming to build high-performance and scalable applications with Python.\nData Scientists: Individuals interested in leveraging concurrency for efficient data processing and analysis.\nBackend Developers: Engineers focusing on server-side development who want to master AsyncIO for web applications.\nTech Enthusiasts: Anyone curious about modern programming techniques and looking to stay ahead in the fast-evolving world of Python programming.\n\n\nCourse Prerequisites:\nBasic knowledge of Python programming.\nUnderstanding of core programming concepts such as loops and functions.\nAn environment for writing and executing Python code.\n\n\nWhy Choose This Course?\n\"Mastering AsyncIO in Python\" is meticulously crafted with a blend of theoretical knowledge, practical exercises, and real-world examples, ensuring you gain a holistic understanding of asynchronous programming. By the end of this course, you'll be proficient in writing efficient, non-blocking Python code that can handle multiple I/O-bound tasks concurrently, making your applications faster and more responsive.\n\n\nEmbark on this journey to become an AsyncIO expert and transform how you write Python applications. Enroll now and unlock the asynchronous power of Python!",
      "target_audience": [
        "Python developers seeking to improve the performance of their applications.",
        "Programmers interested in asynchronous programming and concurrency.",
        "Software engineers aiming to build scalable network applications.",
        "Data scientists looking to optimize data processing tasks.",
        "Backend developers wanting to master AsyncIO for web development.",
        "Tech enthusiasts curious about the latest in Python programming techniques."
      ]
    },
    {
      "title": "Java Course for Beginners with Practical Projects & ChatGPT",
      "url": "https://www.udemy.com/course/java-course-for-beginners-with-practical-project-examples/",
      "bio": "Obtaining Java skills with Interactive Learning, Java Certification, ChatGPT Assistance and Coding Challenge Exercises",
      "objectives": [
        "Learn the Java programming skills practically that are needed to apply for Java developer job positions",
        "Free source code book and real project examples can learn much faster and easier",
        "You will learn important Java programming skills that is necessary to start your career in development",
        "Learn Java best practices from a professional developer & we cover all intermediate and advanced topics in this course",
        "Java Projects with Source Code and Project report / file for download"
      ],
      "course_content": {
        "Free Bonus Course Added": [
          "Free Bonus Course: How ChatGPT help in Java Programming"
        ],
        "Java Beginners": [
          "Introduction",
          "Installing Java and Eclipse",
          "How to Create Your First Java Program",
          "Java Variables, Constants, Data types and Keywords",
          "PRACTICE: Variables, Constants, Data types and Keywords",
          "Interactive Programming in Java",
          "Exercises: Java User Interactive Programming",
          "Operators in Java",
          "Exercises: Operators in Java",
          "Selection Statements in Java If Else",
          "Exercises Java Selection Statement If Else Part 1",
          "Exercises: Java Selection Statement If Else Part 2",
          "Selection statements switch case in java",
          "Exercises: Java Selection Statements Switch Case",
          "Introduction to loops in Java",
          "Loops exercise in java",
          "Java While loop and Do While loop",
          "Nested for loop java",
          "Nested while loop in Java",
          "Star Pattern Programs in Java",
          "Number Pattern Questions in Java",
          "Alphabet Pattern Questions in Java",
          "Arrays in Java",
          "Exception Handling in JAVA",
          "File Handling in JAVA",
          "Conclusion Java Beginners"
        ],
        "JAVA Intermediate": [
          "how to create Classes and Objects in Java",
          "OOPs concepts in Java with Examples",
          "Java Class Creation",
          "Encapsulation in java",
          "Inheritance in Java",
          "Types of inheritance in java",
          "Overriding in java",
          "Method Overloading in Java",
          "Polymorphism in java",
          "Project on HDFC Bank in Java",
          "Conclusion"
        ],
        "Java Projects with Source Code and Project report/file for download": [
          "Java Project Moodometer",
          "Java Project Moodometer Part 2",
          "Java Project Suggest Programs"
        ],
        "Java Advance": [
          "How to Handle Exceptions in Java",
          "Journey of Code Exception Handling",
          "Understanding try, catch, finally in Java",
          "Introduction to Collection Framework and Array List",
          "Set interface and types of set interface in Java",
          "Multiple Implementations of Set Interface in Java",
          "Queue Interface in java",
          "Queue Data Structure and Implementation",
          "Map Interface and its Implementation in Java",
          "Iterators Concept in Java",
          "Algorithms In Java Shuffle, Sort and Search",
          "Multithreading and Implementation in Java",
          "life cycle of a thread and thread methods in java",
          "Stopping and Blocking a Thread in Java",
          "File Handling and Concept of Streams in Java",
          "Operations on files and how the file handlings is done",
          "What is assertion, purpose and benefits",
          "Conclusion"
        ],
        "Java Project with Source Code and Project File": [
          "Java Project Banking Application Part 1",
          "Java Project Banking Application Part 2",
          "Java Project Banking Application Part 3",
          "Java Project Banking Application Part 4",
          "Java Project Banking Application Part 5"
        ],
        "Free Bonus Course: What is OpenAI & ChatGPT ?": [
          "Introduction of ChatGPT",
          "An introduction to ChatGPT",
          "Applications of ChatGPT",
          "ChatGPT feature to elaborate or shorten the text",
          "ChatGPT in healthcare, logistics, banking and Education",
          "Exploring features practically from programmers perspective in ChatGPT",
          "Interview questions and enablement with ChatGPT"
        ],
        "How to improve your Java coding skills using ChatGPT": [
          "Introduction",
          "Understanding Installation fundamentals concepts of Java using ChatGPT",
          "Understanding advanced concepts of Java using ChatGPT",
          "Project Java - Currency converter project using Java Software and ChatGPT",
          "Project Java -Building games using Java and Mobile Coding Using Java and ChatGPT",
          "Mobile Application in Java Using ChatGPT and Conclusion",
          "Difference between ChatGPT 3.5 and 4.0"
        ],
        "Java Project Online Exam Management Software with Source Code and Project File": [
          "Java Project Online Exam Management Software Introduction",
          "Java Project Online Exam Management Software Part 1",
          "Java Project Online Exam Management Software Part 2",
          "Java Project Online Exam Management Software Part 3"
        ]
      },
      "requirements": [
        "You need NOT have java coding experience to start this course***** Even non Programming candidates can follow this course comfortably",
        "You will receive lifetime instructor support to address all your queries. Feel free to post your questions on the discussion board, and we’ll respond with an answer within 12 hours.",
        "Whether you are a beginner or an experienced Java programmer, ChatGPT can assist in many areas of your learning and coding journey."
      ],
      "description": "This course is designed for delegates who have covered the basic and intermediate levels of Java programming. In this Java video course, you can learn from scratch with practical examples, assignments with every lecture, a free Java code book, and a Java project and become a Java programmer. Gain the best knowledge of Java programming to start a rewarding career. 30-day guarantee, Lifetime access, and certificate at completion. This course will provide in-depth knowledge of the collections framework, multithreading concepts of Java, Managing Input/output Files in Java, and Managing Errors, Exceptions, Assertions, and design by contract.\nJava Projects with Source Code and Project report/file for download\n1. Moodometter  & Suggest Program with Source code and Project Report for download\n2. Online Banking System with Source code and Project Report for download\n3. Java Project Online Exam Management Software with Source code and Project Report for download\nIn this project, there are given 10 questions to play. Users can bookmark any question for reconsideration while going to the result. We are using the Java array to store the questions, options, and answers, not the database. You can use a collection framework or database in place of an array.\n\n\nFree Bonus Couse:\n\"Exciting News! As a token of our appreciation for your dedication to learning, we're thrilled to offer you a FREE bonus course. This additional course is our gift to you, enriching your educational journey and helping you gain even more knowledge and skills.\nOpenAI & ChatGPT - Everything you need to know\nChatGPT introduction\nApplications of Chat GPT\nExploring features practically from programmers perspective\nExploring features practically from an HR perspective\nChatGPT feature to elaborate or shorten the text\nChatGPT in healthcare, logistics, banking, and Education\nHow to improve your Java coding skills using ChatGPT\nUnderstanding Installation fundamentals concepts of Java using ChatGPT\nUnderstanding advanced concepts of Java using ChatGPT\nProject Java - Currency converter project using Java Software with ChatGPT\nProject Java -Building games using Java and Mobile Coding Using Java and ChatGPT\nMobile Application in Java programming with ChatGPT and Conclusion\nJava Programming Outline:\nJava Beginners:\n3. Installing Java and Eclipse\n4. How to Create Your First Java Program\n5. Java Variables, Constants, Data types, and Keywords\n6. PRACTICE Variables, Constants, Data types, and Keywords\n7. Interactive Programming in Java\n8. Exercises Java user interactive programming\n9. Operators in Java\n10. Exercises Operators in Java\n11. Selection Statements in Java If Else\n12. Exercises Java Selection Statement If Else Part 1\n13. Exercises Java Selection Statement If Else Part 2\n14. Selection statements switch case in Java\n15. Exercises Java Selection Statements Switch Case\n16. Introduction to loops in Java\n17. loop exercise in Java\n18. Java While loop and Do While loop\n19. Nested for loop java\n20 Nested while loop in Java\n21. Star Pattern Programs in Java\n22. Number Pattern Questions in Java\n23. Alphabet Pattern Questions in Java\n24. Arrays in Java\n25. Conclusion Java Beginners\nJava Intermediate:\n1. How to create Classes and Objects in Java\n2. OOPs concepts in Java with Examples\n3. Java Class Creation\n4. Encapsulation in Java\n5. Inheritance in Java\n6. Types of inheritance in Java\n7. Overriding in Java\n8. Method Overloading in Java\n9. Polymorphism in Java\n10. Project on HDFC Bank application in Java\n11. Conclusion Java Intermediate\nJava Advance:\nException handling\n1. Exception Handling Journey of Code in Java\n2. How to Handle Exceptions in Java\n3. Understanding Try Catch Finally in Java\nCollection Framework\n4. introduction to collection framework and array list in Java\nUnderstanding collection framework, Array list code example\nSet Interface and Types of Set Interface\nMultiple implementations of Sets\nQueueInterface\nMultiple implementations of Queues\nMap Interface and multiple implementations of Map\nIterators and Implementation of Iterators\nThe algorithm in Java Shuffle, Search, Sort\nMultithreading\nWhat is multithreading and multithreading implementation in Java?\nLifecycle of a thread and thread methods\nStopping and blocking a thread\nFile Handling\nIntroduction to File handling and concept of streams\nStream classes, Operation on Files, and How the file handling Is Done\nAssertions\nWhat are assertions, purpose, and benefits?\nWriting assertion code\nConclusion\nProject - beginners, intermediate\nProject - advanced",
      "target_audience": [
        "If you want to take one course that covers everything you need to learn about Java programming"
      ]
    },
    {
      "title": "UiPath - Hands on Enterprise Robotic Process Automation",
      "url": "https://www.udemy.com/course/hands-on-rpa-with-uipath/",
      "bio": "How to learn Enterprise RPA using Uipath",
      "objectives": [
        "Build real world bots utilizing RPA and UiPath best practices.",
        "Master the UiPath activities that are most commonly used in Enterprise solutions.",
        "Confidently utilize the Uipath Framework for a RPA Architect best practice.",
        "Analyze and identify processes that are best fit for RPA.",
        "Master the RPA life cycle and steps necessary for Enterprise RPA project."
      ],
      "course_content": {},
      "requirements": [
        "A Windows computer with Internet connection"
      ],
      "description": "Robotic Process Automation is growing exponentially and there is no doubt about that. More and more companies are realizing the competitive advantages that Robotic Process Automation provides. But as the further the field of Robotic Process Automation advances, the more complex it become to build quality and robust Robotic Process Automation solutions and that's why I created this course.\nWhether you are an experienced developer in an object-oriented programming language, Blue Prism, Automation Anywhere or just beginning your RPA programming career, this course was designed a professional software developer to share first-hand experiences to guide you through your career as a RPA developer.\nIn this Uipath course, I walk you step-by-step the basics of UiPath, the essentials of Robotic Process Automation life cycle, and how to build scalable bots using Robotic Process Automation best practices  — useful skills for anyone in the Robotic Process Automation space or anyone who wants to contribute to serious UiPath development.\nWith every tutorial you will develop new skills and improve your understanding of this challenging yet lucrative field of software development.\nThis course is structured the following way:\nIn Section 2 we'll start by explaining what is RPA, the benefits of RPA as a developer and the future of RPA.\nIn Section 3 you will learn the Uipath Basics and I will take you through the most common activities that you will encounter on an RPA project\nIn Section 4 we will go a bit further and look at Excel and datatables activities.\nIn Section 5 we will setup outlook and then see how Email automation works in UiPath.\nIn section 6 we will discuss the Robotic Process Automation Life cycle and how to decide if a process is a good fit for automation. We will then look at the roles and responsibilities for key members within an RPA project.\nAnd finally in Section 7\nWe will discuss automation best practices and discuss in detail the Uipath ReFramework Template. I will also share some industry tips and lessons learned.\nYou will learn how to provision Uipath Robot with Orchestrator\nWe will put all of this knowledge together and create an end to end Enterprise Bot. We will take this step by step from the initial Process selection phase through Hyper care.\nWhy Hands on RPA with UiPath?\nHere are five reasons we think Uipath - Hands on Enterprise Robotic Process Automation really is different, and stands out from the crowd of other training programs out there:\nROBUST STRUCTURE\nThe first and most important thing we focused on is giving the course a robust structure. Robotic Process Automation is very broad and complex and to navigate this maze you need a clear and global vision of it.\nThat's why we grouped the tutorials into sections, representing the basic automation activities, the advanced automation activities, Robotic Process Automation and automation best practices and the and end to end step by step final project. We found that this is the best structure for mastering Robotic Process Automation with Uipath.\n2. Theory and application\nSo many courses and books just give you the basic of RPA but no real hands on actives and they forget to explain, perhaps, the most important part: why you are doing what you are doing. And that's how this course is so different. We focus on developing an intuitive *feel* for the concepts behind building Robotic Process Automation bots with Uipath.\n3. EXCITING PROJECTS\nAre you tired of courses based on over-used, outdated data sets? Yes? Well then you're in for a treat.\nInside this class we will work on Real-World solutions, to solve Real-World business problems. In this course you will see what it is like to work on a real world enterprise bot. Documentation and templates will also be provided\n4. HANDS-ON CODING\nIn Hands on RPA with UiPath we code together with you. In addition, we will purposefully structure the code in such a way so that you can download it and apply it in your own projects.\n\n\n5. IN-COURSE SUPPORT\nHave you ever taken a course or read a book where you have questions but cannot reach the author?\nWell, this course is different. We are fully committed to making this the most disruptive and powerful Uipath - Hands on Enterprise Robotic Process Automation course on the planet. With that comes a responsibility to constantly be there when you need our help.\nIn fact, since we physically also need to eat and sleep we have put together a team of professional Robotic Process Automation developers to help us out. Whenever you ask a question you will get a response from us within 48 hours maximum.\nNo matter how complex your query, we will be there. The bottom line is we want you to succeed.",
      "target_audience": [
        "Beginner to Intermediate UiPath and RPA students. Students with some experience in other RPA tools such as Blue Prism and Automation Anywhere. Anyone not satisfied with their job and who want to become a software developer. Anyone who wants to create added value to their business by using powerful RPA tools. Any interested in increasing productivity by automating day to day tasks"
      ]
    },
    {
      "title": "C# Mastering Course For Professionals",
      "url": "https://www.udemy.com/course/c-sharp-mastering-course-for-professionals/",
      "bio": "Master your C# programming skills, learn about delegates, anonymous methods, dynamic types, asynchronous and more",
      "objectives": [
        "How to use Generic types in C#",
        "The difference between named and anonymous methods",
        "Collection types like stack, queue and dictionary",
        "Working with delegates and how to use them"
      ],
      "course_content": {},
      "requirements": [
        "A personal computer, and any OS: macOS, Windows or Linux",
        "Familiar with the fundamentals of C# and object oriented programming",
        "Good problem-solving skills will help you understand and apply the concepts of OOP and error handling effectively"
      ],
      "description": "This advanced C# programming course is designed for developers who have a solid understanding of the basics and are looking to deepen their knowledge and skills. The course covers a range of advanced topics that are essential for building robust, efficient, and scalable applications.\nCourse Topics:\n1. Delegates:\nUnderstanding delegates and their use cases\nCreating and using delegates\nMulticast delegates\n2. Anonymous Methods:\nIntroduction to anonymous methods\nUsing anonymous methods with delegates\nBenefits and limitations of anonymous methods\n3. Dynamic Type:\nOverview of the dynamic type in C#\nWorking with dynamic objects\nAnd more...\nCourse Objectives:\nBy the end of this course, learners will be able to:\nUtilize advanced C# features to write efficient and maintainable code\nImplement asynchronous and synchronous methods effectively\nWork with various data structures such as stacks, queues, and dictionaries\nPerform file and directory operations with ease\nHandle dates and times in C# applications\nThis course is ideal for developers who have a basic understanding of C# and want to advance their skills to the next level. Whether you’re working on desktop applications, web development, or any other C# projects, this course will provide you with the knowledge and tools you need to succeed.\n\n\nSo if you want to learn about the advanced topics in C# programming language and use them in your programs and applications, don't hesitate and join the course.",
      "target_audience": [
        "Aspiring Developers: Individuals who have a intermediate understanding of C# and want to advance their skills to the next level",
        "Junior Developers: Those who are already working with C# but want to deepen their knowledge of delegates, collections and asynchronous calling",
        "Students: Computer science or software engineering students looking to strengthen their understanding of advanced C# concepts.",
        "Professionals: Developers from other programming languages who want to transition to C# and need a solid foundation in intermediate concepts."
      ]
    },
    {
      "title": "Amazing JavaScript Code Examples From Scratch DOM coding",
      "url": "https://www.udemy.com/course/amazing-javascript-code-examples-from-scratch-dom-coding/",
      "bio": "Learn how to use the JavaScript DOM to create dynamic web content and interactive web applications",
      "objectives": [
        "create javascript",
        "add JavaScript to their websites",
        "better JavaScript code",
        "DOM interaction",
        "how to use the Javascript DOM",
        "how to use the Javascript DOM",
        "Learn the basics of JavaScript",
        "Document Object Model",
        "Event handlers and event listeners"
      ],
      "course_content": {},
      "requirements": [
        "computer",
        "internet access",
        "basic understanding of HTML and CSS"
      ],
      "description": "Learn Step by Step from real world JavaScript projects.\n\nWe will be adding more projects on a regular basis, this course is designed to have lifetime access to regular JavaScript projects.\nLearn JavaScript with our Step by Step training, we show you how to build projects from Scratch. Learn at your own pace resources are included, source code and everything you need to practice and learn JavaScript. We show you useful examples of JavaScript Code snippets and explain the development process.\nJavaScript is the foundation for so much online, including all the new JS libraries. Knowing how to apply JavaScript can help to learn further JS code.\n\nProject #1 - Limit text in textarea, count characters and show warning messages,.\nProject #2 - Useful code snippets, detect browser, view history and more. Use DOM values within JavaScript for amazing dynamic applications.\nProject #3 - Scrolling text area stop scroll on hover, use the DOM to detect events.\n\nKnowing how to apply JavaScript is an excellent skill to have. JavaScript is everywhere and by the end of this course you will have what you need to use it on your own webpages. Interact with your web users, dynamic web content using JavaScript.\n\nWe walk you through step by step with detailed explanations of code and more. We add and update a webpage from scratch adding JavaScript to bring it to life.\nno wasted time watching someone type\npractice with coding exercises\nquick lessons get right to the point\nfully covered topics with real world examples\nsource files downloadable to work along\nchallenges and lessons and code samples\ncode snippets\nLinks to top resources to save time\n30 day money back guarantee\nnew course material added regularly\ntrusted name in education since 2002\nfull HD easy to read source coding\nquick response support to students\nregular discussions\nWe teach you the latest techniques and tools to use in order to create amazing web content.\nEverything you need to know is included in this course.\nLearn at your own pace, lifetime access to this course.\nWe show you how to write JavaScript code, easy to learn. Our tutorials are easy to follow and effective in teaching JavaScript.",
      "target_audience": [
        "anyone who wants to learn more about web development",
        "web designers",
        "web developers",
        "web coders",
        "desire to learn JavaScript",
        "Students who want to learn Javascript",
        "Web developers looking to improve their skill set"
      ]
    },
    {
      "title": "Complete Java Tutorial Step by Step - become a programmer",
      "url": "https://www.udemy.com/course/complete-java-tutorial-step-by-step/",
      "bio": "Learn Java to become Industry ready programmer. Acquire skills in Java to face job interviews, develop Android apps.",
      "objectives": [
        "Complete Java programming from the basic to the advance level.",
        "Input Output, Basic control structures - if-else, loops, switch-case",
        "Methods, Strings, Arrays, ArrayList",
        "Reading and Writing files",
        "Classes and Objects",
        "Exception Handling"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisite, a computer/laptop is needed only."
      ],
      "description": "This course will help you to learn Java from grounds up, starting from the basic up to advance level, step-by-step. Not only video tutorials but the course contains lots of coding exercises that you will do to test your acquired knowledge practically side by side of watching video tutorials.\nThis course will help you to prepare for Job Interviews on Core Java language, also you will gain confidence in doing programs using Java.\nEach and every section of the course contains coding exercises that students will need to do practically while following the course lectures. These coding exercises are developed according to the corresponding section topic.\nAlso, there are quizzes in each section to test the acquired knowledge of the students.\nStudents will get all the required information to download, install and configure Java in their system, be it Mac or Windows.\nShould they need any further information they can always use the Q/A forum.\nAt the beginning, students will learn the basics of Java programming, including control structures, methods, classes and objects, Java String and all other fundamental Java classes including use of Arrays and Lists. Then the course will move to the advance sections which includes Inheritance, dynamic polymorphism , exception handling, Generics.",
      "target_audience": [
        "Anyone who want to build a career in programming, having Java in their curriculum in High School/ College"
      ]
    },
    {
      "title": "Learning Path: Spring: Secure Your Apps with Spring Security",
      "url": "https://www.udemy.com/course/learning-path-spring-secure-your-apps-with-spring-security/",
      "bio": "Learn Spring Security architecture and design to secure your Java applications",
      "objectives": [
        "Understand the Spring Framework architecture and its components",
        "Explore the spring MVC application using java configuration",
        "Learn to implement Spring Security in the sample application",
        "Get familiar with filter chains and core security filters",
        "Understand what is HTTP response headers security and session management",
        "Learn to secure object implementations and expression based access control",
        "Upgrade built applications from an XML configuration to a Java configuration",
        "Learn to integrate your application with Spring Security and the embedded LDAP server",
        "Learn to integrate applications with SAML"
      ],
      "course_content": {
        "Secure Your Spring-Based Applications": [
          "The Course Overview",
          "What Is Spring Security and Advantage?",
          "Introducing the Latest Spring Security Version",
          "Getting Spring Security and Core Modules",
          "Core Components/building blocks of Spring Security",
          "Authentication Basics",
          "Authentication in a Web Application",
          "Web Security Java Configuration",
          "HttpSecurity",
          "Access Control in Spring Security",
          "Form Login and CSRF",
          "Authorize Requests",
          "Basic and Digest Authentication",
          "Remember-Me Authentication",
          "Handling Logouts",
          "Authentication Manager, Provider Manager, and Authentication Providers",
          "Authentication Types",
          "The Security Filter Chain",
          "Core Security Filters",
          "Method Security",
          "Localization",
          "User Detail Service Implementation",
          "Password Encoding",
          "HTTPResponse Headers",
          "Session Management",
          "Authorization Architecture",
          "Expression Based Access Control",
          "Test Your Knowledge"
        ],
        "Spring Security LDAP Integration and SAML Extension": [
          "The Course Overview",
          "What is LDAP?",
          "Using LDAP with Spring Security",
          "Configuring an LDAP Server",
          "Integrate Application with Embedded LDAP Server",
          "Implementation Classes",
          "Active Directory Authentication",
          "Getting ApacheDS and Introduction",
          "Configuring ApacheDS",
          "Integrate Sample Application with ApacheDS",
          "Introduction to SAML",
          "Core Modules",
          "Configuring Spring Security with SAML",
          "Configure SAML – Keystore, Discovery, and Logouts",
          "SAML Profiles and Bindings",
          "Integrate, Deploy, and Test Single Sign-On/Logout",
          "Testing Method Security",
          "Setting Up MockMvc",
          "RequestPostProcessors",
          "RequestBuilders",
          "ResultMatchers",
          "Introduction to JaaS",
          "Spring Security JaaS Integration",
          "Introduction to OAuth2",
          "OAuth2 with Spring Security",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Basic understanding of XML",
        "Basic understanding of the Spring Framework.",
        "Prior experience of Spring Security is not required."
      ],
      "description": "Knowing that experienced hackers are itching to test your skills makes security one of the most difficult and high-pressure concerns of creating an application. That’s where Spring Security comes into the picture to simplify things for developers. Spring security can be used for authentication and authorization purposes in your application. It provides integration with LDAP as well. So, if you're a Java developer and want to gain skills to secure your applications from hackers, then go for this Learning Path.\nPackt’s Video Learning Path is a series of individual video products put together in a logical and stepwise manner such that each video builds on the skills learned in the video before it.\nThe highlights of this Learning Path are: ●        Explore Spring Security, its architecture and components ●        Integrate your application with Spring Security and the embedded LDAP server ●        Learn and integrate SAML methodologies into your applications\nThis Learning Path demonstrates how to smoothly integrate Spring Security into your application using the latest technologies and frameworks with the help of detailed examples. You'll first go through a security audit of an insecure application wherein you’ll learn to modify the sample application to resolve the issues found in the audit. Throughout working on this application, you’ll learn to integrate a variety of authentication mechanisms and demonstrate how to properly restrict access to your application. Next, you’ll learn how to utilize session management for administrative functions. As this Learning Path progresses, you’ll be introduced to LDAP and  learn to develop a Spring Security application integrated with Active Directory Lightweight DS and Apache DS. You’ll also be introduced to SAML and its integration with Spring Security. Finally, you’ll learn to integrate JAAS with Spring Security.\nBy the end of this Learning Path, you will be able to easily secure your applications by LDAP integration and SAML extension.\nMeet Your Expert: We have the best works of the following esteemed author to ensure that your learning journey is smooth:\nAnkit Mishra is a senior software engineer with extensive IT experience in mission-critical development projects and architecture designs. He has worked for giants such as Ericsson, Fidelity, and others. He has more than four years of experience in managing and delivering Spring MVC and Spring Security projects, Cloud deployment, and PaaS cloud administration. Currently, he is working on Spring micro services, Spring Security, cloud deployment, and tuning.",
      "target_audience": [
        "This Learning Path is for Java developers who want to gain skills to secure their applications from hackers."
      ]
    },
    {
      "title": "A Beginner's Guide to Numerical Methods in MATLAB",
      "url": "https://www.udemy.com/course/numerical-methods/",
      "bio": "Learn to select, apply and improve numerical methods.",
      "objectives": [
        "Understand about the ways computer store numbers",
        "Choose the right numerical methods to solve a problem",
        "Measure (and avoid) the errors inherent in numeric calculations",
        "See how algorithms are implemented in MATLAB"
      ],
      "course_content": {},
      "requirements": [
        "Basic math knowledge",
        "Fundamental knowledge of computing",
        "Some familiarity with MATLAB is required to follow the examples"
      ],
      "description": "This course is about Numerical Methods and covers some of the popular methods and approaches being used daily by mathematicians and everyone involved in computation.\nThis course will teach you about\nHow computers store numbers: what is floating point, what is precision and accuracy.\nThe kinds of errors you are likely to encounter when applying numerical methods, and how to minimize them.\nOne- and Two-Point iterative methods\nInterpolation and Curve Fitting\nNumerical Differentiation and Integration\nThis course consists of the following materials:\nVideo lectures, covering both the theory as well as demonstrating practical computer applications\nMATLAB files that you can download and run\nQuizzes related to the covered topics",
      "target_audience": [
        "This course is designed for anyone interested in the numerical methods and their applications for solving real-world problems",
        "Engineers, computer scientists, mathematicians and finance people will enjoy this course"
      ]
    },
    {
      "title": "C# 11 Unleashed: A Comprehensive Guide to New Features",
      "url": "https://www.udemy.com/course/csharp-11-unleashed-a-comprehensive-guide-to-new-features/",
      "bio": "Learn the latest stuff about your favorite programming language and framework",
      "objectives": [
        "explore all the new capabilities of the new version of the C# language",
        "transform some pieces of code from C# 10 to C# 11",
        "create easiliy lisible strings",
        "use generic attributes",
        "more pattern matching with the list pattern",
        "create required properties"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "A quick note about the setup of the project",
          "Code from demos"
        ],
        "C# 11 : Languages features": [
          "Introduction to raw string litterals",
          "Multilines and indented raw string litterals",
          "Interpolation in raw string litterals",
          "String interpolation enhancement: new line",
          "Compile-time UTF8 strings",
          "List patterns",
          "List pattern with strings",
          "New required keyword",
          "Auto default structs",
          "Usages of the new file access modifier",
          "Performance enhancement: improve method group (very technical)",
          "Extending nameof scope",
          "Generic attributes",
          "Static abstract methods and properties"
        ],
        ".NET 7 new methods": [
          "The new INumber<T> interface for number algorithms",
          "Be more precise when dealing with time and dates",
          "Easy way to manage .tar files",
          "Manage Unix file permissions directly from your .NET code",
          "Use a new attribute to enhance other developers experience"
        ]
      },
      "requirements": [
        "basics of C#"
      ],
      "description": "This \"What's New in C# 11\" course is designed to provide developers with a comprehensive understanding of the latest features and enhancements introduced in the C# programming language and the .NET framework. As technology evolves rapidly, staying up-to-date with the latest tools and functionalities is essential for any C# and .NET developer.\nIn this advanced-level course, participants will explore the cutting-edge features introduced in C# 11 and .NET 7, gaining practical insights into how to leverage these improvements effectively in real-world projects. The curriculum covers a range of topics, from new language syntax and powerful constructs to enhanced performance and productivity tools.\nC# 11 Language Enhancements:\nExplore pattern matching improvements and method groups\nDiscover the new capabilities added to manage strings\nLearn about the new way of declaring attributes\nEnhance your existing interfaces by adding static stuff to them\nUnderstand the usage of the new \"file\" scope\nGet your structs to the next level\n.NET 7 new APIs:\nBe more precise when dealing with time\nCreate generics methods to handle numbers\nEnhance your colleagues' experience by decorating stings\nDiscover the new APIs for Unix-based systems\nBy the end of this course, participants will be equipped with the skills and knowledge to take full advantage of the latest features in C# 11 and .NET 7, allowing them to build more robust, performant, and cutting-edge applications. Whether you are a seasoned C# developer or a .NET enthusiast looking to expand your skill set, this course will empower you to embrace the latest advancements in the C# language and the .NET ecosystem. Join us on this journey of exploration and innovation in the world of C# 11 and .NET 7 development.\nThis course is not design for C# beginners. We will assume that you already work with C# and have at least 6 months of experience with C# and .NET Framework.",
      "target_audience": [
        "c# developers"
      ]
    },
    {
      "title": "Julia: From Julia's Zero to Hero: 2 in 1",
      "url": "https://www.udemy.com/course/julia-from-julias-zero-to-hero-2-in-1/",
      "bio": "Over 40 recipes to solve complex problems with programming using Julia",
      "objectives": [
        "Extract and handle your data with Julia",
        "Uncover the concepts of metaprogramming in Julia",
        "Conduct statistical analysis with StatsBase .jl and Distributions .jl",
        "Build your data science models",
        "Explore big data concepts in Julia",
        "Learn to to write high performance Julia code."
      ],
      "course_content": {
        "Getting Started With Julia": [
          "The Course Overview",
          "Downloading Julia",
          "Setting up an Editor",
          "Using the Julia REPL",
          "Numbers",
          "Strings",
          "Arrays",
          "Control Flow",
          "Functions",
          "Variables",
          "Dictionaries",
          "Practical Usage of Functions",
          "Inspecting Types",
          "Type Hierarchies and Multiple Dispatch",
          "Conversion and Promotion",
          "Defining Your Own Types",
          "Reading and Writing to Files",
          "Networking",
          "Dealing with Different File Formats",
          "Using Modules",
          "Networking",
          "Reading and Writing CSV Files",
          "Interfaces",
          "Maze Builder",
          "Graphics Editor",
          "Implementation Inheritance",
          "Higher Order Functions",
          "Function Composition",
          "Functional Approach",
          "Functional Interpreter Pattern",
          "Common Traits",
          "Collection Types",
          "Multidimensional Arrays",
          "Sets",
          "Introducing Type Unions",
          "Code Reuse Through Type Unions",
          "Why Parametric Types?",
          "Creating a Generic Collection",
          "Pitfalls",
          "Nullable",
          "Debugging Approaches",
          "Writing Debuggable Code",
          "Writing Tests",
          "Program Representation",
          "Macros",
          "Code Generation",
          "Compilation",
          "Abstract Versus Concrete Types",
          "Type Stability",
          "Getting Started With Julia"
        ],
        "Julia Solutions": [
          "The Course Overview",
          "Handling Data with CSV Files",
          "Handling Data with TSV Files",
          "Interacting with the Web",
          "Representation of a Julia Program",
          "Symbols",
          "Quoting",
          "Interpolation",
          "The eval Function",
          "Macros",
          "Metaprogramming with DataFrames",
          "Basic Statistics Concepts",
          "Descriptive Statistics",
          "Deviation Metrics",
          "Sampling",
          "Correlation Analysis",
          "Dimensionality Reduction",
          "Data Preprocessing",
          "Linear Regression",
          "Classification",
          "Performance Evaluation and Model Selection",
          "Cross Validation",
          "Distances",
          "Distributions",
          "Time Series Analysis",
          "Plotting Basic Arrays",
          "Plotting DataFrames",
          "Plotting Functions",
          "Exploratory Data Analytics Through Plots",
          "Line Plots",
          "Scatter Plots",
          "Histograms",
          "Aesthetic Customizations",
          "Basic Concepts of Parallel Computing",
          "Data Movement",
          "Parallel Maps and Loop Operations",
          "Channels",
          "Julia Solutions"
        ]
      },
      "requirements": [
        "This Learning Path is designed specifically for data scientists, data analysts or statisticians but is also suitable for any programmer."
      ],
      "description": "Are you looking forward to get well versed with Julia? Then this is the perfect course for you!\nJulia is a young language with limited documentation and although rapidly growing, a small user community. Most developers today will know the object oriented paradigm used in mainstream languages such as Python, Java and C++. This presents a challenge switching to Julia which is more functionally oriented.\nWith this comprehensive 2-in-1 course takes a practical and incremental approach.  It teaches the fundamentals of Julia to developers with basic knowledge of programming. It is taught in a hands on approach, with simple programming examples the student can try themselves. Building on that, it will invite the user to a tour of the ecosystem of Julia through practical code examples.\nBy end of this course you will more productive and acquire all the skills to work with data more efficiently. Also help you quickly refresh your knowledge of functions, modules, and arrays & shows you how to utilize the Julia language to identify, retrieve, and transform data sets so you can perform data analysis and data manipulation & also get familiar with the concepts of package development and networking to solve numerical problems using the Julia platform.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Getting Started With Julia covers complete INSTALLATION AND SETUP along with basic of Julia. This course will not only introduce the language, but also explain how to think differently about problems with the Julia approach.  This course also focuses various aspects such as Functional Programming in Julia, Metaprogramming, Debugging and Testing & much more.\nThe second course, Julia Solutions covers consist complete guide to programming with Julia for performing numerical computation will make you more productive and able to work with data more efficiently. The course starts with the main features of Julia to help you quickly refresh your knowledge of functions, modules, and arrays. We’ll also show you how to utilize the Julia language to identify, retrieve, and transform data sets so you can perform data analysis and data manipulation. Later on, you’ll see how to optimize data science programs with parallel computing and memory allocation. You’ll get familiar with the concepts of package development and networking to solve numerical problems using the Julia platform.\nThis course also includes videos on identifying and classifying data science problems, data modelling, data analysis, data manipulation, meta-programming, multidimensional arrays, and parallel computing. By the end of the course, you will acquire the skills to work more effectively with your data.\nAbout the Authors:\nErik Engheim is a professional mobile developer with experience in many different programming languages, often in combination. Erik Engheim has worked with C/C#, Java, C++, Objective-C, and Swift before moving into Julia. His experience with Julia involves automation, and high performance processing of code strings.\nJalem Raj Rohit is an IIT Jodhpur graduate with a keen interest in machine learning, data science, data analysis, computational statistics, and natural language processing (NLP). Rohit currently works as a senior data scientist at Zomato, also having worked as the first data scientist at Kayako.He is part of the Julia project, where he develops data science models and contributes to the codebase. Additionally, Raj is also a Mozilla contributor and volunteer, and he has interned at Scimergent Analytics.",
      "target_audience": [
        "This Learning Path is designed specifically for data scientists, data analysts or statisticians but is also suitable for any programmer who is new to the field of data science, or anyone aspiring to get into the field of data science and choses Julia as the tool to do so."
      ]
    },
    {
      "title": "Python Fundamentals Bootcamp 2025: Beginner to Pro",
      "url": "https://www.udemy.com/course/python-basics-2023-bootcamp/",
      "bio": "Learn Python coding step by step: data types, loops, functions, OOP & real-world projects",
      "objectives": [
        "Learn to use Python professionally, learning both Python 2 and Python!",
        "Be able to use Python on a daily basis",
        "Create your own basic programs with Python",
        "Learn advanced Python features, like the collections module",
        "Understand complex functions in Python",
        "Learn to use Object Oriented Programming with classes!",
        "Learn Different Tips and Trics to improve your programming skills",
        "Build a complete understanding of Python from the ground up!",
        "Learn at your own rhythm with different practical exercises at each course"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome to the Course!!",
          "What you will learn in this course?"
        ],
        "Course Overview": [
          "Course Overview",
          "Target Audience",
          "Course – Prerequisites",
          "Why do we need Python?",
          "Python Vs. Other Languages",
          "Value – Professionals",
          "Topics Covered In This Lesson"
        ],
        "Introduction to Python": [
          "Python - Objectives",
          "Python - Introduction",
          "Python - Features",
          "Python - History",
          "Python - Installation",
          "Example - Python Program",
          "Modes of Python - Introduction",
          "Batch Script Mode",
          "Interpreter Mode",
          "Indentation in Python",
          "Comments in Python",
          "Business Scenario",
          "Topics Covered In This Lesson"
        ],
        "Python - Data Types": [
          "Python - Data Types",
          "Python - Variables",
          "Types of Variables",
          "String Variables",
          "Numeric Variables",
          "Boolean Variables",
          "List Variables",
          "Adding Elements to a List",
          "Access Elements of a List",
          "Dictionary",
          "Adding Elements to a Dictionary",
          "Accessing Elements of a Dictionary",
          "Dictionary Methods",
          "Operators",
          "Logical Operators",
          "Arithmetic Operations on Numeric Values",
          "Order of Operands",
          "Operators On Strings",
          "Variable Comparison",
          "Topics Covered In This Lesson"
        ],
        "Python – Control Statements": [
          "Python - Control Statements",
          "Pass Statements",
          "Conditional Statements",
          "Types of Conditional Statements",
          "If Statements",
          "Nested If Statements",
          "In Clause",
          "Ternary Operators",
          "Topics Covered In This Lesson"
        ],
        "Python - Loops": [
          "Loops - Introduction",
          "Range Function",
          "For Loop",
          "While Loop",
          "Nested Loop",
          "Break Statement",
          "Continue Statement",
          "Topics Covered In This Lesson"
        ],
        "Python – Functions": [
          "Python - Functions",
          "Functions - Introduction",
          "Creating Functions",
          "Calling Functions",
          "Arguments and Return Statement",
          "Recursion",
          "Topics Covered In This Lesson"
        ],
        "Python - Classes": [
          "Python - Classes",
          "Classes - Introduction",
          "Objects",
          "Creating a Basic Class",
          "Accessing Variables of a Class",
          "Adding Functions to a Class",
          "Built-in Class Attributes",
          "__Init__ Function",
          "Examples of Defining and Using a Class",
          "Topics Covered In This Lesson"
        ],
        "Python – Imports and Modules": [
          "Python - Imports and Modules",
          "Modules – Introduction",
          "Creating Modules",
          "Using Modules",
          "Python Interpreter Module Search",
          "Namespace and Scoping",
          "Dir() Function",
          "Global and Local Functions",
          "Reload a Module",
          "Packages In Python",
          "Topics Covered In This Lesson"
        ]
      },
      "requirements": [
        "Access to a computer with an internet connection",
        "Wanting to learn programming in Python"
      ],
      "description": "Python Fundamentals Bootcamp 2025: Beginner to Pro\n\n\nWelcome to the Python Fundamentals Bootcamp 2025, the ultimate Python programming course for beginners who want to build strong coding foundations and unlock high-paying career opportunities.\n\n\nWhy Python in 2025?\nPython is the fastest-growing programming language in the world\nIt powers web development, data science, artificial intelligence, machine learning, cybersecurity, and automation\nPython developers are among the highest-paid professionals in the tech industry\n\n\nThis course is designed to give you practical, job-ready Python skills from day one.\nHere’s what you’ll learn:\nSetting up Python on Windows, Mac, or Linux\nPython syntax, variables, and core data structures (lists, tuples, dictionaries, strings)\nControl flow: if-else conditions, loops, and functions for efficient coding\nObject-Oriented Programming (OOP) with classes, objects, and modules\nWorking with Python libraries and modules for real-world development\nApplying your knowledge with hands-on projects, coding challenges & quizzes\n\n\nWhat makes this course different?\nClear explanations + beginner-friendly approach\n85+ video lessons with lifetime access\nDownloadable resources & assignments\nReal-world projects to strengthen your portfolio\nDesigned to take you from beginner to job-ready Python developer\n\n\nBy the end of this bootcamp, you’ll be able to:\nWrite Python programs with confidence\nSolve coding interview problems\nBuild real-world applications\nOpen doors to careers in software engineering, data science, AI, ML & automation engineering\n\n\nEnroll today in the Python Fundamentals Bootcamp 2025 and make this year the start of your coding journey with the #1 Python course for beginners on Udemy!",
      "target_audience": [
        "Beginners who have never programmed before.",
        "Programmers who want to learn Python language",
        "Programmers switching languages to Python.",
        "Intermediate Python programmers who want to level up their skills!"
      ]
    },
    {
      "title": "C# Logical Puzzles Games & Algorithm Projects (step by step)",
      "url": "https://www.udemy.com/course/csharp-algorithms/",
      "bio": "Practice C# by coding popular programming puzzles, games, and algorithms exercises",
      "objectives": [
        "Practice and understand loops, arrays, recursion, OOP and more",
        "Code beginner and intermediate projects using C#",
        "Become an intermediate programmer by understanding the how and why of each line in your program",
        "Think like a programmer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Calculating factorials using loops and recursion": [
          "Factorial - Loop solution",
          "Factorial - Recursive solution"
        ],
        "FizzBuzz problem using loops and recursion": [
          "FizzBuzz - Loop solution",
          "FizzBuzz - Recursive solution"
        ],
        "Fibonacci numbers using loops and recursion": [
          "Fibonacci Numbers - Loop solution",
          "Fibonacci Numbers - Recursive solution"
        ],
        "Tower of Hanoi puzzle - recursive solution": [
          "Tower of Hanoi"
        ],
        "Sieve Eratosthenes algorithm for finding Prime numbers": [
          "Sieve of Eratosthenes Part 1",
          "Sieve of Eratosthenes Part 2"
        ],
        "Lo Shu Magic Square puzzle": [
          "Lo Shu Magic Square Part 1",
          "Lo Shu Magic Square Part 2"
        ],
        "Roll of Dice simulation": [
          "Roll of Dice Part 1",
          "Roll of Dice Part 2"
        ],
        "Game of Craps simulation": [
          "Game of Craps Part 1",
          "Game of Craps Part 2",
          "Game of Craps Part 3",
          "Game of Craps Part 4",
          "Game of Craps Part 5"
        ],
        "Turtle Graphics - path simulation": [
          "Turtle Graphics 1",
          "Turtle Graphics 2",
          "Turtle Graphics 3",
          "Turtle Graphics 4",
          "Turtle Graphics 5",
          "Turtle Graphics 6"
        ]
      },
      "requirements": [
        "Students should have installed Visual Studio 2017 in order to follow along",
        "Students should be actively learning C#",
        "Students should be somewhat familiar with the programming concepts presented in the exercises"
      ],
      "description": "C# is an excellent programming language. It’s part of the .Net family of languages, and as such, it allows you to program some truly amazing solutions. So, congratulations on choosing to learn this amazing language. :-)\nAs it is common among beginner programmers, the enthusiasm to learn often is not enough to make the leap from beginner to intermediate.  The bad news is: code fear is real, and it hinders, or even stops your progress. The good news is: you can learn to eliminate it! And all it takes is a little practice and determination. And that’s where this course will help you greatly!\nThe course goes over several C# programming exercises. I show you how to put the theory you learned into practice by showing you how to solve each exercise and walking you through all the Why’s and How’s.\nIn the process, you will learn how to translate the project requirements into a working code. You will learn to use many different programming concepts, such as Conditional Statements, Loops, Arrays, Multi-dimensional arrays, OOP… and pick the right one for your solution. But above all, you will learn to think like a programmer!\n\nThis course is all about practice. Therefore, to benefit from this course, you need to be an active student. It doesn't matter if you are self-taught or attend a programming course. What matters is the time and effort you are willing to put into learning and practicing your skills.\nThere are no lectures in this course. However, I do my best to explain what I am trying to accomplish with each line of code, and touch on common pitfalls, too.\nThis is a course for beginner to intermediate C# programmers who need to put the concepts and theory they learned into practice and for people who prefer to learn by doing. This is NOT a course for absolute beginner!\nIf that's you, then let's start coding!",
      "target_audience": [
        "The course is NOT suited for complete beginners.",
        "The course is best suited for college students taking C# classes, or self-taught students.",
        "Beginners who are currently learning how to program in C# and need a guided practice exercises.",
        "Students who need to put the concepts and theory they learned into practice.",
        "Beginner C# programmers seeking to cement the knowledge by doing short programming projects that are challenging, yet not out of his/her skill set exercises."
      ]
    },
    {
      "title": "Scala in Practice",
      "url": "https://www.udemy.com/course/scala-in-practice/",
      "bio": "Coding and App Developement using Scala Programming Language",
      "objectives": [
        "Understand the basic principles of Scala",
        "Understand programming in Scala",
        "Implement hands-on Scala code",
        "Create a Mobile App using Scala"
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of programming languages",
        "Some familiarity with object-oriented programming concepts"
      ],
      "description": "Scala is a programming language designed to include advantages from both object-oriented and functional programming paradigms. It is a concise, agile, and scalable language that can handle lots of data in real time. Scala is a popular choice for many open source and Big Data projects. The prominent Big Data framework, Apache Spark, is also developed using Scala.\nAdastra Academy’s ‘Scala in Practice’ includes a general overview, the benefits of programming in Scala, and several hands-on exercises. Unlike other courses, students taking ‘Scala in Practice’ quickly become proficient in coding and develop a Mobile App as part of the course work. We also explore Scala’s main features that make it a unique programming language and various enterprise applications to understand why it is more often deployed than others.",
      "target_audience": [
        "Big Data Developers",
        "Programmers and Developers",
        "Data Scientists",
        "Data Engineers"
      ]
    },
    {
      "title": "Clean Code with PHP examples",
      "url": "https://www.udemy.com/course/clean-code-php/",
      "bio": "Learn Clean Code to become a better PHP developer, write easy to maintain code and do better at interviews.",
      "objectives": [
        "How to write clean code in PHP",
        "Why it's important to keep functions small",
        "How to name variables, functions and classes",
        "How many parameters a functions should have",
        "How clean code affected MVC",
        "How to beautify predicates",
        "Why comments are bad and when you can use them",
        "The difference between an OOP object and a Data Structure Object",
        "Why composition is good and inheritance is bad",
        "What are the symptoms of bad code",
        "What state is and why it's important",
        "Why your code should have low coupling and high cohesion",
        "How to avoid spaghetti code",
        "What are Command and Query separation, Tell Don't Ask and The Law of Demeter",
        "How over-engineering is not a solution to bad code"
      ],
      "course_content": {},
      "requirements": [
        "You have to know the basics of writing code in PHP"
      ],
      "description": "This is a course about useful clean code principles.\nMy aim is to teach you concepts that you can use every time you write code.\n\n\nClean Code can help you:\n- Write better PHP code and thus become a better PHP programmer\n- Create easy to maintain projects\n- Perform better during interviews by showing knowledge of advanced programming concepts\n\n\nThe course has PHP examples and I sometimes mention things like Symfony and MVC.\n\n\nThe course is structured in 4 parts:\n1. Introduction - where we discuss what is clean code and why it's important\n2. Small Functions - I gave small functions an entire section because I think its one of the most important principles of clean code, together with small classes, Single Responsibility Principle and Not crossing Different Levels of Abstraction.\n3. Clean code: Fundamental Principles - I discuss here about fundamental things like method and variables names, parameters, comments and exceptions\n4. Clean code: Advanced Principles - Here I talk about more abstract topics like the difference between an OOP Object and a Data Structure Object, Composition over Inheritance, Symptoms of Bad Code, State, Low Coupling - High Cohesion, Command and Query Separation, Tell Don't Ask, The Law of Demeter, YAGNI and more.\n\nThe course also contains some memes because you can't spell clean code without fun.\nI tried to focus on things you can use every day when programming and stay away from barren theory.\nThere's no point wasting our time with useless knowledge that would just seem like it's helping you as a programmer, but that you will forget in 2 weeks.\nIf that would have been the point, this would be a 10 hours course about programming patterns.\nBut it isn't.\nI tried to make the course full of useful information but not too long.\nIf you invest as little as two hours of your life in this course, about the time you would spend watching a movie, you will become a much better developer.",
      "target_audience": [
        "PHP developers"
      ]
    },
    {
      "title": "Learn Swift Programming Step by Step",
      "url": "https://www.udemy.com/course/learn-swift-programming-step-by-step/",
      "bio": "An Easy To Follow Course to Master Swift Programming for IOS",
      "objectives": [
        "Use Swift programming language for building Apps",
        "Master new concepts unique to Swift programming",
        "Learn practical use of the Swift Concepts",
        "Build apps using Swift"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Programming in either C /C++ or Objective C will be helpful"
      ],
      "description": "Swift is one of the fastest growing programming language and is now the most preferred technology for iOS and Mac Development. We at Eduonix have crafted a course to meet the growing demand of Quality Swift Programming for both beginners and Intermediate developers. Our course focuses on the practical use of concepts inherent to Swift programming so even a beginner can start using the language for App Development\nOur Course Focuses on the following\nSwift Programming Environment - Learn what is new in Swift and how is it different from other programming languages such as C , C++ or Objective C .\nUse of Xcode for Swift Programming - Learn to use Xcode for Swift programming and learn new concepts such as playground\nSwift Basic Know How - Learn the basic syntax of Swift using live practical examples. Master Concepts such as Tuples, Optionals and Assertions.\nSwift Operators - Learn to use various operators for manipulating standard and non standard data types.\nSwift Strings - Learn to manipulate Strings and Characters in your programs. Learn all about unicodes.\nSwift Control Flow - Swift Control Flow sections deals with iterators and conditionals. Learn to use loops in your Swift Programs\nSwift Functions - Divided into two sections these topics will cover the use of functions and parameters. Also learn about enumerations and Closures\nSwift Data Structures - Learn to use collections and dictionaries in your programs.\nObject Oriented Programming - Learn complete object oriented programming using Swift. *******COMING SOON*************\nThe conceptual focus and practical teaching technique will make you love this course and help you be an elegant Swift programmer",
      "target_audience": [
        "Programmers who want to develop Swift applications can take this course",
        "This course focus on Swift programming and not on Mobile or iOS programming specifically."
      ]
    },
    {
      "title": "Big O Notation for Algorithms in plain English",
      "url": "https://www.udemy.com/course/big-o-notation-for-algorithms-in-plain-english/",
      "bio": "A gentle introduction to asymptotic notation, complexity theory and algorithm runtime or space complexity classification",
      "objectives": [
        "Learn what the Big O notation is about",
        "Look at an algorithm and classify it according to their Big O complexity",
        "Identify and write more performant code and algorithms in your work as a software developer",
        "Acquire the extra knowledge to help you pass more coding interviews",
        "Exponential O(c^n), Quadratic O(n^2), Linear O(n), Log Linear O(n Log n), Logarithmic O(Log n) and Constant O(1) Complexity Functional Classes",
        "Introduction to Complexity Theory"
      ],
      "course_content": {},
      "requirements": [
        "Some basic programming experience required. The code in the course is in Python however the code is simple enough that if you know how to program in any major language you'll be ok.",
        "This course is designed to be light on mathematics to facilitate understanding. If you can grasp the simple math in the (free) intro video you'll be ok for the rest of the course!"
      ],
      "description": "Angela Belfort, CEO of Firma Logistics strode into the meeting room quietly enraged. The way CEOs are enraged, composed and at the same time fuming. She is followed by her entourage. All the important people that make all the decisions. You’ve been at the company for just over a year and you’re not quite sure how you ended up in this room.\nHer assistant had already set the room projector showing the live feed of the company’s fleet, over 4000 lorries scattered all over the country. Each vehicle was shown as a dot, colored red as stationary, green as moving. Almost all of them were red.\n“What the hell is going on? I have lorry drivers complaining to unions because we aren’t able to give them a delivery schedule. I have furious suppliers on the lines asking for updates on their packages. We’ve got competitors circling over our clients like vultures. Can someone explain to me what is happening?”, Angela started.\nEveryone was expecting an answer from the CTO, Brian Holms. Technically, on the huge org chart, he is your manager somewhere along the path from your position to the top, but it sure is a long way. He replies with “Er… em… We seem to be having some IT issues. I brought Alex here with me as she seems to have found a bug in the system”.\nThe focus is now completely on you. Hey, this might be the day you get fired after all… “It’s not really a bug. A section of the current scheduling algorithm has a quadratic runtime complexity with respect to the number of routes”.\nThe room looks at you as if you said the moon was made out of cheese. The big wigs turn their heads back to Brian for an explanation, but he seems as lost as they are. Instead he nervously nods, encouraging you to go on.\n“Ok. Remember Paul Zimmer? Our ex-tech lead guy? Well it turns out that some of his old code does not scale well. It was fine while we had a few hundred lorries, but now that the company has grown so much the scheduling program is not able to keep up with the load. Especially on busy days like today. We have not really invested in keeping the code with the latest technologies and now nobody knows how it really works.” This is literally the most dumbed down version you can think of.\nAngela jumps in “Where is this Paul?”\n“He retired about a year ago. Rumor has it he opened an American diner in Hong Kong.”, replies Brian.\nAngela’s composure is all gone now. “Can we fix the damn thing?”, she shouts.\n“Well it’s very old code, nobody really understands how it works and we have been trying to reach Paul but if he’s in a different country… ”, puts in Brian but is interrupted by you.\n“I already have a working linear solution. By linear I mean it will scale fine with our needs. I just need to run some further testing and then we can probably release it.”\nBrian is visibly shocked. Everyone else is kind of confused, not completely sure what is going on. Angela is the only one with a grin.\n\n\nUnderstanding the basics of Big O notation and being able to \"read\" how much an algorithm can scale is a must for all serious developers. This extra skill gives you the edge to take your career forward, to distinguish yourself from the rest of the crowd and get ahead. It helps you pass difficult coding interviews to get hired from some of the best tech companies.\nThe code in this course is in Python however if you have experience from any other major programming language (such as Java, C#, JavaScript, Ruby etc...) you'll be ok with the code in the course as it's designed to be easy to grasp.\nAll code in this course can be found on github, username/project: cutajarj/BigONotationInPlainEnglish\nSo don't be a Brian, sign up to the course and learn something new today!",
      "target_audience": [
        "Self taught developers that want to up their game and learn about how to measure and improve their code.",
        "College students that are struggling with the Big O Notation, Algorithms and Complexity theory topic.",
        "Experienced developers that require a refresher, perhaps for an upcoming interview.",
        "CTOs named Brian Holmes"
      ]
    },
    {
      "title": "Lets Learn C++ and Make a 2D Dungeon Game!",
      "url": "https://www.udemy.com/course/2d-dungeon-game/",
      "bio": "From C++ fundamentals to advanced",
      "objectives": [
        "Fundamental C++ into Advanced",
        "Basic 2D Game Development"
      ],
      "course_content": {},
      "requirements": [
        "Windows Operating System recommended"
      ],
      "description": "In this course I'll start out your C++ journey from the beginning and move you through advanced whilst moving towards making a little dungeon game.\nEverything is in here from the very starting points, so the course is good for beginners or those returning to C++ who want to brush up on their skills. At the college I used to teach at, this content would cover subjects C++ 1, C++ 2 and Basic Game Dev with C++ (each of those subjects cost like $1.5k AUD). If you are studying at a Uni or College, this course makes a good companion resource for those you with C++ subjects.\nThrough out the course I provide project check points and reference projects if you get lost along the way. This course runs a bit over 16hrs, so take your time on it. Here is a list of some of the things we run through on this course:\nvariables and math\ninput and output\nif statement, while and for loops\narrays, 1d and 2d\nclasses, inheritance and polymorphism\npointers and dynamic memory\nrendering and animation\nbasic 2d game logic\nand a bunch more!\nC++ is still very relevant in many software engineering jobs but also to lots of game engines such as Unreal. Its a good starting language for many looking to get into software development of some kind.\nLet's make a sweet dungeon game!",
      "target_audience": [
        "Beginner coders/programmers interested in C++",
        "Uni students looking for more C++ learning resources",
        "C++ developers wanting to brush up on some skills and make a game"
      ]
    },
    {
      "title": "Excel add-in with c# VSTO and web",
      "url": "https://www.udemy.com/course/excel-add-in-with-c-vsto-and-web/",
      "bio": "Excel add-in with c# VSTO and web",
      "objectives": [
        "Basics of VSTO excel add-in development",
        "Basics of web excel add-in development"
      ],
      "course_content": {},
      "requirements": [
        "Windows os (for vsto part)",
        "Excel 2013 or higher"
      ],
      "description": "These days there are two ways to develop excel add-ins - using vsto and using web add-ins. Both options work well, but the decision will likely be based on the project requirements, for that reason this course introduces both options. We will get through the basics and all the setup, so that you can get started with no interruptions.\n\n\nWhilst Javascript option is available on all devices, C# options has no limitations - but this course will cover both options:\n\n\nIn the C# part, you will learn about interacting with excel sheets from ribbon UI, setting up ribbons themselves. With that, you will see how to find the right cells, how to deal with columns and rows. And not only that, but also how to add various objects and do a few more things with your excel files. And even how to pick files in the add-ins.\n\n\nIn the Javascript part, you will learn about interacting with excel sheets from html user interface, setting up interface itself. With that, you will see how to find the right cells, how to deal with columns and rows. And not only that, but also how to add various objects and do a few more things with your excel files.\n--source code included",
      "target_audience": [
        "Developers who want to develop excel add-ins",
        "Web developers who want to develop excel add-ins",
        "C# developers who want to develop excel add-ins"
      ]
    },
    {
      "title": "Tutorials for AppleScript",
      "url": "https://www.udemy.com/course/applescript/",
      "bio": "Training for creating amazing MacOS applications and automation scripts with AppleScript!",
      "objectives": [
        "Build automated scripts and applications on Mac OS"
      ],
      "course_content": {},
      "requirements": [
        "You should be able to use Mac"
      ],
      "description": "Introducing a video course on AppleScript!\nAppleScript is a scripting language built into Mac OS X, used on Apple computers, which consists of commands for managing the operating system and automation programs. AppleScript is especially effective for performing repetitive or complex tasks. They can quickly link several applications in one automated complex. We will study its syntax and capabilities!\nHow many good and useful scripts and applications you can create using AppleScript!\nWith it, it is possible at one time to teach your desktop application to communicate not only with the operating system but also with programs such as: iTunes, Calendar, TextEdit, Photoshop, Illustrator, After Affects, Microsoft Office and others.\nYou can create scripts and applications that will help you in your work or study.\nAnd also create applications that will automate a lot of the same type of work on your computer.\nYou'll be in shock as it's simple and cool!\nStart learning today!",
      "target_audience": [
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": "Learn Python From Basic to Advance.",
      "url": "https://www.udemy.com/course/learn-python-from-basic-to-advance/",
      "bio": "Learn Python Programming from basic to expert level in easy steps.",
      "objectives": [
        "Become an experienced Python Programmer",
        "Master all the Python key concepts starting from scratch.",
        "Work with Python on database.",
        "Manipulate strings and data",
        "Use DML commands with python in the custom program.",
        "Create and Execute Custom Functions",
        "Understand Python Data Types",
        "Create, Sort and Modify Python Lists",
        "Use Python's Predefined String Functions",
        "To deal with Error Handling in Python"
      ],
      "course_content": {
        "Section 1: Introduction": [
          "Introduction"
        ],
        "Section 2: Installing Python": [
          "2-How to Install Python on Windows",
          "3-Install Python on MAC",
          "4-How to Start IDLE Python on MAC"
        ],
        "Section 3: Writing Your First Program": [
          "5-Write Your First Python Program"
        ],
        "Section 4: Python Basic Data Types,Variables And Methods": [
          "6-Numeric and Decimal data Types in Python",
          "7-String in Python",
          "8-Use of Backslash in Strings",
          "9-String Replace Method",
          "10-String Split Method",
          "11-String Find Method",
          "12-Convert Integer into String",
          "13-Python String Len Method"
        ],
        "Section 5: Making Decisions": [
          "14-IF Statements in python",
          "IF else statements in python",
          "15-ELIF Statements in python",
          "17-For loop in python",
          "18-Using Break in for loop",
          "19-While Loop in Python",
          "20-Using Break Statement in While Loop"
        ],
        "Section 6: Data Structures": [
          "21-Use of Range Function in python",
          "22-List in Python",
          "23-Mixed List in Python",
          "24-LIst Length Method",
          "25-List Remove and Del Method",
          "26-Python Append Method",
          "27-Python Sort Method",
          "28-Dictionary in Python",
          "29-Length of Dictionary",
          "30-Dictionary Clear Method",
          "31-Python Set Method"
        ],
        "Section 7 : Arrays in Python": [
          "32-Array in Python",
          "33-Import Array Module",
          "34-Remove Items From Array Through POP Method",
          "35-Array Append Method",
          "36-Insert Method in Array",
          "37-Tuples"
        ],
        "Section 8 : Functions": [
          "38-Functions in python",
          "39-Using Date And TIme"
        ],
        "Section 9 : Input and Output": [
          "40-How to Take User Input",
          "41-Opening the FIle Through Read Method",
          "42-Writing in python FIle Through Write Method"
        ],
        "Section 9 : Installing Python Latest Environment": [
          "43-Install the python latest Envoirnment"
        ]
      },
      "requirements": [
        "Only you need is the passion to learn",
        "Computer that runs the Mac, Windows, or Linux operating system."
      ],
      "description": "Do you want to become a Python programmer?\n\nPython is one of the most demanded skill sets in today's job market\nPython is a well developed, Reliable and fun to use programming language. If you want to learn how to program in python programming language, our Python from Basic to Advance course is the right python training course for you. Learn on your own time and at your own pace, just be sure to learn this stuff.\nIn this Python Basic to Advance course, Instructor Shibli Murtaza will teach you how to quickly write your programs in Python! You will also learn how to create custom Functions and how to deal with advance concepts in Python. This extensive course covers the fundamentals of Python as well as the more advanced concepts such as handling Errors and Send Email with Python.\n\nProgrammers love Python because of how simple and easy it is to use. We will first start with the basics of Python learning about variables, strings, and data types. Then, we will move on to conditionals and loops. Once we're done with that, we'll learn about functions and files in Python.\n\nI hope you're excited to Learn Python. So what are you waiting for? Let's get started!",
      "target_audience": [
        "Who are interested in learning python programming",
        "Who want to become a Programmer",
        "Who wants to start their career in software industry"
      ]
    },
    {
      "title": "Python Searching & Sorting Algorithms - A Practical Approach",
      "url": "https://www.udemy.com/course/python-searching-sorting-algorithms/",
      "bio": "Implement searching and sorting Algorithms in Python and learn how they work through engaging animations and projects.",
      "objectives": [
        "How to Implement Searching and Sorting Algorithms in Python.",
        "Visualize how they work behind the scenes as the code runs.",
        "Compare the efficiency of these algorithms using Big O Notation.",
        "Relate each line of code with its main purpose in the algorithm.",
        "Learn the best case, the average case, and the worst case of each algorithm.",
        "Explain how these algorithms work and apply them to new scenarios."
      ],
      "course_content": {
        "Welcome to the Course": [
          "Importance and Evolution of Searching and Sorting Algorithms",
          "Welcome to the Course | Please Introduce Yourself",
          "Important Course Information and Resources",
          "Collect and Share Your Badge"
        ],
        "Quick Review: Lists, Tuples, and Algorithmic Time Complexity": [
          "Purpose of the Quick Review",
          "Welcome to this Section",
          "Section Handouts & Resources",
          "What is an Algorithm?",
          "Introduction to Lists (Lists 101)",
          "Lists | Helpful Resources",
          "Lists | Hands-on Practice",
          "Lists | Test Your Knowledge",
          "Introduction to Tuples (Tuples 101)",
          "Tuples | Helpful Resources",
          "Tuples | Hands-on Practice",
          "Tuples | Test Your Knowledge",
          "Slicing Lists and Tuples",
          "Lists & Tuples | More Challenging Practice Exercises",
          "Algorithmic Time Complexity 101",
          "Meaning of c in Big O Notation",
          "Time Complexity | Helpful Resources",
          "Algorithmic Time Complexity | Test Your Knowledge",
          "Recursion | Helpful Links",
          "Quick Review | Mini Project",
          "Let's Dive Into These Algorithms!",
          "Collect and Share Your Badge"
        ],
        "Linear Search - The Most Intuitive Search Algorithm": [
          "Introduction to Linear Search",
          "Section Handout & Slides",
          "Visual Walkthrough of Linear Search",
          "Linear Search | Algorithm",
          "Code Walkthrough of Linear Search",
          "Linear Search | Code",
          "Linear Search | Implementation & Code",
          "Time Complexity of Linear Search",
          "Step-By-Step Example",
          "Implement Linear Search in Python",
          "Section Quiz | Test Your Knowledge",
          "Linear Search | Mini Project",
          "Collect and Share Your Badge"
        ],
        "Binary Search - An Efficient Search Algorithm": [
          "Introduction to Binary Search",
          "Section Handout & Slides",
          "Visual Walkthrough of Binary Search",
          "Binary Search | Algorithm",
          "Code Walkthrough (Iterative)",
          "Binary Search | Iterative Code",
          "Overflow Bug Prevention for Huge Lists",
          "Code Walkthrough (Recursive)",
          "Binary Search | Recursive Code",
          "Binary Search | Testing Larger Inputs (250,000 items!)",
          "Binary Search | Implementation & Code",
          "Time Complexity of Binary Search",
          "First Step-By-Step Example",
          "Second Step-By-Step Example",
          "Implement Binary Search",
          "Section Quiz | Test Your Knowledge",
          "Binary Search | Mini Project",
          "Collect and Share Your Badge"
        ],
        "Bubble Sort - Your First Sorting Algorithm": [
          "Introduction to Bubble Sort",
          "Section Handout & Slides",
          "Important Sorting Terminology",
          "Visual Walkthrough of Bubble Sort",
          "Bubble Sort | Algorithm",
          "Code Walkthrough",
          "Bubble Sort | Code (Basic Version)",
          "Bubble Sort | Code (Optimized)",
          "Bubble Sort | Implementation & Code",
          "Time Complexity of Bubble Sort",
          "First Step-By-Step Example",
          "Second Step-By-Step Example",
          "Implement Bubble Sort",
          "Section Quiz | Test Your Knowledge",
          "Bubble Sort | Mini Project",
          "Collect and Share Your Badge"
        ],
        "Selection Sort - Optimizing the Process": [
          "Introduction to Selection Sort",
          "Section Handout & Slides",
          "Visual Walkthrough of Selection Sort",
          "Selection Sort | Algorithm",
          "Code Walkthrough",
          "Selection Sort | Code",
          "Selection Sort | Implementation and Code",
          "Time Complexity of Selection Sort",
          "First Step-By-Step Example | Visual",
          "First Step-By-Step Example | Code",
          "Working with Strings",
          "Second Step-By-Step Example | Visual",
          "Second Step-By-Step Example | Code",
          "Implement Selection Sort",
          "Section Quiz | Test Your Knowledge",
          "Selection Sort | Mini Project",
          "Collect and Share Your Badge"
        ],
        "Insertion Sort - Build the List One By One": [
          "Quick Tip: How to Leave or Update Your Review",
          "Introduction to Insertion Sort",
          "Section Handout & Slides",
          "Visual Walkthrough of Insertion Sort",
          "Insertion Sort | Algorithm",
          "Code Walkthrough",
          "Insertion Sort | Implementation & Code",
          "Insertion Sort | Implementation (Tips & Tricks)",
          "Nested Loops in Insertion Sort: Behind the Scenes",
          "Insertion Sort | Code",
          "Time Complexity of Insertion Sort",
          "First Step-By-Step Example | Visual",
          "First Step-By-Step Example | Code",
          "Working with Strings",
          "Second Step-By-Step Example | Visual",
          "Second Step-By-Step Example | Code",
          "Implement Insertion Sort",
          "Section Quiz | Test Your Knowledge",
          "Insertion Sort | Mini Project",
          "Collect and Share Your Badge"
        ],
        "Merge Sort - Where True Efficiency Begins": [
          "Introduction to Merge Sort",
          "Section Handout & Slides",
          "Visual Walkthrough of Merge Sort",
          "Merge Sort | Algorithm",
          "Code Walkthrough Part 1| merge_sort()",
          "Code Walkthrough Part 2 | merge()",
          "Truthy and Falsy values in merge()",
          "Code Walkthrough Part 3 | Output",
          "Merge Sort | Implementation & Code",
          "Why does it work?",
          "Merge Sort | Code",
          "Merge Sort for Large Lists | Practical Example",
          "Time Complexity of Merge Sort",
          "Step-By-Step Example | Visual",
          "Step-By-Step Example | Code",
          "Implement Merge Sort",
          "Section Quiz | Test Your Knowledge",
          "Merge Sort | Mini Project",
          "Collect and Share Your Badge"
        ],
        "Quicksort - Time and Space Efficiency in One Algorithm": [
          "Introduction to Quicksort",
          "Section Handout & Slides",
          "Key Vocabulary: Partition",
          "Key Vocabulary: Pivot",
          "Visual Walkthrough of Quicksort",
          "Quicksort | Algorithm",
          "Code Walkthrough Part 1 | quicksort()",
          "Why does it work? Key Tips",
          "Code Walkthrough Part 2 | partition()",
          "Quicksort | Implementation & Code",
          "Can I use pivot instead of lst[high]?",
          "Lomuto's vs. Hoare's Partition Schemes",
          "Quicksort | Code",
          "Quicksort for Large Lists | Practical Example",
          "Time Complexity of Quicksort",
          "Importance of Choosing the Right Pivot",
          "Choosing the Pivot | Randomly",
          "Choosing the Pivot | Median of Three",
          "Step-By-Step Example | Visual",
          "Step-By-Step Example | Code",
          "Implement Quicksort",
          "Section Quiz | Test Your Knowledge",
          "Quicksort | Mini Project",
          "Collect and Share Your Badge"
        ],
        "Use the timeit Module to Compare Efficiency": [
          "Introduction to the timeit module",
          "Section Resources & Slides",
          "The timeit Module",
          "Testing Linear Search with timeit",
          "Testing Binary Search with timeit",
          "Linear Search vs. Binary Search with timeit",
          "Let's Analyze Sorting Algorithms",
          "Testing Bubble Sort with timeit",
          "Selection Sort vs. Insertion Sort with timeit",
          "Insertion Sort vs. Merge Sort vs. Quicksort with timeit",
          "Experiment with timeit",
          "Analyze Time Efficiency | Mini Project",
          "Collect and Share Your Badge"
        ]
      },
      "requirements": [
        "You will need to have Python 3 installed in your device.",
        "Basic Python Knowledge such as data types, variables, loops, conditionals, and functions.",
        "The Quick Refresher section offers a quick introduction to lists, tuples, and algorithmic time complexity.",
        "Basic Knowledge of Recursion - This is required for certain algorithms, so I provide links to helpful resources in case you need to refresh your knowledge."
      ],
      "description": "Learn how to implement Searching and Sorting algorithms in Python. Understand how they work behind the scenes through a detailed visual and practical approach. Be able to relate each line of code to the actual inner workings of the algorithms as they run.\nEnter the World of Computer Science and Algorithms with the Right Skills.\nLearn how to implement these algorithms in Python.\nBe able to explain how they work behind the scenes.\nLearn how to compare them based on their efficiency.\nBe able to apply them to new scenarios.\nAdd New Skills To Your Algorithmic Toolbox\nBasic knowledge of algorithms is vital for every developer. Searching and Sorting algorithms is a key topic commonly asked during technical interviews. Be one step ahead of your competition by learning these skills with this on-demand course. Python is the most popular and approachable programming language and its popularity continues to rise year-over-year.\nHaving a firm grasp of Searching and Sorting algorithms will not only help you during your job search, it will also enhance your computational thinking skills. Be able to dive into more advanced algorithms with the solid foundation that this course provides. With detailed and didactic slides, animations, explanations, and exercises, you will dive into the world of algorithms through an engaging and practical learning experience.\nContent & Overview\nWith high quality video lectures that include graphics and animations, you will learn the following algorithms:\nLinear Search\nBinary Search\nBubble Sort\nSelection Sort\nInsertion Sort\nMerge Sort\nQuicksort\nYou will also learn how to use the timeit module to time the execution of small code snippets.\nCourse by the Numbers\n1,050+ PDF slides.\n96+ quiz questions.\n23+ Downloadable Python files.\n10+ PDF handouts.\n10 coding exercises.\n9 mini projects.\nLearning Material & Practice:\nHigh-Quality Video Lectures - Carefully designed graphics and animations.\nCoding Exercises with detailed solutions - Execute and test your code directly in the browser.\nMini Projects with detailed solutions - Dive deeper into each algorithm by completing a mini project per section.\nQuizzes - Test your knowledge and receive instant feedback.\nCode with Print Statements - See how the algorithms work behind the scenes as the code runs.\nPDF Handouts - Each section has a PDF handout with a graphical and detailed summary of the algorithm.\nPDF Slides - You can download the PDF slides displayed in the videos.\nArticles - Detailed descriptions of key aspects of the topics to complement your knowledge.\nWhy is this course unique?\nThis course is unique because of its emphasis on providing visual and detailed explanations of how the algorithms work behind the scenes, so you will not only learn how to implement them in Python, you will also learn how they work in such detail that you will be able to explain and visualize the steps of the process, given a particular input.\nYou will see how the algorithms work behind the scenes as the code runs with downloadable Python files that contain implementations with carefully designed print statements. No more trying to guess what is happening behind the scenes when the algorithm runs!\nYou will have access to unique downloadable PDF handouts specially designed for the course (one per section) with complete and graphical descriptions of the algorithms.\nIf you need to learn or refresh the basics of lists, tuples, and algorithmic time complexity, the course has you covered. The Quick Refresher section offers a short but comprehensive introduction to these topics through interactive video lectures, exercises, and didactic PDF handouts.\nYou will check your knowledge with short Quizzes after each main lecture. The Quizzes provide instant feedback, so you can see the correct answer immediately. The quiz questions were designed to make you think more deeply about the topics presented.\nYou will be able to download the PDF slides used in the videos, so you can take your learning material with you even if you don't have an internet connection when you commute to work. Study algorithms anywhere, at any time.\nFinally, you will practice communications skills in the Mini Projects (one per section), where you will explain how the algorithms work step by step when they are applied to a particular input. Each mini project comes with a sample answer, so you will always be able to check your solution. Being able to explain how the algorithms work is a key skill during interviews.\n\n\nYou are very welcome to watch the preview lectures and check out the full course curriculum.\nWhat are you waiting for? If you are looking for an engaging, visual, and practical course, you've found it.\nAdd \"Searching and Sorting Algorithms in Python\" to your resume and showcase your new skills!",
      "target_audience": [
        "New programmers who have learned the basics of Python.",
        "Developers who wish to expand their algorithmic toolbox.",
        "Self-taught developers and Computer Science Students.",
        "Programmers who need to refresh their knowledge.",
        "Developers who are preparing for an interview."
      ]
    },
    {
      "title": "C Programming Language Refresher Course",
      "url": "https://www.udemy.com/course/learn-c-through-programming/",
      "bio": "Basic and advanced concepts of C programming on Windows, Linux, or Mac OS. Project-based with pointers and linked lists.",
      "objectives": [
        "Start developing a full-fledged C program for his or her specific needs within a matter of a day or two, as the course is kept short yet practical, on the lines of a corporate training program.",
        "Feel confident about programming in C and become capable of understanding advanced concepts in C and programming in general."
      ],
      "course_content": {
        "Introduction: What is our goal in this project?": [
          "About C Language",
          "Concepts covered in the first project",
          "Description of the first project",
          "How to answer quizzes",
          "How to learn thoroughly: Repeat the code yourself"
        ],
        "Task-1 of the project: Generation of 10 random numbers and storing them in files": [
          "Let's code: Generate one random number",
          "Quiz: include files & getc",
          "Intro to Variable Declarations",
          "Quiz: What are Characters?",
          "Quiz: Integer declarations",
          "Intro to Pointers",
          "Quiz: Let's peek into Pointers",
          "Function Declarations",
          "Quiz: Functions in C",
          "Scoping",
          "Quiz: Scoping",
          "More on scoping",
          "Quiz: More on scoping",
          "Arithmetic operators",
          "Quiz: Arithmetic operators: Pre and Post increment",
          "Ouput statement: printf",
          "Quiz: Printing values: Format conversions",
          "Commenting the code",
          "Quiz: Comments in a program",
          "Let's Code: Generate 10 random numbers",
          "Quiz: for-loop, test condition, constants",
          "Let's Code: Character array and string copy",
          "Quiz: Arrays and address arithmetic",
          "Let's Code: More on strings",
          "Quiz: More on strings",
          "Let's Code: File creation",
          "Quiz: Character arrays",
          "Let's Code: Writing into a file",
          "Quiz: about files"
        ],
        "Task-2 of the project: Creation of linked list": [
          "Structures and Lists",
          "Quiz: Lists and addresses",
          "Comparison of Lists and arrays",
          "Quiz: Structures, Arrays, and Lists",
          "Memory allocation: malloc",
          "Quiz: Memory allocation functions",
          "Let's Code: Defining a structure and reading from a file",
          "Quiz: More on structures",
          "Let's Code: Creation of the first list element",
          "Quiz: Initialization of globals, sizeof etc",
          "Let's Code: Creation of the 2nd list element",
          "Quiz: Variations of if-statement: ternary op and switch stm",
          "Let's Code: Creation of the n-th list element",
          "Quiz: do-while and while",
          "Why we do not use debugger now",
          "Quiz: Macro Substitution"
        ],
        "Task-3 of the project: Text file reading, String processing, memory allocation": [
          "Description of the problem",
          "Quiz: Reading from a file",
          "Array of strings & reading a line from a text file",
          "Quiz: Multidimensional arrays",
          "Let's Code: add a string array and read from a file",
          "Quiz: file write, termination of a program",
          "isspace and isalpha",
          "Quiz: Characters, structures: more review",
          "Let's Code: get first word from line",
          "Quiz: Code Review: Fix a bug",
          "Let's Code: Fill in the string field in the structure element",
          "Quiz: scoping, function pointer, sizeof",
          "Let's Code: Task-3 completion, compile and run",
          "Quiz: NULL, EOF, continue, break"
        ],
        "Task-4 of the project: Sorting linked list in ascending order based on numbers": [
          "Description of the task: Sorting the list in ascending order",
          "Quiz: Linked list",
          "Let's Code: Sorting in ascending order",
          "Quiz: More on linked lists",
          "Let's Code: Inserting a node in the list",
          "Quiz: Some more on linked lists",
          "Let's Code: Task-4 completion, compile and run",
          "Quiz: memory access, pointers"
        ],
        "Task-5 of the project: Sorting linked list in descending order based on strings": [
          "Description of the task: Sorting the list in descending order",
          "Quiz: Conditional compilation",
          "Let's code: Sorting in descending order",
          "Let's code: Completion of task-5, compile and run",
          "Quiz: More on linked list",
          "Quiz: Some more new concepts"
        ],
        "Command-line arguments": [
          "Let's code: A quick demo of using command-line argument",
          "What are command-line arguments?",
          "Let's code: Using command-line arguments in code"
        ],
        "Compiling the code using gcc compiler": [
          "Demo of using gcc to compile the code on cygwin"
        ],
        "Where do you want to go from here?": [
          "Future additions and possibilites",
          "Conclusion"
        ]
      },
      "requirements": [
        "Familiarity with some programming language is preferrable, but not mandatory",
        "A copy of the book \"The C Programming Language\", Second Edition, by Brian W. Kernighan and Dennis Ritchie is mandatory",
        "A spirit of adventure is absolutely necessary."
      ],
      "description": "This is a course that respects the smartness in you. If you don't like the course, there is always the 30-day money-back guarantee.\nNoteworthy comments by learners:\nI really liked the fact that this course is not as slow as most programming courses which get boring after a little while...All in all it was a fun and awesome course, I will for sure be following other courses from the same teacher --Alessandro Bassi\nA good Place to learn C basics...course gives huge opportunity to know ones weakness in C programming. A consecutive lecture and quiz series gives one consolidated approach -- Akash Saxena\nThis course introduces several components of basic C programming that you will apply in your real-world projects. It focuses purely on traditional C language without any OS specific dependencies. So, this course can be followed by any Windows, Mac OS, or Linux user.\nThis course is designed to teach C programming through small classroom projects, in an informal way. Both the basic and advanced topics including the difficult ones like string handling, files, structures, pointers, linked lists, and command-line arguments are covered.  There are also over a 100 questions grouped into 37 quizzes to reinforce the concepts.\nCourse Highlights\nFocus towards the way a C program is written in a real-world project.\nSlightly fast paced and rigorous, yet easily doable.\nCover as many concepts as possible in a single yet simple program.\nAlmost each lecture is clubbed with questions to reinforce basic concepts.\nConstant additions and updates to content\nCourse Objectives\nMake the student capable of writing a new C program from scratch on his own.\nMake the student comfortable in dealing with difficult concepts like pointers and linked lists.\nFamiliarize the student with as many basic features of C as possible.\nMake the student get comfortable referring to the C Programming Language book by Brian Kernighan and Dennis Ritchie. The book is popularly known as the Bible of C.\nMake the student feel happy, self-confident, and accomplished.\nThis is an evolving course. Future additions to the course could be based on the what the students want to learn next, apart from more additions to the fundamental concepts.\nLearning C is a life-changing experience. After you learn C thoroughly, you can never ever become a bad or mediocre programmer in your career.",
      "target_audience": [
        "Anybody who is interested in programming should take this course.",
        "If you already know C language, this is a great refresher course that you'll thoroughly enjoy",
        "Any fresher who is aspiring to attend a job interview for a job involving programming in C",
        "This course could also be used as part of corporate training program. The course in its current form would span just a day or two for a dedicated student to pick up the fundamentals of C.",
        "This course could also be used as a starting point for those aspiring to become device driver writters, embedded systems programmers, arduino enthusiasts, coders on linux, Objective-C starters, and the like, which are highly C intensive."
      ]
    },
    {
      "title": "Learn to Code with C# by Creating 7 Complete Apps .",
      "url": "https://www.udemy.com/course/learn-to-code-with-c-by-creating-7-complete-apps/",
      "bio": "Create 7 Apps from scratch using C# Step by Step.",
      "objectives": [
        "Create a digital clock",
        "Create a web browser",
        "Create your own version of google maps",
        "Create a music player",
        "Create a screen saver",
        "Create a ping pong game",
        "Create a currency converter"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of how computer works",
        "Basic understanding of navigating the internet"
      ],
      "description": "C# is a modern programming language developed by Microsoft.  This course is  hands-on practical from start to finish.  C#  project based course for  beginners course (pronounced C Sharp). C# is designed to be a simple, modern, general-purpose, object-oriented programming language, borrowing key concepts from several other languages, most notably Java..\nC# is an Object Oriented language and does not offer global variables or functions. Everything is wrapped in classes, even simple types like int and string, which inherits from the System.Object class.\nThe course begins by showing you how to download and install Visual Studio community edition which is a free software package available from Microsoft,\nin a step-by-step manner. Visual studio is referred to as an integrated development environment (IDE) and contains everything you need to start your creativity going by\nfollowing in creating 7 complete and useful projects step by step.\nIn this course I will walk you through how to create  the following 7 beginner c # projects:\nDigital Clock\nCurrency Converter\nWeb browser\n2D Ping Pong game\nScreen Saver\nMusic Player\nGoogle Map\nThe best way to learn any new programming is by creating various things with it. By the end of this course you would have acquired some skills to create more related type of projects.",
      "target_audience": [
        "Beginner programmers",
        "Beginner developers"
      ]
    },
    {
      "title": "The complete Python course including Django web framework!",
      "url": "https://www.udemy.com/course/learn-python-and-django/",
      "bio": "Learn how to write Python and Django even if you've never written code before.",
      "objectives": [
        "Beginner Python (even if you've never coded before)",
        "Intermediate Python",
        "Advanced Python",
        "OOP Python (Object Oriented Python)",
        "Django",
        "Class based views in Django"
      ],
      "course_content": {},
      "requirements": [
        "Must have a computer and keyboard (sorry, no phone keyboards allowed)",
        "Must be willing to ACTUALLY learn. This course is GEARED towards learning and has a task for you to do at the end of almost every lesson."
      ],
      "description": "Learn how to program with Python. Learn how to make Python-based websites with Django.\nWho uses Python?\nJust about everybody. Python is the 3rd most popular programming language in the world. It's SIGNIFICANTLY more popular than JavaScript!\nPretty much everybody is using Python these days. Google, Netflix, Facebook, your local web development shop... everyone!\nIt makes sense to learn Python because there's a lot of demand for it.\nWho uses Django?\nLOADS of organizations use Python. From Nasa, Google and Mozilla, to HUGE websites like Pinterest, Instagram, Dropbox, and Disqus.\nSo why should you learn Django? Because there's HUGE demand for it, it's incredibly popular, powerful and secure.\nWhy learn from Kalob Taulien? (that's me!)\nI've been writing Python and Django for a number of years now. I'm on the core Wagtail CMS team (Wagtail is Python's #1 most popular content management system) and I'm one of the core leaders in Wagtail-based education. 100% of all my hobby projects use Django these days and I'm a professionally paid web contractor who writes Django. I also like to automate my daily tasks using Python.\nIs this course for you?\nBetter question: is this course NOT for you? I'm only interested in teaching folks who want to learn Python and Django. I answer every question I get in all of my courses and I'm seeking students who are willing to work hard, do the tasks that are at the end of every lesson, and create the 4 main projects in this course.\nWhat are the projects?\nRock, paper, scissors written in Python. You'll play against the computer.\nA Pokemon character lookup tool written in Python using an API.\nA banking application to keep track of deposits and withdrawals, written in Python.\nAn Instagram clone written in Django.\nA Twitter clone written in Django.\nWhat are the tasks?\nTasks are small \"try it out\" pieces of homework found at the end of almost every single lesson in this course. The idea is that you watch me write some code, and then you try to do the same for some real experience. Sometimes the tasks are small, sometimes the tasks are big.\nMake sure you set aside about 5 extra minutes for every lesson to start and finish every task.\nIs the source code included?\nOf course it is! Feel free to steal any of my code and use it anyway you like!",
      "target_audience": [
        "New web developers",
        "Junior Python developers",
        "Advanced Python developers who want to learn Django",
        "Web developers who want to learn Python and/or Django"
      ]
    },
    {
      "title": "R Programming for Data Science and Machine Learning",
      "url": "https://www.udemy.com/course/r-programming-for-beginners-and-newbies/",
      "bio": "R Programming course for newbies. R installation, data types, statements, functions, conditions, packages, data frames.",
      "objectives": [
        "End-to-end knowledge on R programming language",
        "Become an R Programmer from scratch",
        "R Introduction & Installation",
        "R Data Structures",
        "R Data Types, R Packages",
        "Build a Calculator using R",
        "Condition Statements, Looping, Repeat Statements in R",
        "Sum of N natural numbers, Sum Recursion",
        "Switch Statement, Functions, Factors in R",
        "Data Preprocessing and Dataframes in R",
        "Data Reshaping",
        "R Math built-in Functions",
        "Melting and Casting in R"
      ],
      "course_content": {},
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the R Programming for Beginners course by Uplatz.\n\n\nR is a programming language regularly used for arithmetical computing and graphical demonstration to examine and visualize data. R is a software environment which is used to analyze numerical data and graphical representation. R lets us to do sectional programming using functions. R programming language was named R, founded on the first name letter of the two authors - Robert Gentleman and Ross Ihaka. An overall understanding of R should cover topics such as introduction, features, installation, RStudio ide, variables, datatypes, operators, if statement, vector, data handing, graphics, statistical modelling, etc. R not only allows us to do branching and looping but also allows to do modular programming using functions. R allows integration with the procedures written in the C, C++, .NET, Python, and FORTRAN languages to improve efficiency.\nR is one of the most significant instrument which is used by investigators, data analyst, statisticians, and marketers for retrieving, cleaning, analyzing, visualizing, and presenting data. R is available for Linux, MacOS, and Windows. R's binary and logical operators will look very acquainted to programmers. R can be used to compute a large variety of classical statistic tests. With R, it’s also possible to perform classification analysis such as Principal component analysis and clustering. Many types of graphs can be drawn using R, including, box plot, histogram, density curve, scatter plot, line plot, bar plot, etc.\n\n\nR Programming for Beginners - Course Syllabus\nIntroduction to R Language\nR Installation\nR Data Structures\nR Data Types\nR Packages\nSimple Calculator using R\nR as a Calculator\nCondition Statements in R\nLooping in R\nRepeat Statement in R\nSum of N Natural Numbers\nSum Recursion\nSwitch Statement in R\nData Pre-processing\nFunctions in R\nFactors in R\nData frames in R\nData Reshaping\nR Math built-in Functions\nMelting and Casting in R",
      "target_audience": [
        "Beginners and newbies in Programming (R, Python)",
        "Anyone aspiring for a career as Software Developer / Programmer",
        "R & Python Programmers",
        "Data Scientists - Python/R Programming",
        "Data Analysts and Data Visualization Developers",
        "Technical Consultants",
        "Data Engineers - R, Big Data",
        "R Developers",
        "Application Developers",
        "Software Consultants",
        "Machine Learning Engineers - R, Python",
        "Data Science Engineers",
        "Software Engineers & Developers",
        "Analytics Professionals",
        "Statisticians and Researchers"
      ]
    },
    {
      "title": "R Programming for Data Science",
      "url": "https://www.udemy.com/course/r-programming-for-beginners-hands-on-tutorial/",
      "bio": "Learn R Programming Fundamentals, Data Wrangling, Data Visualization for Data Science",
      "objectives": [
        "Fundamentals of R Programming",
        "Work with RStudio",
        "Use Vectors, Matrices, Lists, Data Frames",
        "Importing and Handling Large CSV files Data in R",
        "Import packages in R & use dplyr Package for Data Wrangling",
        "Create Data Visualization in R",
        "Using R for Basic Statistical Data Analysis"
      ],
      "course_content": {},
      "requirements": [
        "No prior knowledge or technical backgrounds is required"
      ],
      "description": "Welcome to this course of R Programming for Beginners with the hands-on tutorial, and become an R Professional which is one of the most favoured skills, that employer's need.\n\nWhether you are new to programming or have never programmed before in R Language, this course is for you! This course covers the R Programming from scratch. This course is self-paced. There is no need to rush - you learn on your own schedule.\nR programming language iѕ one of the best open-source programming language and more powerful than other programming languages. It iѕ well documented and has a clean syntax and quite еаѕу tо lеаrn.\nThis course will help anyone who wants to start a саrееr in Data Science and Machine Lеаrning. You need to have basic undеrѕtаnding оf R Programming to become a Data Scientist or Data Analyst.\nThis course begins with the introduction to R course that will help you write R code in no time. Then we help you with the installation of R and RStudio on your computer and setting up the programming environment. This course will provide you with everything you need to know about the basics of R Programming.\nIn this course we will cover the following topics:\nBasics of R Programming including Operators\nFundamentals of R Programming\nVectors, Matrices, Lists\nData Frames\nImporting Data in Data Frames using Text and CSV files\nData Wrangling using dplyr package\nData Visualization\n\n\nThis course teaches R Programming in a practical manner with hands-on experience with coding screen-cast.\nOnce you complete this course, you will be able to create or develop R Programs to solve any complex problems with ease.",
      "target_audience": [
        "Beginner who wants to learn R Programming"
      ]
    },
    {
      "title": "Python for Red-Blue Teams from Scratch 2022",
      "url": "https://www.udemy.com/course/python-for-red-blue-teams/",
      "bio": "Learn & Review Modern Python for Red Teams & Blue Teams. Many courses in one.",
      "objectives": [
        "Based on Latest Changes",
        "Based on Newest Materials",
        "Real-World Examples",
        "Starting from 0 Level",
        "Write programs in Python 3",
        "Windows Security Components",
        "Windows Security Features",
        "Understand Object Oriented Programming",
        "Windows API Calls",
        "Documented API Calls",
        "Anti-Virus Evasion",
        "Sandbox Evasion",
        "Code Injection",
        "Virtual Machine Detection",
        "Blue Team",
        "Security Operation Center (SOC)",
        "Log file Analysis",
        "Windows Log files",
        "Linux log files",
        "Backup log files",
        "Use Python modules and libraries",
        "Socket Programming",
        "Analyze HTML using Python",
        "Interact with websites using Python",
        "Interact with files using python",
        "Write object oriented programs",
        "HTTP protocol",
        "Socket Programming",
        "Regular Expression",
        "Web Scraping",
        "Clean Code Programming"
      ],
      "course_content": {
        "Fundamentals": [
          "Introduction",
          "Python",
          "Primitive Data Types",
          "Strings",
          "Lists",
          "Tuples",
          "Ranges",
          "Dictionaries",
          "Sets & Frozensets",
          "Operators",
          "Flow Control",
          "Loops",
          "Functions",
          "Exceptions",
          "Files",
          "OOP",
          "Module"
        ],
        "Advanced": [
          "HTTP",
          "Socket",
          "Regex",
          "Web Crawling",
          "Clean Code"
        ],
        "Python for Red Teams": [
          "Windows Security Components",
          "Windows API Calls",
          "Anti-Virus Evasion",
          "Sandbox Evasion",
          "Python Code Injection",
          "VM Detection"
        ],
        "Python for Blue Teams": [
          "Blue Teams and Security Operation Center (SOC)",
          "Log File Analysis",
          "Backup Logs"
        ]
      },
      "requirements": [
        "\"Complete Real-World Ethical Hacking 2022\" course",
        "Operating System: Windows"
      ],
      "description": "Welcome to this comprehensive Python for Red-Blue Teams course...!\nThis course assumes you have NO prior knowledge in any of these topics. but you must complete the previous course\n(Complete Real-World Ethical Hacking 2022 ) before you start this amazing course...!\nThis course is practical but it won't neglect the theory. You'll learn everything Practically such as use Windows API Calls for\nBypassing Anti-Virus, Sandbox Evasion, etc. and you will never waste your time theoretical lectures\n\nThis course is divided into 4 main sections like previous course ( Complete Real-World Ethical Hacking 2022)\n\n1- Python Fundamentals\nIn this Section, you will Learn Core concepts of the Python programming language.\n\n2- Advanced Python\nIn this Section, you will Learn Advanced concepts of the Python programming language.\n\n3- Python for Red Teams\nin This section, You will learn how to use python as an Offensive programming language\n\n4- Python for Blue Teams\nin This section, You will learn how to use python as a Defensive programming language\n\nAll the techniques in this comprehensive course are highly practical and at the end of this course, expected you to become an expert in Python programming language for Red Teams and Blue Teams\n\nNotes :\nThis course is created for educational purposes only. all the attacks are launched in my own lab. This course is a product of Hamed Mehdi and no other organization is associated with it or a certification exam but you will receive a Course Completion Certification from Udemy",
      "target_audience": [
        "Python programmers",
        "Security programmers",
        "Red Teams Hackers",
        "Blue Teams",
        "Ethical Hackers",
        "Penetration Testers",
        "Security Engineers",
        "people who want to learn advanced Ethical Hacking concepts"
      ]
    },
    {
      "title": "Create Advanced & Modern User Interface In JavaFX",
      "url": "https://www.udemy.com/course/android-material-design-clone-for-javafx-create-pretty-app/",
      "bio": "Learn Javafx Development From Scratch - Build Material Design Apps - Learn UI/UX and Become Expert",
      "objectives": [
        "You will learn how to design a professional application from zero to be expert .",
        "Design  a pretty Stepper Touch , Ripple Background , Side Menu , Navigation Drawer , RecyclerView .....ect",
        "Learn the very important MVC-Pattern",
        "Use advanced javafx animation",
        "Use Jfoenix material design library",
        "Use Kairos material design library",
        "Create awesome user interfaces that will impress everyone"
      ],
      "course_content": {},
      "requirements": [
        "You should have worked with Object Oriented Programming (OOP) by java"
      ],
      "description": "Create professional and visual appealing software in very short time. Realise your software idea\nJavaFX is a fantastic GUI-Framework for Java, by Oracle. JavaFX lets you realise and publish your software dream very quickly. The software can easily be exported for Mac OS, Windows or Linux.\nThis course is of highest quality! No uhms, no blurry picture. Professional equipment was used to record the videos of this course.\nWhat will you learn?:\nCreate awesome user interfaces that will impress everyone\nUser Jfoenix & Kairos material design library\nUse CSS to create user interfaces\nLearn the very important MVC-Pattern\nGet Familiar with Java programming,\nDesign  a pretty Stepper Touch , Ripple Background , Side Menu , Navigation Drawer , RecyclerView .....ect\nYou will learn how to design a professional application from zero to be expert .\nDevelop the GUI of your application independently of the application logic. This makes updating at a later time very flexible. The GUI is created in XML and can be integrated into the application independently. This is a superior technology that is only rising in popularity now!\nYou will also learn how to integrate data in the program with the object model. This touches Object Oriented Programming. I will not specifically teach OOP, but if you follow what I show you, you will understand it easily.\nEVERYONE CAN LEARN TO CODE",
      "target_audience": [
        "Everybody who wants to create own software",
        "Developer who want to create a complete pretty design for his javaFX application .",
        "People who want to produce the highest-quality, creative software",
        "People looking to go from absolute beginner to advanced Javafx expert"
      ]
    },
    {
      "title": "Python in 5 Hours: A Comprehensive Crash Course in 2024",
      "url": "https://www.udemy.com/course/python-in-5-hours/",
      "bio": "Master Python fundamentals via 10 real-world projects and add Python proficiency to your professional skillset",
      "objectives": [
        "Understand the fundamentals of Python programming language",
        "Write Python code to solve simple problems and perform common programming tasks",
        "Add Python proficiency to your resume, opening doors to potential career opportunities",
        "Utilize popular Python libraries for diverse applications"
      ],
      "course_content": {},
      "requirements": [
        "A computer - Windows, Mac, or Linux. All set-up and installation instructions are included",
        "Basic English and math (addition, subtraction, multiplication, division). This course intuitively applies these basic concepts to create powerful programs!",
        "Desire to learn this in-demand skill!"
      ],
      "description": "Why This Course?\nThis course provides you with everything you need to know about the fundamentals of programming in 5 hours. This no-fluff approach is perfect for new programmers who want to journey into programming.\n\n\nThis guide is the perfect stepping stone in figuring out  what you want to do with the skill. Once your fundamentals are well-grounded, you can then go on to take a targeted course in a more advanced branch - Machine Learning, Data Science, Web Scraping, the possibilities are endless!\n\n\nPython is an up-and-coming skill used in world class companies such as Google, Facebook and Netflix. Python coders return an annual income of > $100,000. Python is one of the easiest languages to pick up, yet once mastered, it is a powerful language applicable nearly anywhere!\n\n\nOverview of Content\nCourse tailored to gradually build on the concepts you learn \"bit by bit\" as you progress. First learn about variables and data types, followed by how to store them in lists and dictionaries. Then, learn how to loop through these dictionaries and lists and finally apply all these concepts to design functions and classes that serve as mini robots that can perform specific tasks.\n\n\nThis \"bit-by-bit\" approach ensures that you get a lot of practice in continuously applying what you learnt so it sticks with you and will be at your fingertips when you venture further into the world of coding after this 5-hour course.",
      "target_audience": [
        "Beginners with no previous programming experience",
        "Newer Python programmers who want to have a well-structured guide for quick and easy refreshers on any fundamental Python concept",
        "This course is not for experienced programmers!"
      ]
    },
    {
      "title": "Introduction to Object Oriented Programming",
      "url": "https://www.udemy.com/course/introduction-to-object-oriented-programming-q/",
      "bio": "Demystifying OOP Fundamentals",
      "objectives": [
        "Students will understand the basic philosophy of the POP methodology",
        "Students will understand the philosophy of the OOP methodology",
        "You would be in a position to learn C++, Java or similar OOP based programming languages",
        "If you are just looking into the realm of coding or programming, then this is one of the first courses you need to take.",
        "It will help you understand the differences of the OOP and POP “Methodologies” and ultimately which is best for you."
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic understanding of computers, and know the fundimentals of programming",
        "You should have sufficient hands on experience of programming"
      ],
      "description": "Here are just some of the items covered in this course.\nWe will talk about the history of “OOP” Object Oriented Programming and “POP”, Procedural Oriented Programming. We will look deep into the origins of OOP and why it is such a powerful “Methodology” in the world of programming and software development. This course will show you the differences in POP and OOP, the benefits of one over the other, Why would you use POP instead of OOP. Why and where you should use OOP instead of POP, etc.. We will teach you how to start thinking of your programming in terms of “objects” with classes, instead of a traditional “Top Down” programming approach. When we sit down to write an application or a program, it is helpful to think about the process in terms of “Abstracts” and “Objects”. We live in a world of objects, Everything is an object and that is why we should look at our programming in terms of “Objects” as well. We will study the importance of “Objects” and how they interact with other objects around them, and that is the foundation of this introduction to OOP course.",
      "target_audience": [
        "Those interested in learning a programming language but not sure which one.",
        "Those who want to know how OOP relates with the real world",
        "If you don't really know or understand the terminology of Object Oriented Programming",
        "This course is a mandatory course for anyone who is interested in becoming a software programmer or someone who is already a programmer but doesn’t quite understand “WHY” things are done and how to perform them properly when it comes to coding and writing applications."
      ]
    },
    {
      "title": "Introduction to jQuery Web Development",
      "url": "https://www.udemy.com/course/web-development-introduction-to-jquery/",
      "bio": "Explore how you can easily add advanced functionality to your web projects by adding jQuery. JQuery for web development",
      "objectives": [
        "add jQuery to web projects",
        "use jQuery to create interactive content",
        "use jQuery to create dynamic web pages",
        "create modern websites with advanced functionality"
      ],
      "course_content": {
        "Learn about jQuery": [
          "Introduction to jQuery",
          "What is jQuery and why do we use it",
          "Getting Started with jQuery",
          "jQuery Selectors",
          "Each value from mulitple selector elements",
          "Updating elements via jQuery",
          "Source Code Selectors HTML",
          "CSS selectors and jQuery selectors",
          "Introduction to event binding",
          "Event Listeners jQuery Mouse Events",
          "Source Code Events",
          "Keyboard event triggers",
          "Source Code keyboard events",
          "Resize and Scroll event listeners on window object",
          "Source Code Windows Object",
          "Finding input values from form jQuery",
          "jQuery Traversing elements",
          "Select elements from HTML content",
          "Source Code Selection",
          "jQuery working with CSS",
          "Source Code CSS",
          "Hide and Show page sections",
          "jQuery effects Fading",
          "Source Code Effects",
          "JQuery Sliding Effects",
          "jQuery Animate",
          "Source Code",
          "jQuery AJAX made easy JSON and more",
          "Loading data into HTML via jQuery",
          "jQuery AJAX get getJSON",
          "AJAX with jQuery",
          "Source Code",
          "jQuery conclusion",
          "Resources jQuery"
        ],
        "New jQuery Snippets": [
          "using map and each within jQuery",
          "Source Code Map"
        ],
        "Bonus Section": [
          "Bonus Lecture",
          "Bonus Educational Resources: Downloadable Content, Practical Examples"
        ]
      },
      "requirements": [
        "Basic HTML and JavaScript",
        "desire to learn",
        "computer access"
      ],
      "description": "jQuery is easy to add to your websites and can provide really powerful advanced functionality.\nLearn how to make your web content dynamic.  jQuery is perfect for connecting your HTML elements with script.   Let your HTML come to life, change the content that is displayed using jQuery.  It brings life into boring old static HTML pages, and makes them dynamic.  Access all of your page elements and let you imagination guide you as to what you want to happen.   Users are expecting more, and within this course we show you how you can deliver using jQuery.\nBring data into your webpages dynamically and use that data to create better user experiences. Customise the user experience as you use data to make HTML dynamic.  No page reloads, it updates your page content.  Making AJAX calls easy, bring in data and use it in your code.  One of the easiest ways to create AJAX calls is with jQuery.  This course shows you the options for retrieving external file data and pulling it into your code to use within  your web pages.\njQuery also makes animations of HTML elements  easy, with just a few lines of code that can move and create awesome effects on any HTML element.  You won't believe how easy it is to create amazing effects with jQuery.   This course covers, hide/show, fading, sliding effects and animate.\nLearn to select your HTML elements and let jQuery make them shine. This course covers everything you need to know to get started with jQuery.\nStep by step learning\nHD quality videos\nSource code included\nTop resources and tips for using jQuery\nProfessional instruction from an instructor with over 18 years experience.\nLet jQuery simplify the process of adding advanced functionality to your web pages.\n\nExplorer how jQuery works\nSee how to add dynamic functionality to your page elements\nLearn about updating HTML content\nUse events to create user interaction\nTraverse the HTML content to better select desired elements\nCreate animations and cool effects\nDiscover how to load data into your webpage via AJAX calls\nI'm here to help you learn how to use jQuery, and ready to answer any questions you may have.\njQuery is in demand used across many of the top websites today. Learning to use jQuery can set  you apart.   Want to know more, join now to start learning about jQuery today.",
      "target_audience": [
        "web developers",
        "web designers",
        "anyone who wants to learn how to create websites",
        "JavaScript developers"
      ]
    },
    {
      "title": "Cloud-Native Applications in Java",
      "url": "https://www.udemy.com/course/cloud-native-applications-in-java/",
      "bio": "Build highly scalable microservice-based applications with Java for the cloud",
      "objectives": [
        "Create Docker containers for microservices and set up continuous integration with Jenkins",
        "Monitor and troubleshoot applications in the cloud",
        "Use Docker and Kubernetes for containerization",
        "Perform log aggregation and visualization with the Elasticsearch, Logstash, and Kibana (ELK) stack",
        "Explore a variety of XaaS APIs and build your own XaaS model",
        "Migrate from a monolithic architecture to a cloud-native deployment"
      ],
      "course_content": {},
      "requirements": [
        "Some knowledge of Java, Spring, web programming and public cloud providers such as AWS and Azure will be useful to get the most out of this course."
      ],
      "description": "Businesses today are rapidly evolving and cloud-native applications are now needed more than ever before. To build these types of applications, you must be able to determine the right environment, tools, and resources.\nThis course is designed to help you get to grips with all the concepts and techniques you need to build secure, robust, and scalable applications for cloud-based deployment. The course begins by explaining the driving factors behind cloud adoption and how cloud deployment is different from regular application deployment. You’ll learn about design patterns specific to apps running in the cloud, and discover how you can build a microservice in Java Spring using REST APIs. Next, you’ll focus on how to build, test, and deploy applications with maximum automation to reduce the deployment cycle time. A dedicated section will then guide you through configuring the Amazon Web Services (AWS) and Azure platforms and working with their APIs to deploy your apps. Toward later chapters, you’ll understand how to write efficient code by exploring API design concerns and their best practices. Finally, you’ll learn to migrate an existing monolithic app to a distributed cloud-native app.\nBy the end of this course, you’ll have learned how to confidently build and monitor a cloud-native application that is highly available and fault tolerant.\nAbout the Authors :\n\nAjay Mahajan is a distinguished member of technical staff (DMTS) at Wipro Technologies and currently is in the role of chief technologist of the retail vertical. In his current role, he helps customers adopt cloud-native and digital architecture for next-generation retail applications. He worked with retail and banking clients in Europe and the USA on large-scale mission-critical systems. He has seen the evolution of enterprise Java from the Netscape Application Server to servlets/JSP, JEE, Spring, and now the cloud and microservices during the course of 19 years of working on Java platform.\nMunish Kumar Gupta is a lead system architect with Visa. Based in Bangalore, India, his day-to-day work involves solution architectures for applications with stringent non-functional requirements, application performance engineering, managing application infrastructure, and exploring the readiness of cutting-edge, open-source technologies for enterprise adoption. He is the author of Akka Essentials. He is very passionate about software programming and craftsmanship. He blogs about technology trends, application performance engineering, and Akka.\n\nShyam Sundar is a senior architect with Wipro Technologies based in Bangalore. He is part of the Emerging Technologies Architecture group within Wipro. He is responsible for helping teams adopt new and emerging technologies in their projects. He focuses primarily on the client-side and cloud technologies. He is a lifelong learner who cares deeply about software craftsmanship. He is constantly experimenting with new tools and technologies to improve the development experience.\n\nAnirudh has multiple years of experience developing in languages such a Python, HTML, and of course Java. Over the years he has implemented the ideas ranging from the basics to more complex paradigms, and have acquired a bounty of knowledge that he loves to share. He spends multiple months preparing his courses and enjoys teaching those new to the Computer Science field as well as those who are more experienced. He has been teaching for a couple of years now, and it's his primary passion. Hopefully, you enjoy his courses as much as he enjoyed making them!",
      "target_audience": [
        "This course is for Java developers who want to build scalable applications for the cloud."
      ]
    },
    {
      "title": "Build an NBA Fantasy Projection Model in Python with Pandas",
      "url": "https://www.udemy.com/course/build-a-nba-fantasy-projection-model-in-python-with-pandas/",
      "bio": "Learn the Fundamentals of Pandas using NBA Stats",
      "objectives": [
        "How to build a fantasy basketball projection model in a Jupyter Notebook",
        "Pandas library basics for data analysis & data manipulation",
        "Fundamentals of the Python programming language",
        "How to win your fantasy league using value based drafting"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "Installation",
          "Virtual Environments",
          "Modules & Packages",
          "Resources"
        ],
        "Jupyter Notebook": [
          "Setting Up Jupyter Notebook",
          "Cell Types & Kernels",
          "Running Code",
          "Resources"
        ],
        "Python Fundamentals": [
          "Python Overview",
          "Importing Modules",
          "Printing",
          "Variables & Raw Input",
          "Lists",
          "Dictionaries",
          "For Loops",
          "If Else Statements",
          "Functions",
          "Arrays",
          "Resources"
        ],
        "Pandas Building Blocks": [
          "Pandas Intro",
          "Dataframes & Series",
          "Creating a Dataframe",
          "Reading a CSV File",
          "Attributes & Methods",
          "Selecting Columns",
          "Adding & Deleting Columns",
          "Renaming Columns",
          "Selecting Rows",
          "Adding & Dropping Rows",
          "Inplace Parameter",
          "Sorting Dataframes",
          "Filtering Dataframes",
          "Groupby",
          "Concatenate & Append",
          "Merging & Joining",
          "Iterating Over Dataframes",
          "Applying Functions",
          "Arrays",
          "Resources"
        ],
        "Building Our Model": [
          "Projection Model Overview",
          "Cleaning NBA Data",
          "Normalizing Season Data",
          "Player Distance Function",
          "Find Player Function",
          "Calculating Player Similarity",
          "Comparing Multiple Players in a For Loop",
          "Weighting Stat Columns",
          "Weighted Avg. Using Multiple Players Next Season",
          "Player Comparison Function",
          "Projecting 2018-19 Season Stats",
          "Resources"
        ],
        "Measuring Our Model": [
          "Using RSME to Evaluate Our Model",
          "Comparing to Competitors Pt. 1",
          "Comparing to Competitors Pt. 2",
          "Adjusting Variables",
          "Resources"
        ],
        "Winning Your Fantasy League": [
          "Converting to Fantasy Points",
          "Value Based Drafting",
          "Getting Our Baseline Numbers",
          "Draft Preparation",
          "Wrapping Up & Model Blind Spots",
          "Resources"
        ]
      },
      "requirements": [
        "Ability to get around the terminal window",
        "Basic understanding of Python programming language",
        "macOS operating system (sorry Windows users)",
        "Passion to learn!"
      ],
      "description": "What is this Course?\nLet me start off by saying that my first love has always been the NBA and my second love is coding. As such, I think this class will be a lot of fun for passionate NBA fans who also happen to be aspiring coders. This is the premier Udemy class out there that uses strictly NBA stats as data to help wrap your head around concepts in the python programming language.\nWhile I have found it helpful to read textbooks and watch online tutorials to get a better understanding of the basics for any subject, nothing beats project-based learning. Actually getting your hands dirty and running into real problems that require specific solutions has been my ideal way to learn something new.\nWith that being said, the hardest question typically is, what project should I focus on? From my personal experience, I’ve found it beneficial to focus on something you are passionate about. To find that something, just think of what you frequently pay attention to in your spare time, when no one is paying you...to pay attention to it. For me, that something is the NBA. I’m a proud subscriber to League Pass. It didn’t take long for me to realize that using NBA stats was going to be the best way for me to learn how to code.\n\"For one, sports has served as an entry point to data analysis for many. Sports is interesting and has great data relative to other fields, so it can teach skills and methods of thought that are then more broadly applicable. Personally, I learned how to program, a skill that has been enormously valuable to me, specifically to analyze basketball stats. And I'm far from the only story like this.\" -Ben Falk, Cleaning The Glass\nThe Project\nUsing the NBA to learn how to code sounds like a good start, but it it still missing a key piece to turn it into an actual project. That key piece is a goal. Tiago Forte defines a project as, “a series of tasks linked to a goal, with a deadline.”\nSo what is our goal? Well, for those of you that have played fantasy basketball before, you may have learned how important the draft is. Your team’s success is often times linked directly to your success in the draft. And your success in the draft is often linked to how effectively you can project player stats for that upcoming year. If you know Lebron James is going to score more fantasy points than Anthony Davis then you will want Lebron James on your fantasy team.\nAfter blindly turning to the internet for many consecutive years to use projection models that weren’t made by the oafs at ESPN or Yahoo, it dawned on me that said models had to come from someone’s brain. My thinking from there was, “what’s stopping me from building my own projection model?”\nAlas! We have our class project! We are going to build an NBA Fantasy Projection model so you can win your NBA Fantasy League! And how will we do that? By learning to code!\nWhat Will You Learn?\nThis is another reminder that everything I’ve done to date has been a combination of self-teaching and learning from a friend who also happens to be a talented engineer.\nFor our purposes, we are going to focus on Python. I’ve been hooked on it ever since I took the class Automate the Boring Stuff with Python. It's undoubtedly a popular programming language so I think it will be beneficial for many years to come.\nThis class is not meant to be an introduction to programming or python, so my assumption is that you understand some basics. This class is geared more towards helping you apply Python programming to an actual project to help you better retain information while having fun within the process.\nSince this class is primarily focused on data (in the form of NBA stats), we will need to manipulate the data in various ways. To help with this, we’ll use the Pandas library. Pandas is extremely powerful and can be used in more ways than just building NBA fantasy projection models so I think you will find it extremely helpful to learn more about.\nIn his book, Jake VanderPlas describes Pandas as, “a newer package built on top of NumPy, and provides an efficient implementation of a DataFrame. dataFrames are essentially multidimensional arrays with attached row and column labels, and often with heterogeneous types and/or missing data. As well as offering a convenient storage interface for labeled data, Pandas implements a number of powerful data operations familiar to users of both database frameworks and spreadsheet programs.” Said another way, Pandas is SQL and Excel on steroids!\nBy the end of this course you will be ready to win your NBA fantasy league by building the best fantasy projection model using Python and more specifically Pandas. All of this will be done using a Jupyter Notebook so you can share your work and improve on it over the years.",
      "target_audience": [
        "Beginner Python Programmers looking to learn the Pandas library",
        "NBA Fantasy Basketball Players"
      ]
    },
    {
      "title": "C++ for Beginners",
      "url": "https://www.udemy.com/course/cpp-for-beginners/",
      "bio": "Create Code That Screams with C++! Hours of Video Lecture, Lab Exercises and Dozens of Code Samples for You To Use!",
      "objectives": [
        "Learn to Set up Your Development Environment",
        "Learn to Execute C++ Code",
        "Learn To Debug Your Code",
        "Understand the Role of Variables",
        "Be able to use Variable Data Types",
        "Be Able to Output to the Standard Error Stream",
        "Learn To Cast Data Types",
        "Learn to Format Output",
        "Learn to Take and Process Console Input",
        "Understand and Use Source Comments",
        "Be able to use Assignment Operators",
        "Identify and Use Compound Operators",
        "Use Comparators and Logical Operators",
        "Understand and apply Operator Prescedence",
        "Create Simple and Complex Conditionals with If",
        "Use the Switch Statement",
        "Use the Ternary Operator",
        "Create While Loops and For Loops",
        "Use Arrays",
        "Access Array Members with Loops",
        "Understand and use Multidimensional Arrays",
        "Learn the Role of Pointers",
        "Understand Binary Theory and it's Role in C++",
        "Create and Use Truth Tables and Binary Operators",
        "Work with Bitwise Operators",
        "Encapsulate Code in Functions",
        "Work with Header Files and Includes",
        "Understand and Use Namespaces",
        "Understand and use the STL String Library",
        "Understand Object Oriented Programming",
        "Create Classes and Objects in C++",
        "Read Text Files to Permanent Storage",
        "Store Text Files in Permanent Storage"
      ],
      "course_content": {
        "Your First Program": [
          "Where to get the IDE",
          "Creating a Project",
          "Debugging a Program",
          "Examining the Build Log",
          "Running a program",
          "Section 1 Lab Exercise"
        ],
        "Variables and Assignments": [
          "Variables and Identifiers",
          "Simple Data Type: bool",
          "Simple Data Type: char",
          "Simple Data Type: int",
          "Section 2 Lab Exercise"
        ],
        "Errors and Data Types": [
          "Outputting Errors",
          "Long and Short Data Types",
          "Casting",
          "Formatting Output",
          "Input from stdin",
          "Section 3 Lab Exercise"
        ],
        "Operators and Precedence": [
          "Understanding Comments: Useful VS Redundant",
          "Meaningful Variable Names VS Cryptic",
          "Assignment, Operators",
          "Comparators and Logical Operators",
          "Precedence",
          "Section 4 Lab Exercise"
        ],
        "Decision Making and Program Flow": [
          "The \"if\", \"else if\", and \"else\" Statements",
          "The \"case\" Statement",
          "Ternary Statements",
          "The \"Do While\" Loop",
          "The \"For\" Loop",
          "Section 5 Lab Exercise"
        ],
        "Arrays": [
          "Arrays",
          "Iterating Through Arrays",
          "Multi-Dimensional Arrays",
          "Pointers",
          "Section 6 Lab Exercise"
        ],
        "Binary Operations": [
          "Binary Theory",
          "Truth Tables",
          "Bitwise Operators",
          "Section 7 Lab Exercise"
        ],
        "Program Structure": [
          "Function Structure",
          "Header Files, Includes, and Multiple Files",
          "Program Entry Point and Namespaces",
          "Section 8 Lab Exercise"
        ],
        "STL Strings": [
          "Creating a String",
          "String Operators",
          "String Manipulation",
          "Chapter 9 Lab Exercise"
        ],
        "Classes and Objects": [
          "Objects and Inheritance",
          "Classes, Objects, Methods & Properties",
          "Encapsulation",
          "Access Modifiers and Overrides",
          "Chapter 10 Lab Exercise"
        ]
      },
      "requirements": [
        "PC or Mac"
      ],
      "description": "Have you always wanted to create console video games, but lack the basic C++ skills? Do you want to understand a more \"heavy-duty\" programming language? Do you really want to get \"under the hood\" and complete more complex computing tasks quickly? Do you simply want to advance your current skill set and learn one of the world's most popular programming languages?\nC++ is one of the most widely used languages in the world. It's used for everything from financial trading applications (where speed equals revenue!) to console video games.\nDelve into the C++ programming language with this course, C++ For Beginners, authored by expert David Pither-Patterson. David is an experienced instructor, specializing in presenting complex technical information in a manner that just about anyone can grasp. With David's help, you'll start by setting up your development environment and working your way through all the C++ fundamentals.\nIncluded in the 46 video lectures that comprise the course are dozens and dozens of code examples that you can learn from. You'll also complete engaging lab exercises that are not only fun, but specially designed to help you retain the information in the lectures.\nC++ is one of the most important languages you can learn--and there is no better way to learn it than with LearnToProgram's David Pither-Patterson!",
      "target_audience": [
        "Aspiring Game Programmers",
        "Teachers and Students",
        "Developers who Want a \"Heavy Duty\" Langauge",
        "Developers who Work in the Financial Sector",
        "Developers working with Apps that Need to Do Many Calculations Quickly",
        "Anyone who Wants to Wield the Power of C++!"
      ]
    },
    {
      "title": "The Lisp Programming Language: Learn Lisp basics in one day!",
      "url": "https://www.udemy.com/course/lisp-programming-language/",
      "bio": "Learn variables, characters, strings, loops, functions, lists, vectors, arrays and structures in Lisp from scratch",
      "objectives": [
        "Create and work with numbers in lisp",
        "Create and work with text in lisp",
        "Understand the lisp logic",
        "Work with functions in lisp",
        "Create and work with lists in lisp",
        "Work with arrays and structures in lisp"
      ],
      "course_content": {
        "Introduction to Lisp": [
          "Introduction",
          "Course expectations",
          "installing lisp",
          "installing atom",
          "Working with text",
          "numbers and truth values",
          "math operations",
          "Quick Feedback",
          "math functions",
          "string functions",
          "predicates"
        ],
        "First Program and Logic in Lisp": [
          "first program",
          "variables",
          "let and prog",
          "cond",
          "if else",
          "when",
          "case"
        ],
        "Loops in Lisp": [
          "do loop",
          "dotimes loop",
          "dolist loop",
          "loop",
          "loop for"
        ],
        "Functions in Lisp": [
          "functions",
          "optional",
          "key",
          "rest",
          "mapping functions",
          "lambda functions"
        ],
        "Lists in Lisp": [
          "cons",
          "list",
          "functions in lists"
        ],
        "Vectors and Structures": [
          "vectors",
          "structures"
        ]
      },
      "requirements": [
        "Basic Math Knowledge",
        "Familiairity with Computes Science"
      ],
      "description": "Hi and welcome to your course on Lisp Programming Language. We will go over the basic concepts of this language in this course.\nLearn the Basics of Lisp Programming Language\nNumbers\nStrings\nLisp Logic\nFunctions\nLists\nStructs\nVectors\nBeginner Lisp Course that will teach you the essentials of Lisp Language\nFirst you will learn about the basic types in Lisp together with Lisp logic and will create your first programs. After this we will discuss lists in Lisp. Then, we will cover structs and vectors.\nthis course is covered in the fast manner with practical examples in each lecture",
      "target_audience": [
        "Computer Programmers",
        "Computer Engineers",
        "Computer Science Majors",
        "People interested in coding"
      ]
    },
    {
      "title": "SQL for Beginners 2024  —  Learn SQL Step by Step",
      "url": "https://www.udemy.com/course/sql-for-beginners-2022-learn-sql-step-by-step/",
      "bio": "Learn SQL: From Basics to Advanced SQL Fundamentals, DML, DDL, DQL & Practical SQL Applications",
      "objectives": [
        "Databases and the Relational Database Management System (RDBMS)",
        "SQL programming language, SQL basics, fundamentals and SQL syntax",
        "Create tables in a database",
        "Add data into a database",
        "Use SQL to query a database",
        "Perform SQL data manipulation operations to access, modify or retrieve data",
        "Use SQL JOIN commands to combine two or more tables together",
        "Use SQL logical operators to filter and group data",
        "Analyze data using SQL group functions such as min, max etc."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know.",
        "A Windows, Linux or Mac PC / Laptop"
      ],
      "description": "Are you ready to take your SQL skills to the next level? Do you want to become proficient in SQL, the industry-standard language for managing and manipulating data? Look no further! Our Udemy course, ‘SQL for Beginners 2024 — Learn SQL Step by Step’ is the perfect fit for you.\nLearn the SQL programming language, the SQL basics and SQL fundamentals in a practical manner. We will start with a brief introduction of the SQL programming language, followed by an Overview of Databases and the Relational Database Management System (RDBMS).\nWe will install Microsoft SQL Server in a Docker Container in order to learn SQL in a practical manner. This will provide you with a brief introduction to Docker - open platform for developing, shipping, and running applications. Alternatively, Microsoft SQL Server on a standalone Windows Operating System will also be used.\nUsing a Healthcare System use case, we will create a database, create tables, insert some data into those tables. We will cover SQL syntax, and SQL DML operations to access, modify or retrieve the data from the database.\nAt the end of this course, students will be able to perform SQL operations to insert, retrieve, and update data in a database and perform data analysis.\nYou will solidify your knowledge of :\nDML - Data Manipulation Language commands to insert or update or delete data in the database.\nDDL - Data Definition Language commands to modify the data in the database.\nDQL - Data Query Language commands to access and retrieve data in a database.\nThis course will provide first hand knowledge for new data engineers, data analysts and software developers. We will learn first hand using examples in a real-world database.\nWhy Should I learn SQL?\nThis course is fit for those interested in learning SQL from the ground up - from students, beginner data engineers, and other IT professionals interested in learning about data and data engineering.\nSQL is in high demand for data engineering and data analysis.\nWith the growth of cloud computing and generation of petabytes of data, SQL is one of the de-facto programming languages to access and manipulate data stored on the Cloud.\nData Engineers and Software engineers are required to know SQL.\nThe average base pay of a Data Engineer is $102,864 / yr\nThis is an exciting course, and I can't wait for you to get started and learn SQL basics from the ground-up.",
      "target_audience": [
        "Beginner or new data engineers and software developers",
        "College students interested in data engineering",
        "Healthcare IT professionals interesting in data engineering and data analysis",
        "People interested in learning about databases and how to access, modify or retrieve data in a database"
      ]
    },
    {
      "title": "Complete Python and Java Programming BUNDLE [new]",
      "url": "https://www.udemy.com/course/complete-python-and-java-programming-bundle/",
      "bio": "Learn Java and Python Programming from Beginner to Professional | Write code in Python and Java",
      "objectives": [
        "On completion of this course you would be in a position to write and deploy java programs.",
        "And combine multiple programs to create some software application.",
        "Learn to use Python professionally,",
        "Datatypes like List,Tuple,Set and Numbers explained very well with example",
        "You would be able to make GUI application using Tkinter",
        "Projects are also there to apply the python skills into real world",
        "You would be able to do file handling using Python",
        "Basic concepts like Loops , Decision Making statement etc make your base strong",
        "Learn to use GUI component like Radiobutton , Checkbox button, Button , entry , cursor etc to make attractive GUI application"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites, but if you have any sort of programming experience with any programming or scripting languages, then it would be helpful.",
        "You must be familiar with any programming language at beginner level or must have a glimpse over java programming just as a beginner.",
        "This course caters to beginner, intermediate level. Student needs to be familiar with at least one programming language.",
        "Any prior working knowledge of programming language would help, however it is not must."
      ],
      "description": "Python is simple language enough for beginners, on the same time powerful enough for the professionals. It is basic weapon of data scientist which should be there. It is language for future programming. By the time you finish this course, you'll be a pro at Python!\nThis course is a one-stop-shop for everything you'll need to know to get started with Python, along with a few incentives.\n1. Basic operation with List, Tuple, Dictionary, set\n2. File Manipulation\n3. Graphical User Interface using Tkinter,\nand many more topics\nWhere is python used?\nPython is used in Data Science and Machine Learning. Python is used for web development. Python is a powerful programming language that gets used in various technologies.\nWhere is Java used?\nJava is used for Software development. Java is used for developing Android apps. Java is used for building Internet of Things and other applications and much more. Java is a powerful programming language that is based on Object Oriented programming model.\nIn the Next section you will learn Java Programming language. Here we would start right from the beginner level exploring fundamentals like JVM (Java Virtual Machine), JDK (Java Development Kit), JRE (Java Runtime Environment). We would realizing strengths and weakness of java as a programming language.\nWe would then learn the core java programming including conditionals- if else, switch case, loops- for, while, do while, identifiers, datatypes, operators, etc. And later we would be learning OOP (Object Oriented Programming) covering- class, object, constructor, inheritance, polymorphism, overriding, etc.\nWe would learn theoretical concepts in lectures and perform practical with practical exercises.\nJava is today's language. Working with java you should also be able to develop graphical user interface application from it .Swing is one of the powerful GUI module of java. Swing is easy to use, easy to implement, easy to develop then AWT.\nLearn Swing from beginners level to advance level.\nThis course is for those who want to make their own GUI application from java.\nAfter completing this course you will be able to use many GUI elements like button, label, radiobutton, checkboxbutton, menu, progressbar, message, combobox, optionpane, and many more.\nI hope you're excited to dive into the World of Programming with this course. Well, what are you waiting for? Let's get started with Python and Java!  .\nHAPPY CODING",
      "target_audience": [
        "Anyone would would be interested in learning Java Programming from beginner level with practical oriented approach.",
        "Anyone from student to professional developer who is keen to master Java GUI, and Swing module.",
        "Anyone who wants to make a career in Python programming or make a new career start in Python and don't know where to begin."
      ]
    },
    {
      "title": "COBOL Complete Reference Course!",
      "url": "https://www.udemy.com/course/cobol-complete-reference-course/",
      "bio": "COBOL Bootcamp: A Comprehensive Training Program.",
      "objectives": [
        "COBOL syntax and basic programming concepts, including data types, variables, arithmetic operations, and control structures.",
        "COBOL program design principles, including modularization, program structure, and best practices for writing efficient and maintainable COBOL code.",
        "Advanced topics in COBOL, such as tables processing, calling external subprograms, sort and merge operations, and working with XML and JSON data.",
        "Working with COBOL programs in a mainframe or non-mainframe environment, such as Micro Focus COBOL, including compilation, execution, and debugging techniques.",
        "Database integration with COBOL, including interfacing with DB2, IMS, and CICS. Exception handling in COBOL programs, including handling of I/O errors.",
        "Tips and techniques for troubleshooting and debugging COBOL programs, and understanding common COBOL coding errors and their resolutions.",
        "File handling in COBOL, including sequential and random file access, record structures, and file organization.",
        "Quizzes after each section to reinforce learning and test understanding.",
        "Practical hands-on exercises and projects to apply COBOL concepts in real-world scenarios and develop practical programming skills.",
        "Job interview preparation, including common COBOL interview questions, best practices for answering them, and guidance on how to succeed in the job interviews."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of programming concepts, such as variables, data types, control structures (e.g., loops, conditionals), and arithmetic operations.",
        "Familiarity with the mainframe environment, including basic concepts related to mainframe operating systems (e.g., z/OS), file systems, and job submission.",
        "Access to a COBOL compiler or development environment for hands-on exercises and practical learning."
      ],
      "description": "Are you looking to learn COBOL programming from scratch or to improve your existing skills? Look no further than the COBOL Complete Reference Course – the most comprehensive and up-to-date COBOL programming course on the market.\nWelcome to our comprehensive COBOL Complete Reference Course!  Whether you're a beginner looking to learn a new programming language or an experienced developer seeking to enhance your skills, this course has something for everyone interested in COBOL.\nCOBOL, or Common Business-Oriented Language, is a powerful and widely-used programming language that has been the backbone of many business applications and legacy systems for decades. In this course, you will gain a solid understanding of COBOL, its history, evolution, and basics.\nThe course begins with an overview of COBOL, including its origins, history, and relevance in modern business applications. You will learn about the syntax and structure of COBOL programs, including COBOL data types, variables, constants, and basic program structure, and COBOL web services formats such as XML and JSON. Through practical examples and code snippets, you will gain hands-on experience in writing COBOL programs.\nAdditionally, the course explores advanced topics such as file handling and data manipulation in COBOL, including reading and writing sequential and random files, file organization, and file handling techniques. You will also learn about integrating COBOL programs with databases such as DB2, or IMS, and working with SQL and embedded SQL in COBOL programs.\nThe course also covers other advanced COBOL concepts such as subprograms, complex data structures, error handling, debugging, performance tuning, and best practices in COBOL programming. You will gain a comprehensive understanding of COBOL development, including legacy system modernization, and how COBOL integrates with modern technologies and platforms.\nAs part of the course, you will also learn about COBOL compilers and Integrated Development Environments (IDEs) commonly used in COBOL development. Upon completion of this course, you will be equipped with the knowledge and skills needed to develop COBOL programs for various business applications, legacy systems, and modernization initiatives.\nWhether you are a student, a professional, or an aspiring COBOL developer, this course provides a comprehensive reference for mastering COBOL and excelling in the competitive COBOL job market.\n\n\nWhy Learn COBOL?\nCOBOL (Common Business-Oriented Language) is a high-level programming language that has been used for decades in industries such as finance, banking, insurance, and government. Despite its age, COBOL remains a vital part of many critical business systems, and there is currently a high demand for COBOL programmers in the job market.\n\n\nWhat You Will Learn.\nIn the COBOL Complete Reference Course, you will learn all the essential skills and concepts needed to become a proficient COBOL programmer. This includes:\nUnderstanding the basics of COBOL syntax and structure.\nWriting, compiling, and debugging COBOL programs.\nWorking with data structures, files, and database systems, and web service interfaces.\nDeveloping programs for real-world business applications.\nDesigning, building, and testing a COBOL program.\nCOBOL File and exception handling, and database integration.\n\n\nCourse Features.\nThe COBOL Complete Reference Course is designed to be accessible and engaging for learners of all skill levels. Here are some of the features that set us apart:\n\n\nComprehensive Curriculum.\nOur course curriculum covers all the key topics and concepts that you need to master COBOL programming. From basic syntax to advanced database programming techniques, COBOL web services, etc you will learn everything you need to succeed in the world of COBOL.\n\n\nExpert Instruction.\nOur instructors have experienced COBOL programmers with years of industry experience. They will guide you through each lesson, providing clear explanations and practical examples to help you understand and apply the concepts covered in the course.\n\n\nHands-On Learning.\nWe believe that the best way to learn programming is by doing it yourself. That's why the COBOL Complete Reference Course includes plenty of hands-on exercises and projects, giving you the opportunity to apply your new skills in a real-world context.\n\n\nFlexible Learning Options.\nWhether you prefer to learn at your own pace or in a structured classroom setting, we have the perfect learning option for you. Our course is available both online and in-person, with flexible scheduling options to fit your busy lifestyle.\n\n\nWho Should Take This Course?\nThe COBOL Complete Reference Course is designed for anyone who wants to learn COBOL programming, regardless of their prior experience or background. This includes:\nBeginners who want to learn COBOL from scratch\nExperienced programmers who want to expand their skill set\nBusiness professionals who want to understand COBOL code and systems better.\nStart Your COBOL Journey Today\nDon't miss out on this opportunity to become a skilled COBOL programmer and take advantage of the high demand for COBOL skills in the job market. Enroll in the COBOL Complete Reference Course today and start your journey toward a successful career in programming.\n\n\nNote: This course does not include Mainframe IDs. You must arrange your own Mainframe ID. For a list of topics covered, please refer to the content section. It is a pleasure to have you as a student. I would appreciate it if you would leave feedback because your feedback is important to us!\n\n\nTags: #COBOLProgramming, #COBOLCourse, #COBOLTraining, #ProgrammingEducation, #CareerDevelopment, #BusinessProgramming, #MainframeProgramming, #LegacySystems, #DatabaseProgramming, #DataManagement, #StructuredProgramming, #OnlineLearning, #topictrick",
      "target_audience": [
        "Beginners who are new to programming and want to learn COBOL.",
        "Individuals with some programming experience who want to expand their skills with COBOL.",
        "Professionals who need to work with COBOL in their job roles, such as mainframe developers or legacy systems maintainers.",
        "Those interested in gaining knowledge about COBOL for career advancement or job opportunities.",
        "Anyone looking to enhance their understanding of COBOL, a widely used programming language in the business and finance sectors."
      ]
    },
    {
      "title": "A Practical Intro to Java Using Games",
      "url": "https://www.udemy.com/course/a-practical-intro-to-java-using-games/",
      "bio": "A fun and creative introduction to Java Programming that will actually teach you the fundamentals",
      "objectives": [
        "Create basic Java programs that anyone can use",
        "Explore deeper into the Java language",
        "Use the fundamentals taught to tackle other programming languages",
        "Think like a developer"
      ],
      "course_content": {},
      "requirements": [
        "Students will not be required to know anything pertaining to Java or other languages",
        "The Necessary software needed will be discussed and reviewed in the intro lessons with demos on where and how to download them",
        "Bring your brains and your curiosity!"
      ],
      "description": "This course if for those people who have tried and failed to learn programming the conventional way. This course is for those people who want an fun way to learn programming. This course is for people who want to brush up on their basics but don't want to read a boring old textbook. This course will is centered around learning the Java programming language through game development. Specifically, we will be creating the old school game breakout. Split into sections revolving around the different elements of the game, key programming concepts will be taught and explained throughout the course. We'll move from setting up our game board to creating and making the game pieces move to adding levels learning concepts like enumeration, conditionals, loops, object oriented programming, abstract classes/methods and more.\nBy the end of this course you will not only have created an amazing game to show off but you will have the Java basics fully understood. This will give you the opportunity to explore deeper into java and other languages. Most importantly, I hope to give you desire to create and to see your projects and programs used by others. It's and amazing feeling trust me!\nAs for the course length, the course classes are relatively short so take as much time as you need to create an amazing game!",
      "target_audience": [
        "This JAVA course is meant for anyone new to programming, anyone who has tried traditional ways that haven't worked or anyone looking to refresh their JAVA fundamentals. There is no prior programming knowledge needed."
      ]
    },
    {
      "title": "Coding for Kids & Beginners: Fun Projects in Java & Logic",
      "url": "https://www.udemy.com/course/algorithms-and-java-for-kids/",
      "bio": "Used in schools! Kids aged 10–16 learn coding, logic, and algorithms through fun, beginner-friendly projects.",
      "objectives": [
        "Understand and create algorithms by breaking down tasks into logical steps.",
        "Learn Java basics, including data types, variables, loops, and conditionals.",
        "Apply problem-solving skills to real-world challenges using Java.",
        "Build a Java project, such as a calculator, using functions and libraries."
      ],
      "course_content": {},
      "requirements": [
        "No prior coding experience required. All your child needs is a computer with Java installed (installation instructions will be provided) and a curiosity to learn."
      ],
      "description": "Is your child curious about coding and problem-solving? This hands-on course introduces kids (ages 10-16) to the basics of Java programming for kids in a fun and engaging way.\nThrough interactive lessons, your child will learn how to break down problems, write their first Java program, and understand how to think like a coder. The course takes them step-by-step, starting with simple concepts like algorithms and loops, and builds up to creating their very own calculator project and many other games!\nBy the end of this coding for kids course, kids will not only have learned the core principles of Java but will also gain the confidence to take on future coding challenges. It's a great introduction to programming for kids and an ideal way to foster critical thinking and creativity. No prior experience is needed—just a passion for learning!\n\n\nCourse Highlights:\n2 hours of fun, on-demand video content\n11 easy-to-follow lessons\n14 downloadable resources\nAccess on mobile and TV\nUdemy’s 30-day money-back guarantee\n\n\nCourse Content:\nWhat’s an Algorithm?\nSimple, everyday examples of algorithms (like making a sandwich).\nUnderstanding how algorithms work in real life.\nBreaking Down Tasks: Steps and Order\nLearn how to break tasks into steps and why order matters in problem-solving.\nAlgorithms in Games\nHow games use algorithms to work (Using : blockly games maze website)\nFun activity: Write your own algorithm for a daily task (like getting ready for school).\nIntroduction to Java\nWhat is Java and why is it such a popular programming language?\nA quick look at Java’s history and basic data types.\nLet’s Code: Writing Your First Java Program\nWrite your first program: “Hello, World!”\nLearn the basics of a Java program and how it runs.\nClasses and Functions: The Building Blocks of Java (Part 1)\nIntroduction to classes and methods.\nLearn how these building blocks form the foundation of any Java program.\nClasses and Functions (Part 2)\nDive deeper into functions: what they are, how they work, and why they’re important.\nIf-Else Statements: Making Decisions in Code\nWhat is decision-making in coding?\nLearn how to write conditional statements in Java (if-else).\nLoops: Repeating for Efficiency\nIntroduction to loops: making your programs more efficient by repeating tasks.\nWrite simple loops in Java.\nSolving Problems with Java\nUse the algorithms you’ve learned to solve real-world problems with Java.\nCreate a program that simulates a basic decision-making process.\nFinal Project: Build Your Own Calculator\nPut everything together and create a project!\nBuild a simple calculator using Java, reinforcing everything you've learned.",
      "target_audience": [
        "This course is perfect for kids aged 8 to 16 who are interested in learning how to code. Whether they’re just starting or have dabbled a little before, this course will give them the confidence and foundation they need to continue exploring the world of programming"
      ]
    },
    {
      "title": "Python & Cryptocurrency Trading: Build 8 Python Apps (2020)",
      "url": "https://www.udemy.com/course/python-for-algorithmic-trading-and-data-analysis/",
      "bio": "Build 8 real world cryptocurrency applications using live cryptocurrency data from CoinMarketCap & Binace APIs",
      "objectives": [
        "Master CoinMarketCap and Binance APIs",
        "Become a Python programmer able to independently develop applications in Python 3.",
        "Build your own Cryptocurrency, Bitcoin Trading Bot with Python",
        "How to create an real time data analyzer",
        "How to Create a Batch File to Run Python Script",
        "How to Run Python Scripts in background",
        "How to parse JSON text and format data"
      ],
      "course_content": {},
      "requirements": [
        "A computer and a desire to learn"
      ],
      "description": "If you are interested in cryptocurrency and you want to learn python, this course is perfect  for you. Take your Python skills to the next level by creating 8 cryptocurrency applications.\nSource code for all applications is included in course documentation.\n\n\nProject 1:  CoinMarketCap 'Clone'\nThis application will get all the data from CoinMarketCap and display the result in a PrettyTable.\nProject 2: Cryptocurrency Top 100 Ranker\nAllows you to filter all the cryptocurrencies available on CoinMarketCap and it will display the top 100.\nProject 3: Write Data to Excel File\nStore cryptocurrency information inside of excel workbooks using Python.\nProject 4: Portfolio Calculator\nThis program will help you keep track on you cryptocurrency profit. It calculates profit for each cryptocurrency, profit for total portfolio and others.\nProject 5: Cryptocurrency Price Alert\nYou can set a price above and a price below and the computer will speak to you for exemple: \"Bitcoin price is 8000\" or  \"Bitcoin price dropped 6000\", also you can run this program in the background.\nProject 6: Cryptocurrency Data Analyzer\nCreate your own cryptoccurency ranking algorithm. You can rank cryptoccurency based on your preferences and view the results in a sorted order. For exemple you can take into consideration the change in the last 2 min, last day, week, month and even year. Or based on volume, number of orders, moving averages and many other parameters. There are dozens of APIs with real time cryptoccurency data available on CoinMarketCap  and Binance.\n\n\nFor Projects 7, 8 You Will Need to Have an Binance Account and Python 2.\nProject 7: Pump & Dump Trading Bot\nWe are going to build step by step an simple Pump & Dump Trading Bot for Binance exchange. Do not use it with real money, only for educational purposes.\nProject 8: Binance HotKeys Program\nTrade cryptocurrencies at the press of a button.\nThis program is available in the documentation of this course and it has about 300 rows of code that's why we are not going to write it and I am only going to explain you how it works . Do not use it with real money, only for educational purposes.",
      "target_audience": [
        "This course if for you if you want to learn how to program in Python",
        "This course is for you if you want to learn Python by doing",
        "Beginner python developer curious about cryptocurrency data analysis and algorithmic trading",
        "Anyone interested in getting real-time data from APIs"
      ]
    },
    {
      "title": "Top Coding Bundle! Learn Python, Ruby, PHP, Javascript",
      "url": "https://www.udemy.com/course/ultimate-coding-bundle-learn-python-ruby-php-javascript/",
      "bio": "Learn Python, Ruby, PHP, and Javascript Coding From Beginner To Intermediate Fast! Become a Web Developer in no time!",
      "objectives": [
        "Python From Beginner To Advanced",
        "Javascript From Beginner To Advanced",
        "PHP From Beginner To Advanced",
        "Ruby From Beginner To Advanced",
        "Programming Concepts Applicable To Any Programming Language",
        "Object Oriented Programming",
        "Conditional If/Else & Comparisons",
        "While and For Loops",
        "Variables, and Data Types",
        "Functions, Modules, & Classes",
        "Basic Projects In Each Language",
        "And More!"
      ],
      "course_content": {},
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser",
        "We'll download Python, Ruby, PHP, and Javascript Tools for Free and Use a Free Text Editor"
      ],
      "description": "In this course we'll learn the Python 3 programming language, the Ruby Programming language, the PHP programming language, and the  Javascript programming language from an absolute Beginner level all the way to Advanced in no time at all!\nThis course is aimed at the absolute beginner, you don't need any coding experience at all!\nWe'll start out by setting downloading and installing Python, Ruby, PHP and the Sublime Text Editor - all for free. This will give you all the tools you need to start writing and running code.\nFor each language, we'll use the free Sublime Text Editor and a Web Browser so that we can learn the basic Javascript concepts.\nThen, we'll dive into very basic computer science concepts. Things like:\nString Manipulation\nPrinting to the Screen\nSimple Math\nVariables\nData Types (lists, tuples, dictionaries and more)\nAssignment Operators\nComparison Operators\nAfter that, we'll move into more intermediate topics like:\nWhile Loops\nFor Loops\nConditional If/Else Statements\nFizzbuzz\nFinally we'll finish up with more advanced topics like:\nModules\nFunctions\nClasses\nAnd More...\nWe'll learn all of those things for Python, Ruby, PHP, and Javascript. We'll start with Python, and then move over to Ruby, then hit PHP before finishing up with Javascript. This is a bundle course of four of my other popular courses.\nThese programming languages are four of the greatest programming languages to learn, and learning has never been this easy!  They're the most popular and in demand for a reason! Let's learn to code!\nI'll see you on the inside!\n-John Elder",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn the Python, Ruby, PHP, and Javascript Programming Languages"
      ]
    },
    {
      "title": "Basic Python Programming for Beginners: Getting Started",
      "url": "https://www.udemy.com/course/basic-python-programming-for-beginners-getting-started/",
      "bio": "Welcome to the world of Python Programming Basics for Beginners. Learn programming skills of Python.",
      "objectives": [
        "Learn the basics of Python",
        "Learn the importance and application of Python",
        "Learn how to download and install Python IDLE (Integrated Development and Learning Environment) for developing and executing Python programs",
        "Build a solid foundation of programming in Python",
        "Learn variables and operators in Python",
        "Learn logic and control in Python",
        "Learn functions in Python",
        "Learn collections in Python",
        "Learn advance Python",
        "Student can Download Python file (.py) for each and every example of this course…"
      ],
      "course_content": {},
      "requirements": [
        "Programming knowledge of C language will make this course extremely easy.",
        "Student can start learning coding in Python without any previous knowledge of programming."
      ],
      "description": "Welcome to the udemy course \" Basic Python Programming for Beginners: Getting Started \". This course is designed for beginners who want to enter in the world of Python programming.\nMy name is Dr. Sunil Soni, academician and programming expert in Python. I have taught more than 10000 UG level students OFFLINE and more than 6000 students on Udemy Platform. My goal is to provide you the knowledge in easy and enjoyable way to learn Python programming. In this course I do just that with the Python programming language.\nPython, a wonderfully simple programming language that has encouraged many programmers to pursue careers involving programming over any other language. Of course, it goes without saying that Python is an excellent language, but do you know what is required of you to start programming Python?\nAs with any programming language it is important you understand the fundamentals and that is exactly what I teach you in this course.\nPrevious programming knowledge is not required. You can start it from scratch here.\nIn this course, you will:\n1. Learn the basics of Python\n2. Learn the importance and application of Python\n3. Learn how to download and install Python IDLE (Integrated Development and Learning Environment) for developing and executing Python programs\n4. Build a solid foundation of programming in Python\n5. Learn variables and operators in Python\n6. Learn logic and control in Python\n7. Learn functions in Python\n8. Learn collections in Python\n9. Learn advance Python\n10. You can Download Python file (.py) for each and every example of this course…",
      "target_audience": [
        "For those who are keen to learn Python, this is the course for you!",
        "Anyone who wants to learn basic Python programming",
        "People who are seeking careers such as Python Programmer, Data Scientist, Machine Learning expert etc. This course can help them to start their journey in these fields."
      ]
    },
    {
      "title": "The Complete Java Masterclass with Practical Examples",
      "url": "https://www.udemy.com/course/the-complete-java-masterclass-with-practical-examples/",
      "bio": "Code Like a Pro: The Complete Java Masterclass with Practical, Real-Life Examples",
      "objectives": [
        "Basic Syntax: Variables, Data Types, Operators.",
        "Control Flow: Conditional Statements (if-else, switch), Loops (for, while, do-while).",
        "Introduction to Object-Oriented Programming (OOP) Concepts.",
        "Methods: Defining, Calling, and Overloading.",
        "Encapsulation, Inheritance, and Polymorphism.",
        "Access Modifiers: Public, Private, Protected.",
        "Arrays: Declaration, Initialization, and Manipulation.",
        "Strings: Methods, Manipulation, and Operations.",
        "Collections Framework: ArrayList, LinkedList, HashMap, HashSet.",
        "Introduction to Algorithms: Searching (Linear, Binary), Sorting (Bubble, Selection, Insertion).",
        "Reading From and Writing to Files.",
        "Working with Streams: Input Streams, Output Streams."
      ],
      "course_content": {
        "Introduction to Java": [
          "Setting up the Java Development Kit (JDK) and Integrated Development Environment",
          "Basic Syntax: Variables, Data types, Operators.",
          "Control Flow: Conditional Statements if-else, switch, Loops for, while, do-while",
          "Introduction to Object Oriented Programming (OOP) Concepts"
        ],
        "Object Oriented Programming (OOP) in Java": [
          "Classes and Objects: Creating, Instantiating, and Using",
          "Methods: Defining, Calling, and Overloading",
          "Encapsulation, Inheritance, and Polymorphism",
          "Access Modifiers: Public, Private, Protected",
          "Abstract Classes and Interfaces"
        ],
        "Data Structures and Algorithms": [
          "Arrays: Declaration, Initialization, and Manipulation",
          "Strings: Methods, Manipulation, and Operations",
          "Collections Framework: ArrayList, LinkedList, HashMap, HashSet",
          "Introduction to Algorithms: Linear, Binary, Bubble, Selection, Insertion"
        ],
        "Exception Handling": [
          "What Are Exceptions? Types of Exceptions",
          "The Try Catch Finally Block",
          "Throwing Exceptions"
        ],
        "File I/O": [
          "Reading From and Writing to Files",
          "Working with Streams: Input Streams, Output Streams",
          "File Handling and Manipulation",
          "Serialization and Deserialization"
        ]
      },
      "requirements": [
        "No Prior Programming Experience is Required.",
        "I will Teach You Everything From The Beginning to Advanced."
      ],
      "description": "Welcome to The Complete Java Masterclass with Practical Examples – your ultimate guide to mastering Java programming from the ground up! Whether you're a beginner or an experienced developer, this course is designed to help you unlock the full potential of Java with hands-on, real-world applications.\nThroughout this course, you’ll dive deep into the core concepts of Java, including object-oriented programming, data structures, algorithms, and more. With practical examples at every step, you’ll not only learn the theory behind Java but also build real projects that will boost your coding skills and confidence.\nBy the end of the course, you’ll have a solid understanding of Java and be able to develop fully functional applications, making you job ready and prepared for any Java related challenges. Whether you're looking to enhance your career, prepare for coding interviews, or simply become proficient in one of the most popular programming languages, this course has everything you need.\nKey Features:\n\n\nClear, step-by-step lessons suitable for all skill levels.\nReal-world examples and projects to practice Java in action.\nDeep dive into Java fundamentals and advanced topics.\nPractical coding exercises to reinforce your learning.\nLifetime access to course materials.\nEnroll Now The Complete Java Masterclass with Practical Examples today, and start your journey toward becoming a Java expert!",
      "target_audience": [
        "New coders seeking to start a career in programming with Java.",
        "Beginners aspiring to learn Java programming.",
        "Students wanting to learn Java or the basics of modern computer programming",
        "Individuals excited about building Java applications for professional or personal use."
      ]
    },
    {
      "title": "210+ Exercises - Python Standard Libraries",
      "url": "https://www.udemy.com/course/exercises-python-standard-libraries/",
      "bio": "Unlock the Full Potential of Python Standard Libraries - Master the Core Tools for Efficient Coding!",
      "objectives": [
        "solve over 210 exercises in Python with standard libraries",
        "deal with real programming problems",
        "work with documentation",
        "guaranteed instructor support"
      ],
      "course_content": {},
      "requirements": [
        "Completion of all courses in the Python Developer learning path",
        "Basic knowledge of Python"
      ],
      "description": "This course provides a thorough and hands-on exploration of Python's robust standard libraries. This interactive course is designed to strengthen learners' Python programming skills by diving deep into the tools and functionalities offered by these libraries.\nThis course is divided into various sections, each focusing on different libraries such as os, sys, math, datetime, and collections, among others. Each section is filled with carefully designed exercises that challenge learners to apply and reinforce the concepts learned.\nThe exercises range from simple tasks for beginners to more complex problems that simulate real-world programming scenarios. Detailed solutions are provided for each exercise, promoting better understanding and helping learners gain insights into best practices in Python programming.\nThe \"210+ Exercises - Python Standard Libraries\" course is an excellent resource for Python programmers of all skill levels. Whether you're a beginner looking to strengthen your understanding of Python, or an experienced developer seeking to refresh and broaden your knowledge of Python's standard libraries, this course offers a comprehensive and engaging learning experience.\n\n\nPython Standard Libraries - Powerhouse of Versatility!\nPython Standard Libraries refer to a comprehensive collection of modules and packages that come bundled with the Python programming language. These libraries provide a wide range of functionalities and tools to simplify and accelerate software development. The Python Standard Libraries cover diverse areas such as file manipulation, networking, web development, data serialization, mathematical computations, data structures, and more. They offer ready-to-use modules for common tasks, allowing developers to write efficient and robust code without having to reinvent the wheel. With Python Standard Libraries, developers can leverage a rich set of functionalities to build applications, automate tasks, handle data, interact with databases, and perform various operations with ease. These libraries serve as a foundation for Python development and are widely adopted by programmers worldwide.",
      "target_audience": [
        "Python Developers (Beginner to Intermediate)",
        "Software Engineers and Programmers",
        "Data Analysts and Data Scientists",
        "DevOps Engineers and System Administrators",
        "Test Automation Engineers",
        "Computer Science Students and Coding Bootcamp Graduates",
        "Technical Interview Candidates"
      ]
    },
    {
      "title": "Elixir for Beginners (programming language)",
      "url": "https://www.udemy.com/course/elixir-programming-language-tutorial/",
      "bio": "A quick easy guide to basic Elixir syntax",
      "objectives": [
        "Basic Syntax of Elixir, Variables, IO puts, commenting, concatenations, Data Types",
        "Strings",
        "Math",
        "User Input",
        "Decision-Making, Relational & Logical Operators",
        "Lists, Tuples & Maps",
        "Enumberables",
        "Modules & Functions",
        "Loops"
      ],
      "course_content": {
        "From Erlang Roots to Elixir’s Rise": [
          "Erlang and the Birth of Reliable Systems",
          "The BEAM Virtual Machine: Why It Matters",
          "José Valim and the Genesis of Elixir",
          "Elixir Syntax, Macros, and Functional Style",
          "Concurrency in Practice: Processes and Message Passing",
          "OTP Principles: Supervisors, Behaviours, and Fault Tolerance",
          "Community, Tooling, and the Ecosystem Around Elixir",
          "Quiz 1"
        ],
        "Functional Foundations and the Elixir Way": [
          "Immutability and Pure Functions",
          "Pattern Matching Basics",
          "Advanced Pattern Matching and Guards",
          "Recursion and Tail Recursion",
          "The Pipe Operator and Composable Pipelines",
          "Collections and Data Transformation (Enum vs Stream)",
          "Higher-Order Functions, Anonymous Functions, and Closures",
          "Quiz 3"
        ],
        "Concurrency on the BEAM: Processes, Messages, and Resilience": [
          "BEAM Processes: Creation, Identity, and Lifecycle",
          "Message Passing and Mailboxes",
          "Preemptive Scheduling, Isolation, and Performance Traits",
          "The “Let It Crash” Philosophy, Links, and Monitors",
          "Supervisors and Restart Strategies",
          "GenServer Fundamentals: Building Stateful Processes",
          "Distribution and Inter-Node Communication",
          "Quiz 3"
        ],
        "OTP Essentials: GenServer to Supervision Trees": [
          "GenServer Lifecycle and Callbacks",
          "Designing GenServer State and Public APIs",
          "Supervisors and Child Specifications",
          "Building Supervision Trees and Restart Strategies",
          "DynamicSupervisor and Runtime Process Management",
          "Agent and Task: Lightweight State and Asynchronous Work",
          "The Application Behaviour and Starting Your System",
          "Error Handling, Shutdown, and Observability in OTP",
          "Quiz 4"
        ],
        "Metaprogramming, Protocols, and Elegant Abstractions": [
          "The Elixir AST and quote/unquote",
          "Writing Simple Macros with defmacro",
          "Hygiene, bind_quoted, and Macro Expansion",
          "Designing DSLs and Custom Sigils",
          "Protocols: Polymorphism for Elixir Data Types",
          "Structs, Maps, and Pattern Matching Design",
          "Metaprogramming Trade-offs, Debugging, and Best Practices",
          "Quiz 5"
        ],
        "Web at Warp Speed: Phoenix, LiveView, and Real-Time Apps": [
          "Introducing Phoenix — Elixir’s Web Framework",
          "Routing, Plugs, and the Connection Flow",
          "Views, Templates, and Component-Based Rendering",
          "LiveView Basics — Real-Time UIs Without Heavy JavaScript",
          "Channels and PubSub for Message-Oriented Real-Time",
          "Ecto Essentials — Schemas, Changesets, and Queries",
          "Presence, Telemetry, and Scaling Real-Time Systems",
          "Quiz 6"
        ],
        "Data, Pipelines, and Integrations: Ecto, Broadway, and Beyond": [
          "Ecto Schemas and Changesets",
          "Querying, Associations, and Preloads with Ecto",
          "Repos, Transactions, and Migrations",
          "GenStage Fundamentals and Backpressure",
          "Flow and Parallel Data Transformations",
          "Broadway for Reliable, High-Throughput Pipelines",
          "Integrating Kafka, RabbitMQ, and other Brokers",
          "Observability, Testing, and Operational Patterns for Pipelines",
          "Quiz 7"
        ],
        "From Edge to Device: Embedded Elixir with Nerves": [
          "Introducing Nerves and Embedded Elixir",
          "Nerves Project Shape and Embedded App Anatomy",
          "Interfacing Hardware: GPIO, I2C, SPI, and UART Patterns",
          "Building Embedded Releases: Firmware, Runtime, and Boot",
          "Over-the-Air Updates and Safe Firmware Upgrades",
          "Networking, Connectivity, and Edge Resilience",
          "Resource Constraints, Performance, and Power Management",
          "Security, Identity, and Observability at the Edge",
          "Quiz 8"
        ],
        "Tooling, Testing, Deployment, and Observability": [
          "Mix, Hex, and Project Organization",
          "ExUnit — Testing Strategies and Best Practices",
          "Property-Based Testing with StreamData",
          "Formatting, Linting, and Static Analysis",
          "Building Releases and Runtime Configuration",
          "Containers, Deployments, and Orchestration Patterns",
          "Telemetry, Metrics, and Structured Logging",
          "Tracing and Distributed Observability with OpenTelemetry",
          "CI/CD, Performance Testing, and Production Readiness",
          "Quiz 9"
        ],
        "Where Elixir Shines: Use Cases, Patterns, and Industry Trends": [
          "Real-Time Chat and Presence Architectures",
          "Fintech and Reliable Transactional Systems",
          "Streaming, Event Processing, and High-Throughput Pipelines",
          "E-commerce and High-Concurrency Web Platforms",
          "Multiplayer Games and Real-Time Simulation Backends",
          "Telecom, Messaging, and Legacy Interoperability",
          "Event-Driven Patterns, CQRS, and Process-Per-Entity Designs",
          "Common Pitfalls and Anti-Patterns to Avoid",
          "Performance Characteristics, Benchmarking, and Trade-offs",
          "Community Momentum and the Future of Elixir and the BEAM",
          "Quiz 10"
        ]
      },
      "requirements": [
        "Familiarity with any other programming language is recommended, but not required",
        "This course is very beginner-friendly, even someone with no experience can take this course"
      ],
      "description": "In this course, I'll be explaining simple concepts of coding in Elixir. You'll learn all the basics: printing to screen, creating variables, getting using input, doing simple math, conditionals, lists, enums, etc. This is a simple steady-paced course that can be effective for anyone who has an interest in coding in Elixir. You could be someone with experience in another language or someone entirely new to coding.\nI'll be teaching using an online IDE, called replit, which serves its purpose great. You can sign-up for free, create a repl, and start following along with the lectures in a few minutes.\n\"Elixir\" is used by many companies, for example, Adobe, Discord, Moz, and the Financial Times. It has many applications, and in this course, we'll be sticking to the basics.\nI will be explaining code snippets and there will be a link to the repl that I'm discussing in the lecture resources. You can then fork it, and change the names and arguments in the code to come up with additional examples for each concept. Or you can use copy/paste.\nThis course is a beginner-friendly breeze and will allow anyone to effectively grasp the core concepts of Elixir in just a short amount of time.",
      "target_audience": [
        "Anyone who knows another language and wants to learn how to code in Elixir can start here to learn the basic syntax",
        "Beginners"
      ]
    },
    {
      "title": "Introduction to C++ and Qt5 Programming for Raspberry Pi",
      "url": "https://www.udemy.com/course/introduction-to-cplusplus-and-qt5-programming-for-raspberry-pi/",
      "bio": "Learn to write C++ applications for console, physical projects and create graphical user interfaces with QT5.",
      "objectives": [
        "Learn the basics of C++ from the ground up.",
        "Writing C++ console programs.",
        "Writing C++ programs for physical projects using the wiringPi library.",
        "Creating Graphical User Interfaces for projects using Qt5."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Development Environment Overview",
          "Hello World!",
          "Working with the IDE Geany",
          "Working with the IDE NetBeans 8.2",
          "Working with MS Visual Studio"
        ],
        "Basic Language Features in C++": [
          "Structor of a C++ program",
          "Operators and Data Types",
          "Variables",
          "Reading User Input",
          "Lab Exercise: Basic Language Features"
        ],
        "Control Structures": [
          "Intro"
        ],
        "Conditionals": [
          "If statements and switch - case",
          "Lab Exercise: Conditionals"
        ],
        "Loops": [
          "While and For Loops",
          "Lab Exercise: Loops"
        ],
        "Functions and Structures": [
          "Functions",
          "Lab Exercise: Functions"
        ],
        "Arrays and Strings": [
          "Arrays",
          "Lab Exercise: Arrays",
          "Strings",
          "Lab Exercise: Strings"
        ],
        "Pointers": [
          "Pointers",
          "Lab Exercise: Pointers"
        ],
        "Files": [
          "Files"
        ]
      },
      "requirements": [
        "Installing the Raspbian OS, installing software, working from the command line."
      ],
      "description": "Part I contains an introduction to C++.\nThis part is designed to avoid forward referencing as much as possible, and it presents the top- ics in an order and a level of detail that should not overwhelm someone who is new to C++.\nThroughout this section we will use code examples to explain and illustrate important programming and OOP issues. Our aim in each case is to use a minimal example that will illustrate the ideas and techniques briefly and efficiently.\nIn Part II,\nyou will find physical projects that don’t need any graphical user interface. We can call them headless.\nPart III\nwill cover core knowledge about Qt5 with an embedded system like the Raspberry Pi. Here we’ll writing C++ Code directly in the Qt Creator to develop GUI’s for our Raspberry Pi projects.\nWhat do you get from the course:\nYou will learn to get your development environment right, this goes from knowing what to use and installing to configuration.\nYou'll learn how to get electronic components to work with C++ and Qt5.\nThe examples and the provided Source Code will give you confidence.",
      "target_audience": [
        "This course is for Raspberry Pi makers who want to develop Graphical User Interfaces for hardware projects.",
        "Developers who are interested to make Raspberry Pi projects using the C++ Language.",
        "You should be familiar to build basic hardware projects.",
        "You have made projects in another Language like Python or C.",
        "Ability to wire electronics."
      ]
    },
    {
      "title": "Julia for Beginners (Programming Language)",
      "url": "https://www.udemy.com/course/julias-core-syntax/",
      "bio": "Get the basics quick and easy",
      "objectives": [
        "Data Types, Strings, Math",
        "Conditionals, Loops",
        "Tables, Arrays, Dictionaries",
        "Functions",
        "Structs, Enums, Symbols",
        "and more of Julia's Core Syntax"
      ],
      "course_content": {},
      "requirements": [
        "There are no prerequisites for this course"
      ],
      "description": "The focus of this course is the basic syntax of Julia. It's ideal for someone who wants to learn how to do all the basic things quickly and easily. This could be someone entirely new to coding or someone coming in from another language (in which case you can speed up the video, as all this stuff is very easy).\nThe popular online IDE replit is used in this course. It's an excellent learning tool. That means zero setup time! You can start coding right away, just by signing up for free and creating a project file known as a repl, without the hassle of spending time installing Julia on your machine. A link to the repl I'm working on in each video is linked in the resources. You can just click on it, fork it, and edit the code, coming up with some examples about what's being taught in the video.\nEnjoy the easy-to-understand to-the-point video lectures explaining simple topics. Have a try yourself! Run the code after watching the lecture, and try adding new arguments to get a good grasp of the concepts.\nI’ve covered, strings, math, arrays, functions, conditionals, loops, and more. These topics help you dive into learning the Julia programming language and are a great place to start your journey. Having a good base through this course will help you put your right foot forward as you continue learning.\nAll the explanations and code are kept as simple as possible. This makes it possible to clearly and easily understand everything.",
      "target_audience": [
        "Someone learning to code can learn basic concepts from this course",
        "Someone coming in from a different language who wants to learn the core syntax quickly and easily"
      ]
    },
    {
      "title": "Lua Programming - Master the Basics",
      "url": "https://www.udemy.com/course/lua-programming-master-the-basics/",
      "bio": "Learn the fastest and powerful scripting language for games.",
      "objectives": [
        "learn the basics of working with Lua",
        "Understand Conditional Statements and Functions",
        "You will have a beginners knowledge on how to program in Lua"
      ],
      "course_content": {
        "Introduction & Hello World app": [
          "Course Overview",
          "Introduction to Lua",
          "The Lua standalone interpreter",
          "Demo of the hello.lua script"
        ],
        "Control Structure & Tables": [
          "Control Structure video",
          "Tables video",
          "Demos video"
        ],
        "Conditional Statements & Functions": [
          "Function demo video",
          "Understand Libraries"
        ]
      },
      "requirements": [
        "Knowledge of Any Programming Language is Helpful",
        "Knowledge of C Programming Language is useful",
        "You will have to install binary on your OS"
      ],
      "description": "The Introduction to Lua course is a 1 - hour course for beginners. In the course, we'll cover the basics of the Lua programming language. By the end of the course, you should have a beginner's working knowledge of how to program in Lua, so this course will prepare you for using Lua in the way you want to, whether that's modding your favorite games, scripting in your OS of choice, or writing libraries for others to use.\nTopics include:\nLua syntax\nif..then..elseif..else..end\nwhile and repeat loops\nfor and for-in loops\ntables\nfunctions\nthe standard library and third party packages\nSo I hope you join us for this Introduction to Lua.",
      "target_audience": [
        "Any Fresher Who Wants to Learn Lua",
        "To Brush Up Your Lua Knowledge"
      ]
    },
    {
      "title": "The Ultimate Java 9 Tutorial - From beginner to professional",
      "url": "https://www.udemy.com/course/java-basics-for-j2ee-and-android/",
      "bio": "Learn the basic of Java 9 Programming in the most easy way. The course is now being updated with Java 8 features.",
      "objectives": [
        "Comprehensively covers Basics,Inheritance,Collections,Exception Handling and Java I/O with examples.",
        "Learn OOPS concepts and java language basics from scatch.",
        "The starting block for developing J2EE applications or Android apps.",
        "Demonstrates usage of Java API and practice tests for grinding your skills.",
        "Practice problems to check your grasp of the subject.",
        "Project for overall evaluation of the tutorial."
      ],
      "course_content": {},
      "requirements": [
        "Aptitude for programming"
      ],
      "description": "THE MOST COMPREHENSIVE AND IN DEPTH TUTORIAL ON JAVA 9 THAT YOU WOULD FIND ON UDEMY. EVERY CONCEPT IS COVERED IN DEPTH AND EXPLAINED THOROUGHLY TO ENABLE YOU TO CODE BETTER.\nWhats new in the Course ?????\nUpdated December  2017:\nAdded New Section on Modules in Java 9. Lets learn how to use modules in Java and create a modularized Application.\nBeginning December, we are updating the course to Java 9. Now you shall start seeing stuff that is related to Java 9.We shall be updating existing sections and adding new sections relevant to Java 9. Hope you like the same.\nUpdate Sept,2017\nThe most Comprehensive Database Tutorial you would find anywhere on the Internet Covering from the very basics to the newest classes like Rowsets that connect without any Connection to the Database saving expensive Connections.\nAdded new lectures on Wrapper Classes - what they are and how we can use them. More exciting stuff coming soon....\nThe complete section on Loops has been redone with additional Quizzes, Practice Code and more to clear things and check if you are well versed with the lectures.\nAdded New Section on Generics - Now add types to variables, methods and classes. Check out how Java handles Generics and much much more.\nWell everything is changing. New Sections on Java 8 API on Date and Time and Enumerations, Completely revamped Section on Language Basics and more is coming in 2016.\nThe course intends to teach everything you need to know to kick start a career in Java. The course is focused on learning language basics and teaches you how to efficiently write code in Java.\nCheck out our new Section on Lambda Expressions covering Lambda expressions and method references in detail.\nThe Course is being updated with new Sections & Lectures to add new API's from Java 8. Start learning today as the cost shall be revised with every new Section Addition.\nIf you any doubts while following the course, our support team shall address the same.\nJUST MAIL US YOUR DOUBTS AT LEARNINGKARTCOURSES@GMAIL.COM and we shall address the same.\nSO KICK START YOUR JAVA LEARNING NOW.\nThis tutorial is intended to make Learning Java as simple as sipping a cup of Coffee. We cover every minute details of the concepts you need to know and provide examples of how to work with Java API's for practical purposes.\nAbout this Tutorial\nWe have tried to cover all basics aspects practically and where ever possible explain things theoretically to clear the fundamentals. The course is conducted mainly on Eclipse to keep up with time and wherever possible for clear understanding we have used Notepad as Editor.\n\nLet us know if you still face trouble in learning the language of choice - JAVA 8.",
      "target_audience": [
        "Anybody intending to make Java his career .",
        "Pre-requisite for developing applications in Andoid / J2EE"
      ]
    },
    {
      "title": "Learn Automation of AutoCAD using python",
      "url": "https://www.udemy.com/course/autocad-automation-using-python/",
      "bio": "Learn how to use python programming skill to create AutoCAD drawings in few seconds.",
      "objectives": [
        "Learn Python Programming Basics",
        "Learn AutoCAD basics",
        "Learn to control AutoCAD using Python",
        "Learn how to automate real life AutoCAD tasks",
        "Learn to create GUI and Execution file for your code"
      ],
      "course_content": {},
      "requirements": [
        "Access to a computer with an internet connection."
      ],
      "description": "AutoCAD is one of the most versatile designing software frequently used by millions around the world. However, making complex drawings is time consuming and are subjective to errors which increases overall operating cost of business. You can save 90-95% of your time and prevent errors by implementing python programming language in AutoCAD through this course.\nThis is the complete and ONLY course of AutoCAD automation using python on Udemy. From setting up python programming language to converting your automation code .py (source) file to .exe (application) file, this course covers all. By going through this course you will be able to write code in Python Programming language for automating drawings.\nThis course contains lectures and projects of real life example where I automated the drawing of my colleague draftsmen and was able to reduce there time on drawing from hours to minutes. This course will teach you in a practical manner. With every lecture, comes a full coding screencast and a corresponding code (source file) notebook.\nFollowing are the content of the course:\nPython crash course:\nData types and Variables\nList and Dictionaries\nIf statements\nUser inputs and Loops\nFunctions and Error Handling\nAutoCAD automation:\nLayers\nPoints\nLine, circle, text\nPolyline, rectangle\nArcs, Ellipse\nCurves\nSpline\nSolid\nBlocks\nDimension and its properties\nAutomation Project\nGUI creation and code to application conversion\nThis course will also teach you how you can create GUI for your code and convert your .py file to .exe file. So, that you will be able to handover the execution file to someone you automated the drawing for.\nSo what are you waiting for? Learn to Automate AutoCAD using python and make your and other's life easy.",
      "target_audience": [
        "Python programmers",
        "Draftsmen",
        "Engineers belonging to designing department",
        "Freelancers"
      ]
    },
    {
      "title": "PHP Programming for Begginers",
      "url": "https://www.udemy.com/course/php-programming-by-digiflax/",
      "bio": "Learn the Basics and Fundamentals of PHP Programming! A Great PHP Course that you will Actually Learn!",
      "objectives": [
        "PHP Programming Basics",
        "PHP for Web Developement Skills",
        "PHP for E-Commerce",
        "PHP with My SQL"
      ],
      "course_content": {},
      "requirements": [
        "You don't need to have any previous knowledge of programming or PHP! The only prerequisite for this course is some basic knowledge of HTML, CSS, JavaScript, and Basic MySQL. Some basic knowledge of the Internet and its terms."
      ],
      "description": "PHP (Personal Homepage or Hypertext Preprocessor) is one of the well-known programming languages. It is simple and preferable for many to build a small website and web applications. PHP has a vast community with lots of active members. WordPress, Flickr, and Wikipedia are some websites that are built with PHP. It is the most used server-side programming language by far. Approximately 75 percent of all webpages are powered by PHP.\nIf you are asking if there is anything special you need to know before you start learning PHP, the answer is no. Just dive in to the PHP: Documentation and get started.\nOne of the reasons for PHP's success is that it has really great documentation. Every concept is broken down in simple terms and explained fully. And on each page, visitors to the site comment and fill in more examples and missing details.\nPHP is also one of the simplest and most straightforward scripting languages. This makes it very easy to learn.\nIn order to use PHP effectively, you will eventually need to learn other languages, such as:\nHTML, because it's what PHP normally outputs to the browser\nMySQL, because you'll want to store user data in a database\nCSS, because it's how you add style to HTML pages\nJavaScript, because you'll want to make your HTML pages interactive\nI listed those in the order that I recommend you learn them. But I recommend that you start with PHP.",
      "target_audience": [
        "programmers",
        "web developers",
        "web designers",
        "app developers",
        "coders",
        "computer science",
        "technology addicts",
        "marketers"
      ]
    },
    {
      "title": "C# Programming from Zero to Hero : The Fundamentals",
      "url": "https://www.udemy.com/course/csharp-programming-from-zero-to-hero-the-fundamentals/",
      "bio": "Learn C# programming using a hands on approach.",
      "objectives": [
        "write and understand C#",
        "begin programming applications in C#"
      ],
      "course_content": {
        "Learn C# Programming : Introduction": [
          "Introduction",
          "I.D.E.",
          "Members 1",
          "Members 2",
          "Section 1 Hands On : Hello, World!!! (Assignment )",
          "Hands On Hello, World | Code Along",
          "Section 1 quiz"
        ],
        "Learn C# Programming : Boxing, Unboxing, Type Conversion and Operators": [
          "Boxing, Unboxing, Type Conversions",
          "Operators 1",
          "Operators 2",
          "Section 2 Hands On : Squared (Assignment )",
          "Hands On Squared || Code Along",
          "Section 2 quiz"
        ],
        "Learn C# Programming : Decisions and Loops": [
          "Decision Making and Branching 1",
          "Decision Making and Branching 2",
          "Decision Making and Looping 1",
          "Decision Making and Looping 2",
          "Section 3 Hands On : Simple Calculator (Assignment )",
          "Hands On Simple Calculator | Code Along",
          "Section 3 quiz"
        ],
        "Learn C# Programming : Access Specifiers and Types": [
          "Encapsulation Using Access Specifiers",
          "Types in C# 1",
          "Types in C# 2",
          "Section 4 Hands On : Palindrome (Assignment )",
          "Hands On Palindrome | Code Along",
          "Section 4 quiz"
        ],
        "Learn C# Programming : Arrays and Collections": [
          "Arrays",
          "Collections",
          "Section 5 quiz"
        ],
        "Learn C# Programming : Keywords": [
          "Keywords 1",
          "Keywords 2",
          "Section 6 Hands On : Grading System (Assignment )",
          "Hands On Granding System | Code Along",
          "Section 6 quiz"
        ],
        "Learn C# Programming : Exception Handling, Classes and API's": [
          "Exception Handling",
          "Exception Classes",
          "API's in C#",
          "Section 7 Hands On : Back to Basics (Assignment )",
          "Hands On Back To Basics | Code Along",
          "Section 7 quiz"
        ],
        "Learn C# Programming : Finals": [
          "The Final Project (Assignment )",
          "Final Quiz"
        ],
        "Learn C# Programming : The Wrap Up": [
          "What To Do Next",
          "Thank You!!!!!!!!"
        ],
        "Bonus Lecture( FREE STUFF)": [
          "BONUS"
        ]
      },
      "requirements": [
        "A basic knowledge of how to use a computer"
      ],
      "description": "In this C# course we aim to help you understand C# by breaking down the core fundamentals and helping you learn to write code. We are interested in helping you master and understand the C# language. This course starts you out by showing you important aspects of C# and then moves on to more advanced C# .We cover the core fundamentals needed for development.\nThose who want to learn C# this is how we do it\nWe use\nLectures\nHands On Assignments\nQuizzes\nWe use these methods to give you a university type setting and feel it is the best way for us to teach you these skills. With Lectures we go over the details of C# and explain how things work and should be done. In Hands On Assignments we give you homework which helps push it into your mind and stay there. And in Quizzes we makes sure the knowledge has absorbed. We try to give you a University setting with out the high cost of a University.\nWhat are the requirements?\nNothing is pre required, We go over everything with you and cover everything you need to know in this series.\nWhat am I going to get from this course?\nOver 30 lectures and Tons of content!\nYou will be able to efficiently write and understand C#\nYou will be on your way to becoming a great developer",
      "target_audience": [
        "Those who want to be windows developers",
        "Those wanting to learn C# for game development",
        "Those wanting to get a basic core foundation of C#"
      ]
    },
    {
      "title": "Job-Ready SQL in an Afternoon",
      "url": "https://www.udemy.com/course/master-the-fundamentals-of-sql-with-python/",
      "bio": "Go from never having written SQL before to ready to use it on the job and in technical interviews.",
      "objectives": [
        "Understand SQL databases",
        "Understand the relational model",
        "Learn to insert data into SQL databases",
        "Extract data from SQL databases",
        "Write complex queries to perform tasks like as required in technical interviews or on the job"
      ],
      "course_content": {},
      "requirements": [
        "You should be comfortable with the fundamentals of python"
      ],
      "description": "SQL is the language that you can use to interact with one major database type (SQL databases), one that is very wide-spread in today's world.\nKnowing SQL will give you a nice ability and understanding of how to handle data and databases, and being able to integrate it into Python code enables you to create great, dynamic, and automatic systems that combine the power of programming and data.\nIn this course we'll be learning SQL. We'll start by going through some fundamental knowledge like learning about the relational model, as well as what schemas are, the different data types available, and how database tables are organized. Then we'll go ahead and set up our own local Postgres database and populate it with data so that we have data to run queries against. Once our setup is done we're then ready to directly jump into writing SQL code.\n\n\nWe'll start with the basics like creating databases and tables, inserting and selecting data, and performing filtering and result ordering. This way we can make sure we're comfortable with how the data is laid out and that we feel good performing the basic operations that usually make up all queries.\n\n\nThen we'll jump deeper into SQL by learning about aggregations, subqueries, joins, unions, and window functions.\n\n\nBy the end of this course you should be ready to successfully apply your SQL knowledge in both technical interviews as well as on the job.",
      "target_audience": [
        "Anyone who wants to learn about database",
        "Anyone who wants to integrate databases into their code",
        "Anyone who wants to learn about SQL databases"
      ]
    },
    {
      "title": "Master in JavaScript Quickly Using ChatGPT Open AI",
      "url": "https://www.udemy.com/course/master-in-javascript-quickly-using-chatgpt-open-ai/",
      "bio": "Unlock Your JavaScript Mastery in No Time with ChatGPT OpenAI! techniques for real-world programming",
      "objectives": [
        "A strong foundation in the fundamental concepts of JavaScript, including variables, data types, operators, control structures, and functions.",
        "Use ChatGPT Open Ai to Learn JavaScript quickly and apply your master skills",
        "Gain proficiency in manipulating the DOM to dynamically modify web pages and create interactive elements.",
        "Explore and utilize advanced features and techniques introduced in ECMAScript 6 and later versions to write modern and concise JavaScript code.",
        "Learn to effectively use modern web development tools, such as functions and classes to streamline the JavaScript development workflow.",
        "Acquire problem-solving and debugging skills to identify and fix errors in JavaScript code using browser developer tools and industry best practices.",
        "Understand functional programming principles and apply them in JavaScript to write more maintainable and reusable code.",
        "Develop a strong foundation in JavaScript that serves as a basis for further learning and exploration of advanced topics in web development.",
        "learn What is Generative AI for prompt engineering",
        "Participate in Practice test to test your learning skills"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Getting started on Windows, macOS, and Linux",
          "How to ask great questions",
          "FAQs",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "ChatGPT AI – Introduction and Setting up": [
          "What is ChatGPT",
          "Set up an account with ChatGPT",
          "How to use ChatGPT",
          "ChatGPT for your day-to-day tasks",
          "ChatGPT for JavaScript basic HTML DOM"
        ],
        "Setting up a code development environment": [
          "What is JavaScript",
          "Choosing a code editor",
          "Installing code editor – Sublime Text",
          "JavaScript First program"
        ],
        "JavaScript Fundamentals": [
          "Variables",
          "Data types",
          "Numbers",
          "Booleans",
          "Objects",
          "Internal JavaScript",
          "External JavaScript",
          "Inline JavaScript",
          "Async and defer",
          "Practice Test on JavaScript"
        ],
        "JavaScript strings": [
          "Strings",
          "String formatting",
          "String methods",
          "Use ChatGPT for DOM string manipulation"
        ],
        "JavaScript operators": [
          "Arithmetic operators",
          "Assignments operators",
          "Comparison operators",
          "Logical operators"
        ],
        "JavaScript Conditional statements": [
          "If statements",
          "If-else statements",
          "If-else-if statements",
          "Switch-case statements",
          "Use ChatGPT for DOM decision making"
        ],
        "JavaScript Control Flow statements": [
          "While loop",
          "Do-while loop",
          "For loop",
          "Break",
          "Continue",
          "Use ChatGPT to create list items",
          "Coding exercise",
          "Solution for a coding exercise"
        ],
        "JavaScript Functions": [
          "Creating a Function",
          "Function call()",
          "Passing arguments to functions",
          "Function bind()",
          "ChatGPT to create a function with arguments"
        ],
        "JavaScript error handling": [
          "Try-catch",
          "Try-catch-finally"
        ]
      },
      "requirements": [
        "No programming experience is needed. You will learn everything you need to know",
        "You need a computer system with an active internet"
      ],
      "description": "Unlock your full potential in JavaScript with the \"Master JavaScript Quickly Using ChatGPT Open AI\" online course. Whether you're a beginner or an experienced developer, this comprehensive course is designed to help you quickly gain mastery over JavaScript and its modern tools and techniques.\n\n\nJavaScript is the backbone of modern web development, and this course provides a fast-track learning experience to help you become proficient in JavaScript programming. Through interactive lessons, practical examples, and hands-on exercises, you'll acquire the skills needed to build dynamic, interactive, and efficient web applications.\nlearn what is Generative AI for future learning\n\n\nParticipate in Practice test to test your learning skills\n\n\nThe course begins with the fundamentals of JavaScript, covering topics such as variables, data types, functions, and control flow. You'll then dive into DOM manipulation, learning how to create engaging user experiences by dynamically modifying web pages and handling user events.\n\n\nStay up to date with the latest JavaScript features and enhancements introduced in ECMAScript 6 and beyond. You'll explore topics like arrow functions, literals, modules, and more, empowering you to write cleaner, more concise code.\n\n\nNo modern web development workflow is complete without the right tools, and this course introduces you to essential tasks like DOM objects, and classes. You'll learn how to optimize your development process, manage dependencies, and build efficient web applications.\n\n\nGain hands-on experience with client-side web validations. You'll also develop strong problem-solving and debugging skills by try-catch block coding, ensuring you can identify and fix errors in your JavaScript code.\n\n\nUsing the ChatGPT as a tool to get your real-world project code and learn to customize the functionality.\n\n\nJoin this course today and accelerate your JavaScript learning journey. Master JavaScript quickly using the power of ChatGPT Open AI and emerge as a confident and proficient JavaScript developer. Enroll now and unlock the potential of JavaScript!\n\n\nNote: This is an online self-paced course, allowing you to learn at your own convenience from anywhere in the world. You'll have lifetime access to the course materials, enabling you to revisit the content and stay updated with the latest advancements in JavaScript.",
      "target_audience": [
        "Beginners: Individuals who have little to no prior programming experience but are eager to learn JavaScript and kick-start their web development journey.",
        "Web Developers: Existing web developers who want to enhance their JavaScript skills, deepen their understanding of the language, and stay updated with modern JavaScript practices and techniques.",
        "Front-end Developers: Front-end developers who want to strengthen their JavaScript proficiency specifically for working with the DOM, creating interactive user interfaces, and building responsive web applications.",
        "Students and Professionals: Students pursuing a career in web development or professionals from other programming backgrounds who want to expand their skill set and add JavaScript expertise to their repertoire.",
        "Freelancers and Entrepreneurs: Freelancers and entrepreneurs who want to build their own websites or web applications and require a solid foundation in JavaScript to bring their ideas to life.",
        "Anyone interested in JavaScript: Individuals with a general interest in JavaScript, whether for personal projects, hobby coding, or exploring the possibilities of web development."
      ]
    },
    {
      "title": "The Ultimate Python Masterclass - learn from scratch",
      "url": "https://www.udemy.com/course/python-masterclass/",
      "bio": "Become a professional python programmer. Simple and straightforward concepts to help create your own programs and games.",
      "objectives": [
        "Learn to love Python and take pride in the code you create",
        "The fundamental concepts of Python programming",
        "Create python programs using a wide range of fundamental python concepts",
        "Showcase an impressive portfolio of practical projects",
        "Develop a foundation to create AI using python",
        "Build an intuition and 'developers mindset' for creating complex programs, fixing and debugging code",
        "Discover the practical applications of Python for future work (websites, apps, data science, AI and more)",
        "Gain essential experience and confidence in problem solving",
        "Implement intermediate and advanced python concepts",
        "Create Graphical User Interfaces using Tkinter"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to maximise your learning",
          "Installing python using anaconda",
          "Getting set up with jupyter notebook",
          "Practical projects"
        ],
        "The basics": [
          "Print and input",
          "Common data types",
          "Commenting",
          "Practical #1",
          "Solutions #1"
        ],
        "Control structures": [
          "Comparison structures - True/false, and/or, ==/!=, in/not in",
          "If/else statements",
          "While loops",
          "Lists",
          "For loops",
          "Cool things you can do with lists - list comprehension",
          "Cool things you can do with lists - neural networks",
          "Practical #2",
          "Solutions #2"
        ],
        "Functions and modules": [
          "Basic functions",
          "Implementing functions, a few examples",
          "Importing and using modules",
          "Practical #3",
          "Solutions #3"
        ],
        "Handling files": [
          "Opening, reading and writing files",
          "Practical #4",
          "Soluitions #4"
        ],
        "Data structures and very useful tricks": [
          "List slicing",
          "Sets and tuples",
          "Dictionaries",
          "Practical #5",
          "Solutions #5"
        ],
        "Functional programming": [
          "Lambda",
          "Map and filter",
          "Generators",
          "Decorators",
          "Recursion",
          "Practical #6",
          "Solutions #6"
        ],
        "Object oriented programming": [
          "Classes",
          "Inheritance",
          "Practical #7",
          "Solutions #7"
        ],
        "Extras": [
          "Portfolios - Github walkthrough",
          "Resources for accelerated python growth"
        ],
        "Conclusions": [
          "Learning summary",
          "How to continue improving",
          "Course certificate - FAQ",
          "Any questions?"
        ]
      },
      "requirements": [
        "Only a computer with an internet connection"
      ],
      "description": "USED BY SOFTWARE STUDENTS AT CAMBRIDGE UNIVERSITY - TOP RATED, WORLD CLASS PYTHON FUNDAMENTALS COURSE - UPDATED CONTENT January 2018\nMaster practical python concepts and fundamentals\nThis course on python does exactly what the title describes in a simple, practical and relatable way. I help you to grasp the fundamentals of python with live coding, practical examples, projects and quizzes, moving step by step through beginner and then intermediate concepts - getting you to the point where you are ready to being a career in python - to apply the foundations of python into real life projects, such as games, websites, GUIs, data science or AI.\nWhy you need this course\nComing to grips with python isn't always easy. On your own it can be quite confusing, difficult and frustrating. I've been through the process myself, and with the help of my peers and mentors I've quickly become a proficient python developer. I want to share all I've learned with my fellow python beginners, developers, AI aspirers. My inspiration comes from believing that, if taught effectively in a carefully planned and considered way, the vast majority of people will be able to master python. That's why I've created this course.\nWhat you will get out of this course\nI will give you straightforward examples, instructions, advice, insights and resources for you to take simple steps to start coding your own programs, solving problems that inspire you and instilling the 'developer's mindset' of problem solving.\nI provide support within the course, answering questions and giving feedback on what you're discovering/creating along the way. I don't just throw you in at the deep end - I provide you with the resources to learn and develop what you need at a pace to work for you and then help you stroll through to the finish line. Studies have shown that to learn effectively from online courses, tutorials should last around ten minutes each. Therefore to maximise your learning experience all of the lectures in this course have been created around this amount of time or less.\nMy course integrates all of the aspects required to get you on the road becoming a successful python developer. I teach and I preach, with live, practical exercises and walkthroughs at the end of each section.\nWhy this price?\nAs a professional AI developer I have over five years in Senior positions in software development and technology entrepreneurship, with experience in tutoring and creating online courses, catering to thousands of students. I've been trained at Cambridge University and the prestigious Pi School of Artificial Intelligence in Rome.Face to face I charge $50 per hour for a student. To complete the curriculum that I offer it would cost them over $1000.\nTo reach more people than I could face to face I decided to create this course. As I add more content I intend to raise the price but for now I've decided on this price - the cost of around just three lessons.\nBy paying a small cost for this course I believe you will get your value back, with a lot more by the time you have completed it.\nAsk yourself - how much is mastering the fundamentals of python, preparing you for a career in python programming (and setting up your skills for AI engineering) worth to you?\nHow long will it take?\nAlthough everyone is different, on average it has taken existing students between 4 - 6 weeks to complete the course, whilst developing their skills and knowledge along the way. It's best not to speed through the content, and instead go through a handful of lectures, try out the concepts by coding, yourself, and move on once you feel you've grasped the basics of those lectures.\nWho this is not for\nThis course is not for anyone looking for a one-click fix. Although I provide you with a path walked enough times that it can be a smooth journey it still requires a lot of time and effort from you to make it happen. If you're not interested in putting in your energy to truly better yours skills in python then this may not be the right course for you.\nIs there a money back guarantee if I'm not happy?\nAbsolutely. I am confident that my course will bring you more value than you spend on the course. As one of the previously top featured Udemy Instructors my motto is 'your success is my success'. If within the first 30 days you feel my course is not going to help you to achieve your goals in python programming then you get a no questions asked, full discount.\nWhat materials are included?\nThe majority of my lectures I have chosen to be in video format so that you can hear me and see me live coding when we're going through each and every area of the course.\nAswell as the course lectures, practicals, and quizzes the course will soon also offers my full support as an instructor to answer questions, provide feedback and support.\nI will be constantly adding more content and resources to the course as time goes by. Keep checking back here if you're not sure right now and feel free to send me a message with any questions or requests you may have.\nSo go ahead and click the 'Take this course' button when you feel ready on your screen.\nI look forward to seeing you in the course.",
      "target_audience": [
        "Anyone interested in learning to code in python",
        "No pre-requisite software experience required",
        "Those looking to transition from another language"
      ]
    },
    {
      "title": "Build Smart Contracts for Cardano Blockchain",
      "url": "https://www.udemy.com/course/build-smart-contracts-for-cardano-blockchain/",
      "bio": "Learn to code in Haskell",
      "objectives": [
        "Build smart contracts in Haskell",
        "Understand the Blockchain ecosystem",
        "Code in Marlowe",
        "Use Cardano"
      ],
      "course_content": {
        "00 Course Overview": [
          "Introduction",
          "Source Files"
        ],
        "00a Blockchain and Smart Contracts Overview": [
          "00 Blockchain Introduction",
          "01 What Is Cardano",
          "02 What Is A Smart Contract",
          "Source Files"
        ],
        "00b Haskell Fundamentals": [
          "00 What Is Haskell",
          "01 Build A Function",
          "02 Argument Precendence Example",
          "03 Dollar Notation Example",
          "04 Dot Notation Example",
          "05 Build Data Types",
          "06 Build A Loop With Recursion",
          "07 Use Tuples Example",
          "08 Build Tokens",
          "09 Build A List",
          "10 Build Multi Value Data Types",
          "11 Implement A Recursive List Algorithm",
          "12 Use The Built-In List Type",
          "13 Build A Tokenizer",
          "14 Find If Element Is In List",
          "15 Currying Example",
          "16 Build Guards",
          "17 Convert String To List",
          "18 Build Fibonacci With Guards",
          "Source Files"
        ],
        "00c Marlowe Fundamentals": [
          "00 Marlowe Deep Dive",
          "01 Build A Smart Contract In Marlowe",
          "Source Files"
        ],
        "01a Build a Simple Send Crypto Contract": [
          "01 Build A Simple Send Crypto Contract",
          "Source Files"
        ],
        "01b Build a Selectable Amount Contract": [
          "01 Build A Selectable Amount Contract",
          "Source Files"
        ],
        "02 Build Your First Smart Contract with Marlowe": [
          "00 Escrow Contract Overview",
          "01 Set Up The Contract",
          "02 Build The Inner Contract",
          "03 Build Agreement And Arbitrate",
          "04 Build Choices",
          "05 Build Choice Values And Test",
          "Source Files"
        ],
        "03 Build a Pay Employees Smart Contract": [
          "00 Pay Employees Contract Overview",
          "01 Build Employees And Amounts",
          "02 Build A Deposit Action",
          "03 Build A Payment Contract",
          "04 Set Up The Contract",
          "Source Files"
        ],
        "04 Build a Token Swap Smart Contract": [
          "00 Token Exchange Contract Overview",
          "01 Set Up The Contract",
          "02 Build Actions",
          "03 Build Agreement Contract",
          "Source Files"
        ],
        "05 Build a Fundraiser Smart Contract": [
          "01 Set Up Contract And Choices",
          "02 Pay Fundraising Party",
          "03 Build A Refund Contract",
          "04 Fundraise From All Parties",
          "Source Files"
        ]
      },
      "requirements": [
        "No experience necessary"
      ],
      "description": "The journey didn't end with bitcoin.\nBitcoin was only the beginning.\nBitcoin was the first generation of blockchain technology and while it solved a lot of problems, it also has a lot of limitations.\nAlong comes Ethereum led by Vitalik Buterin.\nEthereum is a second generation blockchain.\nImagine Ethereum as what happened when Javascript and dynamic programming was added to the boring static HTML pages that represented the early web.\nIt made possible the experiences like Instagram, Gmail and Facebook.\nBut there's a new level of blockchain technology that is beyond what Ethereum can provide.\nWelcome to Cardano.\nCardano is a third generation blockchain.\nMost people don't know that the founder of Cardano, Charles Hoskinson, was on Ethereum's leadership team during its earliest days. He was able to see all the problems that Ethereum had and then use what he learned to make a next-level blockchain protocol.\nIn this course you get a simplified and easy to understand overview of Cardano and what makes it such a revolutionary blockchain innovation.\nWelcome to the future of Fintech and blockchain technology!\nAlexandra Kropova is a software developer with extensive experience in full-stack web development, app development and game development. She has helped produce courses for Mammoth Interactive since 2016, including the Coding Interview series in Java, JavaScript, C++, C#, Python and Swift.\nWhen does the course start and finish?\nThe course starts now and never ends! It is a completely self-paced online course - you decide when you start and when you finish.\nHow long do I have access to the course?\nHow does lifetime access sound? After enrolling, you have unlimited access to this course for as long as you like - across any and all devices you own.\nWhat are you waiting for? a whole slew of opportunities is only a click away!",
      "target_audience": [
        "Anyone interested in the Cardano blockchain"
      ]
    },
    {
      "title": "Python Logical Programs and Data Structures for beginners",
      "url": "https://www.udemy.com/course/python-logical-programs-and-data-structures-for-beginners/",
      "bio": "Improve logic and over come the fear of programming",
      "objectives": [
        "Programs using Numbers",
        "Programs using Strings",
        "Programs using Arrays",
        "Programs using Recursion",
        "Programs on Patterns",
        "Concepts of Time Complexity",
        "Programs on Sorting",
        "Programs on Searching",
        "Implement Data Structures",
        "Create LinkedLists",
        "Create Stack",
        "Work with Queues",
        "Implement Trees",
        "Work on problems using Data Structures",
        "And more in easy steps"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Python"
      ],
      "description": "---\nAll source code is available for download\nResponsive Instructor - All questions answered within 24 hours\nProfessional video and audio recordings (check the free previews)\n----\nAre you a College Student with Python background who is  interested in improving your programming skills or overcome the fear of coding , this course is for you.This course is for experienced developers as well.\n\n\nYou will start working on simple programs and move using numeric types\nPrint Digits in a number\nSum of Digits in a number\nCheck if a number is palindrome or not\nConvert integer to binary and visa versa\nCheck if a given number is Special and Perfect Number\nand More\n\n\nWork with Strings:\nReverse a String in different ways\nCount the words in given text\nFind words,Remove Vowels\nFind Duplicates,Replace Next Character\nand More\n\n\nUnderstand Recursion and write programs using it\nWrite programs using Arrays and Matrices\nSum of positive and negative numbers in a array\nFind min and max element in a array\nReverse elements in a array\nCheck if a given matrix is a sparse matrix\nDo Matrix Transpose\nSwap Rows and Columns\n\n\nWork with patterns:\nPrint Right Triangle\nPrint Inverted Right Triangle\nMirrored Right Triangle\nUnderstand Time and Space Complexity\nImplement Bubble Sort and enhance it\nImplement Selection Sort\nImplement Linear Search\nImplement Binary Search using recursive and non recursive ways\n\n\nData Structures:\nWhat are Data Structures\nDifferent Types of Data Structures\n\n\nLinked Lists:\nCreate a LinkedList\nInsert at the end\nInsert at the beginning\nInsert in the middle\nDelete at different positions\nTraverse\nFind Nth Node\nCheck if list has a loop\nReverse a List\nWork with Double LinkedList\n\n\nStacks:\nCreate a stack using an array\nCreate a stack using a List\nPush,Pop,Peek\nReverse a String using a stack\nCheck if symbols are balanced\n\n\nQueues:\nCreate a Queue using an Array\nCreate a Queue using a List\nenQueue, deQueue",
      "target_audience": [
        "College Students Attending Interviews",
        "Students who want to improve logic",
        "Students who want to overcome fear of programming"
      ]
    },
    {
      "title": "Building Mobile Apps with Ionic 4",
      "url": "https://www.udemy.com/course/building-mobile-apps-with-ionic-4/",
      "bio": "Build and deploy cross-platform apps easier using Ionic 4",
      "objectives": [
        "Write once using Ionic 4 and release to multiple app stores.",
        "Use Cordova plugins to access numerous native device apps from iOS and Android",
        "Integrate Firebase in you Ionic apps to store app data on a scalable NoSQL database: Cloud Firestore.",
        "Build amazing UIs with Ionic's built-in set of components—for example, lists, icons, buttons, cards, and many more.",
        "Build an app for both Android and iOS with a single codebase.",
        "Use the web technology skills that you have acquired to build mobile apps."
      ],
      "course_content": {
        "Introduction to Ionic": [
          "The Course Overview",
          "What Is the Ionic Framework?",
          "Understanding Firebase",
          "Downloading the Prerequisites (Node.js, VS Code, and the Platform SDKs)",
          "Installing Ionic and Cordova CLIs",
          "Creating Your First Ionic App",
          "Running the App in the Browser",
          "Running the App on Devices",
          "Understanding How an Ionic App Works - Understanding the Files and Folders"
        ],
        "Building Users' Interfaces with Ionic 4": [
          "Building Headers and Footers",
          "Inputs, Buttons, and Icons",
          "Creating Lists and Sliding List in Ionic",
          "Using Cards and Grids in Ionic",
          "Loading Controller",
          "Toast Controller",
          "Alert Controller",
          "Creating Pages and Navigation"
        ],
        "Using Firebase with Ionic": [
          "Setting Up the Project",
          "Configuring the App",
          "Signing Up Users",
          "Logging Users In",
          "Checking User Login Status",
          "Saving Data to Cloud Firestore",
          "Retrieving Data from Cloud Firestore",
          "Querying Data"
        ],
        "Building Your Project": [
          "Creating and Configuring the App",
          "Creating User Sign Up",
          "Creating User Login",
          "Creating ToDo Page",
          "Adding New ToDos",
          "Displaying User’s ToDos",
          "Changing ToDo Status",
          "Logging Out the User"
        ],
        "Publishing Your Application": [
          "Preparing the App Assets",
          "Preparing the App for Release",
          "Building the App for Release",
          "Signing the APK",
          "Uploading the App to the Google Play Store"
        ]
      },
      "requirements": [
        "No knowledge of Ionic is needed. Those with experience in Ionic 4 who are keen to learn its new features will also find this course useful."
      ],
      "description": "Ionic 4 marks the first version of the framework to completely embrace modern web APIs such as custom elements, CSS variables, and Shadow DOM.\nThis course shows you how to get started with Ionic 4. You will use UI components that come with Ionic and are available for use in your apps, right out-of-the-box. You'll connect your Ionic app with a NoSQL database such as Firebase to enable your app to use all the amazing Firebase features such as Firebase Auth and Cloud Firestore. You will work on the ToDo APP project, a Task Manager app using Ionic. By the end of the course, you'll have used Ionic 4 to build and prepared a cross-platform app for release into Google Play Store and App Store.\nSo are you excited to build your first app with Ionic 4? Let's get started.\nAbout the Author\nSamarth Agarwal is a developer, instructor, and entrepreneur. He has been working in the field of online education for around 4 years and has around 15,000 students on a number of platforms. He has amazing mobile and web app development courses on Udemy, Internshala, SkillShare, and LinkedIn Learning. Samarth works on the latest frontend web frameworks such as Angular and Ionic and builds cross-platform mobile applications for Android and iOS.",
      "target_audience": [
        "This course is for developers with basic JavaScript, HTML, and CSS experience who wish to learn how to build mobile apps with Ionic 4."
      ]
    },
    {
      "title": "Rust Programming Bootcamp - 100 Projects in 100 Days",
      "url": "https://www.udemy.com/course/rust-programming-bootcamp/",
      "bio": "100 Days of Rust Development: Build a Project Every Day(AI)",
      "objectives": [
        "Master Rust Fundamentals: Learn ownership, borrowing, and core syntax for building efficient and safe applications",
        "Build Real-World Projects: Develop multiple practical projects, from simple tools to complex full-stack applications",
        "Understand Systems Programming: Gain hands-on experience with file systems, concurrency, and networking in Rust",
        "Develop Web Applications: Build scalable backend APIs with Actix-Web and interactive frontends with Yew"
      ],
      "course_content": {},
      "requirements": [
        "No Prior Rust Experience Needed: This course starts from the basics and progressively builds up to advanced concepts.",
        "Basic Programming Knowledge: Familiarity with programming fundamentals (e.g., variables, loops, and functions) is helpful but not mandatory",
        "A Computer with Internet Access: You'll need a machine capable of running Rust tools and a stable internet connection.",
        "Curiosity and Dedication: A willingness to learn, experiment, and build a project every day is the key requirement"
      ],
      "description": "This course is made up of 12 videos to help you understand the initial setup - followed by documents that give you step by step implementation for rest of the Projects.\n\n\n100 Days of Rust Development: Build a Project Every Day is an immersive, hands-on programming course designed to take you from a Rust novice to an advanced developer through practical experience and daily coding challenges. With a focus on building one project each day, this course ensures that learners not only understand Rust's syntax and core concepts but also gain real-world skills by applying them in diverse projects.\nThe course is structured into five progressive phases:\nRust Fundamentals (Days 1–20) – Build a strong foundation by working on beginner-friendly projects such as calculators, guessing games, and word counters. You'll learn essential Rust concepts, including ownership, borrowing, and control flow.\nIntermediate Rust (Days 21–40) – Deepen your knowledge by exploring error handling, generics, and concurrency. Projects in this phase include chat applications, multi-threaded tools, and custom sorting algorithms.\nSystems Programming (Days 41–60) – Gain exposure to low-level programming tasks such as file handling, encryption tools, and TCP/HTTP servers. These projects prepare you for building performant and secure backend systems.\nWeb Development with Rust (Days 61–80) – Learn to build backend services with Actix-Web and create frontend interfaces with Yew. You'll also work on APIs, authentication systems, and database integration.\nFull-Stack Rust Projects (Days 81–100) – Combine backend and frontend expertise to build production-ready full-stack applications, including a final capstone project such as a social media platform or a real-time dashboard.\nThis course balances theory with practice, offering a hands-on experience that ensures you're consistently learning and applying new concepts. By the end of the 100 days, you'll have developed 100 projects, each reinforcing a specific Rust concept or skill. Whether you're a beginner or an experienced programmer, this course adapts to your pace, focusing on gradual improvement and consistent practice.\nJoin us on this exciting journey and master Rust—the language known for its performance, safety, and modern syntax. Build projects, gain confidence, and become a proficient Rust developer!",
      "target_audience": [
        "Beginners Curious About Rust: Ideal for those with little to no experience in Rust but eager to learn a powerful systems programming language.",
        "Intermediate Developers: Great for programmers familiar with other languages looking to master Rust’s unique concepts and capabilities.",
        "Aspiring Backend and Systems Engineers: Perfect for those interested in building efficient, safe, and scalable backend services or systems tools",
        "Developers Seeking Hands-On Practice: Designed for learners who prefer a project-based approach to solidify their Rust skills through daily coding challenges"
      ]
    },
    {
      "title": "Crypto trading bot for Binance on Python",
      "url": "https://www.udemy.com/course/binance-cryptocurrency-trading-bot-in-python-with-telegram/",
      "bio": "Develop and launch your own bot for futures trading with Bitcoin, Ethereum, cryptocurrencies, stocks or oil and gold",
      "objectives": [
        "Import historical data from Binance and from other sources",
        "Create trading bots for cryptocurrency, stocks, futures, gold, oil",
        "Backtesting your strategies for scalping, intraday trading and investing",
        "Using Python to create trading bots on the Binance Exchange",
        "Connecting to Binance exchange with API",
        "Setting up an Amazon server on linux, starting a bot launch schedule on Cron",
        "Trading process management with a telegram chat bot"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming skills",
        "Understanding of trading (preferred)",
        "Basic Windows user skills"
      ],
      "description": "The course is suitable for any level of programming skills. Course contains ready-to-use scripts and detailed instructions how to run them.\nThe course material and scripts will allow you to create your own algorithm for your own bot and improve its profitability, switch to manual or fully automatic trading mode.\nThe course was created to be more practical than theoretical with minimum of programming and trading theory.\nYou can either go through the course from the first lesson to the last, or download the bot script, ready to run, and start learning by changing its settings.\n\n\nAfter completing the course, you will know how to:\n- Set-up a Python development environment\n- Receive historical data on cryptocurrency directly from the Binance exchange, as well as from other sources\n- Develop your own trading algorithms\n- Train the bot to trade according to your algorithms\n- Manage a trading bot with Telegram\n- Send commands to open and close positions on the Binance exchange\n- Configure a Linux based server on Amazon from scratch\n- Visualize the price of a cryptocurrency and graphs of profitability\n\n\nWhat programming skills you will acquire:\n- Working with arrays of data through the Pandas and NumPy modules\n- Sending requests on the server, working with the Binance exchange API\n- Data visualization with Matplotlib\n- Working with the Telegram API\n\n\nTo build your own bot you will need:\n- A computer with Windows or Mac OS\n- Basic knowledge of installing new programs\n- Basic programming experience\n\n\nAs the author of this course, I will be happy to answer your questions about the course and see your feedback after you launch you own trading bot.\nSee you on my course!",
      "target_audience": [
        "Beginners and experienced traders who want to automate their work on the exchange. Investors who want to create their own bot for trading on several markets, several cryptocurrencies and stocks at once"
      ]
    },
    {
      "title": "Python for Signal and Image Processing Master Class",
      "url": "https://www.udemy.com/course/python-for-signal-and-image-processing-master-class-2023/",
      "bio": "Signal and Image Processing Algorithms : Theory, Intuition, Mathematics, Numerical examples, and Python Implementation",
      "objectives": [
        "Fundamentals of Signals and Image Processing.",
        "Analog to digital conversion.",
        "Sampling and Reconstruction.",
        "Nyquist Theorem.",
        "Convolution for Signal and Images.",
        "Signal and Image denoising.",
        "Fourier transform of Signals and Images.",
        "Signal filtering by FIR and IIR filters.",
        "Image Filtering in Spatial and Frequency Domain",
        "Wavelet Transform for Signal and Images.",
        "Histogram Processing",
        "Arithmetic, Logic and Point Level Operations on Images",
        "Implementation of all Signal and Image Processing Algorithms in Python",
        "Python Crash Course"
      ],
      "course_content": {},
      "requirements": [
        "Basic Programming Skill will be an asset but not necessary. You will learn everything in this course."
      ],
      "description": "This course will bridge the gap between the theory and implementation of Signal and Image Processing Algorithms and their implementation in Python. All the lecture slides and python codes are provided.\nWhy Signal Processing?\nSince the availability of digital computers in the 1970s, digital signal processing has found its way in all sections of engineering and sciences.\nSignal processing is the manipulation of the basic nature of a signal to get the desired shaping of the signal at the output. It is concerned with the representation of signals by a sequence of numbers or symbols and the processing of these signals.\nFollowing areas of sciences and engineering are specially benefitted by rapid growth and advancement in signal processing techniques.\n1. Machine Learning.\n2. Data Analysis.\n3. Computer Vision.\n4. Image Processing\n5. Communication Systems.\n6. Power Electronics.\n7. Probability and Statistics.\n8. Time Series Analysis.\n9. Finance\n10. Decision Theory\n\n\nWhy Image Processing?\nImage Processing has found its applications in numerous fields of Engineering and Sciences.\nFew of them are the following.\n1. Deep Learning\n2. Computer Vision\n3. Medical Imaging\n4. Radar Engineering\n5. Robotics\n6. Computer Graphics\n7. Face detection\n8. Remote Sensing\n9. Agriculture and food industry\n\n\nCourse Outline\nSection 01: Introduction of the course\nSection 02: Python crash course\nSection 03: Fundamentals of Signal Processing\nSection 04: Convolution\nSection 05: Signal Denoising\nSection 06: Complex Numbers\nSection 07: Fourier Transform\nSection 08: FIR Filter Design\nSection 09: IIR Filter Design\nSection 10: Introduction to Google Colab\nSection 11: Wavelet Transform of a Signal\nSection 12: Fundamentals of Image Processing\nSection 13: Fundamentals of Image Processing With NumPy and Matplotlib\nSection 14: Fundamentals of Image Processing with OpenCV\nSection 15: Arithmetic and Logic Operations with Images\nSection 16: Geometric Operations with Images\nSection 17: Point Level OR Gray level Transformation\nSection 18: Histogram Processing\nSection 19: Spatial Domain Filtering\nSection 20: Frequency Domain Filtering\nSection 21: Morphological Processing\nSection 22: Wavelet Transform of Images",
      "target_audience": [
        "Anyone who wants to learn Signal and Image Processing from scratch using Python.",
        "Anyone who wants to work in Signal and Image Processing area.",
        "Those students who know the Maths of Signal and Image Processing but don't know how to implement with Python.",
        "Students who want to learn data and Time series filtering, Image filtering, Image manipulation and different Image Processing techniques.",
        "Students who want to learn data and Time series filtering, Image filtering, Image manipulation and different Image Processing techniques.",
        "Students and practitioners who know implementation of signal and image processing algorithms in MATLAB but want to switch to Python."
      ]
    },
    {
      "title": "Scientific Computing in C++",
      "url": "https://www.udemy.com/course/scientific-computing-in-c/",
      "bio": "Learn numerical computation techniques by applying C++ to solve distinct mathematical tasks",
      "objectives": [
        "Learn programming concepts such as loops, arrays (vectors), boolean operator, pointers, dynamic memory allocation, OOP (inheritance, polymorphism, virtual functions), function pointers, array of funtion pointers, enum, struct etc.",
        "Apply acquired programming skills in order to understand algorithms and mathematical problems",
        "Practice reading in multiple format files for further processing",
        "Get familiar with fundamental programming concepts like object-oriented programming as it is the heart of C++",
        "Learn numerical computational techniques such as Newton method, Monte-Carlo simulation, Richardson extrapolation, Binomial & Gaussian distribution etc."
      ],
      "course_content": {},
      "requirements": [
        "Installed and running version of Visual Studio",
        "Basic knowledge in C++ is sufficient to be capable of following the content presented in the tutorials"
      ],
      "description": "C++ is an excellent programming language which is extremely well-suited for scientific computing. I do not start from scratch, so it is good if you have some experience with C++. However, I'll try to introduce fundamental programming concepts (vector & boolean functions, arrays etc.) which are needed to understand and solve the discussed coding problems. In particular, concepts needed to understand object-oriented programming like inheritance, static members, virtual functions and polymorphism will be explained in detail. So don't panic :-).\nAs a starter, we'll take a look at some basic algorithms such as linear & binary search. Couple tutorials down the road, we'll take a look at more advanced sorting algorithms like bubble & heapsort algorithms. Before heading towards the heart of C++, we start with coding some small programs such as degree to radian and binary to decimal number converter in order to internalize the required programming concepts.\nMoreover, we elaborate on recursive functions vs. for-loops with regard to advantages and disadvantages. More programming concepts involve switch functions, pointers and function pointers, typedef-constructs, enum & struct type, dynamical arrays using memory allocation and much more. Furthermore, we will learn how to parse multiple format files for post-processing.\nAfter acquiring the required knowledge, we focus more detailed on numerical methods in terms of scientific computing such as Monte-Carlo simulation of a 2D Ising magnet, integration method according to Simpson's rule, binomial distribution/coefficients, numerical differentiation using extrapolation technique by Richardson, Newton-method for finding roots, Gaussian/Normal distribution, linear/exponential regression using least square method by Gauss and so forth.\nSo, if you want to learn numerical computation techniques in detail, you are absolutely at the right place! In this sense, I hope to see you in the course and let's start coding!",
      "target_audience": [
        "Students of natural and engineering sciences"
      ]
    },
    {
      "title": "Mega Python - Pandas, Numpy, ML, APIs, GraphQL, AWS, PySpark",
      "url": "https://www.udemy.com/course/mega-python/",
      "bio": "One Mega course which covers programming, web development, APIs, DevOps, Financial World, Machine Learning and much more",
      "objectives": [
        "One Mega course 50+ hours with 30+ practical topics",
        "Pandas, Numpy, Machine Learning, AWS Services, GraphQL, APIs Developments",
        "Create and analyze projects via Python Pandas, Numpy libraries and more",
        "Learn about building APIs, working with Databases like MongoDB, Cassandra",
        "How to use Amazon S3, SQS and other services as a DevOps",
        "Work with PySpark and DataFrames",
        "Analyze practical projects like Global Earthquakes, Monkey Pox Virus and more.."
      ],
      "course_content": {},
      "requirements": [
        "No specific knowledge needed!"
      ],
      "description": "Welcome to Mega Python!\n\nThis course will guide you through everything you need to know to use Python for practical use and more! I’ve worked for Bloomberg for 17+ years and will present the knowledge to help you in this course.\n\nThis course is a 'Mega Course', packed with so many practical topics to help you success practically! We'll cover the following topics:\n\nPython Fundamentals\nNumPy for High Speed Numerical Processing\nPandas for Efficient Data Analysis\nMatplotlib for Data Visualization\nPandas Time Series Analysis Techniques\nStatsmodels\nImporting financial markets data\nCreate interactive financial charts with plotly\nTime series analysis with indexing, filling and resampling\nCreate interactive data apps with streamlit\nData visualization with Dash\n\n\nWhy you should listen to me...\nIn my career, I have built an extensive level of expertise and experience in both areas: Finance and Coding\nFinance:\n17 years experience in Bloomberg for the Finance and Investment Industry...\nBuild various financial markets analytics companies like\nKlickAnalytics,\nCryptoquote\nClickAPIs and more\nPython & Pandas:\nMy existing companies extensively used python based models and algorithms\nCode, models, and workflows are Real World Project-proven\nBest Seller author on Udemy\ne.g. PostgreSQL Bootcamp: Go from Beginner to Advanced, 60+ Hours course\nMaster Redis - From Beginner to Advanced, 20+ hours\nPython for Finance\nWhat are you waiting for? Guaranteed Satisfaction: Otherwise, get your money back with 30-day money back guaranteed by Udemy.\nLooking Forward to seeing you in the Course!\nLETS GET STARTED!",
      "target_audience": [
        "Anyone who want to explore the world of Python",
        "Anyone who want to transition from Excel into Python",
        "Anyone who want to learn how to do time series analysis on any global financial market instruments. i.e. Stocks, Indexes, Crypto and more",
        "Anyone who wants to have a single mega-course on Python which covers various practical topics"
      ]
    },
    {
      "title": "Mastering Python - From Novice to Ninja (Beginner to Expert)",
      "url": "https://www.udemy.com/course/mastering-python-from-novice-to-ninja/",
      "bio": "Learn Python with Machine Learning, Object Oriented Programming, Data Structures, Web Services, Multi-Threading and more",
      "objectives": [
        "Start fresh and build command on Python programming - Acquired the most hired tech skill employers are looking for.",
        "Master problem solving and building software that can scale and grow with time.",
        "Learn to handle acquire, manage, modify and manipulate data from a variety of sources. Data is the basis for the machine learning and data science etc.",
        "Learn how to make and use data structures in Python - Complete data structures course with examples",
        "Master Object Oriented Programming in Python - Complete OOP course with examples",
        "Create Graphical User interfaces in Python - Complete section with examples",
        "Learn graph theory and data handling with graphs using Python",
        "Learn to access web, make web service requests and make useful data utilizing the web services - Complete examples included",
        "Introduction to Machine Learning using Python including Numpy, Pandas, Matplotlib, ScikitLearn, Regression, Decision Trees, Clustering, Naive Bayes Algo & more"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming knowledge required. Total Beginner course to start and be the master in the end."
      ],
      "description": "Become a master of Python programming and get hired instantly with the most hired skill in 2024\n\n\nThis is the most detailed Python course on Udemy that will cover a vast variety of topics from the absolute basics all the way to expert-level, that we call a Python-Ninja. The course has more than 250 recorded video lectures, more than 40 hours of instructions, number of projects, homework and exercises to follow.\nYou learn the skills that are highly in demand in the industry today like machine learning, accessing web-services, object-oriented programming, data visualization and manipulation, data structures and more.\nThe course teaches you Python 3 in such a simple manner that you should be able to grasp and practice the code on your own alongside the lectures. The examples are simple to understand yet very relevant to real world requirements.\nWe start from the very beginning by helping you install required software on popular platforms like Windows, Linux and Mac. The course starts with basics of computers, how computers work, how data is represented and how programs solve problems on computers. Beginners can start from scratch even if they don’t know programming at all.\nThe course is equally useful if you’re moving from another programming language to Python. This course will get you up to speed with Python Syntax and you’ll be a Python Ninja in no time.\nIf you already know python basics, the course will teach you advanced topics. You can jump to later lectures and study the topics you don’t know. Complete this course, become an expert and add value to your resume today.\nThe course will make you complete a number of full-scale projects. The course comes with regular homework and exercises, quizzes and code samples to keep you on track with your Python learning.\n\n\nThe course content:\nIntroduction to computers and programming\nInstalling required software for learning Python 3\nGetting Started with Python programming\nData basics in Python\nWriting multi-line programs vs Console instructions\nVariables and Arithmetic\nBoolean Numbers and Binary Operations\nInput and type casting\nConditions and decision making\nRepeating code using loops\nCode Reusability - Functions\nProblem solving using Functions\nRecursion\nIntroduction to Modules\nIntroducing Lists and composite data types\nData Sorting using Lists\n2D, 3D and higher dimension lists\nSets, Tuples and Dictionaries\nFile handling and persistent storage\nHandling CSV files, opening, searching, sorting and adding data to CSV\nExceptions and Errors\nCreating Graphical User Interface (GUI) in python\nObject Oriented Programming\nInheritance, Multiple Inheritance and Polymorphism\nProgramming is simple using Object Oriented Programming\nOperator Overloading\nData Structures - Introduction to Queue\nData Structures - Stack\nIntroduction to Graph Theory\nUsing Graphs and handling data in graphs using Python\nThreading in Python\nIntroduction to Internet and web requests\nWeather App Project- A web service example\nIP address locator Project – A web service example\nIntroduction to Machine Learning\nIntroduction to NumPy\nIntroduction to Pandas\nData Visualization - Matplotlib and Seaborn\nLinear Regression\nDecision Trees\nNaïve Bayes Algorithm\nClustering and K Means Algorithm\n\n\nYou’ll receive a course completion certificate at the end of the course that you can showcase to your potential employer or can share it on your LinkedIn profile.\nFor some reason, if you don’t find the course the best fit, the course comes with a 30-day money back guarantee.\n\n\nSo, what are you waiting for? Signup for the course today and become a Python Ninja!\n\n\nWho should join?\nAbsolute beginners, the programming novice who never programmed in any language before\nProgrammers who know how to code in other languages, can become Python expert with this course\nThose who know python basics, can upgrade their skills by completing this course",
      "target_audience": [
        "Those who want to build your career and earn big salary with the most hired skill in the market",
        "Beginners who want to start fresh and want to master the programming language.",
        "Those who want to switch from other languages to Python and be a champ in Python",
        "Professionals who never knew how to program, Python is easy and this course is for you.",
        "Students looking to learn Machine Learning but don't have a programming background",
        "Young school kids learning their first programming language",
        "College students who want to learn programming for their day to day problem solving",
        "Decision makers and leaders in organizations who want to learn the language to lead from the front",
        "Teachers who have been teaching other programming languages, want to switch to Python",
        "Students looking to start their career in data sciences, this course is a must"
      ]
    },
    {
      "title": "Complete Python development masterclass",
      "url": "https://www.udemy.com/course/python3masterclass/",
      "bio": "Master the fundamentals and advanced features of Python development",
      "objectives": [
        "Python development",
        "Scripting",
        "Functional programming",
        "Object Oriented Programming",
        "Python language fundamentals",
        "Principles of software development"
      ],
      "course_content": {},
      "requirements": [
        "Mac or PC",
        "Enthusiasm",
        "Desire to learn Python"
      ],
      "description": "Python is the best language to learn when you are beginning with software development\nThere are loads of Python resources online to choose from, but this is the only course that takes you from a complete beginner in software development, teaches you the fundamentals, advanced topics, and makes you an expert in this field.\nIn addition, you have loads of practice exercises and challenges to work on. I didn't just add a bunch of exercises at the end. Instead, each concept is put in code and practiced so that we make sure you apply and learn everything through action.\nYou get over 24 hours of on-demand videos, exercises and most importantly projects to apply the knowledge we talk about.\nI've spent years building software in Python, and years again teaching people how to build code for themselves.\nThis is the most complete course I've ever done, and it's all to help you on your journey to become an expert developer.\nWe will cover basic topics such as\nlanguage fundamentals\ncollections\nflow control\nloops\nhandling errors and exceptions\nfunctions\nhigher order functions\nrecursion\ngenerators\nmodules\nworking with files\nAs well as advanced topics such as\nObject Oriented Programming\nPrinciples of development\nProperties\nDecorators\nLibraries such as\nrequests for network communications\nsqlite3 for SQL\ntkinter for GUI applications\nBeautifulSoup for HTML scraping\nAnd we will be working on projects such as\nhangman\ntic tac toe\nGUI clicker\nstore manager\nweather app\nweb scraping\nYou only need to take ONE COURSE to master Python, it's this one.",
      "target_audience": [
        "Complete newbies",
        "Beginner developers",
        "Intermediate developers",
        "Python developers"
      ]
    },
    {
      "title": "Learn COBOL Super Fast",
      "url": "https://www.udemy.com/course/learn-cobol-super-fast/",
      "bio": "The Fundamentals Of COBOL In Under Two Hours",
      "objectives": [
        "COBOL language",
        "Learn the fundamentals of COBOL in about two hours.",
        "Get a free COBOL ebook",
        "No need to install any complex software"
      ],
      "course_content": {},
      "requirements": [
        "No prerequisites"
      ],
      "description": "Yes, COBOL may seem like an obsolete language. But did you know the following...?\nCOBOL powers about 80% of in-person financial services transactions and 95% of ATM swipes.\nOn a daily basis, it processes $3 trillion in commerce.\nThere are over 220 billion lines of code and 1.5 billion are written each year.\nIn other words, COBOL is far from dead. If anything, the language appears to be poised for growth in the years ahead. Part of this is the need for digital transformation. After all, if companies want to leverage new technologies – such as machine learning and AI (Artificial Intelligence) – there will be a need to work with legacy software systems.\nOh, and by the way, there is already a labor shortage for COBOL programmers. Many Baby Boomers are retiring – so there is a need to replace them in the workforce.\nBut even the COVID-19 pandemic has highlighted the need for COBOL. How so? Well, look at what happened in New Jersey recently. The state’s unemployment system was unable to handle the surge in claims. Because of this, the Governor created a TV commercial to hire COBOL programmers to fix the problem!\nNow the good news about this language is that it was developed for non-technical people.  So in this course, you will need to spend only a couple hours to learn the fundamentals. There will also be no need to install large amounts of software and frameworks on your computer. Instead, I’ll be working with an easy cloud-based cloud app.\nOverview of the Course\nMy teaching philosophy comes from the Nike playbook: “Just do it!” So in this course, I will go through lots of interesting examples that you can code along with. But I will also show you how to learn by making errors!\nIn this course, we’ll:\nSee how to create the main structure for a COBOL language, such as with DIVISIONs, SECTIONs, PARAGRAPHs and so on.\nLook at ways to debug your programming.\nUse data types like strings and numbers.\nSee how to use loops and conditional logic.\nReview the process of creating reports and working with files.\nAre there any course requirements or prerequisites?\n· There’s no programming experience required.\n· There’s also no special software needed.\nWho this course is for:\n· Anyone who wants a great beginner’s guide for COBOL.\n· Those who are looking for a change in their career or to enhance their existing career.",
      "target_audience": [
        "Non-technical people who want to learn the COBOL language"
      ]
    },
    {
      "title": "4 Latest Practice Tests for any C++ Certification",
      "url": "https://www.udemy.com/course/4-latest-practice-tests-for-any-c-certification/",
      "bio": "4 Latest Comprehensive Practice Tests for any C++ Certification with Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Greetings and welcome to the C++ Practice Tests Preparation Course! Our mission is to furnish you with the necessary practice and expertise required for triumph in C++ development. This all-encompassing course centers on the practical application of C++ concepts. By means of four meticulously designed practice tests, we aim to offer you an engaging and immersive educational experience that spans a diverse array of subjects and levels of difficulty.\n\n\nWho Can Benefit:\nThis course welcomes individuals at various stages of their C++ programming journey. It's suitable for:\nStudents who are actively preparing for C++ certification exams.\nProfessionals looking to enhance their employability through the acquisition of a valuable C++ certification.\nProgrammers seeking to elevate their C++ skills and broaden their career prospects.\n\n\nWhat You'll Gain:\nFour Comprehensive Practice Tests: Each test includes a variety of questions that cover different C++ concepts and situations. By engaging with these practice tests, you'll build the skills to handle the types of questions you'll encounter during certification exams, ensuring you're well-prepared for the real thing.\nDetailed Explanations: After each practice test, you'll receive explanations for each question. These explanations provide a deep understanding of the correct answers, helping you solidify your knowledge and learn from any mistakes you might have made.\nAttainment Target: To successfully complete this course, aim to achieve a minimum score of 75% on each of the four practice tests. This ensures you've developed a robust level of preparedness.\nWarm regards,",
      "target_audience": [
        "Students actively gearing up for C++ certification exams.",
        "Professionals aiming to their employability by obtaining a valuable C++ certification.",
        "Programmers aspiring to advance their C++ proficiency and expand their career opportunities."
      ]
    },
    {
      "title": "Blockchain Basics and Solidity Programming",
      "url": "https://www.udemy.com/course/blockchain-basics-and-solidity-programming/",
      "bio": "Learn blockchain fundamentals and build smart contracts with Solidity in this beginner-friendly development course.",
      "objectives": [
        "Understand the fundamentals of blockchain technology and distributed ledger systems.",
        "Learn to write, deploy, and manage smart contracts using Solidity programming.",
        "Set up blockchain development tools like MetaMask and Remix for Ethereum projects.",
        "Develop real-world decentralized applications (DApps) and optimize them for gas efficiency."
      ],
      "course_content": {
        "Introduction to Blockchain": [
          "Understanding Distributed Ledger Technology",
          "Basics of cryptography in blockchain",
          "History and evolution of blockchain",
          "Key concept of blockchain network",
          "Types of blockchains/ public, private, and consortium",
          "Nodes, miners, and consensus mechanisms",
          "Blockchain DSA",
          "Role of smart contracts",
          "Use Cases of Blockchain Technology"
        ],
        "Solidity Programming Basics": [
          "Setting up Metamask",
          "Getting sepolia eth from faucets",
          "Exploring remix",
          "Variables, constants and datatypes",
          "Deploying contract(operators brief)",
          "Conditional statements",
          "Functions and constructors (1)",
          "Functons and constructors (2)",
          "Arrays, Structs and Mappings"
        ],
        "Capstone Project": [
          "Project-1",
          "Project-2",
          "Project-3",
          "Deployment and Gas Optimization"
        ]
      },
      "requirements": [
        "No prior blockchain or programming experience required.",
        "Basic understanding of programming concepts can be helpful.",
        "A computer with internet access and a web browser.",
        "Familiarity with using Chrome extensions for tools like MetaMask is a plus but not necessary."
      ],
      "description": "Blockchain technology is transforming industries by providing decentralized, transparent, and secure solutions. In this course, Blockchain Basics and Solidity Programming, we aim to introduce college students and beginners to the world of blockchain and Ethereum development.\nYou will start by understanding the foundations of blockchain technology, including distributed ledger systems, cryptography, and blockchain networks. You’ll explore the differences between public, private, and consortium blockchains, and learn how nodes, miners, and consensus mechanisms maintain the integrity of the blockchain. Additionally, you’ll understand the pivotal role smart contracts play in decentralized applications.\nNext, you’ll dive into Solidity, the programming language used to create smart contracts on Ethereum. You will set up essential tools like MetaMask and Remix to begin writing and deploying smart contracts. As you progress, you'll learn about key programming concepts, such as variables, data types, functions, arrays, and mappings. You’ll also get hands-on experience through real-world projects that help reinforce your knowledge.\n\nThe course is structured into three modules:\n\nModule 1: Introduction to Blockchain You will start by understanding the foundations of blockchain technology, including distributed ledger systems, cryptography, and the key concepts of blockchain networks. This module covers the history of blockchain, types of blockchains (public, private, consortium), and critical elements like nodes, miners, and consensus mechanisms. You’ll also explore real-world use cases of blockchain technology and gain insights into the role of smart contracts.\n\nModule 2: Solidity Programming Basics This module takes you through the essential tools and languages needed for blockchain development. You will learn to set up MetaMask and work with Remix, an online Solidity compiler. Key programming concepts such as variables, constants, data types, functions, arrays, structs, and mappings are introduced to build your foundation in Solidity. By the end of this module, you’ll be comfortable deploying your first smart contract.\n\n\nModule 3: Final Projects Apply your knowledge through practical projects that simulate real-world blockchain development scenarios. This module guides you through three hands-on projects focusing on smart contract development, deployment, and gas optimization, giving you the skills to create decentralized applications (DApps) on Ethereum.\n\nBy the end of the course, you'll be equipped with the knowledge and tools to understand blockchain technology, build and deploy smart contracts, and develop decentralized applications. This course is perfect for students eager to explore blockchain and start coding with Solidity.",
      "target_audience": [
        "College students and beginners interested in blockchain technology.",
        "Aspiring developers looking to learn Solidity and build decentralized applications.",
        "Students or professionals curious about Ethereum and smart contract development.",
        "Anyone looking to gain hands-on experience with blockchain tools and platforms."
      ]
    },
    {
      "title": "Learn C++ Intermediate Pointers, Structures, and File Stream",
      "url": "https://www.udemy.com/course/learn-cpp-intermediate-pointers-structures-and-file-stream/",
      "bio": "Master on your C++ skills - Hands-on Session on arrays, pointers",
      "objectives": [
        "Learn to program with one of the most powerful programming languages that exists today, C++.",
        "Master about every intermediate C++ topic starting with basic of C++ programming.",
        "Learn to code C++ pointers for great performance app development.",
        "Coding intermediate problem statements using the C++ language",
        "Setting up a local C++ coding environment to create your own coding practices",
        "Develop skills on real-world Arrays, pointers, structures, and external file systems",
        "Learn how to work with string statements and smart pointers.",
        "Learn Document processing using .CSV files with built-in standard filestream library",
        "Convert dynamic data type as required formats to proces by doing C++ coding",
        "Enable Logical skills by applying pointers and structure programming",
        "Learn to Apply Great future of C++, Dynamic memory allocation techniques for great Application Performance",
        "learn what is Generative AI for future learning",
        "Participate in Coding Exercise to test your learning skills"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Course Curriculum",
          "Getting started on windows, mac and Linux",
          "How to ask great questions",
          "FAQ’s",
          "Get and Installing Visual Studio",
          "Creating project",
          "C++ Hello World program",
          "Compile and running",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course",
          "Hello world program exercise"
        ],
        "Arrays": [
          "Introduction",
          "Array Creation and Initializing",
          "Array Indexing",
          "Change array Item",
          "Copying array",
          "Comparing array",
          "Passing array to function",
          "Getting array size",
          "Sorting array selection sort",
          "Searching array",
          "Multi-dimensional arrays"
        ],
        "C++ Pointers": [
          "Introduction",
          "What is pointer",
          "Creating references",
          "Memory address of a variable",
          "Creating and using pointers",
          "Constant pointers",
          "Passing pointers to functions",
          "Key points on arrays and pointers"
        ],
        "C++ Advanced Pointers": [
          "Pointer arithmetic",
          "Comparing pointers",
          "Dynamic memory allocation",
          "Resizing an array pointer dynamically",
          "Smart pointers",
          "Working with unique pointers"
        ],
        "C++ Strings": [
          "Introduction",
          "Creating strings",
          "Modifying strings",
          "Find strings",
          "Extract string with substring",
          "Working with characters",
          "String to numeric conversion functions",
          "Escape sequences",
          "Raw strings"
        ],
        "C++ Structures": [
          "Introduction",
          "Creating structure",
          "Initializing structure",
          "Structure constructor and method",
          "Array of structure",
          "Comparing structure and class",
          "Working with methods",
          "Structures and functions",
          "Pointers to structures"
        ],
        "C++ Enumerations": [
          "Creating enumerations",
          "Strongly typed enumerations",
          "Default enumerations"
        ],
        "C++ Text Files and Streams": [
          "Introduction",
          "What are streams",
          "Creating to streams",
          "Reading from streams",
          "Writing to text files",
          "Reading from text files",
          "String stream",
          "Converting values to strings"
        ],
        "C++ Binary and .CSV files": [
          "Writing to binary file",
          "Reading from binary file",
          "Writing .csv file",
          "Reading .csv file"
        ]
      },
      "requirements": [
        "No prior technical experience is required! All you need a computer!",
        "No software is required in advance of the course (all software used in the course is free)",
        "No pre-knowledge is required - good to have basic C++",
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "The \"Learn C++ Intermediate: Pointers, Structures, and File Stream\" course is designed for programmers who have mastered the basics of C++ and are ready to take their skills to the next level. This course delves into intermediate-level topics, focusing on pointers, structures, and file handling, which are essential for building efficient and robust C++ applications.\n\n\nBegin your journey with a deep dive into pointers, one of the most powerful features of C++. Learn how to use pointers for dynamic memory allocation, passing data efficiently between functions, and manipulating arrays. Gain confidence in working with advanced pointer concepts like pointer arithmetic, function pointers, and smart pointers to write cleaner and more efficient code.\n\n\nNext, explore structures to group related data together, making your programs more organized and easier to maintain. Understand how to use structures with pointers, arrays, and functions, and learn to build complex data models for real-world applications.\n\n\nFinally, master file streams to perform file input and output operations. Learn how to read from and write to text and binary files, handle exceptions during file operations, and build applications that store and retrieve persistent data.\n\n\nThroughout the course, you’ll work on practical examples and projects that reinforce your learning. By the end, you’ll have a solid understanding of these key concepts and be ready to tackle more advanced topics in C++.\n\n\nEnroll today and elevate your C++ programming skills to intermediate-level expertise!",
      "target_audience": [
        "C++ Intermediate level developers curious about programming",
        "Anyone interested in learning the Intermediate concepts of C++",
        "Anyone who wants to grasp the concept with real-world examples of coding",
        "Anyone who wants to become a proficient software developer",
        "Anyone who wants to become an independent programmer"
      ]
    },
    {
      "title": "Go: Mastering Google's Go (Golang) Programming",
      "url": "https://www.udemy.com/course/go-golang-programming-course/",
      "bio": "In this course, you'll unlock the full potential of Google's Go programming to build rich and powerful applications.",
      "objectives": [
        "Master Go Syntax and Principles: Understand Go's syntax, error handling, and memory management for foundational knowledge.",
        "Utilize the Standard Library: Use Go's library for web development, data manipulation, and API interactions efficiently.",
        "Implement Functions and Data Structures: Master functions, slices, and maps for modular, maintainable coding.",
        "Develop Concurrency Skills: Apply goroutines and channels for scalable, high-performance concurrent applications.",
        "Embrace Object-Oriented Programming: Use interfaces for flexible, reusable code structures.",
        "Navigate Go's Toolchain: Employ testing, debugging, and package management for quality code maintenance.",
        "Build and Deploy Web Applications: Create secure, scalable web services and applications with Go.",
        "Interact with Databases: Manage data in Go applications using SQL and NoSQL databases.",
        "Adopt Advanced Concurrency Patterns: Optimize application performance with sophisticated concurrency techniques.",
        "Prepare for Cloud-Native Development: Learn containerization and cloud deployment, including Kubernetes integration.",
        "Manage Project Dependencies: Utilize Go modules for efficient dependency management.",
        "Secure Applications: Implement security best practices in Go web applications.",
        "Develop Cross-Platform Applications: Extend application development across different operating systems.",
        "Optimize Application Performance: Analyze and enhance performance using Go's profiling tools."
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Welcome Message"
        ],
        "Getting started with this course": [
          "Why Learning Go? Understanding the Benefits of Go (Golang) Programming",
          "Getting Started with Go Playground",
          "Learn and Understand Go Directory Structure",
          "Learn More Go Programming and Go Variables",
          "Learn and Understand Go Strings",
          "Learn and Understand Go Control Structures",
          "Learn About Golang Switch Statement",
          "Learn and Understand Go's For & Loop",
          "Understanding Golang's Function Definitions"
        ],
        "Google's Go Programming - Learning Go's Concurrency & Built-in Types": [
          "Understanding Arrays and Slices - 1",
          "Understanding Arrays and Slices - 2",
          "Learn and Understand Go Maps",
          "Learn and Understand Go Byte Slices",
          "Learn About Go Errors",
          "Understanding Go routines and Channels",
          "Learn About the Select Keyword",
          "Learn and Understand Go Channels",
          "Understanding Multiple Writers",
          "Learning Closing Channels",
          "Understanding Nil Channels & Users",
          "Learning Buffered Channels in Go"
        ],
        "Google's Go Programming - Go (Golang) User-defined Types, Testing & Building": [
          "Understanding Go Types & The Type Keyword",
          "Learn and Understand Go Type Interfaces",
          "Learning Type Assertions and Type Switches",
          "Learn About Packages and Initialization",
          "Learning the Go Tool Chain",
          "Learn and Understand Go Testing"
        ],
        "Google's Go Programming - Learning Go Standard Packages": [
          "Learning Go format(fmt) Package",
          "Learning Go io, bufio and os Packages",
          "Learning Go net http Package",
          "Learning Go Encoding json Package",
          "Learning Go Strings, strconv & Sort Packages",
          "Learning Go Sync Package",
          "Learning Go Log Package",
          "Learning Go Flag Package",
          "Learning Go Time Package",
          "Learning Go cgo Package"
        ],
        "Advanced Go Programming - Getting Started": [
          "Learning Go Syntax - Part 1",
          "Learning Go Syntax - Part 2",
          "Learn How to Declare a Variable in Go",
          "Learn About Buffered Channels in Go",
          "Learn and Understand Anonymous Structs in Go",
          "Learn and Understand Struct Embedding in Go",
          "Learn and Understand Must in Go",
          "Learn and Understand Defer in Go",
          "Learn and Understand Errors in Go"
        ],
        "Advanced Golang (Go) Programming - Go in Depth": [
          "Learn About Build Tool in Go",
          "Learn About Comparison in Go",
          "Learn How to Use Maps as Sets",
          "Learn About Interface Keys in Go",
          "Learn About Slices in Go",
          "Learn About Collection and Reduction in Go",
          "Learn and Understand the Pprof Tool in Go",
          "Learn About Reducing Garbage",
          "Learn About Methods and Interfaces in Go",
          "Go Interfaces in depth",
          "Learn About Mocking in unit tests",
          "Learn and Understand Concurrency",
          "Learn About Go Tools in depth",
          "Learn How to Optimize Code for Speed in Go",
          "Learn and Understand Idiomatic Go",
          "Learn and Understand Time in Go",
          "Learn and Understand Errors in Go",
          "Learn and Understand Common Interfaces in Go",
          "Learn and Understand Comments in Go",
          "Learn and Understand Package management in Go",
          "Building a scalable work system in Go",
          "Learn and Understand Database in Go",
          "Learn and Understand How to Serve a JSON API in Go"
        ],
        "Course Summary": [
          "Summary",
          "Course Materials",
          "Thank You!"
        ]
      },
      "requirements": [
        "Linux system installation, and it's free",
        "Internet Access",
        "PC or Mac"
      ],
      "description": "Join Thousands of Successful Developers: The #1 Go Programming Course on Udemy Awaits You!\nDiscover the 5 Pillars of Your Go Mastery Journey:\n#1: Stay on the Cutting Edge\nReceive continuous updates and fresh, advanced modules (including 2+ hours just added!) ensuring your Go skills remain sharp and future-proof—all at no extra cost. Always be aligned with the latest Go features and industry best practices.\n#2: Achieve Total Go Mastery\nThis is the only Go course you'll ever need. Journey from foundational principles to expert-level techniques in one comprehensive, meticulously structured program. Build unshakeable confidence, sidestep common industry pitfalls, and forge your path to becoming a distinguished Go professional, all at your own pace.\n#3: Unparalleled Support, Guaranteed\nNever get stuck. Receive swift, insightful, and personalized answers to every question, ensuring a smooth and supported learning experience from start to finish. Your learning success is our priority.\n#4: Enroll Risk-Free: Your Success Assured\nYour satisfaction is paramount. Invest in your future with our ironclad 100% 30-Day Money-Back Guarantee. If this isn't the most transformative Go course for you, receive a full refund, no questions asked.\n#5: Learn from a Proven Industry Veteran\nGain practical, real-world wisdom from an instructor who has not only mastered Go but has successfully architected and deployed multiple commercial software projects using it. See Go in action (check the promo video for real-world applications!) and learn the battle-tested strategies to replicate this success.\nUnlock the Future of Software Development with \"Go: Mastering Google's Go (Golang) Programming\"\nStep into the world of high-performance programming with Google's Go (Golang)—the revolutionary language engineered for the demands of the modern digital age. Developed by the visionaries at Google, Go masterfully blends simplicity, raw efficiency, and unparalleled scalability. It's the driving force behind everything from agile scripts to colossal distributed systems, fundamentally reshaping how we build the future of technology.\nDrawing from the robust legacy of C, Go catapults you into the forefront of software innovation. Experience the power of intelligent automatic garbage collection, uncompromising type safety, the flexibility of dynamic typing (where appropriate), and a rich arsenal of built-in types. These aren't just features; they are your tools to forge high-octane, resilient web services and applications that perform under pressure.\nAs Go's dominance in the tech sphere accelerates, mastering it is no longer just an option—it's your passport to elite software development roles and groundbreaking projects. This course is your definitive deep dive, meticulously crafted to elevate you into the coveted circle of proficient Go developers. Prepare to unleash the full spectrum of Go's capabilities and infuse your programming repertoire with a new dimension of sophistication.\nWhat You Will Master: Your Journey to Go Expertise\nOur curriculum is an immersive expedition through the Go ecosystem, architected for aspiring developers and seasoned programmers alike. Guided by industry experts through hands-on exercises and real-world scenarios, you will not just learn, but master:\nGo's Core DNA: Internalize Go's elegant syntax, foundational concepts, its revolutionary memory management, and the art of concurrent programming.\nThe Power of the Standard Library: Command Go's extensive toolkit for sophisticated web development, seamless API interactions, intricate string manipulation, and precise time/date handling.\nBridging Worlds with C: Seamlessly integrate Go with existing C codebases, leveraging Go's powerful interoperability.\nConcurrent Programming Excellence: Design lightning-fast, parallel applications using goroutines and channels, the cornerstones of Go's performance.\nModern Object-Oriented Design: Embrace Go's unique and powerful approach to OOP through interfaces, building flexible and scalable systems.\nThe Professional Go Toolchain: Master testing, benchmarking, and profiling to ensure your code is not just functional, but optimized for peak performance and reliability.\nNetwork & API Alchemy: Construct robust JSON APIs, interact with databases, and dive into modern architectural paradigms like microservices.\nStay Ahead with Cutting-Edge Modules (Continuously Updated!)\nThis isn't a static course; it evolves with the industry. Freshly updated, we now explore:\nAdvanced Concurrency Paradigms: Implement sophisticated patterns with goroutines and channels for truly high-performance software architecture.\nCloud-Native Go: Master containerization with Docker and prepare for deployment in Kubernetes and leading cloud platforms.\nScalable Project Management: Utilize Go modules for elegant and efficient dependency management in complex, large-scale projects.\nFortress-Grade Security: Develop secure web applications by understanding common vulnerabilities and leveraging Go's robust security tools.\nCross-Platform Versatility: Design and deploy applications that run flawlessly across diverse operating environments, showcasing Go's adaptability.\nYour Transformation Awaits\nUpon completion, you won't just understand Go; you'll wield it with precision and creativity. You will emerge a highly proficient Go developer, armed with a comprehensive skillset to conquer the challenges of today's tech landscape and engineer the innovations of tomorrow.\nThis is more than a course; it's your launchpad into the elite echelons of software development.\nDon't just learn Go. Master it.\nEnroll now in \"Go: Mastering Google's Go (Golang) Programming\" and begin your transformation. The future of programming is written in Go—are you ready to write it?",
      "target_audience": [
        "Programmers",
        "Web Developers",
        "Software Developers",
        "Anyone interested in Go"
      ]
    },
    {
      "title": "Learn Unity C# for beginners",
      "url": "https://www.udemy.com/course/learn-unity-c-for-beginners/",
      "bio": "Start making games in Unity by learning the basics of Unity C# scripting",
      "objectives": [
        "Learn basic C# code",
        "Learn most common script commands",
        "Learn about variables, conditional statements, components and more",
        "Create a complete target shooter game"
      ],
      "course_content": {},
      "requirements": [
        "You will need a computer capable of running Unity 2021"
      ],
      "description": "Do you want to learn to create games in Unity but feel confused by C# scripting? In this course I am going to cover all the basic concepts of C# coding to get you to a beginner level in Unity game design.\nThis course is intended for people who have little to no experience of C# scripting. It is perfect for people who have never scripted before as we look in detail at each concept of  C# scripting. We first cover the theory and then you get opportunities to try them out. Toward the end of the course we put these concepts into use by creating a complete beginner level game.\nWe cover concepts such as:\nfunctions and methods\nInput events\nVariable data types\nArrays\nConditional statements\nMoving and rotating objects using code\nAccessing and manipulating components\nPhysics interactions\nAnimations\nScripting for a user interface\nThese are the most common things you will be doing when making beginner level games. When we have finished the theory, I will be guiding you step by step through the production of a target shooter game so that you will see how these scripting concepts work using real world examples.\nI guarantee that by the end of this course you will have developed new skills in coding and you will feel confident making your own games upto a beginner level. You will also have created your first Unity game.\nSo, if you want to start creating games in Unity, why not enrol today and I look forward to seeing you in my course.",
      "target_audience": [
        "This course is for beginners, with little or no scripting experience",
        "For those who want to learn to make games in Unity"
      ]
    },
    {
      "title": "Salesforce Lightning Administration Tutorial with Hands-On",
      "url": "https://www.udemy.com/course/salesforce-lightning/",
      "bio": "Best course to learn Salesforce Admin concepts + APEX Triggers in an easy Step by Step manner in Lightning Environment",
      "objectives": [
        "You will be able to build your own Salesforce Lightning Apps which should run on Laptop, Mobile and Tablet.",
        "You will be learning how to do configuration in Lightning Environment as a Salesforce Administrator with very less coding.",
        "The topics covered in this are: Creation of Custom Objects, various layouts, App Creation, Field Validations",
        "Using Formulas, Assigning Master Detail, etc"
      ],
      "course_content": {},
      "requirements": [
        "You need not have any prior knowledge in Salesforce for taking this course, you just need to have basic computer knowledge and you should be able to use a browser (Chrome / Internet Explorer)"
      ],
      "description": "This course is designed for beginners in Salesforce Lightning, who would like to learn the basics and grow in their career.\nIn this course we'll be building an Udemy App using Salesforce in Lightning environment. Following are the topics you will learn in this course:\n1. How to create different objects in Salesforce Lightning\n2. Perform validations on fields.\n3. Interconnect the objects using Master-Detail / Lookup relationships.\n4. Create different types of reports\n5. Create dashboards\n6. Field Dependencies in an object\n7. Record Types\n8. Profiles\n9. Permission Sets\n10. Letterheads\n11. Email Templates\n12. Workflow (Immediate and Time Dependent)\nIn addition, you will also learn how to create and write Apex code in Triggers to perform complex calculations for your App.\nThe app you'll be building will be compatible to all devices (laptops, tables, mobile, etc). I'll keep adding lectures to this course periodically.",
      "target_audience": [
        "This course is designed for those of you who would like to learn Salesforce Lightning Admin and work in real time in IT companies",
        "This course is for beginners in Salesforce Lightning, who would like to learn how to create various objects, link them together, perform validations including formulas and use triggers.",
        "This course is not for experienced Salesforce Lightning Admin / Developers",
        "With this course you will learn most of the Salesforce Administration topics in Lightning Environment + a little of Salesforce Development"
      ]
    },
    {
      "title": "C++ in Detail: Common Idioms",
      "url": "https://www.udemy.com/course/cpp-in-detail-common-idioms/",
      "bio": "Learning more about C++",
      "objectives": [
        "What programming idiom is",
        "Most common C++ idioms",
        "C++ polymorphism idioms",
        "C++ resource management idioms",
        "C++ optimization idioms",
        "C++ type system idioms",
        "C++ templates idioms"
      ],
      "course_content": {
        "Introduction": [
          "What is C++ idiom?",
          "Source code link"
        ],
        "Type system": [
          "Return type resolver",
          "Nullptr",
          "Type erasure: introduction",
          "Type erasure: examples from std (any, variant, function)",
          "Type erasure: implementing any"
        ],
        "Polymorphism": [
          "CRTP",
          "More CRTP",
          "Virtual constructor: introduction",
          "Virtual constructor: implementation"
        ],
        "Dependencies": [
          "PIMPL: intro",
          "PIMPL: example",
          "Fast PIMPL"
        ],
        "Templates": [
          "SFINE",
          "More SFINE",
          "Enable-if",
          "Object generator"
        ],
        "Resource management": [
          "RAII: intro",
          "RAII: example (part 1)",
          "RAII: example (part 2)",
          "Reference counting",
          "Resource return"
        ],
        "Optimization": [
          "SOO",
          "EBO"
        ]
      },
      "requirements": [
        "At least basic knowledge of C++"
      ],
      "description": "This course is about common C++ idioms that are related to:\n- types system (return type resolver, type erasure, etc.)\n- polymorphism (CRTP, virtual constructor)\n-  dependencies (PIMPL)\n- templates (SFINE, enable-if, object generator)\n- resource management (RAII, reference counting, resource return)\n- optimization (SOO, EBO)\nIdioms emerge from certain features of a programming language or a lack of them.  Thus, learning C++ idioms helps better understand this language.\nWhile learning those idioms, we will touch upon many parts of C++ like template parameters, including parameter pack, overload resolution, types of polymorphism, casting, conversion operators, placement new, special member functions, friend declarations, type deduction, etc.",
      "target_audience": [
        "Beginner - intermediate C++ developers",
        "Students (either self-taught or at university) learning C++"
      ]
    },
    {
      "title": "Python GUI Development with PySide6 - Qt for Python in 2025",
      "url": "https://www.udemy.com/course/python-gui-development-with-pyside6-qt-for-python/",
      "bio": "Learn how to build Graphical User Interface (GUI) applications with Python and PySide6 (Qt for Python)",
      "objectives": [
        "Students will learn that how to create GUI applications with Python and PySide6",
        "Students will learn how to connect Pyside6 GUI application with MySQL and SQLite Databases",
        "Students will learn how to build music and video player with Python and PySide6",
        "Student will learn how to build modern charts with Python & PySide6",
        "Students will learn how to create web browser with Qt for Python",
        "Students will learn how to create different animations with Qt for Python",
        "Students will learn that how you can create GUI applications with QtQuick and Qt Creator in PySide6"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Python"
      ],
      "description": "Hello Students\n\n\nWelcome to Python GUI Development with PySide6 - Qt for Python course, first of all let me talk little bit about Qt for Python and after that i talk about the course structure, now PySide6 is the official Python module from the Qt for Python project, which provides access to the complete Qt 6.0+ framework. The Qt for Python project is developed in the open, with all facilities you'd expect from any modern OSS project such as all code in a git repository and an open design process.\n\n\nThis course is divided on to different sections\n\n\n1: In this section we will have a simple introduction to PySide6 (Qt for Python) and after that we will go through PySide6 installation and than we create our first GUI window with PySide6.\n2: In this section we dive in to the PySide6 widgets and we talk about different widgets and also layout management that you can use in Qt for Python.\n3: In this section we talk about Signals and Slots mechanism in PySide6 and we talk about different types of Signals and Slots that you can use in PySide6.\n4: This section is dedicated to MenuBar and MenuItems, also we will talk about using QTableView, we create a simple contact list application.\n5: In this section we learn about Drawing and Graphics, we create some examples on 2D graphics in PySide6, also we build a simple paint application.\n6: This is the section that we talk about database functionality inside your PySide6 GUI application, basically we talk about MySQL and SQLite databases.\n7: In this section we talk about QtMultimedia module and we create a simple Music and Video player with PySide6 and Python.\n8: In this section we create some on charts and we talk about QtCharts module.\n9: In this section we learn about different animations in Qt for Python.\n10: In this section we talk about QtWebEngine module and we create a simple web browser with QtWebEngine.\n11: In the eleventh section we start our QtQuick journey and we create QtQuick examples using Qt Creator.\n12: In this section i will talk about QtQuick Controls\n13: This section is dedicated to different animations using QtQuick in PySide6.",
      "target_audience": [
        "Python developers who are interested to build GUI (Graphical User Interface ) Application with Qt for Python (PySide6)"
      ]
    },
    {
      "title": "Python Object Oriented Programming (OOPs)",
      "url": "https://www.udemy.com/course/python-object-oriented-programming-oops/",
      "bio": "Learn Python Object Oriented Programming step-by-step",
      "objectives": [
        "What is Encapsulation",
        "What is Abstraction",
        "What is inheritance",
        "What is polymorphism",
        "Creating Our First Class In Python",
        "Difference between instance variable and class variable",
        "Self & __init__() (Constructors)",
        "Class Methods In Python",
        "Class Methods As Alternative Constructors",
        "Class Methods As Alternative Constructors",
        "Static Methods In Python",
        "What is Abstraction and Encapsulation",
        "introduction Inheritance in Python",
        "Public, Private & Protected Access Specifiers",
        "introduction of polymorphism",
        "Super() and Overriding In Classes",
        "Diamond Shape Problem In Multiple Inheritance",
        "Operator Overloading & Dunder Methods"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Concept of object oriented programming": [
          "What is Encapsulation",
          "What is Abstraction",
          "What is inheritance",
          "What is polymorphism"
        ],
        "Creating Our First Class In Python": [
          "Creating Our First Class In Python",
          "In Python, a class is ___________ for a concrete object."
        ],
        "Difference between instance variable and class variable": [
          "Difference between instance variable and class variable"
        ],
        "Self & __init__() (Constructors) in python": [
          "Self & __init__() (Constructors)"
        ],
        "Class Methods In Python": [
          "Class Methods In Python"
        ],
        "Class Methods As Alternative Constructors": [
          "Class Methods As Alternative Constructors"
        ],
        "Static Methods In Python": [
          "Static Methods In Python"
        ],
        "What is Abstraction and Encapsulation": [
          "What is Abstraction and Encapsulation"
        ],
        "introduction Inheritance in Python": [
          "introduction Inheritance & single level inheritance",
          "single inheritance with constructor",
          "Multiple Inheritance",
          "Multilevel inheritance in Python"
        ]
      },
      "requirements": [
        "just basic knowledge of Python syntax"
      ],
      "description": "If you already know Python basics, then this course is the next step in your Python learning path to becoming a Python programmer.\nthis course is specially made for beginners, who want to understand what is object-oriented programming in Python.\n\n\nIn Python, object-oriented Programming (OOPs) is a programming paradigm that uses objects and classes in programming. It aims to implement real-world entities like inheritance, polymorphisms, encapsulation, etc. in the programming. The central concept of OOPs is to bind the data and the functions that work on that together as a single unit so that no other part of the code can access this data.\nMain Concepts of Object-Oriented Programming (OOPs)\nClass\nObjects\nPolymorphism\nEncapsulation\nInheritance\nData Abstraction\nClass\nA class is a collection of objects. A class contains the blueprints or the prototype from which the objects are being created. It is a logical entity that contains some attributes and methods.\nTo understand the need for creating a class let’s consider an example, let’s say you wanted to track the number of dogs that may have different attributes like breed, and age. If a list is used, the first element could represent the dog’s breed while the second could represent its age. Let’s suppose there are 100 different dogs, then how would you know which element is supposed to be which? What if you wanted to add other properties to these dogs? This lacks organization and it’s the exact need for classes.\nObjects\nThe object is an entity that has a state and behavior associated with it. It may be any real-world object like a mouse, keyboard, chair, table, pen, etc. Integers, strings, floating-point numbers, even arrays, and dictionaries, are all objects. More specifically, any single integer or any single string is an object. The number 12 is an object, the string “Hello, world” is an object, a list is an object that can hold other objects, and so on. You’ve been using objects all along and may not even realize it.",
      "target_audience": [
        "beginners who want to understand what is object oriented programming"
      ]
    },
    {
      "title": "JavaScript Certification Exam Preparation Tests 2023",
      "url": "https://www.udemy.com/course/javascript-certification-exam-preparation-tests/",
      "bio": "Unleash Your JavaScript Potential with This Dynamic Exam Preparation Collection!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Prepare to test and challenge your proficiency in JavaScript programming with this intensive course. With practical, hands-on practice exams, you'll be able to enhance your knowledge and skills with four exams, each consisting of 15 multiple-choice questions designed to challenge and improve your JavaScript programming expertise. Covering a wide range of topics, from JavaScript syntax and concepts to real-world implementation, this course provides you with the necessary tools and guidance to prepare for a JavaScript Certification Exam or impress in your next job interview.\nUpon completion of the practice test, you'll have access to solutions for each question, allowing you to assess your knowledge and improve your understanding of JavaScript programming.\nA passing score of 70% is required for the certification.\nWho this course is for:\nThis collection of JavaScript interview questions is perfect for anyone preparing for a job interview.\nIf you're looking to expand your understanding of JavaScript through questions and their explanations, this resource is for you.\nFor JavaScript programmers who are seeking to enhance their knowledge of the language, this set of questions can help you do so.\nWhether you're a programmer looking to transition to JavaScript or seeking to enhance your existing knowledge, these questions can help you learn more about the language.",
      "target_audience": [
        "JavaScript Developers"
      ]
    },
    {
      "title": "Code a cricket game: Learn Python programming through sports",
      "url": "https://www.udemy.com/course/code-a-cricket-game-learn-python-programming-through-sports/",
      "bio": "A beginner programming course aimed at sports fans who want to learn by coding a practical cricket simulation game",
      "objectives": [
        "Get introduced to all fundamental Python concepts in a practical way",
        "Master the basics of Python by making a fun cricket simulation game",
        "See Python concepts at work through relatable sports-focused examples",
        "Acquire the pre-requisite Python skills to move on to Machine Learning, Data Science, Sports analysis etc..",
        "Learn to program through engaging subject matter and work through scenarios that you can picture in real life – while having fun"
      ],
      "course_content": {},
      "requirements": [
        "No prior programming knowledge needed: this course will cover all the basics",
        "An interest in cricket"
      ],
      "description": "Hey cricket fans,\nLearn to code with this beginner Python programming course featuring 100% cricket-related examples and projects.\nBy the end of this course, you will have made a fully working cricket game simulator - even if you are new to programming.\nSo, whether you want to change careers and become a super savvy sports data analyst or, just try to predict the results of your team every week – learning Python is where it all begins.\nCheck out this course and learn a new high-income skill while tackling a super-interesting cricket project.\nAs a sports fan, even if you’ve tried to learn to program before, but lost interest because of the boring examples – give this course a go – you’ll be pleasantly surprised.\nAnd, obviously, if you aspire to become a sports data analyst, but need to learn Python basics first – then this is definitely the course for you. You will learn programming using relevant sports examples as opposed to rehashed unrelatable exercises.\nThis course is very practical. I’m going to teach you a lot of different concepts right from the start, and you will immediately see how they work in a practice – in real scenarios – because you are programming something from lesson one. Then, we will keep on using and building on these concepts throughout our projects until you become really familiar with them.\nMany other courses take 10-20 videos to go through some of the concepts I introduce in lesson one – and you would be sitting there wondering when you’re going to get to actually program something. With this course, you won’t ever feel that.\nThis course is based on a very successful learning strategy that many experienced programmers encourage, which is to find a project that you enjoy doing, and then learn the concepts you need to complete that project. Then do another project and, learn what you need, and build your knowledge, and so on.\nLearn what you love, love what you do\nSo, if you are ready to invest some time in learning Python – why not enjoy it? It’s a lot easier to learn to program when you’re engaged in the subject matter and working through scenarios that you can picture in real life – and while having fun. So, are you ready to kick-off? I know, I am….",
      "target_audience": [
        "Sports-fans who want to learn python programming",
        "Beginner Python programmers who are struggling with motivation in other courses",
        "Anyone who wants to consider a career as a sports data analyst and wants a place to start",
        "Beginner programmers who want to learn Python while working on a practical cricket-related project"
      ]
    },
    {
      "title": "C# Basic and Advanced: Creating a Point of Sale System",
      "url": "https://www.udemy.com/course/csharp-basic-and-advanced-creating-a-point-of-sale-system/",
      "bio": "Learn from a beginner to be a C# & Database programmer.",
      "objectives": [
        "Learn the fundamentals of C# and .NET Framework",
        "Learn development tools such Visual Studio and Microsoft SQL Server",
        "Learn the difference between variable types",
        "Learn Control the flow of programs using conditional statements such If and loop",
        "Learn Events",
        "Learn how to design graphic user interfaces",
        "Learn how to design database and create a table for C#",
        "Learn SQL commands such SELECT, UPDATE, and DELETE",
        "Learn C# database programming",
        "Develop a Phone book Project as a workshop",
        "Develop a Point of Sale System as a workshop",
        "Print a receipt and report by using RDLC",
        "Learn how to develope POS",
        "Building POS",
        "Building Applications",
        "Coding C# to read bardcode by using scanner",
        "Learn Microsoft SQL Server",
        "Get the source code of workshop"
      ],
      "course_content": {
        "Introduction": [
          "Welcome"
        ],
        "Introduction to Development Tools": [
          "Install Visual Studio IDE",
          "Install Microsoft SQL Server",
          "Getting to Know a Development Tool",
          "Save and Close a Project"
        ],
        "Basic C#": [
          "Variables in Brief",
          "Convert a Variable",
          "Events in C# Programming",
          "Conditional Statements - If and Else",
          "Loops",
          "Functions - Part I",
          "Functions - Part II"
        ],
        "Introduction to Database": [
          "The fundamental of database",
          "Create a database, table and learn SQL command"
        ],
        "Workshop 1: Contact book Software": [
          "Design a Program and Database, Code C# to Connect, Insert and Select information",
          "Update, Delete, Search Information from Database Via C# programming"
        ],
        "Workshop 2: Develop a Point of Sale System for the Real World": [
          "Code Login or Authentication Form",
          "Design a Main Form",
          "Design Form Inventory",
          "Show Information from Database in Datagridview",
          "Show Information from a Selected Column of Datagridview in Textboxes",
          "Add Product to a Table in Database",
          "Update Production's Information in Database",
          "Delete Product's Information",
          "Search Product Information",
          "Design a User Form",
          "Show Users from Database",
          "Add a User to Database",
          "Update User's Information",
          "Delete User's Information",
          "Design a Cashier Form",
          "Scan Barcode to Add Product to a Datagridview",
          "Fixing a Mistake From The Previous Lesson",
          "Remove a Scanned Product from Datagridview",
          "Calculate the Total Amount of the Scanned Products",
          "Calculate Change",
          "Enable and Disable the Checkout Button",
          "Save Sale Information",
          "Save Sale Detail Information",
          "Create a receipt form",
          "Install RDLC for creating a Report of a Receipt",
          "Create a Dataset and a Report for a Receipt",
          "Create and Design a Form for a Sale Report",
          "Get Data form Database and Show in a Sale Report Form",
          "Pass a DataTable from the Login Form to a Main Form and Cashier Form"
        ],
        "Source Code": [
          "The Source Code of Workshop 2 (Develop a Point of Sale System for the Real Worl)",
          "How to open the source code of workshop 2"
        ]
      },
      "requirements": [
        "No Need Any prerequisites"
      ],
      "description": "Welcome to the C# Basic and Advanced: Creating a Point of Sale System\nThe course covers all the fundamental concepts of C# and Microsoft SQL SERVER for Database. We include the most interesting and essential topics in this course. This is the most comprehensive C# and Database that will make you successful in C# Database Programming.\nThe experienced instructor will teach you from the beginning level until you can make business software such as a Point-of-Sale System by yourself. The course will give you an idea of programming, so you can develop software by yourself after finish this course.\nThe course has been created for months to make sure that students get the best C# course. The instructor tries to make everything in the course simple and step-by-step. No matter you are a newbie, at the end of the course, you will be a professional programmer.\nDon't waste your time looking for other courses. There are many online courses that give you only a simple technique. This is the best C# programming class.\nWe will not let our students behind. The instructor always answers students when they have a problem. We will give the best to support our students. In addition, even though the course is ended, but it is not really ended. We will keep updating the course and uploading an extra video for our students.",
      "target_audience": [
        "Newbies who want to learn C#, .Net Framework, and Database",
        "Student who want refresh and learn more about C#, .Net Framework, and Database",
        "Beginner to Advanced programmers"
      ]
    },
    {
      "title": "Java Fundamentals for Beginners",
      "url": "https://www.udemy.com/course/java-complete-course-for-beginners/",
      "bio": "Learn Java from scratch to become a computer programmer",
      "objectives": [
        "Programming with Java from the beginning",
        "Practice with sample projects",
        "Improve your logical thinking",
        "Improve your programming experience",
        "Practical examples to explain every concept"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup Environment": [
          "How to download & Install Java - Windows",
          "How to download & install Java - MacOS",
          "How to download & install IntelliJ - Windows",
          "How to download & install IntelliJ - MacOS"
        ],
        "First Step to Java": [
          "How to Create a Java Project Using IntelliJ IDEA",
          "How to Write First Java Program",
          "Parts of a Java Program",
          "Naming Convention",
          "Comments",
          "Escape Sequences"
        ],
        "Variables": [
          "Introduction to Variables",
          "Char Data Type",
          "String Data Type",
          "Integer Data Type",
          "Long Data Type",
          "Float Data Type",
          "Double Data Type"
        ],
        "Basic Operations": [
          "Addition, Subtraction, Multiplication, Division",
          "Operator, Operand and Expression",
          "Modulus Operator",
          "Pre Increment",
          "Pre Decrement",
          "Post Increment",
          "Post Decrement",
          "String Concatenation"
        ],
        "Read User Inputs": [
          "Introduction to Read User Inputs",
          "Read String User Inputs",
          "Read Integer User Inputs"
        ],
        "Conditions": [
          "Introduction to Conditions",
          "Less than Condition",
          "Less than or Equal Condition",
          "Greater than Condition",
          "Greater than or Equal Condition",
          "Equal to Condition",
          "Not Equal to Conditin",
          "Nested If"
        ],
        "Conditional Operators": [
          "And Conditional Operator",
          "OR Conditional Operator"
        ],
        "Loops": [
          "Introduction to Loops",
          "For Loop",
          "While Loop",
          "Do while Loop"
        ],
        "Data Collections": [
          "Array #Part 1",
          "Array #Part 2",
          "Array #Part 3"
        ]
      },
      "requirements": [
        "Computer to coding java",
        "An internet Connection",
        "The desire to learn"
      ],
      "description": "Hello, welcome to the java complete course for beginners. If you are also interested in learning computer programming, this java programming course is a good start.\nIn this course, the computer language java is discussed in English. in a way that is easy for everyone to understand from the beginning. In addition, we use practical examples to explain every concept. It develops your logical ability to write computer software. All you need is the desire and interest to learn.\nThis is the first release of this course. Java OOP concept lectures are coming soon….\nas a first release, we discuss,\n1. Introduction\nIntroduction to java\n2. Setup Environment\nHow to download & install Java 17 - windows operating system\nHow to download IntelliJ & install IntelliJ IDEA - window operating system\nHow to download & install Java 17 - Mac OS\nHow to download IntelliJ & install IntelliJ IDEA - Mac OS\n3. First Step to Java\nHow to Create Java Project\nHow to write first Java program ( The Hello World program )\nParts of Java Program\nNaming Convention\nComments\nEscape Sequences\n\n\n4. Variables, Data Types\nIntroduction to variable\nChar data type\nString data type\nInteger data type\nLong data type\nFloat data type\nDouble data type\n\n5. Basic Operations\nAddition, Subtraction, multiplication, division\nDefine operator and operands\nModulus Operator\nPre-increment\nPre-decrement\nPost-increment\nPost-decrement\nString concatenation\n\n\n6. Read User Inputs\nRead String user Inputs\nRead Integer user Inputs\n7. Conditions\nLess than\nLess than or equal\nGreater than\nGreater than or equal\nEqual to\nNot equal\nNested if\n8. Conditional Operator\nAnd operator\nOR Operator\n9. Loops\nFor Loop\nWhile Loop\nDo while Loop\n9. Data Collections\nArray\n\n\nGood Luck !!!",
      "target_audience": [
        "Anyone who want to learn Java"
      ]
    },
    {
      "title": "Fast VB .Net ,Beginners to Visual Basic App in Windows Forms",
      "url": "https://www.udemy.com/course/fast-vb-net-by-windows-forms-to-create-pro-windows-apps/",
      "bio": "Programming VB .Net, Visual Basic Studio , vb dot net - Windows Forms Skin , SQL, Multi language app , Zip ,VirtualBox",
      "objectives": [
        "7 Courses in One + 35 Hours - Learn with Projects , Beginners, Interm and Advance",
        "Build 3 pro apps: Calculator , Phone Book and Diary application",
        "Easily learn the basics of VB .Net to advance topics by Windows form method",
        "Learn: Variables,Controls,Events",
        "Using Files, Folders and text files",
        "Using Zip files",
        "Date and time",
        "Using Nuget"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction",
          "Download VB.Net projects and files of this course"
        ],
        "Installing visual studio 2017": [
          "Section intro",
          "Visual Studio 2017 requirements",
          "How to Install Visual Studio 2017?"
        ],
        "Visual studio 2022 update": [
          "Visual Studio 2022 requirements",
          "Download Visual Studio 2022",
          "Installing Visual Studio 2022",
          "Create Vb.Net new project in Visual Studio 2022"
        ],
        "Start using VB.Net": [
          "Section overview",
          "Why VB.Net?",
          "My First VB.Net App in Windows forms",
          "Properties window in Visual Studio",
          "Toolbox window",
          "Project files of VB.Net"
        ],
        "Start using form": [
          "Section intro",
          "Common properties of VB.Net form",
          "Advance properties of VB.Net form",
          "Common properties of Controls"
        ],
        "Label and Textbox": [
          "Section intro",
          "Label control",
          "TextBox control",
          "Final Project: Design Backup Form"
        ],
        "Common Controls": [
          "Section intro",
          "ComoBox & ListBox",
          "CheckBox control",
          "Radio Button control",
          "ProgressBar",
          "PictureBox",
          "Numeric Up Down",
          "TrackBar"
        ],
        "Grouping Controls": [
          "Section intro to Grouping Controls",
          "GroupBox",
          "Panel control",
          "TabControl",
          "TabControl & TabPage",
          "Final Project: Create Setting Form"
        ],
        "Toolstrip and Menustrip": [
          "Section intro to Toolstrip and Menustrip",
          "Toolstrip",
          "Advance Toolstrip",
          "custom skin for Toolstip",
          "MenuStrip: Add menu to form"
        ],
        "Start Coding with VB.Net": [
          "Write your first code in VB.Net",
          "Build and rebuild",
          "Error Window",
          "VB.Net keywords",
          "Change the color",
          "Comment Usage",
          "\"Me\" keyword",
          "Change the Text",
          "Enable / Disable Controls in VB.Net"
        ]
      },
      "requirements": [
        "Windows operating system"
      ],
      "description": "Hi There!\nWith my 20 years programming skills I'm with you to share my knowledge with you.\nSo\nIf you try you will learn using VB .Net to create VB .Net Apps for windows!\nIf you are beginners or student looking for a tutorial to create Windows App in VB .Net in simplest way!\n\n\nI started from beginning and show you how to :\n7 Courses in One + 35 Hours + 3 live Projects\nCreate Windows Apps by VB .Net\nBasics of VB .Net like: variables\nfor loop structure\nIf statement\nControls and events\nStart using the NuGet to download components\nExtract zip file and create zip file\nWorking with files and folders\nUsing text file to save data\nSQL in VB .Net\nCreate database app in VB .Net by SQL Database\nCreate calculator application\nDesign Phone Book application\nVirtualBox for VB .Net\nCreating MDI and ADI projects\nControls like : Button, TextBox, CheckBox, ComboBox and ListBox\nCreate digital clock\nWorking with date and time\nAdvance using of combobox\nWorking with images\nDialogs in VB .Net:\nand...\nDon't hesitate to start learning VB .Net\nEvery thing will be discussed with sample project and you will have lot of fun within my course.\nLet's go !!!",
      "target_audience": [
        "Any one who wanna learn VB .Net Deeply and quickly"
      ]
    },
    {
      "title": "Master Rust: Ownership, Traits & Memory Safety in 8 Hours",
      "url": "https://www.udemy.com/course/master-rust/",
      "bio": "Master Rust Fast: Ownership, Traits, Error Handling & Projects in 8 Hours – Perfect for Python/JS Developers!",
      "objectives": [
        "Targets professionals aiming for high-demand roles at AWS/Meta where advanced Rust (generics, iterators, smart pointers) is critical.",
        "For engineers frustrated with manual memory management, offering Rust’s compile-time guarantees to build secure, high-performance systems.",
        "Perfect for designing APIs or distributed systems using Rust’s concurrency model, error handling (Result, Option), and zero-cost abstractions.",
        "Prepares coders to contribute confidently by mastering lifetimes, traits, and crate/module organization for library development.",
        "For tinkerers leveraging Rust’s enums, pattern matching, and no_std for memory-efficient robotics or command-line utilities.",
        "Equips decision-makers to assess Rust’s viability through hands-on error handling, testing, and project structure modules.",
        "Provides a scaffolded path—from primitives (structs, enums) to advanced topics (traits, lifetimes)—for teaching Rust effectively."
      ],
      "course_content": {
        "Introduction": [
          "Rust - Introduction",
          "Installing Rust (macOS, Linux, Windows)",
          "Windows MSVC build Tools setup",
          "Extensions Installation for Rust",
          "Exclusive Discord Community"
        ],
        "Basic Rust": [
          "Writing First Program in Rust",
          "Comments in Rust Program",
          "Printing in more ways Rust",
          "Exploring let Keyword in Rust",
          "Integers in Rust",
          "Float, Char, Bools and Unit type in Rust",
          "Quiz 1",
          "Literals in Rust",
          "Bitwise operations in Rust",
          "Tuples in Rust",
          "Arrays In Rust",
          "&str vs String in Rust",
          "All type of Structs in Rust",
          "Constants in Rust",
          "Scope & Shadowing in Rust",
          "Type Casting in Rust",
          "If and else in Rust",
          "All type of loop in Rust",
          "While and for loop in Rust",
          "Match in Rust",
          "Enum in Rust",
          "Destructuring Tupple, Arrays and Struct in Rust",
          "Function in Rust",
          "Associated functions & Methods in Rust",
          "Crates and Cargo in Rust",
          "Closures part-1 in Rust",
          "Closures part-2 in Rust",
          "Modules in Rust",
          "cfg in Rust",
          "Iterator in Rust"
        ],
        "Error Handeling": [
          "Error handling with abort and unwind in Rust",
          "Error handling with Option in Rust",
          "Error handling with Result in Rust"
        ],
        "Generics": [
          "Function Generics in Rust",
          "Struct Generics in Rust"
        ],
        "Memory": [
          "Ownership in Rust",
          "Borrowing in Rust",
          "Lifetime in Rust"
        ],
        "Trait and Generics": [
          "Trait in Rust Part 1",
          "Box in Rust",
          "Trait in Rust Part 2",
          "Trait in Rust Part 3"
        ]
      },
      "requirements": [
        "A Windows, macOS, or Linux computer",
        "Visual Studio Code IDE",
        "No previous experience with programming is needed!"
      ],
      "description": "Master Rust: Ownership, Traits & Memory Safety in 8 Hours\nMaster Rust Fast: Ownership, Traits, Error Handling & Projects in 8 Hours – Perfect for Python/JS Developers!\nWhy Rust? Why This Course?\nRust has dominated Stack Overflow’s “Most Loved Language” survey for seven years, with giants like Microsoft, Google, and Amazon using it to eliminate crashes and vulnerabilities in critical systems. But let’s face it: Rust’s steep learning curve—especially around ownership, lifetimes, and traits—often leaves developers frustrated.\nThis 8-hour intensive course strips away the fluff. Instead of drowning you in 60+ hours of filler, we focus on mastering Rust’s hardest concepts while building real tools. By the end, you’ll:\nWrite memory-safe code without garbage collection or segfaults.\nDesign flexible APIs using traits and generics.\nShip a CLI application that outperforms Python/JS scripts by 40x.\nWhat Sets This Course Apart?\nNo Low-Level Experience Needed\nDesigned for Python/JS developers, we translate high-level concepts into Rust’s strict paradigms.\nProject-Driven Learning\nBuild as you learn:\nA configuration parser using enums and traits.\nA memory-safe CLI tool leveraging ownership and Result types.\nA data analyzer with HashMap and smart pointers (Box).\nIndustry-Standard Practices\nCovers modern Rust patterns used at AWS and Mozilla, including dedicated modules on traits, Box optimizations, and HashMap workflows.\nKey Features of the Curriculum\nLogical Progression: Starts with basics (variables, primitives) and advances to complex topics (traits, lifetimes).\nDeep Dives on Rust-Specific Concepts:\nOwnership, borrowing, and lifetimes (Section 15).\nTraits and generics (Sections 14 & 16).\nMemory management with Box and HashMap (Section 19).\nPractical Skills:\nError handling with Result and Option (Section 18).\nMacro-driven metaprogramming (Section 17).\nIndustry Alignment: Covers Cargo workflows, testing, and modern Rust patterns.\nCourse Curriculum: Master Rust: Ownership, Traits & Memory Safety\n\n1. Basics\n1.1 Hello World\n2. Primitives\n2.1 Literals and Operators\n2.2 Tuples\n2.3 Arrays and Slices\n3. Custom Types\n3.1 Structures\n3.2 Enums\n3.3 Constants\n4. Variable Bindings\n4.1 Mutability\n4.2 Scope and Shadowing\n4.3 Declare First\n4.4 Freezing\n5. Types\n5.1 Casting\n5.2 Literals\n5.3 Inference\n5.4 Aliasing\n6. Conversion\n7. Expressions\n8. Flow of Control\n8.1 if/else\n8.2 loop\n8.3 while\n8.4 for and range\n8.5 match\n\n\n9. Functions\n9.1 Methods\n9.2 Closures\n9.3 Higher-Order Functions\n9.4 Diverging Functions\n10. Modules\n10.1 Visibility\n10.2 Struct Visibility\n10.3 The use Declaration\n10.4 super and self\n10.5 File Hierarchy\n11. Crates\n11.1 Using a Library\n12. Cargo\n12.1 Dependencies\n12.2 Conventions\n12.3 Tests\n12.4 Build Scripts\n13. Attributes\n13.1 dead_code\n13.2 Crates\n13.3 cfg\n14. Generics\n14.1 Functions\n14.2 Implementation\n14.3 Traits\n14.4 Bounds\n14.5 Multiple Bounds\n14.6 where Clauses\n15. Scoping Rules\n15.1 RAII\n15.2 Ownership and Moves\n15.3 Borrowing\n15.4 Lifetimes\n16. Traits\n16.1 Derive\n16.2 Returning Traits with dyn\n16.3 Operator Overloading\n16.4 Drop\n16.5 Iterators\n16.6 Clone\n17. Macros\n17.1 Syntax\n17.2 DRY (Don’t Repeat Yourself)\n17.3 DSL (Domain-Specific Languages)\n17.4 Variables\n18. Error Handling\n18.1 panic!\n18.2 abort & unwind\n18.3 Option & unwrap\n18.4 Result\n18.5 Multiple Error Types\n18.6 Iterating Over Results\n19. Standard Library Types\n19.1 Box, Stack, and Heap\n19.2 Vectors\n19.3 Strings\n19.4 Option\n19.5 Result\n19.6 HashMap\nWho Should Enroll?\nPython/JS developers eyeing systems programming roles.\nC++/Java engineers tired of manual memory management.\nCareer-changers seeking high-paying Rust jobs ($40k+ average salary boost).\nCourse Includes\n8 hours of laser-focused video (no filler lectures).\nHands-on challenges with solution walkthroughs.\nLifetime access to all current course materials.\nQ&A support (responses within 24 hours).",
      "target_audience": [
        "Developers Transitioning from Python, JavaScript, or Java",
        "Engineers looking for learning a new system-level programming Rust"
      ]
    },
    {
      "title": "Hands-on Concurrency with Go",
      "url": "https://www.udemy.com/course/hands-on-concurrency-with-go/",
      "bio": "Build better software faster with concurrency in Go",
      "objectives": [
        "Theory of concurrency and parallelism",
        "How to use Goroutines to implement concurrent systems",
        "The Go memory sharing model with channels",
        "The importance of I/O concurrent design for high-performance software",
        "How to improve performance by recognizing and exploiting inherent data parallelism",
        "Techniques for improving your software’s architecture with the “gopher” model",
        "Best practices for building concurrent systems in Go"
      ],
      "course_content": {
        "What are Concurrency and Parallelism?": [
          "The Course Overview",
          "The World of Concurrent Software",
          "Scalability – Why Does My Website Keep Crashing?",
          "Performance — Getting the Most out of Your CPU",
          "Reliability — What Do You Mean, us-east-1 Is Down?",
          "Maintainability"
        ],
        "Goroutines, channels, and concurrency in Go": [
          "Go Programming Review",
          "Goroutines",
          "Communicating by Sharing Memory",
          "Sharing Memory by Communicating with Channels",
          "Queuing Work with Buffered Channels",
          "Non-Blocking Channel Operations",
          "Concurrency is Cheap"
        ],
        "Data Parallelism": [
          "What is Data Parellism",
          "The Barycenter Problem",
          "A Naive Barycenter Implementation",
          "A Parallel Barycenter Implementation",
          "Performance Comparison"
        ],
        "I/O Concurrency": [
          "What is I/O Concurrency?",
          "A Reddit and Hacker News Client",
          "I/O Concurrent Design",
          "Putting it All Together",
          "Testing"
        ],
        "Task Parallelism": [
          "What is Task Parallelism?",
          "A Cautionary Tale",
          "A Reddit and HackerNews Search Engine",
          "Building a Web Service in Go",
          "Incorporating the Reddit and HackerNews Client",
          "Advantages and Disadvantages of Task-Parallel Design"
        ],
        "Concurrent Architecture": [
          "What is Concurrent Architecture?",
          "Data Parallelism in Concurrent Architecture",
          "I/O Concurrency in Concurrent Architecture",
          "Task Parallelism in Concurrent Architecture",
          "Advantages and Disadvantages of Concurrent Architecture",
          "Applying Concurrent Design in Projects Large and Small"
        ]
      },
      "requirements": [
        "We assume that they are acquainted with coding with Go We assume that they’re well-versed with Golang basics as we won’t be covering any programming basics in the course if you want to code for anything but the smallest, weakest systems with Go, this course is for you."
      ],
      "description": "This course presents you a hands-on look at creating concurrent and parallel programs using the Go programming language. From a blazing-fast garbage-collected memory model to effortless, lightweight Goroutines to speedy communication using in-memory channels, Go makes powerful concurrency primitives available which are unparalleled in other languages. This course provides you with both the theoretical and practical knowledge you will need to apply them to your own software.\nThis course covers the basics of concurrency and parallelism in Go, along with in-depth looks at the three types of concurrent and parallel program models and an introduction to concurrent architecture. This course will show you the multitude of tools available in Go for implementing concurrent systems, including goroutines, blocking channels, buffered channels, and non-blocking in-memory communication.You will build multiple concurrent applications and examine the benefits and drawbacks of the various concurrency options available.\nBy the end of the course, you will be able to rapidly and confidently identify concurrent and parallel problems and apply the Go language concurrency constructs to solve them.\nAbout the Author\nLeo Tindall is a software developer and hacker from San Diego whose interests include scalability, parallel software, and machine learning.",
      "target_audience": [
        "This course is for developers who want to get to grips with concurrency techniques with Go."
      ]
    },
    {
      "title": "Whatsapp Automation: Whatsapp Bots Using Python & Twilio",
      "url": "https://www.udemy.com/course/whatsappautomation/",
      "bio": "Learn to code Whatsapp bots for performing multiple task automatically .",
      "objectives": [
        "How to use automation using Whatsapp .",
        "Students will learn how to create help desk oriented Whatsapp bots using python .",
        "Python & Flask web framework will be used for coding",
        "Students will learn how to code and integrate twilio api with local python code",
        "How to use mongodo as backend database for the flask application and how to use with whatsapp."
      ],
      "course_content": {
        "Introduction": [
          "Instructor bio & course overview"
        ],
        "Pre-requisites Set Up": [
          "hands on example on setting up the pre-requisites"
        ],
        "Whatsapp bot to respond automatically to an income message": [
          "Part1:Hands On example of whatsapp bot with code snipppet",
          "Part2:Hands On example of whatsapp bot with code snipppet"
        ],
        "Whatsapp bot to respond automatically to an income message with Image": [
          "Part1:Hands On example of whatsapp bot with code snipppet",
          "Part2:Hands On example of whatsapp bot with code snipppet"
        ],
        "Whatsapp bot to respond automatically to an income message with PDF file": [
          "Hands on example of whatsapp bot to send pdf file automatically"
        ],
        "Whatsapp bot to writeback into mongodb": [
          "Hands on example of writing to mongodb using whatsapp bot ,with code snippet"
        ],
        "Whatsapp bot to get live status of Corona Virus": [
          "hands on example of a bot to get live status update for corona virus"
        ],
        "Whatsapp bot to get live status of Corona Virus , with plot": [
          "hands on example of a bot to get live status including graph for corona virus"
        ],
        "Restrict the uses of whatsapp Twilio Bot Using Python": [
          "hands on example on how to restrict the uses of whatsapp bot with code snippet"
        ],
        "How to create vip access for the users to give unrestricted access to the bot": [
          "Hands on example of creating vip access for the users with code snippet"
        ]
      },
      "requirements": [
        "Basics of Python"
      ],
      "description": "This course covers WhatsApp automation processes using Python and Twilio, starting from the fundamental to advanced level. Once you have mastered the course, you will have a better understanding of the concept of automation. Moreover, you will be able to send automated messages using the WhatsApp platform to anyone, read the conversations with any particular person in your contact list, and share media, including documents, images, and videos. The best part - not only WhatsApp, but you will also be able to automate other social media platforms, as well.\nBeing able to help customers on the platforms big companies use daily is multiple tools & products for increasing engagement and enhancing the customer experience. Engagement helps them to drive their customers to take the actions that lead them down the sales funnel.\nIt also is important for building trust and loyalty. As a professional employee when you create your own WhatsApp bot, you will get advantage to work or sell your products to these companies immediately.\nThis course will make you industry ready to rock-n-roll  the automation industry,",
      "target_audience": [
        "All leves"
      ]
    },
    {
      "title": "The Complete Dart programming guide for Google Flutter[2025]",
      "url": "https://www.udemy.com/course/the-complete-dart-programming-guide-for-google-flutter-2022/",
      "bio": "A complete hands-on beginner’s guide to Dart programming in under 30 minutes.",
      "objectives": [
        "Understand Dart fundamentals for quick, confident coding.",
        "Create variables, classes, and loops with ease.",
        "Apply OOP concepts to build structured Dart programs.",
        "Boost productivity in Flutter with stronger Dart skills."
      ],
      "course_content": {
        "Dart Programming in action": [
          "Object oriented programming with Dart.",
          "Classes, Objects and \"Hello World\"",
          "Calling a variable using an object for Dart programming",
          "Return type method/function || Dart programming",
          "Constructors",
          "Invoking a function",
          "Check for even numbers.",
          "Documentation for Loops, lists, and decision making.",
          "Loops and Lists",
          "Unlocking the Mysteries of Maps in Dart: A Friendly Guide",
          "Deep dive into Maps for Dart programming & Google Flutter",
          "Navigating Null Safety in Dart: A Conversational Guide"
        ],
        "Challenges": [
          "Test set 1",
          "Test set 2"
        ]
      },
      "requirements": [
        "No prior programming experience needed.",
        "Basic computer (Windows, macOS, or Linux) with internet access.",
        "Willingness to practice coding examples.",
        "A genuine interest in learning Dart."
      ],
      "description": "Master Dart in 30 Minutes – Fast, Simple & Effective\nReady to learn Dart programming fast? This course delivers a complete hands-on introduction to Google’s Dart language in under 30 minutes. You'll get up-to-speed quickly with Dart’s syntax and essentials, without any fluff or wasted time, so you can start building apps or enhance your Flutter projects with confidence.\nIn this bite-sized course, you will:\nGrasp core Dart concepts from scratch – Follow a clear, step-by-step approach to learn variables, data types, functions, and object-oriented basics, even if you’ve never programmed before.\nLearn Dart independently of Flutter – Understand how Dart works on its own, giving you a stronger foundation to use the language in any context. By focusing on pure Dart, you’ll be able to write cleaner and more efficient code when you move to Flutter.\nBoost your Flutter skills through Dart mastery – Discover why learning Dart separately makes you a better Flutter developer. You’ll explore Dart features like sound null safety and asynchronous programming in a simple way, so when you return to Flutter, you can handle its code structure and debugging with ease .\nPractice with real examples – Work through quick examples and mini-exercises that make each concept easy to understand. No overwhelming theory – you’ll learn by doing, reinforcing your skills in a fun and engaging manner.\nWho is this course for?\nBeginners and New Programmers: If you’re just starting out, this course is a perfect first step. We assume no prior coding experience. By the end, you’ll be able to write basic Dart programs and have a solid grasp of programming fundamentals in Dart.\nFlutter Developers: Already building apps with Flutter but want to strengthen your Dart knowledge? This course will fill in any gaps in your understanding of Dart. It’s a quick refresher that will make your Flutter coding more robust and effective.\nBusy Learners: No time for a 10-hour course? This crash course is designed for busy professionals or students who need results fast. Gain a comprehensive overview of Dart in the time it takes to watch a TV episode!\nWhy learn Dart separately? Dart is the engine behind Flutter. By mastering Dart on its own, you’ll dramatically improve your Flutter development process . Instead of wrestling with language basics while building Flutter UI, you’ll already speak Dart confidently. Plus, Dart isn’t only for Flutter – it’s a versatile language used for web, server, and mobile apps. A strong command of Dart opens doors to multiple development areas, not just Flutter.\n\n\nCourse Highlights:\nEntire Dart foundation in < 30 minutes: We’ve distilled the most important Dart features into concise lessons. You’ll cover variables, control flow, functions, classes, null safety, and more in a fraction of the time of other courses – without sacrificing clarity.\nHands-on and Practical: This is not a dry lecture. You’ll write Dart code along with the instructor through bite-sized examples. Each section is designed to be practical and accessible, ensuring you learn by doing.\nNo Flutter knowledge required: We focus purely on Dart. Whether you plan to use Flutter or not, you’ll find the content useful. If you do proceed to Flutter, you’ll hit the ground running, since you’ve already mastered its programming language.\nFriendly, Engaging Style: The tone is beginner-friendly and professional – we make learning Dart approachable and enjoyable. Technical jargon is explained in simple terms, and we highlight common pitfalls and tips throughout the course.\nBy the end of this course, you will have a solid understanding of Dart programming – and you’ll have achieved this in mere minutes, not days. You’ll be able to read Dart code comfortably, write your own scripts, and have the confidence to take on more advanced Dart or Flutter courses knowing you’ve nailed the basics.\nReady to become fluent in Dart and supercharge your Flutter skills? Enroll now and join us on this quick journey to Dart mastery. In just 30 minutes, you’ll gain a new programming skill that can advance your career and projects – let’s get started!\n(No risk for you – the course comes with Udemy’s 30-day money-back guarantee. Just jump in and see how much you can learn in a short time!)",
      "target_audience": [
        "Busy Learners: No time for a 10-hour course? This crash course is designed for busy professionals or students who need results fast. Gain a comprehensive overview of Dart in the time it takes to watch a TV episode!",
        "Beginners and New Programmers: If you’re just starting out, this course is a perfect first step. We assume no prior coding experience. By the end, you’ll be able to write basic Dart programs and have a solid grasp of programming fundamentals in Dart.",
        "Flutter developers aiming to strengthen their core Dart knowledge.",
        "Students or hobbyists seeking a concise programming foundation.",
        "Anyone eager to code confidently with Dart."
      ]
    },
    {
      "title": "Google Script Connecting to APIs",
      "url": "https://www.udemy.com/course/google-script-api/",
      "bio": "Connect to the Twitter API collecting Tweet object information neatly as rows in Google Sheets using Google App Script",
      "objectives": [
        "How to use Google Sheets to retrieve tweet object data",
        "How to create applications within Google Sheets",
        "Programming with App Script"
      ],
      "course_content": {
        "Introduction to Google Apps Script": [
          "Google Script Course Introduction",
          "Setup your Google Account and Access Google Sheets",
          "Logger Log Write your first function",
          "Add to Google Sheet UI option",
          "Class UrlFetchApp Fetch Method read response data",
          "Source Code",
          "Parse JSON data output object information",
          "Output to Google Sheet",
          "Exercise try URL fetch method",
          "Exercise Source Code",
          "Get URL source code of any website exercise",
          "Source Code for URL scrapper",
          "Google Script Resources and more information"
        ],
        "Google Sheets HTTP Requests": [
          "Power UP Google Script create a document send an email",
          "Source Code Create doc email out link",
          "Create Google Document",
          "Source Code Create Document",
          "GmailApp class send email method",
          "Source Code GmailApp",
          "Send Post request to URL google Script",
          "Section resources and Source code"
        ],
        "Apps Script Coding Exercises": [
          "Coding Resources",
          "Simple GET Request to Retrieve JSON Data",
          "POST Request to Send Data to an API",
          "Fetching and Parsing XML Data",
          "GET Request with API Key Authentication",
          "Updating Google Sheets with Data from an External API",
          "Personal Finance Advisor",
          "Smart Recipe Finder"
        ],
        "Twitter Listener Twitter Scrapper using Google Script": [
          "Working with APIs Twitter Source code",
          "Using Apps Script to Connect to Twitter API",
          "Store Tweets to Google Sheets"
        ],
        "Bonus Section": [
          "Google Apps Script How to Create a Doc",
          "Source Code create a Doc with Google Apps Script"
        ]
      },
      "requirements": [
        "JavaScript",
        "Twitter developer experience"
      ],
      "description": "Do you want to connect to the Twitter API, search for tweets based on a keyword, and have the results pulled directly into your Google Spreadsheet? Or even automate a system that regularly fetches data from Twitter into a spreadsheet? This course will teach you how to search any term on Twitter and retrieve real-time results within Google Sheets.\nBuild a Fully Functional Twitter Search and Listening App\nLearn how to create a Google Sheets-based application that searches tweets and stores them directly in a spreadsheet. Whether you need to track trends, monitor keywords, or automate data collection, this course will guide you step by step in building your own Twitter listener using Google Apps Script.\nWhy Build a Twitter Listener with Google Apps Script\nFully automated tweet collection with scheduled updates\nStore tweets in Google Sheets for easy organization and analysis\nConnect Google Sheets with the Twitter API using authentication\nHands-on source code included\nPractical lessons designed to build a real-world application\nWhat You Will Learn in This Course\nGoogle Apps Script fundamentals for automating tasks in Sheets, Docs, and Gmail\nHow to fetch and process API data using JSON\nConnecting Google Sheets to external APIs and retrieving response data\nSetting up authentication for the Twitter API\nAutomating data retrieval with triggers\nStoring, filtering, and managing tweet data in Google Sheets\nCreating a Twitter search interface\nDebugging and improving your script for better performance\nCourse Features\nIncludes complete source code for the applications built\nCovers real-world use cases for Google Apps Script\nStep-by-step instructions to help you learn and apply concepts quickly\nDesigned for those familiar with JavaScript who want to expand their skills\nThis course is taught by an instructor with over 18 years of experience in web development and automation. If you are looking for a way to track Twitter data or want to learn more about Google Apps Script, this course is for you. Join now and start creating your own applications today.",
      "target_audience": [
        "Anyone who wants to connect to the Twitter API",
        "Web developers",
        "Application Developers",
        "Social Media data collectors"
      ]
    },
    {
      "title": "Python for Absolute Beginners : Learn With Simple Examples",
      "url": "https://www.udemy.com/course/python-for-absolute-beginners-learn-with-simple-examples/",
      "bio": "Learn Concepts with simple basics and examples and play with programming.",
      "objectives": [
        "Learn how to write programs on your own with python.",
        "Understand Exceptional Handling Exclusively.",
        "Understand Concepts like Inheritance, Abstraction, Polymorphism and Encapsulation with simple examples.",
        "Learn Operators of Python.",
        "Understand Object Orient Programming with behind story.",
        "Learn Conditional Statements and Loops with real time applications in efficient way.",
        "Code and use Functions , Lambdas Decorators and Generators.",
        "Understand Strings and Regular expressions in Exclusive way.",
        "Write efficient programming with Sets, Tuples, Dictionaries, Lists and List Comprehensions."
      ],
      "course_content": {},
      "requirements": [
        "No prerequisite"
      ],
      "description": "If you want to write Python programs like a experienced person or code python like a boss or solve real-world problems or  automate repetitive and complex tasks, first of all,  please continue to read description part then have a look at Index how strongly designed and watch preview video content for taking subscription.\nBasing on different level of learners and  understanding the concepts, keeping in mind, this course designed such way that it will help for all kind of learners.\nAlways comparing Python with C, C++, Java and other popular programming languages.\nCourse is going to update continuously.\nWho this course is for:\nAcademic Students.\nInterview Preparation Persons.\nCompetitive Exam Preparation Aspirants.\nThose who want to become a highly paid coding developer.\nThose who want to open up doors in your IT career by learning one of the world's most popular and in-demand programming.\nImportant information before you enroll!\nOnce enrolled, you have unlimited, 24/7, lifetime access to the course (unless you choose to drop the course during the first 30 days).\nYou will have instant and free access to any updates I'll add to the course - video lectures, additional resources, quizzes, exercises.\nYou will benefit from my full support regarding any question you might have.\nCheck out the promo video at the top of this page and some of the free preview lectures in the curriculum to get a taste of my teaching style and methods before making your decision",
      "target_audience": [
        "For Absolute Beginners.",
        "For Academic Students.",
        "Interview Preparing Aspirants."
      ]
    },
    {
      "title": "Roll Play | Python Programming Course in 01 Day",
      "url": "https://www.udemy.com/course/one-day-bootcamp-python-programming-course-in-01-day/",
      "bio": "Learn Python Programming with Hands-On Exercises, Quizzes & Real-World Examples",
      "objectives": [
        "Understand Python programming basics like variables, data types, and input/output through hands-on coding.",
        "Learn to use if-else conditions and loops in Python to build decision-making logic and control flow.",
        "Master Python functions, arrays, and strings for real-world problem-solving and automation tasks.",
        "Use Python PIP to manage packages and enhance your coding capabilities with external libraries.",
        "Gain practical Python skills by solving exercises, quizzes, and assignments from morning to evening."
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Course Objectives",
          "Course Outline",
          "Instructor Guidelines"
        ],
        "Course Updated on : 15 Sep, 2025": [
          "New Updates"
        ],
        "Python Classes at Morning": [
          "01 Complete Python in One Day Introduction",
          "02 Introduction to Python",
          "03 Environment Setup for Python",
          "04 Variables and Its rules to declare in Python",
          "05 Input Output Function in Python",
          "06 Comments with Examples in Python",
          "07 Data Types in Python",
          "08 Important Python Functions with Examples",
          "09 Python Exercises with Solutions",
          "Article Lesson",
          "Quiz",
          "Assignment",
          "Explaining Python Basics"
        ],
        "Python Classes at Afternoon": [
          "10 Python Operators",
          "11 if and if else in Python",
          "12 elif Keyword in Python",
          "13 for Loops in Python",
          "14 while Loop in Python",
          "15 continue and break statement in loops",
          "16 enumerate function in python",
          "17 map function in Python",
          "18 filter function in Python",
          "19 zip function in Python",
          "20 isinstances function in Python",
          "21 any and all function in Python",
          "22 open function in Python",
          "23 int float and str in Python",
          "24 dir function in Python",
          "25 help function in Python",
          "26 Problems with Solution in Python",
          "Article Lesson",
          "Quiz",
          "Assignment",
          "Explaining Python: Conditions, Loops, Operators, and Advanced Functions"
        ],
        "Python Classes in Evening": [
          "27 Python Function with Examples",
          "28 List as Array in Python",
          "29 Array module in Python",
          "30 PIP in Python",
          "31 String in Python",
          "32 Number in Python",
          "33 Python Important Methods",
          "34 Exercise 01 with Solution",
          "35 Exercise 02 with Solution",
          "36 Exercise 03 with Solution",
          "37 Exercise 04 with Solution",
          "38 Exercise 05 with Solution",
          "Article Lesson",
          "Quiz",
          "Assignment",
          "Explaining Python: Functions, Lists, Arrays, Strings, and Numbers"
        ]
      },
      "requirements": [
        "No prior programming experience is required."
      ],
      "description": "Learn Python Programming in Just One Day – Fast-Track Your Tech Career!\nAre you short on time but big on ambition?\nWelcome to Python Programming in a Day, a power-packed, fast-paced course designed to teach you Python from scratch — in just one single day.\nNo prior experience? No problem – we guide you step by step.\nThis course is your express ticket into the world of Python programming. Whether you're preparing for a tech job, want to explore automation, or just want to finally understand the language everyone’s talking about — this is the course that will get you started instantly.\nWhy waste weeks on basics when you can learn Python essentials in a day?\nWhy You Should Enroll Today\nPython is the Future – It powers everything from Google to NASA and is the backbone of AI, data science, web dev & automation.\nPerfect for Busy Learners – Designed for working professionals, students, and aspiring coders who want results fast.\nHands-On from the Start – Learn by doing, not just watching. Every concept is backed by exercises, quizzes & mini-projects.\nStructured Like a Bootcamp – Learn in morning, afternoon, and evening blocks with guided lessons, challenges, and solutions.\nNo Experience Needed – Clear explanations, beginner-friendly lessons, and guided practice make learning Python stress-free.\nOne-Day Intensive Format Breakdown\nMorning Session – Build the Basics\nPython Introduction\nEnvironment Setup\nVariables, Inputs, Outputs\nComments & Data Types\nEssential Built-In Functions\nIncludes: Quiz, Assignment, Practice Exercises\nAfternoon Session – Get Logical\nPython Operators\nIf-Else Conditions\nLoops (for, while)\nContinue & Break\nIncludes: Quiz, Assignment, Practice Exercises\nEvening Session – Think Like a Coder\nFunctions & Parameters\nArrays & Strings\nPython PIP (Modules & Packages)\nNumber Manipulation\nIncludes: Quiz, Assignment, Practice Exercises\nWhy Python?\nHigh Demand: Top tech companies want Python talent.\nEasy to Learn: Beginner-friendly syntax and logic.\nVersatile: From web dev to AI, Python does it all.\nCareer-Boosting: Add “Python Developer” to your resume and unlock new job opportunities.\nPractical: Automate boring tasks, crunch numbers, or build web apps.\nWhat You’ll Get\nOne-Day Curriculum Divided Into Actionable Sessions\nQuizzes, Assignments, and Articles After Every Section\nHands-On Video Exercises with Real Code Demos\nInstructor Support & Question-Answer Interaction\nCompletion Certificate You Can Show Off on LinkedIn\nWho Should Join?\nComplete beginners ready to enter programming\nCollege students or job seekers preparing for interviews\nFreelancers wanting to offer coding services\nEntrepreneurs who want to automate or build tech solutions\nProfessionals looking to upskill — fast!\nFinal Words\n“You don’t have to be great to start, but you have to start to be great.”\nDon’t wait weeks or months. Start today, finish today, and build your future with Python.\nEnroll now and transform your weekend into a career-defining milestone.\nPython success is just one day away.",
      "target_audience": [
        "Absolute beginners who want to learn Python quickly.",
        "Students or professionals looking to add Python to their skill set in a short time.",
        "Entrepreneurs or freelancers who want to use Python for projects or automation."
      ]
    },
    {
      "title": "C Programming Language: Foundations",
      "url": "https://www.udemy.com/course/c-programming-language-foundations/",
      "bio": "Foundations of C Programming Language",
      "objectives": [
        "Understand Basic Syntax of C And Its Data Types",
        "Apply The Concepts of Control Statements in Decision-Making",
        "Apply The Concepts to Solve Real-Life Problems",
        "Create and Utilize Functions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to C Programming": [
          "Introduction to C Programming",
          "Quiz 1",
          "Lab: Write Hello World in C"
        ],
        "Basic C Syntax and Data Types": [
          "Basic C Syntax and Data Types",
          "Quiz 2"
        ],
        "Operators and Expressions": [
          "Operators and Expressions",
          "Quiz 3",
          "Lab 2: Module 2 and Module 3"
        ],
        "Control Flow Statements": [
          "Control Flow Statements",
          "Quiz 4",
          "Lab 4: Control Statements"
        ],
        "Functions in C": [
          "Functions in C",
          "Quiz 5",
          "Lab 5: Functions in C"
        ],
        "Project": [
          "Project: Pizzeria"
        ]
      },
      "requirements": [
        "No requirements"
      ],
      "description": "Whether you are a CS student, BA, IS student, or  a person who is passionate about programming; this course is for you!\nIn this course, we will embark an exciting journey where we will cover all the fundamentals of the C programming language that will be your cornerstones in this beautiful world!\nOur journey includes lectures, quizzes, labs, and final project. We will cover the basic C syntax and its data types, operators and expressions in C, the control flow statements, and functions in C. For each concept, you will be engaged through hand-on labs and you have to do them to understand the concepts.\nWhether you aspire to become a software developer, enhance your technical skills, or simply explore the art of coding, our \"Foundations of C Programming Language\" course will empower you to turn your programming passion into a reality and you will biuld a solid foundation in programming logic as well as problem solving and decision making skills.\nJoin us on this exciting journey to becoming a proficient C programmer. Enroll today and take your first step towards mastering the art of programming!\nI am Marouane El Hizabri and I will be your instructor during this exciting journey!",
      "target_audience": [
        "Beginners who are passionate about programming"
      ]
    },
    {
      "title": "Django with Chart js",
      "url": "https://www.udemy.com/course/django-with-chart-js/",
      "bio": "Master Django by learning how to create applications with the use of Chart js",
      "objectives": [
        "How to install Django Debug Toolbar",
        "Add dynamic charts to Django projects",
        "How to apply Inline Formsets",
        "Signals",
        "Integration of Django & Semantic UI"
      ],
      "course_content": {
        "Setting up the project": [
          "Semantic UI overview",
          "Source code",
          "Setting up the project",
          "Adding django debug toolbar",
          "Testing out Django Debug Toolbar & Semantic UI",
          "Working on the home view"
        ],
        "Working in Django": [
          "Creating the Profile Model",
          "Adding signal for Profile creation",
          "Creating the Skill Model",
          "Inline Formset part 1",
          "Inline Formset part 2",
          "Creating the first chart",
          "Making our skill chart dynamic",
          "Creating user charts part 1",
          "Creating user charts part 2",
          "Creating the cumulative chart of all users skills",
          "Adjusting the navbar",
          "Creating the user list part 1",
          "Creating the user list part 2",
          "Final touches part 1",
          "Final touches 2",
          "Outro"
        ],
        "Next steps": [
          "Django Made Easy"
        ]
      },
      "requirements": [
        "Basics of Python and Django"
      ],
      "description": "Learn how to create beautiful projects with the use of Chart js & Django Web Framework. For the next few hours we'll be building a user skill site, step by step exploring how to display dynamic charts. After taking this course, you'll have the knowledge to apply charts in your own applications",
      "target_audience": [
        "Beginner Python & Django developers"
      ]
    },
    {
      "title": "Java: a COMPLETE tutorial from ZERO to JDBC",
      "url": "https://www.udemy.com/course/java-a-complete-tutorial-from-zero-to-jdbc/",
      "bio": "Learn Java programming language from start to finish with Oracle Java certified expert Mr Lawrence Decamora",
      "objectives": [
        "Java programming language",
        "Java Development Kit (JDK)",
        "GUI programming with Java",
        "Java Database Connectivity (JDBC)"
      ],
      "course_content": {
        "Setting up your Java Development Kit": [
          "Section0_01 - Section Introduction",
          "Section0_02 - Setting up your JDK on your Mac",
          "Section0_03 - Setting up your NetBeans on your Mac",
          "Section0_04 - Testing your JDK and NetBeans on your Mac",
          "Section0_05 - Setting up your JDK on your Windows Machine",
          "Section0_06 - Setting up and Test your NetBeans on your Windows Machine"
        ],
        "Your First Java Cup": [
          "Section1_01 - Your First Java Program - HelloWorld",
          "Section1_02 - Commonly Encountered Errors",
          "Section1_03 - Parts of Your Java Program"
        ],
        "Difference between a Class and an Object": [
          "Section2_01 - Difference Between a Class and Objects",
          "Section2_02 - The Person and TestPerson Classes",
          "Section2_03 - Constructors",
          "Section2_04 - Methods",
          "Section2_05 - Encapsulation (aka Data Hiding)",
          "Section2_06 - The Java API Documentation",
          "Section2_07 - The import statement"
        ],
        "Introducing the use of an Integrated Development Environment (IDE)": [
          "Section3_01 - Integrated Development Environment (IDE)",
          "Section3_02 - Your First NetBeans Project",
          "Section3_03 - Comments, Semi-colon, Blocks and Whitespaces",
          "Section3_04 - The import and the package statements",
          "Section3_05 - Java Data Types",
          "Section3_06 - The Scanner object and the nextXxx() Methods"
        ],
        "Operators and Control Structures": [
          "Section4_01 - Section Introduction",
          "Section4_02 - Data Type Casting, part 1",
          "Section4_03 - Data Type Casting, part 2",
          "Section4_04 - Data Type Casting, part 3",
          "Section4_05 - The Increment and Decrement Operators",
          "Section4_06 - The Mathematical Operators",
          "Section4_07 - The Relational Operators",
          "Section4_08 - The Logical Operators and the Short-Circuit Operators, part 1",
          "Section4_09 - The Logical Operators and the Short-Circuit Operators, part 2",
          "Section4_10 - The Ternary Operator",
          "Section4_11p - The Ternary Operator Sample Problem - Odd / Even",
          "Section4_11s - The Ternary Operator Solution - Odd / Even",
          "Section4_12 - The Assignment and Short-Hand Operators",
          "Section4_13 - The if-else condition",
          "Section4_14 - The if-else-if ladder and age problem",
          "Section4_15 - The age problem solution",
          "Section4_16 - The nested if",
          "Section4_17 - The switch-case statement",
          "Section4_18p - The month to word problem",
          "Section4_18s - The month to word solution",
          "Section4_19p - The taxi fare problem",
          "Section4_19s - The taxi fare solution",
          "Section4_20 - The while and the do-while loops, part 1",
          "Section4_21 - The while and the do-while loops, part 2",
          "Section4_22 - Infinite Loops",
          "Section4_23p - Print all numbers from the smaller to the larger number problem",
          "Section4_23s - Print all numbers from the smaller to the larger number solution",
          "Section4_24 - The for loop, part 1",
          "Section4_25 - The for loop, part 2",
          "Section4_26p - Print the odd numbers from 1 to 10 problem",
          "Section4_26s - Print the odd numbers from 1 to 10 solution",
          "Section4_27 - Nested loops",
          "Section4_28p - Print the Multiplication Table Problem",
          "Section4_28s - Print the Multiplication Table Solution",
          "Section4_29 - The break and continue statements",
          "Section4_30 - Labelled breaks and labelled continues"
        ],
        "The Reference Data Types": [
          "Section5_01 - The Reference Data Types",
          "Section5_02 - User Defined Classes",
          "Section5_03 - Assigning a Reference Value to a Variable",
          "Section5_04 - Pass by Value and Local Variable Scopes",
          "Section5_05p - The String Problem",
          "Section5_05s - The String Solution",
          "Section5_06 - The 'this' keyword, part 1",
          "Section5_07 - The 'this' keyword, part 2"
        ],
        "Arrays and Strings": [
          "Section6_01 - Section Introduction, Arrays and Strings",
          "Section6_02 - Array Creation and Initialization, part 1",
          "Section6_03 - Array Creation and Initialization, part 2",
          "Section6_04 - Array Limits, the .length attribute",
          "Section6_05 - Sample Array Problem and Solution",
          "Section6_06 - The Enhanced for loop",
          "Section6_07 - Copying of Arrays",
          "Section6_08 - Command Line Arguments and the parseXxx Methods",
          "Section6_09 - The Two Dimensional Arrays, aka an Array of Arrays",
          "Section6_10p - The Multiplication Table Problem",
          "Section6_10s - The Multiplication Table Solution",
          "Section6_11 - The Non-Rectangular Arrays",
          "Section6_12p - The Calendar Problem",
          "Section6_12s - The Calendar Solution",
          "Section6_13 - The String, StringBuffer and StringBuilder, part 1",
          "Section6_14 - The String, StringBuffer and StringBuilder, part 2",
          "Section6_15p - The Palindrome Problem",
          "Section6_15s - The Palindrome Solution"
        ],
        "Inheritance and Polymorphism": [
          "Section7_01 - Inheritance Concepts",
          "Section7_02 - Java Access Modifiers",
          "Section7_03 - Method Overriding",
          "Section7_04 - The 'super' keyword",
          "Section7_05 - Polymorphism Concepts",
          "Section7_06 - The Virtual Method Invocation and Heterogeneous Arrays",
          "Section7_07 - Polymorphic Arguments, the 'instanceof' operator and obj cast p1",
          "Section7_08 - Polymorphic Arguments, the 'instanceof' operator and obj cast p2",
          "Section7_09 - Overloading Methods",
          "Section7_10 - Inheritance and Constructors",
          "Section7_11 - The Object Class and the equals() method",
          "Section7_12 - The Object Class and the hashCode() method",
          "Section7_13 - The Object Class and the toString() method",
          "Section7_14 - The 'static' keyword, part 1",
          "Section7_15 - The 'static' keyword, part 2"
        ],
        "Other Class Features": [
          "Section8_01 - Section Introduction on Other Class Features",
          "Section8_02 - The Wrapper Classes",
          "Section8_03 - The 'final' keyword",
          "Section8_04 - The 'enum' keyword",
          "Section8_05 - The 'abstract' keyword",
          "Section8_06 - Java Interfaces",
          "Section8_07 - The Interface default methods",
          "Section8_08 - The Interface static methods",
          "Section8_09 - Functional Interface and the Lambda Operator"
        ],
        "Exceptions and Assertions": [
          "Section9_01 - Section Introduction on Exceptions and Assertions",
          "Section9_02 - The Exception and the Error Classes",
          "Section9_03 - The 'try' and 'catch' blocks",
          "Section9_04 - The 'finally' block",
          "Section9_05 - The Exception Hierarchy",
          "Section9_06 - Multiple Exceptions in a catch block",
          "Section9_07 - The parameterized try block and the handle-or-declare rule, part 1",
          "Section9_08 - The parameterized try block and the handle-or-declare rule, part 2",
          "Section9_09 - The 'throws' keyword",
          "Section9_10 - The Rules on Overriding Methods and Exceptions",
          "Section9_11 - Creating your Own Exception",
          "Section9_12 - Assertion Checks, the 'assert' keyword"
        ]
      },
      "requirements": [
        "No requirements or prerequisites! You can follow this course even if you are a complete beginner and never used Java before!"
      ],
      "description": "Java is one of the most prominent programming languages today due its power and versatility.\nOur concept at LearningWhilePracticing is to guide you to be operational right away. We help you uncover new skills through practice, instead of going over a boring class where you would not be grasping the concepts. Practices makes perfect!\nIn this course, you will be guided by Oracle certified Java expert Mr Lawrence Decamora, from start to finish.\nNO JAVA KNOWLEDGE IS PREVIOUSLY REQUIRED!\nThis Java tutorial is made up of 14 sections:\nSection 0: Setting up your Java Development Kit\nDownloading, Installing and Configuring your JDK\nWindows OS\nMac OS\nSetting up your IDE\nEclipse\nNetBeans\n\n\nSection 1: Your First Java Cup\nHow to write your first Java Program --> HelloWorld.java\nHow to save, compile and run your first Java Program\nHow to debug a compilation error\nThe Parts of your Java Program\nclass\nthe main method\nthe System.out.println() method\nthe (+) operator\nthe '\\n' and '\\t' characters\nCommonly encountered errors:\nMisspelled public class name vs misspelled filename\nMisspelled keywords and method names\nIncorrect location of your file or your present working directory.\n\n\nSection 2: Difference between a Class and an Object\nHow to create an object\nConstructors\ninstance variables\ninstance methods\nHow to use / test an object.\nEncapsulation (Data Hiding)\nJava API Documentation\nThe import Statement\n\n\nSection 3: Introducing the use of an Integrated Development Environment (IDE)\nEclipse\nNetbeans\nIntelliJ\nCreating our first Netbeans Project\nComments in Java\nsingle line comments\nmulti line comments\njava doc comments\nThe Semi-colon;\nThe { } blocks\nWhitespaces\nThe import Statement\nThe package Statement\nJava Data Types\nReference Data Types (To be discussed in Section 5)\nPrimitive Data Types\nbyte\nshort\nint\nlong\nfloat\ndouble\nchar\nboolean\nThe Scanner object.\nThe nextXxx() methods\n\n\nSection 4: Operators and Control Structures\nOperators\nCasting\nIncrement / Decrement (++ / --)\nMathematical (*, /, %, +, -)\nRelational (<, <=, >, >=, ==, !=)\nLogical Operators (&, |, ^)\nShort-Circuit Operators (&&, ||)\nTernary Operators (? :)\nAssignment and Short-Hand Operators\nControl Structures\nif-else\nswitch-case\nwhile\ndo while\nfor loop\nnested loops\nbreak and continue statements\nlabeled break and labeled continue statements\n\n\nSection 5: The Reference Data Types\nPrimitive Data Types vs Reference Data Type\nUser Defined Classes --> Reference Data Types\nAssigning References to Variables\nPass by Value and Local Variable Scopes\nThe this Reference\n\n\nSection 6: Arrays and Strings\nArray Creation and Initialization\nArray Limits (.length)\nThe Enhanced for loop\nCopying Arrays\nCommand-Line Arguments\nThe parse Methods\nArray of Arrays (Two-dimensional Arrays)\nNon-Rectangular Arrays\nString, StringBuffer and StringBuilder\n\n\nSection 7: Inheritance and Polymorphism\nInheritance: Classes, Superclasses, and Subclasses\nSingle Inheritance\nThe ”is-a” relationship\nJava Access Modifiers\nMethod Overriding\nRules in Overriding a Method\nThe super keyword\nPolymorphism\nVirtual Method Invocation and Heterogeneous Array\nPolymorphic Arguments\nThe instanceof operator\nCasting of Objects\nOverloading Methods\nRules for Method Overloading\nInheritance and Constructors\nOverloading Constructors\nThe Object class (equals(), hashCode() and toString() methods)\nThe static keyword\nHow do we access / call a static variable or a static method?\nThe Math and System Classes\nThe static imports\n\n\nSection 8: Other Class Features\nThe Wrapper Classes\nThe final keyword\nThe enum keyword\nThe abstract keyword\nJava Interfaces\nThe Interface default methods\nThe Interface static methods\nThe Functional Interface and the Lambda (->) Operator\n\n\nSection 9: Exceptions and Assertions\nThe Exception and The Error class\nWhy do we need to have Exception Handling?\nSample Exceptions\nJava’s Approach, the Call Stack Mechanism\nThe five keywords used for Exception handling or Exception declaration\nGeneral Syntax of an exception - handling block\nThe try – catch block\nThe finally block\nThe Exception Hierarchy in Java\nMultiple Exceptions in a catch Block\nThe parameterized try block\nThe Handle-or-Declare rule\nThe throws keyword\nRules on Overriding Methods and Exceptions\nCreating your own Exception objects\nAssertion Checks\n\n\nSection 10: IO and FileIO\nHow to accept inputs using:\nThe Scanner Class\nThe BufferedReader and InputStreamReader Classes\nHow to format an output.\nThe File class.\nHow to read and write inputs from and to a File.\n\n\nSection 11: The Collection and Generics Framework\nThe Collection Interface\nThe Set Interface\nThe List Interface\nThe Map Interface\nThe Iterator Interface\nThe Generics Framework\nCreating your own Set of Collection objects\nSorting your Collection\n\n\nSection 12: Building a GUI Based Desktop Application\nThe AWT package\nComponents, Containers, and Layout Managers.\nUsing selected layout managers to achieve desired GUI layout.\nAdd components to a containers\nDemonstrate how complex layout manager and nested layout managers works.\nDefine what events, event sources, and event handlers are.\nEvent handling techniques\nWrite code to handle events that occur in a GUI\nDescribe the five (5) ways on how to implement event handling technique.\nConverting the AWT code to a Swing application\nPackaging a JAR file for application deployment\n\n\nSection 13: Introduction to JDBC\n– Introduction to Database Concepts\n– How to Create your first DB Schema\n- Basic SQL Statements\n- SELECT\n- UPDATE\n- DELETE\n- INSERT\n- What is JDBC?\n- The Statement Interface\n- The PreparedStatement Interface\nEach section contains its ressources files (codes and notes used by the instructor)\nWhether you're a complete beginner or already got knowledge in Java, this course is for you! Happy Coding!",
      "target_audience": [
        "Students from any level who want to learn Java programming"
      ]
    },
    {
      "title": "Working with Python - Introductory Level",
      "url": "https://www.udemy.com/course/working-with-python-introductory-level/",
      "bio": "Learn to think like a computer scientist with of one of the world's most popular programming languages",
      "objectives": [
        "Learn the basics of Python, one of the most popular programming languages in use today",
        "Learn the syntax of the Python language by writing a text-based adventure game",
        "Learn about the difference between Object-oriented and procedural programming",
        "Learn to think like a computer scientist: making decisions, looping logic, and performing calculations",
        "Learn best practices when writing Python code",
        "Learn how to build a terminal-based Python program",
        "Learn how to create a virtual environment to isolate your program and make it easy to install"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About me",
          "Installing Python (Macintosh)",
          "Installing Python (Windows)",
          "Installing the PyCharm CE",
          "Python resources and documentation",
          "How to ask for help",
          "Is Python interpreted, compiled, or both?"
        ],
        "Getting started with Python and our adventure game": [
          "The obligatory \"Hello, World!\" program",
          "The structure of a Python Program",
          "An aside: Python's basic data types",
          "Where to put variables: scope",
          "Getting started with our adventure game",
          "Another aside: functions",
          "Implementing a while loop to keep the program running",
          "Reading from the terminal",
          "Making decisions based on user input",
          "An aside: Python's comparison operators",
          "Printing help and sanitizing user input",
          "Spicing things up with colour"
        ],
        "Making the Game functional with Classes": [
          "Python Classes",
          "The Player class",
          "The Room class",
          "The Game class",
          "Using our classes, and getting started with game movement",
          "Using a new data type, tuples, to help with room descriptions",
          "Navigating around the labyrinth",
          "An aside: the dictionary data structure",
          "Showing items and monsters"
        ],
        "Implementing an Inventory": [
          "Lists, and adding a list to the Player class for inventory items",
          "Getting started with picking items up",
          "Completing the functionality for picking items up",
          "Displaying the current inventory",
          "An aside: more about looping",
          "Cleaning up game play by printing room descriptions only when necessary",
          "Dropping items",
          "Equipping items",
          "Showing equipped items, and a challenge",
          "Solution to challenge",
          "Unequip an item",
          "Implement the \"status\" command, to show the player how they are doing",
          "An aside: different ways of printing strings with variables"
        ],
        "Implementing a turn-based combat system": [
          "How combat will work",
          "Giving the player a chance to fight or flee",
          "Starting combat: \"rolling for initiative\"",
          "Player's turn",
          "Monster's turn",
          "Warning the player when their health is low",
          "Adding XP, incrementing the number of monsters defeated, and awarding gold",
          "Adjusting the attack roll based on weapon, armor, shield, and monster type",
          "Letting a player rest to regain health"
        ],
        "Keeping track of player location using a map": [
          "What we are going to build in this section",
          "Defining how big our map will be, and saving that information in the Game class",
          "Prepopulating all rooms in the map",
          "Keeping track of the player's location, and limiting movement to the current map",
          "Challenge: verifying our logic when checking player movement",
          "Solution to challenge",
          "Trying out our code and updating our position on the map",
          "Keeping track of player movement",
          "Implementing a (partially functional) \"map\" command",
          "Making the map function more useful",
          "Finalizing the \"map\" command"
        ],
        "Improving the game interface": [
          "Adding a status bar",
          "Challenge: revise welcome text to explain why players have no weapons or armor",
          "Solution to challenge",
          "Finishing up the game logic"
        ]
      },
      "requirements": [
        "No programming experience required",
        "A Windows, Linux, or Macintosh computer"
      ],
      "description": "Python is one of the world's most popular programming languages, and with good reason: it is extremely flexible, easy to learn, and runs on a wide variety of devices and platforms. In fact, Python recently moved to first place in the TIOBE programming community index, which is a remarkable achievement.\nThis course is an introduction to Python, version 3.10. Unlike many introductory courses, we will not spend hours surveying the basics of the language; personally, I see no point in doing that, since there are already many, many free resources online that do precisely that. Instead, we'll learn the language in the way that I have long preferred: we'll actually build something.\nThe bulk of this course will be focused on building a simple text adventure game, where the player explores a labyrinth, encounters monsters, engages in combat, finds items, and that sort of thing. It's a bit of a throwback to the early days of computer games, but the important thing here is not the quality of the game that we'll build, but rather that we'll cover all of the things you need to get started programming in Python, including:\nPython's primitive data types: integer, float, string, and boolean\nPython's aggregate data types: tuple, set, dictionary and list\nHow to make decisions in Python: if/elif/else\nHow to loop in Python: for and while loops\nHow to write functions\nHow to import from the standard library, and third party packages\nHow to structure a Python program\nHow to perform mathematical operations in Python\nHow to manipulate strings in Python\nHow to work with classes in Python\nAnd, as the saying goes, much more. Periodically, I'll include \"aside\" lectures, which focus on a particular aspect of Python in more detail, with simple code examples that are not part of the main project.\nThis course requires no previous programming experience.",
      "target_audience": [
        "This course is perfect for absolute beginners with no previous programming experience.",
        "It's also great if you know an existing programming language and want to become skilled in Python."
      ]
    },
    {
      "title": "Object Oriented Programming in Python 3",
      "url": "https://www.udemy.com/course/object-oriented-programming-in-python-3/",
      "bio": "Master the Art of OOP with Clear Examples, Code-Along Sessions, Exercises, Quizzes and Real World Projects",
      "objectives": [
        "Creating Classes & Instances",
        "Instance Methods & Attributes",
        "Class Methods & Attributes",
        "Static Methods",
        "Magic/Dunder Methods",
        "Properties (Getters, Setters, Deleters)",
        "Inheritance & Composition",
        "Data Classes",
        "Enums, Slot & Descriptors",
        "SOLID Design Principles",
        "Abstract Base Classes",
        "Using OOP in Real World Projects",
        "OOP Terminology & Best Practices"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & How to Navigate the Course",
          "Getting Started with Visual Studio Code",
          "Your First steps in Object Orientation",
          "Creating your First Class"
        ],
        "Object Orientation 101": [
          "Instance Attributes",
          "Instance Methods",
          "Terminology Recap",
          "Understanding Basic OOP - Article",
          "Object Orientation Basics",
          "Class Creation Basics",
          "Instance attribute Basics",
          "Instance Method Basics"
        ],
        "Constructors": [
          "Constructors 101",
          "Piecing it all Together - The Car Class",
          "Constructors in Practice - Stop and Code!",
          "Understanding Constructors - Article",
          "Constructors",
          "Constructor Basics"
        ],
        "Object Orientation Project 1 - A Multi Player Quiz!": [
          "Project Brief",
          "Writing the Code - Part 1",
          "Writing the Code - Part 2"
        ],
        "Class Methods & Attributes": [
          "Class Attributes",
          "Class Methods Introduction",
          "Class Methods In Practice",
          "Class Operations in Practice - Stop and Code!",
          "Class Methods as Alternate Constructors",
          "Understanding Class Methods & Attributes - Article",
          "Class Methods and Attributes",
          "Class Attributes",
          "Class Methods"
        ],
        "Static Methods": [
          "Static Methods 101",
          "Static Methods in Practice",
          "Static Methods - Stop and Code!",
          "Understanding Static Methods - Article",
          "Static Methods",
          "Static Methods"
        ],
        "Magic Methods": [
          "Magic Methods 101",
          "Working with the Print Function",
          "Implementing Comparison Operators",
          "Implementing Common Magic Methods",
          "Implementing Iteration",
          "Implementing Context Management",
          "Magic Methods for Getting/Setting",
          "Understanding Magic Methods - Article",
          "Magic Methods",
          "Magic Methods - Part 1",
          "Magic Methods - Part 2",
          "Magic Methods - Part 3"
        ],
        "Properties": [
          "Rationale - Why do we need properties when we have attributes?",
          "Property Getters",
          "Property Setters",
          "Property Deleters",
          "Properties in Practice - Stop and Code!",
          "Understanding Properties - Article",
          "Properties",
          "Declaring Properties",
          "Property Setters",
          "Property Deleters"
        ],
        "Object Orientation Project 2 - Weather Notifier": [
          "Project Brief",
          "Writing the Code - Part 1",
          "Writing the Code - Part 2"
        ],
        "Inheritance & Composition": [
          "Inheritance & Composition 101",
          "Inheritance in Practice",
          "Composition in Practice",
          "Inheritance & Composition - Stop and Code!",
          "Piecing it all Together - The Employee Class",
          "Understanding Inheritance & Composition - Article",
          "Inheritance",
          "Composition",
          "Inheritance - Part 1",
          "Inheritance - Part 2"
        ]
      },
      "requirements": [
        "Some basic Python experience would be ideal!",
        "Control flow, functions, loops, basic data types & collection types"
      ],
      "description": "Welcome to Object Oriented Programming in Python 3\n\n\nThis course has been carefully designed to deliver the skills needed to master OOP in Python. You can expect to be coding from the very first section and you’ll be asked to think, problem solve, plan and code throughout the entire course.\n\n\nLearning and building up a practical understanding is more effective with a hands-on approach, and this course teaches OOP in a way that is meaningful, easily accessible and always provides links to real-world use cases. Each section has coding exercises, quizzes and stop-and-code sessions. These get progressively more challenging and continuously build on the skills you’ve learnt in previous sections.\n\n\nCourse Curriculum\nOver the course, we will cover the following areas:\n\n\nVisual Studio code + Environment Setup\nOOP basics and Terminology\nCreating Classes and Instances\nConstructors (__init__ methods)\nInstance Attributes & Methods\nClass Attributes & Methods\nStatic Methods\nProperties (Getters, Setters, Deleters)\nMagic Methods (Also known as Dunder Methods)\nInheritance & Composition\nSOLID Design Principles\nData Classes\nAbstract Base Classes\nMiscellanous Features - Enums, Slots, Descriptors, Multiple Inheritance\n\n\nCoding Projects\nTo give you as many chances as possible to use and develop your OOP skills, you’ll be working on 2 different projects during the course.\n\n\n1. A Multi Player Quiz -  In this project you'll use the knowledge from the first half of the course to construct several classes to build a quiz, with classes representing the questions and the players. You'll then create a class to control the game logic. This project will be written to a professional standard with type hints & documentation strings.\n\n\n2. An Automatic Weather Notifier - This complex program will call a weather API to fetch the weather, and then use scheduling to do this on a predetermined basis. You'll then create a class to enable weather alerts and information to be emailed. This will be written to the same professional standard as the multi player quiz.\n\n\nCoding Challenges\nThe course contains coding challenges throughout, and these are designed to test your knowledge on all aspects of object orientation.\n\n\nPrerequisites\nIt's recommended to have a basic grasp of Python before starting, such as knowing how to use strings, integers/floats, booleans. Knowing the differences between lists/tuples/sets and dictionaries, knowing how to write loops and functions, and also knowing how to work with error handling. Feel free to check out my beginner course via my Udemy profile!",
      "target_audience": [
        "If you are a Python developer, who wants to learn Object Orientation (OOP) in depth",
        "If you want to learn the basics of Object Orientation to enhance your Python code",
        "If you want to learn advanced Object Orientation"
      ]
    },
    {
      "title": "Design Patterns in Java Made Simple",
      "url": "https://www.udemy.com/course/design-patterns-in-java-made-simple/",
      "bio": "Using patterns to improve flexibility of the design",
      "objectives": [
        "How to apply design patterns to help simplify application design",
        "How to reduce design complexity by moving responsibilities into collaborating classes"
      ],
      "course_content": {
        "Introduction": [
          "Understanding the Role of Design Patterns",
          "How This Course Is Structured"
        ],
        "Adding Behavior to an Object with the Decorator Pattern": [
          "Motivation for the Decorator Pattern",
          "The First Attempt to Decorate a Class",
          "The Downfall of the Subclassing Decorator",
          "Using Object Composition Instead of Inheritance",
          "Summary"
        ],
        "Adapting to a Different Interface with the Adapter Pattern": [
          "Advancing from Decorator to Adapter Pattern",
          "Implementing a Transparent Adapter",
          "Towards a Heavyweight Adapter",
          "Limiting the Role of Adapters",
          "Summary"
        ],
        "Constructing Flexible Behavior with the Strategy Pattern": [
          "Understanding the Need for Flexibility",
          "Implementing the Strategy Pattern",
          "Implementing Strategies via the Interface",
          "Augmenting the Strategy Interface",
          "Demonstrating the Power of Strategies",
          "Implementing Strategies with Strategies",
          "Summary"
        ],
        "Decoupling Classes with the Abstract Factory Pattern": [
          "Understanding the Need for Abstract Factory Pattern",
          "Understanding the Limitations of the Abstract Factory",
          "Attempting to Overcome the Limitations",
          "Implementing Concrete Factories",
          "Completing the Concrete Factories",
          "Demonstrating the Concrete Factories",
          "Summary"
        ],
        "Constructing Objects on the Fly with the Factory Method Pattern": [
          "From Abstract Factory to Factory Method",
          "Holding State Behind a Factory Method",
          "Fixing Parameters with Factory Method",
          "Confining Propagation of Change with Factory Methods",
          "Currying Factory Methods",
          "Summary"
        ],
        "Encapsulating Construction Rules with the Builder Pattern": [
          "Understanding Limitations of Factories",
          "Replacing Factory with Builder",
          "Adding Validation to the Builder",
          "Handling Variation and Optional Components",
          "Building a Factory Method",
          "Summary"
        ],
        "Constructing Complex Objects with the Builder Pattern": [
          "Building a Graph of Objects",
          "Understanding the Need for a Consistent Builder",
          "Designing a Consistent Builder",
          "Adding Alternatives to a Consistent Builders",
          "Designing a Fluent Builder",
          "Designing an Immutable Builder",
          "Shameless Immutability in Builders",
          "Summary"
        ],
        "Treating Collection as an Object with the Composite Pattern": [
          "Understanding Multitudes of Objects",
          "Inventing the Composite Element",
          "Understanding Recursive Nature of Composites",
          "Combining Composite and Factory Methods",
          "Combining Composite and Abstract Factory",
          "Reversing Composites: Representing One Element as Many",
          "Summary"
        ]
      },
      "requirements": [
        "Fair understanding of the Java programming language",
        "Working knowledge of software design",
        "Any knowledge of design patterns is a plus"
      ],
      "description": "More than two decades since design patterns have appeared, many developers consider them the most important discovery in software development. Others still find them a bad idea. And both are right! How comes?\nIn this course, you will learn how design patterns can be applied to make code better: flexible, short, readable. Flexibility is the key element in design patterns. You will learn how to decide when and which pattern to apply by formally analyzing the need to flex around specific axis. You will learn which pattern is adding which kind of flexibility, and what are the most common forms of implementation in practice. You will also learn common pitfalls and ways to overcome them when applying specific patterns.\nThrough a series of demonstrations, you will learn one design pattern at a time. In each demonstration, we shall start from an existing implementation which faces difficulties to accommodate the next requirement proposed by the customer. That will invariantly trigger a series of designing attempts, some doomed to fail, others having prospect to succeed. But what will learn in this course, is that each successful design will exhibit one kind of flexibility, which will be of critical importance to support the troublesome request posed by the customer. It will come as no surprise to you to learn that each such special kind of flexibility will be one specific design pattern.",
      "target_audience": [
        "Hands-on programmers who are struggling to keep their source code clean and extensible",
        "Programmers who wish to apply design patterns without causing more harm than good",
        "All those who wish to improve their object-oriented programming and design skills"
      ]
    },
    {
      "title": "X++ Programming Fundamentals - D365 F&O Technical",
      "url": "https://www.udemy.com/course/x-plus-plus-programming-fundamentals-for-d365-fo/",
      "bio": "Object-Oriented Programming (OOP)",
      "objectives": [
        "You will gain an in-depth understanding of X++ Programming Language.",
        "You will learn X++ syntax, data types, EDTs, operators, and best practices for writing efficient and maintainable code.",
        "You will understand concepts of classes and objects, methods, access specifier.",
        "You will Understand Inheritance and their types, Interfaces and abstract classes with practical examples.",
        "You will able to customize D365 F&O Application",
        "Update: New lessons added/updated...based on students comments and reviews."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Create a New Project - Dynamics 365 F&O - Visual Studio",
          "Getting Started VM, Login and Authentication",
          "About Practice VM",
          "AOT Overview",
          "Organize projects by element type"
        ],
        "Data Types": [
          "Identifier",
          "Keywords",
          "Datatypes and Variable - X++ Programming Language - D365 F&O",
          "Datatypes default values",
          "Variable Declaration Initialization - Primitive Data Types in X++ Programming La",
          "Base Enumerations or Base Enums in D365 Finance and Operations (F&O) - X++ Code",
          "Base Enumerations Quiz",
          "Develop a Enum",
          "Extended Data Types (EDTs)",
          "How to Take User input X++ Programing Language - D365 F&O",
          "How to Create EDTs",
          "Question related to creating an Extended Data Type (EDT) in Dynamics 365 Finance",
          "EDT Quiz",
          "Get the current UTC date and time - utcdatetime examples"
        ],
        "Tips": [
          "Add Line Number in X++ Code inside visual studio",
          "Dark Mode, Change fonts, colors, and themes in Visual Studio"
        ],
        "Operators": [
          "String Concatenation Operator",
          "Operator Quiz",
          "From String Remove Alphabetic Characters"
        ],
        "Conditional Statement": [
          "Control Flow in Programming",
          "If Else Conditional Statement",
          "Grading System using if else Statement",
          "Switch Statements",
          "Calculator Program using Switch case",
          "Conditional statements"
        ],
        "Loop control in X++ Language": [
          "while Loops in X++: Syntax and Examples",
          "do-while Loops in X++: Syntax and Examples",
          "for Loops in X++: Syntax and Examples"
        ],
        "Table in D365 FO": [
          "How To Create a Table in D365 FO",
          "Question for Table Fields",
          "Table Properties in D365 F&O",
          "Primary key and Primary Index - D365 F&O Technical Tutorial",
          "Create a table",
          "Why synchronization?"
        ],
        "Table Relation": [
          "Field Fixed Relationship - Table - D365 F&O",
          "Related Field Fixed Relationship - Table - D365 F&O",
          "Table Relationship Quiz"
        ],
        "Data selection and manipulation": [
          "Select - Data selection and manipulation Part 1",
          "Firstonly, FirstOnly10, FirstOnly100 - Data selection and manipulation Part 2",
          "next statement - Data selection and manipulation Part 3",
          "Select specific columns - Data selection and manipulation Part 4",
          "Insert Method"
        ],
        "Array": [
          "Array Concepts",
          "Array- in X++ programming language - Part 1",
          "Array- in X++ programming language - Part 2",
          "Array Quiz",
          "Array Class - in X++ programming language - Part 1",
          "Array - Collection classes - Part 2",
          "Why you might choose X++ collection classes over composite types (native arrays)",
          "Array Manipulation in X++"
        ]
      },
      "requirements": [
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "This comprehensive X++ Tutorial course is meticulously crafted to guide you on a transformative journey from a novice to a proficient X++ programmer. Whether you're stepping into the world of programming for the first time or possess prior coding knowledge in different languages, this course is your gateway to mastering the art of application development within the realm of Microsoft Dynamics 365 Finance and Operations.\nThroughout this course, you'll embark on a progressive learning path that will empower you with the essential skills and knowledge needed to create robust and dynamic applications. We'll start with the fundamentals, ensuring a strong foundation for every learner. As you progress, you'll delve deeper into X++ programming, exploring advanced concepts, techniques, and best practices.\nBy the end of this course, you will have achieved several learning objectives. You'll be able to write efficient X++ code, design and implement solutions tailored to specific business needs, and troubleshoot and optimize existing applications. Moreover, you'll gain insights into the intricacies of X++ development, enabling you to navigate complex projects with confidence.\nWhether you're aspiring to become a Dynamics 365 developer or seeking to enhance your programming skills in a business context, this X++ Tutorial course is your key to success. Join us on this educational journey and unlock your potential in the world of X++ programming.",
      "target_audience": [
        "Beginner X++ developers curious about ERP."
      ]
    },
    {
      "title": "Swift 5 Programming for Beginners | Quickly Learn the Basics",
      "url": "https://www.udemy.com/course/swift-certification/",
      "bio": "Learn Swift 5 Programming | Then You Can Code Your Own iOS 16 Apps | Build Your Dream App by Learning Swift First",
      "objectives": [
        "Swift 5",
        "Variables",
        "Constants",
        "If Statements",
        "Logical Operators",
        "Arrays",
        "Dictionaries",
        "For In Loops",
        "While Loops",
        "Repeat While Loops",
        "Objects",
        "Classes",
        "Methods",
        "Functions",
        "Optionals",
        "Swift Jargon",
        "Plenty of Challenges",
        "Real Life Examples"
      ],
      "course_content": {},
      "requirements": [
        "Preferably a Mac Computer",
        "But if not, you can mostly follow along with an iPad using the Swift Playgrounds App",
        "A desire to learn but no need for any previous knowledge, I will teach everything from the beginning"
      ],
      "description": "Swift 5 Programming Course\nNo risk: This course comes with a no hassle 30 day money back guarantee. So why not give it a try, you have nothing to lose.\nHave you ever wanted to try out programming but didn't know where to start? Have you previously tried to learn Swift but got fed up with outdated and complicated YouTube videos and confusing written tutorials? THEN THIS IS THE COURSE FOR YOU!\n\n\nThe Swift programming language was released by Apple in 2014 and it has quickly become one of the most loved programming languages by developers. According to a Stack Overflow developer survey, Swift is one of the most fastest growing programming languages in the world.\n\n\nWith the release of Swift 5 the Swift programming language became ABI stable - this means that the Swift language has matured to a point where future updates will become more infrequent - making this a perfect time to learn Swift.\n\n\nWhat is Swift?\nSwift is a programming language that allows you to write software for iPhones, iPads, Macs, Apple Watches, Apple TVs, desktops, servers, or anything else that runs code! Swift is great for new programmers because it is very intuitive, it continues to evolve as Apple adds new features (like SwiftUI), it is relatively easy to catch software bugs compared to other languages, and you can see your results immediately in Xcode and Playgrounds. So it is well worth learning!\n\n\nContent and Overview\nThis course actively encourages you to get involved, after many lectures there are small challenges set which help you to put into practice what you have just learnt. Although you could just sit and go through all of the lectures, the course is designed to be as practical and easy as possible as well as academic.\nThe course is split into 3 easy to understand sections – (1) Introduction and set up (2) All of the Swift Level 1 skills needed, and (3) Course conclusion and what next\n\n\nAbout the Instructor\nMichael has already successfully taught over 55,000 students on Udemy on how to build and create Apps for the Apple platform. He has several apps in Apples App Store that have been downloaded and updated thousands of times, from people all over the world. He is interested in creating quality content while at the same time delivering his topics in a friendly and engaging way. Michael is active in student groups, forums, and Q&A’s and is always happy to answer questions to help his students.",
      "target_audience": [
        "Absolute beginners",
        "Anyone who is interested in learning Swift",
        "Those wanting a Certificate in Swift programming",
        "Those with a knowledge of Swift who want to learn the latest Swift 5 version",
        "Anyone who wants to learn a new skill to start a new career",
        "If you are wanting to make money by selling apps",
        "Those who want to freelance or work for themselves"
      ]
    },
    {
      "title": "Mastering python - From Scratch",
      "url": "https://www.udemy.com/course/mastering-python-3-beginner-to-advanced/",
      "bio": "Mastering Python From Scratch will teach you Python, MongoDB, Threading, Multiprocessing, Asyncio and Flask",
      "objectives": [
        "Start from a complete beginner to an expert python programmer",
        "Learn how to work with threading, multiprocessing and Asyncio",
        "Learn how to create GUI desktop applications with PySimpleGUI",
        "Create a complete web application for managing a bookstore with Mongodb and publish it online",
        "Learn Object oriented programming",
        "Learn how to handle files and interact with file-system",
        "Learn how to send email with python",
        "Learn how to work with Mongodb in python",
        "Learn how to create web applications",
        "Create text to speech application",
        "Create web monitoring application",
        "Create system health application",
        "Create backup application",
        "Create full student course management system with Mongodb",
        "Create desktop backup application that you can execute without python"
      ],
      "course_content": {},
      "requirements": [
        "A computer Windows, Linux or mac OS",
        "No previous programming knowledge is needed",
        "No previous python knowledge is required"
      ],
      "description": "Python is the fastest-growing programming language in the industry, and among the most popular programming languages in the world.\nIt's not a hard language for beginners to pick up and for intermediate or advanced programmers to advance, which is why the need to learn this language has increased exponentially over the past few years.\n\n\nMastering python - From Scratch is designed as a journey that will take you from installing the programs to learning the fundamentals of python and gradually applying the most advanced techniques to develop some of the most advanced real-life applications.\n\n\nWhether you are a beginner with no knowledge in python or programming, or if you're an experienced programmer in a different programming language, or even if you're an experienced python programmer,\nthis course will give you the basics and move forward to the more challenging applications in Python to help you broaden your horizons in Python, or if you'd want to expand your career opportunities.\n\n\nMy name is Yasser Abbass. I'm a software engineer and I will be your instructor for this course\nI have been in programming for the past 30 years and specifically in python for the past decade.\nMohammad: \"Yasser is by far one of the best instructors I had opportunity to learn from. I highly recommend this course for any beginner. Every Topic is in depth. Many Projects and Practices. Thank you so much Yasser!!!\"\nThe course is divided into four sections, each including several lectures. with each lecture, you will find some exercises and each section has one or more projects that will make sure that you applied what you have learned. we will be building 10 projects with varying levels of difficulty.\n\n\nSome of the projects we will be building together are:\n- Text to Speech.\n- Guessing Number project.\n- Converter project.\n- Web Monitoring.\n- System Health.\n- Backup Script project.\n- A student course management system.\n- A bookstore management system.\n- A File backup program that will be converted to a desktop application.\n- A full bookstore web app.\nBut don't worry you will be able to create those projects and more as you follow along with the course and with the skills you learned you will be able to apply it to your projects. You will also be able to download all the source code for all the lectures and the projects.\nDuring this course, you will learn:\n- How to install the software on Windows, Mac, and Linux.\n- An introduction to Jupiter-lab.\n- Data types, Conditional logic, looping, and collections.\n- Functions, modules, and built-in functions.\n- How to handle files.\n- How to interact with the file-system.\n- Date-time, web communication, exception handling, and JSON.\n- How to send emails through python.\n- Object-oriented programming.\n- How to use MongoDB from python.\n- How to create databases with full CRUD operations\n- Advanced python built-in functions.\n- Iterators generators and decorators.\n- Logging.\n- Concurrency, threading multiprocessing, and Asyncio.\n- How to create a GUI for python with PySimpleGUI.\n- How to create a desktop application with PyInstaller.\n- How to create professional web apps with flask.\nVikash: \"Trust me, this is everything you will be needing.\"\nFinally, if you are stuck you can drop a question in the Q&A, and I or one of my teaching assistants will answer you promptly",
      "target_audience": [
        "Beginner programmers who wants to master python",
        "Programmers from other languages that want to start their python journey",
        "Python programmers who want to learn new skills and master advanced python"
      ]
    },
    {
      "title": "Master Erlang Programming in Just 4 Hours",
      "url": "https://www.udemy.com/course/master-erlang-programming-in-just-4-hours/",
      "bio": "A Complete Course on Erlang Programming for Beginners and Professionals both, Understand all the concepts in just 4 Hrs",
      "objectives": [
        "This course will give you enough understanding on this programming language and also help you in building scalable soft real time systems that will have requirements on higher availability."
      ],
      "course_content": {},
      "requirements": [
        "Some basic knowledge on programming languages such as C or C++, Java, Python, Ruby.",
        "It might also be helpful, to have some working knowledge on functional programming languages like Clojure, Haskell, Scala or OCaml."
      ],
      "description": "Erlang is a general purpose or you might say a functional programming language and runtime environment. It was built in such a way that it had inherent support for concurrency, distribution and fault tolerance. Erlang was originally developed to be used in several large telecommunication systems. But it has now slowly made its foray into diverse sectors like Ecommerce, Computer telephony and Banking sectors as well.\nThis Course has been prepared for both Beginner & Professionals aspiring to make a career in the field of telecom, banking, instant messaging, e-commerce and computer telephony as well. This Course will give you enough understanding on this programming language and also help you in building scalable soft real time systems that will have requirements on higher availability.\n\nThe Erlang was originally developed to be used in the several large tele-communication systems from the Ericsson. The first version of Erlang was developed by the Joe Armstrong, Robert Virding & Mike Williams in 1986.",
      "target_audience": [
        "Professionals aspiring to make a career in the field of telecom, banking, instant messaging, e-commerce and computer telephony as well."
      ]
    },
    {
      "title": "Zero to Hero in SASS & SCSS with integration in React JS App",
      "url": "https://www.udemy.com/course/zero-to-hero-in-sass-scss-with-integration-in-react-js-app/",
      "bio": "Learn everything about SASS & SCSS with Handson Practical Examples, also learn how to work with SASS or SCSS in React JS",
      "objectives": [
        "You will learn the difference between SASS, SCSS and CSS",
        "You will learn the difference between SASS, SCSS and CSS",
        "You will learn about Variables, Operators, Nesting, Mixin, Partials and Comments in SASS/SCSS",
        "You will be learn the advantages of using SASS/SCSS",
        "You will learn to setup a React JS project and integrate SASS/SCSS to it.",
        "You will learn to style React JS components using SASS/SCSS"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of CSS and ReactJS will be good to have."
      ],
      "description": "Learn everything about SASS & SCSS with Hands-on Practical Examples, also learn how to work with SASS or SCSS in React JS Application.\nThis course covers all the basics of SASS or SCSS and it covers both theory and handson part. We will first start by learning the what and why part of using SASS or SCSS, then implement every feature with practical handson approach.\nThen we will create React JS application and add SASS or SCSS capability and start styling React components using SASS/SCSS.\nFollowing are the topics that are covered:\n1-Why do we need SASS or SCSS\n2-Features of SASS or SCSS\n3-Local development environment setup\n4-SASS Compiler and Compiled Output files\n5-Applying Styling to Page\n6-How to use Operators in SASS or SCSS\n7-How to Declare and use Variables in CSS and SCSS or SASS\n8-Nesting of Style with SASS or SCSS - Part-1\n9-Nesting of Style with SASS or SCSS - Part-2\n10-Mixin in SCSS or SASS - Part-1\n11-Mixin in SCSS or SASS - Part-2\n12-Parameterized Mixin in SASS or SCSS\n13-Single line Comment in SASS or SCSS\n14-Partials and Import in SASS or SCSS\n\n\nApplying SASS/SCSS to React JS Project:\n1-Setting up React and Installing node-sass\n2-Using SASS or SCSS features in React Application\n\n\nAfter completing this course you will master all the SASS/SCSS concepts and learn to apply them in any project. You will also be now able to work any ReactJS projects using SASS/SCSS.",
      "target_audience": [
        "Anyone who wants to work in Industry based real world projects where SASS/SCSS are being used."
      ]
    },
    {
      "title": "Learn Practical Python 3 for Beginners (2018)",
      "url": "https://www.udemy.com/course/learn-practical-python-3-for-beginners-2018/",
      "bio": "Learn OOP, Numpy, Pandas and Matplotlib with 11 exercises and full solutions",
      "objectives": [
        "You'll learn how and why to use lists, tuples, dictionaries and sets",
        "Have a full grasp of both while loops and for loops",
        "How to convert lists, dictionaries and sets into comprehension",
        "How to work with txt files, pickle files, and the os module",
        "How to use generators, generator expressions and functional programming",
        "Gain a complete understanding of OOP (Object-Orientaed Programming",
        "Use functions, lambda expressions, built-in functions, and decorators",
        "How to manipulate arrays with the numpy module",
        "How to manipulate and make sense of large data frames with the pandas module",
        "Create beautiful and interactive graphs with matplotlib module",
        "Create a simple paper, scissors, rock game"
      ],
      "course_content": {},
      "requirements": [
        "Internet connection and +500 MB space on your computer",
        "No prior knowledge of programming is required as you'll learn from the absolute basics to a professional level",
        "Anaconda distribution 5.x and Python 3.x which you'll learn to install right from the get go"
      ],
      "description": "This course teaches you the fundamentals of any programming language, with Python 3.6 and Anaconda 5.0.0 with Jupyter Notebook!\n\nThe course is suitable for those are either completely new to programming, or are coming from another programming language (R, JavaScript, etc) and are keen to get a solid grasp of using Python.\nYou'll be learning:\nInstalling Jupyter Notebook IDE\nUsing all the vital features of Jupyter Notebook\nVariables and comparison operators\nStrings, slicing and formatting\nLists, Dictionaries, Tuples and Sets\nControl flow and loops\nList, Set and Dictionary Comprehension\nFunctions and decorators to make your code my Pythonic!\nRandom module and Built-in Functions\nLambda expressions and Handling errors\nLearn how to manage files with the OS module\nWork with txt and pickle files\nGenerators, Generators expressions and functional programming\nYou'll fully master Object-Orientated Programming\nWork with Numpy and Pandas modules for manipulating dataframes\nVisualize data with Matplotlib module\nWork with projects starting with a simple Scissors, Paper, Rock game\nNew lectures and practical projects will be added regularly.\nThere are a total of 11 exercises with full solutions provided as ipython files, pdf files and lecture solutions.\nThis course will be kept up to date!\nCheck out the previews to get a taster of what you'll learn. Cheers!",
      "target_audience": [
        "Anyone who is completely new to programming",
        "Anyone who comes from another programming language background, i.e. R, JavaScript."
      ]
    },
    {
      "title": "C++ Programming from Zero to Hero : The Fundamentals",
      "url": "https://www.udemy.com/course/c-programming-from-zero-to-hero-part-1-the-fundamentals/",
      "bio": "Learn C++ programming using a hands on approach",
      "objectives": [
        "Have an understanding and be able to Program the basic concepts of C++"
      ],
      "course_content": {},
      "requirements": [
        "Nothing. Just how to listen and practice."
      ],
      "description": "C++ is a very powerful and general purpose programming language. It was developed and created by Bjarne Stroustrup at Bell Labs in 1979. C++ is a very powerful language that is used in software development and in game development. This C++ course starts you on your path to mastering a skillful language using a simple yet effective approach. Most of the issues we hear with c++i s that the technical aspect is to hard to understand. Well we break that mold for you.\nWe tackle C++ and help you become efficient at one of the worlds leading languages.\nThose who want strong knowledge of C++ can take this course.\nHow we teach\nLectures\nHands On Assignments\nQuizzes\nWe use these methods to give you a university type setting and feel it is the best way for us to teach you these skills. With Lectures we go over the details of C++ and explain how things work and should be done. In Hands On Assignments we give you homework which helps push it into your mind and stay there. And in Quizzes we makes sure the knowledge has absorbed. We try to give you a University setting with out being in a University.\nThis course is divided into three parts\nFirst we will go over the basic aspects of the language.\nNext we will dive into Object Orientation in C++.\nFinally we will cover some more advanced topics.\nWhat are the requirements?\nNothing is pre required, We go over everything with you and cover everything you need to know C++.\nWhat am I going to get from this course?\nOver 50 lectures and Tons of content!\nYou will be able to efficiently write C++\nYou will be ready to make a choice in life, on whether you want to be a full time developer.\nAlso the course is still bein built and will be adding code alongs soon",
      "target_audience": [
        "This C++ course is developed for people wanting to start learning C++."
      ]
    },
    {
      "title": "ALL IN ONE! Java + Spring Boot, Spring and Hibernate [NEW]",
      "url": "https://www.udemy.com/course/all-in-one-java-spring-boot-spring-and-hibernate/",
      "bio": "Become a Full-Stack Developer by Learning Java and Spring Framework",
      "objectives": [
        "Comprehensive Understanding of Java and Spring Framework: You will gain a solid understanding of the core concepts and components of Java and Spring Framework.",
        "Learn core Java skills from complete beginner to advanced features",
        "Building RESTful Services with Spring Boot: Enabling you to leverage its auto-configuration and starter dependencies for rapid application development.",
        "Web Application Development with Spring MVC: Mastering concepts such as request handling, model-view-controller architecture, and form validation.",
        "You’ll learn to integrate Hibernate, enabling efficient database interactions and CRUD operations while maintaining performance."
      ],
      "course_content": {},
      "requirements": [
        "No previous programming knowledge is required",
        "Willingness to learn",
        "All the tools needed are free to install"
      ],
      "description": "Do you want to learn how to code and land a cool Java programming job? Java is a really popular language for creating applications and websites. Now is a great time for Java programmers to find jobs and freelance gigs.\nThis course is taught by experienced instructors certified by Oracle, who have guided over 500,000 happy learners and received thousands of 5-star reviews. The instructors bring a wealth of expertise to guide you through the learning process.\nThe course covers each topic and makes things easy with simple examples.\nWe’ll dive deep into Java, Spring Framework, Spring Boot, Spring MVC, and Hibernate, with the latest updates included. Each topic is broken down with simple and practical examples to help reinforce your learning.\nMastering these technologies can open exciting doors in the tech industry. Spring is widely adopted by employers, making these skills highly valuable. This course not only provides you with essential knowledge but also offers hands-on practice to solidify your skills.\nWhether you're a complete beginner or looking to enhance your existing knowledge, this course is designed for all learners. Don’t miss this opportunity to boost your career and become part of the vibrant Java development community.\nEnroll today and embark on your journey to mastering these in-demand skills!",
      "target_audience": [
        "Anyone who wants to learn Java Programming and Spring Framework",
        "This course is ideal for aspiring developers, software engineers, and tech enthusiasts looking to enhance their skills in modern Java web development. Whether you're a beginner eager to learn Spring and Hibernate or an experienced programmer seeking to deepen your knowledge of Spring Boot and MVC frameworks, you will find valuable insights and practical applications to advance your career."
      ]
    },
    {
      "title": "Spatial Data Analysis in Google Earth Engine Python API",
      "url": "https://www.udemy.com/course/spatial-data-analysis-with-earth-engine-python-api/",
      "bio": "Learn machine learning, big data analysis, GIS, remote sensing with Earth Engine Python API and Jupyter Notebook",
      "objectives": [
        "Students will access and sign up the Google Earth Engine Python API platform",
        "Access satellite data in Earth Engine",
        "Export geospatial Data including rasters and vectors",
        "Access images and image collections from the Earth Engine cloud data library",
        "Perform cloud masking of various satellite images",
        "Visualize and analyze various satellite data including, MODIS, Sentinel and Landsat",
        "Visualize time series images",
        "Run machine learning algorithms using big Earth Observation data"
      ],
      "course_content": {
        "Introduction to Earth Engine Python API": [
          "Welcome",
          "Install Anaconda",
          "Set Up Python Environment",
          "Sign Up on Earth Engine",
          "Install Earth Engine Python API",
          "Load Landsat Images"
        ],
        "Raster Data Visualization": [
          "Landsat Visualization",
          "MODIS Land Cover",
          "NLCD Land Cover",
          "NDVI Visualization"
        ],
        "Vector Data Visualization": [
          "US States",
          "USA Counties",
          "International Boundary"
        ],
        "Raster Data Analysis: Images": [
          "Clipping",
          "Image Metadata",
          "Band Math",
          "Calculate MODIS NDVI"
        ],
        "Raster Data Analysis: Image Collection": [
          "Clip Image Collection",
          "Landsat Simple Composite",
          "Filter by Calendar Day of Year"
        ],
        "Machine Learning: Unsupervised and Supervised Classification": [
          "Clustering: Unsupervised Classification",
          "CART: Supervised Classification",
          "SVM: Supervised Classification"
        ],
        "Bonus Lectures": [
          "Bonus"
        ]
      },
      "requirements": [
        "This course has no requirements."
      ],
      "description": "Do you want to access satellite sensors using Earth Engine Python API and Jupyter Notebook?\nDo you want to learn spatial data science on the cloud?\nDo you want to become a spatial data scientist?\n\n\nEnroll in my new course Spatial Data Analysis in Google Earth Engine Python API.\n\n\nI will provide you with hands-on training with example data, sample scripts, and real-world applications. By taking this course, you be able to install Anaconda and Jupyter Notebook. Then, you will have access to satellite data using the Earth Engine Python API.\n\n\nIn this Spatial Data Analysis with Earth Engine Python API course, I will help you get up and running on the Earth Engine Python API and Jupyter Notebook. By the end of this course, you will have access to all example scripts and data such that you will be able to access, download, visualize big data, and extract information.\n\n\nIn this course, we will cover the following topics:\nIntroduction to Earth Engine Python API\nInstall the Anaconda and Jupyter Notebook\nSet Up a Python Environment\nRaster Data Visualization\nVector Data Visualization\nLoad Landsat Satellite Data\nCloud Masking Algorithm\nCalculate NDVI\nExport images and videos\nProcess image collections\nMachine Learning Algorithms\nAdvanced digital image processing\n\n\nOne of the common problems with learning image processing is the high cost of software. In this course, I entirely use open source software including the Google Earth Engine Python API and Jupyter Notebook. All sample data and scripts will be provided to you as an added bonus throughout the course.\n\n\nJump in right now and enroll.",
      "target_audience": [
        "This course is meant for professionals who want to harness the power Google Earth Engine Python API and Jupyter Notebook",
        "People who want to understand various satellite image processing techniques using Python and Jupyter Notebook",
        "Anyone who wants to learn accessing and extracting information from Earth Observation data",
        "Anyone who wants to apply for a spatial data scientist job position"
      ]
    },
    {
      "title": "Teach Python to High School Students",
      "url": "https://www.udemy.com/course/teach-python-to-high-school-students/",
      "bio": "The Ultimate Teachers guide to Python using Videos, Illustrations, Code Samples & Assignments",
      "objectives": [
        "Foundation of Python Programming Language",
        "Creating Variables and using Functions",
        "Strings and Numbers",
        "If Statements and Loops",
        "Data Collections - Lists, Tuples and Dictionaries",
        "File Handling & Error Handling",
        "Date and Time",
        "Build Custom Functions and Libraries",
        "Object Oriented Programming (OOP)",
        "Recursion",
        "Regular Expressions",
        "Common Algorithms (Bubble Sort, Linear Search, Binary Search)",
        "Password Hashing",
        "CRUD with SQLite Database Engine",
        "Introduction to GUI"
      ],
      "course_content": {
        "Day 1 - Variables and Functions": [
          "Variables - Video Chapter",
          "Variables - Text Chapter",
          "Using Variables",
          "Functions - Video Chapter",
          "Functions - Text Chapter",
          "Invitation"
        ],
        "Day 2 - Strings and Numbers": [
          "Strings - Video Chapter",
          "String Formatting - Video Chapter",
          "Strings - Text Chapter",
          "Strings",
          "Numbers - Video Chapter",
          "Numbers - Text Chapter",
          "Numbers"
        ],
        "Day 3 - If Statements and Random": [
          "If Statements - Video Chapter",
          "If Statements - Text Chapter",
          "Code Correction",
          "Random - Video Chapter",
          "Random - Text Chapter",
          "Random"
        ],
        "Day 4 - Loops": [
          "For Loop - Video Chapter",
          "For Loop - Text Chapter",
          "For Loop",
          "While Loop - Video Chapter",
          "While Loop - Text Chapter",
          "While Loop"
        ],
        "Day 5 - Data Collections (Lists and Tuples)": [
          "Lists and Tuples - Video Chapter",
          "Lists and Tuples - Text Chapter",
          "Lists and Tuples",
          "Enumerate Function - Video Chapter",
          "Enumerate Function - Text Chapter",
          "More Fun with Lists"
        ],
        "Day 6 - Data Collections - Dictionaries": [
          "Dictionaries - Video Chapter",
          "Dictionaries - Text Chapter",
          "Dictionaries"
        ],
        "Day 7 - Build Custom Functions and Libraries": [
          "Build Functions - Video Chapter",
          "Build Functions - Text Chapter",
          "Local and Global Variables - Video Chapter",
          "Local and Global Variables - Text Chapter"
        ],
        "Day 8 - Libraries and More with Functions": [
          "Arguments and Keyword Arguments - Text Chapter1",
          "Arguments and Keyword Arguments - Text Chapter",
          "Create a Library - Video Chapter",
          "Create a Library - Text Chapter"
        ],
        "Day 9 - File Handling and Error Handling": [
          "Files and Directories - Video Chapter",
          "Files and Directories - Text Chapter",
          "File Handling - Text Files - Video Chapter",
          "File Handling - Text Files - Text Chapter",
          "File Handling - JSON Files - Video Chapter",
          "File Handling - JSON Files - Text Chapter",
          "Error Handling - Video Chapter",
          "Error Handling - Text Chapter"
        ],
        "Day 10 - Date and Time": [
          "Date and Time - Video Chapter",
          "Date and Time - Text Chapter",
          "Date Formatting - Video Chapter",
          "Date Formatting - Text Chapter"
        ]
      },
      "requirements": [
        "Be able to type using the keyboard"
      ],
      "description": "If you are a teacher, parent or guardian, join me in this exciting teachers' guide on Python Programming that will assist you in teaching high school students.  The instructional videos and text material have incorporated using simple English with terms that are easy to follow.\nKindly note that only teachers, parents and guardians can create the account and purchase the course.\n\n\nFeedback from School Students whom I have mentored 1-on-1\nVinith Ramaswamy, Dubai International Academy, Dubai, UAE\n\"I have heard back from 4 universities so far and have gotten accepted to all of them: Purdue, UIUC, Wisconsin-madison, and WPI, everything you taught me was definitely a huge part in it so thank you so much\"\nPrateeti Saran, Dubai International Academy, Dubai, UAE\n\"I just recently got into Columbia University for Computer Science and wanted to thank you for being the one who helped me get interested in and get started with CS. Your teaching was amazing, and really really developed my passion for CS, thank you so so much!\"\nJosh Killa, Dubai College, Dubai\n\"My top choices for receiving offers were from Imperial College London and Warwick university to study computer science. Thanks, Sunil your teaching has had a massive impact\"\n\n\nCourse Curriculum\nVariables and Functions\nStrings and Numbers\nIf Statements\nLoops - For and While\nData Collections - Lists, Tuples and Dictionaries\nError Handling\nFile Handling with JSON\nBuild Custom Functions and Libraries\nDate and Time\nObject Oriented Programming\nCommon Algorithms (Binary and Linear Search, Bubble Sort)\nPassword Hashing\nCRUD with SQLite DB Engine\nRecursion\nIntroduction to GUI\nWhat this course contains\nEasy to follow instructional videos\n16 Chapters with both Instructional Videos and Textual Material containing high-quality illustrations\n62 Python Code Samples\n40 Assignments\nSoftware to Install\nTo begin with, you may use the Free Online Code editor available in the Resource section of each chapter\nFor additional practice, we recommend installing Mu: a simple Python editor for beginners\nGuaranteed Course Outcome\nUnderstanding of Programming Concepts using Real-World Examples.\nPromotes Creative Thinking and encourages the real-world application of coding skills\nIntroduction to Object Oriented Programming and Databases\nThe ability to build applications with ease.\nThe Apps that can be built with the help of this course\nWith 44 Code Samples and 31 Assignments, learners can attain the skills to create a wide selection of programs. The most notable ones are listed below:\nVirtual Wardrobe Planner\nMatch Roster Generator\nGuessing Number Game\nMultiplication Table Generator\nNumber Divisibility\nEven and Odd Number Extraction\nThe ATM Replica\nAutomated Dice Roll\nShopping List\nPhonetic App\nJumble Words Generator\nFood Ordering App\nFile Search Application\nAspect Ratio Calculator\nLibrary Management System\nAuthentication App with Password Hashing\nCan Teachers and Parents use this course as a guide for teaching kids younger than 17?\nMath is taught in every grade in school, the base concepts remain the same, but the complexity increases with every grade. The same learning progression can be achieved with programming languages for children. This course has been specifically designed as a teaching guide for parents, teachers and guardians who wish to teach high school students.\nHow does this course compare with \"Teach Python to Kids Age 11 to 13\"?\nThis course contains 7 additional lessons, with each existing lesson having additional content\nLibraries\nDate and Time\nObject Oriented Programming\nCommon Algorithms (Binary and Linear Search, Bubble Sort)\nPassword Hashing\nCRUD with SQLite DB Engine\nIntroduction to GUI\nAlso contains 16 Additional Code Samples and New Assignments",
      "target_audience": [
        "Parents willing to teach their teenage children coding",
        "Teachers willing to teach coding to teenage students"
      ]
    },
    {
      "title": "C++ Certification Exam Preparation: 6 Practice Tests",
      "url": "https://www.udemy.com/course/cpp-certification-exam-preparation-6-practice-tests/",
      "bio": "6 Practice Tests with Brief Explanation for any C++ Certification",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Course Overview:\nThis comprehensive course is specifically designed to provide aspiring C++ developers with the necessary practice and preparation for any C++ certification exam. With a focus on practical application, the course includes six meticulously crafted practice tests that cover a wide range of topics and difficulty levels.\nCourse Features:\nSix Practice Tests: The course offers six full-length practice tests, each containing a diverse set of questions. These tests are designed to simulate the format and difficulty level of actual C++ certification exams.\nPractical Application: The course emphasizes the practical application of C++ concepts and techniques. Each practice test includes questions that require you to apply your knowledge to real-world scenarios, enhancing your problem-solving skills and reinforcing your understanding of C++ programming principles.\nDetailed Explanations: Following each practice test, you will receive detailed explanations for each question.\nPassing Criteria: To successfully pass the course, you must achieve a minimum score of 70% on each of the six practice tests.\nWho Can Enroll:\nThis course is suitable for individuals at various stages of their C++ programming journey. Whether you are a beginner seeking to gain a solid foundation in C++ or an experienced developer aiming to validate your skills through certification, this course will provide the necessary practice and guidance. It is ideal for:\nC++ enthusiasts eager to test their knowledge and skills.\nStudents preparing for C++ certification exams.\nProfessionals seeking to enhance their employability by obtaining a C++ certification.\nProgrammers looking to expand their proficiency in C++.\nRegards,",
      "target_audience": [
        "C++ enthusiasts eager to test their knowledge and skills.",
        "Students preparing for C++ certification exams.",
        "Professionals seeking to enhance their employability by obtaining a C++ certification.",
        "Programmers looking to expand their proficiency in C++."
      ]
    },
    {
      "title": "Facial recognition using Raspberry Pi and OpenCV",
      "url": "https://www.udemy.com/course/facial-recognition-using-raspberry-pi-and-opencv/",
      "bio": "Learn how to detect the human faces and eyes in any image and build your own image puzzle using Python",
      "objectives": [
        "Learn how to program using Python and OpenCV to detect the human faces present in an image",
        "Get to know how to take multiple snapshots by programming your webcam and passing the number as arguments",
        "Learn how to code using Python program to detect faces as well as eyes in an image",
        "Learn how to build an image puzzle and search a small section of an image in the entire photo"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Python and Linux commands",
        "Raspberry Pi (any model)"
      ],
      "description": "This course is for anyone who is interested in exploring Digital Image Processing using Raspberry Pi and OpenCV.  The course requires basic knowledge of Python programming and Linux commands and obviously your interest in programming.\nIn this course, we are going to use OpenCV libraries to explore facial recognition feature. OpenCV is an open source C++ library for image processing and computer vision, originally developed by Intel and now supported by Willow Garage.\nIt is free for both commercial and non-commercial use. Therefore it is not mandatory for your OpenCV applications to be open or free.\nIt is a library of many inbuilt functions mainly aimed at real-time image processing. I am going to teach you how to track faces in the image you have captured using Webcam or any other device. We will also locate and count the faces present in the image.\nIn the next project, I will teach you how to program in Python and OpenCV to detect and highlight the eyes of the persons along with the face present in the picture.\nGoing forward, I will also cover the machine learning based project in which I will create Image puzzle using python programming and OpenCV. This will be a picture-based puzzle where you can search a small section of the image inside a bigger image.\nI will guide you step by step how to go about building these projects. I will also share the source code with you so that you can replicate the project by yourself.",
      "target_audience": [
        "Anyone who wants to build a project on Digital Image Processing using OpenCV",
        "The course is for anyone who is interested in exploring software projects using Raspberry Pi",
        "Tech enthusiasts who wants to explore facial recognition using the mini computer Raspberry Pi"
      ]
    },
    {
      "title": "Java EE Development with NetBeans 7",
      "url": "https://www.udemy.com/course/java-ee-development-with-netbeans-7/",
      "bio": "Develop professional enterprise Java EE applications by taking advantage of the time-saving features of the NetBeans 7",
      "objectives": [
        "Develop Java web applications by leveraging NetBeaDevelop Java web applications by leveraging NetBeans functionalityns functionality",
        "Use abstract common markup with Facelets templates",
        "Develop applications adhering to the MVC design pattern with JSF-managed Beans",
        "Validate user input with JSF validation",
        "Develop custom JSF components and get to know front end JSF development with Facelets",
        "Develop aesthetically pleasing web-based user interfaces with PrimeFaces",
        "Generate JPA Entities and Data Access Objects (DAO's) from an existing database schema",
        "Learn about the Java Persistence Query Language (JPQL)",
        "Utilize EJB 3.1 session Beans, including transaction management, interceptors, and the EJB timer service"
      ],
      "course_content": {
        "Mastering the NetBeans Editor": [
          "Code Completion and Generation",
          "Code Navigation",
          "Refactoring",
          "Understanding NetBeans' Visual Cues"
        ],
        "NetBeans Debugger": [
          "Breakpoints",
          "Inspecting Variable Values"
        ],
        "JavaServer Faces (JSF)": [
          "Introduction to JSF",
          "Facelets Templating",
          "Managed Beans",
          "CDI",
          "JSF Validation",
          "Composite Components",
          "PrimeFaces",
          "Additional PrimeFaces Components"
        ],
        "Java Persistence API": [
          "Introduction to JPA",
          "Introduction to JPA (Cont)",
          "Entity Relationships",
          "JSF Application Generation from JPA Entities"
        ],
        "Java Persistence Query Language (JPQL) and the Criteria API": [
          "Selecting Database Data with the Java Persistence Query Language (JPQL)",
          "Updating Database Data with JPA and JPQL",
          "Deleting Database Data with JPQL",
          "JPQL Named Queries",
          "NetBeans JPQL Editor",
          "Selecting Data with the JPA Criteria API"
        ],
        "Session Beans": [
          "Introduction to Session Beans",
          "Session Bean Transaction Management",
          "Session Bean Interceptors",
          "EJB Timer Service"
        ]
      },
      "requirements": [
        "Familiarity with NetBeans or Java EE is not assumed, however, knowledge of the Java language is assumed."
      ],
      "description": "Java EE Development with NetBeans 7 video course provides hands-on instructions that show you how to take control of the environment and make use of these features to make your Enterprise Java application development more efficient and productive than ever before so that you can concentrate on the important parts of your application.\nJava EE Development with NetBeans 7 shows you how to develop applications using the most important and latest Java EE technologies and APIs such as JavaServer Faces (JSF) 2.0, Enterprise JavaBeans (EJB) 3.1, and the Java Persistence API (JPA 2.0). The course is a practical guide explaining the various features of the NetBeans IDE related to Enterprise application development.\nJava EE Development with NetBeans 7 covers all the major Java EE technologies, APIs, and the rapid development capabilities of the NetBeans IDE such as wizards and keyboard shortcuts. While focusing on NetBeans features, you will learn how to develop aesthetically pleasing web-based user interfaces using Java Server Faces. You’ll also learn how to take advantage of automated transaction handling and scalability via Enterprise JavaBeans, and how to simplify database access through the Java Persistence API.\nBy the end of this course, you will be able to develop Enterprise applications quickly and easily by taking advantage of several time-saving features of Oracle's NetBeans IDE.\nAbout the Author\nDavid R. Heffelfinger is the Chief Technology Officer (CTO) at Ensode Technology, LLC, a software consulting firm based in the Greater Washington DC area. He has been architecting, designing, and developing software professionally since 1995. He has been using Java as his primary programming language since 1996. He has worked on many large-scale projects for several clients, including the U.S. Department of Homeland Security, Freddie Mac, Fannie Mae, and the U.S. Department of Defense. He has a master's degree in software engineering from Southern Methodist University, Dallas, Texas. David is a frequent speaker at Java conferences such as JavaOne.",
      "target_audience": [
        "The video course is aimed at Java developers who wish to develop Java EE applications while taking advantage of NetBeans functionality to automate repetitive tasks and to ease their software development efforts."
      ]
    },
    {
      "title": "MATLAB and Simulink for Science and Engineering Computations",
      "url": "https://www.udemy.com/course/matlabsimulink/",
      "bio": "Learn to use MATLAB and Simulink for Simulation and other science and engineering computations. Make Life easier.",
      "objectives": [
        "Install and activate MATLAB successfully",
        "Perform Arithmetic and Algebraic operations with MATLAB",
        "Make both 2-D and 3-D plots, add annotations, Greek letters, saving your plots on several formats like fig, png, epsc etc, and make your plots look like those found on research papers",
        "Solve Calculus Problems like Z transforms, Laplace transforms, Fourier transforms, Taylor and Maclaurin's series expansion, Limits, Left and Right hand limits, symbolic summation etc with Matlab",
        "Perform formula manipulation and simplification, factorization and expansion with Matlab",
        "Perform arithmetic operations on Real and Complex numbers",
        "Perform analytic and numerical differentiation and integration",
        "Find solutions to ODE problems including Systems of ODEs both analytically and numerically with Matlab",
        "Perform the following operations on Polynomials: find polynomial roots, integrate and differentiate polynomials, polynomial curve fitting etc",
        "Solve matrix and vector problems with Matlab like generating special matrices, inverse, rank, reduced echelon, transpose, LU factorization, eigen values and vectors, diagonization, orthogonal, norm, determinant, concatenation and several matrix operations",
        "Discrete maths problem like finding gcd, lcm, permutation, combination, prime factors and numbers and factorial of numbers",
        "Build simulation models with MATLAB Simulink",
        "Control start and stop time of the simulation.",
        "Use Vectors in MATLAB Simulink",
        "Take variables from MATLAB Workspace while simulating",
        "Exchange Signals between Simulink and MATLAB",
        "Run simulation From M-File",
        "Create Subsystems",
        "Use the Model Explorer",
        "Extract Models from Simulink into MATLAB"
      ],
      "course_content": {},
      "requirements": [
        "Engineering, science or mathematics background.",
        "A desire to learn, to take action and to ask for help when needed.",
        "Understanding of Scientific, Engineering or Mathematical computations."
      ],
      "description": "Whether of engineering or science background, you are about to join over 2 million users of MATLAB that cut across these backgrounds; a multi-paradigm numerical computing environment and fourth-generation programming language that allows matrix manipulations, plotting of functions and data, implementation of algorithms, creation of user interfaces, and interfacing with programs written in other languages with additional package, Simulink, adds graphical multi-domain simulation and model-based design for dynamic and embedded systems\nThis course starts from the elementary topics, then progressively and systematically advances to more advanced (but well explained) topics in MATLAB. It touches the major computations and simulations Engineers and Scientists are faced with and major aspects of MATLAB you need to progress to become an expert. After this course, you can stand boldly and tackle those difficult problems on your own with MATLAB and be able to proceed and specialize on any aspect of MATLAB you choose to.\nThe videos and lecture materials are easy to grasp and very straight to the point.\nEach lecture has quiz which must be attempted to obtain a certificate for this course. Note that some of these quizzes serve as summary to the course, you will get to learn some more things and also understand some key facts emphasized in the lectures.\nThe instructor's lecture notes used for each lecture is also provided so you don’t need to bother writing, you will need to just pay attention to the lectures because all your needs are provided. Beside, all the codes used in the course are also provided.\nIn case you don’t have MATLAB already installed in your system, there are lectures on the various ways you can acquire MATLAB and the procedures involved in its installation, this you will find in the supplementary resources.\nIn this course, you will typically become a guru and will move from zero knowledge in MATLAB to hero.",
      "target_audience": [
        "Scientists and Engineers",
        "College and University students",
        "Teachers and Researchers"
      ]
    },
    {
      "title": "2025 1Z0-819 OCP 11 Java SE 11 Developer Exam Practice Tests",
      "url": "https://www.udemy.com/course/java-se-11-certification-exam-1z0-819-practice-tests/",
      "bio": "Updated: [320+] questions with in-depth explanation to prepare for Java Developer certification 1Z0-819, 1Z0-829 in 2024",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Hello there, if you are preparing for Oracle's 1Z0-819 exam, Java SE 11 Developer Certification Exam,  or Java SE 17 Developer  Exam, also known as OCP 11, OCPJP 11, or OCP 11,  and OCPJP 17 and looking for some high-quality practice questions to assess your preparation level then you have come to the right place.\nIn this Udemy practice test course for Java SE 11 Certification 1Z0-819, you will find 320+ high-quality questions to check your preparation level for this prestigious but difficult Java certification exam and become a certified Java Professional in 2024.\nWhether you are a first-timer to Java certifications or already have a Java certification, make no mistake that this certification exam is very different from earlier Java SE 8 certification like OCAJP 8 (1Z0-809) and OCPJP 8 (1Z0-809), and even though the number of questions is less and the passing percentage seems less it's not an easy exam to crack, particularly in the first attempt.\nBut, it's worth it because now you only need to pass one exam to become an Oracle certified Java Professional rather than two.\nThe exam presents tricky questions from topics like Concurrency and Java Platform Module System, along with Stream and Lambda expression which is harder even for experienced Java developers. That's why it becomes very important to prepare well and build the speed and accuracy required to pass this exam, and that's where this Java SE 11 Certification Practice test will help you.\nThis Java SE 11 Exam simulator contains 6 full-length tests with 50 questions on each test (69 questions on 6th test) to mimic the real exam. This means a total of 250+ unique questions for you to practice. Even though the passing percentage is just 68% you should try to score 80% consistently on all of these tests before you go for the real exam.\nAs I have said many times, just passing the Java SE 11 certification is not enough, you need to score high, at least 80+ percentage to impress your interviewer, co-worker and put that on your Resume. While just passing the Java Certification and becoming a Certified Oracle Professional gives your career a boost, passing with flying color makes it even more appealing.\nThat's why you should prepare all the below exam topics and make full use of these Java SE 11 Certification tests. I have also provided a detailed explanation for each question so that you can understand the concept better and fill gaps in your learning.\n\n\nQuality speaks for itself, here are few sample questions from the first practice test in this course, you can see for yourself\n\n\nSAMPLE QUESTIONS:\n\n\nWhich statements about try‐with‐resources are false? (Choose two.)\n\n\nResources are closed in the order they were created.\n\n\nParentheses are mandatory for the resource declaration section, even if more than one resource is used\n\n\nIf the try block and close() method both throw an exception, then the one thrown by the close() method is suppressed.\n\n\nA resource may be declared before it is used in a try-with-resources statement.\n\n\nWhat's your guess? Scroll below for the answer\n\n\nAnswer -  When more than one resource is used in a try‐with‐resources statement, they are closed in the reverse order in which they are declared, making option 1 the first false statement. In addition, resources are separated by semicolons, not commas, making option 5 the other false statement. The rest of the statements are true. Note that ability to declare resources before they are used in a try‐with‐resources statement is new since Java 9.\nHere, is another sample question for Oracle Certified Java SE 11 Developer Certification:\n\n\nWhat is the output of the following application?\n\n\npackage finance;\npublic class AssetCalculator {\npublic static void main(String[] bat) {\ntry {\nSystem.out.print(1);\nthrow new ClassCastException();\n} catch (ArrayIndexOutOfBoundsException ex) {\nSystem.out.print(2);\n} catch (Throwable ex) {\nSystem.out.print(3);\n} finally {\nSystem.out.print(4);\n}\nSystem.out.print(5);\n}\n}\n\n\n1. 145\n2. 1345\n3. 1235\n4. The code does not compile\n5. The code compiles but throws some exception at runtime.\n6. None of the above\n\n\n\n\n\n\nWhat's your guess? Scroll below for the answer\n\n\nAnswer- The code compiles and runs without issues. The try block throws a ClassCastException. Since ClassCastException is not a subclass of ArrayIndexOutOfBoundsException, the first catch block is skipped. For the second catch block, ClassCastException is a subclass of Throwable so that block is executed. Afterward, the finally block is executed, and then control returns to the main() method with no exception being thrown. The result is that 1345 is printed, making option 2 the correct answer.\n\n\n\n\nHere is another question from practice test 1\n\n\nWhich of the following modifiers cannot be applied to an abstract method?\n1. final\n2. private\n3. public\n4. default\n5. protected\n6. concrete\n\n\nWhat's your guess? Scroll below for the answer\n\n\nAnswer- An abstract method cannot include the final or private modifier. If a method contained either of these modifiers, then no concrete subclass would ever be able to override it with an implementation. . The default keyword applies to concrete interface methods, not abstract methods.The protected, package, private, and public access modifiers can each be applied to abstract methods.The rest are correct options for this problem.\n\n\nAnd last one from my favorite Modules topic, which can be really challenging for even experienced developers:\n______________ modules are on the classpath, while ____________ modules never contain a module‐info file.\n\n\nAutomatic, named\nAutomatic, unnamed\nNamed, automatic\nNamed, unnamed\nUnnamed, named\n\n\nWhat's your guess? Scroll below for the answer\n\n\nAnswer: Unnamed modules are always on the classpath. Both automatic and named modules are on the module path. Named modules always contain a module‐info file, but automatic modules never do. Option 5 is correct as it meets both these criteria.\nThese are sample questions, you will find many such questions with varied difficulty level in these 5 full length practice test. Each question has detailed explanation which not only help you to understand why one answer is correct and others are wrong but also the thought process of solving the question and understanding the underline Java concept better.\n\n\nI hope you like these Java certification Oracle 1Z0-819 Java SE Exam Practice Test question and will join for more. See you inside\n\n\nImportant Details about 1Z0-819 Exam\n\n\nOracle Certified Professional: Java SE 11 Developer Exam Pattern:\nExam Code: 1Z0-819\nDuration: 90 minutes\nNumber of Questions: 50 (Multiple Choice / Multiple Select)\nPassing score: 68%\nExam Fee: $245 (depending upon your country),\n\n\nOracle Certified Professional: Java SE 11 Developer Exam Topics:\nWorking with Java data types\nControlling Program Flow\nJava Object-Oriented Approach\nException Handling\nWorking with Arrays and Collections\nConcurrency\nJava I/O API\nSecure Coding in Java SE Application\nDatabase Applications with JDBC\nLocalization\nAnnotations\nWorking with Streams and Lambda expressions\nJava Platform Module System\n\n\nWhat you will get in this course:\n1. 320+ high-quality questions for Java SE 11 Certification\n2. Detailed explanation for each question\n3. QnA support, you can ask questions related to Java SE 11 exam or spring certification.\n4. You can take these questions as many times as you want\n5. You can review wrong questions as well as correct questions after the exam.\n6. 5 full length Java Certification Practice Test\n\n\nJava SE Associate Programmer I Certification practice Test\nJava certification Oracle 1Z0-819 Java SE Exam Practice Test\n\n\nIf you are curious about the benefits of becoming an Oracle Certified Java Professional and whether it will help in Job and career growth then yes, they will. In fact, there are many tangible and intangible benefits of passing Java SE Professional certification like you get to know Java concept in depth which eventually help you to do well on your Java interviews.\nThe key challenge is that this Java certification in particular is not easy to crack and that where these questions will help you prepare well so that you can crack this prestigious exam in your first attempt. If you have any doubt, ask in the QnA and we'll try to answer those questions. All the best for your Java Developer Professional certification exam.",
      "target_audience": [
        "Java Developers who wants to pass 1Z0-819 certification",
        "Java Programmers preparing for Java SE 11 Developer Exam",
        "Java Programmer preparing for Core Java Interviews",
        "Java Programmers aiming to become Oracle Certified Java Professional",
        "People who wants to become a Certified Java Developer"
      ]
    },
    {
      "title": "JavaScript Algorithms",
      "url": "https://www.udemy.com/course/javascript-algorithms/",
      "bio": "Learning to Solve JavaScript Algorithms as a JavaScript Newbie",
      "objectives": [
        "Be prepared to answer introductory JavaScript Algorithm whiteboard interview questions",
        "Learn How to Break Down Challenges in Their Own Words then Solve on Their Own.",
        "Master commonly asked interview questions",
        "Use Javascript to solve challenging algorithms",
        "Improve your problem solving skills and become a stronger developer"
      ],
      "course_content": {
        "Environment Setup": [
          "Environment Setup"
        ],
        "Name Swap": [
          "Name Swap - Built in Functions",
          "Name Swap - Built in Functions - Final Code",
          "Name Swap - Indices",
          "Name Swap - Indices - Final Code"
        ],
        "Remove Odd Numbers From Array": [
          "Remove Odd Number from Array with Modulus Operator and For Loops",
          "Remove Odd Number from Array with Modulus Operator and For Loops - Final Code",
          "Remove Odd Numbers from Array with Filter Method",
          "Remove Odd Numbers from Array with Filter Method - Final Code"
        ],
        "Repeat a String": [
          "Repeat a String with for loop",
          "Repeat a String with for loop - Final Code",
          "Repeat a String with while loop",
          "Repeat a String with while loop - Final Code"
        ],
        "Find the Longest String": [
          "Find the Longest String with replace method and regular expressions",
          "Find the Longest String - Final Code",
          "Find the Longest String with replace method and regular expressions with For Of",
          "Find the Longest String Part II - Final Code"
        ],
        "Filter Strings from Array": [
          "Filter Strings from Array with typeof operator and Number.isInteger() method",
          "Filter Strings from Array with typeof operator... - Final Code",
          "Filter Strings from Array with filter() method",
          "Filter Strings from Array with filter() method - Final Code"
        ],
        "Alphabetize String": [
          "Alphabetize String with sort() method",
          "Alphabetize String - Final Code",
          "Alphabetize String with sort() method and spread syntax",
          "Alphabetize String Part II - Final Code"
        ],
        "Reverse a String": [
          "Reverse a String with built in functions",
          "Reverse a String with built in functions - Final Code",
          "Reverse a String with spread syntax",
          "Reverse a String with spread syntax - Final Code",
          "Reverse a String with for loop",
          "Reverse a String with for loop - Final Code",
          "Reverse a String with for of loop",
          "Reverse a String with for of loop - Final Code"
        ],
        "Palindrome": [
          "Is Palindrome?",
          "Palindrome - Final Code"
        ],
        "Review Bonus Content: JavaScript the Basics": [
          "Review Bonus Content: JavaScript the Basics"
        ]
      },
      "requirements": [
        "Beginner Understanding of JavaScript"
      ],
      "description": "Hi, it's me, Rob - Front End Engineer and online instructor with over 15,000 students.\nIf you are a beginner JavaScript students wanting to prepare yourself for your first JavaScript coding interview then this course is for you!\nAn algorithm is like a recipe. It takes “inputs” (the ingredients), and performs a set of simple and (hopefully) well-defined steps, and then finishes after producing an “output” (the meal).\nEach lesson will present you with:\nAn algorithm for you to solve. This is like challenging you as a chef to produce a specific meal.\nI will share with you the JavaScript tools that may be helpful to solve this challenge. This is like knowing the ingredients, tools and techniques of cooking.\nI will then teach you to write out pseudocode, how you would solve this problem in your own words. This is where we will write out the recipe together.\nFinally, I’ll present you with multiple ways to solve each challenge. Just like there are variations in how to make a meal, so there are a number of ways to solve an algorithm.\nCheck out any of the sample videos for this course to get a feel :)\nMany algorithm courses will present you with a challenge then have you passively watch them solve the challenge.  This course will guide you as a beginning in breaking down a problem and learning to solve on your own.\nThis isn’t the only algorithms course you should ever take. But it should be your first!\nLet’s get cooking with JavaScript!",
      "target_audience": [
        "Beginners who want to learn JavaScript Algorithms at a Basic Introductory Level",
        "Those who want to be more comfortable with whiteboard interview questions",
        "Bootcamp Students Preparing for Coding Interviews",
        "Anyone preparing for an interview that will involve coding challenges"
      ]
    },
    {
      "title": "Computer Programming For Beginners Learn Python Programming",
      "url": "https://www.udemy.com/course/python3-programming-for-beginners/",
      "bio": "Learn the building blocks of programming so you can easily learn any computer programming language!",
      "objectives": [
        "Students will gain a strong foundation in programming using python 3. The basic logic and control structures that are common to programming languages are learned so that students may go further with python or easily pick up another programming language.."
      ],
      "course_content": {},
      "requirements": [
        "You should have basic computer knowledge: installing and running software, saving files, creating folders, etc."
      ],
      "description": "Would you like to learn computer programming, but you've been frustrated by courses or books that give you too much - or too little information - leaving you feeling hopelessly lost?\nThose approaches remind me of a guitar teacher I had years ago. He had two instructional methods - neither of which worked for me. He would either teach me to play one specific song, then I could play that song - but nothing else. Or he would play something complicated while I sat, watching him. I was supposed to pick up his guitar-playing skills by osmosis I guess, but that didn't happen.\n\nI've taught computer programming for many years and have found the most effective approach is to teach the tools one by one, giving exercises or assignments that allow students to practice each new concept until mastered. As the student learns, he or she gradually builds larger, more complex programs. While this may not be the most glamorous technique - it works! Students gain confidence as they truly understand how to use the programming tools.\nWhat are those \"tools\"? Most programming languages have the same basic features. I use python 3 in this course. (The simplicity, but power, of python makes it an excellent language for beginning programmers). After completing the course, students will be able to go further with python or easily switch to another programming language.\nStudents learn programming by programming! You will learn a lot by completing each assignment on your own. There is inevitably some struggling in the early parts of any programming course. You will learn from your mistakes, becoming a stronger, more confident programmer as a result.\nI don't give out code files for the assignments. However each assignment has an accompanying video that reviews my solution. The solution videos should be viewed after completing your assignment to the best of your ability.\nA printable pdf checklist is included to chart your progress in the course.\nIn this course, you'll learn:\nHow to use a basic code editor (the free Wing IDE)\nVariables, variable types, and conversions\nConditional statement (if, elif, else)\nBoolean Logic\nRepetition using for and while loops, nesting loops\nLists (similar to arrays in most other languages)\nString processing\nRandom number generation\nFunctions\n15 programming assignments are given. For each assignment, there is a video showing my solution for that assignment.\nThe assignments are text-based (no graphics or gui). This keeps the focus on learning the language and programming logic, building a strong foundation for more advanced programming.",
      "target_audience": [
        "Anyone who wants to learn computer programming. The suggested age is 14 and over. Python 3 is used in this course."
      ]
    },
    {
      "title": "6 Practice Tests for any JavaScript Certification",
      "url": "https://www.udemy.com/course/6-practice-tests-for-any-javascript-certification/",
      "bio": "Test your JavaScript Knowledge with 6 Practice Tests and Brief Explanation",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Course Overview:\nThis comprehensive course is designed to provide aspiring JavaScript developers with the essential practice and preparation. With a focus on practical application, the course includes six carefully crafted practice tests that cover a wide range of topics and difficulty levels.\nCourse Features:\nSix Practice Tests: The course offers six full-length practice tests, each containing a diverse set of questions. These tests are designed to simulate the format and difficulty level of actual JavaScript certification exams.\nPractical Application: The course emphasizes the practical application of JavaScript concepts and techniques. Each practice test includes questions that require you to apply your knowledge to real-world scenarios, enhancing your problem-solving skills and reinforcing your understanding of JavaScript programming principles.\nDetailed Explanations: Following each practice test, you will receive detailed explanations for each question.\nPassing Criteria: To successfully pass the course, you must achieve a minimum score of 70% on each of the six practice tests.\nWho Can Enroll:\nThis course is suitable for individuals at various stages of their JavaScript programming journey. Whether you are a beginner seeking to gain a solid foundation in JavaScript or an experienced developer aiming to validate your skills through certification, this course will provide the necessary practice and guidance. It is ideal for:\nJavaScript enthusiasts eager to test their knowledge and skills.\nStudents preparing for JavaScript certification exams.\nProfessionals seeking to enhance their employability by obtaining a JavaScript certification.\nProgrammers looking to expand their proficiency in JavaScript.\nRegards,",
      "target_audience": [
        "JavaScript enthusiasts eager to test their knowledge and skills.",
        "Students preparing for JavaScript certification exams.",
        "Professionals seeking to enhance their employability by obtaining a JavaScript certification.",
        "Programmers looking to expand their proficiency in JavaScript."
      ]
    },
    {
      "title": "Spring Boot & Thymeleaf - The Full Stack Developer Guide",
      "url": "https://www.udemy.com/course/spring-jpa-mvc-security-mockito-practical-guide/",
      "bio": "Mastering Spring and Spring Boot + Developing Role-Based Full-Stack App (JPA, Thymeleaf, Testing, Security, MySql)",
      "objectives": [
        "Master Spring and Spring Boot Framework for building Full-Stack Applications.",
        "Explore advanced Spring Boot features like DevTools, Actuator, and Properties for efficient development.",
        "Utilize Spring Boot with JPA, JUnit Testing, Security, and REST for comprehensive application development.",
        "Analyze and architect real-time systems through practical projects like 'JavaCorner-Admin'.",
        "Develop role-based full-stack applications, covering both back-end and front-end development.",
        "Implement a resilient business layer using Rest Services APIs.",
        "Implement Front-End Layer using Thymeleaf.",
        "Implement Front-End Layer using Thymeleaf.",
        "Ensure application security with Spring Security.",
        "Get acquainted with Spring Boot 3's latest features and Sping 6 latest features.",
        "Learn how to migrate from Spring Boot 2 to Spring Boot 3."
      ],
      "course_content": {
        "Course Overview": [
          "Course Overview",
          "Course Sections",
          "Course Objectives",
          "Course Prerequisites",
          "Downloading Source Code"
        ],
        "Preparing Development Environment for Windows Os": [
          "Step 1 : JDK Installation",
          "Step 2 : Download and Install Java IDE (Intellji IDE)",
          "Step 2 : Download and Install Java IDE (STS IDE)",
          "Step 3 : Download and Install Maven (Part 1)",
          "Step 3 : Download and Install Maven (Part 2)",
          "Step 4 : Download and Install MySql Server and Workbench"
        ],
        "Preparing Development Environment for Linux Ubuntu": [
          "Step 1 : JDK Installation",
          "Step 2 : Intellji IDE Installation (Part 1)",
          "Step 2 : Intellji IDE Installation (Part 2 : Change to Dark Mode (Optional) )",
          "Step 2 : Download & Install STS IDE (Part 1) [optional]",
          "Step 2 : Download & Install STS IDE (Part 2) [optional]",
          "Step 2 : Download & Install STS IDE (Part 3) [optional]",
          "Step 3 : Download and Install Apache Maven",
          "Step 4 : Create First Maven Application on IntelliJ IDE",
          "Step 4 : Create First Maven Application on STS IDE [Optional]",
          "Step 5 : Install MySQL & phpMyAdmin"
        ],
        "Spring Boot Course : (Part 1 : Introduction to Spring Core)": [
          "Inversion of Control andDependency Injection",
          "IoC Containers Types",
          "Spring Bean Configuration",
          "Bean Scopes and Lifecycle",
          "Dependency Injection (DI) (Part 1)",
          "Dependency Injection (DI) (Part 2 : Example)",
          "Beans Autowiring (Part 1)",
          "Beans Autowiring (Part 2 : Example)"
        ],
        "Spring Boot Course : (Part 2 : Introduction to Spring Boot)": [
          "Agenda",
          "What is Spring Framework",
          "What is Spring Boot",
          "Why Spring Boot",
          "History of Spring Boot",
          "New Features of Spring Boot 2 and Spring Boot 3",
          "Spring Boot vs Spring MVC"
        ],
        "Spring Boot Course : (Part 3 : First Spring Boot Application)": [
          "Agenda",
          "Creating Spring Boot Initializr",
          "Generate First Project Initializr",
          "Deploy Spring Boot Application (Part 1)",
          "Deploy Spring Boot Application (Part 2)",
          "SpringBoot Servlet Initializer"
        ],
        "Spring Boot Course : (Part 4 : Spring Boot Project Structure)": [
          "Agenda",
          "Project Code Structures",
          "SpringBootApplication Annotation"
        ],
        "Spring Boot Course : (Part 5 : Spring Boot Runners)": [
          "Agedna",
          "Spring Boot Runners (Part 1)",
          "Spring Boot Runners (Part 2)"
        ],
        "Spring Boot Course (Part 6 : Managing Application Properties)": [
          "Agenda",
          "Application Properties (Part 1 : Define the Application Name)",
          "Application Properties ( Part 2 : Connecting with the Postgres Database )",
          "Application Properties ( Part 3 : Set Tomcat Port Number)",
          "Creating Custom properties (Part 1 : How to create custom properties)",
          "Creating Custom properties (Part 2 : Practical Example)",
          "Spring Boot Failure Analyser (Part 1)",
          "Spring Boot Failure Analyser (Part 2)"
        ],
        "Spring Boot Course (Part 7 : Spring Data JPA)": [
          "What is JPA",
          "JPA Architecture",
          "JPA Implmentations",
          "Spring Data",
          "Spring Data JPA"
        ]
      },
      "requirements": [
        "Java +8"
      ],
      "description": "Bootcamp Description :\nThis bootcamp covers essential components of the Spring Framework (Spring Core, Spring Boot, Spring JPA, Spring MVC, Spring Rest, Spring Security, Spring Testing, Thymeleaf, MySQL, Postgres), guiding you through the process of building a Full-Stack Application from scratch. It delves into crucial concepts crucially employed in real-world projects.\n\n\nCourse 1 : Complete Reference of Spring Framework\nMastering Spring Framework (Spring Core 5/6 and Spring Boot 2.7/3).\nMastering Spring Concepts  (IoC, DI, Spring Beans, Bean Life-cycle, Bean Autowiring, AOP)\nMastering Spring Boot features (Runners, Actuator, DevTools, App Properties, Failure Analyzer)\nMastering Spring Boot concepts by creating a Role-Based Full-Stack Application sample using (Spring Boot, JPA, Rest, MVC, JUnit, Postgres).\n+15 practical projects designed to strengthen your skills as a Spring developer, immersing you in the development of real-world applications.\n\n\nCourse 2 : Developing a Role-Based Full-Stack Project.\nLearn how to build system class diagram (UML) based on system business requirements.\nLearn to use Spring Initializr and how to construct the Spring Boot project.\nLearn how to develop Model layer using Spring Data JPA.\nLearn how to develop Business layer using Spring Service.\nLearn how to develop unit testing using JUnit-5 and Mockito-4.\nLearn how to develop Integration testing using Test Containers.\nLearn how to develop Front-End using Spring MVC and Theymleaf.\nLearn how to develop Users Authentication and authorization using Spring Security.\nLearn how to use Maven Build tool.\nUsing MySQL Database for data storing.\nUsing Intellij IDEA.\nExplaining how to install the software on Windows and Linux.",
      "target_audience": [
        "Java/Spring Developers who looking to practice real-time application"
      ]
    },
    {
      "title": "Learn C++ File Handling Full Course With (Console) Project",
      "url": "https://www.udemy.com/course/learn-c-file-handling-full-course-with-console-project/",
      "bio": "C++ File Handling Course With (Console)Project : Mini database: Student Database Management & Result Calculation system",
      "objectives": [
        "Students will learn the basics of C++ File Handling in an easy way",
        "Students will learn to make a console-based project in C++ based on file handling concepts",
        "Students will learn to write C++ programs which teach them how to implement basic file handling functions and concepts",
        "How to use different file handling functions like get(), put(), read(), write(), rdbuff(), getline() and many more",
        "How to open and close files binary and text files & How to use file pointers and their related functions",
        "What are error flags and how to handles errors while reading/writing to filesWhat are binary files and why are they preferred over text files",
        "Learn to add, delete, update, search records of students in the database",
        "Learn to implement concepts & make project after doing C++ beginners level course",
        "Learn how to create mini-database( which is a binary file) that contains records of students",
        "Learn to create Result Calculation System that calculates the result of whole class & also shows individual student result."
      ],
      "course_content": {
        "Introduction": [
          "Introduction To the Course",
          "What are Streams in C++ ?"
        ],
        "Introduction to File Handling in C++ (in detail)": [
          "Section Overview",
          "What in File Handling in C++ in detail",
          "Some File Handling Concepts",
          "Why Do We Need File Handling ?",
          "Header Files For File Handling",
          "Types of Files Used in C++",
          "Download & Install Dev C++",
          "Quiz # 1"
        ],
        "Handling Text Files in C++ & Error Detection": [
          "Section Overview",
          "Demo : Example 1 : Write data to text File",
          "Demo of Open Function & Introduction to open() function and its modes",
          "Demo of File Opening Modes",
          "Demo : Example # 2 : Open File and Reading data from the same file “File.txt\"",
          "Demo:Example 3: Intro: Writing & Reading data From Text Files using Strings",
          "Demo: Example 3(a): Writing data to text File using Strings with blanks",
          "Demo: Ex.3(b): Reading data from same File & using eof( ),getline( ) & good( )",
          "Introduction to Error Checking With Bits",
          "Demo: Example 4 : Intro: Checking File For Errors Using Error bits",
          "Demo : Example 4: Checking File For Errors in a program",
          "Demo: Ex 5:(a) Write/Read Character Data In Text File Using put() & get function",
          "Demo Ex 5 (b) Using rdbuff( ) function to read complete file data at once",
          "Quiz # 2",
          "Assignment # 1"
        ],
        "Handling Binary Files and What are File Pointers & Their Related Functions?": [
          "Section Overview",
          "what are binary files ?",
          "Why are binary Files Preferred over text files ?",
          "Introduction to read( ) & write( ) function used for binary files",
          "Introduction to read( ) function",
          "Introduction to write( ) function",
          "File Pointers Introduction",
          "Using seekg( ) While File Reading",
          "Using tellg( ) while file reading",
          "Using seekp( ) function while file writing",
          "Using tellp( ) function while file writing",
          "Intro to Demo: Example 9: Moving file pointers to different positions in File",
          "Demo: Example 9: Moving File Pointers to different positions in the file",
          "Quiz # 3",
          "Assignment # 2"
        ],
        "Handling Binary Files By Reading and Writing Different Types Of Data to It": [
          "Section Overview",
          "Intro Demo:Ex 6 :Writing & Reading Array data from BinaryFile wth read()/write()",
          "Demo: Ex 6(a): Writing Array Data To Binary File",
          "Demo: Ex 6(b): Reading Array Data From Binary File",
          "Introduction to Demo: Example 7: Writing and Reading class object data from file",
          "Demo: Ex 7: Writing Class object data to binary file using write( ) function",
          "Demo: Ex 7: Reading class object from binary file using read( ) function",
          "Intro to Demo: Ex 7 (Extended): Writing Multiple objects to binary file",
          "Demo: Ex 7 (Extended) Writing/Reading multiple objects to binary file using loop",
          "Intro to Demo: Example 10: Adding OOP in File Handling Program",
          "Demo: Ex 10(a): Opening Ex 8 and saving as Ex 10",
          "Demo: Ex 10 (b): Adding OOP in file handling: Adding Diskout( ) Function",
          "Demo: Ex 10 (c): Adding Diskcount( ) Function in code",
          "Demo: Ex 10 (d): OOP in file handling: Adding DiskIn( ) Function",
          "Demo: Ex 10 (e): OOP in File Handling: Code Summary & Code Execution",
          "Quiz # 4"
        ],
        "Project I:Introduction : Student Database Management & Result Calculation System": [
          "Introduction",
          "Preview of Project Demo & Download Project Complete Source Code",
          "Dev C++ Installation",
          "How To Run Project In Dev C++",
          "How To Run Project in Visual Studio",
          "How To Run Project in Code Blocks",
          "Designing Home Screen Of Project"
        ],
        "Project II: Student Database Management System (SDMS) Implementation ( Part A )": [
          "Creating student class & adding some member variables",
          "Adding getdata() function of class & creating class object in main function",
          "Adding other class functions e.g showdata(),Tabular Display() & getstudentrollno",
          "Adding ShowStudentRecord( ) function : (searches and displays student record)",
          "Adding Constructor to student class",
          "Quiz # 5"
        ],
        "Project III: Student Database Management System (SDMS) Implementation ( Part B )": [
          "Add Entry Menu ( ) Function that shows SDMS menu",
          "Display All Records : SDMS Menu Option 2 Implementation",
          "Add/Create Student Record : SDMS Menu Option 1 Implementation",
          "Search Student Record : SDMS Menu Option 3 Implementation",
          "Update Student Record : SDMS Menu Option 4 Implementation",
          "Update Case # 1",
          "Update Case # 2",
          "Update Case # 3",
          "Update Final Summary",
          "Delete Student Record : SDMS Menu Option 5 Implementation",
          "Quiz # 6"
        ],
        "Project IV : Result Calculation System Implementation": [
          "Creating Menu of Result Calculation System",
          "Show class Result : Result Calculation Menu Option 1",
          "Show Student Report Card : Result Calculation Menu Option 2",
          "Project Code Summary"
        ],
        "Course Summary": [
          "File Handling Course Summary"
        ]
      },
      "requirements": [
        "Access to a computer with internet to install Dev C++",
        "Student should know all basic concepts of C++ like data types, operators , decision making statements, loops, functions, arrays, pointers, structures, classes",
        "Students should know how to run simple programs in C++/Dev C++"
      ],
      "description": "If you want to learn how file handling in C++, you are the just in the right place. If you are familiar with C++ basics like data types, I/O statements, arrays, pointers, structures, classes then you are perfectly ready to take this course.\n\n\nYou do not need to now the basics of File Handling as we just started this topic from scratch and after understanding the basic topics, we will jump to create a project so that students can apply what they have learnt.\n\n\nAfter this course you will be able to\n\n\n· Learn the basics of C++ File Handling in an easy way\n· Write C++ programs which teach them how to implement basic file handling functions and concepts\n· Open and close files binary and text files\n· Use different file handling functions like get(), put(), read(), write(), rdbuff(), getline() and many more.\n· Use file pointers and their related functions\n· Know what are binary files and why are they preferred over text files.\n· Learn what are error flags and how to handles errors while reading/writing to files\n· Make a console-based project in C++ based on file handling concepts.\n· Add, delete, update, search records of students in the database\n· Implement concepts & make project after doing C++ beginners level course\n· Create mini-database( which is a binary file) that contains records of students\n· Create Result Calculation System that calculates the result of whole class & also shows individual student result.\n\n\nTo provide a hands-on experience, the course basically creates a project that teaches how to create a mini-database using the concept of File Handling in C++. Once created, course teaches students how to use C++ File Handling Concepts to create, search, update and delete records in the database(a binary file is used as database to store students records). It also teaches how to retrieve records of students and show the class result or individual student result on the output screen. These all functions are performed by one program in C++ which is the project that we will teach students how to create and run that program.\n\n\nThe course contains over 9 hours of great video content. To see if you like the way I teach, you can have a look at the free videos and make your decision. Over 21,000 students bought my courses and majority are satisfied. If you do not like the course, remember that you can request a full refund within 30 days but I guarantee your satisfaction.\n\n\nIf you have any questions regarding this course or regarding C++ basics, feel free to ask anytime. I will happily answer them and would love to assist you in your journey of learning the language.",
      "target_audience": [
        "C++ Intermediate students who just completed C++ beginners level course and know C++ basics.",
        "Who want to learn the topic of file handling in C++ from scratch and implement it by making a mini-database as its project"
      ]
    },
    {
      "title": "Build 7 Useful Python Beginner Projects from Scratch",
      "url": "https://www.udemy.com/course/build-7-useful-python-beginner-projects-from-scratch/",
      "bio": "Learn Python by building 7 Practical and Useful Apps from Scratch step by Step",
      "objectives": [
        "Install Python",
        "Use Tkinter module",
        "Create a digital clock",
        "Create a countdown timer",
        "Create a calculator",
        "Create a weight conversion tool",
        "Create a times table generator",
        "Create a random number generator",
        "Create a number guessing game"
      ],
      "course_content": {
        "Introduction to Programming With Python": [
          "Introduction",
          "What You will Create",
          "What is Python",
          "Download and Install Python",
          "What is the Python IDLE",
          "What are Reserved Keywords in Python",
          "Arithmetic Operators",
          "Comparison Operators",
          "Python Variables",
          "Python List",
          "Python Tuples",
          "Using Comments in Python",
          "Slicing Strings",
          "Write your first Python Program",
          "Boolean Data Type",
          "What is a class",
          "Using the SELF variable"
        ],
        "Introduction to Tkinter": [
          "What is Tkinter",
          "Tk and Tcl",
          "Installing Python 3 and Tcl TK for Mac",
          "Create your first tkinter app"
        ],
        "Projects": [
          "Project 1: Creating a digital clock part 1",
          "Project 1: Creating a digital clock part 2",
          "Running your python app",
          "Project 2: Creating a countdown timer - Part 1",
          "Project 2: Creating a countdown timer - Part 2",
          "Project 2:Creating a countdown timer - Part 3",
          "Project 3: Creating a calculator - Part 1",
          "Project 3: Creating a calculator - Part 2",
          "Project 3: Creating a calculator - Part 3",
          "Project 4: Weight conversion tool - Part 1",
          "Project 4: Weight conversion tool - Part 2",
          "Project 4: Weight conversion tool - Part 3",
          "Project 5: Times Table Generator -Part 1",
          "Project 5: Times Table Generator -Part 2",
          "Project 6: Generating Random Numbers",
          "Project 7: Number Guessing Game",
          "Bonus Project: Removing Vowels App",
          "Thank You"
        ]
      },
      "requirements": [
        "You should be able to use a PC at beginner level"
      ],
      "description": "Python is a dynamic modern object -oriented programming language.\n\nIt is easy to learn and can be used to do a lot of things both big and small.\nPython is what is referred to as a high level language.\nThat means it is a language that is closer to humans than computer.\nIt is also known as a general purpose programming language due to it's flexibility.\nPython did not get it's name from the snake but rather from the British comedy\ngroup known as Monty Python.\nPython is object -oriented means it regards everything as an object.\nAn object in the real world could be a person or a car.\nPython is an interpreted language that does not need to be complied like\nfor example java programming language.It is interpreted and run on the fly the same time.\nPython has been used in a lot of places like in creating games,for statistical data and\nvisualisation,speech and face recognition.\nSome of the biggest websites on this planet earth use python in one way or another. Examples inlude:\nGoogle\nYoutube\nFacebook\nNasa\nDisney\nPixar\nReddit\nPinterest\nInstagram\nSpotify\nSurvey Monkey\nYahoo Maps\nThis course is a practical and hand on course where you will create 7 projects from scratch\nThe projects we will create together are:\nA Digital Clock\nA countdown timer\nA Calculator\nA weight conversion tool\nA times tables generator\nA Random number generator\nA Number Guessing Game\nA Vowel removal program\nThe best way to learn a new programming language is by building something with it. By the end of this course you would have acquired some useful skills to get creative building more apps on your own.\nI look forward to welcoming you to the course.",
      "target_audience": [
        "Anyone who wants to learn how to code",
        "Beginner developers",
        "Beginner programmers"
      ]
    },
    {
      "title": "Programming Automation with R and RStudio - Complete Guide",
      "url": "https://www.udemy.com/course/complete-guide-to-automation-with-r-in-2021/",
      "bio": "R Programming, RStudio, R Automation, R Reporting, Cloud Scheduling, Linux Automation, RStudio Cloud, R Coding",
      "objectives": [
        "Automate Tasks with R Programming Language",
        "Manipulate Data from Local, Web and Cloud Sources using R and RStudio",
        "Schedule Automation - Cloud or Local",
        "Read and Write CSV, TXT, XLSX with R",
        "Create Formatted Excel Spreadsheets with R Code",
        "Create Dynamic Reports (Powerpoint, Word, PDF, HTML)",
        "Parse Web and PDF Files with R packages",
        "Parse Email Content and Attachments",
        "Send Automated Emails with R and RStudio",
        "Cloud Solutions - Dropbox and Amazon S3",
        "Github Repository Management",
        "Linux Server and AWS EC2 - Install R and Setup CronJobs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure Overview",
          "Course Structure Update 2024!"
        ],
        "Setup R and Rstudio": [
          "Setup R and RStudio",
          "R and RStudio: Base Commands and Interface",
          "R and Packages",
          "Posit Package Manager for Version Control - 2024 New!"
        ],
        "Github": [
          "Setup Account and Token",
          "Clone, Pull, Commit, Push"
        ],
        "Read and Transform Files using R and RStudio Programming": [
          "Files on Local Drive",
          "Script to Read Files",
          "Loop and Aggregate",
          "Basic Data Clean-up",
          "Subset and Save Data",
          "Calculate Values"
        ],
        "Read Files of Different Formats": [
          "Read CSV and TXT",
          "Read from Excel using R and RStudio",
          "Read from PDF"
        ],
        "Data from Web": [
          "Download or Read Files from URL",
          "Parse Tables from Web Pages",
          "Google Sheets and R with RStudio"
        ],
        "Parse Emails": [
          "Configure Connection",
          "Navigate through Mail Box",
          "Parse Email Content",
          "Fetch Attachment"
        ],
        "Write Emails": [
          "Configure Connection Email",
          "Email With HTML Body and Attachment"
        ],
        "Recap": [
          "Config File",
          "Read Data and Date Manipulation with R",
          "Advanced HTML Email Body"
        ],
        "Formatted MS Excel Report": [
          "Save Content as Excel with R Scripts",
          "Styles",
          "Conditional Formatting",
          "Multiple Pages Loop"
        ]
      },
      "requirements": [
        "Basic Programming (R, Python, SQL) is preferred but not mandatory",
        "Some knowledge of Microsoft Office (Excel, Word, Powerpoint)",
        "Recent version of R and Rstudio: how to install is covered",
        "Windows OS is preferred but all code runs on Mac OS as well and the minor differences between Mac and PC will be explained"
      ],
      "description": "Learn how to Automate every Office and Business task with R programming language and RStudio!\nThis course will give you a complete overview of a set of tools and packages that can help you automate any office and business task with the R programming language.\nWith Udemy's 30-day money-back guarantee in place, there's no need to worry if the class doesn't meet your expectations.\nThe learning material does not contain any analytics or data science lessons.\nWe will not study statistics or machine learning.\nWe will not write complex algorithms and solve coding puzzles.\nInstead, we focus on how to make your life easier and save time for yourself and money for your company.\n\n\nThis course is the most complete automation course you will find online\nAfter completing this course you will be able to schedule any repetitive task with R and RStudio\nread and write files dynamically from various sources (local drive, web, Google Sheets, dropbox, amazon)\nstore results without complex SQL databases using various R packages\nparse emails and attachments for further manipulations with R programming\nproduce custom Excel, PowerPoint, and Word documents from R scripts\nsend results by email and files as attachments\nexport your scripts to the cloud, schedule automatic runs or on-demand\ncreate a cloud dashboard to control R automated tasks\nAutomation is a very dynamic skill and I am learning new skills every day.\nThis course will be updated with new programming skills, packages and features.\n\n\nMy experience\nDuring my banking career, I had to program hundreds of automatic mailing reports to track stock market information and portfolio performance on daily basis. By automating these tasks I became very efficient with my time.\nCurrently, as a consultant, I help dozens of companies to automate their recurring tasks. Often hundreds of hours of manual work per month are saved once a complex recurring task is automated.\nI teach R, C# and Excel/VBA on a daily basis and after 1,200 mentoring sessions, I know precisely which tools are necessary for most of the people who learn programming.\nAs a consultant, you can very quickly acquire new clients who desperately need to improve their business.\n\n\nWhy R, RStudio, and Posit?\nR is one of the simplest programming languages to learn and is very friendly with data manipulation.\nR is open source and is part of a large community of developers that create and maintain packages we will explore during this course.\nRStudio is probably the best IDE for programmers (also supports C++, Python, SQL, and other languages).\nAs of the end of 2023, R is rocking it with these cool numbers:\nRStudio has an active user base of 3.5 million.\nPosit cloud has a 65,000 userbase.\nOver the year, an impressive 2 billion R packages were downloaded.\n\n\nWhich Packages will be covered?\nBase R functions will be covered as much as possible however they are very limited.\nTherefore we will learn a set of packages necessary for the programming automation tasks.\ndplyr: R data manipulation with very user-friendly syntax\ntidyr: data clean-up, remove duplicates, NA's etc.\nstringr: string and regex manipulation\nlubridate: work with Date class objects\npdftools: parse content from PDF files\nhtmltab: parse html tables from web\ngsheet: download files from Google Sheets\nmRpostman: connect to email box and read data from Emails\nemayili: connect to email box and send emails\ntableHTML: create custom format HTML tables\nopenxlsxl: read and write Excel files\nofficer: read and write Word and PowerPoint documents\nflextable: create formated tables as content for officer\nrdrop2: connect to dropbox as cloud source using R and RStudio",
      "target_audience": [
        "Office Workers | Business Managers | Accountants | Financial Administators | Students and Researchers",
        "Financial Analysts and Traders who need to Automate their Data Flows",
        "Business Consultants who work with large amount of Data",
        "Beginners who want to learn R without starting immediately with Statistics, Algorithms and Data Science",
        "Data Scientists and R Developers who need to Automate their tasks",
        "Excel users who want to switch to R Programming",
        "R programmers who want to discover what else R can offer"
      ]
    },
    {
      "title": ".NET/C# Beginners Bootcamp",
      "url": "https://www.udemy.com/course/net-csharp-beginners-bootcamp/",
      "bio": "Learn to develop Websites, Mobile Apps using .NET/C# and Visual Studio",
      "objectives": [
        "Create ASP(dot)NET Sites",
        "Create C# Programs",
        "Work with SQL Server Databse",
        "Work with Source Control",
        "Create Mobile Apps",
        "Begin the Journey of becoming a .NET Great Developer!"
      ],
      "course_content": {
        "Introduction": [
          "Intro to this course",
          "Visual Studio Download",
          "C# Hello World Console App",
          "Source Code for this course"
        ],
        "C# Basics": [
          "C# Variables",
          "C# Variables Quiz",
          "C# Variable Sheet",
          "C# Methods",
          "C# Methods Quiz",
          "C# Methods Sheet",
          "C# Selection Statements - If",
          "C# Selection Statements - If else",
          "C# If Statment Quiz",
          "C# Selection Statements - Switch",
          "C# Selection Statements Sheet",
          "C# Operators - Arithmetic Operators",
          "C# Operators - Logical Operators",
          "C# Operators - Relational Operators"
        ],
        "C# Iteration Statements": [
          "C# For Iteration",
          "C# While Iteration",
          "C# foreach Iteration",
          "C# Iteration Statement Sheet"
        ],
        "C# Classes & Interfaces & Namespaces": [
          "C# Class",
          "Create C# Class Objects",
          "C# Class Properties",
          "C# Class Constructor",
          "C# Class Inheritance",
          "C# Class Sheet",
          "C# Interface",
          "C# Namespace",
          "C# Interface & Namespace Sheet"
        ],
        "Arrays": [
          "C# Array Basics",
          "C# Multidimensional Array",
          "C# Array Sheet"
        ],
        "C# Delegates": [
          "Delegates"
        ],
        "Access Modifiers": [
          "C# Public",
          "C# Private",
          "C# Protected",
          "C# Access Modifires Sheet"
        ],
        "C# Data Types and Scopes": [
          "C# Int",
          "C# Float",
          "C# Decimal",
          "C# Double",
          "C# Scope Concept",
          "C# Data Types and Scope Sheet"
        ],
        "C# Generics": [
          "C# Generic Intro",
          "C# Generic Class",
          "C# Generic Interface",
          "C# Generic Sheet"
        ],
        "C# Collection": [
          "C# List",
          "C# Dictionary",
          "C# HashSet",
          "Iteration through collections",
          "C# Collection Sheet"
        ]
      },
      "requirements": [
        "Basic Understanding of what is C#",
        "Visual Studio 2017"
      ],
      "description": "Hello there! Thanks for stopping by and checking out our course. This course is for who wants to start their journey as .NET Developer. The average salary for C#/.NET Developer is $77,563 and C# is considered the 5th most in demand language. You can create almost anything in C# from websites to mobile apps. So, you can work both as a website developer and mobile developer.\nThis course will take you through the basics of C# language. We will walk you through the most important parts and how to do them. Then, after we finish the basics which is really important so you can develop C# programs effectively we will take you to develop websites using the latest version of ASP.NET.\nASP.NET Core is the latest version of ASP.NET framework for developing websites. ASP.NET comes from a long history and is one of the well-known and widely used frameworks in web development. ASP.NET Core has the ability to run not only on windows platforms, but other platforms as well such as Linux. We will walk you through the beginnings of creating ASP.NET Core sites, how to add pages and pass data. Then we will take you much deeper with how to pass data between controller and view and how to create user accounts and have authorization for the users in on the websites.\nNow also, we will teach you how to create databases with SQL Server and how to save and retrieve data from SQL Server. And how to create tables inside SQL Server and how to create Stored Producers.\nNot that only, we will teach you how to create Mobile Apps with Xamarin. Xamarin allows you to create Mobile Apps in C# that are cross platform. So, you write the code only once and it will be shared on all the other mobile platforms such as Android, iOS.\nFinally, we will also add extra content to help you stay ahead and keep your skills as a .net/C# developer always sharp. Join us now!",
      "target_audience": [
        "Beginners or junior developers who want to learn .NET Framework and develope applications with it"
      ]
    },
    {
      "title": "Hands-On F# Application Development",
      "url": "https://www.udemy.com/course/hands-on-f-application-development/",
      "bio": "Design, build, and deliver real-world applications faster with F#",
      "objectives": [
        "Setup your IDE for F# development & use F#-friendly tools for test automation, builds, and dependency management",
        "Build simple-to-complex application behavior with F# functions",
        "Interoperate between your F# applications and other .NET languages",
        "Managing asynchronous input with F# agents",
        "Processing discontinuous input with reactive extensions"
      ],
      "course_content": {
        "Building F# Applications": [
          "The Course Overview",
          "Setting Up for F# Development in Visual Studio",
          "Setting Up for F# Development in Visual Studio Code",
          "Creating and Building F# Projects in Visual Studio Code",
          "Unit Testing in F#",
          "Advanced Unit Testing with F#",
          "Domain Modelling with Immutable Data Types",
          "Domain Modelling with F# Collections",
          "Using Functions as Objects in F#",
          "Leveraging Computation Power of the Collection APIs",
          "Interoperating with Object-Oriented Languages",
          "Designing Behavior Before Data",
          "Turning Numbers into Types with Units of Measure",
          "Making Types from Anything with Single-Case Unions",
          "Making Invalid States Unrepresentable",
          "Pure and Impure Functions",
          "Using Higher Order Functions for Dependency Injection",
          "Reusing Partial Functions",
          "Building Complex Behavior with Function Composition",
          "Implementing Behavior with State Machines",
          "Test your knowledge"
        ],
        "Data Programming with F#": [
          "The Course Overview",
          "Processing Data with Functions and Collection APIs",
          "Creating Data Streams with Sequence Expressions",
          "Generating, Merging, and Grouping Data Streams with the Collection APIs",
          "Handling Large Documents and Data Streams",
          "Parsing Data with FParsec",
          "Using FSharp Asynchronous Workflows",
          "Designing and Controlling Asynchronous Workflows",
          "Managing Asynchronous Input with FSharp Agents",
          "Processing Discontinuous Input with Reactive Extensions",
          "Using Type Providers in Your Program",
          "Working with Relational Databases Using Type Providers",
          "Working with Web APIs Using Type Providers",
          "Working with Azure Using Type Providers",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Basic grammar and syntax of F# is required for this course."
      ],
      "description": "Developers are challenged today to build applications in less time, while maintaining high standards of quality, reliability, security, and performance. The F# programming language can help you meet these challenges by letting you write solutions with less code, fewer bugs, and better alignment with business requirements.\nThis course follows practical approach, where initially you will setting up our F# development & then look in depth at two powerful techniques for building real-world F# applications: type-first design and function composition. We'll then learn to leverage advanced F# tools to build and test applications. Then you will learn how to set up a development environment and design a build process with tools that leverage the F# language.Finally you learn, how to process large sets of data with maximal performance and efficiency using asynchronous workflows, agents, and .NET reactive extensions.\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course,  Building F# Applications starts by showing how to use the functional features of F# to rapidly turn requirements into software designs that are correct, complete, extensible, bug-free, and easy to read and understand. We will start by setting up our F# development environment and reviewing some key language features. We'll then look in depth at two powerful techniques for building real-world F# applications: type-first design and function composition. We'll then learn to leverage advanced F# tools to build and test applications.The video course examines key language features and functional programming techniques with the goal of providing a good understanding of the basic building blocks that can be used to build higher abstractions and more comprehensive solutions. As we go, we will learn how to set up a development environment and design a build process with tools that leverage the F# language.\nThe second course, Data Programming with F# presents practical techniques for handling real-world data programming challenges. We'll first see how to build efficient, extensible engines to parse and process documents and data streams. Then we'll study how to process large sets of data with maximal performance and efficiency using asynchronous workflows, agents, and .NET reactive extensions. Next, we'll learn to use type providers, a unique F# feature that lets us program with data as if it were code. By the end of the course, you will be capable of writing solutions with less code, fewer bugs, and better alignment with business requirements.\nAbout the Authors\nRichard Broida is a software design and programming consultant specializing in Microsoft Windows and Azure technologies. Over his career he has developed enterprise applications for clients in medical, banking, insurance, manufacturing, transportation, and e-commerce. He is a frequent speaker on F#, C#, and cloud technologies and has taught .NET programming courses for adult professionals.",
      "target_audience": [
        "This course will appeal to programmers, developers & intermediate C# developers, who are confident with the basic grammar and syntax of F# and are now looking to gain a deep understanding of F# to sharpen their F# programming skills."
      ]
    },
    {
      "title": "100+ Python Coding Practice Test [Questions & Answers] 2025",
      "url": "https://www.udemy.com/course/python-interview-questions-answers-coding/",
      "bio": "100 Python Coding Interview Questions and Answers (Solution Code with Detailed Explanations) | Coding Practice Exercises",
      "objectives": [
        "Master Python Fundamentals and Advanced Concepts",
        "Solve Real-World Coding Challenges with Confidence",
        "Apply Python to Specialized Fields Like Data Science and Machine Learning",
        "Ace Technical Interviews with Proven Strategies and Techniques",
        "Understand Problems Thoroughly with In-Depth Explanations",
        "Get Unstuck with Helpful Hints and Guidance",
        "Follow Clear, Step-by-Step Solutions",
        "Test Your Code Rigorously with Multiple Test Cases"
      ],
      "course_content": {
        "100 Days of Python: Daily Coding Exercises for Interview Preparation": [
          "Introduction",
          "Challenge Breakdown and Solution",
          "How to Debug Effectively in Python: A Step-by-Step Guide",
          "Think Before You Code: A Structured Approach to Problem Solving",
          "Challenges Lists",
          "Python Program to Print Hello world!",
          "Python Program to Solve Quadratic Equations",
          "Convert Celsius to Fahrenheit Using Python Programming",
          "Python Program to Calculate Square Root of a Number",
          "Python Program to Determine if a Number is Odd or Even | Odd-Even Checker",
          "Python Program to Compute the Area of a Triangle",
          "Python Program to Add Two Numbers - Simple Addition Function",
          "Swap Two Variables Using Python Programming",
          "Python Program to Check if a Number is Prime",
          "Python Program to Find All Prime Numbers in a Given Interval",
          "Python Program to Generate the Fibonacci Sequence",
          "Convert Kilometers to Miles Using Python Programming",
          "Generate Random Numbers in Python",
          "Python Program to Generate and Display Multiplication Tables",
          "Python Program to Determine if a Number is Positive, Negative, or Zero",
          "Find the Largest Number Among Three in Python",
          "Python Program to Check if a Year is a Leap Year",
          "Convert Decimal Numbers to Binary, Octal, and Hexadecimal in Python",
          "Python Program to Check if a Number is an Armstrong Number",
          "Calculate Powers of 2 Using Python Anonymous Functions",
          "Find Armstrong Numbers in a Given Interval Using Python",
          "Python Program to Calculate the Factorial of a Number",
          "Calculate the Sum of Natural Numbers Using Python Programming",
          "Find ASCII Value of a Character Using Python Programming",
          "Find HCF or GCD of Two Numbers Using Python Programming",
          "Calculate Factorial of a Number Using Recursive Python Function",
          "Find LCM of Two Numbers Using Python Programming",
          "Python Program to Find Numbers Divisible by Another Number | Divisibility Checker",
          "Find Factors of a Number Using Python Programming",
          "Shuffle a Deck of Cards Using Python Programming",
          "Display Calendar Using Python Programming",
          "Generate Fibonacci Sequence Using Recursive Functions in Python",
          "Convert Decimal to Binary Using Recursive Python Functions",
          "Add Two Matrices Using Python Programming",
          "Transpose a Matrix Using Python Programming",
          "Build a Simple Calculator in Python",
          "Multiply Two Matrices Using Python Programming",
          "Check if a String is a Palindrome in Python",
          "Calculate Sum of Natural Numbers Using Python Recursion",
          "Create Pyramid Patterns Using Python Programming",
          "Python Program to Perform and Illustrate Set Operations",
          "Remove Punctuation from Strings Using Python Programming",
          "Sort Words Alphabetically Using Python Programming",
          "Merge Emails in Python: Automate Personalized Email Generation",
          "Merge Two Dictionaries in Python Programming",
          "Safely Create Nested Directories in Python",
          "Access List Index Using For Loop in Python",
          "Flatten Nested Lists in Python Programming",
          "Count Vowels in a String Using Python",
          "Iterate Over Dictionaries in Python Using For Loops",
          "Sort a Python Dictionary by Its Values Efficiently",
          "Check If a Python List is Empty - Simple Program",
          "Split a List into Evenly Sized Chunks Using Python",
          "Master Python List Slicing Techniques",
          "Concatenate Two Lists in Python Programming",
          "Check if a Key Exists in a Python Dictionary",
          "Parse String to Float or Integer in Python",
          "Handle Multiple Exceptions in Python Using a Single Line",
          "Print Colored Text in Python Terminal",
          "Convert String to Datetime in Python Programming",
          "Extract Substring from String in Python",
          "Copy a File Using Python Programming",
          "Print Output Without Newline in Python",
          "Get the Last Element of a List in Python",
          "Read File Line by Line into a Python List",
          "Check If a String Is a Valid Float Number in Python",
          "Count Occurrences of an Item in a Python List",
          "Create Multiline Strings in Python Programmatically",
          "Randomly Select an Element from a List in Python",
          "How to Append Text to a File Using Python Programming",
          "Delete an Element from a Python Dictionary Programmatically",
          "Extract File Extensions Using Python Programming",
          "Measure Elapsed Time in Python Programming",
          "Get the Class Name of an Object in Python",
          "Convert Two Lists into a Python Dictionary Efficiently",
          "Understand the Difference Between type() and isinstance() in Python",
          "Trim Whitespace from Strings Using Python",
          "Extract File Name From File Path Using Python",
          "Extract File Name From File Path in Python",
          "Return Multiple Values from a Python Function",
          "Count Lines in a File Using Python",
          "Find All .txt Files in a Directory Using Python",
          "Get File Creation and Modification Dates in Python",
          "Get the Full Path of the Current Working Directory in Python",
          "Iterate Through Two Lists in Parallel Using Python",
          "Check File Size Using Python Programming",
          "Reverse a Number Using Python Programming",
          "Compute the Power of a Number Using Python Programming",
          "Count Digits in a Number Using Python Programming",
          "Check If Two Strings Are Anagrams Using Python",
          "Capitalize the First Character of a String in Python",
          "Generate All Permutations of a String Using Python",
          "Create a Countdown Timer Using Python Programming",
          "Count Character Occurrences in a String Using Python",
          "Remove Duplicate Elements from a List in Python",
          "Convert Bytes to String in Python Programming",
          "Find Intersection of Two Lists in Python Efficiently",
          "Convert Tuple to String in Python: Step-by-Step Guide",
          "Generate Secure Random Passwords in Python",
          "Check if a Number is Perfect Using Python Programming"
        ],
        "Interactive Python Interview Practice: Role Play Sessions": [
          "Python Interview Questions for Freshers: Role Play Practice",
          "Python Interview Questions for 5 Years Experience: Role Play Practice",
          "Python Interview Questions for Senior Developer: Role Play Practice"
        ]
      },
      "requirements": [
        "Basic Familiarity with Programming Concepts (Optional for Beginners)",
        "A Willingness to Learn and Practice"
      ],
      "description": "Master Python Interview Coding Questions and Answers: Solutions, Detailed Explanations & Practical Coding Exercises for Success\nAre you preparing for a Python-related job interview? Whether you're a fresher just starting your career or an experienced professional looking to level up, this course is designed to help you ace Python interview questions with confidence. From Python coding interview questions for beginners to advanced Python interview questions , we’ve got you covered with detailed explanations, practical coding exercises, and real-world examples.\nWhy This Course?\nPython is one of the most in-demand programming languages across industries like software development, data science, machine learning, and more. As a result, mastering Python interview questions is essential for landing your dream job. This course dives deep into all aspects of Python programming, ensuring you’re well-prepared for any technical interview scenario.\nHere’s what makes this course unique:\nIn-Depth Exploration : Learn everything from basic syntax to advanced topics like object-oriented programming (OOP), data structures, debugging, and optimization.\nReal-World Scenarios : Practice solving Python coding challenges for interviews that mimic actual problems faced by developers, data engineers, and data scientists.\nDetailed Explanations : Every question comes with step-by-step solutions and clear reasoning so you understand not only what to do but also why it works.\nTargeted Preparation : Tailored content for freshers, experienced professionals, data engineers, data scientists, and machine learning enthusiasts.\nWhat You’ll Learn\n1. Python Interview Questions for Freshers\nIf you’re new to Python or just starting your career, don’t worry! We’ll walk you through foundational concepts such as:\nBasic syntax and data types\nControl flow statements (if-else, loops)\nFunctions and modules\nFile handling basics\nCommon pitfalls and how to avoid them\nThese lessons are perfect for tackling Python interview questions for freshers and building a strong foundation.\n2. Python Coding Interview Questions for Beginners\nPractice hands-on coding exercises designed to test your problem-solving skills. Topics include:\nWriting efficient algorithms\nWorking with strings, lists, dictionaries, and sets\nImplementing recursion and iteration\nSolving common algorithmic problems\nBy practicing these Python coding interview questions , you’ll gain the confidence to tackle even the trickiest problems during interviews.\n3. Python Data Structures Interview Questions\nData structures are at the heart of every technical interview. Master key concepts such as:\nArrays and linked lists\nStacks and queues\nTrees and graphs\nHash tables and heaps\nTime and space complexity analysis\nUnderstanding these will prepare you for both Python technical interview questions and role-specific challenges like those faced by data engineers and machine learning engineers .\n4. Python OOPs Interview Questions\nObject-Oriented Programming (OOP) is a critical skill for software developers. Dive into:\nClasses and objects\nInheritance and polymorphism\nEncapsulation and abstraction\nDesign patterns in Python\nThese topics are frequently asked in Python OOPs interview questions and are crucial for demonstrating your expertise in structured programming.\n5. Advanced Python Interview Questions\nFor seasoned professionals, we cover complex topics such as:\nMultithreading vs multiprocessing\nDecorators and generators\nException handling best practices\nMemory management and garbage collection\nPerformance optimization techniques\nThese advanced Python interview questions will set you apart from other candidates and showcase your depth of knowledge.\n6. Python Interview Questions for Data Science & Machine Learning\nIf you’re targeting roles in data science or machine learning, this section is tailored for you. Learn about:\nNumPy, Pandas, and Matplotlib for data manipulation and visualization\nBuilding predictive models using Scikit-learn\nHandling large datasets efficiently\nFeature engineering and selection\nThese Python interview questions for data science and Python interview questions for machine learning ensure you’re ready for specialized roles.\n7. Python Tricky Interview Questions\nSome interview questions are designed to test your creativity and logical thinking. We’ll teach you how to approach:\nEdge cases and corner cases\nDebugging complex code snippets\nOptimizing runtime performance\nWriting clean, maintainable code\nThese Python tricky interview questions will sharpen your problem-solving abilities and help you stand out.\n8. Python Debugging Interview Questions\nDebugging is a vital skill for any developer. Our course includes strategies for:\nIdentifying and fixing bugs systematically\nUsing logging and debugging tools effectively\nWriting robust unit tests\nPreventing future errors through better coding practices\nWho Is This Course For?\nThis course caters to a wide range of learners, including:\nFreshers : If you’re new to Python, start here to build a solid foundation and learn how to answer Python interview questions for freshers .\nExperienced Developers : Upgrade your skills with advanced Python interview questions and stay ahead of the competition.\nData Engineers : Prepare for Python interview questions for data engineers with our focus on data pipelines, ETL processes, and big data frameworks.\nData Scientists & Machine Learning Engineers : Get ready for Python interview questions for data science and machine learning with hands-on projects and case studies.\nAnyone Preparing for Technical Interviews : Whether you’re aiming for a startup or a FAANG company, this course equips you with the tools to succeed.\nWhy Choose Us?\nPractical Focus :Actionable insights and coding exercises that simulate real-world interview scenarios.\nLifetime Access : Study at your own pace and revisit the material whenever you need a refresher.\nCommunity Support : Join our active discussion forums to connect with fellow learners and industry experts.\nReady to Ace Your Next Python Interview?\nDon’t leave your success to chance. Enroll now in Master Python Interview Coding Questions and Answers and take the first step toward landing your dream job. With our proven strategies, detailed explanations, and extensive practice exercises, you’ll be fully equipped to handle any Python technical interview questions thrown your way.\nStart today and transform your career with Python!",
      "target_audience": [
        "Freshers & Entry-Level Developers",
        "Experienced Software Developers",
        "Data Engineers",
        "Data Scientists & Machine Learning Engineers",
        "QA Engineers & Automation Testers",
        "Freelancers & Entrepreneurs",
        "Career Changers",
        "Competitive Programmers",
        "Self-Taught Developers",
        "Anyone Preparing for Technical Interviews"
      ]
    },
    {
      "title": "Python Programming for MLOps - Production Environment - 2025",
      "url": "https://www.udemy.com/course/python-programming-for-mlops-aiops-devops/",
      "bio": "Optimize MLOps, AIOps, and DevOps Workflows with Python - Essential skills for productionalization",
      "objectives": [
        "Apply Python confidently to infrastructure and operations tasks: Write clean, modular Python code using core principles, file handling, modules, and OOP.",
        "Automate file-related operations: Efficiently manipulate, encrypt, and work with various file formats commonly used in DevOps, MLOps, and AIOps.",
        "Create interactive command-line applications: Build CLIs with Python to automate tasks and streamline workflows.",
        "Effectively manage Linux systems remotely: Use Python's Fabric library for remote execution and psutil for system monitoring",
        "Create, manage, and publish Python packages: Organize code into reusable packages and distribute them on platforms like PyPI.",
        "Utilize Docker for application deployments: Understand Docker image creation, containerization, and deployment.",
        "Automate workflows with GitHub Actions: Design and configure CI/CD pipelines using GitHub Actions.",
        "Implement CI/CD workflows utilizing AWS services: Design pipelines that leverage S3 for storage and EC2 instances for deployment.",
        "Write tests specifically for MLOps projects: Ensure MLOps reliability and maintainability using Pytest.",
        "Provision and manage infrastructure using code: Apply Infrastructure as Code (IaC) principles with Pulumi's Python SDK.",
        "Experience a complete MLOps pipeline: Build an end-to-end MLOps solution integrating tools and concepts learned throughout the course.",
        "Set up continuous monitoring for improved visibility: Implement monitoring and alerting using Prometheus and Grafana."
      ],
      "course_content": {},
      "requirements": [
        "No Programming Experience is needed",
        "Just a Laptop and CLI to code"
      ],
      "description": "Master the essential Python skills you need to streamline DevOps workflows, implement intelligent MLOps pipelines, and optimize AIOps practices. This comprehensive course dives into Python fundamentals, file automation, command-line mastery, Linux utilities, package management, Docker, CI/CD with AWS, infrastructure automation, and even advanced monitoring and logging techniques.\nKey Skills You'll Develop:\nPython Foundations: Get a robust understanding of variables, data types, control structures, functions, object-oriented programming, and best practices for clean Python code.\nFile Automation: Effortlessly manipulate text, binary, and various file formats (like CSV, JSON, and more) used in MLOps, AIOps, and DevOps projects. Learn encryption strategies for secure file handling.\nCommand-Line Power: Build command-line interfaces and automate tasks with Python libraries like argparse, Click, and fire.\nLinux Integration: Interact with Linux systems effectively using Python's Fabric and psutil libraries.\nPackage Management: Learn to create, manage, and publish your own Python packages to streamline your workflows.\nDocker Expertise: Master Docker containerization for consistent and portable deployments.\nGitHub Actions Automation: Create and customize GitHub Actions workflows for your Python projects.\nAWS Essentials: Set up your AWS environment, work with S3 buckets, manage EC2 instances, and design CI/CD pipelines on AWS.\nPytest Power: Write robust and maintainable tests for your MLOps projects using Pytest.\nInfrastructure as Code with Pulumi: Automate infrastructure provisioning and management using Pulumi's Python SDK.\nMLOps in Action: Participate in a hands-on demo showcasing a complete MLOps pipeline.\nMonitoring & Logging: Set up continuous monitoring with Prometheus and Grafana for actionable insights into your systems.\nWho This Course Is For:\nDevelopers interested in streamlining DevOps processes\nData scientists and ML engineers looking to enhance MLOps practices\nIT professionals wanting to implement AIOps strategies\nAnyone eager to master Python for infrastructure management and automation",
      "target_audience": [
        "Developers interested in streamlining DevOps processes",
        "Data scientists and ML engineers looking to enhance MLOps practices",
        "IT professionals wanting to implement AIOps strategies",
        "Anyone eager to master Python for infrastructure management and automation"
      ]
    },
    {
      "title": "138 C Language Programming Coding Practices for Beginners",
      "url": "https://www.udemy.com/course/practical-c-programming-practices-130-common-projects/",
      "bio": "Master C Language faster! Improve your C programming skill with 138 hands-on coding practices and real-world projects.",
      "objectives": [
        "Level up your C programming skill with over 130+ beginners best practices",
        "How to accept input from User",
        "How to sum 2 integers from user",
        "How to build a Simple Interest Calculator",
        "How to check for Greatest of 3 Numbers",
        "How to check for divisibility of a Number",
        "How to convert from Celsius to Fahrenheit",
        "How to check for Leap year",
        "A program to Shut Down Computer",
        "A program to get IP Address",
        "How to Find ASCII value",
        "How to get quotient and remainder",
        "How to swap 2 numbers",
        "How to add Complex Numbers",
        "How calculate Sum of digit numbers",
        "How to create Floyd's Triangle",
        "A program to calculate Area of a Circle",
        "How to calculate Area of a Rectangle",
        "How to calculate Area of Square",
        "How to calculate Area of a Triangle",
        "How to calculate volume of a Cube",
        "How to calculate Area of a Cylinder",
        "How to calculate volume of Sphere",
        "How to generate Random Numbers",
        "And lots more..."
      ],
      "course_content": {
        "Introduction": [
          "Practice 1. Hello World",
          "Practice 2. How to accept input from User",
          "Practice 3. How to sum 2 integers from user",
          "Practice 4. How to build a Simple Interest Calculator",
          "Practice 5. How to Multiply Float Numbers",
          "Practice 6. How to Find ASCII value",
          "Practice 7. How to get quotient and remainder",
          "Practice 8. How to swap 2 numbers",
          "Practice 9. Alternative method to swap 2 numbers",
          "Practice 10. How to swap 2 Strings",
          "Practice 11. How to add Complex Numbers",
          "Practice 12. How calculate Sum of digit numbers",
          "Practice 13. How to create Floyd's Triangle",
          "Practice 14. How to calculate Area of a Circle",
          "Practice 15. How to calculate Area of a Rectangle",
          "Practice 16. How to calculate Area of Square",
          "Practice 17. How to calculate Area of a Triangle",
          "Practice 18. How to calculate volume of a Cube",
          "Practice 19. How to calculate Area of a Cylinder",
          "Practice 20. How to calculate volume of Sphere",
          "Practice 21. How to generate Random Numbers",
          "Practice 22. How to calculate gross salary",
          "Practice 23. How to calculate percentage",
          "Practice 24. A program to Shut Down Computer",
          "Practice 25. A program to get IP Address",
          "Practice 26. A program for Date and Time",
          "Practice 27. How to detect Even and Odd numbers",
          "Practice 28. How to detect Vowels and Consonants",
          "Practice 29. How to detect Greatest of 3 Numbers",
          "Practice 30. How to find Roots of Quadratic Equation",
          "Practice 31. How to detect a Leap Year",
          "Practice 32. How to display Student_s Grade",
          "Practice 33. How to Sum a given a Number",
          "Practice 34. How to Calculate factorial using function",
          "Practice 35. How to create Multiplication Table",
          "Practice 36. How to create Fibonacci Sequence",
          "Practice 37. How to Reverse Numbers",
          "Practice 38. How to Reverse Numbers using Array",
          "Practice 39. How to Reverse String",
          "Practice 40. How to check Palindrome",
          "Practice 41. How to create Prime Numbers",
          "Practice 42. How to Calculate HCF and LCM",
          "Practice 43. How to detect Armstrong Numbers",
          "Practice 44. How to generate Armstrong Numbers",
          "Practice 45. How to create Half Pyramid Pattern",
          "Practice 46. How to create half pyramid",
          "Practice 47. How to create Full Pyramid",
          "Practice 48. How to create Inverted Half Pyramid",
          "Practice 49. How to create Paschal Triangle",
          "Practice 50. How to create Perfect Square",
          "Practice 51. How to create Diamond pattern",
          "Practice 52. How to build Simple Calculator",
          "Practice 53. How to Reverse Numbers using Array",
          "Practice 54. How to Reverse Array without Pointer",
          "Practice 55. How to find Length of String",
          "Practice 56. How to Add 2 Matrices with Multidimensional Array",
          "Practice 57. How to Subtract 2 Matrices",
          "Practice 58. How to Multiply 2 Matrices",
          "Practice 59. How to Transpose a Matrix",
          "Practice 60. How to Add 2 Numbers",
          "Practice 61. How to sum Array Elements",
          "Practice 62. How to sort String",
          "Practice 63. How to Find the Maximum Element in an Array",
          "Practice 64. How to Merge 2 Arrays",
          "Practice 65. How to insert a new Element into an Array",
          "Practice 66. How to delete an Element in an Array",
          "Practice 67. Check frequency of occurrence of a character",
          "Practice 68. How to remove spaces in-between strings",
          "Practice 69. String Concatenation",
          "Practice 70. Find the length of Strings",
          "Practice 71. How to copy Strings",
          "Practice 72. How to Compare Strings",
          "Practice 73. How to get the substring of a string",
          "Practice 74. How to find the Minimum Element",
          "Practice 75. How to remove Vowels from String",
          "Practice 77. How to add 2 distances using Structure",
          "Practice 78. How to generate Student_s Data using Union",
          "Practice 79. How to write to File",
          "Practice 80. How to read a File",
          "Practice 81. How to Delete a File",
          "Practice 82 How to copy one file into another",
          "Practice 83. How to copy more than one Files",
          "Practice 84. How to print out source code",
          "Practice 85. How to convert from Binary to Decimal",
          "Practice 86. How to convert from Binary to Hexadecimal",
          "Practice 87. How to convert from Decimal to Octal",
          "Practice 88. How to convert from Decimal to Binary",
          "Practice 89. How to Convert from Decimal to Binary Bitwise",
          "Practice 90. How to build Binary Pattern",
          "Practice 91. Squares of N Numbers",
          "Practice 92. How to get square of number entered by user",
          "Practice 93. How to check for Positive Number",
          "Practice 94. Alternative method to check for Positive Number",
          "Practice 95. How to Add first and last digit of a Number",
          "Practice 96. How to find Factors of a Number",
          "Practice 97. How to Check Average of numbers",
          "Practice 98. How to convert from Uppercase to Lowercase",
          "Practice 99. How to create Binary Pattern",
          "Practice 100. How to convert from Binary to Octal",
          "Practice 101. How to create a Diamond Pattern",
          "Practice 102. How to create Diamond Outline",
          "Practice 103. How to Create Diamond of Numbers",
          "Practice 104. How to create Floyd's pattern",
          "Practice 105. How to create a Hollow Diamond pattern",
          "Practice 106. How to create a Hollow square pattern",
          "Practice 107. How to create Hour Glass pattern",
          "Practice 108. How to create Star Hash pyramid pattern",
          "Practice 109. How to create Nested Star Hash Pyramid",
          "Practice 110. How to create Alpha Numeric Pattern",
          "Practice 111. How to build Numeric Diamond Pattern",
          "Practice 112. How to create Numeric Pattern",
          "Practice 113. How to create Numeric Pattern (Part 2)",
          "Practice 114. How to create Numeric Pattern (Part 3)",
          "Practice 115. How to create Numeric Pattern ( part 4)",
          "Practice 116. How to create Pascal Triangle",
          "Practice 117. How to create Pascal Triangle (Part 2)",
          "Practice 118. How to create Pascal Triangle using Function",
          "Practice 119. How to create Half Cone pattern",
          "Practice 121. How to create Alphabet Pattern",
          "Practice 122. How to create Numeric pattern (Part 5)",
          "Practice 123. How to create inverted Half Cone",
          "Practice 124. How to create a Simple Pattern (Part 2)",
          "Practice 125. How to create Numeric Diagonal",
          "Practice 126. How to create a Simple Pattern(Part 3)",
          "Practice 127. How to create a Steep slope pattern",
          "Practice 128. How to check for Float and Integer",
          "Practice 129. How to create Numeric Slope Pattern",
          "Practice 130. How to create Pyramid pattern",
          "Practice 131. How to create Rectangular Pattern",
          "Practice 132. How to create Rectangular Star Pattern",
          "Practice 133. How to create Inverted Cone",
          "Practice 134. How to create a Rhombus pattern",
          "Practice 135. How to create Square Kite Pattern",
          "Practice 136. How to create Square star pattern",
          "Practice 137. How to create an X pattern",
          "Practice 138. How to create a Triangle without fill",
          "Congratulations! Keep Learning..."
        ]
      },
      "requirements": [
        "This courses requires the basics of C programming knowledge",
        "A computer (Windows/Mac/Linux)"
      ],
      "description": "Unlock your potential in C programming with our comprehensive course designed for beginners! “138 C Programming Practices/Common Projects to Improve Your Coding Skill” offers hands-on experience through a variety of real-world projects. Master essential concepts and boost your coding confidence with these practical exercises:\nGetting Started: Write your first “Hello World” program and learn how to accept input from users.\nBasic Arithmetic: Sum two integers, multiply float numbers, and calculate simple interest.\nAdvanced Calculations: Find ASCII values, compute quotients and remainders, and add complex numbers.\nGeometry and Area Calculations: Calculate the area of circles, rectangles, squares, triangles, and volumes of cubes, cylinders, and spheres.\nUtility Programs: Generate random numbers, calculate gross salary and percentage, and even create a program to shut down your computer or get the IP address.\nDecision Making: Detect even and odd numbers, vowels and consonants, find the greatest of three numbers, solve quadratic equations, and detect leap years.\nStudent Grading: Display student grades and calculate the sum of given numbers.\nFunctions and Arrays: Use functions to calculate factorials, create multiplication tables, Fibonacci sequences, and reverse numbers.\nStrings and Patterns: Reverse strings, check for palindromes, generate prime numbers, and create various patterns including pyramids, Pascal’s triangle, and diamond patterns.\nMatrix Operations: Add, subtract, and multiply matrices, transpose matrices, and find the maximum element in an array.\nFile Handling: Write to, read from, delete, and copy files, and print out source code.\nConversions: Convert between binary, decimal, octal, and hexadecimal.\nAdvanced Algorithms: Build binary patterns, check for positive numbers, add the first and last digit of a number, find factors of a number, and convert uppercase to lowercase.\nStructure and Union: Utilize structures to add distances and generate student data, and practice reading and writing data using unions.\nWhy Enroll?\nHands-on Experience: With 138 projects, gain practical coding skills through extensive practice.\nBeginner Friendly: Start from the basics and gradually move to more complex projects.\nReal-world Applications: Learn to create useful programs and algorithms that solve real problems.\nBoost Your Confidence: Build a solid foundation in C programming and enhance your problem-solving skills.\n138 C Programming Practices/Common Projects to Improve Your Coding Skill offers a comprehensive guide through real-world projects and exercises that cover:\nWriting your first “Hello World” program\nAccepting and summing user input\nBuilding a Simple Interest Calculator\nMultiplying float numbers and finding ASCII values\nSwapping numbers and strings, including alternative methods\nAdding complex numbers and calculating sums of digit numbers\nCreating Floyd’s Triangle and calculating areas and volumes of geometric shapes\nGenerating random numbers and calculating gross salary and percentage\nPrograms for shutting down the computer, retrieving IP address, and displaying date and time\nDetecting even and odd numbers, vowels and consonants, and greatest of three numbers\nSolving quadratic equations, detecting leap years, and displaying student grades\nCalculating factorials, creating multiplication tables and Fibonacci sequences\nReversing numbers and strings, checking for palindromes, and generating prime numbers\nCalculating HCF and LCM, detecting and generating Armstrong numbers\nCreating various patterns like half pyramid, full pyramid, Pascal’s triangle, diamond pattern, and more\nBuilding a simple calculator and working with arrays and strings\nPerforming matrix operations and handling file input/output\nConverting between binary, decimal, octal, and hexadecimal\nPracticing with advanced algorithms and data structures\nEnroll in 138 C Programming Practices/Common Projects to Improve Your Coding Skill” today and take your first step towards mastering C programming. Whether you’re a beginner looking to start your coding journey or someone aiming to sharpen your skills, this course is your gateway to becoming proficient in C programming.\nWhy Must I Take This Course And What Benefit Is It To ME As A C Programmer?\nThis is the only course on the internet that will help you to become a certified and successful programmer with an in-depth knowledge of the entire aspect of C programming and prepare you with the required skills necessary to build you to face job interviews and get employed as a full stack Software developer.\n\n\nEmenwa Global instructors are industry experts with years of practical, real-world experience building software at industry leading companies. They are sharing everything they know to teach thousands of students around the world, just like you, the most in-demand technical and non-technical skills (which are commonly overlooked) in the most efficient way so that you can take control of your life and unlock endless exciting new career opportunities in the world of technology, no matter your background or experience.",
      "target_audience": [
        "Anyone looking to level up their skills and master C programming language",
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": "Basic of R programming using R Studio Cloud",
      "url": "https://www.udemy.com/course/basic-of-r-programming-using-r-studio-cloud-u/",
      "bio": "R Programming for Under Graduate Students",
      "objectives": [
        "Get familiar with the R Studio cloud",
        "Learn Basic Syntax and Data Types",
        "Explore the basic concepts of R programming like Variables, Operators.",
        "Apply the knowledge of R Programming for Decision Making using Loops and Functions."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to R Studio cloud",
          "Data Types and Variables",
          "Data Strcture for R Programming",
          "Operators in R Programming",
          "Decision Statements and Loops for R Programming",
          "Functions of R Programming"
        ]
      },
      "requirements": [
        "No Programming Experience needed. Only browser with internet connectivity is essential."
      ],
      "description": "R plays a very important role in Data Science. Recently Data Science has been introduced in many universities as a mandatory subject. Installing the R with all necessary packages is a tedious task. This course is designed for undergraduate students and mainly focuses on two aspects R Studio Cloud and R programming. RStudio Cloud makes it easy for anyone to practice, share, teach and learn data science. It analyses the data using RStudio directly from the browser. You can easily share projects with your team, class,  or workshop. R is one of the most popular languages for statistical modeling and analysis. R is an open-source programming language. This means that anyone can work with R without any need for a license or a fee. R is highly compatible and can be paired with many other programming languages like C, C++, Java, and Python. It can also be integrated with technologies like Hadoop and various other database management systems as well. The objective of this course is to make the students familiar with the R Studio cloud. Along with this some basic building of R programming like data types, variables, operators, decision- making statements are also explained. The built-in and user-defined functions are also explained in detail. The hand- on session, will help the students to easily grasp the concepts.",
      "target_audience": [
        "his course is designed for the undergraduate students of Computer Engineering who wants to learn R programming from scratch."
      ]
    },
    {
      "title": "Building a Multi Layer .NET Core 3.1 Web API from Zero",
      "url": "https://www.udemy.com/course/building-a-multi-layer-net-core-3x-web-api-from-zero/",
      "bio": "Building a Multi Layer .NET Core 3.1 Web API from Scratch (SQL Server -EF Core-, MongoDB, Authentication with JWT )",
      "objectives": [
        "Creating Core Layer",
        "Data Access with Entity Framework for SQL Server",
        "Data Access with MongoDB",
        "Services — Business Logic",
        "API - Presenting our application",
        "Integrate the Authentication & Authorization with JWT (JSON Web Token)",
        "Application Client with ASP .NET CORE MVC to consume the APIs",
        "Swagger, AutoMapper"
      ],
      "course_content": {},
      "requirements": [
        "C#",
        "Basic HTML/ CSS"
      ],
      "description": "Hello,\nI decided to create this course because I actually couldn’t find many courses explaining on how to separate your application in multiple layers with ASP.NET Core 3.1 Web API.\nHere we are building a nice API with basic CRUD (Create, Read, Update, Delete) operations. It will be an API for an app that stores which musics you like with its artists.\nI will show you how to:\n· Create an application in separated projects to make it decoupled from each module.\n· Implement Repository and Unit of Work pattern.\n· Use Entity Framework Core for persistence with SQL server.\n· Use MongoDB Database for NoSQL\n· Add AutoMapper for mapping models into API resources.\n· Add Swagger to have a friendly API interface.\n· Integrate the Authentication & Authorization with JWT (JSON Web Token)\n· Application Client with ASP.NET CORE MVC to consume the APIs\n\n\n\n\nAnd on top of all these, you'll get:\nDownload the source code",
      "target_audience": [
        "Students, Developper, architect"
      ]
    },
    {
      "title": "Golang: Learn Go Programming Language and Go Recipes",
      "url": "https://www.udemy.com/course/golang-learn-go-programming-language/",
      "bio": "2 Course in 1. Learn the Fundamentals of The Go Programming Language & Go Recipes.",
      "objectives": [
        "Learn the fundamentals of Go and syntax.",
        "Go Recipes",
        "Learn Go functions, types, conditionals, and loops.",
        "Understand Object-oriented programming with Go.",
        "Learn Concurrent programming with channels.",
        "Learn about connectivity features for networking with APIs and databases."
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of programming"
      ],
      "description": "Welcome to this two part course on learning Go, the programming language from Google. In this 2 part course we'll go over the fundamentals of Go and then get into Go Recipes.\nWe'll start things off with the fundamentals of Go. We'll cover most of the language and learn many of the concepts that underlie this programming language.\nIn course two, we get into more advance topics. You'll be introduced to Golang Recipes. Which shows examples of how the Go programming language can be used\nWe'll walk you through common Go projects with \"recipes,\" or step-by-step instructions. We'll go over some basics, such as Go slices, maps, error handling, and panic recovery.\nWe'll then get into how to measure, format, parse, and convert time in Go. We'll go over ways you can work with text in Go. Then demonstrate using structs, methods, and interfaces to improve your code.\nWe'll discuss working with JSON and HTTP, then concludes by describing the benefits of bringing concurrent instructions to your apps.\nGo – also known as Golang – is an open source programming language developed by Google in 2007.  Go makes it easy to build simple, reliable, and efficient software.\nGo is a programming language with modern features, clean syntax and a robust well-documented common library, making it an ideal programming language to learn. Go can be used for anything, meaning developers who learn Go can use it wherever they want.\nQuite a few large companies are starting to make the switch over to Go and there are many that already use it for parts of their backend software. Some companies that use Go are: Facebook, Google, Github, 99designs and many more.\nThis is a great course to jumpstart your learning journey with Go, whether you want to learn it for personal or professional reasons.  This course touches on all of the basics so that you will have good understanding of the Go programming language.",
      "target_audience": [
        "Programmers",
        "Developers",
        "Anyone interested in learning the Go Programming Language"
      ]
    },
    {
      "title": "Twilio / Node - SMS booking system using Twilio and Node.Js",
      "url": "https://www.udemy.com/course/twilio-sms/",
      "bio": "Build a complete SMS booking system using Twilio and Node.Js that receives and send messages to create a new appointment",
      "objectives": [
        "How to create a complete SMS booking system using Twilio and Node",
        "How to send SMSes",
        "How to receive SMSes",
        "How to use Twilio to send SMS",
        "How to use NodeJs to manage send and receive SMS"
      ],
      "course_content": {
        "Introduction": [
          "Before we signup to Twilio",
          "Creating a Twilio Account",
          "Buying a Twilio Number (for free)",
          "Creating the API key and secrete to access Twilio safely",
          "Initialising the Node.js backend with Twilio, Express and dotEnv (.env)",
          "Setting up Twilio and dotEnv (.env)"
        ],
        "Sending SMS": [
          "Sending our first SMS"
        ],
        "Understand the express server backend": [
          "Setting up the express server",
          "Nodemon understanding devDependancies vs Global dependancies"
        ],
        "LocalTunnel, your localhost open to the world": [
          "Installing and understanding LocalTunnel"
        ],
        "Understanding Weebhooks": [
          "Configuring Twilio Webhooks"
        ],
        "Receiving SMS": [
          "Receiving our first SMS message"
        ],
        "Tracking the SMS conversation": [
          "Setting up cookies and the reply message",
          "Verifying a new phone number with Twilio",
          "Keeping track of our messages"
        ],
        "Gathering all the booking details": [
          "Counting the steps",
          "Booking an appointment type",
          "Getting the day for the booking",
          "Testing the application and fixing small mistakes",
          "Creating a RegEx for to get the time requested",
          "Getting the appoint time",
          "Confirming the appointments"
        ],
        "Refactoring, it is the same code, but much nicer": [
          "Refactoring part 1",
          "Refactoring part 2",
          "Using guard to make our code easier to understand"
        ],
        "Where to go from here": [
          "Where to go from here"
        ]
      },
      "requirements": [
        "Minimum knowledge in programming (any language will do)",
        "A free Twilio account (step by step in how to setup one in the course)",
        "Desire to learn and be a amazing developer"
      ],
      "description": "Twilio the world's leading cloud communications platform as a service (CPaaS) that enables you to develop SMS solutions, WhatsApp, Voice, Video, email, and even IoT. Twilio powers communications for more than 190,000 businesses and enables nearly 932 billion human interactions every year.\nThis course will leverage some of those capabilities to create a fully functional SMS booking system. Here is how it works, the customer interested in booking an appointment send an SMS to a Twilio number; our Node.JS backend application understand the message and send an SMS back to the customer saying:\nHi, do you want to book an appointment to:\nsee the gym\nbook a personal trainer\nbook a massage\nAfter that, we wait for a user reply, such as:\nI want to book a massage\nAfter that, our Node application will send an SMS to the user asking:\nWhat date do you want to see the masseur\nThe customer will reply with a preferred day, such as:\nMonday, please\nIn this case, we will reply with the valid times available on Monday\nDo you want to book it on Monday: 10 am, 11 am, 1 pm or 4 pm\nAfter the customer selects the best time for the booking, they will reply saying:\nAt 11 am is good for me\nAfter collecting all the data, the NodeJS application will send a confirmation to the customer saying:\nYour appointment is booked to see the masseur on Monday at 11 am. See you than\n\n\nPlease note all the data above is fictional and hardcoded to the application. The course focuses on sending and receiving the SMSes, leaving all the logic of checking the actual dates and times and finalizing the booking for you to implement.\nSaid that new Chapters are coming, and as a student, you can help me decide what comes next. So far few ideas I have on a road map are:\n\nAdd the logic to read/write on the database been able to validate bookings and available times.\nAdd a relational database to the application as a Docker container and add the current application to a container with easier development and deployment.\nAdd an option to cancel a booking.\nAdd an option to make a payment via SMS using stripe.\nMove the NodeJS code to a Serverless function and host it in Twilio.\nAny amazing idea you may have.\n\nEnjoy the course!",
      "target_audience": [
        "Developers of all levels that want to learn new things",
        "Developers that want add SMS capabilities to they applications"
      ]
    },
    {
      "title": "Complete Java Megacourse: Beginner to Expert",
      "url": "https://www.udemy.com/course/complete-java-megacourse-beginner-to-expert/",
      "bio": "Learn how to work with Java like a pro with this project-based course!",
      "objectives": [
        "The essential Java Programming language",
        "How to program in Java professionally",
        "Learn different best practices to apply to different industries",
        "Gain and improve your coding skills",
        "How to build applications and systems performing key operations in areas such as mathematics, finance, sport, science, art, and language",
        "Prepare for interviews by learning key concepts in Java",
        "How to design and develop unique graphical user-interactive software for mobile applications",
        "Practice through individual and teacher-student project-based exercises applied to real-life scenarios"
      ],
      "course_content": {
        "The Basics of Java Programming Language": [
          "Introduction",
          "Variables",
          "Data Types",
          "Classes and Objects Pt. 1",
          "Classes and Objects Pt. 2",
          "Scanner Class Pt. 1",
          "Scanner Class Pt. 2",
          "Access Modifiers Pt. 1",
          "Access Modifiers Pt. 2",
          "Access Modifiers Pt. 3",
          "Print Statements - The Art of Commentary Pt. 1",
          "Print Statements - The Art of Commentary Pt. 2",
          "Print Statements - The Art of Commentary Pt. 3",
          "Print Statements - The Art of Commentary Pt. 4",
          "Develop an E-waiter Menu Collector Pt. 1",
          "Develop an E-waiter Menu Collector Pt. 2",
          "Develop an E-NBA Draft Combine Measurement Recorder Pt. 1",
          "Develop an E-NBA Draft Combine Measurement Recorder Pt. 2"
        ],
        "Operators and Conditional used in Java": [
          "Conditionals Pt. 1",
          "Conditionals Pt. 2",
          "Conditionals Pt. 3",
          "Operators in Java Pt. 1",
          "Operators in Java Pt. 2",
          "Operators in Java Pt. 3",
          "Develop a BMI Calculator to Analyse One’s Basic Health Pt. 1",
          "Develop a BMI Calculator to Analyse One’s Basic Health Pt. 2",
          "Develop an E-space Information System using the Human Weight and Age Pt. 1",
          "Develop an E-space Information System using the Human Weight and Age Pt. 2",
          "Develop an E-space Information System using the Human Weight and Age Pt. 3",
          "Develop an E-company Performance Analyzer Pt. 1",
          "Develop an E-company Performance Analyzer Pt. 2",
          "Develop an E-company Performance Analyzer Pt. 3"
        ],
        "Developing Interactive GUI for Users, Loop Structures, and Control Statements": [
          "ANSI Colour Codes, ASCII Code, For Loops, While Loops & Do While Loops Pt. 1",
          "ANSI Colour Codes, ASCII Code, For Loops, While Loops & Do While Loops Pt. 2",
          "ANSI Colour Codes, ASCII Code, For Loops, While Loops & Do While Loops Pt. 3",
          "ANSI Colour Codes, ASCII Code, For Loops, While Loops & Do While Loops Pt. 4",
          "Develop an ISBN 13 Check Digit Generator & DNA Hamming Distance E-spotter Pt. 1",
          "Develop an ISBN 13 Check Digit Generator & DNA Hamming Distance E-spotter Pt. 2",
          "Develop E-ATM Machine & E-golf Scoring System Pt. 1",
          "Develop E-ATM Machine & E-golf Scoring System Pt. 2",
          "Develop E-ATM Machine & E-golf Scoring System Pt. 3"
        ],
        "The Java Lang & Utility Package": [
          "Math and Random Classes",
          "Develop a Pythagorean Calculator",
          "Develop a PH Scale Analyzer Pt. 1",
          "Develop a PH Scale Analyzer Pt. 2",
          "Random Number Guessing Game",
          "Sound Frequency Measuring System",
          "Calculating the Aircraft Lift",
          "The Mathoria Quizzer Pt. 1",
          "The Mathoria Quizzer Pt. 2",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 1",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 2",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 3",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 4",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 5",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 6",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 7",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 8",
          "StringBuilder, Wrapper, Robot, and Clipboard & StringSelection Classes Pt. 9",
          "Canvas Class + Develop the SOH CAH TOA trigonometric calculator Pt. 1",
          "Develop the SOH CAH TOA Trigonometric Calculator Pt. 2",
          "Develop the SOH CAH TOA Trigonometric Calculator Pt. 3",
          "Develop the SOH CAH TOA Trigonometric Calculator Pt. 4",
          "Develop the SOH CAH TOA Trigonometric Calculator Pt. 5",
          "The Quadratic Equation Root Finder Pt. 1",
          "The Quadratic Equation Root Finder Pt. 2",
          "The Quadratic Equation Root Finder Pt. 3",
          "The Quadratic Equation Root Finder Pt. 4",
          "The Quadratic Equation Root Finder Pt. 5",
          "Develop a Secchi and TSI logbook to analyze the health of water bodies Pt. 1",
          "Develop a Secchi and TSI logbook to analyze the health of water bodies Pt. 2",
          "Develop a Secchi and TSI logbook to analyze the health of water bodies Pt. 3",
          "Develop a Secchi and TSI logbook to analyze the health of water bodies Pt. 4",
          "Develop a Secchi and TSI logbook to analyze the health of water bodies Pt. 5",
          "Develop a Secchi and TSI logbook to analyze the health of water bodies Pt. 6",
          "Develop a Secchi and TSI logbook to analyze the health of water bodies Pt. 7",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 1",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 2",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 3",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 4",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 5",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 6",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 7",
          "Create an After-School Activity Registration Portal (Scheduler) Pt. 8",
          "Develop a Body Health Analyzer System Pt. 1",
          "Develop a Body Health Analyzer System Pt. 2",
          "Develop a Body Health Analyzer System Pt. 3",
          "Develop a Body Health Analyzer System Pt. 4",
          "Develop a Body Health Analyzer System Pt. 5",
          "Develop a Body Health Analyzer System Pt. 6",
          "Create a Cookie Ordering System Pt. 1",
          "Create a Cookie Ordering System Pt. 2",
          "Create a Cookie Ordering System Pt. 3",
          "Create a Cookie Ordering System Pt. 4",
          "Create a Cookie Ordering System Pt. 5",
          "Create a Cookie Ordering System Pt. 6"
        ],
        "Introduction to Advanced Java": [
          "Introduction",
          "Advanced Java: The Fun Way",
          "Tools We Will Be Using",
          "Installing IntelliJ",
          "Setting Up JavaFX"
        ],
        "Power Session on OOP": [
          "What, Why and How",
          "Navigating the Project",
          "Example Inheritance Chain",
          "Constructors and Keywords",
          "Abstract Classes",
          "Interfaces",
          "Trying It Together Pt. 1",
          "Trying It Together Pt. 2",
          "Mini Project: Hotel Manager Pt. 1",
          "Mini Project: Hotel Manager Pt. 2"
        ],
        "Power Session on Java FX": [
          "What is Java FX",
          "Understanding Java FX Layers Pt. 1",
          "Understanding Java FX Layers Pt. 2",
          "Understanding Java FX Layers Pt. 3",
          "Common Nodes",
          "BorderPane",
          "GridPane",
          "Fun Project Pt. 1",
          "Fun Project Pt. 2",
          "Fun Project Pt. 3",
          "Fun Project Pt. 4",
          "Professional Project: Front Page",
          "Animal Registration Form",
          "Saving Data",
          "Database System",
          "Loading Animals",
          "Updating Animals",
          "Removing Animals",
          "Food Management UI",
          "Food Order Saving",
          "Loading Order to Database",
          "Viewing Orders",
          "Employee Page",
          "Saving Employees",
          "Loading Employees",
          "Navigation Bar",
          "Quick Fixes",
          "The End of Zoo Manager"
        ],
        "Organized Programming, Collections & Utility Creation": [
          "Intro",
          "Collections Pt. 1",
          "Collections Pt. 2",
          "Going Further School Design",
          "Classes and Schedules Started",
          "Student Schedules Continued",
          "Students Backpacks",
          "Class Tabulator",
          "Specific Students in Specific Classes",
          "Student Schedules Written to Quasi-Database",
          "Students Added to Class Roster for Convenience",
          "Student UI + Glitch Discovery! Pt. 1",
          "Student UI + Glitch Discovery! Pt. 2",
          "Finishing Schedule UI",
          "Navigation Bar",
          "Backpack System UI",
          "Front Page UI",
          "Class Viewer",
          "Email System Initial",
          "Email System Completed",
          "Fun Project Setup",
          "Adding and Deleting Bugs",
          "Adding Motion",
          "Fixing Motion & Unintended Behaviors",
          "Fixing Motion Continued & Adding Decoration",
          "Finalizing Bug Project"
        ],
        "Professional Project: InnKeeper Deluxe": [
          "Preface",
          "Login Page",
          "Start of Calendar Pt. 1",
          "Start of Calendar Pt. 2",
          "Start of Calendar Pt. 3",
          "Start of Calendar Pt. 4",
          "Start of Calendar Pt. 5",
          "Booking System Pt. 1",
          "Booking System Pt. 2",
          "Booking System Pt. 3",
          "Add Booking UI Pt. 1",
          "Add Booking UI Pt. 2",
          "Save Booking Pt. 1",
          "Save Booking Pt. 2",
          "Room Archetypes UI Pt. 1",
          "Room Archetypes UI Pt. 2",
          "What’s Left",
          "Conclusion",
          "Last Words"
        ]
      },
      "requirements": [
        "No previous knowledge of Java required",
        "A desire to learn!",
        "A positive attitude!"
      ],
      "description": "Learn programming in Java!\nDevelop like a pro!\nIn this day and age, we use technological devices all the time to perform different operations, from online banking, to e-shopping from your favourite stores, and it just makes life easier. Have you ever wondered how these devices are driven to function in the way they do? If you would like to develop an app, a system, or software that could transform manual operations into a whirl of endless technological solutions, then learning Java programming language today is definitely the way to start. Whether you are a Java programmer, or learning Java for the first time, there are numerous strategies and techniques in developing software solutions integrated with various subject domains using Java. And we’re here to teach you how.\nIn this course, you will be learning how to build integrated applications and systems designed to perform key operations in different subject areas, ranging from art, science, and language. You will also be learning how to design and develop a unique graphical user-interactive software that can be used in mobile applications to perform a variety of simultaneous functions that will be accessible to people globally, thanks to Java’s platform-independent nature. Getting suggestions from users about any technological solution is the most essential step in enhancing the prosperity of developed software, and as such you will be learning how this could be made possible while exploring Java´s object-oriented characteristic throughout this course.\nEach lesson contains interactive programming slides which provide you with tons of knowledge about the topic, including various instructor-student project-based exercises, as well as individual project-based exercises presented in each lesson. Each exercise not only touches on different subjects globally, but is also accompanied by explainable solutions per lesson. While there are lots of benefits to gain from enrolling in this course, catering to your needs by providing easy-to-follow dynamic video lessons throughout the process of learning has been the notion used in the development and overall design of this course. Finally, the course has been designed and put together by an experienced software engineer and computer science instructor with years of experience in the field. That’s why this is the only Java course you’ll ever need to start programming like a pro!\n\nStart your programming journey today!\n\n\nAfter taking this course, you will be able to:\n\n\nWork professionally with Java\nDemonstrate your knowledge of Java programming\nDevelop user-interactive softwares\nCode professionally in Java\nFind creative solutions to problems of different fields",
      "target_audience": [
        "Anyone who wants to learn software development and programming - no experience needed!",
        "Software developers who want to learn Java",
        "Anyone who has started working with Java, but want to advance their skills"
      ]
    },
    {
      "title": "C# with WinForms and SQL Create Database Driven Desktop App",
      "url": "https://www.udemy.com/course/csharp-winforms-sql-database/",
      "bio": "Learn how to program mid-size project with Create, Read, Update and Delete functionality with C#, Windows Forms, and SQL",
      "objectives": [
        "Working with multiple forms",
        "CRUD operation",
        "OOP C#",
        "Passing data between forms",
        "Connecting Windows Forms to database",
        "Windows Forms",
        "Working with Windows Forms Events",
        "SQL"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Project",
          "Source Code"
        ],
        "Setting up the project": [
          "Reviewing Forms",
          "Adding Data Set",
          "Adding SQL Table Adapters"
        ],
        "Repair Type Class": [
          "Coding Repair Types Class"
        ],
        "Customer Class": [
          "Creating Customer Class",
          "Getting Customer by ID",
          "Checking for Duplicate Phone Number",
          "Finding Customer By ID",
          "Inserting New Customer",
          "Updating Customer",
          "Deleting Customer"
        ],
        "Appointment Class": [
          "Creating Class",
          "Finding Appointment by ID",
          "Getting Appointment Date and Time",
          "Inserting New Appointment",
          "Updating Appointment",
          "Deleting Appointment"
        ],
        "Main Form": [
          "Coding Main Form"
        ],
        "Customers Forms": [
          "Customers Form - Modifying Customer",
          "Customers Form - Deleting Customer",
          "New Customer Form - Adding Customer",
          "Modify Customer Form - Modifying Customer"
        ],
        "Appointments Form": [
          "Appointments Form - Showing All Appointments",
          "Appointments Form - Populating Drop Downs",
          "Appointments Form - Filtering Appointments By Customer",
          "Appointments Form - Updating Appointment",
          "Appointments Form - Deleting Appointment",
          "New Appointments Form - Populating Drop Downs",
          "New Appointments Form - Adding New Appointment",
          "Modify Appointment Form - Modify Appointment",
          "Modify Appointment Form - Load Event"
        ],
        "Testing and Final Fixes": [
          "Testing and Finding Issues",
          "Fixing Deleting Customer With Appointment Exception",
          "Fixing Combo Boxes Bug"
        ],
        "Conclusion": [
          "What did we learn",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Visual Studio 2019",
        "Microsoft SQL Express",
        "6+ months of C# programming experience",
        "Basic understanding of Windows Forms"
      ],
      "description": "So what is the course all about? It’s about showing you how to set up mid-size project with Create, Read, Update and Delete functionality, C#, Windows Forms, and SQL. I don’t go over any theory, so it is advised you have a at least few months of experience with C# and Windows Forms.\nThe project itself is perfect for showing how to work with multiple forms, set up C# classes, connect to the database, code basic SQL statements, pass data between forms and form objects, work with Windows Form events, and perform CRUD operations. We won’t be working with in-memory data and each operation will be performed directly against the database.\nOf course, this is not a full production ready project. However, it demonstrates how to build a mid-size Windows Forms application, and prepares you towards more advanced concepts. The goal is to show you step by step how each piece of application is coded, so that you can easily follow. This is a perfect course for people who prefer hands on programming, and who like to code everything in a single project, rather than lots of small examples. You can easily finish the project in one weekend, but don’t let that fool you - there is a lot packed into it, and once you understand the code and principles used in this project, you can definitely consider yourself an intermediate programmer. Not bad for 3 hours of your time, right?\nSo, I’ll see you in the course. Let’s code.",
      "target_audience": [
        "Beginner C# programmers",
        "Programmers who prefer hands on programming",
        "Students who prefer single project over mutliple small examples"
      ]
    },
    {
      "title": "MCP & A2A - Model Context Protocol & Agent to Agent Protocol",
      "url": "https://www.udemy.com/course/modelcontextprotocol/",
      "bio": "Build 6 MCP Clients, 4 Servers, UI | Connect 3 Agents via A2A | FREE Gemini Key | Python, Gemini, LangGraph, SSE, MacOS",
      "objectives": [
        "You will learn Agent to Agent (A2A) Protocol - Connect 3 agents via A2A and build a host orchestrator agent with A2A + MCP",
        "You'll build 5 MCP Clients and 3 MCP Servers from Scratch. Full Working Code Included!",
        "Build a UI for MCP client in Streamlit in Python",
        "Learn to deploy your MCP Server to Google Cloud using Server Sent Events (SSE)",
        "We'll use a free Gemini API Key, so you don't need to pay for AI Models when learning!",
        "We'll use Python, Gemini, LangGraph, SSE, Streamlit on MacOS"
      ],
      "course_content": {
        "Introduction": [
          "What you will learn in this course?",
          "MCP Overview - What is Model Context Protocol?",
          "Can you answer these MCP basics?",
          "Note for Windows and Linux Users"
        ],
        "Environment Setup (MacOS, Windows, Ubuntu) & Resources": [
          "Install Python, UV, VS Code and Git",
          "MacOS - Install Python, UV, VS Code, Git",
          "Windows - Install Python, UV, VS Code, Git",
          "Ubuntu - Install Python, UV, VS Code, Git",
          "Resources - Get Code on Github",
          "Resources - Class Github Repositories List",
          "Resources - Official Links"
        ],
        "Build Your Own MCP Server": [
          "Introduction to MCP Server and 1 Minute Preview of What We'll Build",
          "Install Claude for Dektop",
          "Install Claude Desktop (for Windows Users Only)",
          "Install Python, UV and VS Code",
          "Install Python (for Windows users Only)",
          "Install UV (for Windows users only)",
          "Install VS Code (for Windows users only)",
          "Setup Project Directories and Files",
          "Setup Project Directories and Files (for Windows users only)",
          "MCP Server Python Code Walkthrough",
          "Notes and Frequently asked questions about STDIO servers",
          "Connect Your Server To Claude Desktop and Test it Out",
          "Connect Your Server To Claude Desktop (for Windows users only)"
        ],
        "Build Your Own MCP Client (Using Python + Google Gemini API)": [
          "Introduction to MCP Clients and Preview of What We'll Build",
          "How to Get Free Gemini API Key",
          "Setup Project Directories, Files & Install Google-GenAI SDK",
          "Setup Project Directories, Files and Install Google-GenAI SDK (windows users)",
          "MCP Client Python Code Walkthrough",
          "Test Your MCP Client with Your MCP Server"
        ],
        "Build Docker MCP Server": [
          "Containerize your MCP Server Using Docker",
          "Setup Steps and Instructions for Windows Users",
          "MCP Server - Docker Advantages",
          "MCP Server - Docker Container Advantages"
        ],
        "Build LangChain MCP Client": [
          "Simplify client code with LangGraph & LangChain",
          "Setup Steps and Instructions for Windows Users"
        ],
        "Build MCP Client with Multiple Server Support": [
          "Introduction to Config.json for multiple server support",
          "Let's look at the config.json file",
          "Instructions for Windows Users",
          "Demo - MCP Client with Multiple MCP Servers",
          "MCP Client (with json config) Code Walk Through - Part 1",
          "Why Choose Gemini 2.0 Flash and not the Pro Models",
          "MCP Client (with json config) Code Walk Through - Part 2 (continued)",
          "How to use existing MCP servers from MCP Github (example uses \"fetch\" server)"
        ],
        "Server Sent Events - MCP Server and Clients using SSE": [
          "Introduction to SSE and Preview of What We'll Build",
          "Quick Recap, What is STDIO and SSE?",
          "Setup Directories, Clone GitHub Code (git pull only, if done at course start)",
          "Setup Virtual Environment and Dependencies",
          "Instructions for Windows Users",
          "MCP SSE Server Code Walkthrough",
          "MCP SSE Client Code Walkthrough",
          "Dockerfile Code (for MCP Server) Walkthrough",
          "Test your MCP SSE Server and Client Locally"
        ],
        "Deploying MCP Server to Google Cloud Platform": [
          "Create a new Gmail Account (if you prefer to)",
          "Create a Google Cloud Project",
          "Install and Setup Google Cloud Command Line Interface (gcloud CLI)",
          "Instructions for Windows Users",
          "Build Docker Image for Google Cloud",
          "Deploy MCP SSE Server to Google Cloud Run",
          "Test MCP SSE Server on Google Cloud"
        ],
        "New Streamable HTTP Transport - Overview": [
          "Quick Recap of MCP and What is Streamable HTTP",
          "Streamable HTTP Lifecycle using Sequence Diagram",
          "Initialisation Phase of Streamable HTTP",
          "MCP Client Requests in Streamable HTTP",
          "MCP Client Notifications and Responses in Streamable HTTP",
          "MCP Client Listening to Messages from the Server in Streamable HTTP",
          "Session handling in Streamable HTTP",
          "External Resources for keeping up to date with changes"
        ]
      },
      "requirements": [
        "Code WalkThroughs Included, no in-depth experience needed",
        "Basic Python is a must",
        "Basic familiarity with LLMs like Google Gemini/Claude",
        "Course Recorded using MacOS. Windows Users can follow at their discretion"
      ],
      "description": "NEW (SEP 2025) - MCP Authentication - Sign in with Google to MCP Server from MCP Client!\nTLDR - In this course, you'll learn about MCP & A2A - Model Context Protocol & Agent2Agent Protocol. We will build 5 MCP Clients and 3 MCP Servers from Scratch. You'll build a UI for MCP client in Streamlit in Python. You'll learn to deploy your MCP Server to Google Cloud using Server Sent Events. To top it all, we'll use a free Gemini API Key from Google so you don't need to pay for AI Models when learning! We then build A2A Agents, Clients and Servers and use Google's ADK or Agent Development Kit. Integrate MCP + A2A together\n\n\nKey Objectives of Course\nNEW - MCP Authentication - Sign in to MCP server with Google!\nBuild A2A Servers, Clients and Agents (using Google's ADK or agent development kit) - in Beta\nConnect 3 Agents via A2A with full code implementation\nBuild a Host Orchestrator agent - integrate with A2A + MCP\nA2A Python SDK\nBuild 5 MCP Clients:\n#1. Basic Python + Gemini\n#2. LangGraph Based\n#3. LangGraph (with config.json)\n#4. Server Sent Events (SSE)\n#5. Streamlit MCP Client\n#6 Streamable HTTP Client\nBuild 4 MCP Servers:\n#1 Python STDIO based\n#2 Python STDIO (with Docker)\n#3 Server Sent Event (SSE) Server\n#4 Streamable HTTP Server\nConnect your server to Claude Desktop\nDeploy MCP Server on Google Cloud Platform. Yes, you heard that right :)\nBuild Streamlit UI for MCP Client in Python\nAvoid AI Costs using a free Gemini API Key: to work with Gemini API, Tools and Function calling\n\n\nDetailed Course Description\n\n\nLearn basics of MCP\nIn this hands-on course, you will gain a solid foundation in the Model Context Protocol (MCP) and its bidirectional client-server architecture. We begin by exploring the fundamentals of MCP, equipping you with the conceptual understanding needed to work confidently with this powerful protocol.\nNext, you will implement your own MCP server in Python, hosted on a MacBook. This server will be connected to Claude Desktop, showcasing how you can interact with external tools. As part of this quick start, you'll build and test a tool that executes terminal commands via MCP using Claude Desktop.\nBuilding on this foundation, we’ll guide you through developing your own MCP client in Python, integrating it with Google’s Gemini API. With a free Gemini API Key from Google, you’ll connect your client to your MCP server and perform tool invocations just like Claude Desktop.\nBy the end of this course, you will:\nUnderstand the basic architecture and flow of MCP\nLearn to build and run an MCP server using Python\nConnect your custom MCP server to Claude Desktop\nObtain and configure a free Google Gemini API Key\nDevelop your own Python-based MCP client powered by Google Gemini\nTest the interaction between your client and server to run real commands\nWhat This Course Does Not Cover:\nAdvanced MCP primitives beyond tool-calling (for now, we focus only on tool invocation)\nWindows-specific setup: While many steps are applicable across platforms, this course uses a MacBook for demonstrations. Windows users may follow along at their discretion.\nImportant Notes:\nThis course uses tools, APIs, Keys and services provided by third-party companies and open source projects. We do not offer any warranties or guarantees related to these services. Learners are responsible for understanding and agreeing to the terms and policies of each provider.\nWhile many resources exist in fragments across the web, this course brings everything together in a streamlined, tested, and learner-friendly format based on real-world implementations.\nDisclaimer\nThe information provided in this course is for educational purposes only.\nPlease be advised that when creating a Google account, Google Cloud Platform (GCP) project, using the Gemini API Key or using any other third-party account or service, you are solely responsible for reviewing and understanding the applicable terms and conditions, privacy policies, pricing, usage limits, and any other relevant policies or charges associated with that service.\nThe instructor, course provider, and any affiliated parties do not provide any guarantees, warranties, or representations regarding the accuracy, completeness, or current applicability of any third-party services mentioned in this course, including but not limited to Google Cloud's $300 credit offer and the free Gemini API Key. Policies and offerings may change at any time without notice, and the information in this course may become outdated.\nBy proceeding to create and use any such account or service, you agree that you do so at your own discretion and risk. The instructor and related parties shall not be held liable for any losses, charges, damages, liabilities, or consequences arising from your use or attempted use of such services.\nAlways exercise independent judgment and due diligence before engaging with any third-party platform or offer. The credits and key from Google are available from Google irrespective of whether you take this course or not. We use them to help students setup and learn about MCP and AI without incurring cloud/AI costs.\nWhether you're a developer, tinkerer, or AI enthusiast, this course will empower you to build practical systems using cutting-edge AI and modern protocol design.",
      "target_audience": [
        "Take this course if you want to code MCP Clients, Servers and User Interfaces",
        "AI Agent Developers, Software Engineers, LangChain Developers",
        "Entrepreneurs looking for a QuickStart on MCP"
      ]
    },
    {
      "title": "Program a Media-Player in C#",
      "url": "https://www.udemy.com/course/program-a-media-player-in-c-sharp/",
      "bio": "Create a video and audio-player using C# and the Windows Presentation Foundation (WPF)",
      "objectives": [
        "Understand how to design using the WPF.",
        "Develop a functional and useful media-playing tool.",
        "Add styles and effects to controls",
        "Read and write XML data to and from disk",
        "Use Windows Shell functions to obtain file metadata",
        "Implement file drag-and-drop"
      ],
      "course_content": {
        "Creating a WPF Media Player": [
          "Welcome to the Course",
          "ReadMe",
          "A First Media Player",
          "Source Code Archive [Download]",
          "The Three .NET Designers",
          "Introduction To XAML",
          "Design with XAML",
          "Creating Event-handlers",
          "Sliders",
          "Controlling Media Playback",
          "Previewing Mouse Events",
          "Timers",
          "Setting Slider Defaults",
          "Loading Selected Media Files",
          "Menus",
          "Loading a Media File",
          "Loading A Folder",
          "Music Non-Stop",
          "When Things Go Wrong!",
          "WPF Foundations"
        ],
        "Playlists, Files and Styles": [
          "Creating Playlists",
          "XML Writers",
          "Saving and Loading XML Data",
          "Customisable Playlists",
          "Drag and Drop Media Files",
          "Styling the User Interface",
          "Effects",
          "An Alternative Glow Effect",
          "Animating an effect",
          "Another approach to animation",
          "Styles",
          "Obtaining Media File Information",
          "Multiple windows",
          "Showing File Information",
          "Saving and Loading Playlists",
          "Playlists, Files and Styles",
          "What next?"
        ]
      },
      "requirements": [
        "Visual Studio (free or commercial edition).",
        "Basic knowledge of C# programming (complete beginners should first study my ‘Learn C# Programming’ course)"
      ],
      "description": "In this course you will follow the development of a complete project from the ground up. It explains how to use design and code a WPF program in Visual Studio. You will end up with a utility that plays audio and video, controls playback volume, balance, position and speed.\nIn this course you will develop programs that do all the following:\n\nPlay video and audio files\nLoad single media files or entire folders of files\nDrag-and-drop files direct from the Windows Explorer\nCreate named playlists that can be saved and loaded to and from disk\nChange the volume, position, speed and balance of a playing track\nUse styles and effects to change the user interface appearance\nUse Timers to respond to tick events\nUse file dialogs to save and load files\nRead and write structured XML files to and from disk\nCreate applications with multiple windows\nUse Windows Shell functions to obtain file metadata\nThis is a project-based course that comes with all the source code ready-to-run. It provides a great way for C# programmer to move beyond the basics to explore the development of more complex  C# applications using the WPF (Windows Presentation Foundation).",
      "target_audience": [
        "Intermediate C# programmers looking for a project to extend their knowledge",
        "C# programmers who want to learn to use the Windows Presentation Foundation (WPF)",
        "Programmers wanting to understand how to play media, write XML data and query file metadata"
      ]
    },
    {
      "title": "MATLAB for Engineers | Go from Zero to Hero",
      "url": "https://www.udemy.com/course/matlab-for-engineers-go-from-zero-to-hero/",
      "bio": "Start from scratch and become expert MATLAB programmer. Enhance your skills with 100+ practice questions",
      "objectives": [
        "MATLAB programming from scratch",
        "Skills to solve challenging problems in MATLAB",
        "100+ MATLAB built-in functions",
        "Deep Understanding of Matrices",
        "Plotting 2D & 3D figures",
        "Working with M-Files and making user defined functions",
        "Relational & logical operators",
        "Repetition structures like for loop, while loop and nested loops",
        "Symbolic mathematics",
        "Differentiation, Integration & Differential Equations",
        "Numerical techniques",
        "MATLAB app designer",
        "Simulink"
      ],
      "course_content": {
        "Getting Started with MATLAB": [
          "Introduction to MATLAB environment",
          "Solving basic problems in MATLAB",
          "Downloading & Installing MATLAB"
        ],
        "Built-in MATLAB Functions": [
          "Built-in Functions and Help Feature in MATLAB",
          "Elementary Math Functions",
          "Trigonometric Functions",
          "Data Analysis Functions",
          "Random Numbers",
          "Complex Numbers",
          "Computational Limitations"
        ],
        "Manipulating MATLAB Matrices": [
          "Manipulating Matrices and Problems With Two Variables",
          "Special Matrices - 1"
        ],
        "Plotting": [
          "Two Dimensional Plots",
          "Subplots",
          "Other Types of 2 Dimensional Plots - 1",
          "Other Types of 2 Dimensional Plots - 2",
          "3 Dimensional Plotting",
          "Creating Plots From The Workspace Window",
          "Editing Plots From Menu Bar and Saving It"
        ],
        "User Defined Functions": [
          "Creating Functions M-File"
        ],
        "User Controlled Input and Output": [
          "User Defined Input",
          "Graphical Input Functions"
        ],
        "Logical Functions and Selection Functions": [
          "Relational and Logical Operators",
          "Flowcharts and Pseudo-codes",
          "Logical Function",
          "Selection Functions",
          "The Switch Case",
          "Menu Function"
        ],
        "Repetition Structures": [
          "For Loop",
          "While Loop",
          "Break and Continue",
          "Nested Loops"
        ],
        "Matrix Algebra": [
          "Matrix Operation and Functions - 1",
          "Matrix Operation and Functions - 2",
          "Solution Of System Of Linear Equations",
          "Special Matrices - 2"
        ],
        "Other Kinds of Arrays": [
          "Other Kinds of Array",
          "Multi-dimension Array",
          "Character Arrays",
          "Cell Arrays",
          "Structure Arrays"
        ]
      },
      "requirements": [
        "No programming experience is required at all.",
        "Only willing to learn MATLAB."
      ],
      "description": "MATLAB is a high-performance language for technical computing. It integrates computation, visualization, and programming in an easy-to-use environment where problems and solutions are expressed in familiar mathematical notation. Typical uses include:\nMath and computation\nAlgorithm development\nModeling, simulation, and prototyping\nData analysis, exploration, and visualization\nScientific and engineering graphics\nApplication development, including Graphical User Interface building\nMATLAB is an interactive system whose basic data element is an array that does not require dimension. This allows you to solve many technical computing problems, especially those with matrix and vector formulations, in a fraction of the time it would take to write a program in a scalar non-interactive language such as C or FORTRAN.\nThis course MATLAB for Engineers is designed to cover the important topics to successfully start with MATLAB programming. The video lectures in this course contains practice questions to enhance your skills to use MATLAB. Some practical examples are also available in every section so that you can also understand that how MATLAB is used to solve different engineering problems.\nYou will be always welcome to ask any question related to any topic in this course and I will be there to answer the queries.\nFinally I hope that you will join with me in this course and we will have a good journey.",
      "target_audience": [
        "Engineering students who want to learn MATLAB",
        "Beginner MATLAB programmers",
        "Computer Science students",
        "Electrical engineering students",
        "Teachers"
      ]
    },
    {
      "title": "Programming With R. Learn How To Program In R - Beginners",
      "url": "https://www.udemy.com/course/programming-with-r/",
      "bio": "A Beginners Guide To Getting Started Programming In R.",
      "objectives": [
        "Learn How To Get Started Programming In R"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Introduction And Course Overview",
          "0103 Installing R And R Studio",
          "0104 Navigating R Studio",
          "0105 Packages",
          "0106 Assigning Variables",
          "0107 Numbers, Strings, And Booleans",
          "0108 Workspace Operations",
          "0109 How To Access Your Working Files"
        ],
        "Basic Operations And Manipulations": [
          "0201 Basic Operators",
          "0202 Vectors",
          "0203 Sequences",
          "0204 Basic Statistical Functions",
          "0205 Matrices",
          "0206 Matrix Operations",
          "0207 Basic Matrix Statistics",
          "0208 Generating Random Numbers",
          "0209 String Functions",
          "0210 Dates And Times"
        ],
        "Plotting": [
          "0301 Line Plots",
          "0302 Plotting Arguments",
          "0303 Bar Graphs And Histograms",
          "0304 Scatter Plots",
          "0305 Probability Plots",
          "0306 Combining And Saving Plots"
        ],
        "Working With Data": [
          "0401 Arrays",
          "0402 Lists",
          "0403 Data Frames",
          "0404 Data Import",
          "0405 Missing Data - Part 1",
          "0406 Missing Data - Part 2",
          "0407 Ordering And Sorting",
          "0408 Subsetting And Indexing",
          "0409 Merging Data",
          "0410 Examining Files And Objects"
        ],
        "Data Analysis": [
          "0501 Descriptive Statistics",
          "0502 Apply Functions",
          "0503 Linear Models",
          "0504 Extracting Model Information",
          "0505 Principal Componant Analysis"
        ],
        "Time Series Data": [
          "0601 XTS Objects",
          "0602 ACF Plots",
          "0603 Decomposition",
          "0604 Exponential Smoothing",
          "0605 Rolling Functions",
          "0606 ARIMA Models"
        ],
        "Conditional Statements And Loops": [
          "0701 If Statements",
          "0702 For Loops",
          "0703 While Loops",
          "0704 Appending Loops"
        ],
        "User-Defined Functions": [
          "0801 Writing Functions",
          "0802 Debugging Functions",
          "0803 Recursive Functions"
        ],
        "Saving Data": [
          "0901 Saving Different Types Of Data",
          "0902 Additional Resources"
        ]
      },
      "requirements": [
        "PC or Mac"
      ],
      "description": "This Learning R training course from Infinite Skills will teach you how to use R, a programming language used for statistical computing and graphics. This course is designed for beginners that have no previous R programming experience. You will require a fundamental understanding of statistics to get the most out of this course.\n\nYou will start by learning how to install and navigate R studio, then move into learning basic operations like statistical functions, matrix operations, and string functions. This course will show you how to plot, including scatter plots, probability plots, and plotting arguments. This video tutorial will cover working with data and data analysis, such as extracting model information, examining files and objects, and subsetting and indexing. You will also learn about conditional statements and user-defined functions, including how to write and de-bug functions. Finally, you will learn how to save different types of data.\n\nOnce you have completed this computer based training course, you will be fully capable of using R for developing statistical software and data analysis tools. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Beginners To R Programming"
      ]
    },
    {
      "title": "Launch a LAMP Stack and Install WordPress on AWS",
      "url": "https://www.udemy.com/course/launch-a-lamp-stack-and-install-wordpress-on-aws/",
      "bio": "Learn how to launch a LAMP stack on an AWS EC2 server, install Apache, MySQL, PHP, WordPress and configure SSL",
      "objectives": [
        "Launch an EC2 Instance on AWS",
        "Install Apache",
        "Install MySQL",
        "Install PHP",
        "Install WordPress",
        "Install SSL"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to get the most out of this course"
        ],
        "Launch an EC2 instance on AWS": [
          "Launch an EC2 instance on AWS",
          "Connect to SSH"
        ],
        "Install Apache, MySQL, PHP": [
          "Install Apache",
          "Install MySQL",
          "Install PHP"
        ],
        "Get A Free Domain": [
          "Get A Free Domain"
        ],
        "Install WordPress": [
          "Install WordPress"
        ],
        "Install SSL": [
          "Install SSL - Part I",
          "Install SSL - Part II"
        ],
        "Get Installed Services to Start Automatically": [
          "Get Installed Services to Start Automatically"
        ]
      },
      "requirements": [
        "Basic Linux command line"
      ],
      "description": "Learn how to launch a LAMP stack on an AWS EC2 server, install Apache, MySQL, PHP, WordPress and configure SSL. This course is beginner-friendly and no prior experience with AWS is needed however knowing basic shell commands is helpful.\nThe course is divided into seven sections and each section builds upon the lesson learned in the previous lesson. It is important not to skip lessons in order to get the most out of this course.\n\n\nWe will learn the following:\nHow to launch an EC2 server on AWS\nHow to Install Apache\nHow to Install MySQL\nHow to Install PHP\nHow to Install WordPress\nHow to Install SSL",
      "target_audience": [
        "System Administrators",
        "DevOps Engineers",
        "Developers who want to learn how to deploy LAMP on AWS"
      ]
    },
    {
      "title": "150+ Exercises - Data Structures in Python - Hands-On",
      "url": "https://www.udemy.com/course/150-exercises-data-structures-in-python/",
      "bio": "Master Data Structures in Python - Optimize Your Code Efficiency and Problem-Solving Skills!",
      "objectives": [
        "Built-in data structures: list, tuple, set, dict, frozenset",
        "collections package: namedtuple, ChainMap, Counter, deque, defaultdict",
        "Implementations: Queue, Double-Ended Queue, Stacks",
        "Numpy arrays",
        "solve 150+ exercises with data structures in Python",
        "deal with real programming problems",
        "work with documentation and Stack Overflow",
        "guaranteed instructor support"
      ],
      "course_content": {},
      "requirements": [
        "Completion of all courses in the Python Developer learning path"
      ],
      "description": "This course is an in-depth, practical guide designed to provide learners with a comprehensive understanding of Python's core data structures. These include built-in types like lists, tuples, sets, dictionaries, and strings, as well as advanced structures such as stacks, queues, linked lists, trees, and graphs.\nEach unit in this course is dedicated to a particular data structure with a series of hands-on exercises that challenge learners to solve problems using that particular data structure. These exercises range in complexity, catering to various skill levels and providing opportunities for learners to apply and consolidate their knowledge.\nIn addition, each exercise is accompanied by a thorough solution, giving learners the chance to review their work and understand different approaches to problem-solving. This approach reinforces learning and boosts confidence in handling Python's data structures.\nThis course is suitable for learners who have a basic understanding of Python and want to delve deeper into how data can be organized and manipulated within the language. Through practical, hands-on exercises, learners will gain the ability to select and implement the appropriate data structure for a given problem, an essential skill in software development and data analysis.\nThis course is the perfect choice for aspiring Python programmers, data scientists, or anyone seeking to enhance their problem-solving skills in Python.\n\n\nPython: The Language of Simplicity and Power\nPython is a high-level, versatile programming language known for its clean syntax and readability. Widely used in web development, data science, automation, artificial intelligence, and more, Python enables developers to write efficient, scalable, and maintainable code with minimal effort. Its rich ecosystem of libraries and strong community support make it an ideal choice for beginners and professionals alike.",
      "target_audience": [
        "Aspiring Software Developers",
        "Computer Science and Engineering Students",
        "Python Programmers Seeking to Strengthen Core Skills",
        "Data Scientists and Analysts",
        "Technical Interview Candidates",
        "Coding Bootcamp Participants and Graduates",
        "Educators and Trainers",
        "Professionals Seeking Continuing Education"
      ]
    },
    {
      "title": "Java Programming using Eclipse: An Introduction",
      "url": "https://www.udemy.com/course/programming-java/",
      "bio": "Learn to Write Java Code using the free Eclipse IDE with this Java Online training course for beginners.",
      "objectives": [],
      "course_content": {
        "Computer and Java Virtual Machine Basics": [
          "How Does a Computer Work?",
          "How does the Java Virtual Machine work?"
        ],
        "Eclipse": [
          "Hello World in eclipse",
          "Comments",
          "Javadoc",
          "Debugger",
          "Eclipse Tips and Tricks",
          "Publishing your Program"
        ],
        "Variables": [
          "Variables",
          "Syntax and Expressions",
          "Variable Types",
          "Strings",
          "Scanner",
          "JOptionPane"
        ],
        "If Else and Switch": [
          "If-Else",
          "Booleans",
          "Switch-Case",
          "Enum"
        ],
        "For and While Loops": [
          "For Loops",
          "While Loops",
          "Example: Making Change",
          "Nested For Loops",
          "Loop Example: Adding Numbers",
          "Break and Continue",
          "Scope",
          "Example: Wheel of Fortune"
        ],
        "Classes and Methods": [
          "Classes",
          "Get and Set Methods",
          "Classes Example: Person",
          "Call by Reference and by Value",
          "Strings Are Immutable",
          "Equals",
          "Constructors",
          "Wrapper Classes",
          "Static Variables",
          "Classes Example: Distance",
          "Packages"
        ],
        "Arrays": [
          "Arrays",
          "Class Example: Expanding Array",
          "Insertion Sort",
          "Multi-Dimensional Arrays",
          "Example: Tic-tac-toe",
          "Example: Pascal's Triangle"
        ],
        "Inheritance": [
          "Inheritance",
          "Polymorphism",
          "Interfaces",
          "Abstract Classes"
        ],
        "Exceptions": [
          "Exceptions: Handling",
          "Defining new Exceptions"
        ],
        "Streams and Files": [
          "Example: Reading a CSV File",
          "Writing to a Text File",
          "Binary Files",
          "Serializable Interface"
        ]
      },
      "requirements": [],
      "description": "An introductory but fairly comprehensive set of java tutorials for beginners on Java programming using the eclipse Integrated Development Environment (IDE). I will cover all the basics of Java programming, starting with the Java Virtual Machine and variables all the way to Java Generics and some of the Collection classes such as ArrayList and HashMap.\nThis is a good java online training for people new to programming who like to learn by doing.\nThe second chapter, on the eclipse IDE, can safely be skipped until after taking the whole course. So absolute beginners can get started with this java tutorials for beginners.\nI welcome all suggestions on how I can make this a better java online training course.",
      "target_audience": []
    },
    {
      "title": "The Complete Algorithms and Data Structures Course",
      "url": "https://www.udemy.com/course/the-complete-algorithms-and-data-structures-course/",
      "bio": "Receive more job offers, negotiate a raise: Everything you need to get the job you want!",
      "objectives": [
        "Become an advanced, confident, and modern developer from scratch",
        "Become job-ready by understanding how Algorithms and Data Structures really work behind the scenes",
        "Learn, implement and use different data structures",
        "Get fast and friendly support in the Q&A area",
        "How to think and work like a developer: problem-solving, researching, workflows",
        "Complex concepts like the Dynamic Programming, Backtracking, Flow Networks, etc.",
        "Practice your skills with 20+ challenges and assignments (solutions included)"
      ],
      "course_content": {
        "Course Overview": [
          "Course Introduction",
          "Course Structure"
        ],
        "Analysis of Algorithms": [
          "Introduction to Asymptotic Notation",
          "Time Complexity",
          "Big O Notation",
          "Big Ω Notation",
          "Big Θ Notation",
          "Exercise 1 - Cost Analysis",
          "Exercise 2 - Cost Analysis"
        ],
        "Data Structures - Dictionary": [
          "Introduction to Dictionaries",
          "Implementation of Dictionaries",
          "Iteration Through a Dictionary",
          "Advanced Ways to Iterate",
          "Fundamental Methods"
        ],
        "Solved Problems - Dictionaries": [
          "Problem 1 - Casino",
          "Problem 2 - Bag Of Words",
          "Problem 3 - Codes"
        ],
        "Data Structures - Stack": [
          "Introduction to Stacks",
          "Implementation of Stacks"
        ],
        "Solved Problems - Stacks": [
          "Problem 1 - Palindromic Sequence",
          "Problem 2 - Parenthesization Evaluation",
          "Problem 3 - Smaller on the Left"
        ],
        "Data Structures - Queues": [
          "Introduction to Queues",
          "Implementation of Queues"
        ],
        "Solved Problems - Queues": [
          "Problem 1 - Binary Numbers",
          "Problem 2 - Hot Potato Game"
        ],
        "Data Structures - Vector": [
          "Introduction to Vectors",
          "Implementation of Vectors",
          "Fundamental Methods"
        ],
        "Solved Problems - Vectors": [
          "Problem 1 - Minimum Value",
          "Problem 2 - Identical Element",
          "Problem 3 - Reverse Sequence"
        ]
      },
      "requirements": [
        "Basic understanding of one programming language.",
        "Any computer and OS will work — Windows, macOS or Linux.",
        "No previous computer science knowledge necessary."
      ],
      "description": "You’ve just stumbled upon the most complete, in-depth Algorithms and Data Structures course online.\nWhether you want to:\n- build the skills you need to get your first programming job\n- move to a more senior software developer position\n- become a computer scientist mastering in computation\n- or just learn algorithms and data structures to be able to create your own apps quickly.\n\n...this complete Algorithms and Data Structures Masterclass is the course you need to do all of this, and more.\n\n\nThis course is designed to give you the Algorithms and Data Structures skills you need to become an advanced developer. By the end of the course, you will understand Algorithms and Data Structures extremely well and be able to build your own apps and be productive as a computer scientist and software developer.\n\n\nWhat makes this course a bestseller?\nLike you, thousands of others were frustrated and fed up with fragmented Youtube tutorials or incomplete or outdated courses which assume you already know a bunch of stuff, as well as thick, college-like textbooks able to send even the most caffeine-fuelled coder to sleep.\nLike you, they were tired of low-quality lessons, poorly explained topics, and confusing info presented in the wrong way. That’s why so many find success in this complete Algorithms and Data Structures course. It’s designed with simplicity and seamless progression in mind through its content.\n\nThis course assumes no previous coding experience and takes you from absolute beginner core concepts. You will learn the core computer science skills and master advanced algorithms. It's a one-stop shop to be an expert in computer science. If you want to go beyond the core content you can do so at any time.\n\n\nHere’s just some of what you’ll learn\n(It’s okay if you don’t understand all this yet. You will in the course)\nBig O Notation, Big Omega, Big Theta\nComplexity Analysis of Algorithms\nDivide and Conquer\nDictionaries (Maps)\nStacks and Queues\nBinary Search Trees\nAVL Trees\nPriority Queues\nGraphs\nDepth-First Search and Breadth-First Search\nGeneration and Exhaustive Search (Backtracking)\nGreedy Algorithms\nDynamic Programming\nFlow Networks\nFord-Fulkerson Algorithm\nHash Tables\nBoom Filters\nMax-flow Min-cut Algorithm\nFibonacci Heaps\nHow to develop powerful applications using Advanced Data Structures and Algorithms.\n\n\nWhat if I have questions?\nAs if this course wasn’t complete enough, I offer full support, answering any questions you have.\nThis means you’ll never find yourself stuck on one lesson for days on end. With my hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\n\n\nThere’s no risk either!\nThis course comes with a full 30-day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, simply let me know and I’ll refund you 100%, every last penny no questions asked.\nYou either end up with Algorithms and Data Structures skills, go on to develop great programs and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\nYou literally can’t lose.\n\n\nReady to get started, developer?\nEnroll now using the “Add to Cart” button on the right, and get started on your way to creative, advanced Algorithms and Data Structures brilliance. Or, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.\nSee you on the inside (hurry, Algorithms and Data Structures are waiting!)",
      "target_audience": [
        "Take this course if you want to gain a true and deep understanding of Algorithms and Data Structures",
        "Take this course if you have been trying to learn Algorithms and Data Structures but: 1) still don't really understand Algorithms and Data Structures, or 2) still don't feel confident to code real apps",
        "Take this course if you already know Algorithms and Data Structures and are looking for an advanced course. This course includes expert topics!",
        "Take this course if you want to get started with programming"
      ]
    },
    {
      "title": "Learn C# with Visual Studio 2017 and Console Programs",
      "url": "https://www.udemy.com/course/learncsharpwithvs2017/",
      "bio": "With Exercises Throughout the Videos!",
      "objectives": [
        "Find, download and install Visual Studio 2017 Community",
        "Describe a console window",
        "Create and run a simple c# program",
        "Describe the purpose of the Console class",
        "Understand how to use class methods",
        "Understand the concept of a method as a behavior or an action that can be performed",
        "Describe the purpose of the .NET Framework library",
        "Use the object explorer in Visual Studio",
        "Describe the concept of a class member",
        "Describe the purpose of the dot member access notation",
        "Explain what it means to call or invoke a method",
        "Give examples of method arguments",
        "Define the concept of a string in C#",
        "Understand the concept of a data type",
        "Understand the consequences of data casts",
        "Describe how string interpolation works",
        "Describe the purpose of the .NET Framework",
        "Understand how to use the debugger",
        "Understand how to use the locals window",
        "Understand how to use the call stack window",
        "Describe how to use implicit methods",
        "Understand the difference between parameters and arguments",
        "Understand the meaning of the word public",
        "Describe how to use a name space, class name and method name using dot notation",
        "Understand how to use the Concat method",
        "Understand how to ensure that data types do not clash",
        "Describe an example of when an implicit data cast is safe",
        "Understand the consequences of making one change and ensuring that the code is properly fixed",
        "Understand how to use Visual Studio tool tips to help with resolving error messages",
        "Understand where to find the object explorer and how to find class details using the defintion",
        "Understand how to read /write numeric values",
        "Understand how to nest methods",
        "Understand how to decipher error messages and trace them through the .NET Framework",
        "Understand how to use properties",
        "Understand the concept of an enumeration and how to use it",
        "Understand the concept of a logical condition",
        "Understand how to make decisions with logical conditions",
        "Understand how to use methods with if/else",
        "Understand how to use ++x, x++, x+=2 and other compound operators",
        "Understand the motivation for while loops",
        "Understand how a while loop actually operates",
        "Understand the motivation for a for loops",
        "Understand how to create a variety of for loops",
        "Understand how strings behave in memory",
        "Understand the mechanical execution aspect of a loop",
        "Understand how to use for each loops",
        "Understand how to nest if inside loops",
        "Understand how to use linq methods like sum, average, min and max",
        "Understand how to use the ForEach method on lists",
        "Understand the concept of a generic list",
        "Understand how to combine try parse, while, and lists",
        "Understand the operation of a basic ternary operator",
        "Understand how the ternary operator can be used with method calls",
        "Understand how you can rewrite more condensed code from long-winded code",
        "Understand how to control the header of a for loop and how to change it meaningfully and with control",
        "Describe why switch blocks are needed",
        "Explain how switch blocks operate",
        "Understand how C# handles division by zero",
        "Understand why and how to put code under switch block case labels",
        "Understand how to use the logical and operator with simple values",
        "Understand how to use the logical and operator with methods",
        "Understand how the logical and operator executes, step by step and how it short-circuits",
        "Understand the prototypical operation of the basic or logical operator",
        "Understand how to use the logical or operator in an application",
        "Understand how to use while(true) (infinite loop), break and key inputs like the Escape key",
        "Understand how to create methods with void return types",
        "Understand how to create methods that return a value",
        "Describe the concept of matching data types when methods are created",
        "Describe the concept of the call stack and how methods load and unload from memory",
        "Understand how parameters function as local variables in methods and where parameters can and cannot be reached",
        "Understand how to use modern C# switch blocks",
        "Use methods from the Math class like DivRem",
        "Understand the difference between % and / in the context of integer division",
        "Understand how and why to use try/catch blocks",
        "Understand the concept of a null-reference exception",
        "Understand how to catch null reference exceptions",
        "Understand how to use the word null in logical comparisons",
        "Understand how to create and use a method with a string parameter/ return data type",
        "Understand how to use hard coded values to understand the operation of if/else blocks better",
        "Understand how to call a method with a null value and how to protect against the consequences",
        "Understand how to create a method with a List<double> parameter",
        "Understand how to return an IEnumerable<int> from a method",
        "Understand how to call methods in a variety of positions in the code, including foreach loops",
        "Describe how to create an array",
        "Describe how to read a value from an array using array access notation",
        "Describe how to assign values to an array using array access notation",
        "Understand how to use the params keyword in method headers",
        "Understand how to use a foreach loops to produce a sum of values inside a method",
        "Understand how to use a foreach loop to produce a product of values inside a method",
        "Explain the meaning of a reference variable in the context of arrays",
        "Explain the meaning of a reference variable in the context of lists",
        "Understand how to create an array using a for loop",
        "Understand how to read an array using a foreach loop",
        "Understand how to print an array backwards using a for loop",
        "Understand how to define an array of arrays (two dimensional case)",
        "Describe why two for loops are needed to print the entries of a two dimensional array",
        "Understand how to code up the data types needed in nested foreach loops",
        "Understand how reference types like arrays and lists behave in memory",
        "Understand how to set the value of a two-dimensional array using for loops",
        "Understand how to create a jagged array",
        "Understand how to display the value of a jagged array"
      ],
      "course_content": {
        "Get the Tools": [
          "Find, download and install Visual Studio 2017 Community"
        ],
        "Understand the Supporting Fundamentals": [
          "Create your first executable file",
          "Print one line of output",
          "Dig into the Console class",
          "What is the .NET Framework?",
          "Using directives"
        ],
        "Create Programs": [
          "Use one variable to represent a changing quantity",
          "Understand the consequences of a data type",
          "Describe an object with multiple data types",
          "Print multiple variable values",
          "Use the debugger, part 1",
          "Use the debugger, part 2",
          "Perform simple calculations, part 1",
          "Perform simple calculations, part 2",
          "Accept string input and produce string output",
          "Use the Concat method from the String class",
          "Accept numeric input and produce numeric output, part 1",
          "Numeric input/output, part 2",
          "Decipher an error message",
          "Understand the concept of method chaining",
          "Understand and use basic properties"
        ],
        "Program Flow": [
          "Understand the concept of a logical condition",
          "Understand a simple if/else condition check",
          "Use a sequence of if/else checks",
          "Understand how to use the debugger with if/else",
          "Use if/else with a method",
          "Write more stable code with TryParse, part 1",
          "Write more stable code with TryParse, part 2",
          "Using TryParse, part 3",
          "Understand compound operators",
          "Create and run a while loop, part 1",
          "Create and run a while loop, part 2",
          "Exiting from while loops, part 3",
          "Create and run a for loop, part 1",
          "Create and run a for loop, part 2",
          "Adjusting indexes in for loops, part 3",
          "Strings as indexed constructs",
          "Strings with for loops",
          "Nest an if/else inside a for loop",
          "Understand string behavior in memory",
          "Execution mechanics of a for loop",
          "Linq basics, part 1",
          "Lists with ForEach",
          "While with TryParse",
          "Ternary operator with numbers, part 1",
          "Ternary operator with methods, part 2",
          "Rewrite code so it's more compact",
          "Switch blocks, part 1",
          "Switch blocks, part 2",
          "Switch blocks, part 3"
        ],
        "Logical Operators": [
          "Decide on two conditions with \"and\", part 1",
          "Decide on two logical conditions with \"and\", part 3",
          "TryParse with while, \"and\", break and continue",
          "Decide on two or more conditions with or",
          "Use multiple \"ors\" with foreach"
        ],
        "Methods": [
          "Create a void method",
          "Get/Set of properties",
          "Create a method with one parameter and a return value",
          "Understand the call stack and parameters as local variables",
          "Understand the concept of block methods and expression body methods",
          "Create a method with two parameters and one return value, part 1",
          "Create a method with two parameters, part 2",
          "Using modern switch blocks",
          "Methods that crash, part 1",
          "Methods that crash, part 2",
          "Try/Catch challenge with solution",
          "Nulls with strings and try /catch",
          "Create a method with a string parameter and return type",
          "Change DivRem so it doesn't crash",
          "Create a method with a tuple return value, part 1",
          "Methods that return a tuple, part 2",
          "Method with a List<int> parameter that returns an IEnumerable<int>, part 1",
          "Method with a List<int> parameter that returns an IEnumerable<int>, part 2"
        ],
        "Arrays": [
          "Understand the concept of an index for arrays",
          "Create a more flexible method with the Params keyword",
          "Params method with multiplication challenge",
          "Split method from string class",
          "Arrays and lists are reference types",
          "Passing by reference vs. passing by value, part 1",
          "Passing by reference and value, part 2",
          "Step through an array with a for loop",
          "Difference in memory between strings and other types like integers, decimals",
          "Define a two-dimensional array with manual indexes",
          "Extend the size of a multidimensional array",
          "Multidimensional arrays with methods",
          "Fill a two-dimensional array with a for loops",
          "Print a multidimensional array",
          "Create and print jagged arrays",
          "Thank you for watching!"
        ]
      },
      "requirements": [
        "Students MUST use at least the version of Visual Studio Community 2017 described in the first, free preview video."
      ],
      "description": "Very Important:\n1. Friends, please take the time to review the curriculum carefully before buying so you can see exactly whether this is the right course for you. Please do not join until you have completed this step.\n2. Please watch the free preview videos so you can see whether the presentation style works for you. Please remember  I am just one person, and I make my videos often after I have been working for many hours already.  PLease do not join until you have completed this step.\n3. If something needs fixing, please let me know. Again, I'm just one person and not a big team of people. I will try to fix it as quickly as possible. Thank you.\n\n\nCourse Overview:\n1. This course consists of standalone examples designed to illustrate specific skills. There are no big applications built in this course.\n2. You must use Visual Studio 2017 to be sure you have the latest version of C# running. Lower versions of Visual Studio will cause errors because newer programming elements will not be found.\n3. This is a beginners course, but I do not spare the details, even when they are very technical. This means in a few videos I show you the .NET Framework source code. I do this because it's important to look at things as they actually are, and not at an artificially simplified perspective.\n4. I talk fairly slowly in some of the videos.\n5. If you feel the way I talk is too slow for you,  please  watch at 1.25x, which you can set easily on the player.\n6. I made the videos in 1080p HD. If you have trouble with the resolution, please try reloading the page a few times.\n7. This course covers C# through console programs only. It does not have ASP.NET, Windows Forms, MVC, .NET Core or anything like that.\n8. There are questions throughout the videos. At those times, please pause and try answering them.  Success invariably results from understanding how the many small and intricate pieces of anything fit together. This takes time, consistent effort and a willing to push yourself. Success is the result of a whole-hearted effort, exerted daily and consistently. This is what years of struggle have taught me:)\n\n9. The videos are just coding videos done in Visual Studio Community 2017. This is the free version of Visual Studio.\n10. This is a course dedicated to code only, so you do not see any of the following: a talking head, PowerPoints or fancy graphics. To me, these are distractions that shift focus away from the things that truly matter.\n\n\n11. Exercises start in video two. I have overlays embedded that say \"Pause and try this: ...\", with the specific question in place of the ellipses.\n12. In some of the videos, there are several questions because I guide you through building a bigger piece of code.\n13. Some of the videos don't have any questions.\n14. All the code is written from scratch in the code editor window in Visual Studio Community 2017.\n15. In some of the videos, I use the debugger to step through the code, line by line, and intricate detail by intricate detail.\n16. I talk frequently about reading the various tips that show as you type in Visual Studio. You must learn how to read them because they provide valuable information.\n17. In some of the videos, I show you how C# looks in your computer memory. You must look at the memory of your computer to truly understand what's happening. Just reading messages in the console window is not the same as truly understanding what they mean.\n18. In some of the videos, I zoom in on various things I feel need special attention.\n19. For the hearing-impaired, closed-captions are added automatically. I do not have control over those, so they might not be perfect.\nOn a personal note, I can tell you only that it is through consistent, WHOLEHEARTED effort, that something technical like a programming language can be learned.  That's what I have learned from years of struggling.  I would urge you to embrace this philosophy because it's a very powerful.  I hope you will find great value in this course.  Thank you for reading, and I will see you inside!\nTom",
      "target_audience": [
        "People who are interested in C# should take this course.",
        "People who are new to C# should take this course.",
        "People who feel it's valuable to pause at times and try an assignment or a mental exercise before continuing.",
        "People who understand that the average video length is about 7 minutes should join.",
        "People who like fast talking should not join.",
        "The vast majority of the examples are standalone.",
        "When I say beginner, I don't mean that in an overly simplified sense."
      ]
    },
    {
      "title": "C, C++ and PHP: Comprehensive Programming Bootcamp",
      "url": "https://www.udemy.com/course/c-c-and-php-comprehensive-programming-bootcamp/",
      "bio": "Learn to Build Robust Applications by Full Spectrum of Programming in C, C++, and PHP, from Basics to Advanced Technique",
      "objectives": [
        "History and Applications of C",
        "Evolution from C to C++",
        "Overview of PHP and its Applications",
        "Functions and Scope",
        "Variables, Data Types, and Operators",
        "Conditionals and Loops",
        "Object-Oriented Programming (OOP) Concepts",
        "Operator Overloading",
        "Exception Handling",
        "Form Handling and Data Validation",
        "Sessions and Cookies",
        "File Handling and Security",
        "PHP and AJAX",
        "Connecting PHP with MySQL",
        "CRUD Operations (Create, Read, Update, Delete)"
      ],
      "course_content": {
        "C Programming": [
          "Functions and Scope",
          "Arrays and Pointers",
          "Variables, Data Types, and Operators",
          "Conditionals and Loops",
          "Strings and Character Arrays",
          "Structures and Unions",
          "Booleans",
          "Dynamic Memory Allocation",
          "File I/O Operations",
          "File Manipulation Program",
          "Project - Simple Calculator"
        ],
        "C++ Programming": [
          "Object-Oriented Programming (OOP) Concepts",
          "Classes and Objects",
          "Conditionals, Loops and While",
          "Constructors and Destructors",
          "Inheritance and Polymorphism",
          "Operator Overloading",
          "Templates and STL (Standard Template Library)",
          "Exception Handling",
          "Break and Continue"
        ],
        "PHP Programming": [
          "Setting Up a Local Server (XAMPP, MAMP, WAMP)",
          "Variables, Constants, and Data Types",
          "Functions and Arrays",
          "Comments",
          "Form Handling and Data Validation",
          "Sessions and Cookies",
          "File Handling and Security",
          "PHP and AJAX",
          "Introduction to MySQL",
          "Connecting PHP with MySQL",
          "CRUD Operations (Create, Read, Update, Delete)"
        ]
      },
      "requirements": [
        "No prior knowledge is required!"
      ],
      "description": "Embark on a comprehensive journey through the world of programming with this all-in-one bootcamp on C, C++, and PHP. Designed for both beginners and those looking to deepen their coding expertise, this course offers a robust foundation in three essential programming languages, empowering you to tackle a wide range of software development challenges.\n\n\nYou’ll start by mastering C, the foundational language that underpins modern programming. From there, you’ll advance to C++, gaining the skills to create high-performance, object-oriented applications. Finally, you’ll dive into PHP, where you’ll learn to build dynamic web applications and manage server-side scripting with ease.\n\n\nThrough hands-on projects, real-world examples, and expert guidance, this bootcamp will equip you with the knowledge and confidence to build everything from simple scripts to complex, full-fledged applications. By the end of the course, you’ll have a deep understanding of each language and the ability to apply them in various development scenarios.\n\n\nWhat You'll Learn:\nC Programming: Understand the fundamentals of programming, memory management, and low-level operations with C.\nC++ Programming: Learn object-oriented programming, advanced data structures, and algorithm design using C++.\nPHP for Web Development: Develop dynamic websites, manage databases, and implement server-side logic with PHP.\nIntegrated Projects: Apply your skills to build real-world applications combining C, C++, and PHP.\nBest Practices: Adopt industry-standard practices for writing efficient, secure, and maintainable code.\n\n\nWho This Course is For:\nAspiring programmers looking for a solid introduction to C, C++, and PHP.\nDevelopers who want to expand their knowledge across multiple programming paradigms.\nWeb developers seeking to enhance their backend development skills with PHP.\nStudents and professionals eager to master versatile languages that power everything from system software to web applications.\n\n\nThis bootcamp is your gateway to becoming a versatile and proficient programmer. By mastering C, C++, and PHP, you’ll gain the tools to excel in a wide range of programming fields, from systems development to web applications. Take the first step towards becoming a well-rounded developer by enrolling today!",
      "target_audience": [
        "Anyone interested in C, C++ and PHP Programming Language",
        "Anyone interested in mastering the key technologies that drive modern front-end development."
      ]
    },
    {
      "title": "Java Course: Learn Java Programming from Basics to Experts",
      "url": "https://www.udemy.com/course/learn-java-coding-and-master-it-in-2024/",
      "bio": "Full course on Java programming. It's hands-on way to become good at Java. Start Your Development Career & be an expert.",
      "objectives": [
        "Java in-depth, step-by-step learning",
        "Real-world projects to strengthen your skills",
        "Quizzes & coding exercises to test your knowledge",
        "Lifetime access – Learn at your own pace, anytime, anywhere",
        "Certificate of completion – Add credibility to your resume"
      ],
      "course_content": {
        "Course Introduction": [
          "Promo Video",
          "What are the prerequisites for taking this course?",
          "What after successful completion of this course?"
        ],
        "Begin with Installation": [
          "What is Java Development Kit 22?",
          "JDK 22 Installation - Windows (Executable File)",
          "JDK 22 Installation - Windows (Manually)",
          "IDE Installation - IntelliJ",
          "IDE Installation - Eclipse"
        ],
        "Getting Started with Java Basics": [
          "What is Java?",
          "Why use Java?",
          "Understanding Public Static Void Main",
          "What is Compile and Run",
          "Printing Text and Numbers",
          "Can I Comment in Java?",
          "Javadoc Comments"
        ],
        "Variables and Identifiers": [
          "Variables",
          "Print Variables",
          "Multiple Variables",
          "Identifiers"
        ],
        "Data Types": [
          "Data Types",
          "Numbers",
          "Boolean Data Types",
          "Non-Primitive Data Types",
          "Differences in Primitive and Non Primitive Data Types",
          "Default Values",
          "Type Casting"
        ],
        "Operators in Java": [
          "Operators",
          "Arithmetic Operators",
          "Assignment Operators",
          "Special Assignment Operators",
          "Comparison Operators",
          "Logical Operators"
        ],
        "Strings": [
          "Strings",
          "String Concatenation",
          "Numbers and Strings",
          "Special Characters"
        ],
        "Math and Booleans": [
          "Java Math",
          "Booleans"
        ],
        "Control Statement": [
          "If block",
          "Coding exercise on If statement",
          "Practice test on If statement",
          "Nested If staments",
          "If blocks with unary operators",
          "Else block",
          "If-Else blocks inside if block",
          "If-Else blocks inside else block",
          "Ternary operator",
          "Multiple if else",
          "Switch cases and difference between if else and switch"
        ],
        "Loops": [
          "Indexed for loops",
          "While loops",
          "Do While loop",
          "Nesting of loops",
          "Loop Control Statements - Break",
          "Loop Control Statements - Continue",
          "Loop Control Statements - Return",
          "Infinite Loops",
          "Quiz on the indexed for loop"
        ]
      },
      "requirements": [
        "You must have a computer system running Windows, Mac, or Linux, enabling the installation of essential free software and tools indispensable for constructing your new applications. Specific instructional videos for each platform installation are provided for your convenience.",
        "Additionally, bring a robust work ethic, a keen willingness to learn, and an abundance of enthusiasm for the incredible new programs you are poised to create.",
        "Nothing more is necessary! It's just you, your computer, and your eagerness to dive in and get started right away."
      ],
      "description": "Master Java with Hands-on Learning & Kickstart Your Development Career!\nAre you looking to become a Java expert and build a successful career in software development? Whether you're an absolute beginner or an experienced programmer, this course is designed to take you from Java basics to advanced concepts in a structured and practical way.\n\n\nWhy Should You Take This Course?\nThis is not just another Java course! It’s a hands-on, project-based learning experience that ensures you understand real-world applications of Java. You will learn:\nCore Java concepts – Variables, Data Types, Control Flow, OOP (Object-Oriented Programming), and more\nAdvanced Java concepts – Multi-threading, Exception Handling, Collections Framework, JDBC, and File Handling\nJava for Web Development – Introduction to Java EE, Servlets, JSP, and Spring Framework\nHands-on projects – Solve real-world problems and build Java applications\nInterview preparation – Crack Java developer interviews with confidence\n\n\nWho Is This Course For?\nBeginners – If you're new to programming, we’ll guide you from scratch\nStudents & Professionals – Looking to enhance your skills for better career opportunities\nSoftware Developers – Want to master Java and explore enterprise applications\n\n\nWhat Will You Get?\n40+ hours of in-depth, step-by-step learning\nReal-world projects to strengthen your skills\nQuizzes & coding exercises to test your knowledge\nLifetime access – Learn at your own pace, anytime, anywhere\nCertificate of completion – Add credibility to your resume\n\n\nWhy Java?\nJava is one of the most in-demand and versatile programming languages used by top companies like Google, Amazon, Netflix, and Microsoft. Mastering Java opens doors to high-paying jobs, freelancing, and software development roles.\n\n\nDon't wait! Enroll now and take the first step toward becoming a Java expert",
      "target_audience": [
        "For aspiring tech professionals embarking on their journey, equipped with foundational Java skills, eager to kickstart a rewarding career in the field.",
        "For software developers striving to refresh and enhance their Java proficiency to align with the latest version.",
        "Beginners – If you're new to programming, we’ll guide you from scratch",
        "Students & Professionals – Looking to enhance your skills for better career opportunities",
        "Software Developers – Want to master Java and explore enterprise applications"
      ]
    },
    {
      "title": "Linux Shell Course for Beginners",
      "url": "https://www.udemy.com/course/linux-shell-course-for-beginners/",
      "bio": "This course is teaches the basics of using the linux shell, and is intended as a first course in using the terminal.",
      "objectives": [
        "Navigate the Directory Structure",
        "Understand and Work with File Permissions",
        "Get Acquainted with Terminal very Well"
      ],
      "course_content": {
        "Start Here": [
          "Introduction",
          "Starting with Terminal",
          "Basic Directories Commands",
          "File Listing",
          "File Permissions",
          "Changing File Permissions"
        ],
        "More On Directories, Wilcards and More": [
          "Making and Removing Directories",
          "Usage of Wildcards",
          "File Operations",
          "Removing Non Empty Directories",
          "Redirection and Piping",
          "Bonus Lecture - Coupon Code"
        ]
      },
      "requirements": [
        "Any Linux Based Operating System",
        "Knowledge of any Command Line is Helpful, but Not Necessary."
      ],
      "description": "This course is teaches the basics of using the linux shell, and is intended as a first course in using the terminal. In just under an hour, you’ll learn how to navigate the directory structure, show the contents of directories, how to understand and work with file permissions, how to copy, move, and remove files and directories, and more.\nTopics include:\nHow to open the linux terminal\nAll about directories\nListing a directory’s contents\nUnderstanding file permissions\nChanging permissions\nHow to make and remove directories\nUsing the wildcard characters * and ?\nCopying, moving, and removing files.\nRemoving non-empty directories\nUsing redirection and piping.\nThis is the first course in a new series of courses on the linux shell. Upcoming courses will explore various aspects of the shell, such as scripting, using utilities such as grep and sed, C and Perl programming in linux, and the file structure.\nI hope you join me as we explore linux together.",
      "target_audience": [
        "Any Fresher Who Wants to Learn Basic Linux Shell Commands",
        "Expert who Needs to Brush up Basic Linux Shell Skills"
      ]
    },
    {
      "title": "Take the Leap From Excel to Python: A Hands-On Guide",
      "url": "https://www.udemy.com/course/excel-to-python-hands-on-guide/",
      "bio": "Use Python data analysis to re-create Excel features like pivot tables, VLOOKUP, charts, and more!",
      "objectives": [
        "You will know how to use \"notebooks\" to create well-documented and re-usable data analysis.",
        "You will know how to re-create major Excel features like cell formulas and pivot tables in Python.",
        "You will know how to use Python and pandas to perform VLOOKUP style operations",
        "You will know how to use matplotlib to re-create Excel charts.",
        "You will know how Python packages and functions are used",
        "You will know how to build Excel pivot tables in Python"
      ],
      "course_content": {
        "Welcome to the course!": [
          "Welcome to the Course!",
          "Using Google Colaboratory",
          "Download Course Notebooks"
        ],
        "Quick Start Concepts": [
          "Packages",
          "Functions",
          "Variables and Data Types",
          "Importing and Exporting Data",
          "Dataframe Basics",
          "Exploring Dataframes"
        ],
        "PART 2 -----------------From Excel to Python-----------------": [
          "Welcome to Part 2: From Excel to Python"
        ],
        "Clean Data without the Excel Ribbon": [
          "Handling Missing Data",
          "Deleting Rows or Columns",
          "Removing Duplicate Values",
          "Changing Data Types",
          "Sorting Your Data",
          "Filtering Rows",
          "Finding and Replacing Text",
          "Text to Columns Splitting",
          "Grouping Data"
        ],
        "Use Python to Run \"Cell Formulas''": [
          "SUM( ), COUNT( ), AVERAGE() and more!",
          "IF() Function",
          "SUMIF( ), COUNTIF( ), and AVERAGEIF( )",
          "AND( ) / OR( )",
          "CONCATENATE( )",
          "LOWER( ), UPPER( ), and PROPER( )",
          "TRIM( )"
        ],
        "Transform Your Data with Pivot Tables and More!": [
          "Pivot Tables",
          "Crosstabs",
          "Reversing a Pivot (transform wide data to long)"
        ],
        "Working with Multiple Dataframes: Replacing VLOOKUP": [
          "Appending Dataframes",
          "Merging: VLOOKUP in Python (Part 1)",
          "Merging: VLOOKUP in Python (Part 2)"
        ],
        "Building Charts and Visualizations": [
          "Column (Bar) Charts",
          "Histograms",
          "Scatterplots",
          "Line and Area Plots",
          "Pie, Donut and Treemap Charts"
        ],
        "PART 3 -----------------Projects-----------------": [
          "Welcome to Part 3: Projects"
        ],
        "Bringing It All Together: Project Demo": [
          "Project Overview",
          "Import Data",
          "Explore and Clean the Data",
          "Analyze (Question 1)",
          "Analyze (Question 2)",
          "Analyze (Question 3)",
          "Analyze (Question 4)",
          "Analyze (Question 5)",
          "Communicate Results: Make a PDF or Save to GitHub"
        ]
      },
      "requirements": [
        "Familiarity with basic data analysis in Microsoft Excel.",
        "No prior experience with programming is required — this course is geared for beginners."
      ],
      "description": "****INCLUDES DOZENS OF HANDS-ON CODING NOTEBOOKS****\n\n\nThis course will use hands-on exercises to teach you how to apply your Excel knowledge in Python.\n\n\nSeveral years ago, I was in your shoes. I tried learning Python but would go back to do things in Excel because I was more comfortable with it. My goal in this course is to help you become as comfortable in Python as you are in Excel. To become comfortable, you need to have opportunities to participate in hands-on exercises and projects. You will have the chance to do both in this course.\n\n\nThis course is designed for students who want to grow their careers or improve their analysis by using Python.\n\n\nWhat will you learn:\nHow to use Google Colab to begin using Python without installing software\nHow to use Python packages and functions\nHow to import and export data from Python\nHow to perform basic tasks like data cleaning\nHow Python can save time by creating scripts which can be re-run easily\nHow notebooks can be used to create well-documented analysis\nHow to replicate many Excel features\n\n\nExcel features we will replicate in Python:\nPivot tables\nVLOOKUP\nCharts\nCell formulas like SUM( ), IF( ) and CONCATENATE( )\nFiltering rows\nPerforming text to columns splits\nand more!\n\n\nContent\nThis course is divided into three parts.\nThe first part is the introduction to the course and an overview of the essential concepts you need to know to use Python and pandas.\nIn part 2, you will have the flexibility to take the lessons in whatever order best suits your needs. If you need to learn how to build a pivot table in Python, you can skip straight to that lesson. Want to build charts in python… you can start there instead.\nIn part 3 we will work on an analytics project using real-world data together. You will then apply everything you have learned to build your own project.\nThe course also has a 30-day 100% money-back guarantee. If you aren't happy with your purchase, you can refund the course with no questions asked.\n\n\nEnroll now to make the leap from Excel to Python!\n- Cory",
      "target_audience": [
        "Spreadsheet users who want to grow their careers or improve their analysis by using Python."
      ]
    },
    {
      "title": "Date and Time Fundamentals in .NET and SQL Server",
      "url": "https://www.udemy.com/course/date-and-time-fundamentals/",
      "bio": "Learn how to work with date and time values properly: including DateTime and NodaTime (Noda Time).",
      "objectives": [
        "Use date & time related types from BCL properly",
        "Use Noda Time for writing reliable code",
        "Avoid common mistakes",
        "Apply best practices of working with date and time values"
      ],
      "course_content": {
        "Before taking the Course": [
          "How to Ask Questions",
          "Join .NET Community of Students"
        ],
        "Theoretical Background": [
          "Outline",
          "Why You Need to Learn About Date and Time",
          "Problems with Dates and Times",
          "How a PC Stores and Measures Time",
          "Timers (Counters). Advanced Lecture",
          "Atomic Time",
          "UTC and GMT",
          "Introduction to Time Zones",
          "Date Formats",
          "Unix and Epoch Time",
          "Scope",
          "Perspective",
          "Conclusion"
        ],
        "Time Zones": [
          "Outline",
          "Daylight Saving Time (DST)",
          "What is a Time Zone?",
          "IANA Time Zone Database (TZDB)",
          "Microsoft Time Zone Database",
          "Conclusion"
        ],
        "Date and Time in the .NET Framework": [
          "Outline",
          "DateTime Structure",
          "DateTime Roundtrip Example",
          "DateTimeOffset",
          "TimeZoneInfo - Working with Time Zones",
          "TimeSpan",
          "Calendars",
          "Stopwatch",
          "Conclusion on BCL Types"
        ],
        "Noda Time": [
          "Overview",
          "Core Types",
          "Unit Testing with Noda Time",
          "Conclusion"
        ],
        "Date & Time in SQL Server": [
          "Outline",
          "DATE",
          "TIME",
          "DATETIME",
          "Functions",
          "DATETIMEOFFSET and Time Zones",
          "Conclusion"
        ],
        "Best Practices of Working with Dates and Times": [
          "Outline",
          "Arithmetic on Dates",
          "The Problem of Parsing",
          "Calculating a Birthday",
          "Scheduling Events",
          "Date Formats",
          "Working with Ranges",
          "Other Best Practices",
          "Conclusion",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "You should have some experience in C# (nothing more)"
      ],
      "description": "Teaching Approach\nNo fluff, no ranting, no beating the air. I esteem your time. The course material is succinct, yet comprehensive. All the important concepts are covered. Particularly important topics are covered in-depth. For absolute beginners, I offer my help on Skype absolutely free, if requested.\nTake this course, and you will be satisfied.\nBuild a solid foundation of working with Date and Time with this course\nAlmost all the software works with date and time in one form or another. Some programs, of course, need to work with date and time more than other. However, date and time hide many pitfalls even in very simple scenarios. We all know that security and logging are regular aspects of almost any program. There is a wise phrase that sounds like: “Developers recall about security when it is too late.” The same can be said about date and time. Most developers don’t even imagine how many bugs are hiding behind the simple face of date and time. Those bugs are sitting in programs and waiting for their moment to blow up your production code causing very unfortunate repercussions. That’s why working with date and time is the full-fledged and very important aspect of software development.\nHave you watched magnificent enlightening TV Shows by BBC? This course in some parts is like those BBC shows, because you’ll learn many interesting surprising facts. Besides, being familiar with peculiarities of working with date and time, you can write much more reliable and maintainable applications.\nContent and Overview\nThis course is aimed at all kind of developers. It provides solid theoretical base reinforced by practical material.\nWe start with basics of date and time. I’ll show you some real cases when bugs related to date and time caused unpleasant consequences, event deaths of people. You’ll learn why the hell Gregorian calendar was introduced, why the 5th of October 1582 doesn’t exist at all. And did you know that actually a minute can last more than 60 seconds? Yes, you heard that, a minute can last more than 60 seconds. You’ll learn what is UTC, GMT, what is the difference between them and how time gets synchronized between computers all over the world. And by the way, what is time at all, how humanity measures it? After that, you’ll be introduced to the concept of time zones, you’ll learn about different standards that regulate date and time formatting. You’ll learn what is Epoch Time and Unix Time. Finally, you’ll understand the difference between different date-time scopes and perspectives.\nThe next section is dedicated to Time Zones where you’ll learn about daylight saving time and different very odd case with time transitions back and forth. I’ll give you a full definition of a time zone. You’ll learn more about providers of time zone information: IANA and Microsoft. You’ll learn many interesting facts and what fallacies exist about time zones.\nThe third section is all about date and time related types from BCL in .NET. You’ll learn about DateTime, DateTimeOffset, TimeZoneInfo, TimeSpan, Calendars and Stopwatch. I’ll show you that DateTime hides many pitfalls. You’ll learn that actual precision of BCL types is not equal to 100 nanoseconds as declared in the documentation. You’ll see how many calendars exist and what we can do with them. The third section reveals all the problems with the types built-in to BCL, so in the next section, you’ll learn about a third-party library called “Noda Time”.\nYes, a whole section is dedicated to the Noda Time library. You’ll learn about features provided by this library. You’ll get an overview of all the core types such as: LocalTime, LocalDate, LocalDateTime, Instant, Interval, Duration, ZonedDateTime and others. You’ll also learn how to write unit tests on code which uses date and time values with the help of Noda Time.\nThe whole section is dedicated to best practices of working with date and time. You’ll see some astonishing things like arithmetic on dates and problems of birthday calculation. You’ll learn the problems related to parsing and how to overcome them. I’ll show you the problems of events scheduling and what to do to avoid common mistakes. You’ll learn about date and time ranges, “intervals” is a separate peculiar topic. I’ll also show some additional best practices.\nIn other words, an exciting journey is waiting for you, just take it, relax and enjoy.\nSo, in short, the course covers the following topics:\nDate and Time Fundamentals: Gregorian calendar, UTC, GMT, Atomic Time, How Computers Store Time, NTP, Date and Time Formats based on Standards and Specifications, Epoch Time and Unit Time, Date and Time Scope and Perspective\nTime Zones: Definition (complex one), Daylight-Saving Time (DST), Providers such as IANA or TZDB and Microsoft\nDate and Time in .NET: DateTime, DateTimeOffset, TimeZoneInfo, TimeSpan, Calendars, Stopwatch and many intrinsic details.\nNoda Time: overview, core types, unit testing\nA great number of best practices of working with Date and Time: arithmetic on dates, parsing, calculating of birthdays, scheduling events, date formats, ranges and other.\nIn the end, we will recap what you have learned.\nHow long is this course: The course is around 3 hours. All are video lectures. You will be able to download all the slides and code samples used in the course.\nKeywords.\nC# datetime, C# datetime format, datetime parse, C# datetimeoffset, date and time fundamentals, datetime in .net, noda time, nodatime, C# datetime now, C# string to datetime, C# tostring format, utc now,\nnoda time tutorial, C# datetime tutorial, datetime C# tutorial, datetime vs nodatime, datetime vs noda time, noda time C#, noda time vs datetimeoffset, noda time vs datetime\nSQL date, SQL Server Date Functions, SQL Date Functions, DateTime SQL, SQL Server DateTime.",
      "target_audience": [
        "Anyone who is interested in working with date and time",
        "C# developers who want to write reliable code that works with date and time"
      ]
    },
    {
      "title": "Google Carbon Programming",
      "url": "https://www.udemy.com/course/google-carbon-programming/",
      "bio": "Get hands on experience of new Google programming language",
      "objectives": [
        "The basics of Google Carbon",
        "Arrays & Control Structures",
        "Functions and User-Defined Data Types",
        "Pointers & Basic Data Structures in Carbon",
        "Recursion using Carbon",
        "Practical Assignments"
      ],
      "course_content": {
        "Introduction & Basics": [
          "Introduction to Carbon",
          "Getting Started",
          "Hello World Code, Print Statement & Compiler usage",
          "Printing Strings & Integers in different ways"
        ],
        "Data Types": [
          "Variables",
          "Auto & Global Variables"
        ],
        "Functions": [
          "Functions",
          "Function Arguments"
        ],
        "Arrays & Control Structures": [
          "Arrays - Basics",
          "If-else statement",
          "Matches, Similar to Switch in C++",
          "while Loop - Integers & Usage of Arrays",
          "for Loop - using Arrays",
          "Practice Exercise on Arrays & Control Structures"
        ],
        "User-Defined Data Types": [
          "Tuples",
          "Structs",
          "Classes - Basics",
          "Classes - Methods & Functions"
        ],
        "Pointers": [
          "Pointers - Basics"
        ],
        "Data Structures & Recursion": [
          "Array Data Structure",
          "Stack Data Structure",
          "Recursion",
          "Practice Exercise on Data Structures & Recursion"
        ]
      },
      "requirements": [
        "Basic knowledge of any high-level programming language such as C++"
      ],
      "description": "Carbon is a new and an experimental, general-purpose programming language. It is an open-source project launched by Google. It is designed as a successor language to C++ .\n\n\nCarbon intends to fix several perceived shortcomings of C++ but otherwise provides a similar feature set. The main objective of the language are readability and \"Bi-directional interoperability\" (which allows the user to include C++ code in the Carbon file), as opposed to using a new language like Rust, that, while being influenced by C++, is not two-way compatible with C++ programs. Carbon is in an experimental phase and Changes to the language will be decided by the Carbon leads as and when required.\n\n\nThis 2.5 hour course is kind of a crash course with fundamental concepts. Version 1 of the language is expected in 2024, and I will be adding more updates and new content as and when the language announces new features.\n\n\nAt the end of each section, an assignment is added for you to have hands on experience of what you have learnt in that section. I will be adding more challenging assignments with the passage of time.\n\n\nThis course is for any programmer new to Carbon. All programmers who have experience with any High-Level Language can easily grasp this course. Carbon is the language of future.\n\n\nSo Happy coding Carbon",
      "target_audience": [
        "Anyone who is new to Carbon Language",
        "C/C++ coders looking to move to the next advance level",
        "Rust programmers anxious to explore alternatives for performance and safety",
        "Programmers who want to take lead in learning of a new developing language"
      ]
    },
    {
      "title": "Projects in CSharp : Learn By Building Projects",
      "url": "https://www.udemy.com/course/projects-in-csharp-learn-by-building-projects/",
      "bio": "Learn CSharp By Building Real World Projects",
      "objectives": [
        "Learn professional software development using CSharp",
        "Great guide for beginners for sharpening their CSharp Skills",
        "Build real projects along with the instructor"
      ],
      "course_content": {
        "Course Introduction": [
          "Intro"
        ],
        "Project 1 - The Phonebook": [
          "Project Plan",
          "Creating Database",
          "Adding Actions",
          "Project conclusion"
        ],
        "Project 2 -The Text Editor": [
          "Project Plan",
          "Creating file menus",
          "Finishing up the menus",
          "Creating font menu"
        ],
        "Project 3 - The Media Player": [
          "Project Start",
          "Code Implementation",
          "Final Changes"
        ],
        "Project 4 - Quiz App": [
          "Project Plan",
          "Creating other forms",
          "Implementing Design and Functionality",
          "Final Steps"
        ],
        "Project 5 - Game": [
          "Project Plan",
          "Adding images",
          "Final game logic",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "This course assumes basic knowledge of CSharp programming language"
      ],
      "description": "C# is undoubtedly one of the most popular programming language around. A lot of developers are turning towards C# as their preferred choice of language, because it is simple, well supported and versatile. It powers lot of enterprise software and as a developer CSharp offers a host of job opportunities.\nWhat is C#?\nC#, pronounced as See Sharp or C Sharp (like the music note), is a multi-paradigm programming language that was designed by Microsoft to be a modern, simple, object-oriented and general purpose programming language. Evolved from C and C++, the language is not limited to simply building web applications, but also allows desktop applications, mobile applications, games and even websites.\nOne prominent benefit of C# is that it works within the .NET framework, which means that while the developer is writing his codes, he doesn’t have to worry about writing extra coding for things such as managing memory, performing garbage collection, handling exceptions, etc. The framework executes those functions for the developer automatically.\nOur Projects in C# course has been uniquely designed to teach you the fundamentals of C# using interesting projects that will not only get you started with the programming language, but will also teach it to you in a fun and engaging manner.\nIn our C# course, you will get your hands on some interesting features such as LINQ to SQL, media player tools, authenticating users, add multiple forms, buttons, resources, etc.\nOur interesting C# tutorial includes 5 short projects that will give you a general view of how to get started with C# and also teach a few of the most useful features of the programming language to get you started on your programming journey.\nThe 5 projects include:\nProject 1: Phone Book – Create a phone book in a tabular format. Learn how to add, edit and delete phone numbers.\nProject 2: Text Editor – Learn how to create a rich text editor, along with how to add, remove and edit files. You will also learn how to change the font and format the text.\nProject 3: Media Player – Create a fully-functional media player. You will learn how to create a playlist within this player, along with how to add multiple files at the same time to the playlist.\nProject 4: Quiz – Create a quiz application. You will learn how to authenticate the user and then generate the quiz from a database using multiple forms\nProject 5: Tic Tac Toe Game – Learn how to create a fun game of Tic Tac Toe.\nNo longer does learning have to be boring. Let’s have some fun with C#! Enroll now and become a C# maestro.",
      "target_audience": [
        "Students who want to learn software development using CSharp"
      ]
    },
    {
      "title": "Learn to Create 5 Pro Advanced Level Applications in Python",
      "url": "https://www.udemy.com/course/learn-to-create-5-pro-advanced-level-applications-in-python/",
      "bio": "5 Advanced Level Application in Python everyone need to make",
      "objectives": [
        "Optimise your skiils",
        "Implement your skills",
        "Create Applications of you own",
        "Get going with your Python Professional Career"
      ],
      "course_content": {
        "Text to Audio Application": [
          "Text to Audio - I",
          "Text to Audio - II",
          "Text to Audio - III",
          "Text to Audio - IV",
          "Text to Audio - V",
          "Text to Audio - VI",
          "Text to Audio - VII",
          "Text to Audio - VIII",
          "Text to Audio - IX"
        ],
        "Capturing Screen Application": [
          "ScreenShot - I",
          "ScreenShot - II",
          "ScreenShot - III",
          "ScreenShot - IV",
          "ScreenShot - V",
          "ScreenShot - VI",
          "ScreenShot - VII",
          "ScreenShot - VIII",
          "ScreenShot - IX",
          "ScreenShot - X",
          "ScreenShot - XI"
        ],
        "Sending Email Application": [
          "Email Sender - I",
          "Email Sender - II",
          "Email Sender - III",
          "Email Sender - IV",
          "Email Sender - V",
          "Email Sender - VI",
          "Email Sender - VII",
          "Email Sender - VIII",
          "Email Sender - IX",
          "Email Sender - X"
        ],
        "Cab Booking Application": [
          "Cab Booking - I",
          "Cab Booking - II",
          "Cab Booking - III",
          "Cab Booking - IV",
          "Cab Booking - V",
          "Cab Booking - VI",
          "Cab Booking - VII",
          "Cab Booking - VIII",
          "Cab Booking - IX",
          "Cab Booking - X",
          "Cab Booking - XI",
          "Cab Booking - XII",
          "Cab Booking - XIII",
          "Cab Booking - XIV",
          "Cab Booking - XV",
          "Cab Booking - XVI",
          "Cab Booking - XVII",
          "Cab Booking - XVIII",
          "Cab Booking - XIX",
          "Cab Booking - XX",
          "Cab Booking - XXI",
          "Cab Booking - XXII",
          "Cab Booking - XXIII"
        ],
        "Flappy Bird Game Application": [
          "Game - I",
          "Game - II",
          "Game - III",
          "Game - IV",
          "Game - V",
          "Game - VI",
          "Game - VII",
          "Game - VIII"
        ],
        "Python Crash Course": [
          "Crash Course - I",
          "Crash Course - II"
        ],
        "Pygame Crash Course": [
          "Pygame - 1",
          "Pygame - 2",
          "Pygame - 3",
          "Pygame - 4",
          "Pygame - 5",
          "Pygame - 6",
          "Pygame - 7",
          "Pygame - 8",
          "Pygame - 9",
          "Pygame - 10",
          "Pygame - 11",
          "Pygame - 12",
          "Pygame - 13",
          "Pygame - 14",
          "Pygame - 15",
          "Pygame - 16"
        ],
        "Tkinter Crash Course": [
          "Tkinter - 1",
          "Tkinter - 2",
          "Tkinter - 3",
          "Tkinter - 4",
          "Tkinter - 5",
          "Tkinter - 6",
          "Tkinter - 7",
          "Tkinter - 8",
          "Tkinter - 9",
          "Tkinter - 10",
          "Tkinter - 11",
          "Tkinter - 12",
          "Tkinter - 13",
          "Tkinter - 14",
          "Tkinter - 15",
          "Tkinter - 16",
          "Tkinter - 17",
          "Tkinter - 18",
          "Tkinter - 19",
          "Tkinter - 20",
          "Tkinter - 21",
          "Tkinter - 22",
          "Tkinter - 23",
          "Tkinter - 24",
          "Tkinter - 25"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Python is a very powerful and productive programming language. You can do anything in Python may it be website development, android development, Machine learning or anything. It is a very versatile and user friendly language. In this course we will create 5 amazing advanced level applications in python. This course will help you implement your knowledge in a practical way. More often it occurs that people have a lot of knowledge of a certain programming language but they are not confident for how to organise that knowledge and skill to create a real time application. This course is exactly for that purpose.  We will create 5 different applications with each application covering new concepts and ideas so that you can learn something new from every application. Anyone who wishes to excel professionally in the field of python must enrol in this course. For those who do not have any knowledge of what python is then there is a crash course available at the very end. For every module we cover I have explained how it works and for GUI modules I have uploaded the respective crash courses so that you do not have to go anywhere else and everything will be available for you within a single course.",
      "target_audience": [
        "Anyone who wishes to professionally grow in Python as a Developer"
      ]
    },
    {
      "title": "Robotics and Python Programming with Webots Simulator",
      "url": "https://www.udemy.com/course/robotics-and-python-programming-with-webots-simulator/",
      "bio": "Fast paced course to give you the hands-on experience with programming the Robots in Webots simulator using Python.",
      "objectives": [
        "Programming Robotic Arm using Python",
        "Programming Mobile Robot using Python",
        "Using Fundamental Inverse Kinematics Techniques with IK Library",
        "Factory Automation Simulation in Webots"
      ],
      "course_content": {
        "Introduction To The Course & Software": [
          "Course Preview",
          "Introduction To The Course",
          "Installing The Webots Software",
          "Installing Python",
          "Selecting Project Directory",
          "Setting up Python Path in Webots",
          "Starting A New World Project",
          "Interface of New World File",
          "Exploring The Options For Adding Nodes",
          "Simulation Control Options"
        ],
        "Mobile Robot Programming": [
          "Adding A Mobile Robot",
          "Adding A New Controller",
          "Understanding The Basic Structure of Code",
          "Moving The Robot Forward",
          "Setting Up The Velocity"
        ],
        "Robotic Arm Programming": [
          "Adding A Robotic Arm & Conveyor",
          "Placing All Factory Components",
          "Adding Controller For Conveyor",
          "Forward and Inverse Kinematics",
          "Installing Library for Inverse Kinematics",
          "Adding A Controller For Robotic Arm",
          "Writing The Code For IK Solution Part 1",
          "Writing The Code For IK Solution Part 2",
          "Writing The Code For IK Solution Part 3",
          "Writing The Code For IK Solution Part 4",
          "Writing The Code For IK Solution Part 5",
          "Writing The Code For IK Solution Part 6"
        ],
        "Factory Automation Simulation": [
          "Adding Multiple Conveyors and Robots",
          "Defining Path For Mobile Robot",
          "Writing Code For Robotic Arm-2",
          "Adjusting End-Point Co-ordinates",
          "Completing Code For Robotic Arm-2",
          "Final Simulation",
          "Course Completion"
        ]
      },
      "requirements": [
        "Basic Python Programming",
        "Windows 10 / 11",
        "Passion For Learning Robotics"
      ],
      "description": "This course is designed with the intention of giving you practical and hands-on knowledge to get started with programming the mobile robot and robotic arm in Webots simulator. Webots is a widely used simulator in industries and for research purpose and it has a wide range of robots that you can simulate. In this course, you will learn some very critical concepts of Robotics like how to implement inverse kinematics to the robotic arm. The use of an Inverse Kinematics library that you will learn in this course will not only help you in Webots simulation but also in other software where you are programming real robots.\n\n\nIn this course, you will create a typical factory simulation where the robotic arm will pick an object from the conveyor and place it on the mobile robot. The mobile robot will transfer the object from one place to another in factory environment. And a second Robotic arm will pick the object from the mobile robot and place it on the conveyor. This system will be controlled with multiple controllers programmed in Python.\n\n\nRobot simulation is highly used in industries where the cost and risk in the project is high. This course will help you in gaining the skill that is required in the industries and also help you in creating the base infrastructure for your future projects.",
      "target_audience": [
        "Undergraduate Students",
        "Graduate / Post-Graduate Students"
      ]
    },
    {
      "title": "Advanced Java Using Eclipse IDE: Learn JavaFX & Databases",
      "url": "https://www.udemy.com/course/advanced-javafx/",
      "bio": "Learn by doing - Advanced Java Using Eclipse IDE: Learn JavaFX, Databases, Multi Threading, Exception Handling, and more",
      "objectives": [
        "Become proficient with intermediate to advanced concepts in Java",
        "Understand how JavaFX works and be able to create basic JavaFX programs using Java",
        "Integrate MySQL databases using Java programming",
        "Understand Multi Threading and Object Cloning in Java",
        "Learn Java File Handling & Exception Handling",
        "Wrapper classes & Binary literals"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting The Stage": [
          "Java Wrapper Classes",
          "Exception Handling",
          "Object Cloning",
          "Object Cloning - Part 2",
          "File Handling Compress - Part 1",
          "File Handling Compress - Part 2",
          "Java Multi Threading",
          "Java Vectors - Part 1",
          "Java Vectors - Part 2",
          "Binary Literals",
          "Java Post & Pre Increment",
          "Bit-wise AND OR Operator",
          "Java LEFT RIGHT Operator",
          "Printing ASCII In Java",
          "String Splitting"
        ],
        "Working With Databases": [
          "Working With JDBC",
          "Downloading MySQL Connector",
          "Installing XAMPP Server",
          "Java Database Connectivity",
          "Creating Tables Using Java",
          "Inserting Data Into Database"
        ],
        "Core JavaFX Programming Graphics": [
          "Java GUI",
          "Drawing Graphics",
          "Java FX - Introduction",
          "Downloading JavaFX Eclipse",
          "Creating JavaFX Program"
        ],
        "Projects": [
          "Building a JavaFX Calculator",
          "Annotations - Project B"
        ],
        "Conclusion & Resource Section": [
          "Course Conclusion"
        ],
        "Homework & Practice Task": [
          "Write a program to play Tic Tac Toe"
        ]
      },
      "requirements": [
        "You need to have basic to intermediate knowledge of Java programming language",
        "Need to be familiar with Eclipse IDE",
        "Must have basic knowledge of Object Oriented Programming concepts",
        "Tech savvy"
      ],
      "description": "Learn Advanced Java Using Eclipse IDE: Learn JavaFX & Databases step-by-step, complete hands-on Java Programming For Intermediate to Advanced students\nCourse Description\nAre you a Java Programmer and want to gain intermediate and advanced skills and enjoy a fascinating high paying career?\nOr maybe you just want to learn additional tips and techniques taking to a whole new level?\nWelcome to Advanced Java Using Eclipse IDE: Learn JavaFX & Databases. A one of its kind course\nIt is not only a comprehensive course, you are will not find a course similar to this. The course gradually builds upon core concepts and then practical application by means of hand-on tutorials With over 7 hours of instruction.\nIt’s our most current, in-depth and exciting coding course to date.\nIn this advanced course, you'll learn and practice essential Java advanced concepts using the Java programming language. You'll learn about Javafx and working with databases along with wrapper classes, exception handling techniques, various operators, and much more\n\n\nSo, if you would like to:\nbecome an in-demand and reach new heights as Java programmer and developer for software companies\nstart your freelancing career, setting your own schedule and rates\nsharpen your core programming skills to reach the advanced level\ngain marketable skills as an advanced Java programmer and developer\nthis complete Java developer course is exactly what you need, and more. You’ll even get a certification of completion\nWe walk you through the basics and gradually build your knowledge with real world application!\nSee what our students say “It is such a comprehensive course that I don’t need to take any other course but this one to learn all the skills to become advanced Java programmer, and I would without a doubt recommend it to anyone looking for a complete Java course.” Mike Purnell\n\n“This is such an awesome course. I loved every bit of it – Awesome learning experience!” Kamran Kiyani.\n\nJoin thousands of other students and share valuable experience\nGet started today and join thousands of our happy students, many of whom have changed careers, created second incomes or added critical new skills to their tool kits. Our students have become successful Java programmers and developers managing applications and are earning six figure salaries. Some are freelancing and earning even more with high scaled projects.\nEnroll now in Advanced Java Using Eclipse IDE: Learn JavaFX & Databases today and revolutionize your learning. Start building powerful Java programs and cash-earning programs today—and enjoy bigger, brighter opportunities.\n\nReady to open new doors and become a smart, in-demand Java advanced programmer or even Java Enterprise Architect? You do need to put effort though!\n\nWhy take this course?\nIf you’re currently thinking of advancing your skills and career into the world of programming? This is the right course for you. If you wish to get an advanced flavor of what Java is all about and how does JavaFX work and create programs using Java graphics, this is the right course for you. If you wish to gain additional experience, this is the right course for you. If you want to get a high paying job or advance your existing skillset in programming, this is the right course for you!\nEnroll now, and I will see you in class.\nSyed",
      "target_audience": [
        "Java programmers who have basic knowledge of Java programming and want to enhance their skills",
        "Java programmers who wish to learn JavaFX and working with databases",
        "Web developers working in Java",
        "Java Enterprise Architects",
        "Core Java developers"
      ]
    },
    {
      "title": "Salesforce Lightning : Component Development with Hands-On",
      "url": "https://www.udemy.com/course/salesforce-lightning-component-development-with-hands-on/",
      "bio": "Simple and easy way of building Salesforce Lightning Components using Salesforce Development and Salesforce Admin",
      "objectives": [
        "After taking this course students can learn how to create lightning components / apps with (or) without coding.",
        "This will help you start your career with Salesforce Lightning, this course is not for experienced Salesforce Lightning Developers",
        "This course involves development of components in Salesforce Lightning. The first 3 sections are related to building the components using configuration.",
        "I have explained in detail each and every topic for beginners to understand. If you find the pace slow please feel free to increase the video speed.",
        "From section 4 onwards coding starts for which you need to understand basics of HTML, Javascript and APEX. Developers can directly start with section 4."
      ],
      "course_content": {
        "Introduction & Setup": [
          "Salesforce (What, Why, Who)?",
          "Create your own Developer Org",
          "Create and Enable Custom Domain",
          "Create your own namespace"
        ],
        "Create New Lightning App Page - without coding": [
          "Scenario to be Developed",
          "Create new Accounts with Contacts Report",
          "Create a component with Standard Report created in previous lecture",
          "Create another Component with Standard List Items",
          "Activate Accounts with Contacts Lightning App page"
        ],
        "Create new Lightning Home Page - without Coding": [
          "Scenario to be Developed",
          "Create new List View Component for Accounts Object",
          "Create new Recent Items for Accounts and Contacts",
          "Create new List View for Opportunity Object",
          "Create new List View Component for Lead Object (with Filter)",
          "Activate New Sales Lightning App home page"
        ],
        "Create a New Component with display and New button functionality - with coding": [
          "Scenario to be Developed",
          "Create New APEX class to retrieve Contact details",
          "Create New Lightning Component to display the data retrieved",
          "Create New Component Controller to call the APEX class to retrieve the data",
          "Add out new component to Accounts Record Page"
        ],
        "Validating the objects which we have created so far - testing": [
          "Validate the overall development till now and test it"
        ],
        "Enhance the Component with Edit and Save button functionality - with coding": [
          "Scenario to be Developed",
          "Create the APEX Controller for retrieving and updating the information",
          "Add the Logic in the component",
          "Create the component controller to edit / save the records",
          "Create the Helper with the javascript logic",
          "Add Component Style",
          "Adding our component to the record page and testing it"
        ],
        "Create a New component for Opportunities with Delete Functionality - with coding": [
          "Scenario to be Developed",
          "Create a New APEX Controller for Select and Delete functionality",
          "Create a Component for selecting Opportunities to be Deleted",
          "Create a Component Controller to add logic for selecting and deleting records",
          "Deploy the New Opportunities Component in the Account Record page and test it"
        ],
        "Adding Custom Validations to input fields before sending the request to Database": [
          "Scenario to be Developed",
          "Changing the code in Component and Controller to add validations"
        ]
      },
      "requirements": [
        "For the first three sections in this course you need not have any coding knowledge, as it is related to building Lightning Components using Lightning App Builder. First three sections are for those who want to learn how to build Lightning Components using Lightning App Builder.",
        "For the later sections of this course you need to have basic coding knowledge in HTML, Javascript and APEX as it is related to coding.",
        "I'll try to explain in as detail as possible for beginners to understand the concept."
      ],
      "description": "This course is for beginners in Salesforce Lightning who would like to learn how to build Lightning Components in various ways. It explores various ways of developing Salesforce Lightning Apps. It is made up of two parts:\nThe First one is to develop Lightning Pages (App and Home) using Lightning App Builder and the second one is to develop custom components and add them to Accounts record page using Lightning Component, Controller and APEX class and to perform various actions on it using coding.\nYou will learn how to use various standard parts of Lightning App Builder like List View, Report Chart and Recent items. In addition, you will also learn how to use queries (like: select, update, delete,etc) in APEX class; write Javascript code in Component Controllers / Helpers to fetch the records and display them on the component. You will also learn how to use various ways of querying, creating, modifying and deleting records. You will be learning how to Edit, Save records using lightning components, how to delete them and also use Toast to display Success, Error messages. In the last section you will learn how to perform custom validations on input fields in Lightning Components.",
      "target_audience": [
        "This course is intended for beginners in Salesforce Lightning who want to learn how to create Lightning Apps and Components , it has two parts the first deals with the Lightning App builder it in intended for a person who is trying to learn how to build lightning Components without coding. In the second part development concepts are discussed it is intended for beginners in salesforce lightning development who want to learn how to build the components using coding so that it can be customized according to user expectations.",
        "This course is not for those who are experienced Salesforce Lightning Developers, it is intended for Beginners who are trying to learn the lightning concepts.",
        "For those of you who want to understand the coding concepts, you can directly jump to Section four of this course. From section four onward all development concepts are discussed.",
        "For those of you who want to understand the Admin part, and are new to lightning. You can take the course from beginning."
      ]
    },
    {
      "title": "Learn Programming in GO (golang): A Rich Guide for Beginners",
      "url": "https://www.udemy.com/course/learn-programming-in-go-golang-a-rich-guide-for-beginners/",
      "bio": "A comprehensive introduction to Google's GO programming language (golang) for beginners & intermediate programmers",
      "objectives": [
        "Syntax, notation, taxonomy and special \"vocabulary\" used by and for GO",
        "Basic concepts of programming in GO, such as control structures, control flow, loops, and conditional branching",
        "Characteristics and differences of GO to more \"conservative\" programming languages such as C, C++ and Java",
        "Handling of variables, types, functions (and their signatures), (variatic) parameters and passing arguments",
        "Variables & types (simple and composite), slices & pointers, structs, etc.",
        "Functions, Callbacks, Closures",
        "Concurrency & Parallelization, Mutex, Atomic",
        "Channels (directional, bidirectional), Fan in, Fan out, the \"Comma OK\" Idiom, Context",
        "Error Detection, Error Handling",
        "Code Documentation in GO",
        "Benchmarks, Examples and Tests (BET)",
        "Basics package and dependency management with GO modules",
        "and much more to get a wide insight into the GO programming language and become a respectable programmer"
      ],
      "course_content": {
        "Introduction": [
          "Welcome greeting and an invitation to learn",
          "Why Go of all things? Brief history, classification, and typification of Go",
          "Learning notes on this course"
        ],
        "The course - an overview": [
          "Sections and content overview",
          "Accompanying course outline as PDF (also available on Github)",
          "Sources of information on the web about Go from the makers/developers ans others"
        ],
        "Development environment (and an IDE, if you insist on)": [
          "Terminals/consoles/shell/bash/command prompt",
          "Bash for Windows",
          "Brief introduction to the bash",
          "Brief introduction to the command line (cmd)",
          "Installation of Go on macOS, MS Windows and Linux",
          "Environment variables (especially paths)",
          "Modern triple jump: writing, compilation, execution of Go code",
          "Native Go commands",
          "An IDE (Integrated Development Environment) for macOS, MS Windows und Linux",
          "Some off-topic but helpful: Brief overview over Github and how to use it"
        ],
        "Variables, values and types": [
          "Let's go to the playground!",
          "Hello world, hello control flow",
          "Spoiler of packages and acquaintance with the variatic parameter",
          "Some Terminology and the Short Declaration Operator",
          "The keyword var comes with a little secret",
          "Types and Typing - It's all about types!",
          "There is a value in every type: The zero value.",
          "The package fmt brings our code in good shape",
          "DIY - Provide your own type in Go!",
          "Type change in Go is not only about appearance, it's conversion (not casting)"
        ],
        "Level 1 - Karate, Kung-Fu, Voodoo, Mojo, Magic, the Force & Skill": [
          "To the Keyboards! Get ready ... Fire!",
          "Practice 1",
          "Practice 1 - an example solution",
          "Practice 2",
          "Practice 2 - an example solution",
          "Practice 3",
          "Practice 3 - an example solution",
          "Practice 4",
          "Practice 4 - an example solution",
          "Practice 5",
          "Practice 5 - an example solution",
          "Hooray, a quiz!",
          "Practice 6 - commented quiz solution"
        ],
        "Fundamentals: The basics": [
          "The bool type: to be or not to be",
          "Brief inview how computers do what they do",
          "Numeric types: Draw a number!",
          "Realize that: String is a type!",
          "Numerical systems: 2, 8, 10, 16 - binary, octal, decimal or hexadecimal",
          "Constants - the constants in life and in Go",
          "Iota",
          "Bit shifting: The shifting station for all that little information trains!"
        ],
        "Level 2 - Karate, Kung-Fu, Voodoo, Mojo, Magic, the Force & Skill": [
          "Further notes on exercises",
          "Practice 1",
          "Practice 1 - an example solution",
          "Practice 2",
          "Practice 2 - an example solution",
          "Practice 3",
          "Practice 3 - an example solution",
          "Practice 4",
          "Practice 4 - an example solution",
          "Practice 5",
          "Practice 5 - an example solution",
          "Practice 6",
          "Practice 6 - an example solution",
          "Yuppie, another quiz!",
          "Practice 7 - commented quiz solution"
        ],
        "Control Flow - let it flow!": [
          "Control flow - let it flow, man!",
          "Loops - init, cond, post",
          "Loops - they come nested",
          "Loops - understanding the for statement/documentation",
          "Loops - break and continue",
          "Loops - let's output ASCII",
          "Conditionals: if - the conditional jump",
          "Conditionals: if, else if, else - if this, then that, otherwise what?",
          "Loops, conditionals and the modulo",
          "Conditionals: switch - a brief look into the documentation",
          "Conditionals: the switch statement in action",
          "Conditionals: Logical operators ahead!",
          "browsh - a sneak peek at a Go programming example"
        ],
        "Level 3 - Karate, Kung-Fu, Voodoo, Mojo, Magic, the Force & Skill": [
          "Practice 1",
          "Practice 1 - an example solution",
          "Practice 2",
          "Practice 2 - an example solution",
          "Practice 3",
          "Practice 3 - an example solution",
          "Practice 4",
          "Practice 4 - an example solution",
          "Practice 5",
          "Practice 5 - an example solution",
          "Practice 6",
          "Practice 6 - an example solution",
          "Practice 7",
          "Practice 7 - an example solution",
          "Practice 8",
          "Practice 8 - an example solution",
          "Practice 9",
          "Practice 9 - an example solution",
          "Practice 10",
          "Practice 10 - an example solution",
          "all good things come in threes",
          "Practice 11 - commented quiz solution"
        ],
        "Grouping data": [
          "Arrays are only the beginning",
          "Slices - meet the composite literal",
          "Slices are the better arrays",
          "Slices and range like team up together",
          "Slicing a slice - best idea since sliced bread",
          "Append() - how to add something to a slice",
          "Append-Paradox – deleting something from a slice",
          "How to make a slice? With make(), of course!",
          "Multidimensional slices - they come from an outer dimension?",
          "Map - an introduction, and the comma okay idiom",
          "Map - how to add elements to a map and iterate over one with range",
          "Map - how to delete elements from a map with delete()"
        ]
      },
      "requirements": [
        "No previous programming experience is required to participate in this course. This course starts by teaching very basic skills and guides you step by step to become a programmer for Go.",
        "Knowledge from other programming languages such as C, C++ and Java is helpful but not mandatory.",
        "Linux knowledge, as well as familiarity with the shell (bash) and git/github for version management can also help.",
        "For in-depth study of the material from supplied sources, adequate knowledge of English should be brought along.",
        "Willingness to learn, do practices and a fair amount of curiosity to figure out how things work!"
      ],
      "description": "Join me on an exciting journey as we experience coding with Google's GO (golang) programming language. Together we will learn the basics of programming as well as the ins and outs of the GO programming language.\nThis course is intended as a comprehensive resource for learning programming basics an concepts in general and Google's GO (golang) programming language in particular - a comprehensive experience.\nDue to its large scope, the course is equally suitable for beginners and slightly more advanced developers and it is full of examples, quizzes, hands-on exercises, solutions to that practical exercises, and a tiny code repository -- accessible via Github.\nWhen you sign up for this course, you have lifetime access to the course. You can learn at your own pace and return to content at any time for deeper insights or to learn additional concepts when you are ready.\nThis course also comes with a 100% money back guarantee.\nI think this is one of the most comprehensive courses in English for learning the GO programming language.\nAnd if for some reason the course doesn't work for you, you can get a full refund within the first 14 days*.\nSign up now!\nYou can get great value from this course and, more importantly, you'll have a great time learning one of the best programming languages ever - the GO programming language, the fastest growing programming language with the highest paid programmers in the US within the last years.\nGO is an open-source programming language that makes it easy to develop simple, reliable, and efficient software.\nGO was developed by computer science luminaries at one of the best, if not the best, software development companies ever - Google. The design and implementations are by Robert Griesemer, Rob Pike and Ken Thompson.\nGO is a very good choice for learning a programming language because it was developed by some of the same people who created the C programming language, Unix, and UTF-8 - some of the most influential contributions to computer science. With GO Robert Griesemer, Rob Pike, and Ken Thompson created a modern programming language that can easily run on multiple processors in parallel, works smoothly in different environments, and makes it easy for programmers to write programs with a very streamlined and user-friendly syntax.\nWhy did Google develop a new programming language?\nIn Google's words, \"GO was born out of frustration with existing languages and environments for systems programming. Programming had become too difficult and the choice of languages was partly to blame. One had to choose either\nefficient compilation,\nefficient execution, or\nease of programming;\nall three were not available in the same mainstream language. Programmers who could were choosing ease over safety and efficiency by moving to dynamically typed languages such as Python and JavaScript rather than C++ or, to a lesser extent, Java. GO is an attempt to combine the ease of programming of an interpreted, dynamically typed language with the efficiency and safety of a statically typed, compiled language. It also aims to be modern, with support for networked and multicore computing.\nFinally, working with GO is intended to be fast: it should take at most a few seconds to build a large executable on a single computer. To meet these goals required addressing a number of linguistic issues: an expressive but lightweight type system; concurrency and garbage collection; rigid dependency specification; and so on. These cannot be addressed well by libraries or tools; a new language was called for.\"\nIn my humble opinion, GO is the best programming language you can learn today. I've worked with a few programming languages since I was introduced to programming through BASIC in the mid-80s, and Go is by far the best-designed language I've ever used.\nJoin learning one of the best programming languages ever designed. You will get knowledge, ideas, concepts, inspiration, quizzes, and code samples to learn to create software and applications yourself according to your needs.\n\n* Check Udemy's Terms and Conditions for details.",
      "target_audience": [
        "This programming course is suitable for first-year students at the university level as well as for high school and college students.",
        "Also ideal for beginners who want to learn programming in GO from scratch.",
        "Equally suitable for advanced programmers who want a thorough introduction to the GO programming language.",
        "This course is also for experienced programmers who want to fill gaps in their programming knowledge."
      ]
    },
    {
      "title": "Access VBA (Basic to Super Advance - 40 Hours)",
      "url": "https://www.udemy.com/course/access-vba-introduction-series1/",
      "bio": "Variables.Recordsets , Loops. Arrays, IFs, Connecting Excel,Collection Loops, functions, SQL, Forms,Dashbaords, ADO.DAO",
      "objectives": [
        "This course has 13 sections and every information is shared on access VBA.",
        "It has 40 hours amazing content in a sequence",
        "Scope of Variables, Forms, Dashboards, Security of a database. do cmd ,Events,Error handlers",
        "Write subloops , Fundamentals, Error descriptions",
        "Arrays, Collection Loops, Do while , for next loops , IF statements,SQL, Forms,Early binding, late binding",
        "Supporing files are also available for you to download with my 24*7 support"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Access front part - Familiarity with Tables and Queries atleast"
      ],
      "description": "This course talks about the use of VBA in ms access. It has many sections (35 hours) and each topic is discussed in a detail.\nIf you know access front you are ready to learn access VBA and learn every small , big thing about it.\nVBA Editor - Let us understand how to go to vba editor and understand its structure\nScope of Variables - How long a variable exist, public, local  and module level . Option Explicit uses\nLoops - for next with do while - How to write and use it on recordsets\nCollection Loops - Loop tables, queries, forms, modules , forms, reports, objects - So amazing\nArrays - option base1, one dimensional , multi dimensional arrays with practicals\nFunctions (UDF and inbuilt)\nError Handlers - On error resume next, Go to err - How to use them wisely\nConnecting Excel application - Work with excel application and control the way you want\nLate binding and early binding with Powerpoint and word applications\nSQL Statements - Select, update, Delete, Create, Drop , INSERT INTO - all sql statements use in VBA\nDo CMD Function\nIF function - Basic , nested IFs , With Loops and objects\nFile and Folder - How to create folders, files , how to work with scripting library - So much fun\nFile Dialogs - Why do we need it and how it can be used with scripting library to pick data from any folder\nDashboard Covered for you to gain confidence from the very beginning\nYour questions answered - I have taken up students queries and solve them\nAssignments also shared with you and some are solved as well",
      "target_audience": [
        "Students who want to make career in analytics field and want to be Access Programmer. Knowing Access VBA means you can fully control Access and integrate it with Excel pretty well."
      ]
    },
    {
      "title": "Zero to Hero in Vex Robotics",
      "url": "https://www.udemy.com/course/zero-to-hero-in-vex-robotics/",
      "bio": "From the bare basics towards mastery of motor functions and feedback control",
      "objectives": [
        "Assemble a test rig with a motor and several sensors",
        "Understand and apply motor control commands",
        "Use a variable which stores distance to an obstacle",
        "Control motor output using sensor input (i.e. keep constant distance from moving obstacle)",
        "Write functions which move the robot forward a precise number of centimetres",
        "Write functions to control the movement of the robot arm and claw",
        "Program the robot to lift and throw objects",
        "Program the robot with a zig zag line following algorithm",
        "Perform advanced proportional control line following",
        "Use feedback to keep distance from objects, this means the robot slows down gradually avoiding braking and falling over",
        "Use booleans and touch sensor to activate every program with a push of a button once robot is disconnected from the computer",
        "Combine line following and distance control to follow the line up to an object",
        "Integrate arm functions with line following to pick up rubbish along a road",
        "Write a function that scans space",
        "Program the robot to locate, drive up to and pick up objects which are placed at random locations"
      ],
      "course_content": {
        "Module 1: Introduction to Robot C and VEX": [
          "Building The Test Rig",
          "Setting up Motors and Sensors",
          "Running a Motor",
          "Using if Else Statements to Select Motor Direction",
          "Forever Loops",
          "Basic Motor Control",
          "Sensor Input, Variables and Motor Control",
          "Using Multiple Sensors",
          "Using the Ultrasonic / Sonar Sensor",
          "Ultrasonic Sensor Motor Control"
        ],
        "Module 2: VEX Clawbot Motor Functions": [
          "Introduction to the Clawbot",
          "Setting up the motors on Robot C",
          "Moving forward an exact distance",
          "Turning an exact distance",
          "Complex turns",
          "Moving the robot arm",
          "Grabbing and lifting",
          "Module 2 Assessment 1",
          "Module 2 Assessment 2",
          "Create and Navigate a Ski Course"
        ],
        "Module 3: VEX Line Following and Distance Control": [
          "Motor and Sensor Setup",
          "Keep Distance On/Off",
          "Controlled Distance With Feedback",
          "Button Activated Distance Control",
          "Zig Zag Line Following",
          "Zig Zag Function Smooth",
          "Proportional Line Following",
          "Module 3: Assessment 1",
          "Module 3: Assessment 2"
        ],
        "Module 4: VEX Object Scan - Pick Up - Navigation -Drop Off": [
          "Goto and Lift (",
          "Up to Bin",
          "Up To Bin And Back",
          "Scan and Pick Up",
          "Module 4 Assessment"
        ]
      },
      "requirements": [
        "Students need to have a Windows computer or a virtual Windows app running on a Mac",
        "Students need to install Robot C Available from VEX.com",
        "Students need to purchase one VEX programming kit or a VEX Virtual Worlds subscriptions"
      ],
      "description": "Why Vex Robotics?\nVEX Robotics is the ultimate robotics platform: powerful micro-controller (ARM® Cortex®) together with high power high torque motors, precise sensors and a metal frame. Best of all it is programmed in a very user friendly interface (CodeBlocks) using Robot C which is essentially the C programming language with a host of new robotics related functions.\nWhat is special about this course?\n\nIn the first module students complete several quite advanced examples of INPUT / OUTPUT programming whereby they control the speed and the direction of a motor by bringing their hand closer to and further from a distance sensor. This task is broken down into the simplest possible steps; in each step students add two to three lines of code, experiment with changing variables and observing the output of the robot. This ensures that they understand not only what each line of code does, but how it does it and what will happen when it changes.\nIn the second module students create functions that move the robot forward and backward a precise number of degrees. They also learn to control the robot arm, performing both grabbing and lifting. The module contains key concepts like booleans, while loops and various varieties of functions.\nIn the third module student learn how to follow lines both using a basic Zig Zag algorithm and a much more advanced proportional algorithm which uses a sensor feedback loop. They also use fedback to create a program which gets the robot to keep constant distance between itself and the nearest object.\nIn the fourth module students apply everything they learned into two advanced tasks, the first of which is to follow a line and pick up cans along the way taking them to the bin at the end of the line. The second is an environment scanner which looks for rubbish (cans) , picks them up and drops them off at the bin.",
      "target_audience": [
        "Anyone familiar with programming and looking to get into robotics",
        "Anyone who just acquired a VEX robotics kit and is keen to get started",
        "Robotics enthusiasts looking into the VEX platform",
        "Robotics Enthusiasts looking to program Robot C"
      ]
    },
    {
      "title": "Intermediate Fortran",
      "url": "https://www.udemy.com/course/intermediate-fortran/",
      "bio": "Intermediate Level Programming Concepts Implemented in Fortran",
      "objectives": [
        "Intermediate level skills programming in Fortran"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Additional Setup"
        ],
        "Procedure Attributes": [
          "Procedure Attributes Introduction",
          "Pure and Elemental",
          "Sum of first five primes multiplied by 3 and squared",
          "Recursion",
          "Recursive Sum",
          "Abstract Interfaces",
          "Write Sum Using Reduce"
        ],
        "Data Structures": [
          "Data Structures Introduction",
          "Linked List",
          "Write a Visitor for Summing",
          "Heterogeneous List",
          "Heterogeneous List Exercises",
          "Trees",
          "Tree Exercises"
        ],
        "Patterns and Principles": [
          "Patterns and Principles Introduction",
          "Data Hiding",
          "Stack Exercises",
          "Composability",
          "Scaling a List of Shapes",
          "Open-Closed Principle",
          "Filter Shapes by Area"
        ]
      },
      "requirements": [
        "Understand the basic fundamentals and syntax of the Fortran programming language"
      ],
      "description": "Start improving your skills using one of the few languages directly targeting use for high-performance scientific and engineering applications. I'll show you some techniques that make use of more advanced features of the language, and how you can apply some best practices from software development in general to programming in Fortran. If you've taken my previous course, have some basic experience in Fortran, or are interested in learning how you can apply techniques you're familiar with from other languages to Fortran, this course will help you improve your skills.\nI can't cover all the techniques and practices out there in a single course, but this should give you an idea of what's possible, and help you put some tools in your tool box. I'll even show you how I have some of the tools I use for development configured to be more convenient and helpful.\nWe start with some features of the language you'll need to be familiar with to be successful, explore some common data structures in software development, and demonstrate some patterns and practices shown to be useful in other fields of programming. I'll show you some example that demonstrates a concept, and then have you complete 1 or 2 exercises where you'll extend the example using the techniques we've talked about.\nBy the end of the course, if you've understand the material and completed the exercises, you should see your skills as a software developer dramatically improved.",
      "target_audience": [
        "Beginner to intermediate level programmers interested in learning more about Fortran"
      ]
    },
    {
      "title": "Java Programming - The Apprentice Course",
      "url": "https://www.udemy.com/course/java-programming-the-apprentice-course/",
      "bio": "Learn the basics of the Java programming language using Java and the Eclipse design environment.",
      "objectives": [
        "By the end of this course, students will learn the basic essentials of Java Programming from the ground-up.",
        "Students will learn the basic hallmarks essential to mastering a programming language",
        "Students will work with data input, output, and variables.",
        "Students will explore and use loop structures, functions, and conditional statements, such as if and if-else statements.",
        "High school students will learn basic subset material to take the AP Computer Science Exam",
        "Core concepts are explored that are essential for a career in computer programming."
      ],
      "course_content": {
        "Getting Started with Java Programming": [
          "Intro to the Course",
          "Software setup, and the tools you will need",
          "A word about software versions",
          "Eclipse IDE Management"
        ],
        "Computer Output": [
          "Hello, World: The Beginning of your Programming Journey",
          "Escape Sequences",
          "Comments",
          "Editor Settings",
          "Challenge - Output Activity",
          "Output Quiz",
          "Code used in this Section"
        ],
        "Variables": [
          "Variables in Java.",
          "Naming Variables",
          "Other Data Types (Primitive Data Types)",
          "Enumerators (Enums)",
          "Challenge - Variables Activity",
          "Variables Quiz",
          "Code used in this Section"
        ],
        "User Input": [
          "User input: the Graphical User Input (GUI) technique",
          "User input: the command line technique",
          "Challenge - User Input",
          "Solution to User Input Challenge",
          "Input Quiz",
          "Code used in this Section"
        ],
        "Math Operations and Comparisons": [
          "Basic Math Operations",
          "Use of Math Ops in a Calculation",
          "Counters and Accumulators",
          "The Increment Operator",
          "The Decrement Operator",
          "The Assignment Operator",
          "The Modulus Operator",
          "Comparing data - Math vs. Java",
          "\"If\" Statements",
          "\"If/Else\" Statements",
          "The Ternary Operator",
          "\"Else/If\" Statements",
          "Logical Operators - Part 1",
          "Logical Operators - Part 2",
          "Challenge - Math Operations and Comparison Challenge",
          "Math Operations and Comparisons Quiz",
          "Code used in this Section"
        ],
        "Loops": [
          "Introduction - The 'for' loop",
          "The 'while' loop",
          "The 'do-while' loop",
          "Loop Run Variations",
          "Challenge - Loops",
          "Loops Quiz",
          "Code used in this Section"
        ],
        "Functions": [
          "Introduction to Functions",
          "Functions within functions",
          "Overloaded Functions",
          "Built-in Math Functions",
          "Subroutines (Subs) and Functions",
          "Challenge #1 - Functions",
          "Challenge #2 - Functions",
          "Functions Quiz",
          "Code used in this Section"
        ],
        "Strings": [
          "Introduction to Strings and Basic String Methods",
          "String Equality",
          "Substrings",
          "The compareTo( ) Method.",
          "The charAt( ) and indexOf( ) Methods.",
          "Strings in Functions (Part 1)",
          "Strings in Functions (Part 2)",
          "Addendum to Functions (Part 2)",
          "Challenge - Strings",
          "Strings Quiz",
          "Code used in this Section"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "More on Creating and Populating Arrays",
          "Traversing Arrays",
          "Printing Arrays",
          "Two-dimensional Arrays (Matrices)",
          "Jagged Arrays",
          "Arrays in Functions",
          "Strings methods involving Character Arrays",
          "Challenge - Arrays",
          "Arrays Quiz",
          "Code used in this Section"
        ],
        "Exception Handling": [
          "Introduction to Exception Handling",
          "Exception Samples",
          "Array and Argument Exceptions",
          "Mismatch Errors and the Finally Clause",
          "Documentation on Exception Handling",
          "Code used in this Section"
        ]
      },
      "requirements": [
        "A desire to learn another language (in this case, a programming language).",
        "Access to a PC or a Mac is required"
      ],
      "description": "The Java Programming language is used on over 13 billion devices world-wide. What started out as a network language has grown into a multi-platform software tool with applications on computers, the web, and on mobile devices.\nThis explosive birth has elevated the demand for computer programmers and software engineers all over the world. High Schools and Summer Camps have ramped-up their offerings in Computer Programming. Major universities and tech schools have seen the advent of Computer Science and Software Engineering as major fields of study, topping enrollment in other science, tech, and engineering programs.\nIf you've always wanted to learn Java and be a part of the explosive career possibilities, then this course Java Programming - The Apprentice Course is for you!\nMy name is Greg Safko, and I have been teaching computer programming for over 20 years. Over those years I've learned what teaching techniques work best, and I use them in this course so you can learn the Java language in a fun and entertaining way while maximizing how you retain the information.\nIf you are looking to explore the Java language for fun, or to make a career change, then I invite you to take Java Programming - The Apprentice Course\nI look forward to fulfilling all your Computer Programming expectations!",
      "target_audience": [
        "This course is designed for:",
        "Middle and High School students who want to learn the Java Programming language",
        "High School students who want to prepare for and take the AP Computer Science Exam",
        "First-year College students who want to improve their studies in Computer Science or Engineering",
        "Anyone looking to gain the skills needed to become a Computer Programmer or Software Engineer"
      ]
    },
    {
      "title": "JavaScript Essentials Get started with web coding",
      "url": "https://www.udemy.com/course/javascript-intro-course/",
      "bio": "Explore how you can write JavaScript code to create more interactive content online",
      "objectives": [
        "write JavaScript code",
        "make things happen within their web pages",
        "create interactive content",
        "create logical code in JavaScript to perform tasks"
      ],
      "course_content": {
        "Introduction to JavaScript": [
          "Introduction to coding JavaScript for Beginners",
          "What is JavaScript",
          "Course Resources",
          "How to add JavaScript to Webpages",
          "JavaScript example code",
          "Debugging and commenting JavaScript",
          "Code example",
          "JavaScript Basic Data Types",
          "JavaScript Variables",
          "JavaScript Variable Rules",
          "Exercise 1 Output to console link to js file",
          "Exercise Source",
          "Data type Null vs Undefined JavaScript",
          "Declaring multiple variables at once JavaScript",
          "JavaScript Operators",
          "Increment and Decrement Values JavaScript",
          "Assignment Operators JavaScript",
          "Comparison Operators JavaScript",
          "JavaScript String Operators",
          "JavaScript Logical Operators",
          "Examples and Source Operators"
        ],
        "JavaScript coding essentials": [
          "prompt and alert JavaScript",
          "Writing content to the HTML document object",
          "Example Code",
          "JavaScript Objects",
          "JavaScript Objects Dynamic Outputs",
          "JavaScript Objects within Objects",
          "JavaScript update values",
          "Code Examples",
          "JavaScript Arrays",
          "Working with Array Methods JavaScript",
          "Array Methods extended",
          "Sorting and more with Arrays JavaScript",
          "More with Arrays JavaScript",
          "Objects and Arrays together",
          "Source Code and Examples Arrays and Objects",
          "JavaScript if condition statement",
          "JavaScript switch statement",
          "Source Code conditions",
          "JavaScript Do while loops",
          "For loops and more JavaScript",
          "Looping items in arrays and objects JavaScript",
          "Looping examples",
          "JavaScript introduction to functions",
          "Working with JavaScript Functions",
          "Global and Local Variables Functions",
          "Self-Executing function",
          "Break out of function JavaScript",
          "Example code functions",
          "JavaScript String Methods",
          "String Methods",
          "Strings and Arrays",
          "Numbers to strings back to numbers",
          "Source Example",
          "JavaScript Math Method",
          "JavaScript Date Method",
          "Source Code examples"
        ],
        "Resources and Tools": [
          "JavaScript Conclusion",
          "Course Resources",
          "Bonus Lecture",
          "Extra Educational Materials"
        ]
      },
      "requirements": [
        "desire to learn JavaScript",
        "basic computer skills",
        "knowledge of using HTML and CSS"
      ],
      "description": "JavaScript (JS) is a lightweight interpreted programming language. You'l find it everywhere its one of the cornerstones of the web.  Learn the foundations of JavaScript coding develop the core skills you need to apply JavaScript to your web projects\nExperience JavaScript this course is designed to introduce you to JavaScript.  Learn JavaScript here Simple to follow step by step guide building JavaScript code from scratch ultimate beginners course\n\nIn this course we teach you the core fundamental skills that you need to know in order to code JavaScript. Understanding the core coding options allows you to develop a solid base to build even more complex JavaScript applications..\nJavaScript is an excellent gateway to learning scripting languages, its perfect for beginners. You will be amazed at how easy it is to get started with. Learn how to use JavaScript Step by Step. JavaScript can be fun to work with and really help bring your web concepts to life.  This is a course that outlines key areas that anyone starting out with JavaScript should learn. Build a solid foundation for future web development.\nJavaScript allows your web pages to interact with your visitors, creating dynamic customized interactions. React to user actions bringing your web content to the next level.\nit is amazing what you can achieve with a few lines of JavaScript code.\nJavaScript is an interpreted language = renders in a browser so no barrier to get started with\nThe majority of websites employ it, and all modern web browsers support it without the need for plug-ins by means of a built-in JavaScript engine.\nAlongside HTML and CSS, JavaScript is one of the three core technologies of World Wide Web content production.\nJavaScript is an object-based scripting language that is lightweight and cross-platform.\nJavaScript lets you create interactive websites\nCreate your first JavaScript code\nlearn how to add JavaScript to your web pages\nBetter understand the structure of JavaScript\nKey JavaScript components like Functions, Arrays, Objects, Loops and conditionals and how to apply them in code\nWeb development skills to the next level\nJavaScript Core functionality learn about using Math, Strings, literals identifiers and more.\nExperience what can be possible with JavaScript. Learn to create your own immersive web experiences with JavaScript. Make interactive websites.\nLet's start Coding JavaSCript",
      "target_audience": [
        "anyone who wants to create JavaScript code",
        "HTML and CSS web developers who want to add JavaScript",
        "Build a solid base of JavaScript Skills",
        "better understand fundamental concepts in JavaScript",
        "web developers",
        "web page creators"
      ]
    },
    {
      "title": "Learning Objective-C Programming",
      "url": "https://www.udemy.com/course/learning-objective-c-programming/",
      "bio": "Learn how to create code with the C-based programming language at the heart of Mac and iOS applications.",
      "objectives": [
        "use Xcode and Apple development tools to create functional code.",
        "create and customize iOS apps based on Xcode templates."
      ],
      "course_content": {
        "Introduction": [
          "Welcome To Objective-C",
          "Catching Up With Versions"
        ],
        "Working With Xcode": [
          "Getting Started With Xcode",
          "Introducing The Workspace Window",
          "Exploring The Navigation Area",
          "Using The Utilities Area - The Library",
          "Using The Utilities Area - The Inspectors",
          "Editing Code - The Basics",
          "Editing Code - Advanced Features",
          "Finding And Searching",
          "Using The Jump Bar",
          "Working With The Assistant",
          "Tracking Changes With Xcode",
          "Working With Branches",
          "Setting Preferences"
        ],
        "Understanding Objective-C": [
          "The Objective-C Goal - C With Objects",
          "Exploring The Class Hierarchy",
          "Sending Messages",
          "Definitions And Declarations"
        ],
        "Looking At The Structure Of An Objective-C App - The Code Story": [
          "Building MDA App",
          "How Main Works",
          "Exploring The Interface Of The Class",
          "Exploring The Implementation Of The Class",
          "Using @class And #import Directives",
          "Creating A Class",
          "Using The Class",
          "Setting A Breakpoint On The Declaration",
          "Creating The Class Instance"
        ],
        "Using Declared Properties": [
          "Using Declared Properties Today",
          "Adding Attributes To Properties",
          "Synthesizing Properties Directly And Automatically",
          "Fine-Tuning Declared Properties With Getters And Setters"
        ],
        "Managing Memory": [
          "Considering Qualifiers And Decorators",
          "Understanding The Need For Memory Management",
          "Automatic Reference Counting - ARC"
        ],
        "Creating A Class": [
          "Letting Xcode Do The Work",
          "Testing The App",
          "Building The Interface - Part 1",
          "Building The Interface - Part 2",
          "Wiring Up The Interface",
          "Aligning Interface Views - Text Field",
          "Sizing Interface Views - Text Field",
          "Wiring Up The Text Field",
          "Wiring Up The Button",
          "Implementing The Action"
        ],
        "Working With The Collection Classes": [
          "Introducing Collection Classes",
          "Setting Up The Test Class",
          "Setting up The Test Method",
          "Mutable And Immutable Collections",
          "Using Objective-C Literals",
          "Creating An NSDictionary",
          "Enumerating An Array",
          "Using Fast Enumeration",
          "Working With Dictionaries"
        ],
        "Using The Debugger": [
          "Breakpoints Overview",
          "Setting Breakpoints",
          "Exploring Values",
          "Editing Breakpoints",
          "Stepping Through Code",
          "Using NSLog"
        ],
        "Using Protocols And Delegates": [
          "Dealing With The Multiple Inheritance Issue",
          "Looking At A Protocol",
          "Using A Protocol And Delegate",
          "Reviewing A Protocol And Delegate"
        ]
      },
      "requirements": [
        "a fundamental knowledge of general programming concepts"
      ],
      "description": "In this hands-on course, trainer Jesse Feiler will teach you how to build an iOS or OS X app using Objective-C and Xcode. This tutorial series is designed for those who have some programming knowledge, although no experience with Objective-C is required. You will start by learning how to work with Xcode, including how to edit code, use the utility area, find and search, and track changes. From there, Jesse will teach you about Objective-C and how to communicate with messages.\nThis video tutorial will also teach you how to add and customize your own code, create new classes and methods, and manage declared properties. You will also learn how to work with the built-in debugger, as well as use protocols and delegates, work with class extensions, and use blocks. Finally, you will learn how to handle exceptions and use selectors. Once you have completed this computer based training course, you will be fully capable of building your own app from an Xcode template, and be able to customize it to your own preferences.",
      "target_audience": [
        "aspiring developers interested in learning the backbone language of iOS and Mac development."
      ]
    },
    {
      "title": "Microservice Development with Java EE 8: 2-in-1",
      "url": "https://www.udemy.com/course/microservice-development-with-java-ee-8-2-in-1/",
      "bio": "Build Java EE projects with microservices, and deploy them on AWS and Azure.",
      "objectives": [
        "Decompose and refactor monolithic applications into microservices",
        "Monitor, test, secure, and integrate microservices with each other and existing monoliths",
        "Use MicroProfile and Payara Micro to build independent REST services",
        "Dockerize the microservices in preparation for cloud deployment",
        "Deploy containers on Microsoft’s platform Azure",
        "Configure both AWS and Azure clouds for high availability"
      ],
      "course_content": {
        "Java EE 8 Microservices": [
          "The Course Overview",
          "What are Microservices?",
          "Microservices Architectural Advantages and Enhancements",
          "Breaking the Monolith into Microservices",
          "Java (EE) Microservice Frameworks Overview",
          "Installing and Configuring Java, Maven and the IDE",
          "Creating and Running the First Microservice Using Payara Micro",
          "Building Basic RESTful APIs with JAX-RS 2.1",
          "Configuring JAX-RS",
          "Adding Error Handling, Filters and Interceptors with JAX-RS",
          "Microprofile Overview Using CDI and JSON-P",
          "Decomposing an Existing Monolith Application",
          "Stateless Versus Stateful Highly Available Microservices",
          "Finishing the First Microservice with Payara Micro",
          "Creating and Running the Second Microservice Using Dropwizard",
          "Monitoring Microservices with Dropwizard Metrics",
          "Integrating with JAX-RS and HTTP",
          "Integrating with OpenID Connect",
          "Automatically Testing Microservices",
          "Introduction to Spring and Spring Boot",
          "Integrating Spring into a Java EE Environment",
          "Creating the Microservice with Spring Boot and JAX-RS",
          "Creating the Microservice with Spring Boot and Spring MVC",
          "Complete the Application Using All Three Created Microservices",
          "Introduction to Containers and Docker",
          "Building, Packaging and Running Java Microservices",
          "Scalable Fault Tolerant Container Management Systems",
          "Preparing Java Microservices to Run in Highly Scalable Platforms"
        ],
        "Building and Deploying Java EE Microservices on the Cloud": [
          "The Course Overview",
          "Traditional Application Deployment",
          "Cloud Native Architecture",
          "Scalability",
          "Microservices",
          "Intro to MicroProfile and Payara Micro",
          "Building the Customers Microservice",
          "Building the Orders Microservice",
          "Building the Service Aggregator",
          "Building the UI with JSF",
          "Security",
          "Performance Check with JMeter",
          "Introduction to Docker",
          "Dockerfile",
          "Docker Compose",
          "Jenkins Installation and Configuration",
          "Creating the Build Job",
          "Deploying on AWS ECS",
          "Removing AWS ECS Resources",
          "Deploying on Microsoft ACI",
          "Running Container with Microsoft ACI",
          "Migration Techniques",
          "Container Orchestration",
          "Monitoring and Logging"
        ]
      },
      "requirements": [
        "Good knowledge on java is assumed",
        "Basics of Java EE is required"
      ],
      "description": "Java EE application model represents one of the best available design models on which to base the design of your enterprise application.\nThis 2-in-1 training course will address the problems that Java EE developers have been facing for years – breaking the monolith! By the end of this training program, you’ll learn how to build microservices in Java EE 8, enabling you to create highly extendable, scalable, fault tolerant applications that are cloud-ready.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Java EE 8 Microservices, begins with an introduction to microservices, you’ll learn how to start setting up your development environment and toolset. Use tools such as Dropwizard, Payara Micro, and Spring Boot while you build RESTful services with the latest JAX-RS 2.1 standard. Understand how to use Microprofile to optimize Java EE for microservices development. You’ll learn how to break down and refactor monolithic applications into microservices, as well as integrate both architectures in a fail-proof way. Integrate tools such as Docker with Java EE to give you a foundation to build Cloud Native applications. Finally, you’ll find out how to integrate Spring into your development environment and how to apply the best design patterns to build robust microservices.\n\nThe second course, Building and Deploying Java EE Microservices on the Cloud, shows how to build microservices in Java EE using REST APIs in an event driven approach and you’ll build the web layer. You’ll learn to build microservices in Java EE using microprofile and the Payara Micro server. Next, you’ll learn about interacting data services and building web views with JSF, after which we will take a look at application security and performance. From there, we’ll move on to focusing on continuous integration and continuous delivery, and you’ll also learn how to Dockerize your services. Finally, you’ll learn how to deploy the application on the AWS and Azure platforms.\nBy the end of this training program, you will be confident with the tools and techniques that will help you build robust and resilient cloud native applications in Java EE.\nAbout the Authors\nTilen Faganel is the main developer of the frame KumuluzEE, and he received the Java Duke's Choice Award Winner 2015. He is head of development of integration solutions in high-tech start-ups Sunesis, and has worked on numerous projects developing advanced cloud applications for enterprises in Slovenia and abroad.  This is also represented at national and international conferences.\nVasilis Souvatzis is a passionate Java developer focusing on the enterprise world. His university thesis was a Java EE 7 full-stack e-commerce application. He participated in the first NetBeans Day Greece in Athens 2005, where he spoke about his Java EE 7 journey. Loyal NetBeans fan and user, took part in the last NetCAT testing the Java Editor and Glassfish integrations. Interested in new software development trends, making his steps into cloud technologies with a battle-hardened platform proving that Java EE fits the cloud just fine.",
      "target_audience": [
        "Java EE developers who are eager to build and deploy enterprise applications with the JEE 8 microservices architecture on the cloud."
      ]
    },
    {
      "title": "Getting Started with Perl for Beginners",
      "url": "https://www.udemy.com/course/getting-started-with-perl-for-beginners/",
      "bio": "Learn Perl Programming Language Suited to Nearly any Task",
      "objectives": [
        "Use Math and String Operators Properly",
        "Understand Conditional and Comparison Operators"
      ],
      "course_content": {
        "Start with Basics": [
          "Introduct to Perl",
          "Installation & Hello Perl Program, shebang",
          "Whitespace, Semicolons and Scalars",
          "Comment Syntax, Console Input and Chomp",
          "Math and String Operators",
          "Conditional Expressions and Comparison Operators",
          "Boolean Evaluation of Values"
        ]
      },
      "requirements": [
        "Knowledge of Any Programming Language is Helpful",
        "Installation of Perl, if Needed"
      ],
      "description": "Perl is an language originally intended for text manipulation, but has evolved over the years into a general purpose programming language suited to nearly any task. In this course, we’ll learn the core language. While Perl has much in common with earlier C-based languages, it does have some syntactic idiosyncrasies that we must learn.\nWhether you’re new to programming, or coming from a language like C or Java, learning Perl will be an exciting and rewarding experience.\nIn this Course You will Learn\nYour Hello Perl Program\nConsole Input\nMath and String Operators\nConditional Expressions\nI hope you enjoy the course, and I look forward to working with you!",
      "target_audience": [
        "Any Fresher Wish to Learn Basic Perl",
        "To Brush Up Your Perl Knowledge"
      ]
    },
    {
      "title": "JavaScript For Programmers",
      "url": "https://www.udemy.com/course/javascript-for-programmers/",
      "bio": "3 hour Crash Course",
      "objectives": [
        "Software Engineering",
        "JavaScript Learner",
        "React Native",
        "Promises",
        "Await syntax"
      ],
      "course_content": {},
      "requirements": [
        "You'll need to have programming experience in another language."
      ],
      "description": "This is course is a crash 3 hour Course in JavaScript for programmers. If you are programmer and you want to learn JavaScript this is the course for you. JavaScript is a functional programming language and by the end of this course, you'll be able to read and write functional code. We'll discuss arrow function, JSON and map reduce. The course end with you coding exercise that mimics a coding interview.  Each video is approximately 45 minutes and consist of both live coding and slides.  The course is broken into four section. The first section covers the fundamentals: variable and function. Function in JavaScript are unique because they are first class objects, which means that can be easily passed as parameters to other functions. This is one of the key ideas of a functional programming language. In the second section we discuss JavaScript Objects and inheritance model.  All object in JavaScript inherit from a single object. In the third section, we discuss async programming and how you can make web request with JavaScript. In this section we also cover promises and the async/wait keywords. In the final section we discuss array manipulation and provide a sample interview style question for you to tackle.  This is a great class I hope you enjoy talking it.",
      "target_audience": [
        "This course is for software developers, who want to learn JavaScript"
      ]
    },
    {
      "title": "C++23 Fundamentals with Projects & Algorithms",
      "url": "https://www.udemy.com/course/cpp23-fundamentals-projects-algorithms/",
      "bio": "Go beyond the basics—build, debug, and optimize modern C++23 projects with pro tools like CMake and vcpkg.",
      "objectives": [
        "Modern C++23 – Write efficient, maintainable, and modern C++ code using the latest language features.",
        "Using Pro Tools – Build projects with CMake, vcpkg, and third-party libraries like a professional.",
        "Debugging Like a Pro – Learn debugging techniques using the debugger coming with your compiler.",
        "Handleing File I/O – Work with modern C++ file handling using std::filesystem and streams.",
        "Building GUI Apps – Create graphical applications using libraries like SFML and ftxui",
        "Memory Management – Understand RAII, smart pointers, and modern memory management techniques.",
        "Working with Containers – Use STL containers effectively and understand their best use cases.",
        "Writing Modular Code – Build scalable projects with C++20 modules and best design practices.",
        "Optimizing Performance – Write high-performance C++ using smart pointers, compile time computations, move semantics, and efficient algorithms."
      ],
      "course_content": {},
      "requirements": [
        "No prior C++ experience needed – Just bring your curiosity and eagerness to learn!",
        "A computer with internet access – You'll need to download tools like CMake, a compiler, and vcpkg.",
        "Basic programming knowledge (optional) – Familiarity with any programming language helps but isn’t required.",
        "Strong willingness to learn – C++ can be challenging, but with dedication, you’ll master it!"
      ],
      "description": "Master Modern C++ with Real-World Projects & Industry Tools\nC++ is one of the most powerful programming languages, but learning it the right way makes all the difference. C++23 Fundamentals with Projects & Algorithms is not just another beginner’s course—it’s designed to teach you modern C++ the way professionals use it.\nUnlike courses that focus on small, standalone code snippets, this course immerses you in real-world development from the start. You'll build structured projects using industry-standard tools like modern CMake, vcpkg, and third-party libraries—the same tools used by professional C++ developers.\nWhat You'll Learn:\nC++ Standards: C++11, C++14, C++20, and C++23 – Master the latest features while ensuring you can work with and improve legacy codebases.\nStructured projects, not just toy examples – Learn to organize code across multiple files and build projects like in real development environments.\nIndustry-standard tools – Get hands-on experience with modern CMake, vcpkg, and external libraries to develop scalable applications.\nAlgorithms & data structures – Strengthen your problem-solving skills with key algorithmic concepts.\nDebugging & compile time computations – Write efficient, compile-time friendly C++ and learn how to troubleshoot issues.\nFile I/O, GUI development & more – Work with files, create user interfaces, and explore advanced C++ topics.\nThis course is built by the instructor of the popular C++20 Masterclass and pushes things even further—bringing you closer to how C++ is actually used in practice. Whether you're new to C++ or looking to modernize your skills, this course will equip you with the right tools and mindset for real-world development.",
      "target_audience": [
        "Anyone serious about learning C++ – We teach C++ the way professionals use it, with modern CMake, vcpkg, third-party libraries, debugging, and more.",
        "Beginners with no C++ experience – If you’re new to programming or switching to C++, this course will guide you from the ground up",
        "Self-taught programmers – If you've dabbled in C++ but struggle with best practices, modern tools, and real-world projects, this course is for you.",
        "Students and aspiring developers – Ideal for those looking to build a strong foundation in C++ for software development, game dev, or embedded systems.",
        "Professionals in other languages – If you know Python, Java, or C# and want to add C++ to your skill set, this course will get you up to speed."
      ]
    },
    {
      "title": "Automata Theory: inside a RegExp machine",
      "url": "https://www.udemy.com/course/automata-theory-building-a-regexp-machine/",
      "bio": "Deep dive into state machines, Finite automata, and Regular expressions",
      "objectives": [
        "Theory of Computation",
        "State machines / Finite automata",
        "NFA and DFA",
        "Automata Theory",
        "Build a full RegExp machine",
        "Graphs, traversal, states and transitions"
      ],
      "course_content": {},
      "requirements": [
        "Basic data structures and algorithms",
        "Graphs, trees, traversal"
      ],
      "description": "Course overview\nState machines — the fundamental concept used today in many practical applications, starting from UI programming like React, automated reply systems, lexical analysis in parsers and formal language theory — i.e. the RegExp machines, — and up to real life use cases, such as simple traffic lights, vending machines, and others.\nThe state machines are backed by the larger theoretical field of computer science known as Theory of Computation, and also by its direct theoretical model — the Automata Theory.\nIn this class we study the Automata Theory on the practical example of implementing a Regular Expressions machine.\n\n\nWhy to take this class?\nIt’s not a secret, that big tech companies, such as Google, Facebook, etc. organize their recruiting process around generalist engineers, which understand basic fundamental systems, data structures, and algorithms. In fact, it’s a known issue in tech-recruiting: there are a lot of “programmers”, but not so many “engineers”. And what does define an “engineer” in this case? — an ability so solve complex problems, with understanding (and experience) in those generic concepts.\nAnd there is a simple trick how you can gain a great experience with transferable knowledge to other systems. — You take some complex theoretical field, which might not (yet) be related to your main job, and implement it in a language you’re familiar with. And while you build it, you learn all the different data structures and algorithms, which accommodate this system. It should specifically be something generic (for example, State machines), so you can further transfer this knowledge to your “day-to-day” job.\nIn this class we take this approach. To study Automata “Theory” we make it more practical: we take one of its widely-used applications, the lexical analysis, and pattern matching, and build a RegExp machine.\nNot only we’ll completely understand how the Regular Expressions work under the hood (and what will make their usage more professional), but also will be able to apply this knowledge about formal grammars, languages, finite automata — NFAs, DFAs, etc — in other fields of our work.\n\n\nWho this class is for?\nFor any curious engineer willing to gain a generic knowledge about Finite Automata and Regular Expressions.\nNotice though, that this class is not about how to use regular expressions (you should already know what a regular expression is, and actively use it on practice as a prerequisite for this class), but rather about how to implement the regular expressions — again with the goal to study generic complex system.\nIn addition, the lexical analysis (NFAs and DFAs specifically) is the basis for the parsers theory. So if you want to understand how parsers work (and more specifically, their Tokenizer or “Lexer” module), you can start here too. The path for a compiler engineer starts exactly from the Finite automata and lexical analyzer.\nWhat are the features of this class?\nThe main features of these lectures are:\nConcise and straight to the point. Each lecture is self-contained, concise, and describes information directly related to the topic, not distracting on unrelated materials or talks.\nAnimated presentation combined with live-editing notes. This makes understanding of the topics easier, and shows how (and when at time) the object structures are connected. Static slides simply don’t work for a complex content!\n\n\nWhat is in the course?\nThe course is divided into three parts, in total of 16 lectures, and many sub-topics in each lecture. Below is the table of contents and curriculum.\nPart 1: Formal grammars and Automata\nIn this part we discuss the history of State machines, and Regular expressions, talk about Formal grammars in Language theory. We also consider different types of Finite automata, understanding the differences between NFA, ε-NFA, and DFA.\nPart 2: RegExp NFA fragments\nIn this part we focus on the main NFA fragments, the basic building blocks used in RegExp automata. We study how by using generic principle of composition, we can obtain very complex machines, and also to optimize them.\nPart 3: RegExp machine\nFinally, we implement an actual test method of regular expressions which transit from state to state, matching a string. First we understand how an NFA acceptor works by traversing the graph. Then we transform it into an NFA table, and eventually to a DFA table. We also talk and describe in detail DFA minimization algorithm.\n\n\nI hope you’ll enjoy the class, and will be glad to discuss any questions and suggestion in comments.\nSincerely,\nDmitry Soshnikov",
      "target_audience": [
        "Any curious engineer willing to tackle a complex project building a RegExp machine based on Finite automata"
      ]
    },
    {
      "title": "108 C++ Programming Coding Practices for Absolute Beginners",
      "url": "https://www.udemy.com/course/practical-c-programming-practices-100-common-projects/",
      "bio": "Master C++ faster and Improve your C++ programming skill with 108 hands-on coding practices and real-world projects.",
      "objectives": [
        "Level up your C++ programming skill with over 100+ beginners best practices",
        "Understanding local and global variable",
        "How to accept strings from Users",
        "How to add 2 Numbers",
        "How to use math operators",
        "How to add n Numbers",
        "How to find Even and Odd Numbers",
        "How to add digits from user",
        "How to find Greatest of three Numbers",
        "How to swap numbers using variables",
        "How to calculate the percentage",
        "How to check a Leap Year",
        "And lots more..."
      ],
      "course_content": {
        "108 C++ programming BEST practices for absolute beginners": [
          "Practice 1. Hello World",
          "Practice 2. Use of Variables",
          "Practice 3. Understanding local and global variable",
          "Practice 4. User Input",
          "Practice 5. How to accept strings from Users",
          "Practice 6. How to add 2 Numbers",
          "Practice 7. How to use maths operators",
          "Practice 8. How to add n Numbers",
          "Practice 9. How to use if Statement",
          "Practice 10. How use Nested if Statement",
          "Practice 11. How to use if else Statement",
          "Practice 12. How to use else if Statement",
          "Practice 13. How to use switch Statement",
          "Practice 14. Nested switch Statement",
          "Practice 15. How to use while Loop",
          "Practice 16. do while loop",
          "Practice 17. How to use for loop",
          "Practice 18. Prime Numbers",
          "Practice 19. Area of a Triangle",
          "Practice 20. How to find Even and Odd Numbers",
          "Practice 21. How to add digits from user",
          "Practice 22. How to find Greatest of three Numbers",
          "Practice 23. How to swap numbers using variables",
          "Practice 24. How to swap Numbers using 2 variables",
          "Practice 25. How to calculate the percentage",
          "Practice 26. How to calculate Gross Salary",
          "Practice 27. How to calculate Simple Interest",
          "Practice 28. How to check a Leap Year",
          "Practice 29. How to get HCF using Recursive Function",
          "Practice 30. How to calculate the LCM",
          "Practice 31. How to calculate LCM and HCF",
          "Practice 32. How to get Factorial of nCr and nPr",
          "Practice 33. How to reverse numbers",
          "Practice 34. How to reverse arrays of Numbers",
          "Practice 35. How to check for a Palindrome",
          "Practice 36. How to generate Prime Numbers",
          "Practice 37. List of Prime Numbers",
          "Practice 38. How to check for Armstrong Numbers",
          "Practice 39. How to Generate Armstrong Numbers",
          "Practice 40. Calculate Factorial",
          "Practice 41. How to calculate Factorial using Recursive function",
          "Practice 42. How to create a Fibonacci Series",
          "Practice 43. Fibonacci Series using Recursive Function",
          "Practice 44. Mathematical Functions",
          "Practice 45. How to generate Random Numbers",
          "Practice 46. How to convert from Binary to Hexadecimal",
          "Practice 47. How to convert from Binary to Octal",
          "Practice 48. How to convert from Binary to Decimal",
          "Practice 49. How to convert from Decimal to Octal",
          "Practice 50. How to convert from Decimal to Binary",
          "Practice 51. How to convert from Decimal to Bitwise",
          "Practice 52. How to find first and last number in an Array",
          "Practice 53. How to pass Arrays to Functions",
          "Practice 54. How to find maximum element in Array",
          "Practice 55. How to find the minimum element in an Array",
          "Practice 56. How to Reverse Array Elements",
          "Practice 57. How to insert a new element into an Array",
          "Practice 58. How to delete an Element in Array",
          "Practice 59. How to Merge 2 Arrays",
          "Practice 60. How to add two matrices",
          "Practice 61. How to subtract two Matrices",
          "Practice 62. How to Transpose a Matrix",
          "Practice 63. How to multiply 2 matrices",
          "Practice 64. Simple String Format",
          "Practice 65. How to check for Length of String using for loop",
          "Practice 66. How to check for length of String using function",
          "Practice 67. How to compare Strings using for loop",
          "Practice 68. How to compare two Strings using Function",
          "Practice 69. How to copy Strings",
          "Practice 70. How to copy strings using strcpy",
          "Practice 71. How to make concatenation using a for loop",
          "Practice 72. How to concatenation using strcat",
          "Practice 73. How to Reverse a string using while loop",
          "Practice 74. How to Reverse a String using strrev",
          "Practice 77. How to convert from Uppercase to Lowercase",
          "Practice 78. How to convert from Uppercase to Lowercase using strlwr",
          "Practice 79. How to convert from Uppercase to Lowercase using while loop",
          "Practice 80. How to convert from Lowercase to Uppercase using strupr",
          "Practice 82. How to find the frequency occurrence of a Character",
          "Practice 83. How to check Vowels and Consonants",
          "Practice 84. How to get number of Vowels, Consonants, Digits and Whitespaces",
          "Practice 85. How to search for an Element in an Array",
          "Practice 86. How to check for an Element in an Array using Recursive function",
          "Practice 87. How to sort Array using Bubble",
          "Practice 88. How to sort Arrays using Insertion",
          "Practice 89. How to sort Arrays using Selection method",
          "Practice 90. How to call by Value",
          "Practice 91. How to call by Reference",
          "Practice 92. How to call by Pointer",
          "Practice 93. How to Write to a file",
          "Practice 94. How to Read from a file",
          "Practice 95. How to add 2 Numbers using function",
          "Practice 96. How to subtract two Numbers using function",
          "Practice 97. How to create Classes",
          "Practice 98. How to Pass Argument to Function",
          "Practice 99. How to use inline function",
          "Practice 100. How to check length of string using Pointer",
          "Practice 101. How to create a Pyramid pattern",
          "Practice 102. How to create a Right Angled Triangle",
          "Practice 103. How to a Diamond pattern",
          "Practice 104. How to create a Right Angle Triangle pattern",
          "Practice 105. How to create Alphabet pattern",
          "Practice 106. How to create a Pascal Triangle pattern",
          "Practice 107. How create a Floyd_s Triangle",
          "Practice 108. How to create Numeric Pyramid pattern",
          "Congratulations! Keep Learning..."
        ]
      },
      "requirements": [
        "This courses requires the basics of C++ programming knowledge",
        "A computer (Windows/Mac/Linux)"
      ],
      "description": "Welcome to Practical C++ Programming Practices (100+ Common Projects)! Learning C++ programming language and understanding C++ programming language are two different things. Almost every student enjoy learning C++ programming language. But, only a few number of these students actually understand C++ programming language afterwards. This is where the remaining students are left behind and kept wandering from one course to another over the internet to get the best knowledge on understanding C++ programming language with cups of coffee on their table everyday.\nAre you a beginner looking to master C++ programming through practical projects? “108 C++ Programming Practices/Common Projects to Improve Your Coding Skill” is the perfect course for you! This comprehensive course offers a hands-on approach to learning C++, designed to elevate your coding skills from the basics to advanced concepts.\nWhat You Will Learn:\nGetting Started:\nHow to write “Hello World” in C++\nAccepting input from users\nSumming two integers from user input\nMathematical Operations:\nBuilding a Simple Interest Calculator\nMultiplying float numbers\nFinding ASCII values\nGetting quotient and remainder\nAdding complex numbers\nCalculating the sum of digit numbers\nGeometry and Patterns:\nCreating Floyd’s Triangle\nCalculating the area of a circle, rectangle, square, and triangle\nCalculating the volume of a cube, cylinder, and sphere\nGenerating random numbers\nReal-World Applications:\nCalculating gross salary and percentages\nWriting programs to shut down the computer, get an IP address, and handle date and time\nConditional Statements:\nDetecting even and odd numbers, vowels and consonants, and the greatest of three numbers\nFinding roots of quadratic equations and detecting leap years\nDisplaying student grades\nLoops and Functions:\nSumming a given number\nCalculating factorials, creating multiplication tables, and generating Fibonacci sequences\nString and Array Manipulation:\nReversing numbers and strings, checking for palindromes, and creating prime numbers\nCalculating HCF and LCM, detecting and generating Armstrong numbers\nCreating various patterns like half pyramids, full pyramids, inverted half pyramids, and Pascal’s triangle\nData Structures:\nUsing structures and unions to handle complex data\nCreating and manipulating multidimensional arrays\nFile Handling:\nWriting to, reading from, copying, and deleting files\nConversions and Bitwise Operations:\nConverting between binary, decimal, octal, and hexadecimal formats\nBuilding binary patterns\nAdvanced Patterns and Projects:\nCreating diamond patterns, star hash pyramids, nested star hash pyramids, alphanumeric patterns, and numeric diamond patterns\nBuilding simple calculators and more\nWhy Enroll?\nThis course offers 108 practical projects that cover a wide range of C++ programming concepts, making it perfect for beginners who want to improve their coding skills. Each project is designed to provide a hands-on learning experience, helping you to understand and apply C++ programming in real-world scenarios.\nLearn and practice C++ programming through 108 real-world projects. This course covers:\nWriting “Hello World” in C++\nAccepting user input and summing integers\nBuilding calculators, including Simple Interest and Gross Salary Calculators\nMultiplying float numbers and finding ASCII values\nSwapping numbers and strings using various methods\nAdding complex numbers and calculating sums of digits\nCreating geometric shapes and patterns, including Floyd’s Triangle, pyramids, and diamonds\nGenerating random numbers and calculating percentages\nDeveloping programs for system utilities, such as shutting down the computer and getting IP addresses\nImplementing mathematical algorithms like detecting even/odd numbers, prime numbers, and solving quadratic equations\nCreating sequences like Fibonacci and Pascal’s Triangle\nManipulating arrays and strings, including sorting, reversing, and finding lengths\nPerforming matrix operations: addition, subtraction, multiplication, and transposition\nHandling files: writing, reading, copying, and deleting\nConverting between different numerical bases (binary, decimal, octal, hexadecimal)\nExploring advanced structures and unions for managing complex data\nImplementing best practices for efficient and clean C++ programming\nElevate your C++ skills with comprehensive exercises designed to take you from beginner to advanced coding proficiency. Enroll now and start building your C++ expertise through practical, hands-on projects!\nBy the end of this course, you will have a solid understanding of C++ programming and the ability to build various applications and solve complex problems with confidence. Join us and take the first step towards becoming a proficient C++ programmer!\n100+ C++ programming best practices for absolute beginner is a comprehensive and concise guide with over 10 hours of content that is designed to pick up every interested student from the state of “zero-knowledge” to a state of “Hero-knowledge” in C++ programming with lots of practical C++ projects.\nWhy Must I Take This Course And What Benefit Is It To ME As A C++ Programmer?\nThis is the only course on the internet that will help you to become a certified and successful programmer with an in-depth knowledge of the entire aspect of C++ programming and prepare you with the required skills necessary to build you to face job interviews and get employed as a full stack Software developer.\n\n\nEmenwa Global instructors are industry experts with years of practical, real-world experience building software at industry leading companies. They are sharing everything they know to teach thousands of students around the world, just like you, the most in-demand technical and non-technical skills (which are commonly overlooked) in the most efficient way so that you can take control of your life and unlock endless exciting new career opportunities in the world of technology, no matter your background or experience.",
      "target_audience": [
        "Anyone looking to level up their skills and master C++ programming language",
        "Anyone who wants to learn to code"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/easy-python-programming-for-absolute-beginners-sql-in-python/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": ".NET Programming for Beginners - Windows Forms with C#",
      "url": "https://www.udemy.com/course/dotnet-programming-beginners-windows-forms/",
      "bio": "Get started with .NET C# Windows Forms (WinForms) Programming in Visual Studio using the C# Language",
      "objectives": [
        "How to implement Windows Forms projects in .NET using Visual Studio and C#.",
        "How to implement concepts such as: forms design, event handling and multithreading in .NET.",
        "How to create deployment packages and installers for your .NET Windows Forms apps using ClickOnce in Visual Studio.",
        "How to Use Visual Studio as a development tool for .NET Windows Forms apps."
      ],
      "course_content": {},
      "requirements": [
        "Basic computer programming principles and fundamentals"
      ],
      "description": "In this course for beginners, you will get started with .NET C# Windows Forms (WinForms) Programming using Visual Studio and the C# Programming Language. You will learn the basics of .NET Windows Forms, event handling, multithreading and how you can create deployment packages for your .NET Windows Forms programs, directly via Visual Studio, using the ClickOnce component.\nLast but not least, throughout the course, we will be developing in different phases, a Text Editor demo app, using Visual Studio, C# and Windows Forms.\n\n\nWHAT OTHER STUDENTS SAY ABOUT THE COURSE:\n\"Very good! At point! Very Clear!\"\n\"Excellent - well structured and concise!\"\n\"Great lectures!\"\n\"Great course with clear explanations.\"\n\n\nMORE ABOUT THE COURSE\nVisual Studio and C#, is a very powerful combination, that allows Software Developers to develop a wide range of useful applications. With Windows Forms, you can create user-friendly Graphical User Interface (GUI) applications, that efficiently interact with the end users and perform different tasks fast and easy.\nKnowing how to develop in Visual Studio, using the C# Programming Language and Windows Forms, is a very important skill. I have been working with these types of projects for over 15 years and via this course, I'm sharing my expertise, as well as useful tips towards an efficient programming style, when developing Windows Forms projects in Visual Studio.\nVia my course \".NET Programming for Beginners: Windows Forms (C#)\", you will get introduced to Windows Forms programming, using Visual Studio and the C# Programming Language.\nThrough the introductory section, you will learn what Windows Forms are, what is their architecture, about Visual Studio as a Integrated Development Environment (IDE), as well as, we will see a demo of the Text Editor demo app, that we will be developing throughout the course.\nThen, you will learn the basics of Windows Forms, such as controls and event handling. After that, we will talk more about event handling, and how you can provide a richer interaction between your application and the end user, by combining events.\nMultithreading is also a very important aspect in Windows Forms programming. To this end, you will learn what is multithreading and how you can easily implement it in your .NET Windows Forms projects, using the BackgroundWorker component.\nAfter you complete the development of a software application using .NET Windows Forms, the next step is to distribute it using a deployment package. I have included a relevant section in the course, via which you will learn, how to easily create deployment packages for your .NET Windows Forms applications, which among other, enable your applications to be self-updating.\nLast but not least, you will learn how to connect to SQL Server and retrieve data into a DataGridView control on your Windows Form, as well as, how to update back the SQL Server database via your Form.\n\n\nAFTER THE COURSE:\nYou will know what Windows Forms (WinForms) projects are in .NET Framework and Visual Studio.\nYou will know how to create Windows Forms projects in Visual Studio and build Graphical User Interface (GUI) applications using C#.\nYou will know how to implement event handling and multithreading in your .NET Windows Forms projects.\nYou will know how to create deployment packages for your .NET applications using the ClickOnce component in Visual Studio.\nYou will be able to connect your Windows Forms .NET application to SQL Server and retrieve data.\n\n\nPREREQUISITES:\nBasic computer programming principles and fundamentals\n\n\nDEMO ENVIRONMENT:\nFor the demos, we will be working with Visual Studio 2019 and .NET Framework on Windows 10\nAlso, for some demos, we will be accessing a test SQL Server instance\n\n\nTHIS COURSE CONTAINS/OFFERS:\n5 hours of high-quality video lectures\nLive demonstrations and hands-on guides\nUseful quizzes for testing your knowledge on each section\nMany downloadable resources\nA practice test in the end of the course\nAbility to ask the instructor questions via the Q&A section\nCertificate on course completion",
      "target_audience": [
        "People who want to start developing Windows Forms applications in .NET using Visual Studio and C#.",
        "People who want to become familiar with Visual Studio as a software development environment.",
        "People who want to learn the full process of developing and deploying a .NET application."
      ]
    },
    {
      "title": "Dynamic Link Libraries (Windows Programming With C/C++)",
      "url": "https://www.udemy.com/course/dynamic-link-libraries-windows-programming-with-cc/",
      "bio": "Learn all about the DLLs in this course. Explained the Load Time, Run time and delay Linking!!",
      "objectives": [
        "Understanding on Dynamic Linking Concept in DLLs",
        "Develop your own DLL in C/C++",
        "Use the DLL in any other C/C++ client application",
        "Different type of dynamic linking like load time, run time and delay loading"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic Concepts On Dynamic Link Libraries": [
          "Compilation and Linking",
          "Sections of a Process in Memory",
          "DLL Basics",
          "Working of DLL"
        ],
        "Building And Using A DLL": [
          "Creating A DLL using Visual C++ (Visual Studio 2019)",
          "Using the DLL with an executable Module"
        ],
        "DLL Advanced Topics": [
          "Load Time Linking of Dynamic Link Library",
          "Run Time Linking Of DLL",
          "DLL Entry Point Functions Introduction",
          "DLL Entry Point Functions Demo",
          "Concept Of Delay Loading a DLL",
          "Demo For Delay Loading A DLL"
        ],
        "Additional Lectures": [
          "What Are Function Forwarders",
          "What is DLL Redirection"
        ],
        "Final Words": [
          "Thank You!!"
        ]
      },
      "requirements": [
        "You should be aware about the C/C++ programming language with hands on exposure"
      ],
      "description": "In this course, you will learn about Dynamic Linking Concepts. What are the DLLs and how they are loaded into memory and how they are used by the applications in C/C++!!\nIn this course, you will learn about the 3 types of dynamic linking implementations. They are given as below:\nThe Load Time Linking which is the most expensive in terms of the application startup.\nThe Run time linking which is less expensive compared to load time as it's done on need basis. The use of APIs and calling the functions inside the DLL has been explained in this course in detail.\nThe Delay Loading DLL: Which is similar to load time linking but the DLL is not loaded actually in the process address space till one of the exported functions get called from your client applications.\nThe Demo of each of the concept is available with important study material which is downloadable!!\nAfter completing this course, you will be able to :\nExplain the difference between an application and a DLL\nDevelop and distribute the APIs written by you (specific to some domain expertise like Data Structures/Stock Market/Banking etc)\nDevelop the application using the DLLs created by you or provided by some other vendor.",
      "target_audience": [
        "This course is for those who are professionals C/C++ programmers and want to learn and implement the concepts related to the dynamic linking and loading for DLLs"
      ]
    },
    {
      "title": "6 Practice Tests for any C++ Certification",
      "url": "https://www.udemy.com/course/6-practice-tests-for-any-cpp-certification/",
      "bio": "Test your C++ Knowledge with 6 Practice Tests and Brief Explanation",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Course Overview:\nThis comprehensive course is specifically designed to provide aspiring C++ developers with the necessary practice and preparation for any C++ certification exam. With a focus on practical application, the course includes six carefully crafted practice tests that cover a wide range of topics and difficulty levels. By taking these tests, you will not only assess your current knowledge and skills but also gain valuable experience in answering exam-style questions.\nCourse Features:\nSix Practice Tests: The course offers six full-length practice tests, each containing a diverse set of questions. By completing these tests, you will enhance your test-taking abilities and become familiar with the types of questions you may encounter during the certification process.\nPractical Application: The course emphasizes the practical application of C++ concepts and techniques. Each practice test includes questions that require you to apply your knowledge to real-world scenarios, enhancing your problem-solving skills and reinforcing your understanding of C++ programming principles.\nDetailed Explanations: Following each practice test, you will receive detailed explanations for each question.\nPassing Criteria: To successfully pass the course, you must achieve a minimum score of 70% on each of the six practice tests.\nWho Can Enroll:\nThis course is suitable for individuals at various stages of their C++ programming journey. Whether you are a beginner seeking to gain a solid foundation in C++ or an experienced developer aiming to validate your skills through certification, this course will provide the necessary practice and guidance. It is ideal for:\nC++ enthusiasts eager to test their knowledge and skills.\nStudents preparing for C++ certification exams.\nProfessionals seeking to enhance their employability by obtaining a C++ certification.\nProgrammers looking to expand their proficiency in C++.\nRegards,",
      "target_audience": [
        "C++ enthusiasts eager to test their knowledge and skills.",
        "Students preparing for C++ certification exams.",
        "Professionals seeking to enhance their employability by obtaining a C++ certification.",
        "Programmers looking to expand their proficiency in C++."
      ]
    },
    {
      "title": "Master TradingView Pine Script Advanced Programming with AI",
      "url": "https://www.udemy.com/course/master-tradingview-pine-script-advanced-programming/",
      "bio": "Comprehensive guide to Pine Script fundamentals, advanced indicators, AI-powered trading strategies and automated alerts",
      "objectives": [
        "Master Pine Script fundamentals including syntax, structure, variables, functions, loops, conditional logic, execution models, and time series manipulation",
        "Master Pine Script v6's critical updates including strict type handling, dynamic requests, improved visual elements, advanced collection manipulation techniques",
        "Implement advanced Pine Script concepts including type system, qualifiers, tuples, and user-defined functions",
        "Build sophisticated technical indicators using Moving Averages, ADX, DMI, and MACD with custom configurations",
        "Create complete trading strategies including Open/Close crossover, ADXVMA, and Multiple MA Pyramid systems",
        "Apply artificial intelligence techniques to enhance trading strategies and optimize performance",
        "Design an AI-powered trading system using Supertrend and Moving Average indicators with automated parameter optimization",
        "Execute professional strategy testing including backtesting, forward testing, and performance optimization",
        "Implement comprehensive alert systems using alert(), alertcondition(), and strategy execution events",
        "Master the Strategy Tester for thorough analysis and strategy refinement"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction to the “Master TradingView Pine Script Advanced Programming with AI"
        ],
        "TradingView Pine Script Essentials": [
          "Introduction to The Pine Script Editor",
          "Creating Your First Pine Script",
          "Introduction to Indicators and Strategies",
          "Pine Script Execution Model",
          "Pine Script Time Series Essentials",
          "Basic Structure of Pine Script",
          "Identifiers and Operators in Pine Script",
          "Variable Declarations in Pine Script",
          "Conditional Structures in Pine Script",
          "Loops in Pine Script",
          "Introduction to the Type System of Pine Script",
          "Decoding Pine Script Qualifiers",
          "Understanding Pine Script Types",
          "Exploring the Significance of \"na\" Value in Pine Script",
          "Mastering Tuples in Pine Script",
          "User-Defined Functions in Pine Script"
        ],
        "Mastering Pine Script v6 Enhancements": [
          "Pine Script v6: Type System & Core Language Changes",
          "Pine Script v6: Data Access & Visual Elements",
          "Pine Script v6: Strategy Changes & Collections"
        ],
        "Creating Advanced Indicators in Pine Script": [
          "Creating Moving Average ADX DMI Indicator in Pine Script"
        ],
        "Creating, Backtesting, Forward Testing and Optimizing Trading Strategy": [
          "Creating Open/Close Crossover MA Strategy in Pine Script",
          "Pine Script Strategy Tester Overview",
          "How to Backtest and Forward Test Trading Strategy",
          "How to Optimize Trading Strategy"
        ],
        "Developing Trading Strategies with AI in TradingView Pine Script": [
          "Developing Trading Strategies with AI in TradingView Pine Script",
          "Developing AI-Assisted Trading Strategy with Supertrend and SMA Indicators"
        ],
        "Creating Advanced Trading Strategies in Pine Script": [
          "Creating ADXVMA Strategy in Pine Script",
          "Creating Multiple MA Pyramid Strategy in Pine Script",
          "Creating MACD Ultimate Strategy in Pine Script"
        ],
        "Alerts in TradingView Pine Script": [
          "Overview of Alerts in Indicators and Strategies in Pine Script",
          "How to setup and use alerts with alert () function",
          "How to setup and use alerts with alertcondition() function",
          "How to setup and use alerts in strategies on order fill event"
        ],
        "Conclusion": [
          "Summary of Key Takeaways from this Course",
          "Resources for Further Learning and Development in TradingView Pine Script"
        ]
      },
      "requirements": [
        "Have a free TradingView account",
        "No programming experience needed. You will learn everything you need to know"
      ],
      "description": "Elevate your trading expertise with our enhanced \"Master TradingView Pine Script Advanced Programming\" course, now featuring revolutionary AI integration modules. This comprehensive program delivers 33 expert-crafted lessons across 10+ hours, combining traditional technical analysis with cutting-edge artificial intelligence applications.\nThe course foundation builds systematically through TradingView Pine Script Essentials, covering everything from basic editor operations to advanced programming concepts. Master the creation of sophisticated indicators and strategies, including the Moving Average ADX DMI Indicator and various trading strategies like ADXVMA and MACD Ultimate.\nThe newly added \"Mastering Pine Script v6 Enhancements\" section keeps you at the cutting edge of TradingView's latest scripting capabilities. Through three comprehensive bonus lessons, you'll explore critical upgrades to Pine Script's type system, dynamic data access improvements, visual element enhancements, and significant strategy function changes. Learn how to adapt existing scripts to v6 compatibility while leveraging powerful new features like dynamic request capabilities, enhanced strategy exit parameters, and negative array indices. This section ensures your trading systems remain current and take full advantage of TradingView's most advanced programming features, future-proofing your algorithmic trading skills.\nOur newly introduced AI modules represent a significant advancement in trading strategy development. Learn to harness artificial intelligence for strategy creation and optimization, and master practical AI implementation through hands-on experience with Supertrend and Moving Average indicators. These groundbreaking lessons demonstrate how to combine traditional technical analysis with AI capabilities for more robust trading systems.\nThe course provides comprehensive coverage of strategy development, guiding you through every crucial aspect from conception to implementation. You'll master systematic backtesting techniques using TradingView's Strategy Tester, learn to optimize strategy parameters while avoiding overfitting, and understand forward testing methodologies for real-market validation. The integration of AI-enhanced trading strategies introduces powerful new capabilities, including pattern recognition, automated parameter optimization, and machine learning-based signal generation.\nThrough hands-on lessons in strategy creation, you'll learn to develop robust trading systems that can adapt to various market conditions and timeframes. The course demonstrates how to combine multiple technical indicators effectively, implement sophisticated entry and exit rules, and incorporate dynamic risk management systems. Advanced topics include pyramiding techniques, position sizing optimization, and the development of comprehensive alert systems for automated trading signals.\nPractical examples showcase strategy development across different market types and conditions, from trending to ranging markets. You'll gain expertise in fine-tuning strategies using both traditional optimization methods and AI-assisted approaches, ensuring your trading systems remain effective across varying market cycles.\nWhether you're beginning your trading journey or seeking to incorporate AI into your existing strategies, this course offers the perfect blend of traditional technical analysis and modern artificial intelligence applications. Transform your trading approach with advanced scripting capabilities and AI-powered decision-making tools.\n\n\nIn this course you will learn:\n\n\nBuilding your first Pine Script: A step-by-step guide\nUnderstanding the Pine Script execution model\nMastering Pine Script time series fundamentals\nCore components and structure of Pine Script\nMastering identifiers and operators in Pine Script\nComprehensive guide to variable declarations\nAdvanced conditional structures in Pine Script\nWorking with loops: Implementation and best practices\nDeep dive into the Pine Script type system\nComplete guide to Pine Script data types\nUnderstanding and implementing Pine Script qualifiers\nAdvanced tuple manipulation in Pine Script\nCreating and optimizing user-defined functions\nMastering strict type enforcement and lazy evaluation in Pine Script v6\nImplementing dynamic timeframe requests and updated visual elements in Pine Script v6\nImplementing strategy improvements and collection manipulation techniques in in Pine Script v6\nBuilding a sophisticated Moving Average ADX DMI indicator\nDeveloping an Open/Close crossover MA trading strategy\nIntegrating AI techniques in Pine Script trading strategies\nMastering the Pine Script Strategy Tester\nComprehensive guide to strategy backtesting and forward testing\nStrategy optimization techniques and best practices\nCreating an AI-enhanced trading strategy with Supertrend and Moving Average indicators\nDeveloping an advanced ADXVMA trading strategy\nBuilding a Multiple MA Pyramid trading system\nImplementing the MACD Ultimate trading strategy\nImplementing alerts using the alert() function\nCreating advanced alerts with alertcondition() function\nConfiguring strategy alerts for order execution events",
      "target_audience": [
        "Beginner Level Pine Script Developers interested to learn in-depth Pine Script",
        "Traders of All Levels, Interested to Create Custom Trading Strategies and Alerts",
        "Traders of All Levels, Interested in Automated Trading",
        "Investors Interested In Custom Strategies and Automated Solutions",
        "Financial Analysts Interested In Pine Script Programming",
        "Software Developers Interested to Earn in the Growing Niche",
        "Anybody Looking to Learn Software Development To Earn Money Online"
      ]
    },
    {
      "title": "Julia Programming for Machine Learning",
      "url": "https://www.udemy.com/course/julia-programming-language/",
      "bio": "Learn Fundamentals of Julia Programming with exploration to Data Analysis and Machine Learning : Ultimate Guide",
      "objectives": [
        "All fundamentals of Julia programming, Julia syntax for coding, DataTypes, Data-Structures in Julia.",
        "Defining and working with Functions, Methods, Constructors, Macros in Julia programming environment.",
        "Working with DataFrames, TimeSeries for Data Manipulation in Julia.",
        "Date and Time objects, manipulating Period objects in Julia.",
        "Usage of Julia packages for solving Machine Learning problems.",
        "Usage of Data Visualization tools in Julia."
      ],
      "course_content": {
        "Introduction": [
          "Welcome and Getting Started",
          "Installation of Julia and Development Environment",
          "Writing First Julia Program",
          "Resources in this Course here..."
        ],
        "Data Types and Data Structures": [
          "Integer, Float and Rational Numbers",
          "Arithmetic Operations on Real Numbers",
          "Complex Numbers",
          "Comparison and Logical Operators",
          "Strings and Characters",
          "Symbols and Expressions",
          "Basic I/O",
          "Basic I/O Exercise Solution",
          "Tuples",
          "Usage of Dot Syntax for Broadcasting Operations",
          "Arrays - Part I",
          "Arrays - Part II",
          "Arrays - Part III",
          "Arrays Exercise Solution",
          "Dictionaries",
          "Dictionaries Exercise Solution",
          "File I/O",
          "Section 2 Exercise - Two Homework Tasks",
          "Section 2 Exercise - Task I Solution",
          "Section 2 Exercise - Task II Solution"
        ],
        "Control Flow": [
          "Compound Expressions",
          "Conditional Evaluation: if-elseif-else syntax",
          "Conditional Evaluation Exercise Solution",
          "Repeated Evaluation: for loop",
          "Usage of break and continue",
          "Repeated Evaluation: while loop",
          "Repeated Evaluation Exercise Solution",
          "Exception Handling",
          "Section 3 Exercise - Two Homework Challenges",
          "Section 3 Exercise - Challenge I Workout",
          "Section 3 Exercise - Challenge II Workout"
        ],
        "Functions, Methods and Constructors": [
          "Anonymous Functions",
          "map(), filter(), reduce()",
          "Defining Functions with Arguments",
          "Optional Arguments and Keyword Arguments",
          "Type Assertion for Function Arguments",
          "Varargs Functions",
          "Multiple Dispatch",
          "Constructors - Part I",
          "Constructors - Part II",
          "Section 4 Exercise - Two Homework Tasks",
          "Section 4 Exercise - Task I Solution",
          "Section 4 Exercise - Task II Solution"
        ],
        "Metaprogramming": [
          "Meta.parse() Function",
          "Expr() Constructor",
          "Construct few more Expressions",
          "Construct an Expression for Compound Expressions",
          "Construct Expression Exercise Solution",
          "Construct an Expression using quote block",
          "Macros",
          "@enum Macro",
          "Defining Macros - Part I",
          "Defining Macros - Part II",
          "Section 5 Exercise - Create a Macro",
          "Section 5 Exercise - Solution"
        ],
        "Working with DataFrames": [
          "Working with DataFrames in Julia",
          "Creating DataFrame Object",
          "Import and Read Data as DataFrame",
          "Filtering and Sorting Data",
          "Updating and Reshaping DataFrame",
          "Replacing and Changing Entries",
          "Replacing and Changing Entries Exercise Solution",
          "Usage of Split-Apply-Combine Strategy",
          "Treating Missing Entries in Data",
          "Section 6 Exercise",
          "Section 6 Exercise - Solution"
        ],
        "Working with Dates, Times and TimeSeries": [
          "Date and Time Objects in Julia",
          "Query on Date Objects",
          "Query on Dates Exercise Solution",
          "Date Time Arithmetic",
          "Working with TimeZones",
          "TimeSeries in Julia",
          "Accessing Data in TimeArray",
          "Applying Conditions for Accessing TimeArray",
          "Applying and Combining Methods for TimeArray",
          "Applying and Combining Methods Exercise Solution",
          "[Project 1] Data Analysis - Problem Statement",
          "E-Commerce Data Analysis - Part I",
          "E-Commerce Data Analysis - Part II",
          "E-Commerce Data Analysis - Part III",
          "E-Commerce Data Analysis - Part IV",
          "Section 7 Exercise - Two Tasks",
          "Section 7 Exercise - Task I Workout",
          "Section 7 Exercise - Task II Workout",
          "Date, Time and E-Commerce Data Analysis"
        ],
        "Machine Learning Projects on Regression Analysis": [
          "Machine Learning with Julia",
          "Introduction to Linear Regression",
          "[Project 2] Simple Linear Regression - Problem Statement",
          "Simple Linear Regression in Julia - Part I",
          "Simple Linear Regression in Julia - Part II",
          "Simple Linear Regression in Julia - Part III",
          "[Project 3] Multiple Linear Regression - Problem Statement",
          "Label Encoding, One-hot Encoding, Dummy Coding",
          "Multiple Linear Regression in Julia - Part I",
          "Multiple Linear Regression in Julia - Part II",
          "Polynomial Regression",
          "[Project 4] Polynomial Regression - Problem Statement",
          "Polynomial Regression in Julia - Part I",
          "Polynomial Regression in Julia - Part II"
        ]
      },
      "requirements": [
        "Recapitulation of some high school mathematics and statistics.",
        "Basic proficiency in working with computer."
      ],
      "description": "Welcome to this online course on Julia! This course is for anyone who wants to learn Julia programming for problem solving. Machine learning and data science are the well applied domains of Julia programming. Above all, Julia is a fast and highly efficient programming language for scientific computation. Master Julia syntax for coding through arranged topics and exercises in this course.\n\n\nFull-fledged segment in this course is dedicated to know about core concept of data manipulation in Julia which is an essential part of data analysis.\nThis course includes 4 projects on “data analysis” and for building “machine learning models based on regression analysis”, to learn the usage of Julia packages for data analysis and machine learning.\nWith data manipulation and building machine learning models, we will see the usage of Julia package StatsPlots for data visualization.\n\n\nBy the end of this course, you will know how to work with Julia syntax for\nwriting Julia program.\nworking with several datatypes and data-structures.\ncreating and manipulating arrays.\nworking with raw text.\ndefining functions and macros.\nmetaprogramming.\ncreating objects from new datatype that can be defined in Julia.\ndata manipulation in DataFrame and TimeArray objects.\nbuilding machine learning models for numeric prediction.\nsetting up data visualization tools.\n\n\nSee you inside the course!",
      "target_audience": [
        "Anyone from any professional or academic background, familiar with basic high-school mathematics.",
        "You can learn everything from scratch as a beginner programmer in this course.",
        "If you have coding experience in any programming language (e.g., Python, R, C, C++, Fortran, COBOL, Pascal etc.), this course is for you to enhance knowledge."
      ]
    },
    {
      "title": "Scripting Essentials for DevOps",
      "url": "https://www.udemy.com/course/scripting-essentials-for-devops/",
      "bio": "Master scripting in Bash, Python and Ruby in one single course",
      "objectives": [
        "Learn to master scripting in Bash, Python and Ruby",
        "Learn to use them to perform Infrastrtcure managment",
        "Learn the scripting to handle DevOps tasks"
      ],
      "course_content": {
        "Scripting essentials (Bash, Python and Ruby": [
          "Intro"
        ],
        "Bash Basics": [
          "Bash - Variables",
          "Important bash files",
          "The bash_logout file",
          "Foreground and backgroud modes",
          "Exit status",
          "Standard input and output",
          "Special files",
          "Functions and loops"
        ],
        "Starting with Python scripting": [
          "Python installation",
          "Lists",
          "Python for Loop",
          "List comprehension",
          "Python if conditions",
          "Python dictionaries",
          "Looping through dictionaries",
          "Python functions",
          "Calling Python functions",
          "About Python modules"
        ],
        "Ruby for beginners": [
          "Ruby - introduction",
          "Quoting and interpolation",
          "Ruby arrays",
          "Ruby hashes",
          "Ruby code blocks",
          "Ruby modules",
          "Section 4",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of Linux is required to complete the course"
      ],
      "description": "Master the art of scripting with these popular languages in this comprehensive beginner’s course!\nThe first thing any DevOps engineer learns is a scripting language to navigate through devices, software and servers. These are exceptionally powerful and are the basics of learning development. This is why we have designed a complete comprehensive course to help you learn three of the most popular programming and scripting languages that currently exist.\nWe have designed a course that is solely dedicated to helping you break down these three languages into smaller and easier to understand segments. We will break down each language to help you master the fundamental concepts that the language is built on.\nThe 3 languages that are covered are Bash, Python and Ruby.\nBash is a scripting language commonly used for programming in Linux. Linux scripts are used for automating certain programming tasks. They can also be used to simplify complex tasks and also help solve real-world problems. While learning how to write scripts is easy, it is a little more difficult to write good and effective scripts. In this course, we focus on exactly that. We will show you how to write amazing scripts that can not only reduce repetitive tasks, but also can be integrated into your real-world projects.\nPython is another popular programming language that is commonly used for back-end development. An amazing feature of Python is that it allows you to do much more using fewer lines of codes. This course focuses on helping you learn exactly how to get the most out of Python.\nLastly, we will focus on Ruby. Ruby is a dynamic programming language that focuses on simplicity and productivity. It was designed to support multiple programming paradigms, including functional, object-oriented, and imperative. It is used for building apps and websites on Linux and UNIX.\nThis includes writing basic scripts, important syntax rules, automating tasks using code snippets and even writing codes for building actual products.\nThe course has been divided into 3 section, with each section going over one particular language. The course will start at the very beginning with Bash fundamentals (variables, functions, loops, etc.) as well as going over important bash files, modes and so on. Once, we’ve covered Bash, you’ll learn the fundamentals of Python programming language in the second section which includes its basic concepts such as lists, loops, conditions, dictionaries, modules. In the third section, we’ll go over the basics of Ruby and cover some concepts in detail such as quoting, interpolation, arrays, hashes, code blocks, modules, etc.\nAt the end of this course, you will have not only mastered three powerful programming languages, but you’ll also be comfortable enough to actually start writing simple programs using these languages.\nSo, what are you waiting for? Enroll now and start your devops journey!",
      "target_audience": [
        "Anyone who wants to master the popular scripting languages for DevOps and System Administration will find this course very useful"
      ]
    },
    {
      "title": "Python Certification Exam Preparation: 6 Practice Tests",
      "url": "https://www.udemy.com/course/python-certification-exam-preparation-6-practice-tests/",
      "bio": "6 Practice Tests with Brief Explanation for any Python Certification",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course offers a comprehensive preparation for Python certification exams, providing aspiring Python developers with the necessary practice and skills to succeed. With a focus on practical application, the course includes six meticulously crafted practice tests that cover a wide range of topics and difficulty levels.\nCourse Features:\nSix Comprehensive Practice Test: Each test presents a diverse array of questions spanning various Python concepts and scenarios. By completing these practice tests, you will enhance your ability to handle the types of questions you will encounter during the certification process, ensuring you are well-prepared for the real exam.\nIn-Depth Explanations: Following each practice test, you will receive detailed explanations for each questions. These comprehensive explanations provide a deep understanding of the correct answers, allowing you to reinforce your knowledge and learn from any mistakes made.\nPassing Criteria: To successfully complete the course, you must achieve a minimum score of 70% on each of the six practice tests.\nWho Can Enroll:\nThis course caters to individuals at various stages of their Python programming journey. Whether you are a novice seeking to establish a solid foundation in Python or a seasoned developer aiming to validate your skills, this course is tailored to meet your needs. It is particularly suitable for:\nPython enthusiasts eager to test and enhance their knowledge and skills.\nStudents preparing for Python certification exams.\nProfessionals aiming to bolster their employability by acquiring a Python certification.\nProgrammers looking to expand their proficiency in Python and broaden their career opportunities.\nWarm regards,",
      "target_audience": [
        "Aspiring Python developers seeking to pass Python certification exams.",
        "Students preparing for Python certification tests.",
        "Programmers and professionals aiming to validate their Python skills through certification.",
        "Python enthusiasts looking to enhance their knowledge and problem-solving abilities.",
        "Individuals interested in gaining confidence and experience in tackling Python certification exam-style questions."
      ]
    },
    {
      "title": "Rust for Beginners",
      "url": "https://www.udemy.com/course/rust-programming-language-z/",
      "bio": "Learn the basic syntax quick and easy on your PC, tablet or smartphone in under an hour",
      "objectives": [
        "Basic Syntax",
        "Math, string functions",
        "Decision-making, functions, loops",
        "Arrays, Vectors, Tuples"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed. You will learn everything you need to know."
      ],
      "description": "In this course, I'll be explaining generic programming concepts using Rust syntax. You'll learn all the basics: printing to screen, creating variables, doing simple math, conditionals, tuples, arrays, etc. This is a simple steady-paced course that can be effective for anyone who has an interest in coding in Rust. You could be someone with experience in another language or someone entirely new to coding.\nI'll be teaching using an online IDE, called replit, which serves its purpose great. You can sign-up for free, create a repl, and start following along with the lectures in a few minutes.\nRust is a statically-typed programming language designed for performance and safety. Its syntax is similar to that of C++. It is an open-source project developed originally at Mozilla Research.  It has many applications, and in this course, we'll be sticking to the basics.\nI will be explaining code snippets and there will be a link to the repl that I'm discussing in the lecture resources. You can then fork it, and change the names and arguments in the code to come up with additional examples for each concept. Or you can use copy/paste.\nThis course is a beginner-friendly breeze and will allow anyone to effectively grasp generic programming concepts in basic syntax of Rust in just a short amount of time.",
      "target_audience": [
        "Anyone interested in the basic syntax of rust"
      ]
    },
    {
      "title": "C# Design patterns",
      "url": "https://www.udemy.com/course/maruticsdp/",
      "bio": "transform your professional career with extraordinary knowledge of Design Patterns",
      "objectives": [
        "At the end of this course students will be able to understand C# design patterns and architecture of it with usage in real life business application development.",
        "This course will help those students who are having knowledge of C# and visual studio and willing to explore different design patterns for development as well as for interviews."
      ],
      "course_content": {},
      "requirements": [
        "You just need to have basic knowledge of C# programming language also there is no prior installation steps required, All you need is computer with Visual Studio Installed in it."
      ],
      "description": "If you are not familiar with C# programming language basics and wants to become master of that or if you know basics of Design patterns and following questions disturb you like\n- What is Design Patterns ?\n- How can i answer design patterns questions in interview ?\n- How Many design patterns are there and where can i use it ?\n- How can i compare one design pattern with other so that i can use it in my project requirement ?\nThen this Course is answer of these questions plus lot more.\nIn my career i have given number of interviews and also conducted many interviews and i know that Design pattern is a nightmare for the novice developers and even for the experienced people they struggle to understand about the actual architecture of the patterns and how to implement it in projects.\nThis is the basic reason i am publishing this course on UDEMY. I am sure my students will like this course and this course will be helpful for them for their professional career.",
      "target_audience": [
        "This C# course is for those who are having basic knowledge of C# and wants to learn more about Design patterns of C# in a quick and easy way with practical hands on experience",
        "This course is not for you if you are not familiar with C# and Visual Studio"
      ]
    },
    {
      "title": "iOS12 Animations, learn swift animation with UIKit",
      "url": "https://www.udemy.com/course/ios12-animations-learn-swift-animation-with-uikit/",
      "bio": "Swift 4.2 animations, iOS12 Animation, UIKit, CoreAnimation, iPhone Animations, CoreMotion",
      "objectives": [
        "You will learn how to make iOS animations",
        "By the time you finish this course, you will have the knowledge to make simple iOS animations and make you Apps stand out with cool iOS animations."
      ],
      "course_content": {
        "Chapter 1 Basic Animations": [
          "Starter project files",
          "Introduction to starter project",
          "Animating title and logo part 1",
          "Animating title and logo part 2",
          "Animation challenge solution"
        ],
        "Chapter 2 Spring animations": [
          "Spring Animations",
          "Animating textfields",
          "Animating button clicks",
          "Challenge solution"
        ],
        "Chapter 3 Keyframe Animations": [
          "Animation Manage Class",
          "Animating Logo to right of the screen",
          "Animating Logo to top and left of the screen",
          "Challenge solution"
        ],
        "Chapter 4 Constraint animations": [
          "Animating views into the screen",
          "Animating height of view",
          "Adding Info label to container",
          "Challenge solution"
        ],
        "BONUS SECTION": [
          "FREE ICONS PACKS"
        ]
      },
      "requirements": [
        "xCode (free from App Store)",
        "MAC computer",
        "Experience in Swift programming language",
        "Knowing your way around xCode",
        "Understanding of 2D Coordinate System"
      ],
      "description": "In iOS 12 Animations Course we are going to teach you how to make cool iOS animations.  This course is designed having intermediate iOS developer in mind. The course will cover iOS Animations only, we are not going to touch any other iOS development topics in this course.\nIf you are not experienced iOS developer, check out our other courses to get you up and running with iOS development.\n\n\nOur iOS 12 Animations Course teaches you how to make iOS Animations using Swift 4.2. Even if you have ZERO experience with iOS Animations, this course is for you!\nWe are going to start from basic animations and every chapter will take you dipper into the world of iOS Animations.\n\n\nBy the end of this course, you will be able to add Cool Animation to your new and existing iOS Apps.\nWe have challenges in every chapter so you will have a chance to practice the things you have learned in the chapter.\n\n\nBut remember the if you want to become good developer, you have to actually type the code yourself, practice and build different animations on your own. This is the best way of learning to code. We will teach you the basics so you can start building on top of the things you learned and become professional iOS Animator.\nLearn how to make iOS 12 Animations with just one course!\n\n\nSo by the end of the course, you'll completely understand:\nUIKit Animations\nKeyframe Animations.\nSpring Animations\nAnimationg UIViews and constraints.\n\n\nDon’t waste your time on low quality courses\nYour time is precious. We offer the best video courses with carefully crafted content, we are learning by coding!\nDon't just take our word for it, check out our other courses and what other students have to say about our courses!\n\n\n\"This course is so far the best course I took in UDEMY. I really learned something. Totally worth the time. Won't regret it. The instructor was responsive too and the course is new and knowledgeable.\"  J Nima\n\"A excellent Tutorial by david. Very good explanation\" Tapan Kumar Raut\n\"There is nothing on Udemy like David's courses! I cannot recommend his courses enough. Best teacher out there, very responsive as well. \" Kris\n\"I really do love the approach, the structure of the course gives you the ability to move forward smoothly, and efficiently gain as much knowledge as possible, the instructor really goes in-depth, it's incredibly comprehensive, not to forget that this is a real world project, and the advanced concepts gained here make me all confident that i'll be able to build my own apps in a very effective way. the course is well taught, and it really deserves the 5 stars, the instructor as well, he explains things in a very clear, clean way. Definitely enjoying the Course. and definitely Thumbs Up.\" Yen Loo\n\"This is one of the most complete and comprehensive iOS projects on Udemy! Everything works! No broken code! You learn Firebase, Onesignal and Backendless in one project. The instructor is always accessible, he goes for quality not quantity. I still have a way to go, but so far it has kept me completely engaged and focused! I wish there were more courses like this! I will definitely purchase another from David.\" antr8tr\n\n\nWe are so confident that you'll love this course that we're offering a FULL money back guarantee for 30 days, No Questions Asked! So it's a complete no-brainer, sign up today with ZERO risk and EVERYTHING to gain.\nSo what are you waiting for? Click the Buy Now button and join the best iOS 12 Animation course.",
      "target_audience": [
        "iOS Developers who want to learn iOS Animations"
      ]
    },
    {
      "title": "Build Hotel Management Billing System with Python3 & Tkinter",
      "url": "https://www.udemy.com/course/build-hotel-management-system-with-tkinter-and-python-3/",
      "bio": "Learn Python! Master python advance programming & build your python skill with complete python project in Python 3",
      "objectives": [
        "You will be empowered to build a project that will help you to secure a lucrative job for yourself at the end of this course!!!",
        "You will master the entire use of Python 3 features",
        "You will build big display screens in Python 3",
        "You will develop amazing functional calculator in Python 3",
        "You will build project using ComboBox in Python 3",
        "You will build project using RadioButtons in Python 3",
        "You will build project using CheckBox in Python 3",
        "You will build drop down menu in Python 3",
        "You will build a Currency Converter in Python 3",
        "You will develop full working control buttons",
        "You will execute your projects",
        "You will learn how to build amazing projects using PyCharm"
      ],
      "course_content": {},
      "requirements": [
        "This course requires basic knowledge of Python 3 programming",
        "Basic knowledge of python GUI design would be a great plus",
        "A computer system is required to follow up with the instructor"
      ],
      "description": "Unlock the power of Python and Tkinter with our comprehensive course, “Build a Hotel Management and Billing System with Python and Tkinter from Scratch.” Designed specifically for beginners, this course will guide you through every step of creating a fully functional hotel management and billing system. From setting up the main screen to implementing advanced features like a currency converter and control buttons, you’ll gain hands-on experience and build a complete application from the ground up.\nWhat You’ll Learn:\nOverview of Complete Hotel Management System in Python: Get a holistic view of the project you’ll be building.\nBuilding the Main Screen: Design the main interface of your hotel management system.\nCreating the Date and Time: Implement date and time functionalities for better management.\nBuilding the Calculator: Develop a built-in calculator for easy billing computations.\nModification of the Calculator: Enhance the calculator with additional features.\nEntry Box for Meal: Create input fields for meal orders.\nEntry Box for Drinks: Set up input fields for drink orders.\nOrder Delivery and Booking of Room: Integrate features for order delivery and room booking.\nCost Display Screens: Design screens to display costs and billing information.\nCurrency Converter: Implement a currency converter for international transactions.\nControl Buttons: Add functional buttons for various controls.\nDefinition of Functions: Learn how to define functions for different operations.\nMore on Function Definition: Dive deeper into function definitions and their applications.\nWorking on the Total Button: Develop the logic for calculating total bills.\nRoundup of the Total: Ensure accurate rounding of total amounts.\nModification of the Total Button: Refine the total calculation feature.\nBuilding the Currency Converter: Create a robust currency conversion tool.\nReset Button: Add functionality to reset the system.\nClear and Exit Buttons: Implement clear and exit options for user convenience.\nMovable Screen Display: Enable movable screen displays for better user experience.\nMovable Text Display: Implement movable text displays for dynamic interfaces.\nBenefits of Taking This Course:\nPractical Experience: Build a real-world application from scratch, gaining valuable hands-on experience.\nComprehensive Learning: Cover all aspects of Python and Tkinter, from basics to advanced features.\nCareer Advancement: Equip yourself with in-demand skills that can boost your career prospects in software development.\nProblem-Solving Skills: Enhance your ability to solve complex problems through practical application development.\nCommunity Support: Join a community of learners and get support from instructors and peers.\nWhy Choose This Course:\nBeginner-Friendly: Designed for those new to Python and Tkinter, with step-by-step guidance.\nProject-Based Learning: Focus on building a complete project, providing real-world experience and a portfolio piece.\nExpert Instruction: Learn from experienced instructors with a deep understanding of Python and Tkinter.\nVersatile Skills: Gain skills applicable to a wide range of industries and projects.\nComprehensive Curriculum: Cover everything from basic concepts to advanced features, ensuring a thorough understanding.\nIntended Audience:\nBeginners in Programming: Individuals with little to no programming experience.\nAspiring Developers: Those looking to start a career in software development.\nHobbyists and Enthusiasts: People interested in creating practical applications for personal or professional use.\nStudents and Graduates: Individuals studying computer science or related fields seeking hands-on experience.\nCareer Changers: Professionals looking to switch careers and enter the software development industry.\nEnroll now in “Build a Hotel Management and Billing System with Python and Tkinter from Scratch” and take the first step towards becoming a proficient Python developer. Start your journey today and create impactful applications that make a difference!\n\n\nSome Fundamentals of Hotel Management System that were covered in this course are as follows:\nHow to build big display screens in Python 3\nHow to develop amazing functional calculator in Python 3\nHow to build project using ComboBox in Python 3\nHow to build project using RadioButtons in Python 3\nHow to build project using CheckBox in Python 3\nHow to build drop down menu in Python 3\nHow to build a Currency Converter in Python 3\nHow to develop full working control buttons\nHow to execute your projects\nHow to build amazing projects using PyCharm\n\n\nWhy Must I Take This Course And What Benefit Is It To ME As A Python Programmer?\nThis is the only course on the internet that will help you to become a certified and successful programmer with an in-depth knowledge of the entire aspect of Python programming and prepare you with the required skills necessary to build you to face job interviews and get employed as a full stack Software developer.\n\n\nEmenwa Global instructors are industry experts with years of practical, real-world experience building software at industry leading companies. They are sharing everything they know to teach thousands of students around the world, just like you, the most in-demand technical and non-technical skills (which are commonly overlooked) in the most efficient way so that you can take control of your life and unlock endless exciting new career opportunities in the world of technology, no matter your background or experience.",
      "target_audience": [
        "Anyone who wants to learn programming but doesn't know where to start.",
        "Anyone who wants to level up his/her python programming skill"
      ]
    },
    {
      "title": "Grokking Dynamic Programming Patterns: Coding Interviews",
      "url": "https://www.udemy.com/course/dynamic-programming-algorithms-coding-interview-questions/",
      "bio": "Master the Art of Dynamic Programming: Learn Step by Step Approach to Solve any Dynamic Programming Problem",
      "objectives": [
        "Dynamic Programming Algorithms Pattern",
        "Step by step approach to solve almost any dynamic programming problem",
        "Two approaches of dynamic programming algorithms: memoization (top-down) and tabulation (bottom-up)",
        "Develop strong understanding in dynamic programming",
        "Be able to understand when to use Dynamic Programming",
        "Practice most frequently asked dynamic programming questions"
      ],
      "course_content": {},
      "requirements": [
        "A Computer or Laptop or Smartphone with Internet Connections",
        "Fundamental Knowledges of Programming"
      ],
      "description": "Welcome to this course - \"Dynamic Programming Algorithms for Coding Interviews\".\nThis course on Dynamic Programming Coding Interview Algorithms will teach you the advanced algorithms and data structures needed for coding interviews and technical interviews. You’ll learn how to solve dynamic programming questions, and you’ll master the fundamentals of data structures and algorithms. You’ll also get an in-depth understanding of Grokking Dynamic Programming Interview Patterns for Technical Interviews, and you’ll learn the skills needed to solve the toughest coding interview questions. Finally, you’ll get hands-on experience with Java Dynamic Programming questions and Algorithms for Coding Interviews, and you’ll Master Dynamic Programming Coding Interview Algorithms and ace your next job interview. This course will teach you the fundamentals of dynamic programming and how to use them to solve complex coding interview questions quickly and confidently. You will learn the fundamentals of data structures and algorithms, as well as how to apply them to coding interview questions. You will also learn to use Java and dynamic programming techniques to solve dynamic programming questions related to Google, LeetCode, and other technical interviews. You will also learn the best practices for mastering the coding interview data structures and algorithms, as well as how to review and apply them in the real world.\n\n\nAre you struggling with DP Problem?\nIf you often struggle with dynamic programming problems despite your understanding of data structures and algorithms, this course is designed to bridge that gap. It provides a comprehensive understanding of critical Dynamic Programming concepts, empowering you to excel in competitive coding and interviews.\nIn addition to the mentioned problems, the \"Dynamic Programming Algorithms  Coding Interviews\" course covers several more essential dynamic programming problems. Through detailed explanations, code implementations, and step-by-step walkthroughs, you'll gain a deep understanding of each problem's solution.\n\n\nWe have 30 day money back, guarantee, enrol now, see you inside :)\n\n\n\n\nCourse Feedback by Student:\nAsif Khondokar\nAmazing course. This is the best Dynamic Programming Course on Udemy. Thanks for creating this course Md. A. Barik. I got job offer & you help me a lot. Thanks again",
      "target_audience": [
        "Anyone who wants to master the art of dynamic programming",
        "Anyone who fear dynamic programming algorithms",
        "Anybody who want to understand dynamic programming algorithms",
        "Anyone who want to be prepared for coding interview at MAANG Company",
        "Computer science students, self taught programmers etc or competitive programmers"
      ]
    },
    {
      "title": "Learn Spring Boot By Creating Employee Management System",
      "url": "https://www.udemy.com/course/learn-spring-boot-by-creating-employee-management-system/",
      "bio": "Spring Boot, Thymeleaf & MySQL",
      "objectives": [
        "Understand the basics of the Spring Boot framework and its features for building web applications",
        "Learn how to create a new Spring Boot project and configure dependencies and settings",
        "Understand the principles of Model-View-Controller (MVC) architecture and how it is implemented in Spring Boot applications",
        "Learn how to use Thymeleaf templates to create dynamic web pages with HTML, CSS, and JavaScript"
      ],
      "course_content": {
        "Introduction To Spring And Spring Boot": [
          "What is Spring and Boot ?",
          "Basic Quiz",
          "Spring and Spring Boot Introduction"
        ],
        "Project using Spring Boot": [
          "Sample Output At the End of Project",
          "Create Spring Boot Project With IntelliJ Idea",
          "Create Employee Management System Using Spring Boot, Thymeleaf and MySQL"
        ],
        "More Learnings": [
          "Additional Content"
        ]
      },
      "requirements": [
        "Basic knowledge of Java and System with internet"
      ],
      "description": "This course is designed to teach you the essential skills needed to develop a web application using the popular Spring Boot framework with IntelliJ IDEA as the integrated development environment. The course covers the fundamentals of Spring Boot, such as creating a project, configuring and working with Spring Data JPA, and building a RESTful API.\nYou will also learn how to develop a complete employee management system using Spring Boot, which includes creating and managing employees, generating reports, and performing CRUD operations on a database. Throughout the course, you will use IntelliJ IDEA as your primary tool to develop, test and debug your Spring Boot application.\nBy the end of the course, you will have a solid understanding of how to build scalable and robust web applications using Spring Boot with IntelliJ IDEA. You will also be equipped with the knowledge to create RESTful APIs, connect to databases, and perform CRUD operations.\nCourse Content:\nIntroduction to Spring Boot and IntelliJ IDEA\nSetting up the development environment\nCreating a Spring Boot project\nConfiguring Spring Data JPA\nCreating entities and repositories\nBuilding a RESTful API with Spring Boot\nImplementing CRUD operations\nTesting and debugging the application\nDeveloping an Employee Management System\nLet's crack it.",
      "target_audience": [
        "Java Beginner",
        "Beginners who want to know how Java is used in industry and how we can create Java web application"
      ]
    },
    {
      "title": "Computer Vision and Machine Learning with OpenCV 4",
      "url": "https://www.udemy.com/course/computer-vision-and-machine-learning-with-opencv-4/",
      "bio": "Grasp the concepts of OpenCV 4 to build powerful machine learning systems and computer vision applications with OpenCV 4",
      "objectives": [
        "Build real-time applications that deal with image and video processing",
        "Build an Optical Character Recognition (OCR) engine from scratch",
        "Get to know how to train face recognition system",
        "Create your own real-time object classifier",
        "Build computer vision applications",
        "Create DNN based Image Classifier",
        "How to apply various Machine Learning algorithms to real-life problems",
        "Explore Supervised Learning and Unsupervised Learning approaches in Computer Vision",
        "Train your own custom image classifier using Convolutional Neural Networks"
      ],
      "course_content": {
        "Hands-On OpenCV 4 with Python": [
          "The Course Overview",
          "Computer Vision with OpenCV 4",
          "Setting Up the Environment",
          "Preprocessing Video Input, Thresholding, and Blurring",
          "Calculating Image Differences",
          "Visualizing and Triggering Actions",
          "Understanding Histograms and Back Projection",
          "Implementing the Histogram Capture for Skin",
          "Implementing Back Projection on Input Video Feed",
          "Bounding the Hand – Contour Extraction",
          "Extracting Fingertips – Convexity Defects",
          "Air Writing – Translating Gestures to Controls",
          "Using Haar Cascades – Eye and Face Detection",
          "Extending Haar Cascades for Eye Detection",
          "GUI Automation – Interfacing the App with a Media Player",
          "Deep Learning – What and Why?",
          "Using the DNN Module with a Pre-Trained Model",
          "Digging Deeper – Feeding the Input Image to the Neural Network",
          "Running Object Detection on Videos",
          "Optical Character Recognition –What, Why, and How?",
          "Training a Digit Classifier on the MNIST Dataset",
          "Developing the OCR Engine Functions",
          "Developing the OCR Engine Functions (Continued)",
          "OCR Square Calculator",
          "Test Your Knowledge"
        ],
        "OpenCV 4 Computer Vision with Python Recipes": [
          "The Course Overview",
          "Installation and Setup",
          "Reading Images from Files",
          "Simple Image Transformations",
          "Saving the Images",
          "Showing the Images",
          "Drawing 2D Primitives",
          "Handling User Input from a Keyboard",
          "Handling User Input from a Mouse",
          "Capturing and Showing Frames from a Camera",
          "Playing Frame Stream from Video",
          "Manipulating Matrices-Creating, Filling, Accessing Elements, and ROIs",
          "Converting between Different Data Types and Scaling Values",
          "Non-Image Data Persistence Using NumPy",
          "Manipulating Image Channels",
          "Converting Images from One Color Space to Another",
          "Computing Image Histograms",
          "Removing Noise Using Gaussian, Median, and Bilateral Filters",
          "Creating and Applying Your Own Filter",
          "Processing Images with Different Thresholds",
          "Morphological Operators",
          "Image Masks and Binary Operations",
          "Binarization of Grayscale Images Using the Otsu Algorithm",
          "Finding External and Internal Contours in a Binary Image",
          "Extracting Connected Components from a Binary Image",
          "Fitting Lines and Circles into Two-Dimensional Point Sets",
          "Calculating Image Moments",
          "Checking Whether a Point is Within a Contour",
          "Computing Distance Maps",
          "Image Segmentation Using the k-Means Algorithm",
          "Warping an Image Using Affine and Perspective Transformations",
          "Stitching Many Images into Panorama",
          "Removing Defects from a Photo with Image Inpainting",
          "Finding Corners in an Image – Harris and FAST",
          "Computing Descriptors for Image Key Points Using ORB",
          "Obtaining an Object Mask Using the GrabCut Algorithm",
          "Finding Edges Using the Canny Algorithm",
          "Detecting Lines and Circles Using the Hough Transform",
          "Finding Objects via Template Matching",
          "Medial Flow Tracker",
          "Tracking Objects Using Different Algorithms via the Tracking API",
          "Computing the Dense Optical Flow between Two Frames",
          "Detecting Chessboard and Circle Grid Patterns",
          "Simple Pedestrian Detector Using the SVM Model",
          "Optical Character Recognition Using Different Machine Learning Models",
          "Detecting Faces Using Haar Cascades",
          "Fast QR Code Detector and Decoder",
          "Representing Images as Tensors/Blobs",
          "Loading Deep Learning Models Using OpenCV | Caffe, Torch and TensorFlow",
          "Preprocessing Images and Inference in Convolutional Networks",
          "Dataset Collection from ImageNet",
          "Dataset Annotation with LabelImg",
          "Dataset Augmentation",
          "Classifying Images with GoogleNet/Inception and ResNet Models",
          "Detecting Objects with the Single Shot Detection (SSD) Model",
          "Segmenting a Scene Using the Fully Convolutional Network (FCN) Model",
          "Introduction to Open Model Zoo",
          "ONNX (Open Neural Network Exchange)",
          "G-API (Graph API)",
          "Age and Gender Recognition",
          "Face Detection and Emotion Recognition",
          "Human Detection",
          "Advanced Applications with OpenVINO",
          "Test Your Knowledge"
        ],
        "Hands-On Machine Learning with OpenCV 4": [
          "The Course Overview",
          "Introduction to Machine Learning in Computer Vision",
          "Setting Up the Development Environment",
          "Reading Images and Video Feeds",
          "Manipulating Image Properties — Color Spaces, Thresholding",
          "Exploring the Drawing Functions of OpenCV",
          "Understanding Supervised Learning",
          "A Quick Comparison – KNN versus SVM",
          "Visualizing the Quick, Draw! Dataset and Establishing the ML Pipeline",
          "Classifying Hand-Made Sketches Using KNN and SVM",
          "How Unsupervised Learning Is Different",
          "Clustering and the K- Means Algorithms",
          "Using K-Means to Cluster the Quick, Draw! Dataset",
          "Understanding Histograms and Backprojection",
          "Detecting Objects in Real Time Using Colour",
          "Understanding What a Haar Cascade is",
          "Detecting Objects in Real Time Using Haar Cascades",
          "CNNs - What the Hype Is About",
          "Using a Pre-Trained Caffe Model for Object Detection",
          "Using the TensorFlow Object Detection API",
          "Gathering the Dataset and Annotating the Images",
          "Generate TFRecords and Train",
          "Export the Inference Graph and Test the Model",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Working knowledge of Python programming is required."
      ],
      "description": "The application of Machine Learning and Deep Learning is rapidly gaining significance in Computer Vision. OpenCV lies at the intersection of these topics, providing a comprehensive open-source library for classic as well as state-of-the-art Computer Vision and Machine Learning algorithms. If you wish to build systems that are smarter, faster, sophisticated, and more practical by combining the power of Computer Vision, Machine Learning, and Deep Learning with OpenCV 4, then you should surely go for this Learning Path.\nThis hands-on course on OpenCV not only helps you learn computer vision and ML with OpenCV 4 but also enables you to apply these skills to your projects. You will firstly set up your development environment for building 5 interesting computer vision applications for Face and Eyes detection, Emotion recognition, and Fast QR code detection. You will then explore essential machine learning and deep learning concepts such as supervised learning, unsupervised learning, neural networks, and learn how to combine them with other OpenCV functionality for image processing and object detection. Along the way, you will also get some tips and tricks to work efficiently.\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Hands-On OpenCV 4 with Python, is designed for you to develop some real-world computer vision applications. You will begin with setting up your environment. You will then build five exciting applications. You will also be introduced to all necessary concepts and then moving into the field of Artificial Intelligence (AI) and deep learning such as classification and object detection with OpenCV 4.\nThe second course, OpenCV 4 Computer Vision with Python Recipes, starts off with an introduction to OpenCV 4 and familiarizes you with the advancements in this version. You will learn how to handle images, enhance, and transform them. You will also develop some cool applications including Face and Eyes detection, Emotion recognition, and Fast QR code detection & decoding which can be deployed anywhere.\nThe third course, Hands-On Machine Learning with OpenCV 4, will immerse you in Machine Learning and Deep Learning, and you'll learn about key topics and concepts along the way.\nBy the end of this course, you will be able to tackle increasingly challenging computer vision problems faced in day-to-day life and leverage the power of machine learning algorithms to build machine learning systems and computer vision applications that are smarter, faster, more complex, and more practical.\n\nMeet Your Expert(s):\nWe have the best work of the following esteemed author(s) to ensure that your learning journey is smooth:\nColibri Digital is a technology consultancy company founded in 2015 by James Cross and Ingrid Funie. The company works to help their clients navigate the rapidly changing and complex world of emerging technologies, with deep expertise in areas such as Big Data, Data Science, Machine Learning, and Cloud Computing. Over the past few years, they have worked with some of the world's largest and most prestigious companies, including a tier 1 investment bank, a leading management consultancy group, and one of the world's most popular soft drinks companies, helping each of them to better make sense of their data, and process it in more intelligent ways.\nThe company lives by their motto: Data -> Intelligence -> Action.\n\n\nSourav Johar has over two years of experience with OpenCV and over three years of experience coding in Python. He has also developed an open source library built on top of OpenCV. Along with this, he has developed several Deep Learning solutions, using OpenCV for video analysis. As a computer vision enthusiast, he completely understands what problems students face. He is very passionate about programming and enjoys making programming tutorials on YouTube. He is currently working for Colibri Digital (@colibri_digital) as an instructor.\n\n\nMuhammad Hamza Javed is a self-taught Machine Learning engineer, an entrepreneur and an author having over five years of industrial experience. He and his team has been working on several Computer Vision and Machine Learning international projects. He started working when he was 17 and kept learning new technologies and skills since then. His areas of expertise include Computer Vision, Machine Learning and Deep Learning. He learned skills own his own without a direct mentor - so he knows how troublesome it is for everyone to find to-the-point content that really improves one’s skill-set. He’s designed this course considering the challenges he faced when he learned and, in the projects, so you don’t have to spend too much time on finding what’s best for you.",
      "target_audience": [
        "This course is intended for Python developers, computer vision developers, and enthusiasts who want to learn machine learning algorithms and implement them with OpenCV 4 for building computer vision applications."
      ]
    },
    {
      "title": "Nodejs API Project: Build a Blog Project API",
      "url": "https://www.udemy.com/course/nodejs-api-complete-guide-by-building-blog-application-api/",
      "bio": "Master Node JS by building a real-world RESTful API (Blog API) with authentication, deployment API Documentation...",
      "objectives": [
        "Build full fledge Blog API using NodeJS",
        "Learn how to deploy nodejs app to Rnder - Heroku alternative",
        "Implement Authentication & Authorization",
        "Implement Post Commenting",
        "Learn to implement who view my profile controller",
        "Learn to implement User following and Unfollowing feature",
        "Learn to implement User Blocking & Unblocking feature",
        "Learn to implement Admin Blocking & Unblocking User feature",
        "Learn to implement System Blocking User if inactive for 30 days",
        "Learn to implement Following & Unfollowing Count",
        "Learn to implement Last Date User Created a Post",
        "Learn to implement to check if User is active or inactive",
        "Learn to implement how to upgrading user account base on number of posts",
        "Learn to implement how a user can close his account",
        "Learn to implement post liking and disliking",
        "Learn to implement days ago a post was created",
        "Learn to implement post views count",
        "Learn to implement post likes count",
        "Learn to implement post likes count in percentages",
        "Master Error handling in the easy way",
        "Learn file upload to cloudinary",
        "Learn to implement Database modeling"
      ],
      "course_content": {},
      "requirements": [
        "Basics of nodejs"
      ],
      "description": "Nodejs API Complete Guide is your one stop solution to learning how to build a complete API using NodeJs, ExpressJs and MongoDB. In this course, we'll first start off by install the dependencies that we'll need for our project. Next, we'll set up our Express server and create our first API endpoint. From there, we'll connect to our MongoDB database and start creating blog posts. Finally, we'll finish up by creating an authentication system so that users can login and access their own blog posts. By the end of this course, you'll have a complete understanding of how to build a NodeJs API and will be able to build your own\n\n\nThis course is a complete guide to building a Nodejs API from scratch. We will first set up our development environment and then dive right into coding our API. We will build a complete blog application API, including routes, controllers, models, authentication, and file uploads. By the end of this course, you will have a strong understanding of how to build robust Nodejs APIs.\n\n\nYou don't need any previous experience in API development as this course is designed to take you through step by step\nWe will a explained in an easy to understand way with step by step instructions, video tutorials, and live examples. This is a hands-on course, where you get immediate access to every lesson,",
      "target_audience": [
        "This course is designed for those who want to develop a NodeJS API by excelling in nodejs and mongodb.",
        "Anyone who wants to master data modelling",
        "Anyone who wants to deploy application in the easiest way"
      ]
    },
    {
      "title": "Ultimate Python Bootcamp: Become Certified Python Developer",
      "url": "https://www.udemy.com/course/superb-python-course/",
      "bio": "Master Python with Hands-On Projects: From Beginner to Certified Developer in 4 Weeks",
      "objectives": [
        "Understand Python Syntax and Concepts: Grasp the fundamental building blocks of Python, including variables, data types, loops, and conditionals.",
        "Work with Data Structures: Master Python’s built-in data structures like lists, dictionaries, sets, and tuples.",
        "Handle Files and Work with APIs: Learn how to read from and write to files, work with external APIs, and parse JSON data.",
        "Build Web Applications: Explore how to build web applications using frameworks like Flask or FastAPI, covering basic routing, handling requests, and returning r",
        "Automate Tasks: Gain the skills to automate repetitive tasks by writing Python scripts that interact with system processes, file systems, and web services.",
        "Work with Databases: Learn how to interact with SQL and NoSQL databases using Python, managing data, and handling transactions."
      ],
      "course_content": {
        "Introduction with Setup": [
          "Introduction of Python",
          "Download and install Python",
          "Setup python in Command Prompt"
        ],
        "Python in IDLE": [
          "Strings and Numbers",
          "Lists",
          "All about Dictionary",
          "Python in IDLE Quiz"
        ],
        "Essentials Python with Eclipse": [
          "Download and Install Eclipse and Pydev with Hello World App",
          "Comment in Python",
          "Variable",
          "While Loop",
          "While Try Exception (ERROR)",
          "For Loop",
          "For Loop with If Statement",
          "Nested Loop",
          "IF Else Statement",
          "Elif Statement",
          "If statement with operator using AND & OR",
          "Break and Continue",
          "Guess the number"
        ],
        "Essential Python with Pycharm": [
          "Install Pycharm IDE",
          "If Bash command not found",
          "Number String and Type",
          "Casting",
          "Python Operator",
          "Tuple",
          "Search name in list using if else statement",
          "Slicing List",
          "While Loop and if statement Exercise",
          "While Loop and if statement exercise answer",
          "While Loop with append",
          "Python Pass"
        ],
        "Function and State": [
          "Function",
          "Function with variable",
          "Another Basic Function",
          "Function Return Statement",
          "Returning more value",
          "Global State",
          "Function Exercise",
          "Function Exercise Answer",
          "FUNCTION WITH BOOLEAN AND IF STATEMENT",
          "Recursive Function",
          "Local Variable vs Global Variable",
          "Function and State Quiz"
        ],
        "Built-in Functions": [
          "Round Function",
          "Range Function",
          "Ord and Chr Function",
          "All and Any function",
          "Enumerate function",
          "Some Built-in Function"
        ],
        "Module": [
          "Import Module",
          "From Module",
          "Import module vs From Module",
          "Module Quiz"
        ],
        "Files": [
          "Read Text File",
          "Readline",
          "Create text file",
          "Append"
        ],
        "Classes and Object": [
          "Static Method",
          "Classes and object with change variable",
          "Instance Objects",
          "Class Inheritance"
        ],
        "Special Methods": [
          "Init and Str",
          "Repr"
        ]
      },
      "requirements": [
        "Basic Computer Skills: Students should be comfortable using a computer, navigating files, and installing software.",
        "No Prior Programming Experience Required: The course starts with the basics, so no prior knowledge of programming or Python is necessary.",
        "Access to a Computer: Students need a computer (Windows, macOS, or Linux) where they can install Python and other necessary tools.",
        "Stable Internet Connection: For downloading course materials, software, and accessing online resources.",
        "Willingness to Learn: A positive mindset and the motivation to practice regularly are key to succeeding in this course."
      ],
      "description": "Welcome to the Superb Python Course – Become a Certified Python Developer!\nAre you ready to kickstart your journey toward becoming a Python developer? This course is designed to provide you with hands-on experience, focusing more on practical coding than just theory. Whether you’re a complete beginner or an aspiring developer, this course will accelerate your learning and help you master the latest coding styles used in the industry.\n\n\nPython is a versatile and powerful programming language that can be applied to web development, desktop applications, and beyond. With its extensive standard libraries, Python provides everything you need to build complex applications with ease. In just 4 weeks, this course will take you from beginner to professional!\n\n\nWhat Will You Gain From This Course?\nLearn how to download, install, and set up Python on your computer.\nMaster Python in different environments, including IDLE and Eclipse.\nUnderstand functions, built-in functions, and how to use them effectively.\nExplore modules, file handling, and work with classes and objects in Python.\nDiscover special methods, JSON integration, and regular expressions in Python.\nGet familiar with Python’s standard libraries and how to utilize them for advanced programming.\nBuild a Graphical User Interface (GUI) with Python.\nCreate simple Python programs and explore CGI (Common Gateway Interface).\nDive into Django, a popular Python web framework, to build dynamic websites.\nDevelop a simple Python game and work with Pillow for image processing.\nExplore how Python can be used in Artificial Intelligence (AI) projects.\nWeb Scrapping\n\n\nBy the end of this course, you'll have the skills to build real-world Python applications and potentially launch a career in tech. This is the only Python course that teaches you every essential detail with clear, hands-on examples and awesome code.\n\n\nWhy Enroll Today?\nThe sooner you start, the quicker you can unlock your potential and begin your career as a Python developer. This course is not just another Python tutorial—it’s a career-changing experience. Take this step now and transform your future with Superb Python Course.\n\n\nThank you, and I look forward to seeing you in the course!",
      "target_audience": [
        "Beginners in Programming: Anyone with no prior programming experience who wants to learn Python from scratch.",
        "Aspiring Developers: Individuals looking to start a career in software development and want to build a strong foundation in Python.",
        "Professionals Switching Careers: People in non-tech roles who are interested in transitioning to software development or data analysis and need to learn Python.",
        "Students and Learners: College students or learners in any field looking to expand their programming knowledge or improve their coding skills.",
        "Hobbyists and Enthusiasts: Individuals who enjoy technology and want to use Python for personal projects, automation, or data analysis."
      ]
    },
    {
      "title": "C Language Programming : Complete Guide on C Language 2025",
      "url": "https://www.udemy.com/course/c-language-computer-programming-skill/",
      "bio": "Ultimate Coarse on C Programming: Code like an expert by learning basics of C Language parogramming",
      "objectives": [
        "Excel C programming concepts from the basic level.",
        "You will acquire logic building skills which will be helpful for you to further explore other programming languages also.",
        "To boost the software development skills of students.",
        "Test your understanding with end-of-section quizzes.",
        "C programming language basic to expert",
        "Concept of pointers",
        "concept of loops - for, while, do while",
        "Strings, Arrays, Structures and what not.. All in one course.",
        "Knowledge and use of IDE's for C Language",
        "Want to learn programming from scratch.. your search ends here"
      ],
      "course_content": {
        "Introduction": [
          "C Language Programming : Introduction to this Course",
          "Knowledge of Flowcharts and Algorithms - necessary for logic building",
          "Introduction to C Language"
        ],
        "First C Program - Header Files, Documentation Section, Main function, Key Words,": [
          "First C Program - Header Files, Documentation Section, Main function, Key Words"
        ],
        "Data Types - int, float, char | Practical also involved": [
          "C Language Programming : Program for the use of INT and FLOAT datatypes.",
          "C Programming for beginners : Program to show the use of CHAR datatype",
          "C Language Basics: Details of other DATA-TYPES of C Language",
          "C Language Programming : Program SWAP TWO NUMBERS USING THIRD VARIABLE."
        ],
        "Control Statements- IF ELSE and its variants": [
          "C Language Programming for beginners: Simple IF, IF ELSE, IF ELSE IF, Nested IF",
          "C Programming : Practical on online compiler for different variants of IF ELSE",
          "C Language Programming for beginners : If Else questions - Guess the output"
        ],
        "Different types of Operators - with the examples solved on online compiler": [
          "C Programming Language basics : Different types of Operators - with execution",
          "C Language Basics : Quiz for operators"
        ],
        "C Programming for beginners: Control Statements- SWITCH Case and its variants": [
          "C Programming : SWITCH Case and different examples and variants"
        ],
        "Control Statements- Looping and different examples and variants": [
          "C Programming for beginners : Basic Concept Of Looping. FOR LOOP with examples.",
          "C Language Programming for beginners : While Loop and Do While Loop"
        ],
        "Arrays with Examples | 1 dimensional, 2 dimensional , 3 dimensional Arrays": [
          "C Language : Arrays with Examples- 1 dimensional, 2 dimensional Arrays"
        ],
        "Strings - CHAR Array": [
          "C Language Programming for beginners : Strings - CHAR Array"
        ],
        "Functions - Basics, Examples, Call by value and Reference, Recursion, Macros": [
          "C Programming Language for beginners: Functions - Basics, Examples, Syntax",
          "C Programming for beginners: Functions - Call by value and Call by Reference",
          "C Programming : Recursion, Dry run examples of Recursion and Macros vs Functions",
          "C Programming for beginner : Recursion Practical Example | factorial of a number"
        ]
      },
      "requirements": [
        "An urge to acquire Programming Skills",
        "One Computer System (Desktop, Laptop) for practicing the coding techniques",
        "No prior knowledge in the field of C Programming language is required"
      ],
      "description": "Updated on Nov 2020.\nAfter you complete the course text me on Course Message and I will fix a doubt session with you where you can ask questions about the course. ( Nothing is being marketed in this session).\nYou may be a student who is struggling in understanding Programming. You may have some experience with other languages, but you want to learn C Programming to add to your resume. Or maybe you stayed on a low-paying schedule job and want to move to a better, higher stage.\nThis course will solve your issues related to Computer Language Programming.\nThe truth is that learning how to use C is not only an amazing programming language but also allows you to improve programming in other computer languages!\nWhy learn C Programming?\nC is also called the mother of all languages since there were so many other languages developed in C.\nWhile C is simple, it is one of the strongest languages ever produced. It was developed more than 40 years ago, it remains widely used and is often the most common and widely-used programming language in the world in the top 5 or 10.\nLearning C will potentially enhance your programming skills irrespective of your specific domain.\nYou will become a more effective programmer by studying how things work \"under the hood\" and by knowing memory space, CPU architecture, etc.\nIf you want to become a better developer, learning C is a great way to start!\nWhy choose this course for learning C Programming?\nYou will grasp the basic concepts of the C Programming Language by the end of this course and become more marketable to programming levels.\nYou will understand variables, keywords, operators, and different data types of C Language. You will be capable of using features like Looping, Array, Pointers, Control Blocks.\nThe best part of this is along with the programming examples solved by me in the course, I have created a downloadable document for you to have 20 more problems to try your hands on. But if you got stuck in between I have provided the solutions for that too.\nYou'll really know the core language most modern languages use and will be in a position to apply for real-time programming positions!\nIf you have used the C language previously, your comprehension of it will be improved by this course.\nYou will learn how to write quality code and become a great troubleshooter. This course not only teaches how to code in C but also gives all the information on \"why\" you do the things you do. You'll fully understand the C programming language concepts at the end of this course.\n\n\nSO WHAT ARE YOU WAITING FOR? ENROLL TODAY, YOUR 100% RISK-FREE ENROLLMENT IS BACKED BY UDEMY'S 30-DAY, NO QUESTIONS ASKED, MONEY BACK GUARANTEE!\nSo don't think twice and click on Buy Now to get started.",
      "target_audience": [
        "Bachelor's Degree students who want to learn Coding Skills for their academics",
        "People preparing for Job Interviews in IT Skills",
        "Students who are preparing for competitive exams in the field of Computer Science and Engineering",
        "IT professionals who want to move to Developing filed."
      ]
    },
    {
      "title": "C++ Certification Preparation: 4 Practice Tests",
      "url": "https://www.udemy.com/course/c-certification-preparation-4-practice-tests/",
      "bio": "Four C++ Certification Preparation Tests with Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the C++ Practice Tests Preparation Course! Our primary objective is to equip you with the essential practice and skills necessary in the field of C++ development. Through the inclusion of four meticulously crafted practice tests, we aim to immerse you in a learning experience that spans a wide spectrum of topics and varying levels of difficulty.\nWhat You Will Obtain:\nFour Comprehensive Practice Tests: Each of these tests is thoughtfully designed to encompass a diverse array of questions that address different aspects of C++ concepts and scenarios. By actively engaging with these practice tests, you will cultivate the proficiency needed to tackle the kinds of questions you are likely to encounter in C++ certification exams, ensuring that you are well-prepared for the real assessment.\nDetailed Explanations: Following each practice test, you will receive comprehensive explanations for every question. These explanations will furnish you with a profound understanding of the correct answers, enabling you to solidify your knowledge and learn from any errors you may have made.\nAchievement Goal: To successfully complete this course, set your target at achieving a minimum score of 75% on each of the four practice tests.\nWho Can Benefit from This Course:\nThis course extends a warm welcome to individuals at various stages of their C++ programming journey. It is suitable for:\nStudents who are actively preparing for C++ certification exams.\nProfessionals seeking to enhance their employability by attaining a valuable C++ certification.\nProgrammers who aspire to elevate their C++ skills and expand their career horizons.\nBest regards,",
      "target_audience": [
        "Students who are actively preparing for C++ certification exams.",
        "Professionals looking to enhance their employability through the acquisition of a valuable C++ certification.",
        "Programmers seeking to elevate their C++ skills and broaden their career prospects."
      ]
    },
    {
      "title": "The Mainframe Development Course : CICS",
      "url": "https://www.udemy.com/course/cics-basics-for-beginners/",
      "bio": "learn basics of CICS in mainframe systems more effeciently",
      "objectives": [
        "Lifetime access to all videos in this course",
        "will get a good basics in CICS"
      ],
      "course_content": {
        "Introduction": [
          "Self Introduction",
          "Introduction"
        ],
        "Let's learn CICS basics": [
          "Environment,basic terms,CICS nucleus",
          "transactions,CICS-Cobol basics,BMS,MAP",
          "Interface block,pseudo programming,aid keys,file handling,error handling,queues",
          "COBOL-CICS example program",
          "TSQ,TDQ programs(COBOL-CICS combination programs)",
          "CICS basics",
          "CICS Handy Notes"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "should be familiar with mainframe systems",
        "should know ISPF and z o/s",
        "Rent a Mainframe ID for practicing programs if you don't have one"
      ],
      "description": "This course mainly concentrates on how to code in CICS. CICS stands for Customer Information Control Systems. it was developed in 1968 by IBM. it allows users to develop and execute online application in an MVS environment. it has become the most commonly used server for Internet applications. in this course we will discuss about basics of CICS. CICS is one of  the most important language in mainframe development. having good basics in this CICS  programming will help you to become a great mainframe developer.  this is only a basic beginner level course in CICS. this course is not for experts",
      "target_audience": [
        "anyone who want to start/enhance their career in Mainframe development field",
        "anyone who want to revise topics before attending an interview",
        "should have basic knowledge in COBOL,JCL"
      ]
    },
    {
      "title": "Searching and Sorting Algorithms",
      "url": "https://www.udemy.com/course/searching-and-sorting-algorithms/",
      "bio": "Visualize Searching and Sorting Algorithms and Implement them in C++",
      "objectives": [
        "Searching and Sorting Algorithms"
      ],
      "course_content": {},
      "requirements": [
        "Yes, A basic knowledge in Data Structures and Programming is preferred"
      ],
      "description": "Hey there! In this course on searching and sorting algorithms. We will be visualising the workflow of the algorithms and understanding the hang of them. We will implement what we have understood in Cpp Programming. We will compare and contrast each algorithm in terms of time, space, adaptability and stability.\nThe searching algorithms that we will be studying in this course are\n1. Linear Search\n2. Binary Search - Both Recursive and Iterative\n3. Jump Search.\n\n\nThe sorting algorithms what we will be looking in this course are:\n1. Bubble Sort\n2. Selection Sort\n3. Merge Sort\n4. Quick Sort\n5. Count Sort\n6. Bucket Sort\n7. Radix Sort\n8. Insertion Sort\n\n\nYou'll be able to understand the typical use cases, workflow, time complexity, implementation of each and every algorithm.\nA sorting algorithm is an algorithm that puts elements of a list in a certain order. The most frequently used orders are numerical order and lexicographical order. Efficient sorting is important for optimizing the efficiency of other algorithms (such as search and merge algorithms) that require input data to be in sorted lists. Sorting is also often useful for canonicalizing data and for producing human-readable output. More formally, the output of any sorting algorithm must satisfy two conditions:\nThe output is in nondecreasing order (each element is no smaller than the previous element according to the desired total order);\nThe output is a permutation (a reordering, yet retaining all of the original elements) of the input.\nFor optimum efficiency, the input data in fast memory should be stored in a data structure which allows random access rather than one that allows only sequential access\n\n\n[UPDATE - 13th of July, 2025] - Added the SDE Finding the First Bug Problem (Interview Question)\n[UPDATE - 13th of July, 2025] - Added one coding exercise (Interview Question)",
      "target_audience": [
        "Beginner Programmers"
      ]
    },
    {
      "title": "Ruby on Rails 5: Building real world apps for newbies",
      "url": "https://www.udemy.com/course/ruby-on-rails-5-building-real-world-apps-for-newbies/",
      "bio": "Helping you turn your ideas into reality",
      "objectives": [
        "Learn how to rapidly prototype ideas and turn them into presentable apps",
        "Be on their way to becoming a Rails developer",
        "Design and build virtually any web app you can imagine",
        "Apply for jobs at software companies as a Junior Ruby on Rails developer"
      ],
      "course_content": {
        "Introduction": [
          "What is Ruby on Rails?",
          "Intro to Ruby",
          "Installing Rails"
        ],
        "Project Management App (Trello Clone)": [
          "Introduction to the app",
          "Generating a new application",
          "The Rails file structure",
          "Creating your first page",
          "Setting up Github",
          "Setting up routes",
          "Adding more pages",
          "Making it pretty with bootstrap",
          "Adding first bootstrap element",
          "Navigation matters"
        ],
        "Design is important": [
          "Redesigning the home page",
          "Font Awesome"
        ],
        "Where are the users?": [
          "Simple Form",
          "Devise",
          "Adding log in conditions",
          "Making the log in form look better",
          "Making the sign up and edit forms look better"
        ],
        "Adding the tasks": [
          "Generating tasks",
          "Edit and delete tasks from the rails console",
          "Creating a new task from the UI",
          "Creating the show action from the UI",
          "Creating the edit action from the UI",
          "List tasks and layout links",
          "Destroy action and partials"
        ],
        "Diving Deeper into tasks": [
          "Adding user to a task",
          "Adding states",
          "Adding custom actions",
          "State conditions"
        ],
        "Back to design": [
          "Adding a test page",
          "Making tasks look better",
          "Final design touches",
          "Adding link detection"
        ],
        "3..2..1 Launch!": [
          "Hello World!"
        ],
        "Project 2 - Building a market place": [
          "Sec 1 Lec 1 - Intro to the app",
          "Sec 1 Lec 2 - Designing the landing page",
          "Sec 1 Lec 3 - Designing the book index",
          "Sec 1 Lec 4 - Designing the book show",
          "Sec 1 Lec 5 - Designing the book new and edit",
          "Sec 1 Lec 6 - Designing the success page",
          "Sec 1 Lec 7 - Designing the dashboard",
          "Sec 1 Lec 8 - Designing the signup, log in & account edit page"
        ],
        "Section 2 - Installing the fundamentals": [
          "Sec 2 Lec 1 - Generating the application & Configuring Github",
          "Sec 2 Lec 2 - Installing Bootstrap",
          "Sec 2 Lec 3 - Installing Simple Form"
        ]
      },
      "requirements": [
        "PC or Mac",
        "Modern browser and internet connection",
        "The will to learn",
        "The excitement of turning your ideas into reality :)"
      ],
      "description": "Do you call yourself an entrepreneur?\nHave you always wanted to have your own startup? Or maybe you want to work in one but have no idea where to start?\nDo you have a great idea and know you can make it possible if only you could get some funding. But you need to show a working prototype to your potential investors?\nThen this Ruby on Rails 5 course for building real world applications is for you. My name is Vishay Bhatia, and I'll be your instructor for the course.\nI am a self taught rails developer. Just like you I too was a newbie not too long ago. So I know how confusing and intimidating the initial steps can be when you have decided to take on learning to code for yourself.  That is why this course is laid out in the most simple way possible. I don't use complicated tech principles to get my point across.\nWhat you will learn in this course:\nIntro to Ruby in about 15 minutes\nTrello clone - A project management app with a TO DO , DOING DONE list to track the progress of your tasks.\nDigital Bookstore- A 2-sided marketplace where you will learn step by step, how to build a web platform where people can exchange goods or services. Also learn to use stripe for payment processing and how to host images for your application using AWS.\nWe'll start the course by walking through the application architecture, this will teach you the concepts you will need to understand the file structure and how the MVC structure in rails works.\nWe will learn on how to add styling to our app using the latest Bootstrap 4 framework.\nSince the application we're building is a real world app I'll constantly be adding to the course material with new features.\nWhat ever you can dream about building, you can do so with Rails and I will show you how.\nBy the end of this course you will know what is happening under the hood of any rails application.\nMy goal is to turn you from a coding newbie to a coding ninja.\nSo join this course and take your first step of building your ideas into reality.\nPlease feel free to review the course curriculum and I look forward to going through the material with you on your development journey",
      "target_audience": [
        "Anyone who wants to be a web app developer",
        "Anyone who wants to bring their web app ideas to life",
        "Anyone who wants to start their own startup with their own apps"
      ]
    },
    {
      "title": "Stepping up to TypeScript: Fundamentals",
      "url": "https://www.udemy.com/course/stepping-up-to-typescript-fundamentals/",
      "bio": "Upgrade and accelerate your coding skills by learning TypeScript.",
      "objectives": [
        "Understand the difference between JavaScript types, and static typing.",
        "Read and write TypeScript as easily as JavaScript.",
        "Be able to more readily engage in TypeScript projects.",
        "Edit and compile your own TypeScript code."
      ],
      "course_content": {
        "Warming Up to Static Typing": [
          "Introduction to TypeScript",
          "What are \"Types\" in TypeScript?",
          "Basic Usage",
          "Basic Syntax"
        ],
        "Understanding Signatures, Interfaces & Classes": [
          "Function Signatures",
          "Type Guards",
          "Union, Intersection & Type Aliases",
          "Understanding Union & Intersection Types",
          "Declaring Classes",
          "Inheritance",
          "Understanding Interfaces & Classes",
          "Generics<T>"
        ],
        "Tying It All Together": [
          "Setup & Compilation",
          "Creating a LinkedList<T>",
          "Conclusion"
        ]
      },
      "requirements": [
        "You should have at least some beginner programming experience.",
        "Familiarity with JavaScript is a plus. Familiarity with ES6 is even more useful.",
        "Later in the course you will need access to a TypeScript compatible editor. Preferrably: WebStorm or VS Code. But there are a long list of editors that have TypeScript plug-ins (Sublime Text) for example. Although recent versions of Visual Studio also have TypeScript compatibilty, it's preferred to use a more light-weight editor for this course."
      ],
      "description": "Stepping up to TypeScript is intended to not just introduce you to writing code with TypeScript but advance your coding skill in total.  People with existing JavaScript knowledge who want to do more with their projects will find TypeScript can do so much more than just plain JS.  Professionals coming from statically typed languages like Java or C# will find this course a refreshing way to transition into Web or NodeJS development.\nWhile new frameworks seem to come and go every day, TypeScript is here to stay.  TypeScript will likely continue to be a reliable means to develop any JavaScript application for many years to come.\nEven if you are a seasoned JavaScript developer, learning TypeScript will not only prepare you for a potential project in the future, but will immediately improve your JavaScript architecture.\n\nThis is a very high quality, fundamentals first, fast paced course that you are sure to enjoy with an expansive amount of free content and community resources.\n\nWe look forward to having you join us in this TypeScript revolution.\n\n...\nNote: This is a very fast paced course that you should be comfortable rewinding or replaying sections.  Having some programming experience is necessary and experience with ECMA script like JavaScript or ActionScript will be of significant benefit.",
      "target_audience": [
        "This TypeScript course is meant for students and professionals who are looking to upgrade their understanding of programming for today's JavaScript driven world. If you have no prior coding experience at all then it may be best to take a quick free JavaScript course before taking this one. For everyone else, we will quickly and progressively cover basic concepts as they apply to JavaScript but demonstrate the similarities and differences in TypeScript. For advanced JavaScript coders, this may simply be an accelerator to get you up and running with TypeScript as well as familiarize you with all the advanced features not currently available with pure JS.",
        "You should take this course if you are excited about modern web development..",
        "You should take this course if you are familiar with typed languages (Java, C#, etc) but are transitioning to web development.",
        "You should take this course if you are familiar with NodeJS and want to advance your capabilities.",
        "You should take this course if you are new to TypeScript and will be developing for an application framework like AngularJS 2, or maybe you're interested in using TypeScript for another framework like React."
      ]
    },
    {
      "title": "Unleash Certified Associate in Python Programming (PCAP)",
      "url": "https://www.udemy.com/course/unleash-certified-associate-in-python-programming-pcap/",
      "bio": "Master Python for PCAP: Programming, OOP, Exam Readiness, PCAP Certification Prep Course, PCAP Prep from Zero to Hero.",
      "objectives": [
        "Understand the structure, objectives, and benefits of the PCAP certification",
        "Grasp the fundamentals of Python programming, including syntax, keywords, and variables",
        "Perform input/output operations and work with different data types",
        "Apply arithmetic, comparison, and logical operators to write expressions",
        "Build control flow using conditional statements and loops",
        "Work with core Python data structures: lists, tuples, dictionaries, and sets",
        "Define and use functions, including lambda expressions and built-in modules",
        "Handle exceptions and errors using try-except blocks effectively",
        "Understand and apply object-oriented programming principles: classes, objects, inheritance, encapsulation, and polymorphism",
        "Develop the confidence and skills required to pass the PCAP – Certified Associate in Python Programming exam"
      ],
      "course_content": {},
      "requirements": [
        "Just Focus to Learn and Pass the PCAP Certification with Success."
      ],
      "description": "|| UNOFFICIAL COURSE ||\nThis course is your complete guide to mastering Python programming and preparing for the PCAP – Certified Associate in Python Programming certification. Whether you're an aspiring developer, a student, or a working professional looking to validate your Python skills, this course will walk you through everything from the fundamentals to object-oriented programming, with practical examples and certification-focused learning.\nWe begin with an introduction to the PCAP certification itself—its value, structure, and who it’s designed for—before diving into the Python language and understanding why it's one of the most in-demand and versatile programming languages in the industry today. You’ll learn the syntax and structure of Python, including indentation rules, keywords, identifiers, and best practices for naming variables. You'll explore variables, data types, type casting, and how to work with user input and output in an interactive way.\nAs you progress, you’ll master Python’s control flow mechanisms, including conditional statements, loops, and logical structures that allow you to build decision-based programs. The course also covers essential data structures like lists, tuples, dictionaries, and sets, teaching you how to manipulate and iterate over data effectively.\nYou’ll gain a solid understanding of functions—how to define, call, and pass arguments—and learn how to work with scopes, built-in functions, and modules. Exception handling is introduced with practical examples, helping you write more robust, error-resistant code.\nIn the latter part of the course, we explore object-oriented programming (OOP) in Python. You’ll learn key OOP concepts like classes, objects, inheritance, encapsulation, and polymorphism. Through real-world examples, you’ll understand how to build reusable and scalable Python applications using OOP principles, aligning directly with PCAP exam requirements.\nThis course is structured with clarity and progression in mind, making it ideal for both complete beginners and those looking to formalize and certify their Python knowledge.\nBy the end of the course, you’ll be equipped with the practical coding skills and theoretical understanding needed to pass the PCAP certification exam and start writing professional-level Python code.\nThank you",
      "target_audience": [
        "Beginners who want to start their programming journey with Python from scratch",
        "Aspiring developers looking to earn the PCAP – Certified Associate in Python Programming certification",
        "Students and computer science learners seeking a strong foundation in Python and software development",
        "Working professionals aiming to switch careers or enhance their skills with Python for automation, scripting, or application development",
        "Self-taught coders who want to formalize their knowledge and prepare for an internationally recognized Python certification",
        "Anyone interested in programming and looking for a structured, hands-on, and certification-focused approach to learning Python"
      ]
    },
    {
      "title": "Python lists, tuples, sets and dictionaries - Intermediates.",
      "url": "https://www.udemy.com/course/python-intermediate-series-working-with-lists/",
      "bio": "What you should know about working with Python lists beyond beginner level to become an intermediate Python programmer.",
      "objectives": [
        "You will be able to make better decisions when to use one of the 4 built-in container types by seeing their specific features",
        "Work more efficiently with lists and tuples by practicing iteration, subscription and unpacking",
        "The purpose of dictionaries and sets and their powerful operations",
        "Common list operations that can be applied to one or more containers",
        "Work with parts of lists by slicing them",
        "Transform containers with mapping and filtering by using comprehensions"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "MacOS: Install Python and Visual Studio Code (2024)",
          "Windows: Install Python and Visual Studio Code (2024)",
          "Containers introduction"
        ],
        "Container types": [
          "Lists",
          "Tuples",
          "Dictionaries",
          "Sets"
        ],
        "Common": [
          "Common operations",
          "Slicing",
          "Comprehensions",
          "Course conclusion"
        ]
      },
      "requirements": [
        "Beginner understanding of programming (calculate, variables, loops) in Python or another language",
        "You have Python installed and can execute programs"
      ],
      "description": "This course teaches developers what they should know about Python lists beyond beginner level. The course aims to solidify and deepen your basic knowledge about lists, tuples, dictionaries and sets to intermediate level. Developers who follow the course, will learn tips and tricks and work through many exercises that allows them to practice common list tasks.\nTarget audience\nDevelopers who especially benefit from this course, are:\nbeginning programmers with ~6 months Python experience who want to take their coding skills to the next level\ndevelopers who bring experience from another programming language and want to learn how to work with lists in Python\nself-taught Python developers who want to improve their list skills by learning best practices\nChallenges\nStudents that are interested in this course often know basic list features but are not yet aware of Python’s unique language features that allows to write more optimized code. This can lead to verbose or slow code. It is my goal to teach you up-to-date, preferred ways to work with lists in Python and make your code readable, predictable and elegant.\nWhat can you do after this course?\nMake better decisions when to use one of the 4 built-in container types by seeing their specific features.\nWork with lists more efficiently by using Python-specific language features like unpacking, slicing and comprehensions.\nOptimize your existing code after learning that Python offers many built-in common list operations.\nTopics\nWhat is a Container? Container definition and the 4 built-in container types in Python.\nLists: Create and change lists. Accessing elements, reverse, sort, count elements.\nTuples: Create and unpack, assign, swap variables, tuples as return type.\nDictionaries: Dictionary purpose, keys, lookup, iterate.\nSets: Set purpose, mathematical operations, superset, subset.\nCommon operations: Zip, enumerate, all, any, concatenate, check if element is in list.\nSlicing: Slice, head, tail, init, last.\nComprehensions: Mapping, filtering, flatten, matrix.\nDuration\n2 hours video time, ~6 hours including practicing exercises.\nThe teacher\nThis course is taught by Loek van den Ouweland, a senior software engineer with 25 years of professional experience. Loek is the creator of Wunderlist for windows, Microsoft To-do and Mahjong for Windows and loves to teach software engineering.",
      "target_audience": [
        "beginning programmers with ~6 months Python experience who want to take their coding skills to the next level",
        "developers who bring experience from another programming language and want to learn how to work with lists in Python",
        "self-taught Python developers who want to improve their list skills by learning best practices"
      ]
    },
    {
      "title": "Generative AI Certification: LLMs, Hugging Face, ChatGPT",
      "url": "https://www.udemy.com/course/python-for-generative-ai-practice-certification/",
      "bio": "Master Python for Generative AI: Covering LLMs, Hugging Face, LangChain, Image Generation & Earn Certification",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to boost your Python skills and explore the exciting world of Generative AI? This course is designed to help you ace certification exams and deepen your understanding of the essential Python tools used in generative AI development. With 50 practice questions based on real-world AI scenarios, you’ll test and expand your knowledge of Large Language Models (LLMs), Hugging Face Transformers, LangChain, and image generation frameworks like Stable Diffusion.\nThrough this course, you’ll cover critical concepts in Python programming, AI model integration, and prompt engineering. The multiple-choice and multi-choice questions are structured to challenge you on real-world AI applications, helping you prepare for AI developer interviews, certification exams, and hands-on projects. Whether you're new to Python or already an experienced developer, this course is your perfect guide to mastering Generative AI technologies.\nLearn how to efficiently interact with AI libraries, manage data workflows, and develop advanced AI solutions. By the end of this course, you’ll be ready to apply your skills to create AI-driven applications and confidently face the challenges of Generative AI development.\nWhy Take This Course?\n50 real-world-based MCQs & advanced AI problem-solving\nPractical exposure to top AI frameworks & Python integration\nIdeal prep for AI certifications and developer interviews\nHands-on focus: LLMs, Hugging Face, LangChain, Stable Diffusion\nCertification Note:\nUpon successful completion of this course and its assessments, you are eligible for an official course certificate.\nLinked Topics:\nPython Programming\nGenerative AI\nLarge Language Models (LLMs)\nHugging Face Transformers\nLangChain\nStable Diffusion\nPrompt Engineering\nMachine Learning\nArtificial Intelligence\nImage Generation Tools\nOpenAI\nNLP (Natural Language Processing)\nAI Developer Certification\nAI Interview Preparation\nText-to-Image Models\nAI Model Integration\nDeep Learning\nWho This Course is For:\nPython developers and AI enthusiasts\nStudents and professionals preparing for AI certifications\nDevelopers seeking real-world practice in generative AI",
      "target_audience": [
        "Python developers exploring generative AI tools like LLMs and image models.",
        "Students preparing for AI or Python certification exams.",
        "Tech professionals aiming to test their skills in prompt engineering and AI libraries.",
        "Anyone interested in applying Python in real-world AI scenarios."
      ]
    },
    {
      "title": "C PROGRAMMING",
      "url": "https://www.udemy.com/course/c-programming-digiflax/",
      "bio": "Learn C Programming Language Basic to Advance",
      "objectives": [
        "Point to Point about C PROGRAMMING",
        "Introduction to C Programming",
        "Data types",
        "C Programming Variables",
        "Operators",
        "Conditional statements",
        "Switch, for loop & while loop, array, string",
        "Functions",
        "C Free, Pointers",
        "Input and Output",
        "Conditional operators, File operation",
        "Multidimensional array",
        "Structure of C",
        "Preprocessors",
        "Examples. Day to month, multi info scan, input characters, short hand op. type checking, nested-if-else, Multification table and whole the examples explained."
      ],
      "course_content": {
        "THE C PROGRAMMING": [
          "Introduction to C Language",
          "Data type in C Langauage",
          "Variables Part - 1",
          "Variables Part - 2",
          "Operators",
          "Operators Part - 2",
          "Conditional Statements",
          "Switch",
          "For loop",
          "While loop",
          "Array",
          "String",
          "Function Part - 1",
          "Function Part - 2",
          "C Free",
          "Pointers",
          "Input - Output",
          "Conditional Operator",
          "Multidimensional Array",
          "Multidimensional Array Part - 2",
          "File Operation",
          "File Operation Part-2",
          "Structure",
          "Structure Part-2",
          "Preprocessor",
          "Ex-Day-To-Month",
          "Ex-Multi-Info-Scan",
          "Ex-Input-Characters",
          "Ex-Short-Hand-op",
          "Ex-Type Checking",
          "Ex Nested-if-else",
          "Ex-Break-Statement",
          "Ex-Continue-Statement",
          "Ex-One-Diamensional-Array",
          "Ex-Interest",
          "Ex-Function-No-arg",
          "Ex-Struct",
          "Ex-Pointer",
          "Ex-File-Op"
        ]
      },
      "requirements": [
        "not any professional requirements but must have good knowledge about computers, no worries.",
        "Exmaple : be able to learn programming skills"
      ],
      "description": "Dear Friends,\nLearn C PROGRAMMING Language exclusively with DIGIFLAX!\nThe course designed for begginers and developers as easy learning and understanding about C Programming from Basic to Advance.\nThis course has been developed looking at world over requirement by the students and developers who wants to learn and understand C PROGRAMMING easily.\n\n\nWhat is C Programming Language?\n\nC Language is the “mother” of all programming languages.\nC first appeared almost 50 years ago and has been used for the development of:\nOperating Systems - C as its core.\nCore parts of famous databases (such as Oracle and MySQL) - Yes, even MySQL was developed using C.\nCyber-Systems - I personally was programming C to develop a cyber system.\nSmart Homes & Smart Cities\nSystems including Sensors and Micro Controllers (especially in Embedded Systems) - Common usage to programming an MCU using C Programming Language.\nAlso, if you're familiar with Python Programming Language - then you better know that a lot of Python efficient libraries are actually implemented in C.\n\n\n“C Language is definitely here to STAY!”\n\nC is HIGHLY USEFUL & HIGHLY EFFICIENT.\nAlso, it’s considered that by learning C Programming you’re definitely going to make your programming fundamentals VERY STRONG.\nAnd finally to answer a question that a lot of you may have - there is a HIGH DEMAND for C Developers in the market - at both large companies as well as startups - and the salaries are usually PRETTY HIGH! :)\nSo C Programming - usually pays off.",
      "target_audience": [
        "Begginer C Programmers, C Language learners, Programming students, App developers, Web developers & Professional Programmers",
        "Example : Begginers about C Programming, Web Developers & curious about programming science"
      ]
    },
    {
      "title": "Regular Expressions (Regex): Full Guide to Text Manipulation",
      "url": "https://www.udemy.com/course/regular-expression/",
      "bio": "Learn Regex (regular expressions) from Scratch, Pattern Matching and Advanced Techniques with Hands-On Exercises",
      "objectives": [
        "Understand what is RegEx (Regular Expressions).",
        "Understand the fundamentals of regular expressions, including the syntax, character classes, quantifiers, and anchors.",
        "Learn how to use the re module in Python to compile and execute regular expressions, including how to match and search for patterns, replace text, and more...",
        "Explore advanced regular expression concepts, such as grouping and capturing, lookahead and lookbehind assertions, backreferences, and possessive quantifiers.",
        "Learn best practices for writing efficient and readable regular expressions, including how to avoid common pitfalls.",
        "Apply Regular Expressions to a final project text analysis tool, and gain practical experience using regular expressions in a real-world context."
      ],
      "course_content": {
        "Introduction to Regular Expressions": [
          "What is Regular Expression (Regex)?",
          "Why Regular Expression?",
          "How to succeed in this course",
          "Types of pattern can be matched"
        ],
        "Basic Matching": [
          "Simple Matching",
          "Multiple Choice Quizzes: Tips for Success",
          "Simple Matching and Dot Metacharacter Quiz",
          "Simple Matching",
          "Simple Matching Pt. 2",
          "Simple Matching Pt. 3"
        ],
        "Character Classes": [
          "Character Classes",
          "Character Class Quiz",
          "Predefined Metacharacter & Alternation",
          "Character Classes",
          "Character Classes",
          "Negated Character Class",
          "Predefined Metacharacters"
        ],
        "Anchors": [
          "Anchors & Escape Character",
          "Caret Inside and Outside the Character Class",
          "Anchors & Escape Character",
          "Anchors & Escape Character",
          "Anchors & Escape Character Pt.2"
        ],
        "Unicode": [
          "For Fun!"
        ],
        "Quantifier": [
          "Quantifiers",
          "Quantifiers",
          "Hexadecimal Color Code Validation",
          "Greedy vs Lazy Quantifiers",
          "Greedy & Lazy Quantifiers",
          "Quantifier"
        ],
        "Grouping & Backreferences": [
          "Grouping",
          "Nested Groups",
          "Grouping",
          "Grouping",
          "Non-Capturing Groups",
          "Backreferences",
          "Backreference",
          "Named Groups",
          "Backreference Named Groups",
          "Grouping Pt.2"
        ]
      },
      "requirements": [
        "Basic knowledge of Python programming"
      ],
      "description": "Regular expressions or Regex for short are a powerful tool for processing and manipulating text. In this comprehensive course  you will learn how to use Regular Expressions to their full potential, allowing you to efficiently search, match, and replace text in a variety of applications\nThis course is designed for beginners and intermediate learners, whether you're just starting your coding journey or already have some Regex experience. We'll provide you with a structured learning path, practical examples, and hands-on exercises to ensure that you not only grasp the concepts but also gain the confidence to use Regular Expressions effectively in your projects\nWe'll start with an introduction to Regular Expressions, covering the basic syntax and common patterns matched by Regular Expressions. You'll then dive into using Regular Expressions, including character classes, special characters, quantifiers, and anchors\nNext, you'll explore Python's re module, a powerful toolkit for working with Regular Expressions. You'll learn how to compile Regular Expressions, match patterns, search for patterns, and replace patterns, all while gaining practical, hands-on experience\nAs you progress, the course delves into advanced Regular Expression concepts, including grouping and capturing, lookahead and lookbehind assertions, backreferences, subroutines and recursion, possessive quantifiers, and Unicode and internationalization\nBeyond the technical aspects, this course emphasizes best practices for writing efficient and readable Regular Expressions and offers invaluable tips for testing and debugging\nTo apply your newfound knowledge, you'll undertake a project that utilizes Regular Expressions. This could involve web scraping, text processing, or another real-world application\nBy the end of this course, you'll have a deep understanding of Regular Expressions, equipping you to tackle complex text processing tasks with confidence. Join us on this journey to become a Regular Expressions master!",
      "target_audience": [
        "Anybody who works with text data and wants to learn how to use regular expressions to improve their productivity and efficiency in manipulating text.",
        "Data manipulation and extraction",
        "Data analysts or data scientists",
        "Students or researchers in the fields of linguistics or natural language processing",
        "Business analysts or marketers",
        "NLP practitioners"
      ]
    },
    {
      "title": "Building F# Applications",
      "url": "https://www.udemy.com/course/building-f-applications/",
      "bio": "Design, build, and deliver real-world applications faster with F#",
      "objectives": [
        "Setup your IDE for F# development",
        "Use F#-friendly tools for test automation, builds, and dependency management",
        "Model your application's problem domain using F#'s immutable data types and collections",
        "Make invalid states unrepresentable",
        "Build simple-to-complex application behavior with F# functions",
        "Interoperate between your F# applications and other .NET languages"
      ],
      "course_content": {
        "Tools for Building, Testing, and Delivering F# Solutions": [
          "The Course Overview",
          "Setting Up for F# Development in Visual Studio",
          "Setting Up for F# Development in Visual Studio Code",
          "Creating and Building F# Projects in Visual Studio Code",
          "Unit Testing in F#",
          "Advanced Unit Testing with F#"
        ],
        "Key Features of the F# Language": [
          "Domain Modelling with Immutable Data Types",
          "Domain Modelling with F# Collections",
          "Using Functions as Objects in F#",
          "Leveraging Computation Power of the Collection APIs",
          "Interoperating with Object-Oriented Languages"
        ],
        "Type-First Application Design": [
          "Designing Behavior Before Data",
          "Turning Numbers into Types with Units of Measure",
          "Making Types from Anything with Single-Case Unions",
          "Making Invalid States Unrepresentable"
        ],
        "Building Systems with Functions": [
          "Pure and Impure Functions",
          "Using Higher Order Functions for Dependency Injection",
          "Reusing Partial Functions",
          "Building Complex Behavior with Function Composition",
          "Implementing Behavior with State Machines"
        ]
      },
      "requirements": [
        "The course will use F# version 4.1 with Visual Studio 2017 and Visual Studio Code",
        "The principles and code should work if you have earlier versions of the language and tools"
      ],
      "description": "Developers are challenged today to build applications in less time, while maintaining high standards of quality, reliability, security, and performance. The F# programming language can help you meet these challenges by letting you write solutions with less code, fewer bugs, and better alignment with business requirements.\nThis video course starts by showing how to use the functional features of F# to rapidly turn requirements into software designs that are correct, complete, extensible, bug-free, and easy to read and understand. We will start by setting up our F# development environment and reviewing some key language features. We'll then look in depth at two powerful techniques for building real-world F# applications: type-first design and function composition. We'll then learn to leverage advanced F# tools to build and test applications.\nThe video course examines key language features and functional programming techniques with the goal of providing a good understanding of the basic building blocks that can be used to build higher abstractions and more comprehensive solutions. As we go, we will learn how to set up a development environment and design a build process with tools that leverage the F# language.\nAbout the author\nRichard Broida is a software design and programming consultant specializing in Microsoft Windows and Azure technologies. Over his career he has developed enterprise applications for clients in medical, banking, insurance, manufacturing, transportation, and e-commerce. He is a frequent speaker on F#, C#, and cloud technologies and has taught .NET programming courses for adult professionals. You can follow Richard on Twitter (@SirEel) or on LinkedIn. He lives in Cleveland, Ohio.",
      "target_audience": [
        "The course also caters to intermediate C# developers who want to gain a deep understanding of F#.",
        "This course will appeal to programmers and developers who are confident with the basic grammar and syntax of F#. Also, who are now looking to sharpen their F# programming skills."
      ]
    },
    {
      "title": "Loops and Patterns in C - Tips and tricks",
      "url": "https://www.udemy.com/course/patterns-in-c-tips-and-tricks/",
      "bio": "Programming in C",
      "objectives": [
        "Students will get the knowledge on how to code using Loops and the patterns in C with some simple tips and tricks."
      ],
      "course_content": {
        "Loops in C": [
          "Introduction",
          "Loops-Topics covered",
          "Loops : part-1 (Questions from 1 to 7)",
          "Loops: Part-2 (Questions from 8 to 13)",
          "Loops: Part-3 (Question no.14))",
          "Loops: Part-4 (Question no.15 & 16)",
          "Loops: Part-5 (Question 15 & 17)",
          "Loops: Part-6 (Question no.18 to 20)",
          "Loops: Part-7 (Question no.21)",
          "Loops: Part-8 (Question no.22)",
          "Loops: Part-9 (Question no.23)"
        ],
        "Pattern in C - Introduction": [
          "Introduction",
          "Patterns in C : Part-1",
          "Patterns in C : Part-2",
          "Patterns in C : Part-3"
        ],
        "Patterns in C: Level-1": [
          "Patterns in C : Part-4",
          "Patterns in C : Part-5",
          "Patterns in C : Part-6",
          "Patterns in C : Part-7",
          "Patterns in C : Part-8"
        ],
        "Patterns in C : Level-2": [
          "Patterns in C : Part-9",
          "Patterns in C : Part-10",
          "Patterns in C : Part-11",
          "Patterns in C : Part-12"
        ],
        "Patterns in C : Level-3": [
          "Patterns in C : Part-13",
          "Patterns in C : Part-14"
        ],
        "Patterns in C : Level-4": [
          "Patterns in C : Part-15",
          "Patterns in C : Part-16",
          "Patterns in C : Part-17",
          "Patterns in C : Part-18",
          "Patterns in C : Part-19",
          "Patterns in C : Part-20"
        ]
      },
      "requirements": [
        "Basic knowledge on C"
      ],
      "description": "This course covers \"Programming using Loops\" and \"Printing Patterns in C \" with simple tips and tricks with clear explanation and Execution. These tips and tricks are useful for a viewer to design best logics for any new pattern is to be implemented.This Course is useful for the candidates  who are preparing for placements and for the students who wants to get thorough knowledge in C. Check your knowledge in C by watching this videos clearly.You can post me the patterns for which  you are not able to program.\nThank you.",
      "target_audience": [
        "Candidates who are preparing for Campus placements.",
        "Students who wants to get thorough knowledge in C."
      ]
    }
  ]
}