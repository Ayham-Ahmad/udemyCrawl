{
  "courses": [
    {
      "title": "Python Programming & Software Design For Absolute Beginners",
      "url": "https://www.udemy.com/course/python-programming-software-design-for-absolute-beginners/",
      "bio": "No prior programming knowledge? No problem. Get hands-on coding # Beginners Guide to Programming and Software Design",
      "objectives": [
        "Python Programming",
        "Software Design - Flowcharts",
        "Basic Sorting algorithms"
      ],
      "course_content": {
        "Introduction": [
          "Downloading and Setting up Python and PyCharm IDE",
          "Python For Absolute Beginners : Setting up the Environment : Anaconda",
          "Python For Beginners : Variables : Part 1",
          "Python For Beginners : Variables : Part 2",
          "Python For Beginners : Variables : Part 3",
          "Python For Beginners - Lists",
          "Python For Beginners - Lists Part 2",
          "Python For Beginners - Lists Part 3",
          "Python - Conditions - if, if-else and elif Part 1",
          "Python - Conditions - if, if-else and elif Part 2",
          "Python - Relational Operators Boolean operators -",
          "Python For beginners - Loops #Iteration",
          "Python Programming Tutorial : Loops part 1 #Guess the number program",
          "Python Programming Tutorial : Loops part 2 #Getting a random number",
          "Python Programming Tutorial : Loops part 1 #Guess the number program #Modified",
          "Python program to Find the Class Average",
          "Python : Functions : Demonstration",
          "Pass by reference vs value",
          "Python Function - Arguements (Required, Keyword, Default)",
          "Python: For Loops #Iteration # Repetition",
          "Python File Handling - Part 1"
        ],
        "Software Design : Program Design (Flowcharts , Algorithms and pseudacodes)": [
          "Introduction to Software Design - Problem Solving",
          "Software Design - Flowcharts - Sequence",
          "Software Design - Repetition",
          "Flowcharts Questions and Answers # Problem Solving"
        ],
        "Sample Programs in Python": [
          "Add two numbers",
          "Swap Two Numbers",
          "Python program to print negative Numbers in a List",
          "Find length of a string in python",
          "Python code to demonstrate string length # using for loop",
          "Python program to find largest number in a list",
          "Using max() method to find the Largest",
          "Find max list element on inputs provided by user",
          "Python program to find Area of a circle"
        ],
        "Problem Solving : Sorting Algorithms": [
          "Selection Sort Algorithm",
          "Bubble Sort Algorithm"
        ],
        "University Student Grading System - [Complete Project]": [
          "Grading System : part 1",
          "solution 1",
          "solution 2"
        ]
      },
      "requirements": [
        "Internet connection"
      ],
      "description": "Are you interested in learning Python programming but have no prior experience? Look no further than the Academy of Computing & Artificial Intelligence's (ACAI) Python programming course!\nOur expert team, which includes PhD holders, senior lecturers, industry experts, and hiring managers, has designed a comprehensive course that will take you from absolute beginner to advanced programmer. With step-by-step guidance and guided tutorials, you'll gain hands-on coding experience in Python and learn about software design concepts such as flow charts, pseudocodes, algorithms, and modular design.\nBy the end of this course, you'll have a solid foundation in Python programming and the confidence to enhance your core programming skills to reach an advanced level. You'll also have an understanding of important topics such as setting up the environment, variables, lists, tuples, dictionaries, boolean operations, conditions, loops, functions, and file handling.\nIn addition, our course also includes live code demonstrations that show you how to apply each concept and principle. You'll get answers to your questions through our interactive Q&A sessions and gain valuable problem-solving skills.\nThe founder of ACAI has over 10 years of work experience as a researcher, senior lecturer, project supervisor, and engineer. He has a Master's degree in Artificial Intelligence and completed a Bachelor's degree in Software Engineering with First Class Honors from the University of Westminster in the UK. He is also a Sun Certified Java Programmer and a Sun Certified Web Component Developer, with research experience in data mining, machine learning, cloud computing, business intelligence, and software engineering.\nEnroll in our Python programming course today and gain the skills and knowledge to excel in the IT, computer science, engineering, or data science sectors. With ACAI, you'll receive top-notch training from industry experts who are passionate about helping you succeed.\n\n\nBy the end of these videos, you will have a solid understanding of the following areas:\nPython programming\nSetting up the programming environment\nPython for absolute beginners, including how to set up the environment with Anaconda, and working with variables, lists, tuples, and dictionaries\nBoolean operations\nConditions and loops, including sequence, selection, and repetition/iteration\nFunctions\nFile handling in Python\nFlow charts\nAlgorithms\nModular design\nIntroduction to software design and problem-solving\nSoftware design, including flowcharts for sequence and modular design, and repetition\nFlowchart questions and answers for problem-solving.",
      "target_audience": [
        "Beginners for Python Development , Python for Data Science"
      ]
    },
    {
      "title": "User Story Bootcamp: Be an Expert In Managing User Stories",
      "url": "https://www.udemy.com/course/user-story/",
      "bio": "A Practical Step-by-Step Guide To \"User Story Writing, Splitting, Mapping, Prioritizing & Delivering\" For Agile Teams.",
      "objectives": [
        "As a Product Owner you will be able to write better user stories with acceptance criteria.",
        "Understand the 3Cs and INVEST concept of user stories ans how to use it practically?",
        "Effectively play the role of product owner and add value to delivery of the team.",
        "Understand the critical concept of splitting user stories so that it delivers value to customers",
        "Know what is user story mapping and how to use it?",
        "Scrum team members will be able to clearly undersand the knowledge and philosophy behind User Story",
        "Feel confident while dealing with user stories writing and user stories mapping.",
        "Understand how does a user story evolve over a period of time and who all contribute to it"
      ],
      "course_content": {
        "Introduction": [
          "What are we going to cover as part of this course?",
          "Before we get started",
          "Introduction to Agile",
          "What is an agile user story?",
          "Why a user story required?",
          "How requirements are different than user stories ?",
          "Test your understanding"
        ],
        "Let's take a close look at User Story": [
          "How does a Scrum User Story look like?",
          "Persona Concept",
          "Simple Exercise On Persona Concept",
          "What is a technical user story?",
          "Technical User Story Continued",
          "Who owns the the User Story?",
          "User Story comes from where? Epic , Feature, User story",
          "Life cycle of a user story"
        ],
        "How to write a good user story?": [
          "3Cs of user stories - What is it all about?",
          "How to write acceptance criteria for user story?",
          "A Personal Note",
          "INVEST principle for writing a good user story."
        ],
        "Splitting a user story": [
          "What is an end to end user story?",
          "Why is splitting required?",
          "User Story Splitting : Techniques #1 to #3",
          "User Story Splitting : Techniques #4 to #7",
          "User Story Splitting : Techniques #8 to #10",
          "So Which Technique To Use? I am confused",
          "User Story Splitting Template To Download"
        ],
        "How To Estimate A User Story?": [
          "Estimating A User Story"
        ],
        "Mapping, Grouping and Prioritizing User Stories": [
          "Visual Analysis Of User Stories - User Story Mapping"
        ],
        "Let's Apply The Knowledge and Techniques You Learnt": [
          "Summary - Where Can You Apply The Knowledge?",
          "Are You Learning The Skills In-Demand?",
          "Congratulations!!!",
          "Bonus Lecture: You as A Product Owner - Master the Practical Skills Needed"
        ]
      },
      "requirements": [
        "Absolutely NO expertise on Product Management required to get started with this course.",
        "If you are working in IT, Telecom or related sectors for 2-3 years then you are good to go.",
        "An open mind, ready to learn and expereiment"
      ],
      "description": "User stories are a critical part of product owner responsibility and agile software development. Why? Because the user story delivers the value to customers directly. But how? That's exactly what we will cover as part of this course.\nWhy is this Course?\nWhen I started with the role of Product Owner, I failed in my first attempt. Most of my focus was on the on-time delivery and not giving enough time for creating user stories. With consultation from one of the experienced product owner, I started investing 40-50% of my total effort to write good user stories with clear acceptance criteria. That is the single most beneficial task that yield result for me. As a product owner, it not only gave better control over delivery predictability but also the velocity (users stories delivered per sprint) of the scrum team improved. So I created this course to help other Product Owners, Scrum Masters, and Scrum teams.\n\n\nWhy should you take this course?\nAfter taking this course you will be able to implement the techniques and skills right away to define, manage and deliver user stories.\nYou will have Lifetime Access to all video lectures and all your queries/doubts will get a detailed answer if required with an additional video tutorial also!!\n\n\nWho should take this course?\nThis a must-have knowledge for Product Owners.\nThis course is for those who want to get a clear understanding of User Story philosophy and techniques.\nAnyone who wants to play the role of Product Owner in a Scrum project.\nOr who is aspiring for the role of Product Owner\nIt will also help the members of the scrum team to understand the concept of User Story in a practical way.\n\n\nContent and overview\nWe will start with what, why and how of user stories and jump into advanced topics of story splitting, user story mapping, estimation of user stories and many more related concepts with realistic user stories examples.\nMost of the time success of the agile team depends on the way stories are defined, prioritized and delivered. Both the product owner and the scrum team have a crucial to play here.\nAs part of this practical course on user stories, we are going to cover below topics\nWhat are User Stories and Why is it required?\nThe format of a user story or user story template\nUser story writing with practical example.\nHow to write acceptance criteria for user stories?\nConcept of Persona\nThe life cycle of a user story : Scrum user story writing.\nUser Story Mapping\nPrioritizing User Stories in an agile environment\n3Cs of User Story\nINVEST Principle for User Story\nWhat are Technical User Stories?\nWhat is an E2E (end to end) user story?\nHow to do vertical slicing of features?\n\n\nSo this course covers all essential techniques and knowledge required to manage user stories like an expert and progress in your career.\n\n\nYou can get a full refund within 30 days and no question asked if you didn't like the course.\nSo, what are you waiting for? Enrol now and Master The Art Of Managing Agile User Stories !!!",
      "target_audience": [
        "Product Owner who is looking for maximizing the value",
        "Agile or scrum team member who looking to better understand the concept of user stories and why is it really needed?",
        "A business analyst who is trying to understand the end to end view of user stories",
        "Anyone in the agile world who want to have a practical view on working with user stories"
      ]
    },
    {
      "title": "Kubernetes for developers",
      "url": "https://www.udemy.com/course/kubernetes-for-developers/",
      "bio": "Learn how to deploy, manage and scale dockerized apps in Kubernetes",
      "objectives": [
        "You will be able to deploy, manage and scale your apps in Kubernetes.",
        "You will be able to deploy your apps on Azure AKS.",
        "You will be able to create and deploy Deployment, Service, ConfigMap, Secret",
        "You will be able to deploy and connect a web app (ASP NET Core) with a database (SQL Server)."
      ],
      "course_content": {
        "What is Kubernetes": [
          "Kubernetes architecture",
          "Kubernetes Objects: Deployment I Service I Secret I PersistentVolume",
          "Connect with the author"
        ],
        "Practical introduction to Kubernetes": [
          "Create AKS cluster through the Azure portal",
          "Cluster managed infrastructure",
          "Create Pod",
          "Create Deployment",
          "Exec into Pod",
          "Scale Pods with kubectl scale command",
          "Create Private Service",
          "Create Public Service with type LoadBalancer",
          "View Kubernetes Objects",
          "Quiz"
        ],
        "Creating the demo app": [
          "Create the MVC app using Visual Studio",
          "Add model and controller for Products",
          "Demo for the MVC app",
          "Source code of the entire application",
          "Quiz"
        ],
        "Creating the Docker containers for the app": [
          "Explaining Dockerfile",
          "Build Docker Container for MVC app",
          "Push Docker container to Docker Hub",
          "Quiz"
        ],
        "Kubernetes on minikube": [
          "Overview on setting up Kubernetes",
          "Deploy Docker container into Kubernetes using Dashboard",
          "Create and deploy a Deployment object",
          "Create and deploy a Service",
          "Create and deploy MSSQL on Docker container to k8s",
          "Connect web app to DB in Kubernetes using ENV",
          "Create PersistentVolume",
          "Create ConfigMap",
          "Create Secret",
          "Quiz"
        ],
        "Moving to Azure AKS": [
          "Create AKS cluster",
          "Connect to AKS Dashboard and kubectl",
          "Login to AKS using kubelogin",
          "StorageClass to create an Azure Disk",
          "Using LoadBalancer instead of NodePort",
          "Deploy PVC to Azure AKS",
          "Deploy Secret to Azure AKS",
          "Deploy Sql Server container to Azure AKS",
          "Deploy the mvc app to Azure AKS",
          "Running the app on AKS",
          "Quiz"
        ],
        "Kubernetes objects": [
          "Working with DaemonSet",
          "Working with StatefulSet",
          "[Demo] Working with StatefulSet",
          "Quiz"
        ],
        "Kubernetes RBAC model": [
          "Introduction to Role and RoleBinding"
        ],
        "Secure secrets in Kubernetes with Workload Identity": [
          "Passwordless identities",
          "[Demo] Passwordless identities"
        ],
        "DevOps for Kubernetes using Azure DevOps": [
          "Publish project to Github",
          "CI pipeline: Build and Push container",
          "CI pipeline: Copy and Publish yaml files",
          "CI pipeline: Replace container Tag",
          "CD pipeline: Deploy to Kubernetes from Azure DevOps",
          "CD pipeline: Kubectl apply for each file",
          "Run CI-CD pipelines"
        ]
      },
      "requirements": [
        "Familiarity with ASP NET Core",
        "Familiarity with SQL Server database"
      ],
      "description": "This goal of this course is to get you started with Kubernetes. Through a practical workshop, you'll learn how to dockerize an app, deploy it to Kubernetes cluster and apply DevOps into it.\n\n\nAgenda:\nCreate ASP.NET Core MVC app\nAdd Model and Controller for Products\nDemo of the MVC app.cmproj\nDemo of the MVC app\n\n\nExplaining Dockerfile\nBuild Docker Container for MVC app\nPush Docker container to Docker Hub\n\n\nOverview on setting up Kubernetes\nDeploy Docker container into Kubernetes using Dashboard\nDeploy Docker container using YAML and kubectl\nCreate and deploy a Service\nCreate and deploy MSSQL\nConnect web app to DB in Kubernetes using ENV\nCreate PersistentVolume\nConfigMap\nSecret\n\n\nCreate AKS cluster\nConnect to AKS Dashboard and kubectl\nStorageClass to create an Azure Disk\nUsing LoadBalancer instead of NodePort\nDeploy PVC to Azure AKS\nDeploy Secret to Azure AKS\nDeploy Sql Server container to Azure AKS\nDeploy the mvc app to Azure AKS\nRunning the app on AKS\n\n\nPublish project to Github\nCreate the CI pipeline using Azure DevOps\nCreate the CD pipeline\nEdit the pipeline to use the newest container\nRun the CI-CD pipeline",
      "target_audience": [
        "This course is designed for developers who want to get started with Kubernetes with focus on how to deploy, manage and scale monolith or microservices apps. It is worth mentioning that this course is not for IT specialists."
      ]
    },
    {
      "title": "Atlassian Bamboo Data Center from Beginner to Advanced!",
      "url": "https://www.udemy.com/course/bamboo-continuous-integration-for-devops-developers/",
      "bio": "Continuous Integration and Delivery (CI/CD) with Bamboo Data Center for Developers and DevOps (Second Edition)",
      "objectives": [
        "Architecture of a cost-effective and scalable Atlassian Bamboo setup.",
        "Installing Atlassian Bamboo on Windows, MacOS and Linux.",
        "Installing Atlassian Bamboo using Docker.",
        "Installing Build Agents and Build Capabilities",
        "Running builds in isolated environments",
        "Working with Projects, Build Plans, Stages, Jobs and Tasks",
        "Connecting to Git-based source control systems securely.",
        "Compiling the code and packagin the artifacts.",
        "Running unit tests and inspecting the code quality.",
        "Deploying the code artifacts using Docker",
        "Deploying serverless microservices",
        "Administering Bamboo (e.g. users, groups, permissions etc)"
      ],
      "course_content": {
        "Introduction": [
          "What is Bamboo and what is Continuous Integration",
          "The Architecture of a Continous Integration System with Bamboo"
        ],
        "Installing Bamboo": [
          "The Requirements",
          "Installing Bamboo on Windows",
          "Installing Bamboo on Mac",
          "Installing Bamboo on Linux",
          "Setting Up Database and Configuring Atlassian Bamboo"
        ],
        "Build Agents": [
          "Introduction to Build Agents",
          "Types of Build Agents",
          "Introdction to Elastic Build Agents",
          "Basics of Deploying a Build Agent",
          "Adding a Local Build Agent and Its Capabilities",
          "Installing and Authorizing a Remote Build Agent",
          "Project structures in Bamboo"
        ],
        "Working with Source Control Systems": [
          "Connecting to GitHub and GitHub Enterprise",
          "Connecting to Git Using SSH Keys",
          "Connecting to Public Git Repositories"
        ],
        "Build Plans. Building and Packaging your code": [
          "Creating Projects, Build Plans, Stages, Jobs and Tasks",
          "Compiling the Code and Creating an Artifact",
          "Variables in Bamboo",
          "Important Variables to Remember",
          "Creating and Using Variables in Bamboo",
          "Triggers in Bamboo",
          "Plan Branches"
        ],
        "Automated Testing and Code Quality": [
          "Using The Artifacts of The Previous Stage",
          "Running Unit Tests in Bamboo",
          "Showing The Test Results in Bamboo",
          "Inspecting Code Quality (OPTIONAL)"
        ],
        "Continuous Delivery": [
          "Introduction to Deployment Projects",
          "Creating Deployment Projects",
          "Building a Docker Image in a Deployment Project",
          "Pushing a Docker Image to Docker Registry",
          "Deploying AWS Lambda Functions - Fundamentals",
          "Deploying AWS Lambda Functions - Preparing the Artifacts",
          "Deploying AWS Lambda Functions - Uploading Artifacts to AWS S3",
          "Deploy AWS Lambda Functions - Deploying with Creating a CloudFormation Stack",
          "Deployment Permissions"
        ],
        "Administering Bamboo": [
          "Users, Groups, and Permissions",
          "Configuring an Email Server and Sending Notifications",
          "Extending Atlassian Bamboo Using Applications and Add-ons"
        ],
        "Bamboo and Docker": [
          "Leveraging the Power of Docker in Atlassian Bamboo Data Center",
          "Building, Testing and Packaging the Code Inside a Docker Container",
          "Deploying Atlassian Bamboo Data Center Using Docker",
          "The Docker on Docker Technique"
        ],
        "The End": [
          "Thank You"
        ]
      },
      "requirements": [
        "Basic knowledge about installing applications on Windows, Mac or Linux"
      ],
      "description": "Master Atlassian Bamboo Data Center: Unlock the Power of Continuous Integration and Delivery!\n\n\nLearn how to leverage Atlassian Bamboo Data Center, the industry-leading Continuous Integration and Delivery tool, to streamline your software development process. This comprehensive course offers valuable insights and hands-on training to help you harness the full potential of this powerful technology.\n\n\nIn this course, you will discover:\n\n\nCost-effective and scalable deployment of Atlassian Bamboo.\nBuilding, Testing and Packaging your code.\nDeploying your code artifacts as Docker Containers.\nDeploying Serverless microservices.\nUnit testing and code inspection.\nAdministrative tasks\n\n\nThis course is the culmination of over two decades of my experience as a software engineer and my role as a technology manager specializing in crafting adaptable and cost-effective CI/CD systems over the past decade.\n\n\nRecently, I've undertaken a comprehensive overhaul of this course, reimagining it from the ground up. The goal was to ensure it aligns seamlessly with the latest features of Atlassian Bamboo Data Center and embraces contemporary software deployment trends, including containerization and serverless deployments.\n\n\nUpon completing this course, you'll have honed the highly sought-after skills required for architecting, setting up, and configuring Atlassian Bamboo confidently.\n\n\nJoin this course today and unlock the full potential of Atlassian Bamboo in your software development journey. Enrol now to embark on an exciting learning experience!",
      "target_audience": [
        "Developers",
        "DevOps and Platform engineers",
        "Technology Managers",
        "Solution Architects",
        "University Students of IT and/or Computer Science"
      ]
    },
    {
      "title": "APIs: Crash Course",
      "url": "https://www.udemy.com/course/learn-apis/",
      "bio": "With the Facebook API & Twilio",
      "objectives": [
        "By the end of this course you will be able to code with API data from Facebook, Twilio & more!"
      ],
      "course_content": {
        "Prerequisites": [
          "Getting Started Guide",
          "Download Materials & Code Examples",
          "How Do I Download & Install Sublime?",
          "HTML/CSS Primer",
          "Why Do We Need A Webserver?"
        ],
        "Crash Course: APIs": [
          "What are APIs?",
          "Databases (Part 1)",
          "Databases (Part 2)",
          "Database Quiz (answers)",
          "APIs Read & Write Data",
          "APIs: XML & JSON",
          "API Quiz (answers)"
        ],
        "The Facebook API": [
          "The Facebook API: Basics & Like Button",
          "The Facebook API: The Graph API"
        ],
        "The Twilio API and Beyond": [
          "The Facebook API: The Graph Explorer",
          "Facebook: Recap & Beyond",
          "The Twilio API",
          "APIs for Every Occasion",
          "Wrap Up"
        ]
      },
      "requirements": [
        "Download & install Sublime Text - http://www.sublimetext.com/",
        "Follow the course prerequisite videos if you're an absolute beginner and you need help getting setup with HTML & Sublime"
      ],
      "description": "Are you a creative or entrepreneur that wishes you could speak tech with your web development team? Sure, you’ve heard about APIs, but maybe you’re not totally sure what they are?\nIn this class we’ll learn all about APIs: what they are; and how to get started using them! Later on we’ll look at some code and live data from both Facebook and Twilio.\nOne last thing... If you're new to programming - you might also want to check out my Programming For Non-Programmers.\nHey Chris, what's an API?\nHere's an example: have you ever heard someone say something like, “The NY Times has an API we can use.”? What they are saying is \"The NY Times has some data that you can freely access and use in your project.\"\nIn addition to that, the term API can also refer to apps that write and process data on our behalf. We’ll cover this, and much more!\nWho Is this Class For?\nThis class is made for the total beginner. If you’re looking to learn about APIs you’re in the right place. If you’re a developer looking to query some API data, we’ll be providing you with code examples to take home.\nFor Non-Programmers\nMaybe you're new to APIs? Or you've had one of the IT guys in your office try to explain this to you before, but to no avail? I totally get it, and so I've designed this class with you in mind.\nWhat I’ve found is that the best way to learn the concepts of programming is to actually write some code yourself. (Much like how we learn a foreign language - you have to use the knowledge). If you’re not a developer, you should still be able to follow along with the code examples because we'll break down the logic step-by-step. Basically what I’m saying is... that we’ll learn by doing here.\nSign up for this class and you’ll learn:\nWhat is an API?\nHow an understanding of APIs can help cut development time of a project in half\nWhat APIs are available and worth knowing about?\nHow to register a Facebook App so that we can start using the Facebook API\nHow to write code to make an API call to Facebook that delivers a user’s “Top 10 Facbook likes”\nHow to set up an app with the Twilio API\nThis Class Includes\nOver 2 hours of easy to follow video content\nA project designed by me for you to be able to apply your skills\nA quiz\nThe final slide deck\nCode examples for working with the Facebook and Twilio API. All fo the code in this class is written in PHP. The concepts are the same and could easily be applied to Ruby, Python or other languages.\nI’m looking forward to class!\n------------------------------------------------------------\nFeedback from my Programming For Non-Programmers Series:\n\"You taught the class in four hours what took me two years to teach myself.\" - Matt Jared, Capital Factory Austin, X\n\"I've traveled a steep learning curve thanks to Chris' friendly and lucid style of teaching.\" - Charles Best, CEO of DonorsChoose.org\n\"I wish I had taken this class 5 years ago!\" - Michael Goodwin, UX Designer\n\"You are the only person who has been able to sufficiently teach me code.\" - Darren Hakimi, Analyst\n\"You are Articulate and Engaging. Broad and Diverse Range of Topics. That s right bro!!!!! Not easy to address so much in limited time.\" - student feedback\n\"Informative, digestible, actionable\" - Katherine, Entrepreneur",
      "target_audience": [
        "Absolute beginner to intermediate developer"
      ]
    },
    {
      "title": "x86 Assembly Language Programming Masters Course",
      "url": "https://www.udemy.com/course/x86-assembly-language-programming-masters-course/",
      "bio": "In just four hours learn assembly at a specialized level taught by an expert with 20 years experience.",
      "objectives": [
        "How to use Emu8086 to create assembly programs for the 8086 processor",
        "All about registers in a processor and how they can be useful for storing temporary information",
        "All about segmentation in Intel processors",
        "All about interrupts",
        "Subroutines and return addresses",
        "The stack",
        "Talking with a C program using assembly",
        "Talking with an assembly program using C",
        "Understanding disassembly",
        "Understanding how GCC compiler can create machine code that can call our assembly functions",
        "How to use NASM Assembler"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Legacy 8086 Processor Development": [
          "What Is Assembly Language?",
          "Installing The Emulator",
          "Hello World",
          "Transistors And Logic Gates Understanding The Processor",
          "Registers In The 8086",
          "General Purpose Registers Optional Extended Explanation",
          "Segmentation",
          "The Stack, Subroutines And Endianness Explained",
          "Moving Data To And From Memory",
          "Interrupts And How They Work",
          "Talking With Hardware With In And Out Instructions",
          "Mathematics Adding, Substraction, Division And Multiplication",
          "Condition Instructions",
          "Reading bytes with the lodsb instruction",
          "Storing bytes with the stosb instruction",
          "Revising Our Hello World Program",
          "Helpful Resources For The 8086 Processor",
          "Legacy 8086 Processor Development Test"
        ],
        "Modern x86 Processor Development": [
          "Installing x86 Assembler Dependencies",
          "x86 Hello World",
          "Using Assembly With C",
          "Local Variables In Assembly",
          "Returning Structures In Assembly",
          "Pointers In Assembly",
          "Passing Structures To Assembly",
          "Receive Input From The Keyboard",
          "Exam"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic C knowledge is recommended if not C then at least some experience in another programming language",
        "A drive to solve problems. Assembly is nothing like any other language, I will teach you what I know but you have to be willing to pay attention and try again if you mess up"
      ],
      "description": "This course is intended to teach you x86 assembly programming. This course teaches you how processors work and how machine code is possible. We start the course using an emulator for the legacy Intel 8086 processor where we learn all about registers and the memory segmentation model.\nSince we start the course with an emulator it allows me to pause the machine at any moment in time and show you exactly what is going on.\nAfter you learn all about the legacy 8086 processor and how to program assembly for it we then move to the modern processors of today and start writing assembly for those. You are taught how to write 32 bit programs for Windows machine's and most importantly how to communicate with C programs using assembly language. You are shown how to access variables, structures and arrays through just assembly code. We also call C functions and they call our assembly routines.\nThis course recommends that you have some prior experience in the C programming language or at the very least some programming experience in another language. The reason for this is because part two of the course when I teach modern assembly I reference the C programming language quite a lot since we write assembly that can talk with C.\n\n\nRoyalty Free Music from Bensound",
      "target_audience": [
        "Beginner Assembly Programmers",
        "People interested in how the processor works",
        "People wishing to pursue a career in embedded development"
      ]
    },
    {
      "title": "Game Hacking With Artificial Intelligence - FPS Aimbot",
      "url": "https://www.udemy.com/course/artificial-intelligence-in-game-fps-aimbot/",
      "bio": "Yolov5 training and detecting, Writing mouse driver, collecting data from inside the games, making AI aiming bot.",
      "objectives": [
        "How to Train Custom Yolov5 Model",
        "How to Run Detecting Algorithm With Custom Model.",
        "How to Collect Data Easily From Inside The Games.",
        "How to Label Your Datas.",
        "How to Make Mouse Driver With Arduino Leonardo.",
        "How to Give Mouse Input To All Games With Programming."
      ],
      "course_content": {
        "Trailer": [
          "Trailer"
        ],
        "Installations": [
          "Installing Python and Virtual Enviroment"
        ],
        "Collecting Data From Inside Games": [
          "Writing Script For Collecting Data From Inside Games",
          "Collecting Data"
        ],
        "Training Model": [
          "Labeling Data",
          "Training Yolov5 Model Part-1",
          "Training Yolov5 Model Part- 2"
        ],
        "Detecting Targets": [
          "Installing Cuda",
          "Writing Target Detecting Script"
        ],
        "Mouse Driver": [
          "The Theorem Of The Mouse Driver",
          "Arduino İnstallations For Leonardo",
          "Preparing USB Host",
          "Mouse Driver Script (Server)"
        ],
        "Finishing Aimbot": [
          "Connecting Detecting Algorithm and Mouse Driver",
          "Testing System"
        ]
      },
      "requirements": [
        "Basic python knowledge.",
        "Basic information about installing applications on computer.",
        "Having Arduino Leonardo and USB Host Shield.",
        "Be able to solder (simple level)."
      ],
      "description": "Attention Please: The ai model in this course is trained to detects bots only. Cannot be used in online matches.\nWatch this course for information purposes. Using the methods in this course may get you banned in the game.\nRapidly developing artificial intelligence has outperformed humans in the esports sector, as in most sectors.\nI think the use of 3rd party artificial intelligence software in games will increase in the future.\nIn this course we give a simple introduction to this technology.\nThis course aims to make auto aiming bot at fps games.\nThis course contains:\nhow to easily collect data from games,\nhow to label your dataset,\nhow to train your custom model with Yolov5,\nhow to use detecting with your custom model,\nhow to make mouse driver for be able to give mouse input to all games.\nWith the mouse driver we have made, you can give mouse input to all games.\nI published on udemy all materials used in this course like dataset, scripts, arduino leonardo scripts, trained model.\nYou can follow course easily with use this materials.\n\n\nI did not explain the codes I wrote in this course in detail. It would be helpful to have basic python knowledge. It will be beneficial for you to know how to install programs such as cuda and python on your computer.\nIf you use the techniques in this course, there is a possibility that you will be punished by the game be carefull.",
      "target_audience": [
        "Tech-savvy people.",
        "People who want to learn Yolov5.",
        "People who want to learn how to make mouse driver."
      ]
    },
    {
      "title": "Mastering critical SKILLS in Algorithms using C++: Part 1",
      "url": "https://www.udemy.com/course/skills-algorithms-cpp/",
      "bio": "Part 1 and 2 have 140 Challenges and solutions to sharpen your problem-solving skills and smooth interviews preparations",
      "objectives": [
        "Practice 90 problems to sharpen problem-solving and algorthmic skills",
        "Expose yourself to many algorithmic techniques",
        "After the course, a smooth experience to prepare for coding interviews",
        "Short and well written codes"
      ],
      "course_content": {
        "Getting Started": [
          "Algorithms - What and Why",
          "Algorithms in practice",
          "Prerequisites",
          "Effective usage of the course",
          "Quiz Intro"
        ],
        "Online Judges": [
          "Online Judge",
          "LeetCode OJ",
          "SPOJ OJ",
          "Uva OJ",
          "CodeForces OJ"
        ],
        "Recursion: Basics Review": [
          "Note",
          "Recursive Functions 1",
          "Recursive Functions 2",
          "Recursive Functions Practice 1",
          "Recursive Functions Practice 2",
          "Recursive Functions Practice 3",
          "Recursive Functions Homework 1",
          "Recursive Functions Homework 1 - Solutions p1",
          "Recursive Functions Homework 1 - Solutions p2 p3 p4 p5 p6 p7 p8",
          "Recursive Functions Homework 2",
          "Recursive Functions Homework 2 - Solutions p9",
          "Recursive Functions Homework 2 - Solutions p10 p11 p12",
          "Recursive Functions Homework 2 - Solutions p13",
          "Recursive Functions Homework 2 - Solutions p14",
          "Recursive Functions Homework 2 - Solutions p15",
          "Recursive Functions Homework 2 - Solutions p16",
          "Recursive Functions Homework 2 - Solutions p17"
        ],
        "Complexity Analysis": [
          "Note",
          "Asymptotic Complexity 1 - Intro",
          "Asymptotic Complexity 2 - Time",
          "Asymptotic Complexity 3 - Some Math",
          "Asymptotic Complexity 4 - Space",
          "Quiz Complexity 1"
        ],
        "Sorting: Insertion, Selection and Count": [
          "Insertion Sort 1",
          "Insertion Sort 2",
          "STL Sorting",
          "Selection Sort",
          "Count Sort",
          "Quiz Sorting",
          "Sorting Homework 1 - 6 Medium to Hard Challenges",
          "Sorting Homework 1 - Solutions p1 p2 p3",
          "Sorting Homework 1 - Solutions p4 p5",
          "Sorting Homework 1 - Solutions p6",
          "Sorting Homework 2 - 6 Easy to Medium Challenges",
          "Sorting Homework 2 - Solutions p1 p2 p3",
          "Sorting Homework 2 - Solutions p4",
          "Sorting Homework 2 - Solutions p5",
          "Sorting Homework 2 - Solutions p6",
          "Sorting Homework 3 - 3 Hard Challenges",
          "Sorting Homework 3 - Solutions p1",
          "Sorting Homework 3 - Solutions p2",
          "Sorting Homework 3 - Solutions p3"
        ],
        "Searching: Binary Search": [
          "Binary Search Basics 1",
          "Binary Search Basics 2",
          "Binary Search Homework 1 - 4 Medium Challenges",
          "Binary Search Homework 1 Solutions p1",
          "Binary Search Homework 1 Solutions p2",
          "Binary Search Homework 1 Solutions p3",
          "Binary Search Generalization 1",
          "Binary Search Generalization 2",
          "Binary Search Homework 2 - 3 Medium Challenges",
          "Binary Search Homework 2 - solutions p1",
          "Binary Search Homework 2 - solutions p2",
          "Binary Search Homework 2 - Solutions p3",
          "Binary Search Homework 3 - 2 Hard Challenges",
          "Binary Search Homework 3 - Solutions p1",
          "Binary Search Homework 3 - Solutions p2",
          "Binary Search on Real Values",
          "Binary Search Homework 4 - 3 Medium Challenges",
          "Binary Search Homework 4 Solutions p1",
          "Binary Search Homework 4 Solutions p2",
          "Binary Search Homework 4 Solutions p3",
          "Binary Search Thoughts",
          "Quiz: Binary Search"
        ],
        "Graph Representation": [
          "Relationships Everywhere",
          "Graph Terminology",
          "Quiz - Graph Terminology",
          "Adjacency Matrix Representation",
          "Adjacency List Representation",
          "Graph Representation Homework 1 - 3 Easy Challenges",
          "Graph Representation Homework 1 - Solutions",
          "Graph Representation Homework 2 - 5 Medium Challenges",
          "Graph Representation Homework 2 - Solutions p1 p2",
          "Graph Representation Homework 2 - Solutions p3",
          "Graph Representation Homework 2 - Solutions p4 p5",
          "Graph Representation Homework 3 - 2 Hard Challenges",
          "Graph Representation Homework 3 - Solution p1",
          "Graph Representation Homework 3 - Solutions p2"
        ],
        "Graph Depth First Search": [
          "Depth First Search 1",
          "Depth First Search 2",
          "DFS Homework 1 - 3 Easy Problems",
          "DFS Homework 1 - Solutions p1 p2",
          "DFS Homework 1 - Solution p3",
          "DFS on Matrix 1",
          "DFS on Matrix 2",
          "DFS on Matrix 3",
          "DFS Homework 2 - 4 Medium Problems",
          "DFS Homework 2 - Solutions p1 p2",
          "DFS Homework 2 - Solutions p3 p4",
          "Reductions on Graph",
          "DFS Homeowrk 3 - 3 Medium to Hard Challenges",
          "DFS Homeowrk 3 - Solution p1",
          "DFS Homeowrk 3 - Solution p2",
          "DFS Homeowrk 3 - Solution p3",
          "DFS Homework 4 - 4 Hard Problems",
          "DFS Homework 4 - Solution p1",
          "DFS Homework 4 - Solution p2",
          "DFS Homework 4 - Solution p3",
          "DFS Homework 4 - Solution p4A",
          "DFS Homework 4 - Solution p4B",
          "Cycle Detection in Directed Graph"
        ],
        "Graph Breadth First Search": [
          "Breadth First Search 1",
          "Breadth First Search 2",
          "Breadth First Search 3",
          "BFS Homework 1 - 3 Easy Problems",
          "BFS Homework 1 - Solutions p1",
          "BFS Homework 1 - Solutions p2",
          "BFS Homework 1 - Solutions p3",
          "BFS Homework 2 - 3 Medium Problems",
          "BFS Homework 2 - Solution p1",
          "BFS Homework 2 - Solution p1c p2 p3",
          "BFS Homework 3 - 3 Medium Problems",
          "BFS Homework 3 - Solution p1",
          "BFS Homework 3 - Solution p1c p2",
          "BFS Homework 3 - Solution p3",
          "BFS Homework 4 - 4 Medium to Hard Challenges",
          "BFS Homework 4 - Solution p1",
          "BFS Homework 4 - Solution p2",
          "BFS Homework 4 - Solution p3",
          "BFS Homework 4 - Solution p4",
          "BFS Homework 5 - 2 Hard Challenges",
          "BFS Homework 5 - Solution p1",
          "BFS Homework 5 - Solution p2",
          "Graph Traversal Thoughts"
        ],
        "Topological Sorting": [
          "Topological Sorting",
          "Kahn's algorithm 1",
          "Kahn's algorithm 2",
          "Kahn's Algorithm 3",
          "Topological Homework 1 - 2 Easy to Medium Challenges",
          "Topological Homework 1 - Solutions",
          "Topological Homework 2 - 3 Medium to Hard Challenges",
          "Topological Homework 2 - Solution p1",
          "Topological Homework 2 - Solution p2",
          "Topological Homework 2 - Solution p3",
          "Topological Homework 3 - 3 Hard Challenges",
          "Topological Homework 3 - Solution p1",
          "Topological Homework 3 - Solution p2",
          "Topological Homework 3 - Solution p3",
          "DFS for Topological Sort",
          "Topological Sorting Thoughts"
        ]
      },
      "requirements": [
        "Strong programming background",
        "Solved several practice during a programming course",
        "STL, especially vector class. Others include: set, map and hash table",
        "Optional but recommended: Implement long programming projects",
        "Highly recommended: Attended a strong data structure course first and solved a lot"
      ],
      "description": "Almost all other courses focus on knowledge. In this course, we focus on gaining real skills.\nOverall:\nThe course covers a good subset of algorthmic topics\nLearn the inner details of the algorithms and their time & memory complexity analysis\nLearn how to code line-by-line\nSource code and Slides and provided for all content\nAn extensive amount of practice to master the taught algorithms (where most other content fails!)\n\n\nContent of this part\nOnline Judges and How to use\nRecursion: Basics Review\nComplexity Analysis (Part 1)\nSorting: Insertion, Selection and Count\nBinary Search: Basic and generalised forms\nGraph Representation\nGraph DFS\nGraph BFS\nGraph Topological Order\nExtensive practice on these subjects\n\n\nPhilosophy of the course 2 parts:\nThe first part focus on topics that are more common in interviews\nThe first part focus on topics that require less proving skills. This allow you to sharpen problem-solving skills more first\nIn the next part we proceed toward other important topics in the Algorithms field.\n\n\nTeaching Style:\nInstead of long theory then coding style, we follow a unique style\nI parallelize the concepts with the codes as much as possible\nGo Concrete as possible\nUse Clear Simple Visualization\nEngagement\n\n\nBy the end of the journey\nSolid understanding of Algorithms topics in C++\nMastering different skills\nAnalytical and Problem-Solving skills\nClean coding for algorithms\nWith the administered problem-solving skills\nYou can start competitive programming smoothly\nA strong step toward interviews preparation\n\n\nPrerequisites\nProgramming Skills:\nStrong Programming skills\nSolving a lot of basic problem-solving problems on fundamentals\nGood understanding for basic recursion (E.g. Fibonacci)\nSTL, especially Vectors, map/set, unordered map/set\nHighly Preferred:\nDo programming projects\nFinish a descent data structure course (extensive data structure practice)\n\n\nDon't miss such a unique learning experience!\n\n\nAcknowledgement: “I’d like to extend my gratitude towards Robert Bogan for his help with proofreading the slides for this course”",
      "target_audience": [
        "People who want to master a critical CS component",
        "People who want to prepare for interviews, then Algorithms is a must step before interviews preparations"
      ]
    },
    {
      "title": "Spring rSocket Masterclass: High Performance Microservices",
      "url": "https://www.udemy.com/course/spring-rsocket/",
      "bio": "Unlock High-Performance Communication and Scalability using rSocket and Java Reactive Programming",
      "objectives": [
        "Master rSocket: Learn how to leverage rSocket for building high-performance, reactive microservices.",
        "Experience Blazing-Fast Performance: Benefit from rSocket's superior performance compared to traditional HTTP.",
        "Leverage Persistent TCP Connections: Utilize persistent connections for bidirectional communication.",
        "Embrace Reactive Streams: Harness the power of reactive streams for non-blocking, asynchronous communication.",
        "Explore Versatile Interaction Models: Choose the best interaction model for your use case.",
        "Gain Hands-On Experience: Learn through practical exercises and real-world scenarios.",
        "Build Microservices with rSocket: Develop microservices using rSocket for enhanced performance and scalability.",
        "Create Client-Server Games: Apply rSocket to build real-time, interactive applications.",
        "Stay Ahead of the Curve: Learn a cutting-edge technology that is gaining popularity in the industry.",
        "Comprehensive rSocket Coverage: Explore all aspects of rSocket, from basics to advanced topics.",
        "Hands-On Exercises: Practice building rSocket applications through practical exercises.",
        "Real-World Scenarios: Apply rSocket to real-world use cases, such as microservices and games.",
        "Expert Guidance: Learn from a seasoned instructor who specializes in rSocket."
      ],
      "course_content": {
        "Introduction": [
          "What Are You Going To Learn?",
          "[THEORY] - Need For RSocket",
          "[DEMO] - RSocket Performance",
          "[Optional] - Reactive Series"
        ],
        "Resource": [
          "*** Resource ***"
        ],
        "RSocket - Getting Started": [
          "Introduction",
          "RSocket - Interaction Models",
          "Maven Dependencies",
          "Project Setup",
          "Interaction Model - 1: Fire And Forget",
          "Creating RSocket Server",
          "Creating RSocket Client",
          "Invoking Fire And Forget",
          "Socket Acceptor",
          "Note On Fire And Forget",
          "Object Util",
          "Creating DTO (Data Transfer Objects)",
          "Interaction Model - 2: Request And Response",
          "Interaction Model - 3: Request Stream",
          "Interaction Model - 4: Request Channel - Part 1",
          "Interaction Model - 4: Request Channel - Part 2",
          "RSocket Interaction Models - Real Time Examples",
          "Peer To Peer",
          "Batch Job Service",
          "Server Calling Client",
          "BackPressure Demo",
          "Persistent Connection Issue",
          "Persistent Connection Issue Fix",
          "RSocket Connection Setup - Part 1",
          "RSocket Connection Setup - Part 2",
          "Summary"
        ],
        "RSocket With Spring": [
          "Introduction",
          "Creating DTO",
          "Service Class",
          "@MessageMapping Controller",
          "RSocket Client - RSocketRequester",
          "RSocket Interaction Models With Spring",
          "Accessing Path Variable - @DestinationVariable",
          "RSocket Requester w/o Data",
          "Doing Input Validation",
          "Error Handling: OnErrorReturn",
          "Error Handling: @MessageExceptionHandler",
          "Error Handling: Passing Error As Message",
          "Server Calling Client - Part 1",
          "Server Calling Client - Part 2"
        ],
        "Game - Guess A Number - Assignment": [
          "Assignment",
          "[SOLUTION] - Server Side",
          "[SOLUTION] - Client Side - Part 1",
          "[SOLUTION] - Client Side - Part 2",
          "[DEMO] - Client vs Server Finale"
        ],
        "RSocket - Connection Setup / Retry / Resumption": [
          "RSocket - Connection Setup",
          "Passing Object During Connection Setup",
          "Disposing Connections",
          "Creating Connection Manager - Part 1",
          "Creating Connection Manager - Part 2",
          "Connect Mapping Routing",
          "Connect Mapping Clarification",
          "Connection Retry",
          "Session Resumption - Part 1",
          "Session Resumption - Part 2",
          "[Resource ] - Nginx - Setup",
          "Nginx Setup",
          "Session Resumption - Part 3",
          "Session Resumption - Part 4",
          "Summary"
        ],
        "Connection/Load Balancing": [
          "Introduction",
          "Running Multiple Instances",
          "Server Side Balancing",
          "Client Side Balancing Introduction",
          "Fake Service Registry",
          "Load Balance Target Config",
          "Client Side Balancing - Part 1",
          "Client Side Balancing - Part 2",
          "Weighted Load Balance Strategy",
          "Summary"
        ],
        "RSocket Security": [
          "SSL/TLS - Introduction",
          "SSL/TLS - Commands",
          "SSL/TLS - Generating Certificates",
          "SSL/TLS - Enabling SSL On Server Side",
          "SSL/TLS - Demo",
          "[Authentication & Authorization] - Introduction",
          "Maven Dependencies",
          "Project Setup",
          "Fake User Repository",
          "Reactive User Details Service",
          "Security Config",
          "Secured Controller",
          "Setup Request - Permit All",
          "Setup Authentication & Authorization Test",
          "Setup vs Request Level Authentication",
          "Request Level Authentication",
          "Path Based Authorization",
          "Injecting Authentication Principal",
          "Usage Of @PreAuthorize",
          "Summary"
        ],
        "Reactive Microservice With RSocket - Stock Service": [
          "Introduction",
          "Project Setup",
          "Packages & DTO",
          "Stock - Domain Object",
          "Stock Service",
          "Controller",
          "Demo"
        ],
        "Reactive Microservice With RSocket - User Service": [
          "Introduction",
          "Project Setup",
          "Package & DTO",
          "Entity & Repository",
          "User Service Implementation",
          "User Transaction Service",
          "User Transaction Controller",
          "User Transaction Controller CRUD Operations",
          "Data Setup Service",
          "[SpringBoot 2.6 UPDATE]",
          "User CRUD DEMO",
          "Simple Assignment",
          "Assignment Solution",
          "Passing Metadata - Part 1",
          "Passing Metadata - Part 2",
          "Exposing WebSockets",
          "User Transaction Service Test"
        ]
      },
      "requirements": [
        "Java Reactive Programming",
        "Comfortable With Indian Accent"
      ],
      "description": "*** Course Project updated for latest Spring Boot 3.2 ***\nWelcome to the world of Reactive Socket (rSocket), the blazing-fast binary protocol that has gained significant popularity in recent years, particularly thanks to Netflix. With rSocket, you can develop fully non-blocking asynchronous Microservices while leveraging the power of Reactive-Streams support for client and server communication.\nWhy choose rSocket?\nEnhanced Performance: Operating at layer 5/6, rSocket proves to be considerably faster than traditional HTTP, which operates at network layer 7.\nPersistent TCP Connection: rSocket utilizes a persistent TCP connection, allowing bidirectional communication where the server can also call the client.\nReactive Streams Support: Benefit from non-blocking and asynchronous communication between client and server applications through the use of Reactive Streams.\nVersatile Interaction Models: Alongside the standard Request-Response model, rSocket offers various interaction models tailored to different use cases.\nIn this course, you will delve into the intricacies of rSocket, exploring its features and unlocking its potential. You will gain hands-on experience with Spring Integration, rSocket routing, and various interaction models. Topics covered include connection setup, managing connections, cancellation, application flow control, error handling, SSL/TLS, authentication and authorization at both the connection and request levels, load balancing, and more.\nThroughout the course, you will engage in practical exercises and real-world scenarios, including the development of microservices, CRUD applications, integration with Spring Data Reactive MongoDB, and the creation of a client-server game.\nJoin this course to master rSocket, harness its performance advantages, and gain the skills necessary to build high-performance reactive applications using the power of Java Reactive Programming.\nNote: This course assumes a familiarity with Java and Reactive Programming concepts.",
      "target_audience": [
        "Any Developer / Architect who is interested in Microservice Development / Architecture"
      ]
    },
    {
      "title": "Prep for Scrum with Kanban Exams",
      "url": "https://www.udemy.com/course/prep-for-scrum-with-kanban-psk-i-certification-prep/",
      "bio": "Theory + Practice Questions",
      "objectives": [
        "Understanding and applying the Scrum Framework",
        "Scrum Events & Artifacts",
        "Kanban Practices & Metrics",
        "Integrating Scrum with Kanban",
        "Impact of Kanban on Scrum Events"
      ],
      "course_content": {
        "Introduction to the Course!": [
          "Welcome to the Course & Know your Instructor!"
        ],
        "All about Scrum!": [
          "Introduction to Scrum",
          "Course Resources",
          "You've reached your first milestone!",
          "Three Pillars of Scrum",
          "Scrum Team: Product Owner",
          "Scrum Team: Developers",
          "Scrum Team: Scrum Master",
          "Remember!",
          "It's time to test your understanding!",
          "Introduction to Scrum Events",
          "Scrum Event 1: Sprint",
          "Scrum Event 2: Sprint Planning",
          "Scrum Event 3: Daily Scrum",
          "Remember!",
          "Scrum Event 4: Sprint Review",
          "Scrum Event 5: Sprint Retrospective",
          "Remember!",
          "Introduction to Scrum Artifacts",
          "Scrum Artifact 1: Product Backlog",
          "Scrum Artifact 2: Sprint Backlog",
          "Scrum Artifact 3: Increment",
          "Advantages & Disadvantages of Scrum"
        ],
        "All about Kanban!": [
          "Introduction to Kanban",
          "Introduction to Kanban Board",
          "Finding inefficiencies in the process",
          "Underutilization of Resources",
          "Unequal Sized Tasks",
          "Marking the Tasks",
          "Other Issues",
          "Defining Done",
          "Daily Stand up",
          "Specifying Rules",
          "Kanban Board Template Example",
          "Introduction to Kanban Flow Metrics",
          "Kanban Flow Metrics: Work in progress",
          "Time to test your understanding!",
          "Kanban Flow Metrics: Cycle Time",
          "It's time to test your understanding!",
          "Kanban Flow Metrics: Throughput",
          "Time to check your understanding!",
          "Kanban Flow Metrics: Work Item Age",
          "Time to test your understanding!",
          "Practical Exercise on Ageing Work in progress",
          "Leading & Lagging Indicators",
          "Introduction to Little's Law",
          "When & when not to use Little's Law",
          "Little's Law Assumptions",
          "Cummulative Flow Diagram"
        ],
        "Scrum with Kanban": [
          "Introduction to Scrum with Kanban",
          "Integrating Kanban with Scrum: Part 1",
          "Integrating Kanban with Scrum: Part 2",
          "Service Level Expectation",
          "Batch Size",
          "Impact of Kanban on Scrum Events"
        ],
        "PSK Exam: Practice Questions": [
          "Practice Questions"
        ],
        "Congratulations & about your certificate": [
          "Final milestone it is!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "There are no prerequisites for the course."
      ],
      "description": "Welcome to the course on Scrum with Kanban\nCongratulations on taking the first important step towards preparing for the Scrum with Kanban exams.\nTo prepare for the Scrum with Kanban certification assessment, it is recommended that individuals have a solid understanding of the principles and practices of both Scrum and Kanban, and have some experience applying these frameworks in a real-world setting.\nDisclaimer: Please note this is not a certified partner course\nThis course is a quick reference guide created for the Scrum with Kanban exams. The course also contains Practice Questions which will help you prepare for such Certifications.\nIn this course, you will learn how additional practices from Kanban can be introduced into Scrum Teams without changing Scrum. You will learn how to add the right practices and the benefits that Scrum Teams can achieve from using Scrum with Kanban.\nCourse Objectives\nGain a clear understanding of how flow works within the context of Scrum\nBe introduced to Kanban practices that Scrum Teams can adopt to help improve their effectiveness and efficiency\nUnderstand how to effectively use the appropriate Kanban practices without changing Scrum\nLearn a practical approach to improving transparency and visibility of work\nWho this Course is for?\nCourse is for all Scrum Practitioners, with an emphasis on Scrum Masters looking to add Flow techniques to their toolbox\nI hope that you will enjoy the course, be challenged by it and learn a lot.\nIt is suggested that you go through the course at a pace that makes sense for you. The topics build on each other, so it is better to slow down and really learn something than to just move on in order to keep up a certain pace.\nOver 15,000 students have enrolled into this course so far and have shared some great reviews about the course:\n★★★★★ \"Great match as i have been looking to find a concise yet detailed course for scrum with kanban. Great job Monika I'm enjoying the course so far.\"\n-Adeshina Adebowale\n★★★★★ \"The teacher is really good and she explains concepts very well and simply\"\n-Zahra Ebrahimi\n★★★★★ \"Amazing it was very helpfull.\"\n-Muhammad shahzad\nThis course has all the tools needed to get the job done. So, let’s do it, I’ll see you in class.\nAll the best!",
      "target_audience": [
        "Scrum Practitioners, with an emphasis on Scrum Masters looking to add Flow techniques to their toolbox",
        "Anyone who wishes to learn and validate how Scrum Teams can use Scrum with Kanban ability to support value creation and delivery",
        "Anyone who is looking for industry-recognized \"PSK I\" certification"
      ]
    },
    {
      "title": "Spring Boot Microservices with Spring Cloud Beginner to Guru",
      "url": "https://www.udemy.com/course/spring-boot-microservices-with-spring-cloud-beginner-to-guru/",
      "bio": "Learn to Master Spring Boot Microservices with Spring Cloud and Docker",
      "objectives": [
        "Learn how to develop Microservices with Spring Boot",
        "Learn how to deploy and manage Spring Boot Microservices with Spring Cloud",
        "How to deconstruct a monolith into Spring Boot Microservices",
        "Best Practices for Developing RESTFul APIs with Spring MVC",
        "How to consume RESTFul APIs using Spring RestTemplate",
        "Using Java Bean Validation with Spring Boot",
        "How to use Project Lombok and MapStruct to reduce boiler plate code",
        "Generate API documentation with Spring REST Doc",
        "Configure Jackson for JSON processing with Spring Boot",
        "Use JMS for messaging between Spring Boot Microservices",
        "Use Spring State Machine to Apply the Saga Pattern with Microservices"
      ],
      "course_content": {
        "Spring Boot Microservices Introduction": [
          "Welcome to Spring Boot Microservices!",
          "What you will build in the Spring Boot Microservices Course",
          "Getting the Most out of this Course",
          "Setting up your Development Environment",
          "Slack Group for Spring Boot Microservices with Spring Cloud B2G",
          "Is your IDE Free Like A Puppy?",
          "Free 120 Day IntelliJ IDEA Trial!",
          "GitHub Workflow"
        ],
        "Introduction to Microservices": [
          "Introduction to Intro to Microservices Section",
          "The Traditional Monolith Application",
          "What are Microservices?",
          "What is the Cloud?",
          "Adopting Microservices in Your Organization",
          "Microservices Quiz",
          "Microservice Architecture and Design",
          "12 Factor Applications",
          "Introduction to Microservices Conclusion"
        ],
        "Introduction to Restful Web Services": [
          "Introduction",
          "HTTP Protocol",
          "HTTP Request Methods",
          "Beginners Guide to REST",
          "Richardson Maturity Model",
          "Spring Framework and RESTFul Services",
          "Quiz - RESTful Web Services",
          "Conclusion"
        ],
        "Spring MVC Rest Services": [
          "Introduction",
          "Introducing SFG Beer Works",
          "HTTP GET with Spring MVC",
          "Introduction to Postman",
          "Axis TCPMon",
          "Assignment - Create GET Endpoint with Spring MVC",
          "Assignment - Create Get Endpoint with Spring MVC",
          "Assignment Review",
          "HTTP POST with SpringMVC",
          "Spring Boot Development Tools",
          "HTTP PUT with Spring MVC",
          "Spring MVC @RequestBody Annotation",
          "HTTP DELETE with Spring MVC",
          "Assignment - HTTP Operations with Spring MVC",
          "Assignment Review",
          "API Versioning",
          "API Versioning Example",
          "API Versioning and Source Control",
          "Spring MVC Rest Quiz",
          "LC Beer Service - Initial Spring Boot Project Creation",
          "LC Beer Service - Data Model",
          "LC Beer Service - Beer Controller",
          "LC Beer Service - JUnit 5 Controller Tests",
          "Conclusion to Spring MVC Rest Services"
        ],
        "Spring Boot RestTemplate": [
          "Introduction to Spring Boot RestTemplate",
          "HTTP GET with Spring RestTemplate",
          "HTTP POST with Spring RestTemplate",
          "HTTP PUT with Spring RestTemplate",
          "HTTP DELETE with Spring RestTemplate",
          "Assignment - Create Spring RestTemplate clients",
          "Assignment Review",
          "HTTP Clients",
          "Apache HTTP Client Configuration",
          "Apache Client Request Logging",
          "Assignment - Externalize Properties",
          "Assignment Review",
          "LC - JPA Entities",
          "LC - Spring Data JPA Repositories",
          "LC - Bootstrap Data",
          "Conclusion to Spring Boot RestTemplate"
        ],
        "Spring MVC Validation": [
          "Introduction",
          "Java Bean Validation",
          "Bean Validation Implementation",
          "Validation Error Handling",
          "Spring Boot Method Validation",
          "Assignment - Add Validation and Error Handling",
          "Assignment Review",
          "Spring MVC Controller Advice",
          "LC - Bean Validation",
          "LC - Validation and Error Handling",
          "Conclusion to Spring MVC Validation"
        ],
        "Project Lombok and MapStruct": [
          "Introduction",
          "Overview of Project Lombok",
          "Project Lombok Configuration",
          "Project Lombok Examples",
          "Overview of MapStruct",
          "MapStruct Configuration",
          "Example of using Project Lombok and MapStruct",
          "Assignment - Use MapStruct",
          "Assignment Review",
          "Date Conversion with MapStruct",
          "LC - Implementing MapStruct",
          "LC - Fixing Broken Tests",
          "LC - Adding CI Builds with CircleCI",
          "Conclusion"
        ],
        "Spring MVC REST Docs": [
          "Introduction",
          "Spring REST Docs Introduction",
          "Project Code Review",
          "Maven Configuration",
          "Spring Mock MVC Configuration",
          "Documenting Path Parameters",
          "Documenting Query Parameters",
          "Documenting Responses",
          "Documenting Requests",
          "Documenting Validation Constraints",
          "URI Customization",
          "Documentation Generation",
          "Serving Docs with Spring Boot",
          "Assignment - Add Spring REST Doc to Project",
          "Assignment Review",
          "Conclusion"
        ],
        "Processing JSON with Spring Boot": [
          "Introduction",
          "JSON with Spring Boot Overview",
          "Overview of Jackson",
          "Json Testing with Spring Boot",
          "Jackson Property Naming Strategies",
          "Assignment - Configure Property Naming Strategy",
          "Assignment Review",
          "Setting Property Names with Jackson",
          "Using @JsonFormat with Jackson",
          "Custom Serializer with Jackson",
          "Custom Deserializer with Jackson",
          "LC - Jackson Configuration",
          "LC - Jackson JSON Creator",
          "LC - Beer Service - Implement Controller Methods",
          "LC - Beer Service - Adding standard UPCs",
          "Conclusion"
        ],
        "Deconstructing the Monolith": [
          "Introduction",
          "SFG Brewery Monolith",
          "Monolith Project Code Review",
          "Deconstruction Strategies",
          "Monolith Deconstruction Plan",
          "Beer Service Code Review",
          "Beer Order Service Code Review",
          "Beer Inventory Service Code Review",
          "Setting Default Ports for Services",
          "Data Initialization",
          "Enhance Get Beer with Inventory Information",
          "Assignment - Add Show Inventory as Parameter",
          "Assignment Review",
          "Add Caching to Get Beer API",
          "Assignment - Create Get Beer by UPC Endpoint",
          "Assignment Review",
          "Save UPC on Beer Order",
          "Assignment - Enhance Order Response with Beer Information",
          "Assignment Review",
          "Deconstruction Next Steps",
          "Conclusion"
        ]
      },
      "requirements": [
        "Must know Java and Spring Framework",
        "Basic Docker Skills",
        "SQL Skills - MySQL is used in course",
        "Linux skills helpful"
      ],
      "description": "Microservices are all the buzz in the industry right now.\nBuilding a microservice is not just a matter of using RESTFul APIs.\nMicroservices are much MUCH more than that.\nIn this course you will learn that Microservices are an architectural style. The allow companies to achieve massive scale while maintaining a high degree of flexibility.\nThis course goes beyond simple RESTful APIs and explores microservices as an architectural style.\n** What Students are Saying about the Course **\n5 STARS Great course, you can be sure about it. If you're fairly new to the java world and spring framework, I highly suggest to follow Spring Framework from beginner to guru (the teacher is always John). In my experience I can tell you that after the first course, I managed to progress in my career twice, with praises of my colleagues and managers. The content of both courses is very well explained and easy to learn. If you want to stand out, definitely this course worth the money.\n5 STARS Very good course on microservices with Spring! It gave me a good starting point for the upcoming task at my work! 5* all the way for John!\n5 STARS I like this course a lot! It's exactly what I needed after some experience with Spring Boot, to go to the next level. A lot of applications are presented, giving the opportunity to exercise what you've learned. The assignments are also very welcomed.\n5 STARS Very VERY good content, well structured approach and clear explanations. Very enjoyable and educative. I'm even picking up a few techniques / frameworks I hadn't really used before.\nAbout the Course\nTraditionally, large enterprise class applications were developed as large monolithic applications.\nThe Spring Framework started as an alternative to J2EE (now JEE) for building these large monolithic enterprise applications.\nAs the industry evolved to favor microservices over monoliths, the Spring Framework and Spring Boot evolved also.\nThe Spring Framework gives you a battle-tested enterprise grade framework for building applications.\nSpring Boot and Spring Cloud are tools specifically for the development of microservices using the Spring Framework.\nMicroservices present a unique set of challenges over monoliths. Spring Boot and Spring Cloud help you overcome these changes.\nWhat are these challenges that microservices have, which traditional monoliths do not?\nIs it okay for microservices to share databases?\nHow do you coordinate business logic across a series of microservices?\nHow do you manage transactions across serval microservices with different databases?\nTo explain these questions, in this course you get to explore a traditional Spring Boot monolith type of application. (Along the style of Spring Pet Clinic).\nWe will then re-create this monolithic application using a set of microservices.\nYou get to see, step by step how to build 3 different microservices.\nMicroservices are much more than just having a set of RESTFul APIs. Microservices frequently use asynchronous messaging systems, which is fully covered.\nWhile the Spring Framework and Spring Boot are the tools you use to construct Microservices, Spring Cloud provides the tools to deploy microservices.\nYou get to see the latest tools in Spring Cloud for deploying Spring Boot Microservices into a distributed (or cloud) environment.\nIn 2018, Netflix announced several core projects to Spring Cloud were entering maintenance mode. Meaning no new development would be done on these projects.\nThus, in December of 2018, the Spring Cloud Team recommended several key replacements:\nPrevious               Replacement\nHystrix         -->      Resliience4J\nRibbon         -->     Spring Cloud Load Balancer\nZuul 1           -->     Spring Cloud Gateway\nArchaius 1    -->    Spring Cloud Config\nTherefore, the recommend replacements are covered in this course.\nCovered in this Course\nIn this course you will learn:\nDevelop RESTful Services using Spring MVC\nConsume RESTFul Services with Spring RestTemplate\nHow to use Project Lombok\nHow to use MapStruct\nSpring Data JPA with Hibernate\nConfiguration of Spring Boot for MySQL and H2\nHow to use and configure Jackson for processing JSON with Spring Boot\nData validation with Spring Boot and Hibernate Validator\nDocumentation and testing of Spring Boot microservices using Spring RESTdocs\nStandardizing dependencies using Apache Maven\nSpring Application Events\nUsing JMS Messaging using Apache ActiveMQ Artemis\nThe microservice Saga Pattern\nHow to use Spring State Machine for coordinating Sagas\nIntegration Testing using Spring Boot and JUnit 5\nUsing WireMock with JUnit 5\nHow to use Awaitily in your Integration Tests\nThe API Gateway pattern using Spring Cloud Gateway\nLoad Balanced Routes using Netflix Ribbon / Spring Cloud Loadbalancer\nService Registration using Netflix Eureka\nService Discovery with Netflix Eureka\nService Discovery using Spring Cloud OpenFeign\nCircuit Breaker Pattern using Reslience4J and Hystrix / Spring Cloud OpenFeign\nManage configuration with Spring Cloud Config\nDistributed tracing with Spring Cloud Sleuth and Zipkin\nSecuring Spring Cloud with Spring Security\nUse Docker to create images for your Spring Boot applications\nPush your Docker Images to Docker Hub\nConfigure Logback with Logstash for JSON logging output\nUsing Docker Compose to start and stop your microservices\nUse ELK stack (Elasticsearch, Logstash, Kibana) for consolidated Logging\nProvision virtual machines in the cloud for Eureka, Apache ActiveMQ Artemis, Spring Cloud Config, Zipkin, Elasticsearch, and Kibana.\nProvision MySQL databases using Digital Ocean.\nCreate Docker Droplets (aka Virtual Machines) in Digital Ocean\nDeploy Spring Cloud Config in the the cloud with Eureka\nCreate a Docker Swarm Cluster for Spring Boot Microservices\nAnd much much more!\nInside the Course\nLinks all source code examples (Dozens of GitHub repositories are used for this course!)\nChallenging Assignments\nAll slides are downloadable as PDFs for your reference and study\nCourse Extra - IntelliJ IDEA Ultimate\nStudents enrolling in the course can receive a free 4 month trial license to IntelliJ IDEA Ultimate! Get hands on experience using the Java IDE preferred by Spring Framework professionals!\nCourse Extra - Access to a Private Slack Community\nYou're not just enrolling in a course --> You are joining a community learning Spring.\nWith your enrollment to the course, you can access an exclusive Slack community. Get help from the instructor and other Spring Framework Gurus from around the world - in real time! This community is only available to students enrolled in this course.\nThis is a very active Slack community with hundreds Spring Framework Gurus from around the world!\nWhen you enroll in this course, you can join this community of awesome gurus!",
      "target_audience": [
        "Java Developers who wish to learn how to develop Spring Boot Microservices with Spring Cloud"
      ]
    },
    {
      "title": "Virtual Assistant with Python and ChatGPT",
      "url": "https://www.udemy.com/course/virtual-assistant-with-python-and-chatgpt/",
      "bio": "Building Your Own AI Assistant",
      "objectives": [
        "What AI is",
        "How to create a Chat Bot",
        "How to use the ChatGPT API",
        "How to use ChatGPT with Python"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Artificial Intelligence?",
          "Chat bot",
          "What is ChatGPT?",
          "Hello World",
          "Chat bot with ChatGPT",
          "Models"
        ]
      },
      "requirements": [
        "Python programming knowledge required"
      ],
      "description": "Are you ready to take your programming skills to the next level? Look no further than our course on Creating Virtual Assistants with Python and ChatGPT! With this course, you will learn how to create powerful chatbots that can interact with users in natural language.\nIn this course, you'll learn how to create powerful virtual assistants that can understand natural language and respond to your commands. You'll be able to create interactive conversations and automate tasks with ease. Plus, you'll gain valuable skills that are in high demand in the tech industry.  Don't miss out on this opportunity to become a Virtual Assistant expert. Sign up now!\nWith our easy-to-follow tutorials and step-by-step instructions, you'll be able to quickly master the basics of chatbot development. Sign up today and start building your own chatbot with Python!\nChatGPT is a natural language processing (NLP) chatbot platform that enables developers to create intelligent chatbot applications powered by the latest advancements in NLP technology. It is designed to be used in customer service, e-commerce, and marketing applications.\nThis is a beginners course, but you should already know the Python programming language. Besides the Python programming knowledge, there are no requirements for this course. If you want to get started with ChatGPT or build Chat bots or Virtual Assistants, this course is for you!",
      "target_audience": [
        "Beginner Python developers"
      ]
    },
    {
      "already_crawled_in": "it-and-software/IT Certifications",
      "url": "https://www.udemy.com/course/configure-and-manage-azure-virtual-networks/"
    },
    {
      "title": "Getting Started with .NET Core",
      "url": "https://www.udemy.com/course/getting-started-with-dotnet-core/",
      "bio": "Up and Running with .NET Core",
      "objectives": [
        "Quickly build .NET apps and web applications",
        "Get started with Visual Studio Code",
        "Get started with Visual Studio IDE",
        "Create a Banking Application using Object-Oriented Programming"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started with .NET Core",
          "Command Line Interface and Built-in Templates",
          "Getting Started with Visual Studio Code (Part 1)",
          "Getting Started with Visual Studio Code (Part 2)",
          "Simple Web App with Visual Studio Code",
          "Getting Started with Visual Studio IDE",
          "Assorted Applications with Visual Studio IDE"
        ],
        "Bonus Project: Object-Oriented Banking Application": [
          "BankOfDotNet: Creating The Solution",
          "BankOfDotNet: Creating The Banking Client",
          "BankOfDotNet: Creating The Banking Class Library",
          "BankOfDotNet: Creating The Account Class",
          "BankOfDotNet: Referencing Banking Library",
          "BankOfDotNet: Debugging the Banking Client",
          "BankOfDotNet: Encapsulation Part 1",
          "BankOfDotNet: Encapsulation Part 2"
        ]
      },
      "requirements": [
        "Basic background in programming"
      ],
      "description": "Get Started with .NET Core and Build your first App!\nAre you a student or professional in the field of software engineering or maybe contemplating an educational or career move to the software engineering world? Have you been looking for a quick and easy way to get up and running with the new Cross Platform .NET Core technology and don't want to go through an overwhelming amount of material just to get your environment setup and ready for building your own apps? Don't worry as THIS IS THE COURSE FOR YOU!\nIn my course, I will teach you how to get your environment setup for .NET Core and help you to build your first set of apps quickly and through a step-by-step guided approach. I will be showing you all the necessary installation and setup needed for .NET Core, Visual Studio Code, and also Visual Studio IDE.\n\nTake this course and feel proud of the fact that you will be one step closer towards the rewarding field of Software Engineering using .NET technologies!",
      "target_audience": [
        "Anyone who wants to learn to code using .NET Core",
        "Anyone who is getting started with .NET Core or .NET in general",
        "Students and Professionals seeking a reliable Cross Platform Technology"
      ]
    },
    {
      "title": "Master Building Enterprise Microservices : In depth Project",
      "url": "https://www.udemy.com/course/master-building-enterprise-microservices-in-depth-project/",
      "bio": "Docker Containerization with Spring Boot Microservices",
      "objectives": [
        "How to build scalable microservices using Spring Boot.",
        "Integrate and manage databases with JPA and Flyway for seamless migrations.",
        "Distributed tracing with ELK Stack and APM Server to monitor microservices across distributed systems.",
        "Track performance and metrics with Micrometer, Prometheus, and Grafana",
        "Set up centralized logging using the ELK Stack (Elasticsearch, Logstash, and Kibana).",
        "Optimize microservices performance with Spring Boot Caching.",
        "Apply Retry strategies with Open Feign and Spring Retry for Kafka.",
        "Implement API communication with Open Feign Client.",
        "Handle exceptions effectively in Spring Boot applications.",
        "Containerize microservices using Docker and deploy with Docker Compose.",
        "Implement event-driven microservices with Kafka.",
        "Ensure reliability using Bulkhead and Circuit Breaker patterns.",
        "Build, monitor, and deploy a complete end-to-end microservices architecture."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Source Code Repository - Github"
        ],
        "Fundamentals of Microservices": [
          "What are microservices",
          "Horizontal vs Vertical Scaling",
          "Problems with Monolithic Systems",
          "Why Microservices - Discussion"
        ],
        "Adapting Microservices": [
          "Practices to Adapt Microservices ?",
          "Architecting Microservices - Discussion",
          "Implementing Microservices - Discussion",
          "Deploying Microservices - Discussion"
        ],
        "Fundamentals of Containerization": [
          "Containerization with Docker"
        ],
        "Docker Crash Course": [
          "Understanding Docker in Depth"
        ],
        "Project Implementation Discussion": [
          "Overview of Project Implementation in this Course",
          "Overview and Understanding of Project Architecture in this Course"
        ],
        "Setting up Postgres Database in Docker": [
          "Deploying Postgres in Docker Container using Docker Compose"
        ],
        "Developing Spring boot invoice-service": [
          "Creating Spring Boot Service | adding dependencies | Flyway Database Migration",
          "Wrapping up Database Migration using Flyway",
          "Creating API in invoice-service",
          "Creating DTOs in invoice-service",
          "Implementing Exception Handling in invoice-service"
        ],
        "Developing Spring boot user-service": [
          "Creating Spring Boot Service, adding dependencies and Database Migration",
          "Creating API - Creating JPA, Service and Controllers Classes"
        ],
        "Implementing OpenFeign": [
          "Calling invoice-service from user-service using Open Feign",
          "Configuring Connect and Read Timeout Values in user-service"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: Familiarity with programming concepts - Java.",
        "Understanding of Web Development: Knowledge of fundamental web development concepts, including HTTP, RESTful APIs, and basic web server concepts.",
        "Experience with Databases: Basic understanding of relational databases (e.g., MySQL, PostgreSQL).",
        "Development Environment: A computer with the ability to install and run development tools and software (e.g., Docker, IDEs like VSCode or IntelliJ)."
      ],
      "description": "This comprehensive course takes you through the entire process of building enterprise-grade microservices from the ground up, using modern technologies and best practices.\nThroughout this course, you’ll work on a hands-on project that incorporates real-world scenarios to help you gain practical experience with the following:\nFramework & APIs: Learn to build microservices using Spring Boot for fast and efficient application development, and manage API calls using Open Feign Client for seamless communication between services.\nDatabase Integration: Use JPA to handle data persistence and Flyway for smooth database migrations, ensuring consistent and reliable database management.\nLogging and Monitoring: Implement centralized logging with the ELK Stack (Elasticsearch, Logstash, and Kibana), and track your microservices’ performance with Micrometer, Prometheus, and Grafana.\nDistributed Tracing and Reliability: Ensure robust monitoring with distributed tracing using the ELK Stack and APM Server to track performance across distributed systems, and use Bulkhead and Circuit Breaker patterns in your API Gateway to enhance reliability. Implement retry strategies with Open Feign and Spring Retry for Kafka.\nException Handling and Performance: Master exception handling with Spring Boot, and improve performance by implementing caching with Spring Boot Caching.\nContainerization and Deployment: Containerize your microservices with Docker and Dockerfiles, and deploy them efficiently using Docker Compose.\nAPI Specification and Event-Driven Architecture: Define robust API specifications with OpenAPI (Swagger) and build event-driven microservices using Kafka.",
      "target_audience": [
        "Software Developers and Engineers: Professionals who are involved in developing, deploying, and maintaining software systems, and want to specialize in microservices architecture.",
        "DevOps Engineers: Individuals focusing on continuous integration and continuous deployment (CI/CD) pipelines, and who are interested in learning how to implement microservices effectively in a production environment.",
        "Students and Learners: Individuals in academia or those who are self-studying and wish to gain a deep understanding of microservices for career advancement or academic purposes.",
        "Enterprise IT Professionals: Individuals working in large organizations who need to transition from monolithic applications to a microservices-based approach.",
        "Technical Leads and Managers: Leaders who need to make informed decisions about adopting microservices in their organizations and want to gain a comprehensive understanding of the associated challenges and benefits."
      ]
    },
    {
      "title": "Agile Foundations - getting to Done",
      "url": "https://www.udemy.com/course/a3d-a501-agile-foundations1/",
      "bio": "Got projects? Use ideas from Scrum, Kanban, XP, and Lean to communicate requirements, plan, and monitor great projects.",
      "objectives": [
        "Identify four classes of stakeholders",
        "Communicate Requirements",
        "Plan projects and iterations using the right mix of kanban, Scrum, and enterprise agile to meet the needs of your team",
        "Track progress with charts to trigger the team to take action if things fall behind",
        "Use bi-weekly lessons learned to continually improve your process"
      ],
      "course_content": {
        "Overview": [
          "The Agile Landscape",
          "Methods and buzzwords",
          "The Agile Factory",
          "The big picture of Agile",
          "Test your Progress on Methodologies"
        ],
        "Know your Customer": [
          "Stakeholders & Personae - Know your Customer",
          "What's the Vision?",
          "Test your Progress on Stakeholders"
        ],
        "Build the Right Thing": [
          "Requirements Overview",
          "User Stories",
          "Better Stories - INVEST",
          "Test Your Progress on User Stories",
          "Prioritization",
          "Prioritization - in words"
        ],
        "Planning": [
          "Prioritizing and Estimating Overview",
          "Estimate",
          "Estimating in words",
          "Planning Overview",
          "Planning Part I",
          "Planning Part 2",
          "Planning Part 3",
          "Planning Part 4",
          "Tips on Iteration Planning",
          "Planning"
        ],
        "Monitor Execution": [
          "Build Quality In",
          "The Daily Standup Meeting",
          "Visualize Progess",
          "Feedback Overview",
          "Ways to do a Retrospective",
          "Test your Progress on Monitoring Execution",
          "Practice - Monitoring Execution"
        ],
        "Putting it in Action": [
          "Repeat at a Steady Pace",
          "Wrap up"
        ],
        "Bonus - Build Quality In": [
          "Quality by Testers"
        ],
        "Bonus - Teamwork and Leadership": [
          "Lean Minds",
          "Thought Diversity"
        ]
      },
      "requirements": [
        "Internet connection for browsing course material"
      ],
      "description": "Got projects? This course gives you the practical techniques you can use to get your work done - for software, or beyond.\nOutline\nStakeholders: Including Customers and Users\nUser Stories: Product Adaptation\nPrioritization, Estimation: Planning and Adapting\nPlanning: Incremental Development\nWork-in-progress (WIP) + Quality\nTeamwork: Creating Shared Understanding\nTeamwork: Shift in Roles. +Distributed Teams I\nFeedback: Lean, scaling frameworks: Process & Project Adaptation\nLeadership: Culture & Mindset & History\nAfter this course you will be able to\nUnderstand the values behind several Agile methods such as Scrum and Kanban\nRelate to your stakeholders (personae, story maps, some Innovation Games®)\nDocument requirements (User Stories)\nPrioritize, Estimate, Plan, and Track your plans\nContinuing Education Credits? (PDUs)\nThis course also aligns with the PMI-ACP® program so gives you some of the hours you need to qualify for their exam, as well as class C PDUs to maintain your existing PMI certification. This course by itself does not get you certified, but it makes you smarter in your quest to do so, or to simply enhance your skill at work.\nTo claim them go to PMI's CCRS PDU claim website, log in, report PDUs, select class C (Self directed learning), and enter Agile Dimensions or Udemy in the provider field. There are some limits on how many hours of each type you can use to renew your certification (for example, 15 of the 30, for example).\nSee ya on the forum!",
      "target_audience": [
        "Business Analysts",
        "Software Testers",
        "Software Developers",
        "Project Managers",
        "Managers",
        "Software Engineers",
        "Anyone with projects to coordinate"
      ]
    },
    {
      "title": "MATLAB Projects with Android Phone Sensors",
      "url": "https://www.udemy.com/course/matlab-android-sensors/",
      "bio": "Learn how to acquire and process data from 5 sensors on your Android device",
      "objectives": [
        "Install MATLAB Hardware Support Package for Android Sensors & MATLAB Mobile App",
        "Connect to Android Devices and Acquire Sensor Data",
        "Capture and Log Data from 5 Different Android Sensors",
        "Complete 6+ Sample Projects"
      ],
      "course_content": {
        "Welcome!": [
          "The Magic of Android Sensors",
          "What You Need for This Course",
          "Course Overview & How to Succeed"
        ],
        "Setup": [
          "Install MATLAB Hardware Support Package for Android Sensors",
          "Install MATLAB Mobile Android App",
          "Wifi Network Setup"
        ],
        "Data Acquisition with Android Sensors": [
          "Enabling Sensors & Acquiring Data",
          "Acceleration Sensors",
          "Magnetic Field Sensors",
          "Orientation Sensors",
          "Angular Velocity Sensors",
          "Position Sensors",
          "Exercise 3-1: Data Acquisition with Android Sensors"
        ],
        "Accelerometer Projects": [
          "Project 4-1: Counting Steps"
        ],
        "Magnetometer Projects": [
          "Project 5-1: 3D Compass"
        ],
        "Gyroscope Projects": [
          "Project 6-1: Which End is Up?",
          "Project 6-2: Virtual Reality Box"
        ],
        "Angular Velocity Sensor Projects": [
          "Project 7-1: Shake It Up Baby!"
        ],
        "GPS Projects": [
          "Project 8-1: Tracking Location & Speed"
        ]
      },
      "requirements": [
        "Getting Started with MATLAB Programming course or familiarity with MATLAB is recommended.",
        "To execute examples and projects in this course, you will need:",
        "- MATLAB R2015a or later",
        "Android OS 4.0 or later on your device"
      ],
      "description": "New! You can now acquire and process sensor data from your Android device using MATLAB! Impress your coworkers or other students, build some cool programs, and take your MATLAB skills to a new level with this interactive course. You’ll learn how to capture and utilize data from 5 different sensors without the need to buy additional software or hardware.\nPlease Note: THIS COURSE IS VERY SIMILAR TO “Build MATLAB Projects with iOS Sensors”\nBuild 6 Android Sensor Projects (Source Code Included)\nIn this course, you will master the MATLAB® Support Package for Android Sensors by building a unique set of projects which enable you to:\nBuild Your Own 3D Compass\nRotate 3D Objects Using Your Android Phone\nDetect Whether Android Devices is Facing Up or Down\nTrack Position and Speed of A Car\nDetect Shaking\nCount Your Steps While Walking\nDon’t struggle. I’ll show you step-by-step.\nGetting set up is a little tricky, but, don’t worry, I’ll walk you through it. And if you have any problems you can ask for help through the discussion forum.  I’ll show an easy method to enable and acquire data from all 5 Android sensors including:\nAcceleration Sensors - Learn how to use abrupt changes in your Android phone’s movement\nMagnetic Field Sensors - Explore magnetic fields used by the compass and other input devices\nOrientation Sensors - See how you can detect your Android phone’s state and control virtual items\nAngular Velocity Sensors - Detect your Android phone’s movement and use to control software\nPosition Sensors - Capture your GPS position and speed and build location based apps\n\n\nWhat You Get in This Course:\nInstructional Videos\nInteractive Exercises\n6+ Sample Projects\nSource Code\n24/7 Instructor & Student Access\n30 Day Guarantee\nLifetime Course Access\nTo execute the code and examples, you will need:\nMATLAB R2015a or later, for creating the connection to the application and logging sensor data.\nAndroid OS 4.0 or later on your device.\nWifi Network for connecting your computer and Android device.\nThere’s no better time to expand your MATLAB skills and use your Android device to collect and process data.  Enroll in this course and get started today!",
      "target_audience": [
        "Engineers, Developers, and Scientists",
        "Professionals, Students, and Hobbyists",
        "Innovative Designers Looking to Develop Algorithms and New Tools",
        "Tinkers and Thinkers Looking to Explore Android Sensors"
      ]
    },
    {
      "title": "Qt-QML Practical Examples",
      "url": "https://www.udemy.com/course/qt-qml-practical-examples/",
      "bio": "Auto-Dashboard, Notepad, REST client.",
      "objectives": [
        "Qt-Quick application development",
        "Practical GUI example using Qt-QML and C++",
        "Creating Automobile dashboard UI design and simulator",
        "Creating Multifeatured Notpad Application",
        "Simple REST API Client using Qt."
      ],
      "course_content": {},
      "requirements": [
        "Basics of Qt-QML",
        "Basics of C++",
        "Udemy course - The Complete Qt - QML with C++ : A complete course on Qt quick and QML."
      ],
      "description": "Qt-QML  Practical Examples\n\n\nA real software development experience is necessary to build up the skillset in GUI development framework like Qt QML. This course offers a real software development training with the help of simple application examples.\nPrerequisite :\nBasic level of C++\nUnderstanding of Qt-QML framework\nThis course covers step by step implementation of following application examples using Qt-QML and C++.\n1. Automobile dashboard design and simulation : This is a Qt-QML based design for car dashboard. This also have a simulator implemented at backend to provide more realistic data to UI.  Concepts you will learn here are :  Integrating QML and C++,  CircularGauge, CircularGaugeStyle, Number Animation, QTimers, Image, Canvas.\n2. Notepad application : This is basic notepad application with which you can create, edit and modify the text files. Operations include formatting, layout, font color, font family. Also support for HTML document for rich text format support. You will learn about  Qt-Quick controls, Qt shortcuts, QTextDocument, FontDialog, Text processing, File operations, HTML files, file printing\n3. Simple REST Client: This is very simple REST Client application using public REST APIs to show useful information. You will learn about QNetwork, QNetworkAccessManager, QNetworkReply, QJsonDocument, QSSL configs.\n\n\nAll above examples are explained in depth details. For each lecture a demo able sours code is available as downloadable resource. Users can download these source code packages and tryout on own either during the lectures or afterwards. This will help you to get hands on on programming and debugging.",
      "target_audience": [
        "Application developers",
        "C++ Developers",
        "Computer Science Students",
        "Software professionals",
        "Software Engineers",
        "GUI developers",
        "Automobile UI developers"
      ]
    },
    {
      "title": "Top 50 Dynamic Programming Java Algorithms Coding Questions",
      "url": "https://www.udemy.com/course/top-50-dynamic-programming-java-algorithms-coding-questions/",
      "bio": "Solve the top 50 Dynamic Programming Java Algorithms Questions to ace Coding Interview and Competitive Programming.",
      "objectives": [
        "Understand what is Dynamic Programming, Recursion, and back tracking",
        "Learn the criteria to classify a dynamic programming question using optimal substructure and overlapping subproblems",
        "Master the art of recursion and learn how to convert a recursion problem to dynamic programming",
        "Solve top 50 handpicked dynamic programming Java algorithm questions asked in competitive programming and programming interviews",
        "Solve each question in recursive, top-down (memoization) and bottom-up (tabulation) dynamic programming approaches",
        "Get one step closer to competitive programming and acing coding interview"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Dynamic Programming - Recursive, Memoization, Tabulation",
          "Take the challenge!"
        ],
        "Binomial Coefficient Problem": [
          "Binomial Coefficient Problem",
          "Take the challenge!"
        ],
        "Maximize the Cut Segments": [
          "Maximize the Cut Segments"
        ],
        "Friends Pairing Problem": [
          "Friends Pairing Problem"
        ],
        "Rod Cutting Problem": [
          "Rod Cutting Problem"
        ],
        "Gold Mine Problem": [
          "Gold Mine Problem"
        ],
        "Nth Catalan Number": [
          "Nth Catalan Number"
        ],
        "Largest Sum Contiguous SubArray (Kadane's Algorithm)": [
          "Largest Sum Contiguous SubArray (Kadane's Algorithm)"
        ],
        "Climbing Stairs": [
          "Climbing Stairs"
        ],
        "Maximum Sum Increasing Subsequence": [
          "Maximum Sum Increasing Subsequence"
        ]
      },
      "requirements": [
        "Understanding of any basic programming language (preferably Java)",
        "Basics of programming language such as variables, loops, conditionals, arrays, and strings",
        "Basic understanding of time and space complexities"
      ],
      "description": "Welcome to this course!\n\nHere, you will go through a \"journey\" of the Top 50 Dynamic Programming Java Algorithm questions that are asked in coding interviews as well as competitive programming.\n\nSo let's start by answering the most fundamental questions:\n\nWhat is Dynamic Programming Algorithm?\n\nDynamic programming is a powerful optimization technique for plain recursion problems. If you can break down a problem into simpler sub-problems (optimal substructure) and these sub-problems are repetitive in nature, then you can convert this problem into a Dynamic Programming Solution.\n\nIn this course, we will start with a basic introduction to Dynamic Programming. We will understand what Dynamic Programming is and how to find out whether a recursive problem can be solved using Dynamic Programming.\n\n\nCan Dynamic Programming solve all problems?\nDynamic Programming cannot solve all problems. The dynamic programming algorithm is meant to solve only those problems that have optimal substructure and overlapping subproblem properties.\n\n\nWhy is Dynamic Programming faster?\nDynamic Programming is faster because we break down a problem into various smaller subproblems. Then, we store the solutions of these subproblems in a table or cache whenever we encounter them first. Hence, if we get the same subproblem later on, instead of recomputing it, we fetch it from the storage and return it. This saves us a lot of time.\nMoreover, since a Dynamic Programming algorithm required optimal substructure property. It means that the best solution to the initial subproblem can be constructed from the optimal solutions of its subproblems. Hence, we can easily eliminate the need to consider all the possible subproblem solutions. This reduces the time complexity of the algorithm.\n\nWhat will be our approach when you take this course?\n\nWe will solve the 50 most popular Dynamic Programming examples asked in coding interviews. For each question, our approach will be:\n\nUnderstand the problem statement with a few examples.\nCheck if it can be solved recursively.\nBuild a recursion tree and determine the recursive pattern.\nCheck for optimal substructure and overlapping subproblem properties using the recursive tree.\nDerive the recursive code for the solution.\nUsing the recursive code, convert the problem to a Top-Down (Memoization) approach.\nThen solve the same problem with the Bottom-Up (Tabulation) approach.\nCome up with an optimized DP solution if possible (space or time).\nDiscuss the time and space complexities of all the approaches.\n\nDon't worry, we won't bore you with slides and PPTs. We will understand each algorithm using a whiteboard explanation of approaches and the code in parallel. This will help you to be more expressive during your interviews.\n\nIn any interview, the interviewer wants to know the thinking or the approach that you are going to take to solve a problem given by him. Thus, it becomes very necessary to keep reciting the approach out loud. The format of these videos will help you to think out loud and will promote discussions and you will be able to question back the interviewer.\n\nWhat are the top 50 Dynamic Programming Problems or Examples asked in Coding Interview and Competitive Programming that we will discuss?\nLecture 1: Introduction\nLecture 2: Introduction to Dynamic Programming - Recursive, Memoization, Tabulation\nLecture 3: Binomial Coefficient Problem\nLecture 4: Maximize the Cut Segments\nLecture 5: Friends Pairing Problem\nLecture 6: Rod Cutting Problem\nLecture 7: Gold Mine Problem\nLecture 8: Nth Catalan Number\nLecture 9: Largest Sum Contiguous SubArray (Kadane's Algorithm)\nLecture 10: Climbing Stairs\nLecture 11: Maximum Sum Increasing Subsequence\nLecture 12: House Robber\nLecture 13: Subset Sum Problem\nLecture 14: Longest Common Subsequence\nLecture 15: Longest Increasing Subsequence\nLecture 16: Weighted Job Scheduling\nLecture 17: Maximum Length Chain of Pairs\nLecture 18: Maximum Sum of Disjoint Pairs with Specific Differences\nLecture 19: Egg-Dropping Problem\nLecture 20: Minimum Removals from Array to make Max - Min <= K (DP + Binary Search)\nLecture 21: Maximum Size Square Sub-Matrix with all 1s\nLecture 22: Largest Area Rectangular Sub-Matrix with Equal 0's and 1's\nLecture 23: Largest Rectangular Sub-Matrix whose Sum is 0\nLecture 24: Maximum Sum Rectangle in a 2D Matrix\nLecture 25: Longest Palindromic Subsequence\nLecture 26: Longest Palindromic Substring\nLecture 27: Longest Alternating Subsequence\nLecture 28: Count All Palindromic Subsequences in a Given String\nLecture 29: Longest Common Substring\nLecture 30: Longest Subsequence such that the Difference Between Adjacent is 1\nLecture 31: Longest Repeated Subsequence\nLecture 32: Word Break Problem\nLecture 33: Permutation Coefficient Problem\nLecture 34: Minimum Number of Jumps to Reach End\nLecture 35: Partition Problem\nLecture 36: Count Derangements\nLecture 37: Count the Number of Ways to Reach a Given Score in a Game\nLecture 38: Palindromic Partitioning\nLecture 39: Matrix Chain Multiplication\nLecture 40: Maximum Subsequence Sum such that no 3 Elements are Consecutive\nLecture 41: Painting the Fence\nLecture 42: Largest Independent Set of Nodes in a Binary Tree\nLecture 43: Count Balanced Binary Trees of Height H\nLecture 44: Coin Change Problem\nLecture 45: Optimal Strategy for a Game\nLecture 46: Unique Paths\nLecture 47: Minimum Cost Path\nLecture 48: Coin Game Winner Where Every Player Has 3 Choices\nLecture 49: Edit Distance\nLecture 50: 0/1 Knapsack Problem\nLecture 51: Find if a String is Interleaved with 2 Other Strings\nLecture 52: Maximum Profit by Buying and Selling a Share at Most Twice\n\nThese questions are taken from popular practice websites and hence, are asked in coding interviews of top tech companies like Google, Apple, IBM, Cisco, Atlassian, Microsoft, etc.\n\nIn each of these questions, not only you will learn just about the algorithm to solve those questions, but you will also learn about other concepts like working with HashMaps, HashSets, sorting an array of objects using comparators, binary search algorithms, trees, etc. You will be able to understand the basics of Java programming language and other data structures as well.\n\nHaving said this, let's meet in the first lecture on \"Introduction to Dynamic Programming\".",
      "target_audience": [
        "Students or professionals who are preparing for software developer related coding interview",
        "Programmers who want to get into competitive programming",
        "Self-taught programmers who want to learn data structures and algorithms"
      ]
    },
    {
      "title": "Beta: F# in the Workplace",
      "url": "https://www.udemy.com/course/workplace-fsharp/",
      "bio": "Domain Modelling & TDD",
      "objectives": [
        "Drive out functionality with unit tests",
        "Implement algorithms to solve some of the requirements of the project.",
        "Deploy functional techniques in you code to enhance usability and readability",
        "Create usable, easy-to-read domains from specification using the F# type system"
      ],
      "course_content": {
        "Modelling a domain with F#": [
          "Introduction",
          "Creating an deck of cards",
          "Adding cards to the deck",
          "Implementing deal",
          "Testing dealCard",
          "Refactoring dealCard",
          "Shuffling the deck",
          "Dealing fairly",
          "Fixing our tests",
          "Comparing shuffle algorithms",
          "Cleaning up the code",
          "Review"
        ]
      },
      "requirements": [
        "For this course we advise that you already have F# installed and ready to go.",
        "Before taking this course ensure you understand F# syntax."
      ],
      "description": "This course aimed at students with beginner to intermediate skill in F#, basic understanding of the F# syntax and a light functional understanding would be beneficial. You'll also need a computer with Linux, OSX or Windows with F# installed and an internet connection.\nHave you wanted to understand how to 'do' F# in your day job? Well, this course demonstrates how you can use Test Driven Development and the F# type system in tandem to write a domain for any problem you are attempting to solve.\nWhat will we do?\nWe will complete an F# library project together,\nWe will start by defining the concepts of the domain, using some tips from Domain Driven Design, but predominantly working in the area of Test-Driven Development whilst harnessing the power of the F# type system. We will explore every line of code together and point out all the important programming concept as we progress.\nWhat is f#?\nF# is a mature, functional-first, general purpose language especially well suited to computer science, machine learning, distributed computing and web applications, Domain Driven Design and Test-Driven Development too. There really is no limit to what F# can do for you!\nWe’ve structured the course to make learning all the material as easy and accessible as possible. We’ll challenge you to complete an F# programming task in every video to make sure you’ve got a great grip on all the concepts. But don’t worry, because after every challenge, we’ll also walk you through a solution line by line.\nWe have structured the course to introduce you to some computer science and functional concepts, but to also encourage you to spend your own time to gain further insights into the Domain Driven, Test-Driven concepts we introduce you to.\nIf you want to program with a language that has computer science at its heart and want to future proof your learning then this course is for you.",
      "target_audience": [
        "This course is for developers that see the benefits of F# and want to learn how to use the techniques in real projects.",
        "Take this course to learn how harness the F# type system by turning specifications into easy-to-read F# code.",
        "Utilise Test Driven Development (TDD) so that you can assist the type system while creating F# code to represent a problem domain.",
        "This course is not aimed at advanced users that are already using F# in their day jobs, it is designed to cover general aspects of F# type system and TDD."
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/all-about-azure-functions-become-an-azure-proessional/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Qt6 and QML Advanced: Interfacing to C++",
      "url": "https://www.udemy.com/course/qt6-qml-advanced-interfacing-to-c/",
      "bio": "Use Custom C++ Models in QML, Build your own Visual C++ QML Types, Use Singletons and Dig Deep Through QML from C++",
      "objectives": [
        "Working with custom C++ models in QML",
        "Building custom C++ visual types and using them in QML",
        "Using your C++ classes as singletons in QML",
        "Digging through the QML tree structure and manipulating elements from C++"
      ],
      "course_content": {
        "Welcome": [
          "Welcome",
          "Get Help (Fast)"
        ],
        "Custom Models in QML": [
          "Introduction",
          "String List Model",
          "Object List Model",
          "Editable Object List Model",
          "Edits with the Q_PROPERTY Mechanism",
          "Abstract List Model: Concepts",
          "Abstract List Model: Non Editable",
          "Abstract List Model: Editable",
          "Decoupling the Data Source",
          "Model List Properties",
          "Summary"
        ],
        "REST Client Challenge": [
          "REST Client"
        ],
        "Custom Visual Types": [
          "Introduction",
          "Painting QML Items",
          "Bar Chart",
          "Bar Chart with List Properties",
          "Visual Items with Pure QML",
          "Summary"
        ],
        "Singletons": [
          "Introduction",
          "QJSValue",
          "QObject",
          "Summary"
        ],
        "Digging QML from C++": [
          "Introduction",
          "Loading QML with QQmlEngine",
          "Parsing Custom Types",
          "Going through QQuickView",
          "Loading QML with QQmlApplicationEngine",
          "Invoking QML Method from C++",
          "Catch a QML Signal in C++",
          "Summary"
        ],
        "Farewell": [
          "Farewell",
          "Course List - Bonus"
        ]
      },
      "requirements": [
        "Basic knowledget of Qt C++",
        "Basic knowledge of Qt Quick",
        "Basic knowledge to interface QML to C++",
        "The latest version of Qt and Qt Creator installed on your local system",
        "Open mind and willingness to learn"
      ],
      "description": "You already know quite a bit about Qt , C++ and Qt Quick and looking to learn about cool advanced features like Custom C++ Models in QML, Custom C++ Visual types in QML and more cool features. If that's the case then this is the course for you. This course will hit 4 critical points in advanced tricks to interface your C++ to QML .\nBuilding your own Custom C++ Models in C++ and using them in QML\nBuilding your own C++ Visual Types and using them in QML\nUsing C++ Types as Singletons in QML\nDigging Deep in the QML tree and manipulating your QML Elements from C++\nThe course is based on Qt 6 and uses CMake as the build system. Along the course we'll touch on lots of best practices to make your C++ and QML Code and APIs much more readable, user friendly and maintainable. The course is packed with lots of examples and demos to make your learning experience as pleasant as possible. If you' re looking to push your skills in Interfacing Qt C++ to QML to the next level, this course will get you up to speed in shortest amount of time possible.\nQt is the platform choice for thousands of software projects. Both Open source and commercial and is used by some of the most successful companies on the planet.\nIf you want to build Fluid, Dynamic and Cross Platform User Interfaces, that can run on virtually anything out there, and take advantage of the powerful features like the Model View Framework and the fancy Qt Painting and Drawing API and more, Qt is second to none in that regard.Please check out some of the preview videos, and lets get you STARTED using Advanced tricks in connecting your C++ to QML.",
      "target_audience": [
        "Anyone willing to learn to use Custom C++ Models in QML",
        "Anyone willing to learn to build Custom C++ Visual Types and use them in QML",
        "Anyone willing to learn how to use C++ Classes as Singletons in QML",
        "Anyone willing to learn how to traverse the QML element tree structure and manipulate elements from C++"
      ]
    },
    {
      "title": "Creating a Scalable Machine Learning Pipeline",
      "url": "https://www.udemy.com/course/architecting-a-scalable-machine-learning-pipeline/",
      "bio": "Gather Data, Train Deep Learning Models, Evaluate, Use & Deploy, Review, and Update Machine Learning Models",
      "objectives": [
        "The course will focus on what to build once you have a Machine Learning Model. Allowing you to improve and monitor your deep learning model in production.",
        "Tensorflow Js, Firebase, Material UI, React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Demo"
        ],
        "Project Overview": [
          "Technologies Used"
        ],
        "Data Gathering and Collection": [
          "Easy Image Gathering"
        ],
        "Google AutoML Vision: Image Classification": [
          "Demo",
          "About AutoML",
          "Importing Images to AutoML Vision",
          "Labeling Images",
          "Training our Model",
          "Training a Model for Cloud Use",
          "evaluate model",
          "Export Model"
        ],
        "Website Setup and Creation": [
          "Setting up our Website",
          "Use Model Export",
          "Adding React Router - Navigation Logic",
          "Adding and Connecting Firebase to our Website"
        ],
        "Using Image Classification Models": [
          "Image Uploader",
          "Get Images for Inference",
          "Make Predictions",
          "Fix CORS Storage",
          "Save Predictions",
          "Adding and Styling our Navigation Bar",
          "Auto Starting our Classification Inference Process"
        ],
        "Demo to Send to Friends": [
          "Simple Image Classification Demo",
          "Creating a User Demo Page with File Upload"
        ],
        "Triggering the Piepline": [
          "Cloud Function Setup / Overview",
          "Checking User Submitted Images",
          "Checking User Submitted Images Continued",
          "Tracking Images Uploaded by Users",
          "Create a CSV with Image File Names and Locations",
          "Update the Models Image Count",
          "Update the Models Stats and Analytics",
          "Updating the Models Labels Stats and Analytics"
        ],
        "Machine Learning Dashboard": [
          "Creating our Machine Learning Dashboard",
          "Connect Dashboard to our Model's Analytics",
          "Connect Dashboard to our Label's Analytics",
          "Exporting and Saving our Data",
          "Cron Job - Schedule Model Stat Export",
          "Cron Job -Schedule Label Stat Export"
        ],
        "Human In The Loop": [
          "Intro to Human In the Loop: RevaliML",
          "Create API to Review Predictions",
          "Create API to Update and Save Reviewed Predictions"
        ]
      },
      "requirements": [
        "Have some familiarity with Javascript, HTML and CSS",
        "No Machine Learning experience needed"
      ],
      "description": "I show you you everything you need to start using your tflite and tensorflow.js machine learning models in production. Create a website that allows users to upload images, get predictions from your custom machine learning model and review the performance of the model in real time.\nWhether you already have a computer vision model or not I show you how to easily create one and ultimately use and deploy it to production. Learn how to use your own custom models with tensorflow.js,  allowing users to upload images and get predictions back on that image.\nWe create an entire pipeline that allows you to improve and monitor your machine learning model's over time. Allow users to upload new images for predictions, saving those predictions and then using the new images as training data to improve our custom models performance.",
      "target_audience": [
        "Software Developers, Data Scientists, Machine Learners, Entrepreneurs"
      ]
    },
    {
      "title": "Professional Python Developer Bootcamp 2025",
      "url": "https://www.udemy.com/course/professional-python-developer-bootcamp/",
      "bio": "Master Python by building real-world projects. Develop all the skills you need to find your first programming job.",
      "objectives": [
        "Master the fundamentals of Python and many advanced features.",
        "Create a stunning project portfolio to find your first job.",
        "Automate repetitive tasks with Python programs.",
        "Learn to build Python projects on different environments (VS Code, Cloud editors).",
        "Build real-world projects from beginning to end and gain practical skills.",
        "Master different ways to code in Python: procedural programming, object-oriented programming and more!",
        "Create desktop applications like the ones you use every day.",
        "Understand how computers run code, understand colors, etc, and develop a strong digital literacy."
      ],
      "course_content": {},
      "requirements": [
        "No prior experience required. I'll teach you everything step by step."
      ],
      "description": "This bootcamp teaches you everything you need to find your first job as a software developer from scratch. The bootcamp assumes no prior knowledge, as you will learn all the concepts step by step and put them into practice by implementing over 15 real-world programming projects from the ground up.\nUpon completing the bootcamp, you will feel like writing Python code is second nature, and you will know how to intuitively translate your ideas into code. In addition to video lessons, the bootcamp offers a wide range of exercises, challenges, and coding projects.\nFurthermore, as you build your programming projects, you will create a web portfolio that you can use to showcase your skills to prospective employers.\nIn conclusion, if you're looking for a bootcamp that will teach you the essential programming skills in 2023, look no further; this is the bootcamp for you.\n\n\n\n\nThe Bootcamp is divided in seven parts, described in the following outline:\n\n\nIntroduction to Python\nWelcome module\nFirst steps in Python\nCoding challenge #1: Mad libs\nControl flow\nCoding challenge #2: Draw a \"#\" pyramid\nFunctions\nCoding challenge #3: Fibonacci numbers\nHosting your web portfolio on GitHub\nCoding project #1: Flowchart\nExceptions and debugging\nCoding challenge #4: Program debugging\nData structures - Sequences\nString operations\nCoding project #2: Caesar cipher\nData structures - Sets and mappings\nCoding project #3: Morse code\nThe Python Standard Library (STL)\nCoding challenge #5: Random password generator\nCoding challenge #6: Closest supermarket\nCoding project #4: Tic-tac-toe\n\n\nFundamentals of Object-Oriented Programming (OOP)\nIntroduction to Object-Oriented Programming\nCoding project #5: Grade tracker\nIntermediate Object-Oriented Programming\nCoding project #6: Role Playing Game (RPG)\n\n\nSetting up our local environment\nHow computers work\nPreparing the environment (Mac)\nPreparing the environment (Windows)\nGetting familiar with our local environment\nArgument parsing\nCoding challenge #7: Number adding script\nFile management in Python\nCoding project #7: Note-taking application\nCoding project #8: Customer Management System (CMS)\n\n\nGraphical user interfaces in Python\nTurtle Graphics\nTkinter\n\n\nIntermediate Python\nHigher-order functions\nComprehensions\nUseful built-in functions\nIterables, iterators and generators\nCustom exceptions\nAdvanced Object-Oriented Programming concepts\n\n\nImage processing in Python\nImage processing basics\nCoding project #11: Photo editor\n\n\nData analytics in Python\nWorking with arrays of data using NumPy\nWorking with series and data tables with Pandas\nData visualization with Matplotlib and Seaborn",
      "target_audience": [
        "Complete programming beginners who want to get ready for their first job.",
        "Developers transitioning to Python from other languages.",
        "Intermediate programmers who want to level up their skills.",
        "Students who want to develop practical Python skills (you will build many projects from scratch)"
      ]
    },
    {
      "already_crawled_in": "it-and-software/IT Certifications",
      "url": "https://www.udemy.com/course/manage-azure-subscriptions-microsoft-azure-administrator/"
    },
    {
      "title": "Building Modern Applications (Java - Kafka - Microservices)",
      "url": "https://www.udemy.com/course/building-modern-applications/",
      "bio": "All In One (Java, Spring Boot, Apache Kafka and Microservices)",
      "objectives": [
        "Improve your knowledge of the Java language and understand the structure of an application with Spring Boot",
        "Acquire knowledge to develop endpoints using REST API's, understand the fundamentals of HTTP communications between different applications.",
        "Understand the advantages of a microservices architecture and implement the communication between them in practice.",
        "Understand the concepts, advantage, use case and implement hands-on event communication with Apache Kafka."
      ],
      "course_content": {
        "Who is the Instructor?": [
          "Presentation about the Instructor"
        ],
        "Introduction": [
          "Presentation about the Course",
          "Presentation about REST API's",
          "Presentation about Spring Framework",
          "Presentation about Microservices",
          "Presentation about Apache Kafka"
        ],
        "Environment Configuration": [
          "Links for download and install tools and softwares that we will use"
        ],
        "Hands-on - Building the First Microservice and REST endpoints": [
          "Building the First Microservice - Part 01",
          "Building the First Microservice - Part 02",
          "Building the First Microservice - Part 03",
          "Building the First Microservice - Part 04"
        ],
        "Hands-on - Creating our Kafka broker and installing Postgresql": [
          "Fix simple errors code and Creating Kafka Cluster",
          "Install Postgres"
        ],
        "Hands-on - Building the Second Microservice - Car Store Service": [
          "Building the Car Store Service - Part 01",
          "Building the Car Store Service - Part 02",
          "Building the Car Store Service - Part 03",
          "Building the Car Store Service - Part 04"
        ],
        "Hands-on - Third Microservice - Car Analytics Service": [
          "Building the Analytics Service - Part 01",
          "Building the Analytics Service - Part 02"
        ],
        "Hands-on - Testing Microservices": [
          "Testing microservices with Kafka Messages",
          "Testing our REST API's (GET, PUT and DELETE http methods)."
        ],
        "Finish": [
          "Last faster test and last video"
        ]
      },
      "requirements": [
        "Basic knowledge in object-oriented programming and Java."
      ],
      "description": "The course Building Modern Applications aims to teach about specific technologies and software engineering concepts that are in high demand by companies around the world.\nThese technologies help large companies create resilient and scalable applications, which directly impacts the business models of large corporations.\nFor these reasons the professional who has this knowledge becomes valuable in the job market.\nLearn in this course about Java, Spring Boot (application structure with the framework, Spring Data JPA, Spring RestTemplate, Spring Repositories), event-driven architecture with Apache Kafka (producers and consumers), concepts and practical application of microservices architecture.\nThe content was designed to improve your technical skills, teaching concepts about technologies and software architectures widely used corporately in high performance applications around the world. This content offers conceptual explanations and practical development (hands-on) on the content covered.\n\n\nThe course has the following schedule:\nPresentation of the course with the simulation of a challenge brought by a customer who needs to implement a new feature in their new car sales portal;\nStudy of the problem and presentation of the solution with drawings of the architecture to be implemented;\nDevelopment of a core microservice with REST and event-driven communication;\nDevelopment of another microservice to save posts about cars for sale;\nMicroservice development for analysis and calculation of specific information in new posts.",
      "target_audience": [
        "This course is designed to improve the skills of beginning and intermediate programmers."
      ]
    },
    {
      "title": "Overview - SOTIF (ISO 21448:2022)",
      "url": "https://www.udemy.com/course/overview-sotif-iso-214482022/",
      "bio": "Plain and simple clause by clause explanation of SOTIF (ISO 21448:2022)",
      "objectives": [
        "Safety of the Intended Functionality",
        "SOTIF",
        "ISO 21448:2022",
        "Functional Safety",
        "ISO 26262",
        "Autonomous Driving",
        "Identification of hazards",
        "Functional modifications addressing SOTIF-related risks"
      ],
      "course_content": {},
      "requirements": [
        "Basis understanding of Functional Safety and Software Development (Automotive) is helpful, but not mandatory"
      ],
      "description": "The course is divided into two main chapters:\n- Introduction\n- Basics\n- ISO 21448 Clauses\n\n\nChapter 1: Introduction\nIncludes an introduction of the course creator and provides a motivation lecture, why Safety of the intented functionality (SOTIF) is an important topic in the automotive industry nowadays.\n\n\nChapter 2: Basics\nThe chapter provides information on history and basic terms and definitions related to SOTIF. Also legal aspects are discussed in the chapter.\n\n\nChapter 3: ISO 21448\nThe chapter includes all chapters of the SOTIF standard ISO 21448 and explains the most important aspects of the chapters step by step.\nThe following chapters are covered by the course:\n\n\n- Clause 4: Oveview and organization of SOTIF activities\nThe clause provides an overview of the most important aspects to be considered at the organizational level. For example the consideration of SOTIF principles and Management of SOTIF activities and supporting processes.\n\n\n- Clause 5: Specification and design\nThe clause focuses on important aspect to be considered for specification of the functionality and the design.\n\n\n- Clause 6: Identification and evaluation hazards\nThis clause focuses on the identification of hazards, evaluation of the resulting risk and the specification of acceptance criteria for the residual risk.\n\n\n- Clause 7: Identification and evaluation of potential functional insufficiencies and potential triggering conditions\nThis clause provides an overview of the relation of potential functional insufficiencies and triggering conditions. And how harm can be a result.\n\n\n- Clause 8: Functional modifications addressing SOTIF-related risks\nThis clause describes the possible options for a risk reduction in case the resulting risk is above an acceptable limit.\n\n\n- Clause 9: Definition of the verification and validation strategy\nThe clause describes the aspects to be considered in a verification and validation strategy. Also how to derive validation targets based on the acceptance criteria is desrcribed.\n\n\n- Clause 10: Evaluation of known scenarios\nThis clause described the evaluation of known scenarios and related methods for sensing verification, planning algorithm verification, actuation verification and verification of the integrated system.\n\n\n- Clause 11. Evaluation of unknown scenarios\nThis clause describes how to ensure that the residual risk die tu unknown scenarios is below the acceptable limit.\n\n\n- Clause 12: Evaluation of the achievement of the SOTIF\nThis clause describes the possible recommendation for final release of the SOTIF\n\n\n- Clause 13: Operation phase activities\nThis clause describes how to ensure SOTIF after release in case SOTIF related risks are identified during operation phase.\n\n\nAt the end you get an overview of the ISO 26262 structure, since the safety standard ISO 26262 is one of the most important references in the ISO 21448.",
      "target_audience": [
        "Functional Safety Responsibles",
        "Function Developer",
        "Software Developer/Designer",
        "System Developer/Designer",
        "Project Leader"
      ]
    },
    {
      "title": "C# Numerical Methods for Scientists and Engineers",
      "url": "https://www.udemy.com/course/c-numerical-methods-for-scientists-and-engineers/",
      "bio": "Numerical Methods using .NET C#",
      "objectives": [
        ".Net C# Programming",
        "Numerical Methods",
        "Engineering",
        "Mathematics",
        "Science",
        "Algorithms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Solution of Nonlinear Equations": [
          "Visual Studio Solution and Project Setup",
          "Bisection Method",
          "Regula Falsi Method",
          "Secant Method",
          "Newton Raphson Method",
          "Unit Test Project Setup",
          "Nonlinear Unit Tests Part 1",
          "Nonlinear Unit Tests Part 2"
        ],
        "Solution of Simultaneous Linear Equations": [
          "System of Equations Project and Interface",
          "Gauss Elimination (Solve Equations)",
          "Gauss Elimination (Reduced Form)",
          "Gauss Elimination (Swap Rows)",
          "Gauss Elimination (Back Substitution)",
          "Gauss Elimination (Validate Solutions)",
          "Setup Unit Tests",
          "Refactor and Debug Unit Test"
        ],
        "Curve Fitting and Interpolation": [
          "Add Project Class and Interface",
          "Linear Interpolation",
          "Linear Regression",
          "Power Regression",
          "Interpolation Regression Unit Tests"
        ],
        "Numerical Differentiation": [
          "Project Class and Interface",
          "Forward Difference Method",
          "Backward Difference Method",
          "Central Difference Method",
          "Numerical Differentiation Unit Tests"
        ],
        "Numerical Integration": [
          "Project Class and Interface",
          "Trapezoidal Method",
          "Simpson's 1/3 Method",
          "Simpson's 3/8 Method",
          "Numerical Integration Unit Tests"
        ],
        "Ordinary Differential Equations": [
          "Project Class and Interface",
          "Euler's Method",
          "Runge-Kutta Method",
          "Ordinary Differential Equations Unit Tests"
        ]
      },
      "requirements": [
        "Basic Programming Background",
        "Engineering",
        "Software",
        "Mathematics"
      ],
      "description": "Get Started with C# Numerical Methods for Scientists and Engineers!\nAre you a student or professional in engineering, physics, mathematics, or science — or perhaps considering a transition into software engineering? Do you want a fast, practical way to master .NET Numerical Methods using C# without wading through mountains of theory or endless setup steps? If so, this is the course for you.\nThis course is built for learners who want results quickly. You’ll discover how to apply C# programming to implement powerful numerical methods for solving real-world engineering and scientific problems. Through a structured, step-by-step approach, you’ll transform mathematical concepts into fully functional algorithms, gaining both coding proficiency and practical problem-solving skills.\nWe’ll start by setting up your development environment so you can code immediately, then dive into key numerical techniques such as root finding, numerical integration, solving systems of equations, and more. Along the way, you’ll learn how to organize your code, create reusable algorithm libraries, and structure projects for scalability.\nBy the end of this course, you’ll not only understand numerical methods in the context of C#, but also have the skills to extend these techniques to your own research, projects, or professional work.\nWhether your goal is to enhance your academic studies, improve technical capabilities for your current job, or prepare for a career in software engineering, this course will give you the tools, confidence, and momentum to succeed.\nEnroll now and take the first step toward mastering .NET technologies for science, engineering, and beyond.",
      "target_audience": [
        "Students and Professionals who want to master numerical methods",
        "Undergraduate Scientists and Engineers"
      ]
    },
    {
      "title": "Data structure for fledgling learners",
      "url": "https://www.udemy.com/course/data-structure-for-fledgling-learners/",
      "bio": "Data Structure and Algorithms",
      "objectives": [
        "In this course student will get to learn basics of data structure in python.",
        "Ability to analyze algorithms and algorithm correctness.",
        "Ability to summarize searching and sorting techniques",
        "Ability to describe stack,queue and linked list operation. 4 Ability to have knowledge of treeand graphs concepts."
      ],
      "course_content": {
        "Data Structure": [
          "Introduction",
          "overview of object oriented programming",
          "Binary Tree",
          "Nodes"
        ],
        "Algorithms": [
          "heaps",
          "selection sort",
          "bubble sort",
          "Linear search"
        ]
      },
      "requirements": [
        "Minimum requirement is python language",
        "And Object oriented programming"
      ],
      "description": "in computer science, a data structure is a data organization, management, and storage format that enables efficient access and modification. data structure are generally based on the ability of a computer to fetch and store data at any place in its memory In this course you are going to learn about basics of data structures like linked list , nodes , heaps , binary tree , selection sort , dictionary , tuples & list . Data structure provides the right way to organize information in the digital space. The data structure is a key component of Computer Science and is largely used in the areas of Artificial Intelligence, operating systems, graphics, etc.\nSearching: We can search for any element in a data structure.\nSorting: We can sort the elements of a data structure either in an ascending or descending order.\nInsertion: We can also insert the new element in a data structure.\nUpdation: We can also update the element, i.e., we can replace the element with another element.\nDeletion: We can also perform the delete operation to remove the element from the data structure.\nSome of the Advantages :\nEfficiency: If the choice of a data structure for implementing a particular ADT is proper, it makes the program very efficient in terms of time and space.\nReusability: The data structure provides reusability means that multiple client programs can use the data structure.\nAbstraction: The data structure specified by an ADT also provides the level of abstraction. The client cannot see the internal working of the data structure, so it does not have to worry about the implementation part. The client can only see the interface",
      "target_audience": [
        "Students , especially computor & IT engineering.",
        "Anyone who wants to learn basics of data structure"
      ]
    },
    {
      "title": "AWS Key Management Service - KMS Fundamentals",
      "url": "https://www.udemy.com/course/aws-key-management-service-kms-fundamentals/",
      "bio": "Learn the fundamentals of Key Management Service to integrate with AWS services to encrypt your data with confidence.",
      "objectives": [
        "AWS Key Management Service fundamentals and using customer master key to encrypt data",
        "Access Management for configure who can do what with master keys",
        "Examples of using master keys to encrypt data on AWS S3 and EBS",
        "Best practice for data encryption and managing master key in Key Management Service"
      ],
      "course_content": {
        "Introduction to KMS": [
          "Introduction",
          "Cryptography Primer",
          "What KMS is Not",
          "Key Ownership Models",
          "AWS Account & Region for KMS",
          "KMS Introduction Quiz"
        ],
        "Symmetric Key in Action": [
          "Create a New Symmetric Key",
          "Key Material",
          "Symmetric Key in Action Quiz",
          "Create a Symmetric Key"
        ],
        "Access Management": [
          "Introduction",
          "Key Policy",
          "Configure Key Policy and IAM Policy",
          "Grants",
          "Access Management Quiz",
          "Access Management Practice"
        ],
        "Using KMS with S3": [
          "S3 Encryption Introduction",
          "S3 Encryption Demo",
          "S3 Bucket Policy for Encryption",
          "Envelope Encryption",
          "S3 Replication and Version with Encryption",
          "S3 encryption with KMS Practice"
        ],
        "Using KMS with Elastic Block Storage (EBS)": [
          "EBS Encryption with KMS Introduction",
          "EBS Encryption with KMS Demo",
          "EBS Encryption with KMS Practice"
        ],
        "KMS Full Picture": [
          "Deleting Keys",
          "Key Rotation",
          "Alias",
          "Limits and Cost",
          "KMS Full Picture Quiz",
          "Summary"
        ]
      },
      "requirements": [
        "High level understanding of AWS cloud computing",
        "High level understanding of AWS Identity and Access Management"
      ],
      "description": "Welcome to Amazon Web Service’s Key Management Service Fundamentals course. If you are building a solution in AWS that works with sensitive data, you will probably need to encrypt your data which is becoming a common requirement. If this is you, you’ve come to the right course. That’s because the Key Management Service is a core technology in AWS that plays a crucial role for any data encryption solution.\nThe major topics in this course include\nCustomer Master Key\nKey Ownership models\nSymmetric keys\nAccess management\nIntegration with S3 and Elastic Block Store (EBS)\nDeleting Key\nRotating Key\nLimits\nCost\nThere are a lot of demonstrations in this course and I encourage you to follow along to help you learn by doing.\nThis course is intended for a technical audience with some familiarity with AWS. Ideal learners are software engineers, solution architects and anyone who is building in AWS with interest in data encryption. If you have some basic understanding of AWS’s Identity and Access Management, it would be helpful on this course. Otherwise, the only other prerequisite is your curiosity and willingness to learn.\nFeel free to browse the course description and look forward to helping you learn about Key Management Service.",
      "target_audience": [
        "AWS beginners, programmers and architects who are interested in building secure solution with data encryption using KMS"
      ]
    },
    {
      "title": "Node.js & Hapi.js: Building Enterprise Web Apps",
      "url": "https://www.udemy.com/course/nodejs-hapijs-building-enterprise-web-applications/",
      "bio": "Use Node & Hapi to build enterprise web applications that are ready for production. Nodejs, Hapijs, Javascript and more!",
      "objectives": [
        "Build production ready, enterprise scale web applications",
        "Downloadable lectures, code and design assets for all projects",
        "Use modern JavaScript features (ES6)",
        "Implement authentication",
        "Write unit and integration tests",
        "Implement CRUD operations",
        "Get friendly and fast support in the course Q&A"
      ],
      "course_content": {
        "Getting Started": [
          "Introduction",
          "Intro to Hapi"
        ],
        "Server Setup": [
          "Server Setup",
          "Adding HTTP Routes"
        ],
        "Validation with Joi": [
          "Validation with Joi part 1",
          "Validation with Joi part 2",
          "Validation with Joi part 3"
        ],
        "Server configuration and composition with Glue": [
          "Intro to Glue",
          "Server configuration and composition with Glue",
          "Server configuration and composition with Glue part 3"
        ],
        "Serving content over HTTP": [
          "Serving Static Content part 1",
          "Serving Static Content part 2"
        ],
        "Templates": [
          "Intro to Templating",
          "Handlebars and Hapi.js",
          "Handlebars and Hapi.js part 2",
          "Handlebars and Hapi.js part 3"
        ],
        "Security & Login": [
          "Auth Intro",
          "Using Basic Auth",
          "Logging in via External Auth Providers",
          "Logging in with AzureAD",
          "Establishing a Session",
          "Advanced Navigation after Login",
          "Logging Out"
        ],
        "Databases": [
          "Intro to Sequelize",
          "Connecting to the Database",
          "Querying the Database",
          "Updating Records in the Database",
          "Updating Records in the Database part 2",
          "Database Wrapup"
        ],
        "Logging": [
          "Intro to Logging with Good",
          "Logging to stdout",
          "Adding custom log statements",
          "Logging to a text file",
          "Dealing with sensitive logs",
          "Shipping Logs to Splunk"
        ],
        "Generating API Documentation": [
          "Generating Swagger Documentation"
        ]
      },
      "requirements": [
        "A computer on which you can install software (Windows, MacOS, or Linux)",
        "A basic understanding of JavaScript (variables, functions, objects, arrays, if statements)",
        "Your favorite text editor or IDE"
      ],
      "description": "Hi, welcome to the course!!\n\nThrough the 11 chapters of this course, you'll learn\nWhat Hapi.js is\nHow to setup a Node.js & Hapi.js server\nHow to validate server input & payloads, then respond with proper error messages & status codes\nServer composition and configuration for additions & modifications\nHow to serve simple static content & complex static content over HTTP\nHow to simplify your server content using templates & Handlebars\nHow to secure your web application with Basic Authentication and 3rd party Authentication providers like Azure Active Directory (AzureAD)\nHow to connect to, query, insert and update records into a relational database\nHow to monitor your server, output logs, and ship those logs to a centralized repository like Splunk\nHow to easily generate Swagger API documentation\nHow to unit test using Lab & Code\nHow to unit test using Jest\nHow to output code coverage reports\nSo much more!\n\nWhat version of Hapi.js is used in this course?\nThe latest version major version of Hapi.js - 17.x.x\n\n\nComments? Questions? Suggestions?\nLeave a question in the QA section of this course!",
      "target_audience": [
        "whether you're a beginner, or have building web applications for a long time, this course has lots of content to learn from!"
      ]
    },
    {
      "title": "Java EE Fundamentals - A Practical Guide For Developers",
      "url": "https://www.udemy.com/course/the-theory-and-practice-of-java-ee-for-java-software-developers/",
      "bio": "Your most detailed guide to the Java EE platform",
      "objectives": [
        "Get a firm grounding in modern software development with Java",
        "The building blocks of Java Platform Enterprise Edition",
        "Good grounding in the various Java Specification Requests",
        "Know how to contribute to Java Enterprise Edition",
        "Be able to make objective, informed decision about Java EE",
        "Be able to identify Java EE FUD and myths"
      ],
      "course_content": {
        "Hello World": [
          "Introduction"
        ],
        "Part 1 - The Theory - Fast!": [
          "What Really is Java EE?",
          "What Really is Java EE?",
          "What Really is Java EE?",
          "What Really is Java EE?",
          "What Really is Java EE?",
          "Java EE Definition",
          "The Java Community Process (JCP)",
          "The Java Community Process (JCP)",
          "JCP Members - Companies",
          "JCP Members - Individuals",
          "JCP Chapter Quiz",
          "Java Specification Request (JSR)",
          "Java Specification Request (JSR)",
          "Java Specification Request (JSR)",
          "Java EE JSRs",
          "Core JSRs - Intro",
          "Core JSRs - CDI",
          "Core JSRs - JPA",
          "Core JSRs - JAX-RS",
          "Core JSRs - Others",
          "JSR Quiz",
          "Why Java EE?",
          "Why choose Java EE - Standardization",
          "Why choose Java EE - Openness",
          "Why choose Java EE - Stability",
          "Why choose Java EE - Ease of Development",
          "Why choose Java EE - Portability",
          "Why choose Java EE - Pick and Choose",
          "Why choose Java EE - Amazing Docs",
          "Why choose Java EE - Summary",
          "Java EE - Any Downsides?",
          "Java EE vs Spring - The Intro",
          "Java EE vs Spring - Definition",
          "Java EE vs spring - Spring--",
          "Java EE vs Spring - Outro",
          "Java EE Myth Busting",
          "Java EE Myth Busting - Code Example",
          "Java EE Myth Busting - Coding Example",
          "Java EE Myth Busting - Summary",
          "Course Summary and Last Words"
        ],
        "Payara Server": [
          "Payara Server",
          "Payara Server",
          "Payara Server",
          "Payara Server",
          "Payara Server"
        ],
        "Java EE 8 Updates and Progress": [
          "Java EE 8 - What's up?",
          "Java EE 8 - JSR 2.3",
          "Java EE 8 - CDI 2.0",
          "Java EE 8 - JSON-B",
          "Java EE 8 - Servlet 4.0",
          "Java EE 8 - Glassfish",
          "Java EE - Keeping Up With Progress"
        ],
        "Jakarta EE": [
          "What is Jakarta EE?",
          "Jakarta EE - Whats New?",
          "Jakarta EE Mailing Lists"
        ]
      },
      "requirements": [
        "A decent laptop or desktop computer",
        "A desire to understand what Java EE is",
        "A curiosity about what all the various acronyms in the Java ecosystem mean"
      ],
      "description": "Java EE. JCP. JSR. EJB. Jax RS. Have you ever wondered what all these mean? Have you ever been intimidated by the sheer number of acronyms you need to master to get started with the Java EE platform? Worry no more! This course is your\nultimate theoretical guide\nto everything Java EE.\nWe cover all the major acronyms that make up the ever powerful Java EE platform. You will know and appreciate\n\nWhat Java EE really is\nWhat a Java Specification Request (JSR) is\nWhat the Java Community Process (JCP) is\nHow you can contribute to the Java EE platform\nNotable companies and individuals that are members of the JCP\nWhether Java EE is the right platform for you next project\nWhether there are any drawbacks to using Java EE\nJava EE vs Spring\nJava EE myth busters\nJava EE FUD busters and much much more\nThis course is a\nfree flow, no-code\napproach to understanding and appreciating the Java EE platform. Why no code? Because to really make sense of Java EE, one will need to understand how the platform is evolved. This is very important to help you dispel a lot of misunderstanding of Java EE and also appreciate how decisions are made, how you can contribute to the platform and most important, help you make informed decision whether Java EE is for you.\nThis course will cover a lot of ground and by the time you are done with it, you will have a deep understanding of Java EE the platform, Java EE the community and how you can contribute to Java EE. You will also gain deep enough knowledge to be able to make objective decisions about whether you should use Java EE or not. More importantly, you will know when to ignore Java EE FUD and myth.\nYou will also learn about a lot of the modern features that have been added to the Java EE platform through the JCP's JSR program.\nThe course is presented in a plain, unscripted everyday English designed to get you to appreciate concepts fast! If you have longed to get a firm grounding in software development with Java, then this is your course.\nI will be with you at all times in the course forum and you can ask me any question you want. I will be more than glad to answer them. I will also be updating the course with the latest happenings in the JCP with regards to progress towards Java EE 8 and beyond. This course will be your living, lifelong\ntheoretical\ncompanion to the Java EE platform.\nSo what are you waiting for? Go ahead, just click the big green buy now button. You definitely have nothing to loose with Udemy's helpful 30 day money back guarantee. Go ahead, enroll now and I will see you in the course.",
      "target_audience": [
        "Anyone who wants to understand how Java EE works",
        "Anyone who wants a firm theoretical foundation in Java EE",
        "Anyone who wants to master the pillars of Java EE",
        "Anyone who wants to contribute to the Java Platform",
        "Software developers who are new to Java",
        "Anyone who wants to master the various acronyms of the Java Platform"
      ]
    },
    {
      "title": "Learn Git! The SIMPLIFIED Git 101 Basics Course!",
      "url": "https://www.udemy.com/course/learn-git-fast/",
      "bio": "The ULTIMATE Git Beginners Course! Learn Git FAST!",
      "objectives": [
        "A better overall understanding of Git"
      ],
      "course_content": {
        "Introduction: Welcome to the world of Git!": [
          "Learn Git! The SIMPLIFIED Git 101 Basics Course For The Avg. Person!"
        ],
        "What is Git?": [
          "Lesson 1: The Problem",
          "Lesson 2: The Solution",
          "Lesson 3: The Choices and Tools"
        ],
        "Git Setup": [
          "Lesson 4: Git Commandline Setup",
          "Lesson 5: Git Repo Creation",
          "Lesson 6: Git Setup Commands"
        ],
        "Git Commands": [
          "Lesson 7: Git Basic Commands",
          "Lesson 8: Git Flow",
          "Lesson 9: Git Ignore & Git Mac vs. Win"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "A simple knowledge of computers and software development basics."
      ],
      "description": "LEARN GIT TODAY with the EASIEST course on Git!\nWHY SHOULD YOU TAKE THIS COURSE?\nBy the end of this course, students will have the skills and expertise to:\n\n1. Install and Setup Git\n\n2. Setup and Create Git Repos\n\n3. Use Git Command line to work with Git Repos\n\nIf you require Git for Work or for School and need all the help you can get to learn it, or at the very minimum need to LEARN GIT FAST to obtain a BETTER JOB or to PASS A COURSE IN SCHOOL, then THIS COURSE IS FOR YOU!\n\nI was once like you, FRUSTRATED with trying to learn Git!! Now I'm here to share with you the easiest course around on Git and by the end of it you'll BECOME A GIT ROCKSTAR!\n\nI'm here to teach you how YOU can do it too with this amazing course!  Here you will learn some of the most incredible EASIEST methods that have helped me learn Git!\n\nINSTRUCTOR INVOLVEMENT:  Due to the busy schedule Nav has as he is developing new games and apps, speaking at seminars around the world, running his various companies,  building new programs and courses, and ofcourse spending time with his  family, fans and other students, etc. it will naturally be a challenge  for Nav to be available all the time.  Note: Please  make sure your questions are related to this course when asking  questions as Nav has several courses on various topics. If you have a  question on another course or topic that Nav teaches that is  outside the scope of this course, please ask it in that specific webinar  or discussion section.\nWHO SHOULD TAKE THIS COURSE?\nThis course is aimed at beginners who are either students in high school or university or employees in a Job looking to upgrade their skills.  This is a great course for software developers who are planning to start working in the latest technological companies that use Git and version control.\nWHY TAKE THIS COURSE?\n1. You've got to learn Git for Work or Business\n2. You're looking to get a higher grade in School (Possibly taking a computer science course on Git)\n3. You want to make your development life easier\n\nLEARN GIT NOW - TAKE ACTION TODAY!\nImportant information before you enroll:\nIn case you are not fully satisfied with the course, don't forget you are covered by a 30 day money back guarantee, full refund, no questsions asked!\nOnce enrolled, you have unlimited, lifetime access to the course!\nYou will have instant and free access to any updates I may add to the course over time.",
      "target_audience": [
        "Anyone taking computer programming or working in the software development field"
      ]
    },
    {
      "title": "Azure Logic Apps - A step-by-step guide for Beginners",
      "url": "https://www.udemy.com/course/azure-logic-apps-a-step-by-step-guide-for-beginners/",
      "bio": "Learn about Azure App Services - Logic Apps with practical examples",
      "objectives": [
        "Introduction to Logic Apps",
        "Creating a Simple Logic App",
        "Handling array of Items using for-each and condition",
        "Using Custom API App in Logic App",
        "Understanding Triggers and Actions",
        "Understand the difference between Functions vs Logic Apps",
        "Using API App in Logic Apps"
      ],
      "course_content": {
        "Introduction Of Logic Apps": [
          "Introduction"
        ],
        "Creating Simple Logic App": [
          "Creating Simple Logic App"
        ],
        "Logic App With For Each And Filter Steps": [
          "Logic App With For Each And Filter Steps"
        ],
        "Using API App In Logic App": [
          "Using API App In Logic App"
        ],
        "Check traffic on a schedule with Azure Logic Apps": [
          "Check traffic on a schedule with Azure Logic Apps"
        ]
      },
      "requirements": [
        "Anyone who wants to develop and host solutions in Azure. Learners should be able to program in at least one Azure-supported language"
      ],
      "description": "Logic Apps are used to quickly build powerful solutions integrating various SaaS and enterprise applications.\nIn this course \"Azure Logic Apps\", you will learn\nIntroduction to Logic Apps\nCreating a Simple Logic App\nHandling array of Items using for-each and condition\nUnderstanding Triggers and Actions\nUsing Custom API App in Logic App\nUnderstand the difference between Functions vs Logic Apps\nUsing API App in Logic Apps",
      "target_audience": [
        "Anyone who has basic knowledge on AZ-103 and wants to develop and host solutions in Azure. Learners should be able to program in at least one Azure-supported language."
      ]
    },
    {
      "title": "Build Microservices with Spring Boot, REST & MySQL",
      "url": "https://www.udemy.com/course/build-microservices-with-spring-boot-rest-mysql/",
      "bio": "MicroServices: Learn and create application from scratch to get exposure to industrial real time applications",
      "objectives": [
        "Develop a Real World Microservices application with Spring Boot, REST & MySQL",
        "Students have landed jobs with the skills from this course. Spring boot developers are in high demand.",
        "You can type the code along with me while watching the videos. I explain every bit of code to help you learn.",
        "Microservices is a must skill nowadays for every developer. So, with this course you will learn Microservices practically."
      ],
      "course_content": {
        "Introduction": [
          "Demo of the application that we are going to create in this course",
          "What are we going to cover in this course?"
        ],
        "Prerequisite Installation": [
          "Download and Install Java",
          "Download and Install MySQL WorkBench",
          "Download and Install Eclipse IDE",
          "Download and Install Postman"
        ],
        "Brief about Microservices Architecture": [
          "What is Microservices Architecture?",
          "What is Monolithic Architecture?",
          "Demonstration of Microservices vs Monolithic Architecture",
          "Microservices vs Monolithic Architecture"
        ],
        "Project Use Case": [
          "Use case of the Project/Application"
        ],
        "API Gateway": [
          "What is API Gateway?",
          "[Theory] What is API Gateway?"
        ],
        "Service Discovery": [
          "What is Service Discovery?",
          "[Theory] What is Service Discovery?"
        ],
        "Database and Tables Creation": [
          "Create Databases and Tables for Movie and Genre Micro Services",
          "Add Data to Tables"
        ],
        "Movie MicroService Project": [
          "Generate Project and Import it to Eclipse",
          "Create Movie POJO Class",
          "Update Application Properties",
          "DAO Layer and its implementation",
          "Service Layer and its implementation",
          "Controller Class Implementation",
          "Add Exception Handling",
          "Run Movie MicroService Application"
        ],
        "Genre MicroService Project": [
          "Generate Project and Import it to Eclipse",
          "Create Genre and Movie POJO classes",
          "DAO Layer and its implementation",
          "Service Layer and its implementation",
          "Controller Class Implementation",
          "Application Properties Changes",
          "Run Genre MicroService Application"
        ],
        "API Gateway Project": [
          "Create API Gateway MicroService Project"
        ]
      },
      "requirements": [
        "Basic Java knowledge is required",
        "Basic Spring knowledge is required",
        "Basic SQL knowledge is helpful",
        "Basic REST knowledge is helpful"
      ],
      "description": "As we all know MicroServices is a scorching topic these days and there are a lot of job openings in this field too and so does the competition. You will see a lot of courses on Udemy where everyone has nicely explained what MicroServices is and how it helps a developer, which may help you crack the technical interview while job hunting.\nBut, after you get into the organization, you have to be ready to code which you will only gain after doing a lot of practicals on MicroServices. So, here I am with one of the best real-time applications to get you ready to have some exposure to the real technical world.\n\n\nIn this course, we are going to create 4 MicroServices applications from scratch using Spring Boot, REST, and MySQL. All these microservices will be communicating with each other.\nMovie MicroService\nGenre MicroService\nAPI Gateway\nService Discovery\n\n\nHere, we will have two main microservices which will impersonate a very basic example of IMDB app/website.\nMovie MicroService\nGenre MicroService\nThese two services will have their own database and both these microservices will be communicating with each other to get the data.\n\n\nThis course will really help you to gain exposure to what real-time applications look like.",
      "target_audience": [
        "The course is appropriate for all Java developers: beginners to advanced"
      ]
    },
    {
      "title": "Learning Tree Data structure [Java]",
      "url": "https://www.udemy.com/course/tree-data-structure/",
      "bio": "Breadth First Search and Depth First Search in Trees",
      "objectives": [
        "Clear understanding of Tree Data structure",
        "How to use Breadth First Search in Tree Data structure",
        "How to use Depth First Search in Tree Data structure",
        "Visualize the Code flow using Debugger in Leetcode"
      ],
      "course_content": {
        "Breadth First Search": [
          "Level Order Traversal",
          "ZigZag traversal of tree",
          "Right view of Tree"
        ],
        "Depth First Search": [
          "In-order Traversal",
          "Pre order Traversal",
          "Post order traversal"
        ]
      },
      "requirements": [
        "knowledge on LinkedList is needed"
      ],
      "description": "Course Description:\nThis course explains how we can solve problems involving Tree data structure. First, the concept is explained in white board and then the solution is coded for better understanding.\nWhen we see a tree data structure, the first thing we need to identify is to use either Breadth-first Search or Depth-first search. This course differentiates the Breadth-first search and Depth-first search problems and the different techniques used in them.\nDepth First search uses recursion. It is very hard to visualize recursion. This course uses a debugger and this helps in visualizing the code flow.\n\n\nWhat is Tree data structure?\nA tree is non-linear and a hierarchical data structure consisting of a collection of nodes such that each node of the tree stores a value and a list of references to other children nodes .\nApplications :\n\nStore hierarchical data, like folder structure, organization structure, XML/HTML data.\nBinary Search Tree is a tree that allows fast search, insert, delete on a sorted data. It also allows finding closest item\nHeap is a tree data structure which is implemented using arrays and used to implement priority queues.\nB-Tree and B+ Tree : They are used to implement indexing in databases.\nSyntax Tree: Scanning, parsing , generation of code and evaluation of arithmetic expressions in Compiler design.\nTrie : Used to implement dictionaries with prefix lookup.\nSuffix Tree : For quick pattern searching in a fixed text.\nSpanning Trees and shortest path trees are used in routers and bridges respectively in computer networks\netc",
      "target_audience": [
        "Beginner and People who find hard to work on Tree data structures can take this course"
      ]
    },
    {
      "title": "Design Patterns in C++ 2024: Master Modern Architecture",
      "url": "https://www.udemy.com/course/design-patterns-in-c-2024-master-modern-architecture/",
      "bio": "Comprehensive Guide to Implementing Design Patterns in C++",
      "objectives": [
        "Master C++'s essential design patterns. Boost your coding skills and architect scalable, efficient software.",
        "Dive into the core of Fundamental Design Patterns: grasp the 'WHAT', unravel the 'WHY', and master the 'HOW'",
        "Get real world examples of design patterns usage with hands on projects for every design pattern",
        "Learn about common mistakes with our BONUS on AntiPatterns. Spot them, understand why they happen, and fix them",
        "Comprehensive knowledge about limitations, comparisons, real world usage & hand on examples of design patterns using C++"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What are design patterns?",
          "Don't reinvent the wheel",
          "Object Oriented Design",
          "Categories of Design Patterns"
        ],
        "SOLID Design Principles": [
          "What are Solid Principles",
          "Why is it important to follow SOLID principles",
          "Single Responsibility Principle",
          "Open/Closed Principle",
          "Liskov Substitution Principle",
          "ISP",
          "DIP"
        ],
        "Creational Patterns: Singleton": [
          "Singleton Introduction",
          "Singleton Implementation",
          "Singleton Database Config Example",
          "Advantages Of Singleton Design Pattern",
          "Disadvantages of Singleton Design Pattern",
          "Use Cases of Singleton Design Pattern"
        ],
        "Factory Design Pattern": [
          "Use Cases of Factory Design Pattern",
          "Factory Implmentation",
          "Payment Processor Factory",
          "Mock Service With Factory",
          "Multi-Channel Communication System"
        ],
        "Creational: Builder Design Pattern": [
          "Builder Introduction",
          "Computer Builder",
          "E-Commerce Cart Builder",
          "unique_ptr, make_unique, move explanation",
          "Rest Api Request Builder",
          "Instagram Post Builder",
          "Youtube Video Builder"
        ],
        "Prototype Design Pattern": [
          "Truck Prototype",
          "Game Character Implementation",
          "Game Character With Prototype",
          "VirtualMachine Prototype"
        ],
        "Adapter Design Pattern": [
          "PaymentSystem Implementation",
          "Instagram Image Processor",
          "Binance API Adapter"
        ],
        "Composite Design Pattern": [
          "Computer Organization Code",
          "Moder UI Component Implementation"
        ]
      },
      "requirements": [
        "You should have a basic knowledge of C++ & basic programming concepts"
      ],
      "description": "Welcome to our comprehensive course on Design Patterns in C++! This course is meticulously structured to cover a wide range of design patterns, their implementations, real-life examples, and quizzes to reinforce your learning. Whether you're a beginner or an experienced developer, this course will guide you through the intricacies of design patterns in C++, ensuring a deep understanding and practical application.\nCourse Highlights:\nFoundational Insight: Begin your journey with a solid foundation in the history and significance of design patterns and the essential SOLID principles that guide robust software design.\nC++-centric Approach: Seamlessly integrate the core principles of classic design patterns with the powerful features of modern C++, such as unique_ptr, make_unique, and smart pointers.\nHands-On Coding Exercises: Engage in real-time coding activities, where you'll implement patterns like Singleton, Factory, Builder, Prototype, Adapter, and Composite, using real-world scenarios and practical examples.\nAdvanced Programming Techniques: Explore contemporary C++ solutions that rejuvenate traditional design pattern implementations, making your code more efficient and maintainable.\nPatterns & AntiPatterns Galore: Journey through various design patterns while also learning to recognize and avoid common antipatterns, gaining insights into the dos and don'ts of software design.\nComprehensive Resources: Gain access to all code samples, detailed slides, and a meticulously curated PDF to bolster your learning journey.\nEngaging Quizzes: Validate your understanding and solidify your knowledge with quizzes at the end of each section.\nDeep Dive into Design Patterns\nAt their core, Design Patterns offer standardized solutions to recurring programming challenges. While their inception was in older coding languages, their relevance remains strong, finding a perfect fit even in a language as powerful as C++.\nDetailed Course Content:\nSection 1: Introduction\nLecture 1: Introduction\nLecture 2: What are Design Patterns?\nLecture 3: Categories of Design Patterns\nSection 2: SOLID Design Principles\nLecture 4: What are SOLID Principles?\nLecture 5: Why is it Important to Follow SOLID Principles?\nLecture 6: Single Responsibility Principle\nLecture 7: Open/Closed Principle\nLecture 8: Liskov Substitution Principle\nLecture 9: Interface Segregation Principle (ISP)\nLecture 10: Dependency Inversion Principle (DIP)\nSection 3: Creational Patterns: Singleton\nLecture 11: Singleton Introduction\nLecture 12: Singleton Implementation\nLecture 13: Singleton Database Config Example\nLecture 14: Advantages Of Singleton Design Pattern\nLecture 15: Disadvantages of Singleton Design Pattern\nLecture 16: Use Cases of Singleton Design Pattern\nSection 4: Factory Design Pattern\nLecture 17: Use Cases of Factory Design Pattern\nLecture 18: Factory Implementation\nLecture 19: Payment Processor Factory\nLecture 20: Mock Service With Factory\nLecture 21: Multi-Channel Communication System\nSection 5: Creational: Builder Design Pattern\nLecture 22: Builder Introduction\nLecture 23: Computer Builder\nLecture 24: E-Commerce Cart Builder\nLecture 25: unique_ptr, make_unique, and move Explanation\nLecture 26: Rest API Request Builder\nLecture 27: Instagram Post Builder\nLecture 28: YouTube Video Builder\nSection 6: Prototype Design Pattern\nLecture 29: Truck Prototype\nLecture 30: Game Character Implementation\nLecture 31: Game Character With Prototype\nLecture 32: Virtual Machine Prototype\nSection 7: Adapter Design Pattern\nLecture 33: Payment System Implementation\nLecture 34: Instagram Image Processor\nLecture 35: Binance API Adapter\nSection 8: Composite Design Pattern\nLecture 36: Computer Organization Code\nLecture 37: Modern UI Component Implementation\nWho’s This For?\nThis course is a treasure trove for C++ enthusiasts, budding coders, and even seasoned developers. If you're looking to master design patterns, understand their modern-day implementations in C++, and avoid common pitfalls, this course is tailor-made for you.\nInteractive and Engaging Learning:\nReal-Time Coding Activities: Experience the joy of coding directly in C++ with hands-on examples that make learning engaging and effective.\nBy the end of this course, you will have a profound understanding of Design Patterns in C++, their implementations, and real-life applications. Each section is designed to build upon the previous one, ensuring a comprehensive and immersive learning experience.",
      "target_audience": [
        "New to C++? Dive in! This foundational course sets you on the right path.",
        "Been coding in C++ for 1-4 years? Elevate your skills and step up in your career journey.",
        "Prepping for an interview? This course is your secret weapon to shine.",
        "Seasoned developer? Refresh and refine your design prowess with this course.",
        "Every C++ coder, no matter the stage, will find value here."
      ]
    },
    {
      "title": "Windows Programming with IronPython",
      "url": "https://www.udemy.com/course/windows-programming-with-ironpython/",
      "bio": "A course on learning Windows forms based application development using IronPython.",
      "objectives": [
        "Develop programs in IronPython using Windows forms in .Net framework"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course",
          "Introduction to IronPython",
          "Introduction to Visual Studio Code",
          "Introduction to Visual Studio Community",
          "Introduction to Sharp Develop"
        ],
        "IronPython Programming Concepts": [
          "Python Language",
          "Python Control Statements",
          "Python Data Structures",
          "Python Functions & Modules",
          "Python Objects & Classes",
          "Python File & Exception Handling"
        ],
        "Basics of Windows GUI Development with IronPython": [
          ".Net framework and Windows Forms",
          "Windows Forms Controls",
          "Standard Dialog Boxes",
          "Events and Event Handlers"
        ],
        "Application Interface Development": [
          "Ex 1 - Buttons and Textboxes",
          "Ex 2 - RadioButtons and Checkboxes",
          "Ex 3 - Listbox and Combobox",
          "Ex 4 - ListView and Treeview",
          "Ex 5 - TabControl",
          "Ex6 - Tool, Menu and Status Strips",
          "Ex 7 - DataVisualisation with MS Charts",
          "Ex 8 - SDI/MDI Apps"
        ]
      },
      "requirements": [
        "Basics of object oriented programming"
      ],
      "description": "Ironpython is the choice for providing scripting language support in many commercial software's like Autocad , Ansys etc. Ironpython is python with .Net support so it can leverage power of .Net technology.\nIn this course users will learn to develop ironpython scripts with GUI support using windows forms available in .Net framework.We will start with basics of python language and understand basics of .Net framework library.We will design application interface with windows forms and use different controls available in the .net framework class library to enhance the user interface and manipulate data.\nAnsys provides customization toolkit to develop custom programs using Ironpython. This course will help students to develop GUI interface easily for their custom programs developed using Ansys ACT.",
      "target_audience": [
        "Developers who want to learn Windows forms programming with IronPython"
      ]
    },
    {
      "title": "Build a Search Engine with Python",
      "url": "https://www.udemy.com/course/build-a-search-engine-with-python-computer-science-python/",
      "bio": "Learn how web search engines work. Build Web, Image & Reverse Image Search Engine Applications in Python from scratch.",
      "objectives": [
        "How Internet and Web Search Engines Work",
        "Build a Web Search Engine App in Python",
        "Build an Image Search Engine and Reverse Image Search Engine App in Python",
        "How Web Search Engines like Google process their data",
        "Algorithms like Google's PageRank and implementing it in Python",
        "Web Crawling Process",
        "Information Retrieval and Natural Language Processing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Installing Required Tools",
          "Link To The Code"
        ],
        "Theoretical Pre-Requisites: NLP and Information Retrieval": [
          "Introduction to Information Retrieval",
          "Text Pre-processing",
          "Zipf's Law",
          "Implementing Tokenization and Lemmatization",
          "Implementing Stop Words Removal",
          "Implementing Stemming",
          "Inverted Indexes",
          "Building an Inverted Index",
          "Searching in an Inverted Index",
          "Boolean Retrieval Model",
          "Vector Space Model",
          "Cosine Similarity",
          "Term Weighting Mechanisms (TF-IDF)",
          "Implementing Vector Space Retrieval",
          "Adding Source Control"
        ],
        "The Internet and Web Search": [
          "The Internet",
          "Web Search"
        ],
        "Web Spidering/Crawling": [
          "Web Spiders",
          "Spider Traps",
          "robots.txt and sitemap.xml",
          "Building a Web Spider in Python"
        ],
        "A Small Universe of 5 Webpages": [
          "Web Graph of 5 Webpages",
          "Introduction to Flask",
          "Implementing Web Graph"
        ],
        "Ranking of Webpages and The PageRank Algorithm": [
          "Link Analysis",
          "HITS",
          "PageRank",
          "PageRank with Damping Factor",
          "Implementing PageRank in Python"
        ],
        "Building Web Search Engine": [
          "Introduction",
          "Building Search Page",
          "Extracting Query",
          "Crawling and Saving Tokenized Text as Pickle",
          "Searching using TF-IDF and Cosine Similarity",
          "Building the Results Page"
        ],
        "Building Image Search Engine": [
          "Creating Search Page",
          "Crawling and Storing Images Metadata",
          "Performing Search",
          "Rendering the Results"
        ],
        "Building Reverse Image Search Engine": [
          "Convolutional Neural Networks",
          "VGG16",
          "Reading Images and Extracting Features",
          "Building Reverse Image Search Engine"
        ],
        "Additional Content: Building Web Search Engine using Database": [
          "Modifying our Web Crawler",
          "Calculating PageRank",
          "Implementing Web Search Feature"
        ]
      },
      "requirements": [
        "At least Hello World experience in Python Programming Language and HTML/CSS"
      ],
      "description": "Welcome to \"Build a Search Engine with Python from  Scratch,\" a comprehensive Udemy course designed to take you on an exciting journey through the world of search engines and computer science.\nIn today's digital age, search engines play an indispensable role in our daily lives, enabling us to access information quickly and efficiently. This course will empower you with the knowledge and skills needed to create your very own search engine from scratch using the versatile Python programming language.\nWhether you're a novice looking to dive into the world of Computer Science or an experienced Python developer eager to expand your skill set, this course is tailored to meet your needs. We will start from the basics and gradually build a fully functional search engine, covering essential concepts like web crawling, indexing, ranking algorithms, and user interfaces.\n\n\nWe're going to be building:\nWeb Search Web Application\nImage Search Web Application\nReverse Image Search Web Application\nin Python and Flask.\nThroughout this course, you will not only gain a deep understanding of the inner workings of search engines but also sharpen your Python programming skills.\nAlso, In the Reverse Image Search Project, we're going to be using Deep Learning and Artificial Intelligence to search for similar images.\nWhether you're a college student who's trying to do a software project or whether you're an enthusiast trying to learn the inner workings of Search Engine and then build a fully functioning Search Engine project, then this course is for you.\nJoin me on this educational journey, and let's embark on the exciting adventure of building a search engine with Python together!",
      "target_audience": [
        "Beginner Programmers who want to learn how Web Search Works",
        "People who want to build Web Search Engine Application in Python",
        "People who want to build Image Search Engine and Reverse Image Search Engine in Python",
        "Those curious about Web Search Engine Internal Working Mechanism"
      ]
    },
    {
      "title": "Become a Software Development Engineer",
      "url": "https://www.udemy.com/course/become-a-software-engineer/",
      "bio": "Master C++ Data Structures: From Basic Arrays to Advanced Algorithmic Techniques.",
      "objectives": [
        "Acquire skills in C++, data structures, focusing on array operations, linked lists, trees, and graph representations.",
        "Understand and implement key algorithmic paradigms, including brute force, backtracking, and recursion for problem-solving.",
        "Master the essence of greedy algorithms, distinguishing scenarios for optimal local choices leading to global solutions.",
        "Unravel the logic of dynamic programming, learning techniques to break down complex problems into approachable sub-problems."
      ],
      "course_content": {
        "Fundamentals of Computer Science": [
          "Fundamentals of Computer Science"
        ],
        "Programming with C++": [
          "Introduction to C++",
          "C++ Operators",
          "C++ Conditionals",
          "C++ Loops",
          "C++ Jump Statement",
          "C++ Comments and Functions",
          "C++ Call by value & Reference",
          "C++ Recursion",
          "C++ Storage Classes",
          "C++ Arrays",
          "C++ Array to Function",
          "C++ Multidimensional Arrays",
          "C++ Pointers",
          "C++ References",
          "C++ Memory Management",
          "C++ OOPs",
          "C++ Constructor and Destructor",
          "C++ This Pointer, static, Structs & Enumeration",
          "C++ Friend Function",
          "C++ Math Functions",
          "C++ Inheritance, Aggregation & Polymorphism",
          "C++ Overloading and Overriding",
          "C++ Virtual Function",
          "C++ Abstraction",
          "C++ Interfaces",
          "C++ Namespaces",
          "C++ Strings",
          "C++ Exception Handling",
          "C++ try/catch",
          "C++ User-Defined Functions",
          "C++ Templates",
          "C++ Signal Handling",
          "C++ File & Stream",
          "C++ getline()",
          "Must Do it Questions"
        ],
        "Data Structures": [
          "Introduction to Arrays & Types of Array",
          "Various Operations on Arrays",
          "Largest Element in an Array",
          "Check if an Array is Sorted",
          "Second Largest Element in Array",
          "Reverse an Array",
          "Remove duplicates from a sorted array",
          "Left Rotate an Array by One & Left Rotate an Array by D places",
          "Move Zeros to End",
          "Introduction to Strings",
          "Reverse, Pangram, Case conversion",
          "Validation, Length",
          "Palindrome Check",
          "Overview of Pattern Searching",
          "Pattern Matching Algorithms:",
          "Rabin Karp Algorithm",
          "KMP Algorithm",
          "Rotations Check of two Strings",
          "Anagram",
          "Introduction to Linked List and Implementation",
          "Traversal, Insertion and Deletion",
          "Sorted Insertion in Linked List",
          "Reversal of Linked List (Iterative and Recursive)",
          "Stack Data Structure",
          "Array Implementation of Stack in C++",
          "Linked List Implementation of Stack in C++",
          "Stack Applications",
          "Queue Data Structure",
          "Application of Queue",
          "Implementation of Queue using Array",
          "Implementation of Queue using Linked List",
          "Tree Data Structure & Application of Tree",
          "Binary Tree & Tree Traversal",
          "Implementation of Inorder Traversal",
          "Implementation of Preorder Traversal",
          "Implementation of Postorder Traversal",
          "Height of Binary Tree, Print Nodes at K distance",
          "Iterative Inorder Traversal",
          "Iterative Preorder Traversal",
          "Binary Search Tree & Search in BST (Introduction)",
          "Insert, Deletion, Floor & Ceil in BST",
          "Self Balancing BST",
          "Direct Address Table, Hashing Functions & Collision Handling",
          "Chaining & Implementation of Chaining",
          "Open Addressing, Double Hashing",
          "Subarray with zero sum & given sum",
          "Longest subarray",
          "Count Distinct Elements & Frequencies of array elements",
          "Binary Heap Introduction & Implementation",
          "Binary Heap (Heapify and Extract)",
          "Binary Heap (Decrease Key, Delete and Build Heap)"
        ],
        "Algorithms": [
          "Getting Started with Algorithms",
          "Linear & Binary Search",
          "Bubble Sort",
          "Selection Sort",
          "Insertion Sort",
          "Quick Sort",
          "Merge Sort",
          "What are Greedy Algorithms",
          "Fractional Knapsack",
          "Job Sequencing Problem",
          "Huffman Coding",
          "Recursion Introduction",
          "Recursion Printing",
          "Sum of Natural Numbers using Recursion",
          "Palindrome Check using Recursion",
          "Sum of Digits Using Recursion",
          "Rope Cutting Problem",
          "Generate Subsets",
          "Tower of Hanoi",
          "Concepts of Backtracking",
          "Rat In a Maze",
          "N Queen Problem",
          "Sudoku Problem",
          "Introduction to Graphs",
          "What is BFS and its Applications",
          "Depth First Search Algorithm",
          "Detecting cycle in a Directed Graph",
          "Detecting cycle in a Undirected Graph",
          "Topological Sorting using Depth First Search",
          "Kahn’s algorithm for Topological Sorting",
          "Shortest Path in an Unweighted Graph",
          "Dijkstra's Algorithm",
          "Bellman Ford Algorithm",
          "Floyd Warshall Algorithm",
          "Kruskal and Prims Algo",
          "Articulation Point",
          "Maximal Flow Algorithm",
          "Introduction to Dynamic Programming, Memoization and Tabulation",
          "Longest Common Subsequence",
          "Longest Palindromic Subsequence",
          "Longest Increasing Subsequence Problem",
          "Longest Increasing Subsequence O(nlogn)",
          "Subset Sum Problem",
          "Minimum number of Coin to make a Change",
          "Number Of Ways To Make Coin Change",
          "Edit Distance Problem",
          "Matrix Chain Multiplication",
          "Palindrome Partitioning",
          "Optimal Strategy for a Game",
          "Maximum Cuts",
          "Minimum Jumps to reach at end",
          "0-1 knapsack problem",
          "Egg Dropping Puzzle",
          "Catalan Number"
        ],
        "Database Management System": [
          "Evolution of DBMS",
          "Entity Relationship Mode, ER Diagrams ER Diagrams Relationship, etc",
          "Keys & Foreign Key",
          "Database Normalization, Functional Dependency & Decomposition",
          "First & Second Normal Form",
          "Indexing in Database, Clustered Index, Non Clustered Index &Multi Level Indexing",
          "B and B+ Tree",
          "ACID Properties",
          "View Serializability & Conflict Serializability",
          "Recoverable Cascadeless and Strict Schedule",
          "Timestamp Ordering Protocol",
          "Two Phase Locking",
          "Database Management System"
        ],
        "Operating System": [
          "OS - Overview",
          "OS - Types",
          "OS - Services",
          "OS - Properties",
          "OS - Processes",
          "OS - Process Scheduling",
          "OS - Scheduling algorithms",
          "OS - Multi-threading",
          "OS - Memory Management",
          "OS - Virtual Memory",
          "OS - I/O Hardware",
          "OS - I/O Software",
          "OS - File System",
          "OS - Security",
          "OS - Linux",
          "Hashing",
          "Paging",
          "Indexing",
          "Segmentation",
          "Advanced Operating Systems"
        ]
      },
      "requirements": [
        "An understanding of basic C++ syntax and operations will be beneficial, though not mandatory.",
        "Familiarity with fundamental programming concepts such as variables, loops, and conditionals.",
        "If you're a complete beginner, don't be daunted! The course starts with foundational concepts, making it accessible and engaging even for those new to the domain."
      ],
      "description": "This course will teach you essential skills to become a software development engineer. You will cover fundamentals of computer science, data structures, algorithms, database management systems, and operating systems.\n\n\nThe course is divided into the following modules:\nFundamentals of Computer Science:\nThis module will introduce you to the basic concepts of computer science, such as data types, algorithms, and programming languages. You will also learn about the hardware and software components of a computer system.\n\n\nProgramming:\nThis module will teach you the basics of the C++ programming language, including variables, loops, functions, and classes. You will also learn about object-oriented programming and how to use C++ to develop software applications.\n\n\nData Structures:\nThis module will introduce you to the different types of data structures, such as arrays, lists, and trees. You will also learn how to implement these data structures in C++.\n\n\nAlgorithms:\nThis module will teach you about the different types of algorithms, such as sorting and searching algorithms. You will also learn how to analyze the efficiency of algorithms.\n\n\nDatabase Management Systems:\nThis module will introduce you to the different types of database systems, such as relational databases and NoSQL databases. You will also learn about the different operations that can be performed on databases, such as querying and updating data.\nOperating Systems:\nThis module will introduce you to the different components of an operating system, such as the kernel, memory management, and file system. You will also learn about the different types of operating systems, such as Windows, macOS, and Linux.\n\n\nIf you are interested in becoming a software development engineer, this course is a great place to start. It will give you the skills and knowledge you need to succeed in this challenging and rewarding field.\n\n\nHere are some of the benefits of taking this course:\nLearn from an experienced software development engineer with over 10 years of experience.\nGet hands-on experience with C++, data structures, algorithms, and other essential skills.\nComplete practical exercises and projects to test your knowledge.\nLearn at your own pace and from anywhere in the world.",
      "target_audience": [
        "This course is designed for beginners to advanced learners in computer science, aspiring software developers prepping for tech interviews, competitive programming enthusiasts, and tech professionals aiming to deepen their knowledge in data structures and C++."
      ]
    },
    {
      "title": "Data Structure with C++ : Zero to Hero",
      "url": "https://www.udemy.com/course/data-structure-with-c-plus-plus/",
      "bio": "Learn about Pointers , Arrays, Linked Lists, Stacks and Queues, Graph, Binary Trees, Heap & Priority Queue, Sorting etc.",
      "objectives": [
        "Apply features of c++ such as pointers, references, arrays, classes, templates, function overloading, virtual functions, exception handling etc.",
        "Understand the nuances of object oriented programming, e.g. abstraction, encapsulation, polymorphism, inheritance etc.",
        "Conceptualize the idea of basic data structures, viz. linked lists, stacks, queues, graphs, binary trees, heaps, binary search trees, AVL trees etc.",
        "Implement the basic as well as your own (more complex) data structures in c++",
        "Recognize various techniques of sorting a collection and develop them in c++",
        "Search for something in a collection",
        "Solve problems related to data structures using the tools and techniques of c++",
        "Pointers and References: Understanding the Core",
        "Pointers and References: passing agrument by value, pointer & reference",
        "Pointers and References: const pointer, const reference, cons function",
        "Arrays: Understanding the Core of Array and Why it is Important",
        "Arrays: Row Major and Column Major Representation of Array",
        "Linked Lists : Understanding the concepts of Linked list and Why we use linked list",
        "Linked Lists : How to Insert Element in a Linked List",
        "Linked Lists : How to Delete Element in a Linked List",
        "Linked Lists : How to Reversed a Linked List",
        "Linked Lists : Understanding Doubly Linked Lists with Live Coding",
        "Linked Lists : Understanding Circularly Linked Lists with Live Coding",
        "Linked Lists : Application of Linked Lists",
        "Stacks and Queues : Understanding Why and How we use Stacks and Queue",
        "Stacks : Implementation of Stack using Array",
        "Stacks : Implementation of Stack using Linked List",
        "Stacks : infix to postfix",
        "Stacks : postfix evaluation",
        "Queues : Queue using array",
        "Queues : Queue using linked list",
        "Graph: Why and How we use use Graph",
        "Graph : Adjacency Matrix and Adjacency List representations",
        "Graph : Reading a graph from a file",
        "Graph : Breadth First Search (BFS)",
        "Graph : Depth First Search (DFS)",
        "Binary Trees: Why, How and Where we use Binary Trees",
        "Binary Trees: Binary Tree Traversal",
        "Binary Trees: Implementation of Binary Tree",
        "Binary Trees: Binary Search Tree",
        "Binary Trees: Implementation of Binary Search Tree",
        "Binary Trees: Understanding Red Black Tree",
        "Binary Trees: Insertion in a Red Black Tree",
        "Binary Trees: Deletion from a Red Black Tree",
        "Understanding Heap",
        "Implementation of Heap Sort",
        "Understanding Priority Queue & Implementation",
        "Sorting : Selection Sort",
        "Sorting : Insertion Sort",
        "Sorting : Bubble Sort",
        "Sorting : Quick Sort",
        "Sorting : Merge Sort",
        "Sorting : Radix Sort",
        "Searching : Linear Search",
        "Searching : Binary Search",
        "Searching : Interpolation Search",
        "Hashing"
      ],
      "course_content": {
        "Introduction": [
          "Why Data Structure in C++ is important?",
          "What We are going to cover in the course?",
          "What you will Learn from the course?",
          "Pre-requisite to take the course?"
        ],
        "Pointers and References": [
          "Pointers References",
          "Constant Variable Function",
          "Passing Arg To Function"
        ],
        "Arrays": [
          "Introduction to Arrays",
          "Code : Introduction to arrays",
          "Row Major and Column Major Representation of Array",
          "Code: Row Major and Column Major Representation of Array"
        ],
        "Linked Lists": [
          "Introduction to Linked Lists",
          "Code: Structure of Linked List",
          "How to Insert Element in a Linked List",
          "Code: How to Insert Element in a Linked List",
          "How to Delete Element in a Linked List",
          "How to Reversed a Linked List",
          "Doubly Linked Lists",
          "Code: Doubly Linked List",
          "Circularly Linked Lists",
          "Code: Circularly Linked Lists",
          "Linked Lists Application"
        ],
        "Stacks and Queues": [
          "Stack Using Array",
          "Stack Using Linked List",
          "Infix To Postfix",
          "Postfix Evaluation",
          "Queue Using Array",
          "Queue Using Linked List"
        ],
        "Graph": [
          "Graph",
          "Reading Graph From File",
          "Breadth First Search (BFS)",
          "Depth First Search (DFS)"
        ],
        "Binary Trees": [
          "Introduction to Binary Tree",
          "Binary Tree Traversals",
          "Binary Tree Implementation",
          "Binary Search Tree",
          "Binary Search Tree Implementation",
          "Red Black Tree",
          "RedBlack Tree Insertion Part 1",
          "RedBlack Tree Insertion Part 2",
          "RedBlack Tree Deletion Part 1",
          "RedBlack Tree Deletion Part 2"
        ],
        "Heap & Priority Queue": [
          "Heap",
          "Heap Sort",
          "Priority Queue"
        ],
        "Sorting": [
          "Selection Sort",
          "Insertion Sort",
          "Bubble Sort",
          "Quick Sort",
          "Merge Sort",
          "Radix Sort"
        ],
        "Searching": [
          "Linear Search",
          "Binary Search",
          "Interpolation Search",
          "Hashing"
        ]
      },
      "requirements": [
        "Basic Understanding of C++ is a Good to Have",
        "Basic School Level Math will be helpful"
      ],
      "description": "Data Structure is one of the Cores of the Software Industry. That makes the difference between an Ordinary software Engineer and a Pro Software engineer. But According to a survey, 90% of Software engineers don't have a clear understanding of Data Structure and algorithm.\nthat's why we created this Data Structure with C++: Zero to Hero Course.\nHere we not only teach you about the Data Structure but we also teach you How to Think properly!\nthat is really important!\n\n\nWhat you will get?\n8 hours of HD video content\nCodes\nLive Coding and most importantly why we are doing that/\nPDF\nStudy Materials",
      "target_audience": [
        "Anyone Want to Learn Data Structure can take the course",
        "College & University Students"
      ]
    },
    {
      "title": "Design Patterns in Java Demystified: Creational",
      "url": "https://www.udemy.com/course/creational-design-patterns-in-java-demystified/",
      "bio": "A beginner-friendly creational design patterns masterclass",
      "objectives": [
        "Exactly how to implement all of the creational design patterns",
        "How to create objects the SOLID way",
        "How to write cleaner and more maintainable Java code",
        "Recognizing and understanding when to apply which creational design pattern",
        "Writing code that allows for the easy addition of new object types without modifying existing code",
        "How to write modular, loosely coupled code that is easy to extend"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Design Patterns",
          "Prerequisites and Code Exercise Files"
        ],
        "Factory Method": [
          "What is the Factory Method Pattern?",
          "The Factory Method Pattern Class Diagram",
          "Coding the Factory Method Pattern",
          "Coding Exercise: Factory Method"
        ],
        "Abstract Factory": [
          "What is the Abstract Factory Pattern?",
          "The Abstract Factory Class Diagram",
          "Coding the Abstract Factory Pattern",
          "Coding Exercise: Abstract Factory"
        ],
        "Builder": [
          "What is the Builder Pattern?",
          "The Builder Pattern Class Diagram",
          "Coding the Builder Pattern",
          "Coding Exercise: Builder"
        ],
        "Singleton": [
          "What is the Singleton Pattern?",
          "The Singleton Pattern Class Diagram",
          "Coding the Singleton Pattern",
          "Coding Exercise: Singleton"
        ],
        "Prototype": [
          "What is the Prototype Pattern?",
          "The Prototype Pattern Class Diagram",
          "Coding the Prototype Pattern",
          "Coding Exercise: Prototype"
        ],
        "Conclusion": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Basic proficiency in Java",
        "Basic understanding of object-oriented design principles"
      ],
      "description": "Are you eager to enhance your Java programming skills and create robust, flexible, and maintainable software? Welcome to \"Design Patterns in Java Demystified: Creational\" where we'll delve into the world of creational design patterns and demystify the process of creating powerful and efficient software architectures.\nYou'll explore a range of creational design patterns, including the Factory Method, Abstract Factory, Builder, Singleton, and Prototype patterns.\nBy the end of this course, you will have a solid foundation in the creational design patterns and their applications. You'll understand how to choose the appropriate pattern for a given scenario, and you'll be equipped with the skills to implement these patterns effectively in your Java projects.\nWhat sets this course apart is our unique teaching approach. We blend theory and practical implementation, guiding you through detailed explanations, code demonstrations, and hands-on exercises.\nHere's what you'll gain from enrolling in this course:\nMaster the fundamental concepts of creational design patterns in Java.\nLearn how to apply creational design patterns to solve real-world software engineering challenges.\nAcquire valuable problem-solving skills that will enhance your software development career.\nBuild confidence in writing cleaner, more maintainable, and scalable Java code.\nDon't miss this opportunity to unlock the secrets of creational design patterns in Java. Enroll now and become a proficient Java developer capable of building robust and flexible software architectures!",
      "target_audience": [
        "Software Engineers",
        "Software Developers",
        "Software Architects"
      ]
    },
    {
      "title": "Zero and One: The Fundamentals of Computer Systems",
      "url": "https://www.udemy.com/course/zero-and-one-the-computer-language-fundamentals/",
      "bio": "Understand various computer basic concepts like binary, ASCII, teraflop, hexadecimal, and encryption.",
      "objectives": [
        "Bits and Binary Systems",
        "The ASCII System",
        "Everyday Examples of Binary",
        "The Concept of Teraflop",
        "Hexadecimal System",
        "Disk Measurement",
        "Encryption and Its Applications",
        "Hash and Its Applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Measurement": [
          "Computer Measurement - part 1",
          "Computer Measurement - part 2"
        ],
        "Binary System": [
          "The ASCII Table",
          "Binary Numbers",
          "Everyday Examples"
        ],
        "The Hexadecimal System": [
          "The Hexadecimal System",
          "Hexadecimal Applications"
        ],
        "Encryption": [
          "What's Encryption?",
          "Applications of Encryption"
        ],
        "Hash Functions": [
          "What Are Hash Functions?",
          "The Applications of Hash Function"
        ]
      },
      "requirements": [
        "Willingness to learn",
        "Spare time"
      ],
      "description": "You have heard about bits and binary. You may have heard it in news or movies. It is interesting to learn about how computers think, read and write data. You should take this course if you want to understand the concept of basic computer language. This course improves your computer fundamentals understanding and computer basics.\nIn this course, we discuss computer basics, namely bits, binary and the foundation of computer language. We discuss how the binary system works. We also go through everyday examples of the binary system that you use on a daily basis.\nASCII is another topic that this course covers. You will see what it is and what happens when you interact with computers.\nAnother topic is teraflop that is regularly mentioned in the media. You will see what this means and you will learn about its development in the world.\nHexadecimal is another useful topic covered in this course. It is handy in various application. You will learn it in this course as well.\nEncryption and hash functions are also covered with examples and daily applications. These are very important security topics in computer systems.\nThere is a lot to learn, so, take this course and start learning.",
      "target_audience": [
        "Anyone interested in computer system fundamentals",
        "9 to 99 years old"
      ]
    },
    {
      "title": "Object Oriented C# MasterClass Part 1",
      "url": "https://www.udemy.com/course/object-oriented-csharp-masterclass-part-1/",
      "bio": "Object Oriented Development",
      "objectives": [
        "C# Programming",
        "Object-Oriented Programming",
        "Class Design",
        "Abstraction",
        "Encapsulation",
        "Inheritance",
        "Interfaces",
        "Polymorphism"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Required Software",
          "Solution and Folder Structure"
        ],
        "Classes": [
          "Defining Classes",
          "Defining Classes Client",
          "Constructors",
          "Constructors Client",
          "Methods",
          "Methods Client"
        ],
        "Abstraction": [
          "Class Separation 1",
          "Class Separation 2",
          "Class Separation 3",
          "Class Separation 4",
          "Class Separation Client",
          "Base Constructors 1",
          "Base Constructors 2",
          "Base Constructors Client",
          "Override",
          "Override Client"
        ],
        "Encapsulation": [
          "Encapsulate Fields",
          "Encapsulate Fields Client",
          "Getters Setters",
          "Getters Setters Client",
          "Validation",
          "Validation Client",
          "Encapsulate Logic",
          "Encapsulate Logic Client"
        ],
        "Inheritance": [
          "Single Level Inheritance",
          "Single Level Inheritance Client",
          "Multiple Level Inheritance",
          "Multiple Level Inheritance Client",
          "Hierarchical Inheritance",
          "Hierarchical Inheritance Client"
        ],
        "Interfaces": [
          "Implementing Interfaces",
          "Interface References (AS)",
          "Interface References (IS)",
          "Interfaces as Arguments",
          "Interfaces as Return Types",
          "Interface Arrays"
        ],
        "Polymorphism": [
          "Abstract Classes",
          "Abstract Classes Client"
        ],
        "Project: Bank Of DotNet": [
          "BankOfDotNet Class Diagram",
          "Adding the Bank of DotNet Project",
          "Account Class",
          "Overdraft Exception Class",
          "Checking Account Class",
          "Savings Account Class",
          "ITransferable Interface",
          "Customer Class",
          "Account Limit Exception Class",
          "Bank Class",
          "Customer Limit Exception Class",
          "Bank Client Part 1",
          "Bank Client Part 2",
          "Bank Client Part 3",
          "Bank Client Part 4",
          "Bank Client Debug"
        ]
      },
      "requirements": [
        "Basic programming knowledge",
        "Beginner Level C# Experience"
      ],
      "description": "Get Started with Object Oriented C# MasterClass Part 1!\nAre you a student or professional in the field of software engineering or maybe contemplating an educational or career move to the software engineering world? Have you been looking for a quick and easy way to get up and running with Object Oriented C# using .NET Core and don't want to go through an overwhelming amount of material just to get your environment setup and ready for building your own apps? Don't worry as THIS IS THE COURSE FOR YOU!\nIn my course, I will teach you how to get your environment setup for .NET Core and help you to gain a strong foundation in C# Object Oriented Programming quickly and through a step-by-step guided approach. I will be showing you all the necessary installation and setup needed for .NET Core and Visual Studio IDE.\nLearning Object-Oriented Programming (OOP) is an essential skill for any software developer. It provides a structured and efficient way of designing and organizing code, making it easier to maintain and scale applications. With C# as your language of choice, you'll have access to a powerful and versatile toolset within the .NET ecosystem.\nIn this comprehensive MasterClass, we will delve deep into the core principles of OOP, such as encapsulation, inheritance, and polymorphism. You'll discover how to create classes, define properties, and implement methods that unleash the full potential of C#. Through hands-on exercises and real-world examples, you will gain the confidence to tackle complex projects and design elegant solutions.\nMoreover, we will explore the benefits of using .NET Core, a cross-platform framework that enables you to build applications that run on Windows, macOS, and Linux. You'll learn how to set up your development environment to take advantage of .NET Core's performance and flexibility.\nBy the end of this MasterClass, you will be equipped with the knowledge and skills to craft sophisticated C# applications, opening doors to exciting job opportunities and advancements in your software engineering career. So don't wait any longer; let's embark on this journey together and become a C# OOP expert in no time!\nTake this course and feel proud of the fact that you will be one step closer towards the rewarding field of Software Engineering using .NET technologies!",
      "target_audience": [
        "Students",
        "Professionals",
        "Software Engineers"
      ]
    },
    {
      "title": "Kubernetes for Data Engineering: Hands on End to End Guide",
      "url": "https://www.udemy.com/course/kubernetes-for-data-engineering-hands-on-end-to-end-guide/",
      "bio": "Boost the efficiency of your Data Engineering Solutions by Deploying them on Kubernetes Cluster.",
      "objectives": [
        "Understand the core concepts of Kubernetes, including pods, services, deployments, and more. Learn how to set up and manage a Kubernetes cluster",
        "Gain practical experience in deploying and managing the Kubernetes Dashboard, a powerful tool for managing Kubernetes clusters through a user-friendly interface",
        "Learn how to deploy Apache Airflow in a Kubernetes environment. Understand how to schedule and monitor data pipelines efficiently using Airflow.",
        "Dive into the world of Directed Acyclic Graphs (DAGs) and learn how to create, schedule, and monitor them in an Airflow environment running on Kubernetes.",
        "Understand how to secure your Kubernetes cluster and monitor its performance. Learn about Kubernetes namespaces, RBAC, secrets, and network policies.",
        "Learn how to scale your data applications and ensure high availability within your Kubernetes cluster.",
        "Develop skills to troubleshoot common issues in Kubernetes and optimize the performance of your data pipelines."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What this course covers",
          "Kubernetes Architecture Explained",
          "KubeProxy and Container Runtime Deep Dive",
          "Kubernetes Additional Services",
          "Kubernetes Networking Fundamentals",
          "Kubernetes Core Concepts",
          "Kubernetes Behind The Scenes",
          "Getting Started with Tools for Kubernetes",
          "How Kubernetes can help you as an engineer"
        ],
        "Infrastructure Setup": [
          "Installing Docker Desktop",
          "Setting up, enabling and verifying Kubernetes",
          "Installing Cluster Managers on all Operating Systems",
          "Cluster Manager Commands",
          "Installing and Setting up Helm Charts"
        ],
        "Kubernetes Dashboard": [
          "Deploying Kubernetes Dashboard with Helm Charts",
          "Generating Tokens for Kubernetes Dashboard",
          "Working with Kubernetes Dashboard - End to End"
        ],
        "Deploying Apache Airflow to Kubernetes Cluster": [
          "Deploying Apache Airflow on Kubernetes",
          "Upgrading and Applying Changes to Apache Airflow using Helm Charts",
          "Creating and Deploying Airflow DAGS to Kubernetes Cluster",
          "Deploying and Working with Multiple DAGS on Kubernetes Cluster",
          "Optimising your Airflow DAG pipeline on Kubernetes"
        ],
        "Apache Spark Deployment on Kubernetes Cluster": [
          "Preparing Spark Jobs to run on Kubernetes",
          "Packaging your Spark Jobs on Kubernetes",
          "Deploying Spark Jobs to Kubernetes Cluster",
          "Fixing Potential Bugs during Spark Deployment on Kubernetes Cluster"
        ],
        "Next Steps (Resources and Documentations)": [
          "Course Resources (Source Code)",
          "Commands, Text and Documentation"
        ]
      },
      "requirements": [
        "Basic Programming Experience"
      ],
      "description": "This is a Kubernetes For Data Engineering practical hands-on course based on a lot of requests by students.\nAre you ready to elevate your data engineering skills to the next level?\nThis course has been meticulously designed to help you immerse yourself into the world of Kubernetes, the powerful tool revolutionizing the management of containerized applications. Join us in this comprehensive course where we explore Kubernetes and its practical applications in the realm of data engineering.\nThis course is suitable for all levels of experience from beginners to expert as it has been designed to equip you with essential knowledge and hands-on experience.\n\n\nHere are what you'll learn:\n\n\nUnderstanding Kubernetes: Explore the fundamentals of Kubernetes, including its architecture, core concepts, and additional services, to grasp its significance in modern data engineering.\nKubernetes Deployment: Learn how to set up Kubernetes on Docker, master kubectl for cluster management, and deploy the Kubernetes Dashboard for efficient cluster administration.\nExploring Kubernetes Components: Dive into Kubernetes components such as Kubelet, KubeProxy, container runtimes, and additional services to gain a comprehensive understanding of their roles in the Kubernetes ecosystem.\nKubernetes Networking Fundamentals: Delve into the networking fundamentals of Kubernetes to understand how containerized applications communicate within a Kubernetes cluster.\nHarnessing Kubernetes for Data Engineering: Discover how Kubernetes can empower you as a data engineer, streamlining processes, enhancing scalability, and facilitating efficient management of data workflows.\nSetting Up Kubernetes on Docker: Start from the basics as we guide you through setting up Kubernetes on Docker. Perfect for newcomers or those looking to refresh their understanding.\nMastering kubectl: Learn the ins and outs of kubectl, the command-line tool for managing Kubernetes clusters. Gain proficiency with essential commands and expert tips for seamless navigation.\nDeploying the Kubernetes Dashboard: Follow step-by-step instructions to deploy the Kubernetes Dashboard, an intuitive interface for efficiently managing Kubernetes clusters.\nRunning Apache Airflow with Helm Charts: Unlock the potential of Apache Airflow, a leading tool for orchestrating complex computational workflows, by running it on Kubernetes using Helm charts.\nDeploying Apache Spark on Kubernetes Cluster: Explore the deployment of Apache Spark, a powerful framework for distributed data processing, on Kubernetes. Learn how to harness the scalability and flexibility of Spark within a Kubernetes environment.\nIn this detailed course, you'll have easy access to each section of the course, ensuring a structured and efficient learning experience. From setting up Docker to optimizing Airflow DAGs and deploying Apache Spark on Kubernetes, we cover it all.\n\n\nJoin us on this journey to master Kubernetes for data engineering and take your skills to new heights.\nSign up now and accelerate your data mastery journey with us!\nReady to embark on this exciting adventure? Enroll now and let's immerse ourselves into Kubernetes for data engineers together!",
      "target_audience": [
        "Everybody interested in building scalable and efficient infrastructures"
      ]
    },
    {
      "title": "Data Serialization in C++ using FlatBuffers",
      "url": "https://www.udemy.com/course/data-serialization-in-cpp-using-flatbuffers/",
      "bio": "Learn how to save data or send it over the network in the most efficient way and as an alternative to gRPC's ProtoBuf",
      "objectives": [
        "How to use serialize data",
        "How to create FlatBuffers",
        "The difference between Binary and JSON files",
        "Writing efficient modern C++ code",
        "The FlatBuffers schema language in detail"
      ],
      "course_content": {
        "Introduction": [
          "Promo",
          "Welcome",
          "FAQ",
          "Course Overview"
        ],
        "Setup": [
          "Software Used",
          "Installing Visual Studio",
          "Installing CMake",
          "Installing Ninja",
          "Installing Git"
        ],
        "Project Setup": [
          "Hello, World!",
          "Coding Standards",
          "Dual Project Setup"
        ],
        "Serialization": [
          "What is Data Serialization?",
          "Simple Binary Serialization",
          "Problems with Custom Serialization"
        ],
        "FlatBuffers": [
          "Hello, Buffers!",
          "FlatBuffers Dependency",
          "FlatBuffers & CMake",
          "Saving Buffer Data",
          "Reading Buffer Data",
          "Root Type",
          "Enums",
          "Structs vs Tables",
          "Arrays",
          "Optionals",
          "Homework: Optionals",
          "Unions",
          "Object API",
          "Serialize to JSON",
          "Deserialize from JSON",
          "Schema Updates"
        ],
        "What now?": [
          "Bonus Materials"
        ]
      },
      "requirements": [
        "Basic C++ knowledge",
        "Basic understanding of OOP"
      ],
      "description": "Welcome\nIn this bite-sized course you will learn what data serialization is and how to do it properly. Data serialization is crucial for various tasks. It is essential for web developers who need to transmit data over the network. It is also important for desktop applications and games where the ability to save and retrieve settings or game saves is necessary.\nIn any of the above cases you would like to have a fast method of preparing data for being sent and also read back on the other side. So I will introduce binary serialization and its benefits compared to the more widespread JSON or XML alternatives.\nFlatBuffers\nThis library is developed by Google and is a really efficient mechanism for serializing data. It is one of the two libraries available that are really popular, and the second one is also developed by Google and is called ProtoBuf, which is used mostly for their other technology called gRPC. The FlatBuffers library is more lightweight and versatile, though, and you can use it for so much more than ProtoBuf.\nI will be teaching the FlatBuffers schema language for most of this course. But a lot of the ideas taken from FlatBuffers are also applicable to ProtoBuf and gRPC communication. You will also be able to compile FlatBuffers for other languages as well and not just for C++—so you can have a C++ server and an EcmaScript client, for example.\n\n\nThis course is primarily taught on the Windows OS, but the knowledge gained can easily translate into other operating systems as well.",
      "target_audience": [
        "C++ Programmers"
      ]
    },
    {
      "title": "Cloud Computing Interview Questions Preparation Course",
      "url": "https://www.udemy.com/course/cloud-computing-interview-questions/",
      "bio": "Learn everything about Cloud Computing. Save time in Interview preparation.",
      "objectives": [
        "Understand Cloud Computing Components and Models",
        "Learn important concepts of Cloud Computing",
        "Understand benefits of Cloud Computing",
        "Answer interview questions on Cloud Computing",
        "Cloud Computing offerings from Google, Amazon and Microsoft",
        "Demand higher salary or promotion based on the knowledge gained"
      ],
      "course_content": {
        "Why should you learn Cloud Computing?": [
          "Introduction",
          "Disclaimer"
        ],
        "Cloud Computing Questions Part 1": [
          "What are the benefits of Cloud Computing?",
          "What is On-demand computing in Cloud Computing?",
          "What are the different layers of Cloud computing?",
          "What resources are provided by Infrastructure as a Service (IAAS) provider?",
          "What are the different deployment models in Cloud computing?",
          "Cloud Computing Quiz - 1"
        ],
        "Cloud Computing Questions Part 2": [
          "What is the difference between Scalability and Elasticity?",
          "What is Software as a Service?",
          "What are the different types of Datacenters in Cloud computing?",
          "What are the important things for Security in a cloud?",
          "What are the main cost factors of cloud based data center?"
        ],
        "Cloud Computing Questions Part 3": [
          "How a traditional datacenter is different from a cloud environment?",
          "What are the requirements for implementing IaaS strategy in Cloud?",
          "Why companies prefer Cloud Computing over Client Server?",
          "What are the main characteristics of Cloud Computing architecture?",
          "What is Virtual Private Network (VPN)?"
        ],
        "Cloud Computing Questions Part 4": [
          "What are the large-scale databases available in Cloud?",
          "What are the important points to consider before selecting cloud computing?",
          "What is a System integrator in Cloud computing?",
          "What is Eucalyptus in a cloud environment?",
          "What is Auto-scaling in Cloud computing?"
        ],
        "Cloud Computing Questions Part 5": [
          "What is a Hypervisor in Cloud Computing?",
          "What is CaaS?",
          "What are the main components in Amazon Cloud?",
          "What are main components in Google Cloud?",
          "What are the major offerings of Microsoft Azure Cloud?"
        ],
        "Cloud Computing Questions Part 6": [
          "What are the reasons of popularity of Cloud Computing architecture?",
          "What are the Machine Learning options from Google Cloud?",
          "How will you optimize the Cloud Computing environment?",
          "Bonus Lecture: What next?"
        ]
      },
      "requirements": [
        "Software Development or Operations Experience",
        "Familiarity with Software Applications in an organization"
      ],
      "description": "Cloud Computing is the latest trend in Software Architecture. This course covers the important questions on Cloud Computing architecture that may be asked in technical interview for Software professionals.\nMany fortune 500 organizations use Cloud Computing. Therefore, Cloud Computing is also a very important topic in technical interview. This course contains basic to expert level Cloud Computing interview questions that an interviewer asks. Each question is accompanied with an answer so that you can prepare for job interview in short time.\nOften, these questions and concepts are used in our daily programming work. But these are most helpful when an Interviewer is trying to test your deep knowledge of Cloud Computing concepts.\nHow will this course help me?\nBy attending this course, you do not have to spend time searching the Internet for Cloud Computing interview questions. We have already compiled the list of the most popular and the latest Cloud Computing Interview questions.\nAre there answers in this course?\nYes, in this course each question is followed by an answer. So you can save time in interview preparation.\nWhat is the best way of viewing this course?\nYou have to just watch the course from beginning to end. Once you go through all the videos, try to answer the questions in your own words. Also mark the questions that you could not answer by yourself. Then, in second pass go through only the difficult questions. After going through this course 2-3 times, you will be well prepared to face a technical interview in Cloud Computing topic.\nWhat is the level of questions in this course?\nThis course contains questions that are good for a Fresher to an Architect level. The difficulty level of question varies in the course from a Fresher to an Experienced professional.\nWhat are the sample questions covered in this course?\nSample questions covered in this course are as follows:\nWhat are the benefits of Cloud Computing?\nWhat is On-demand computing in Cloud Computing?\nWhat are the different layers of Cloud computing?\nWhat resources are provided by Infrastructure as a Service (IAAS) provider?\nWhat is the benefit of Platform as a Service?\nWhat are the main advantages of PaaS?\nWhat is the main disadvantage of PaaS?\nWhat are the different deployment models in Cloud computing?\nWhat is the difference between Scalability and Elasticity?\nWhat is Software as a Service?\nWhat are the different types of Datacenters in Cloud computing?\nExplain the various modes of Software as a Service (SaaS) cloud environment?\nWhat are the important things to care about in Security in a cloud environment?\nWhy do we use API in cloud computing environment?\nWhat are the different areas of Security Management in cloud?\nWhat are the main cost factors of cloud based data center?\nHow can we measure the cloud-based services?\nHow a traditional datacenter is different from a cloud environment?\nHow will you optimize availability of your application in a Cloud environment?\nWhat are the requirements for implementing IaaS strategy in Cloud?\nWhat is the scenario in which public cloud is preferred over private cloud?\nDo you think Cloud Computing is a software application or a hardware service?\nWhy companies now prefer Cloud Computing architecture over Client Server Architecture?\nWhat are the main characteristics of Cloud Computing architecture?\nHow databases in Cloud computing are different from traditional databases?\nWhat is Virtual Private Network (VPN)?\nWhat are the main components of a VPN?\nHow will you secure the application data for transport in a cloud environment?\nWhat are the large-scale databases available in Cloud?\nWhat are the options for open source NoSQL database in a Cloud environment?\nWhat are the important points to consider before selecting cloud computing?\nWhat is a System integrator in Cloud computing?\nWhat is virtualization in cloud computing?\nWhat is Eucalyptus in a cloud environment?\nWhat are the main components of Eucalyptus cloud architecture?\nWhat is Auto-scaling in Cloud computing?\nWhat are the benefits of Utility Computing model?\nWhat is a Hypervisor in Cloud Computing?\nWhat are the different types of Hypervisor in Cloud Computing?\nWhy Type-1 Hypervisor has better performance than Type-2 Hypervisor?\nWhat is CaaS?\nHow is Cloud computing different from computing for mobile devices?\nWhy automation of deployment is very important in Cloud architecture?\nWhat are the main components in Amazon Cloud?\nWhat are main components in Google Cloud?\nWhat are the major offerings of Microsoft Azure Cloud?\nWhat are the reasons of popularity of Cloud Computing architecture?\nWhat are the Machine Learning options from Google Cloud?\nHow will you optimize the Cloud Computing environment?\nDo you think Regulations and Legal Compliance is an important aspect of Cloud Computing?",
      "target_audience": [
        "Software Engineer, Sr. Software Engineer, Member Technical Staff, Expert",
        "DevOps Engineer, Operations Engineer",
        "Software Architect, Development Manager, Director",
        "Anyone who wants to learn Cloud Computing architecture"
      ]
    },
    {
      "title": "Master Software Development Metrics & KPIs",
      "url": "https://www.udemy.com/course/software-development-metrics-learnit/",
      "bio": "Achieve Engineering Excellence and Clean Code Design by establishing KPIs and regularly measuring metrics",
      "objectives": [
        "Master essential software development metrics",
        "Learn to set and measure KPIs effectively",
        "Achieve clean and efficient code design",
        "Apply real-world metrics for optimal development",
        "Understand the impact of unit test coverage on code quality",
        "Integrate end-to-end test coverage into development processes",
        "Manage and reduce technical debt in software projects",
        "Optimize code review feedback loops for efficiency",
        "The importance of integration test coverage",
        "Measure and ensure unit test code coverage for reliability",
        "Interpret and act on tech debt index metrics",
        "Identify and address duplicate code issues",
        "Maintain code quality standards with rules compliance index",
        "Grasp Cyclomatic Complexity (CC) and its impact",
        "Address violations for code compliance",
        "Assess and improve commented code index",
        "Master effective code review practices",
        "Enhance unit test run success rate",
        "Utilize metrics for driving development best practices",
        "Understand how metrics contribute to engineering excellence"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Introduction to Metrics, KPIs & OKRs, Structure of Metrics Library": [
          "Metric, KPI & OKR",
          "RAG Status to Present KPI",
          "Introduction to Engineering Excellence Metrics & KPIs"
        ],
        "Engineering Excellence - Software Development: Metrics & KPIs": [
          "Development Metrics & KPIs: Tech Debt Ratio & Index, Cyclomatic Complexity",
          "Development Metrics & KPIs: Unit Test Related Metrics - Part 1",
          "Development Metrics & KPIs: Unit Test Related Metrics - Part 2",
          "Development Metrics & KPIs: Duplicate Code & Commented Code Index",
          "Development Metrics & KPIs: Code Review Feedback Loop Time & Code Reviews",
          "Development Metrics & KPIs: Rules Compliance Index (RCI) & Violations",
          "Development Metrics & KPIs: Integration Test Coverage & End-to-End Test Coverage"
        ],
        "Engineering Excellence - Build Metrics & KPIs": [
          "Build Metrics & KPIs: Time to Build, Build Verification Time & Pipeline Exec.",
          "Build Metrics & KPIs: Green & Broken Builds"
        ],
        "Engineering Excellence - Release Metrics & KPIs": [
          "Release Metrics & KPIs: Cycle Time & Release Candidates",
          "Release Metrics & KPIs: Release Candidates Metrics"
        ],
        "Quality Assurance - Defect Management: Metrics & KPIs": [
          "Defect Management Metrics & KPIs: Number of Open Defects & Defect Leakage",
          "Defect Management Metrics & KPIs: Defects per Severity/Priority/Env/Root cause",
          "Defect Management Metrics & KPIs: Defect Density, Non-Resolved Blockers & Others",
          "Defect Management Metrics & KPIs: Quality Debt Index, Bug Fixing Projection",
          "Defect Reopen, Defect Rejection, Open Defects Change Rate, Removal Efficiency",
          "Defect Resolution Time, Defect Age, Detection to Resolution Ratio"
        ],
        "Quality Assurance - Testing: Metrics & KPIs": [
          "Test execution coverage, Cost of Quality & Test Design Coverage",
          "Testing Metrics & KPIs: Regression Time, Verified Issues Rate, Pass Rate"
        ],
        "Quality Assurance - Test Automation: Metrics & KPIs": [
          "% of Poduct, Automation, System Issues & Execution Frequency",
          "Execution Time, Test Success Ratio & % of Results Analyzed",
          "Regression Effectiveness, Percentage of Automated Tests & Auto Savings"
        ],
        "Bonus section": [
          "Bonus lesson"
        ]
      },
      "requirements": [
        "No prerequisites are necessary to enroll in this course. It is suitable for individuals at all levels of expertise in software development, making it accessible to beginners and experienced professionals alike."
      ],
      "description": "Begin a transformative journey with my course: \"Master Software Development Metrics & KPIs.\" Dive deep into the world of engineering excellence and clean code design as you learn to set Key Performance Indicators (KPIs) and conduct regular metric assessments.\nCourse Highlights:\nUnlock Engineering Brilliance: Explore crucial metrics that drive software development success.\nEstablish KPI Mastery: Learn the art of setting Key Performance Indicators to measure your team's progress effectively.\nAchieve Code Purity: Delve into techniques for maintaining clean, efficient, and high-quality code design.\nReal-World Applications: Gain practical insights on applying metrics and KPIs to elevate your software development practices.\nExpert Guidance: Benefit from industry-proven strategies shared by seasoned professionals.\nWhat You'll Achieve: By the end of this course, you will:\nMaster the use of key metrics in software development.\nConfidently set and measure KPIs for continuous improvement.\nElevate your code design skills for optimal performance.\nImplement real-world strategies to achieve engineering excellence.\nWho Should Enroll:\nSoftware Developers\nEngineering Managers\nProject Managers\nTechnical Leads\nSoftware Architects\nQuality Assurance Professionals\nAnyone passionate about achieving excellence in software development\nTake the first step towards engineering greatness! Enroll now and unlock the secrets of mastering software development metrics and KPIs. Your journey to clean code design and engineering excellence starts here.",
      "target_audience": [
        "Software Developers",
        "Technical Leads",
        "Software Architects",
        "Project Managers",
        "Engineering Managers",
        "Quality Assurance Professionals",
        "Individuals passionate about software development",
        "All levels of expertise, from beginners to experienced professionals"
      ]
    },
    {
      "title": "Data Structures 2022 Clearly Explained Beginner to Advanced",
      "url": "https://www.udemy.com/course/data-structures-2022-clearly-explained-beginner-to-advanced/",
      "bio": "Includes Stacks, Queues, and Basic Trees to Red-Black Trees, AVL Trees, and Graphs coded in Java",
      "objectives": [
        "A Complete Understanding of Data Structures in Java",
        "Explaining through organized presentations and examples",
        "We will translate your understanding of Data Structures through the explanations and examples to Code",
        "Beginner and Advanced Data Structures will be taught"
      ],
      "course_content": {
        "Introduction": [
          "Quick Introduction Article!",
          "Introduction Video",
          "Github"
        ],
        "Arrays": [
          "Arrays Explained",
          "Arrays Coded",
          "2D Arrays Explained",
          "2D Arrays Coded",
          "Reverse Array",
          "Coding Exercise Solution: Reverse Array",
          "Test your knowledge of Arrays!"
        ],
        "Linked Lists": [
          "Singly Linked List Explained",
          "Singly Link List Coded",
          "Circularly Linked List Explained",
          "Circularly Linked List Coded",
          "Doubly Linked List Explained",
          "Doubly Linked List Coded",
          "Remove any element within a Doubly Linked List",
          "Assignment Solution #2",
          "Test your knowledge of Linked Lists!"
        ],
        "Stacks": [
          "Stack Explained",
          "Stack Coded",
          "Stack Tested",
          "Return the minimum element in a Stack",
          "Test your knowledge of the Stack!"
        ],
        "Queues": [
          "Queue Explained",
          "Queue Coded",
          "Deque Explained",
          "Deque Coded",
          "Implement a Queue using two Stacks!",
          "Test your knowledge of Queues!"
        ],
        "Trees": [
          "General Trees Explained",
          "General Tree Vocabulary Explained",
          "Binary Tree Explained",
          "Binary Search Tree Explained",
          "Binary Search Tree Example",
          "Tree Traversals Explained",
          "Binary Search Tree Coded - Insertion",
          "Binary Search Tree Coded - Deletion",
          "Binary Search Tree Coded - Height and Depth",
          "Tree Traversals Coded",
          "Binary Search Tree Test the Code!",
          "Test your knowledge of a Binary Search Tree!"
        ],
        "Heaps": [
          "Heaps Explained",
          "Heap Example",
          "Heaps Coded",
          "Heaps Tested",
          "Test your knowledge of Heaps!"
        ],
        "Balanceable Tree": [
          "Balanceable Tree Class Coded Introduction",
          "Balanceable Tree Class Coded Searching",
          "Balanceable Tree Class Coded Insertion",
          "Balanceable Tree Class Coded Rotation",
          "Balanceable Tree Class Coded Deletion"
        ],
        "Skip List": [
          "Skip List Explained",
          "Skip List Coded Introduction and Searching",
          "Skip List Coded Insertion",
          "Skip List Coded Deletion",
          "Skip List Test the Code!"
        ],
        "AVL Tree": [
          "AVL Tree Explained",
          "Draw this AVL Tree!",
          "Before you Code the AVL Tree",
          "AVL Tree Coded - Introduction",
          "AVL Tree Coded - Balanceable Methods",
          "AVL Tree Code Tested"
        ]
      },
      "requirements": [
        "Beginner Java programming experience needed. You will learn to code the Data Structures through Java."
      ],
      "description": "In this course we'll go over Data Structures for Java with explanations, examples, and then finally coding them.  We will start with simple Data Structures such as Stacks and Queues, and gradually move to more advanced topics such as Splay Trees and AVL Trees to Graphs.\nWe will help you from a beginner understanding of how these Data Structures work or if you have some knowledge already, this course will supplement and even give you better ideas through examples and a structured presentation.  If you need help with Interviews with more knowledge of Data Structures, this course will help.\nThere are some coding exercises which are derived from Interview Questions and help understanding how Data Structures can be used to solve problems.\nWe provide examples for Tree Data Structures as they can be tricky, for instance with AVL Trees.  Learning Balanceable Tree structures can be confusing, but we will alleviate any confusion with examples and organized presentations.\nHere is what you will be learning:\n\n\nArrays\n2D Arrays\nStacks\nQueues (Deques, Circular)\nLinked Lists (Singly, Doubly and Circularly)\nBinary Trees\nBinary Search Trees\nTree Traversals\nHeap (Min-Heap)\nSkip List\nAVL Trees\nSplay Trees\nRed-Black Trees\nGraphs\n\n\nBy the end of this  course, you will understand how these Data Structures work and will have running code to test them!",
      "target_audience": [
        "Beginner to Advanced developers who want a better understanding of Data Structures.",
        "College Students needing supplemental help or clear explanations of Data Structures.",
        "Software Engineers needing help with Interview Questions."
      ]
    },
    {
      "title": "Object Oriented Programming in Python. Sharpen your skills!",
      "url": "https://www.udemy.com/course/object-oriented-programming-adventure-in-python/",
      "bio": "Use OOP to refactor growing code and turn small scripts into big programs with this Software Engineering exercise.",
      "objectives": [
        "improve existing and future code by effectively refactoring code into small modules",
        "decouple your modules by using dependency injection",
        "make modules into plugins by using Polymorphism",
        "solve open-closed principle violations by using composition",
        "communicate your designs with UML class diagrams",
        "make confident design changes to split up scripts and refactor them into modules"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction"
        ],
        "Introduction": [
          "Introduction",
          "First version",
          "Tuples",
          "Pirate Union"
        ],
        "Classes and Objects": [
          "Classes and Objects",
          "UML"
        ],
        "Inheritance": [
          "Inheritance",
          "Refactoring"
        ],
        "Polymorphism": [
          "Extra Officer and Cannon Operator",
          "Importing JSON",
          "Add Cook and Deck Scrubber"
        ],
        "Composition": [
          "Composition over Inheritance",
          "Test with Test DataLoader"
        ],
        "Payroll": [
          "Payroll",
          "Missions",
          "Missions JSON"
        ],
        "Bank Exchange": [
          "Exchange Loot",
          "Currency real data",
          "The reward"
        ],
        "Conclusion": [
          "Q&A #1: How does the sum generator function work?",
          "Conclusion",
          "Bonus Section"
        ]
      },
      "requirements": [
        "Beginner experience in Python or another programming language",
        "You have worked with classes and objects before or enrolled in my “Object Oriented Programming with Python“ course on Udemy"
      ],
      "description": "This course teaches you how to take a single script and use OOP techniques to refactor it into modules in a playful way. You learn Inheritance, Composition and Polymorphism and use UML to design and communicate the system. The customer keeps requesting new features that forces you to think about the right tool in the right place. Will OOP allow you to refactor the code each time without risk of breaking things? Prepare for a big exercise in organizing code!\nTarget audience\n\nDevelopers who especially benefit from this course, are:\nbeginner programmers who want to practice OOP basics\ndevelopers who want to learn how to turn small scripts into logical code modules\ndevelopers who want to learn how to refactor code with minimal change and risk\n\n\nChallenges\n\nStudents that are interested in this course often know basic Python features but are not yet aware of the role of OOP in structuring your code. Perhaps they have seen classes, objects, inheritance and polymorphism but they don’t know where and when to apply these techniques. This can lead to the wrong technique in the wrong place, which makes OOP useless and inefficient. Because this course focuses on changing code, you learn WHEN, WHAT and more important, WHY you can apply a certain OOP technique and perhaps even more interesting, when a certain technique is NOT appropriate anymore and needs to be replaced with another one.\n\n\nWhat can you do after this course?\nimprove existing and future code by effectively refactoring code into small modules\ndecouple your modules by using dependency injection\nmake modules into plugins by using Polymorphism\nsolve open-closed principle violations by using composition\ncommunicate your designs with UML class diagrams\n\n\nTopics\nClasses and Objects: Class instantiation, self, data attributes, UML, methods\nInheritance: When to use and not use Inheritance\nUML: Use UML class diagrams to design and communicate your system\nPolymorphism: Open-closed principle, prevent switches (if/else)\nComposition: Replace inheritance with composition\nRefactoring: Split up scripts and make a system modular to achieve single responsibility\nJSON: Load data from a JSON file\nGenerator expressions and List comprehensions: Convert JSON data to object efficiently\n\n\nDuration\n\n1,5 hours video time, 3 hours including practicing exercises.\nThe teacher\n\nThis course is taught by Loek van den Ouweland, a senior software engineer with 25 years of professional experience. Loek is the creator of Wunderlist for windows, Microsoft To-do and Mahjong for Windows and loves to teach software engineering.",
      "target_audience": [
        "beginner programmers who want to practice OOP basics",
        "developers who want to learn how to turn small scripts into logical code modules",
        "developers who want to learn how to refactor code with minimal change and risk"
      ]
    },
    {
      "title": "Intro to advanced python topics",
      "url": "https://www.udemy.com/course/advanced-python-programming-part-1/",
      "bio": "Learn advanced python programming-level up your skills- know how things actually work",
      "objectives": [
        "In this course you will jump into an advanced concepts in python language",
        "You will learn all about iterable objects in python language",
        "You will learn all about iterators in python",
        "You will learn all about generators in python",
        "You will learn all about generator expressions",
        "You will learn all about context managers in python",
        "Each topic is supported with full explained examples"
      ],
      "course_content": {
        "Full section": [
          "advanced python 1 - python-iterators-and-iterable-objects",
          "advanced python 2 - python more about iterators iterables",
          "advanced python 3 - python recap video and more explanation",
          "advanced python 4 - python generators",
          "advanced python 5 - python generators in details with example",
          "advanced python 6 -python - recap about generators and generators objects",
          "advanced python 7 - python generator expressions",
          "advanced python 8 - python notes about generator expressions",
          "advanced python 9 - python context managers explanation",
          "advanced python 10 - python in depth explanation about context managers",
          "advanced python 11 - python - demonstration for context managers with examples",
          "advanced python 12 - python - final notes",
          "Test your information about the topics you have learnt"
        ]
      },
      "requirements": [
        "basic knowledge about python language"
      ],
      "description": "In this course you will learn advanced python language topics, which will level up your skills, also you will understand in depth how things actually work. You will understand how, when, why to use a certain thing in python. In the programming world, knowing the basics, is good, but not good enough to stand up against the giants in the fields, or to get your dream job. There are many basics courses on the internet, but very few are concerned about the advanced topics in programming, especially in python. In this course you will discover in depth how things actually work, what is going on under the hood, what are the alternatives way of doing things, why to use a certain methodology, is there a better way for solving a giving problem, what happens if you modify the pre built in things, can you optimize a solution for giving problem. In each lecture you will find a full explanation about a certain topic. The examples are either inside the explanation video or in a separate video, or both. In the end of each section you will find a video that summarize the things you have learnt to establish a good understanding\npython - language - advanced - topics - programming - scaling up - your knowledge",
      "target_audience": [
        "For anyone who wants to scale up the knowledge about python",
        "For anyone who wants to understand in details how things actually work in python"
      ]
    },
    {
      "title": "Placement Questions on Data Structure and Algorithm",
      "url": "https://www.udemy.com/course/placement-questions-on-data-structure-and-algorithm/",
      "bio": "Data structure and Algorithm Interview Questions and Answers on various topics",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Data Structures and Algorithms provides base for any software development. Good understanding of Data Structures and Algorithms helps to choose appropriate efficient solution for complex problems. Choosing of appropriate Data Structures and algorithms has large implications to software. Not only it makes easy to maintain the developed software, also it makes sure that resources are optimized.\nData Structure is a way of collecting and organizing data in such a way that we can perform operations on these data in an effective way. Data Structures is about rendering data elements in terms of some relationship, for better organization and storage.\nWhat is an Algorithm?\nAn algorithm is a set of commands that must be followed for a computer to perform calculations or other problem-solving operations.\nAccording to its formal definition, an algorithm is a finite set of instructions carried out in a specific order to perform a particular task.\nIt is not the entire program or code; it is simple logic to a problem represented as an informal description in the form of a flowchart or pseudocode.\nThe practice tests are designed in a way to test your understanding of Data Structures and Algorithms on following-\nAlgorithm Analysis\nLinked List\nStack\nQueue\nTree\nAdvanced Tree\nGraph\nSorting\nSearching and Hashing\nIt covers 300 interview questions with answers on various data structures and algorithms - Algorithm Analysis, Linked List, Stack, Queue, Trees, Advanced Trees, Graphs, Sorting, Searching and Hashing. More questions will be added to improve the knowledge and understanding of various Data Structures and Algorithms.\n\nIt will be good if you already know Data Structures and Algorithms or have gone through our courses on Data Structures and Algorithms.",
      "target_audience": [
        "Students/Software Engineers looking for jobs",
        "Undergraduate and Graduate Students",
        "Anyone want to have better understanding of Data Structures and Algorithms",
        "Whoever want to test their knowledge of Data Structures and Algorithms",
        "Computer Science students having Data Structures as part of their curriculum",
        "Senior Engineers/Manager who want to take better interview on algorithms"
      ]
    },
    {
      "title": "Generative Art on Blockchains",
      "url": "https://www.udemy.com/course/artonblockchain/",
      "bio": "Become A Generative Artist by Publishing Your Art on the Ethereum & Polygon Blockchains. Master P5js, Solidity, & More!",
      "objectives": [
        "Build Generative Art on the Polygon Blockchain.",
        "Become Proficient In Generative Art Programming with Hands-On Projects.",
        "Understand The Development Functions Of Polygon Blockchain.",
        "Understand How To Use Generative Art with Blockchains.",
        "Be Able To Comprehend The Structure Of P5js Code."
      ],
      "course_content": {
        "JavaScript - P5js": [
          "Setup Your Computer",
          "Get Started - Your First Artwork",
          "Smart Contract - NFT Minting",
          "optional - Quick Recap of What We've Built so Far",
          "Publishing to Polygon Mainnet - Solidity Smart Contract & NFT",
          "Website (Free) - ReactJS + IPFS + Firebase Hosting",
          "OpenSea - Sell NFTs",
          "Animations - Export GIFs"
        ],
        "Gas-Free dApp": [
          "Gas Free dApp - EIP-2771 - Meta Transactions - Part 1",
          "Gas Free dApp - EIP-2771 - Meta Transactions - Part 2",
          "Gas Free dApp - EIP-2771 - Meta Transactions - Part 3",
          "Gas Free dApp - EIP-2771 - Meta Transactions - Part 4",
          "Gas Free dApp - EIP-2771 - Meta Transactions - Part 5"
        ],
        "Python - Blender": [
          "Introduction & Setup"
        ]
      },
      "requirements": [
        "You Need A Computer With Linux, MacOS Or Windows.",
        "A Basic Understanding Of Web-Technologies.",
        "Knowledge Of A Programming Language Is Beneficial (Integers, Booleans, Strings, Etc.) Though Not Required."
      ],
      "description": "Welcome to the Generative Art on Blockchains Course. The only course you'll need to become a Generative Artist on any blockchain.\n\nAt 3+ hours, this Generative Art on Blockchains Course is a comprehensive course.\n\nEven if you have zero or limited programming experience, this course will take you from beginner to Generative Artist.\n\n\nHere's why:\n\nThe course has been updated for 2021, so you'll be learning with all of the latest tools.\n\nThe course doesn't cut corners. You'll learn by building real-world projects in our practical labs.\n\nYou'll save yourself over $10,000. Yet, get access to the same materials as in-person bootcamps.\n\nWe'll take you step-by-step through engaging video tutorials and teach you everything you need to know to succeed as a Generative Artist on the Blockchain.\n\nBy the end of this course, you will be fluently creating generative art, and you'll be so good that you can get a job or use your skills professionally.\n\nYou'll also build a portfolio of projects that you can show off to any potential employer.\n\nWho this course is for:\nIndividuals Who Want To Benefit From One Of The Most In-Demand Skills.\nTechnologists Who Want To Use Code to Create Art.\nFreelancers Who Want To Earn Money Creating Generative Art.\nArtists Who Want To Build Ethereum Blockchain NFTs Using Solidity.\nProfessionals Who Want To Add 'Generative Artist' To Their Resume.",
      "target_audience": [
        "Beginning Blockchain Developers.",
        "Artists who want to mint in NFTs."
      ]
    },
    {
      "title": "How to create Telegram bots with Python. No-Nonsense Guide",
      "url": "https://www.udemy.com/course/the-ultimate-guide-about-creating-telegram-bots-with-python/",
      "bio": "Step by step discovering of Bot API, common patterns and a lot of practice. Telegram promocode - TELEGRAMPROMOJUNE",
      "objectives": [
        "Create telegram bots any complexity",
        "Deploy bot to VPS"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting up Telegram bot": [
          "Create bot",
          "Discover bot settings",
          "Time to check what you've learned",
          "Bot limitations",
          "Difference between WebHook and Polling",
          "Time to check your knowledges",
          "Bot Documentation",
          "Check bot types and methods"
        ],
        "Build first simple bot": [
          "Echo bot via raw api",
          "Time to check your knowledges"
        ],
        "Dive into bot features": [
          "Introduction to bot libraries",
          "Test message_handlers and filters",
          "Formatting options",
          "Discovering KeyabordButton",
          "Discovering InlineKeyboardButton",
          "ForceReply",
          "ChatAction",
          "DeepLinking",
          "Check new knowledges"
        ],
        "Advanced features": [
          "Updating messages",
          "InlineQuery",
          "Conversation handler",
          "Creating gallery (pagination)",
          "Test your knowledges"
        ],
        "Real World Application": [
          "Technical task",
          "Generate access token",
          "Create database",
          "Creating the bot, part 1",
          "Creating the bot, part 2 (database api)",
          "Check hometask",
          "Creating the bot, part 3 (links processing)",
          "Create the bot, part 4 (process 'top' requests)",
          "Creating the bot, part 5 (crone updater)"
        ],
        "Deployment": [
          "Save code to GitHub",
          "Different hostings",
          "Deploy to VPS"
        ],
        "Bonus you can't deny": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "basic python knowledges",
        "installing libs via pip"
      ],
      "description": "In this course, you will go from creating a bot, discovering all possible settings to exposing all power of Bot API and creating a real-world application. The course presents basic and advanced components of bots and has a lot of quizzes. His main feature that it is based not only on theory but also on questions from the beginner's bot developers.",
      "target_audience": [
        "Anyone wants to create smart bots"
      ]
    },
    {
      "title": "Learn to Code in 1 Hour with Python: Coding Basics Hands-On",
      "url": "https://www.udemy.com/course/learn-to-code-in-1-hour-with-python-coding-basics-hands-on/",
      "bio": "Master Python Quickly: Time-Optimized for Busy Professionals - Acquire Programming Skills And Grasp Coding Fundamentals",
      "objectives": [
        "Write Python Programs with Confidence: Set up your Python environment, understand syntax, and write your first program using foundational concepts",
        "Master Core Programming Concepts: Work with variables, data types, loops, conditional statements, and operators to build problem-solving skills",
        "Explore Object-Oriented Programming: Learn to create and manage classes, objects, and methods for structured and reusable code",
        "Work with Essential Data Structures: Use lists, dictionaries, and tuples to efficiently store, access, and manipulate data",
        "Develop Logical Thinking: Practice writing conditional and iterative logic to solve practical programming challenges",
        "Build a Strong Programming Foundation: Acquire skills that will prepare you for tackling advanced Python topics and real-world projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install Python",
          "Install PyCharm",
          "Your First Program"
        ],
        "Core Programming Concepts": [
          "Variables and Data Types",
          "Short Intermission",
          "Arithmetic Operations",
          "Installing and Importing Modules",
          "Formatted Strings",
          "Conditional Statements",
          "Comments",
          "Data Structures",
          "Slicing",
          "Loops",
          "Functions and Classes"
        ],
        "Case Study": [
          "Case Study"
        ],
        "Outro": [
          "Congratulations!",
          "Bonus Lecture - Courses Links"
        ]
      },
      "requirements": [
        "There are no prerequisites for this course - requiring only a computer, internet access, and a willingness to learn"
      ],
      "description": "Jumpstart Your Coding Journey in Just 1 Hour with Python!\nHave you ever wanted to learn coding but felt overwhelmed by where to start? \"Learn to Code in 1 Hour with Python: Coding Basics Hands-On\" is the ultimate beginner-friendly course that makes programming accessible and achievable for everyone. Whether you're completely new to coding or looking for a fast refresher, this course is designed to equip you with the essentials quickly and effectively.\n\n\nWhy Enroll in This Course?\nFast and Focused Learning: Master the basics of Python programming with clear, concise, and engaging lessons.\n\n\nPerfect for Beginners: No prior coding knowledge? No problem! Start with the absolute fundamentals in an easy-to-follow format.\n\n\nHands-On Experience: Write real Python code from day one with interactive exercises and practical examples.\n\n\nFuture-Ready Skills: Build a solid foundation to tackle more advanced Python topics and real-world projects.\n\n\nWhat You'll Learn:\nGetting Started: Set up Python and your coding environment step-by-step.\nBasic Python Syntax: Write your first program and learn the essentials of Python's structure.\nCore Programming Concepts: Work with variables, loops, conditionals, and operators to solve problems.\nIntroduction to Data Structures: Understand and use lists, dictionaries, sets, and tuples.\nLogical Thinking: Develop problem-solving skills for coding challenges.\n\n\nWho Should Take This Course?\nAbsolute beginners ready to explore coding with Python.\nBusy professionals looking for a fast, hands-on introduction to programming.\nAnyone curious about programming and eager to learn in a supportive, beginner-friendly environment.\n\n\nStart Coding Today\nDon’t wait any longer to take the first step in your programming journey. Enroll now, and in just one hour, you’ll be writing Python code and building the foundation for a future in tech!",
      "target_audience": [
        "This course is ideal for beginners and busy professionals seeking to quickly learn Python and coding basics hands-on"
      ]
    },
    {
      "title": "Docker Super Essential Crash Course",
      "url": "https://www.udemy.com/course/docker-super-essential-crash-course/",
      "bio": "This is a quick course on how to use Docker's main features.",
      "objectives": [
        "Install Docker",
        "Basic and Essential Fundamentals of Docker Containers",
        "Manage Docker Images",
        "Create, Run and Manage Docker Containers"
      ],
      "course_content": {
        "Docker Essentials": [
          "Important",
          "Essential Docker Commands - part 1",
          "Essential Docker Commands - part 2",
          "Docker Reference Guide",
          "Congratulations"
        ]
      },
      "requirements": [
        "Basic knowledge of Linux desirable"
      ],
      "description": "This is a short course on using Docker.\nIn a Docker Bootcamp, learn the theory and practice of this innovative technology.\n\n\nDocker is a software platform that allows you to quickly build, test, and deploy applications. Docker creates software packages in standardized units called containers that have everything the software needs to run, including libraries, system tools, code, and runtime. By using Docker, you can quickly deploy and scale applications in any environment and be confident that your code will run.\n\n\nContainers simplify the development and delivery of distributed applications.\nThe use of Containers is possible thanks to the process isolation and virtualization capabilities built into the Linux kernel. These tools, such as control groups to allocate resources to processes and namespaces to restrict access or visibility of a process to other people or areas of the system, allow multiple application components to share the resources of a single instance of the system. Operating host in the same way as a hypervisor allows multiple virtual machines to share the CPU, memory, and other resources of a single hardware server.\n\n\nIn this training you will learn the fundamentals of:\n- Docker;\n- Containers;\n- Docker image;\n- Docker Hub;\n- Docker Compose;\n- Kubernetes;\nAnd you will learn with practical classes:\n- Install Docker;\n- Discover the version of Docker installed;\n- Download Docker Images;\n- Deletion of Docker Images;\n- List, delete and create Containers;\n- Run applications in Containers;\n- Inspect Containers;\n- Check Container statistics;\n- Check the Container log;",
      "target_audience": [
        "Software Developers",
        "DevOps Engineers",
        "Solution Architects",
        "Data Scientists",
        "Data Engineers",
        "IT professionals working with continuous integration and continuous delivery (CI/CD)"
      ]
    },
    {
      "title": "Modern Design Patterns with Java EE 8",
      "url": "https://www.udemy.com/course/modern-java-ee-8-design-patterns-gang-of-four/",
      "bio": "Your concise guide to implementing popular design patterns with Java EE 8",
      "objectives": [
        "Implement the Singleton Pattern with Java EE APIs",
        "Implement the Observer Pattern with Java EE APIs",
        "Implement the Abstract Factory Pattern with Java EE APIs",
        "Implement the Decorator Pattern with Java EE APIs",
        "Implement the Factory Method Patternrn with Java EE APIs",
        "Understand the concepts behind design pattern implementation",
        "Know when to use which pattern",
        "Know how to use various Java EE APIs to achieve specific results"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and course overview",
          "A note on course structure"
        ],
        "The Singleton Pattern": [
          "Let's create the singleton branch",
          "Introduction",
          "Singleton with EJB",
          "Singleton with EJB",
          "Singleton with EJB",
          "Singleton with EJB",
          "Singleton with EJB",
          "Singleton with EJB",
          "Singleton with EJB",
          "Moment of truth",
          "Moment of truth",
          "Recap",
          "Singleton with CDI",
          "Singleton with CDI",
          "Singleton with CDI",
          "Moment of truth",
          "Recap"
        ],
        "The Observer Pattern": [
          "Git branch setup",
          "Introduction",
          "Observer with Events",
          "Observer with Events",
          "Observer with Events",
          "Observer with Events",
          "Moment of truth",
          "Observer with AsyncEvents",
          "Observer with AsyncEvents",
          "Observer with AsyncEvents",
          "Moment of truth",
          "Recap",
          "Git commit"
        ],
        "Abstract Factory Pattern": [
          "Git branch setup",
          "Abstract Factory Pattern with CDI",
          "Abstract Factory Pattern with CDI",
          "Abstract Factory Pattern with CDI",
          "Abstract Factory Pattern with CDI",
          "Moment of truth",
          "Recap",
          "Git commit"
        ],
        "The Decorator Pattern": [
          "Git branch setup",
          "The Decorator Pattern with CDI",
          "The Decorator Pattern with CDI",
          "The Decorator Pattern with CDI",
          "Moment of truth",
          "Recap",
          "Git commit and branch setup"
        ],
        "The Factory Method Pattern": [
          "Introduction",
          "The factory method pattern with CDI Producers",
          "The factory method pattern with CDI Producers",
          "The factory method pattern with CDI Producers",
          "Moment of truth",
          "Moment of truth",
          "Git commit"
        ],
        "Other patterns": [
          "The Facade Pattern",
          "The Facade Pattern",
          "The Object Pool pattern",
          "The proxy pattern",
          "Finally - end of the beginning",
          "Don't stop here - Go on and #BeAble"
        ],
        "A Quick Overview of Design Patterns": [
          "What are design patterns?",
          "What are design patterns?",
          "The Singleton pattern",
          "The Observer pattern",
          "The Abstract Factory pattern",
          "The Decorator pattern",
          "The Factory Method pattern",
          "The Facade Pattern",
          "The Object Pool pattern",
          "The Proxy Pattern",
          "What is Jakarta EE?"
        ],
        "Project Setup": [
          "Java 8",
          "NetBeans",
          "Use of other IDEs",
          "Introduction to Java EE 8",
          "Glassfish 5 App server",
          "what is an Application Server?",
          "Adding Glassfish 5 to NetBeans IDE",
          "GIT SCM",
          "Let's create the project",
          "Upgrading Project to Java EE 8",
          "Initializing Git",
          "Initial Git Commit"
        ]
      },
      "requirements": [
        "Java 8 Development Environment",
        "NetBeans or IntelliJ IDE",
        "Glassfish application server",
        "GIT SCM",
        "Fair knowledge of the Java Programming language",
        "A fair basic understanding of Java EE programming concepts"
      ],
      "description": "Patterns! Patterns!! Patterns!!!\nDesign patterns are a very import concept in modern software development. There are a number of very popular patterns that have been tried and tested over the years. The Gang of Four (GoF) design patterns especially, have stood the test of time. This course aims at teaching you how to implement the most popular of the GoF design patterns using nothing but the Java EE standards API.\nYou will learn how to implement the\nSingleton Pattern\n\nObserver Pattern\n\nAbstract Factory Pattern\n\nDecorator Pattern\n\nFactory Method Pattern\nAs well as gain a fair idea of how the Java EE platform itself implements the\nFaçade Pattern\n\nObject Pool Pattern\n\nProxy Pattern\nThis course is packed with code samples and in-depth explanations of the use of all the Java EE API constructs.\nSo you've ever desired to be able to incorporate design patterns into your project, or get a fair idea of how to realize them using the pure Java EE APIs without any third party libraries, then enroll in this course and be on your way to design pattern mastery with Java EE 8!\nSignup now and #beAble to implement modern design patterns with Java EE 8!\nSee you in class.",
      "target_audience": [
        "Java developers who need to implement design patterns",
        "Java developers who want to explore the power of Java EE",
        "Java EE developers who need to understand how to use the Java EE APIs",
        "Java developers seeking to explore Java EE",
        "Application developers seeking to improve application design with design patters"
      ]
    },
    {
      "title": "Advanced Algorithms and Data Structures in Python",
      "url": "https://www.udemy.com/course/advanced-algorithms-python/",
      "bio": "Fenwick trees, Caches, Splay Trees, Prefix Trees (Tries), Substring-Search Algorithms and Travelling Salesman Problem",
      "objectives": [
        "Have a good grasp of algorithmic thinking",
        "Be able to develop your own algorithms",
        "Be able to detect and correct inefficient code snippets",
        "Understand Fenwick trees",
        "Understand caches (LRU caches and Splay Trees)",
        "Understand tries and ternary search trees",
        "Understand substring search algorithms (Rabin-Karp method, KMP algorithm and Z algorithm)",
        "Understand the Hamiltonian cycle problem (and travelling salesman problem)",
        "Understand Eulerian cycle problem"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fenwick Trees (Binary Indexed Trees)": [
          "What are Fenwick trees?",
          "Fenwick trees theory - tree structure",
          "Fenwick trees theory - update",
          "Fenwick trees implementation I",
          "Fenwick trees implementation II",
          "Fenwick Trees Quiz"
        ],
        "LRU Caches": [
          "Why to use cache?",
          "LRU cache illustration",
          "LRU cache implementation I",
          "LRU cache implementation II",
          "LRU cache implementation III",
          "Caches Quiz"
        ],
        "Splay Tree Data Structure": [
          "What are splay trees?",
          "Splay tree introduction - example",
          "Splay trees implementation I",
          "Splay trees implementation II",
          "Splay trees implementation III",
          "Splay trees application",
          "Splay Trees Quiz"
        ],
        "B-Trees": [
          "What is external memory?",
          "Disk access times",
          "What are B-trees?",
          "B-tree introduction - insertion",
          "B-tree introduction - deletion",
          "B-tree variants and file systems",
          "B-Trees Quiz"
        ],
        "Trie Data Structures (Prefix Trees)": [
          "What are tries (prefix trees)?",
          "Prefix tree introduction - insertion and searching",
          "Prefix tree introduction - sorting",
          "Prefix tree introduction - autocomplete",
          "Prefix tree introduction - associative arrays",
          "Tries data structure implementation I",
          "Tries data structure implementation II",
          "Tries data structure implementation III",
          "Trie data structures as associative arrays",
          "Hashing based data structures and tries",
          "Applications of trie data structures",
          "Tries Quiz"
        ],
        "Interview Questions - IP Routing with Tries": [
          "Networking and the longest common prefix problem",
          "Longest common prefix implementation"
        ],
        "Ternary Search Trees": [
          "What are ternary search trees?",
          "Ternary search tree visualization",
          "Ternary search tree implementation I",
          "Recursion and stack memory visualization",
          "Ternary search tree implementation II",
          "Ternary search tree implementation III",
          "Ternary Search Trees Quiz"
        ],
        "Interview Questions - Boggle Game": [
          "What is boggle and how to solve it?",
          "Boggle game with ternary search tree implementation I",
          "Boggle game with ternary search tree implementation II",
          "Boggle game with ternary search tree implementation III"
        ],
        "Substring Search Algorithms": [
          "Brute-force search introduction",
          "Brute-force substring search algorithm implementation",
          "Naive Substring Search Quiz",
          "Rabin-Karp algorithm introduction",
          "Rabin-Karp algorithm implementation",
          "Rabin-Karp Substring Search Quiz",
          "Knuth-Morris-Pratt algorithm introduction",
          "Constructing the partial match table - visualization",
          "Knuth-Morris-Pratt algorithm implementation",
          "Knuth-Morris-Pratt Algorithm Quiz",
          "Z algorithm introduction",
          "Z algorithm illustration",
          "Z algorithm implementation",
          "Z Algorithm Quiz",
          "Substring search algorithms comparison",
          "Applications of substring search"
        ]
      },
      "requirements": [
        "Python basics",
        "Some theoretical background (big O notation )"
      ],
      "description": "This course is for those who are interested in computer science and want to implement the algorithms and given data structures in Python. In every chapter you will learn about the theory of a given data structure or algorithm and then you will implement them from scratch.\nChapter 1: Binary Indexed Trees (Fenwick Trees)\ntheory behind the binary indexed tree or Fenwick tree data structure\nhow to use this data structure in computer vision and artificial intelligence\nimplementation in Python\nChapter 2: LRU Caches\nwhat are caches and why are they so important\nhow to use doubly linked lists to implement caches\ntheory behind LRU caches\nimplementation in Python\nChapter 3: Splay Trees\nwhat are splay trees\nhow to achieve caches with splay trees\nChapter 4: B-Trees\nexternal memory and internal memory (RAM)\ndata structures for the external memory\ntrees with multiple children and multiple keys\nwhat are B-tree data structures?\nChapter 5: Prefix Trees (Tries)\nwhat are tries or prefix trees\nreal world applications of tries\nautocomplete feature of tries\nsorting with tries\nIP routing\nChapter 6: Ternary Search Trees\nwhat are ternary search trees\nboggle game with tries\nChapter 7: Substring Search Algorithms\nwhat are substring search algorithms and why are they important in real world softwares\nbrute-force substring search algorithm\nhashing and Rabin-Karp method\nKnuth-Morris-Pratt substring search algorithm\nZ substring search algorithm (Z algorithm)\nimplementations in Python\nChapter 8: Topological Ordering\nwhat is topological ordering (topological sort)?\ntopological ordering implementation with depth-first search\nChapter 9: Cycle Detection\nhow to detect cycles in graphs?\nChapter 10: Strongly Connected Components (Tarjan's Algorithm)\nwhat are strongly connected components?\nTarjan's algorithm with depth-first search\nChapter 11: Hamiltonian cycles (Travelling Salesman Problem)\nHamiltonian cycles in graphs\nwhat is the travelling salesman problem?\nhow to use backtracking to solve the problem\nmeta-heuristic approaches to boost algorithms\nChapter 12: Eulerian Cycles (Chinese Postman Problem)\nEulerian cycles in graphs\nwhat is the chinese postman problem?\nThanks for joining my course, let's get started!",
      "target_audience": [
        "This course is suited for anyone who has some basic knowledge in Python and interested in algorithms and data structures"
      ]
    },
    {
      "title": "Advanced Java Challenge - Interview Practice Tests",
      "url": "https://www.udemy.com/course/advanced-java-challenge-interview-practice-tests/",
      "bio": "Prepare for your Java Interview with 100+ questions. Practice Generics, Streams, Recursion, Memory Management and more",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the most comprehensive online practice experience to elevate your Java skills and become a true Expert in Java.\nThis Course is for You If:\nYou are preparing for a Mid-Level / Senior Java Developer Job Interview\nYou want to practice Java and take your skills to an Advanced / Expert level.\nWhy Practice Java?\nJava is one of the most popular and widely used programming languages.\nIt is also the language of choice in many top tech companies, such as Google, Amazon, Netflix, and others.\nHowever, many Java developers, even those with several years of experience, have knowledge gaps and often struggle during Job Interviews.\nHow Can This Couse Help Me?\nThere's no better way to learn than practice!\nSo in this course, containing 100+ questions, you will practice many intermediate & advanced Java topics:\nJava Generics\nObject Oriented Programming\nFunctional Programming & Streams\nJVM Memory Management & Garbage Collection\nRecursion and Tree Traversal using Java\nJava Collection Framework and Data Structures\nAnd more\nThis course is divided into 6 Java Challenge Tests. After completing each test, you will:\nGet instant feedback to identify your weak areas\nFill in your knowledge gaps\nFollow additional resources to solidify your learning\nBy the End of the Course\nYou will:\nBe able to apply everything you've learned in your daily work with confidence\nSucceed at an upcoming Java knowledge test or in-person interview\nBecome a better Java Developer and take full advantage of the Java programming language and the JVM\nTypes of Java Interview Questions\nAs a Java Developer, you may find Java questions in different interview formats, including:\nOnline Java Knowledge-Based Assessments - Those timed and automatically graded tests have been increasingly common to eliminate weaker candidates and allow only a small number of Java Engineers to pass to the next round. However, don't be fooled. The questions in such Java assessments will challenge even the most experienced Java Developers, and that is why preparing in advance is an absolute must.\nOnline / In-Person Interview - Your knowledge of Java can be assessed during an in-person interview, either directly through open-ended questions or indirectly by watching you solve a seemingly easy coding question in real-time. Unsuspecting candidates will never know how well they perform and sometimes do not even know that their Java skills are being assessed. But showing you have strong practical knowledge of Java will give you a competitive edge over any other candidate.\nTake Home Java Projects - Many hiring managers understand that just performing well at a Job Interview doesn't guarantee that the candidate has good practical skills. So frequently, companies include a take-home project as part of their multi-round interview process. If you are asked to do such a project, it's the perfect place to demonstrate the use of the right classes and advanced features like Generics, as well as showing that memory management and efficiency are on your mind. If you do well in this stage, the next rounds are often just formalities, and the hiring manager has already decided on this project. So it's important to bring your A game, in terms of Java, to the table.\nThis course will help you with all of these types of interviews.\nSo if you're ready to practice and have fun.\nLet's get started.",
      "target_audience": [
        "Java developers who want to improve their Java skills",
        "Anyone preparing for an interview for a Java Developer / Senior Java Developer role"
      ]
    },
    {
      "title": "Real World Python Series: Build an Email Reminder App",
      "url": "https://www.udemy.com/course/real-world-python-series-build-an-email-reminder-app/",
      "bio": "Build real Python apps: Complete email reminder system with PyQt6, cloud sync, and APIs -beginner friendly!",
      "objectives": [
        "How to build a complete Python app from scratch — including logic, structure, and user interface.",
        "How to create a desktop GUI using PyQt6 — with real input fields, layout control, and event handling.",
        "How to send automated emails with Python — using the smtplib and email.message modules.",
        "How to work with real-world data — reading and writing to CSV files, parsing dates, and scheduling reminders.",
        "How to connect a local Python app to a remote server — using HTTP requests and APIs to store data.",
        "How to deploy and automate your Python app in the cloud — using PythonAnywhere to run your app daily."
      ],
      "course_content": {
        "Welcome & Setup": [
          "What You Will Build in this Course",
          "How the Course Works: Quick Overview"
        ],
        "Build the First Working Version of the App": [
          "Demo of the First Working Version of the App",
          "Starting Things Up",
          "Load Reminders from File",
          "Create the Email Message",
          "Set up App Passwords for Outlook and Gmail",
          "Sending Multiple Emails",
          "Send Only Today's Reminders",
          "Remove Sent Reminders From the File"
        ],
        "Optimizing, Refactoring, and Deploying the Code": [
          "Section Intro",
          "Optimizing the Code",
          "Refactoring the Code",
          "Deploying the App"
        ],
        "Building a New App Feature : Repeated Reminders": [
          "Section Intro",
          "Updating the CSV File",
          "Explaining Relative Datetime Calculations",
          "Implementing the Logic to Support Repeat Reminders",
          "Implementing the Next Date Calculation Function",
          "Optimzing and Refactoring the Code"
        ],
        "Building a New Feature: Graphical User Interface": [
          "Section Intro",
          "The New App Architecture",
          "Building the Main GUI Window",
          "Adding the Input Widgets to the Window",
          "Adding the GUI buttons"
        ],
        "Implementing Reminder Cloud Sync": [
          "Section Intro",
          "Uploading the API in PythonAnywhere",
          "Submitting Test Data to the API",
          "Submitting User Reminders to the API",
          "Cleaning up the GUI"
        ],
        "Creating an Executable": [
          "Creating an Executable for Windows, Mac and Linux"
        ]
      },
      "requirements": [
        "Basic understanding of Python — You should know how to write functions, use variables, loops, and if-statements."
      ],
      "description": "Learn Python by Building a Real App — From Start to Finish\nIf you’ve learned Python basics but still don’t know how to build a real app — this course is for you.\nIn this project-based course, you’ll build a complete desktop application that sends email reminders — with a user interface, real logic, and cloud automation. No more tutorials that only teach isolated code snippets. You’ll learn how everything fits together to make a real, working program.\nThis is the first course in the Real World Python series — where each course teaches you to build one useful, real-world app with Python.\n\n\nWhat You’ll Build\nYou’ll create a fully functional Email Reminder App that:\nLets users schedule reminders through a desktop GUI (built with PyQt)\nSends emails using real email credentials via SMTP\nSaves data to a CSV file for persistent storage\nRuns automatically every day from the cloud (PythonAnywhere)\nSupports repeat reminders like “every 2 weeks” or “every 3 months”\nBy the end, you’ll have a tool that’s actually useful — and you’ll know how to build one yourself.\n\n\nWhat You’ll Learn\nHow to think through, design, and build an app from scratch\nHow to use PyQt6 to build clean, interactive desktop interfaces\nHow to work with CSV files, dates, and scheduling logic\nHow to send emails in Python using smtplib and EmailMessage\nHow to deploy and run Python scripts daily in the cloud\nHow to send data from a desktop GUI to a server\nThis course is not just about writing code — it’s about becoming someone who can build programs that work.\n\n\nWho This Course Is For\nYou know the basics of Python (variables, functions, loops), but you struggle to turn that into a complete program\nYou’ve tried learning Python but still feel lost when starting a project\nYou want to finally finish something — and feel like a real developer\nYou don’t need to be advanced. You just need to be ready to build.\n\n\nWhat Students Say About My Courses\n“Ardit has a gift for breaking down complex concepts into simple steps.”\n“This is the first time I actually understood how to build an app with Python.”\n“Finally — a course that bridges the gap between theory and real-world Python.”\n\n\nBy the end of this course, you’ll not only have a working app — you’ll have the confidence and skills to build many more.\nLet’s build something real.",
      "target_audience": [
        "Beginner to intermediate Python learners who know the basics but struggle to build complete programs"
      ]
    },
    {
      "title": "Agile for Software Development",
      "url": "https://www.udemy.com/course/agile-from-mindset-to-mastery/",
      "bio": "A complete and lean course about Agile software development",
      "objectives": [
        "Deep knowledge of Agile Mindset",
        "Agile Development Practices",
        "A Complete study of Scrum Framework",
        "How to elemenate wasts in software development"
      ],
      "course_content": {
        "Agility Mindset": [
          "Agility Mindset in Software Development",
          "Agile Mindset Maturity Assessment"
        ],
        "Scrum Framework": [
          "Scrum Framework Overview",
          "(Reading) Scrum Guide™ - Scrum Overview",
          "Quiz about Scrum Overview",
          "Scrum Roles",
          "(Reading) Scrum Guide™ - Scrum Roles",
          "Quiz about Scrum Roles",
          "Scrum Events",
          "(Reading) Scrum Guide™ - Scrum Events",
          "Quiz about Scrum Events",
          "Scrum Artifacts",
          "(Reading) Scrum Guide™ - Scrum Artifacts",
          "Quiz about Scrum Artifacts",
          "Scrum Additional Practices"
        ],
        "Seven Wastes in Software Development": [
          "Introduction to Seven Wastes in Software Development",
          "Waste #1 Partially Done Work",
          "Waste #2 Extra Features",
          "Waste #3 Relearning",
          "Waste #4 Handoffs",
          "Waste #5 Delays",
          "Waste #6 Task Switching",
          "Waste #7 Defects"
        ]
      },
      "requirements": [
        "Being a software developer"
      ],
      "description": "Agile Fundamentals emphasizes starting with an Agile mindset\nSTART YOUR JOURNEY FROM MINDSET TO MASTERY\nIn order to succeed with agile approaches, teams and organizations should focus first on “being agile” in this course we will learn outcomes delve into key concepts such as adaptive planning, value-driven development, team collaboration, and frequent feedback for continuous improvement.\nwe also will cover the Agile Manifesto, the Agile Principles, and some widely applied frameworks and practices. Course participants come away with a solid understanding of core concepts as they prepare to embark on their agile journey.\nThe Agile mindset is a fundamental concept in Agile software development methodologies. It represents a set of values, principles, and attitudes that guide how Agile teams and organizations approach their work, collaborate, and respond to change.\nAgile is a set of principles and practices for software development and project management that prioritize flexibility, collaboration, and customer satisfaction. Agile methodologies are designed to adapt to changing requirements and deliver value to customers in a more iterative and incremental way. The Agile approach stands in contrast to traditional, plan-driven methods, which often involve extensive upfront planning and a fixed scope.\nThe Agile mindset is not limited to a particular methodology like Scrum or Kanban but can be applied in various contexts and industries. It encourages a flexible, customer-centric, and collaborative approach to software development and project management, allowing teams to deliver better results and respond more effectively to changing requirements and market conditions.",
      "target_audience": [
        "All software developers",
        "Scrum Masters",
        "Agile Coaches"
      ]
    },
    {
      "title": "Zero to ROS",
      "url": "https://www.udemy.com/course/school-of-ros-zero-to-ros/",
      "bio": "Robot Operating System for Beginners",
      "objectives": [
        "ROS (Robot Operating System) basics",
        "How to simulate a robot with Gazebo",
        "Robotic Navigation",
        "Robotic Perception and Obstacle Avoidance"
      ],
      "course_content": {
        "Introduction": [
          "Introduction with Tiziano and Chris"
        ],
        "Setup your Work Environment": [
          "Install Linux on the Virtual Machine",
          "Setup ROS",
          "The Catkin Workspace",
          "Setup your Github account",
          "Discord server",
          "How to submit your assignments"
        ],
        "ROS Hello World": [
          "Hello World with topics in ROS"
        ],
        "Learn hands-on with your first ROS project": [
          "Introduction",
          "Create your first ROS Package",
          "Create your first ROS Publishers (in Python): Cylinder's height and radius",
          "Verify published topics in the command window",
          "How to get to the Area and Volume calculated from the available topics",
          "Create your first ROS Subscriber (in Python)",
          "Create your custom ROS Message",
          "Create your Calculator Node",
          "Putting all together: get the Volume of a Cylinder with ROS (and Python)",
          "Create your first ROS Launch file",
          "Debugging your project with rqt"
        ],
        "Assignment: Create a simple calculator": [
          "Assignment 01 - Cylinder weight"
        ],
        "Your First Robot Simulator": [
          "Introduction",
          "Control a simple Robot with your Keyboard",
          "Getting the robot's pose",
          "Example: generate a square pattern for your Turtlesim",
          "How does logging work in ROS: ROSLOG",
          "How to setup and change parameters in ROS: ROSPARAM",
          "Calculate the error between two angles"
        ],
        "Assignment: 2D Navigation": [
          "Assignment 02 - build your first Guidance node"
        ],
        "Introduction to Gazebo and Rviz": [
          "Introduction",
          "Introduction to Gazebo and Rviz",
          "Create a Robot Description file Xacro",
          "Launch file for a Robot Simulation",
          "Get your Xacro file ready for Gazebo",
          "Reference Systems and the TF library",
          "Gazebo 3D environment and the TF visualization in Rviz",
          "Get the robot's position and orientation by listening to the TF Publisher",
          "Example: how to import a Gazebo World in your project"
        ],
        "Assignment: 2D Navigation with Gazebo": [
          "Assignment 03 - Navigation to a 2D Target with Gazebo and Rviz"
        ],
        "Robot Perception": [
          "Introduction",
          "How to add a Range Finder to your robot simulator using Xacro and URDF",
          "How to add the Lidar plugin to your Gazebo simulation",
          "How to visualize the Laser Scan plugin in Rviz",
          "Creating the node that converts /scan into Sonar /range topic",
          "Visualize the Sonar /range in Gazebo and Rviz"
        ]
      },
      "requirements": [
        "No need for a Robotics background!",
        "Basic knowledge of Linux",
        "Basic knowledge of Python",
        "No hardware necessary, only your computer"
      ],
      "description": "The \"Zero to ROS\" course will take you quickly into ROS. You will learn all the essential concepts through hands on examples and assignments. Learn at your own pace: no schedule!\n\n\nCourse Curriculum\nEnvironment setup and Hello World: Setup your work environment with ROS Noetic and write your first Hello World project\nYour first ROS Package: Learn the basics of ROS hands on, with a practical example. This section will guide you through the creation of a ROS package, ROS messages and launch files.\nRobot Simulation: We will use the popular turtlesim package, a simple 2D robot simulator, to explain the basics of robotic simulation in ROS. You will learn hands on how to deal with transformations, how to control your robot and navigate to a waypoint\nIntroduction to Gazebo and Rviz: Gazebo is the popular physics simulator, compatible with ROS. Rviz is the popular visualization tool where you can display your robot position as well as sensors readings, planning... Learn how to build and visualize your robot and sensors using Xacro and Urdf\nPerception: Gazebo is the popular physics simulator, compatible with ROS. Rviz is the popular visualization tool where you can display your robot position as well as sensor readings, planning, etc. Learn how to build and visualize your robot and sensors using Xacro and Urdf\nObstacle Avoidance: Put everything together and use the available sensors to avoid surrounding obstacles. You will learn to think like a robotic engineer with real world challenges\nFinal certificate\nYou will get your Master Certificate if you complete all your assignments: you can learn only with practice.\nThere will be 5 assignments in the course, each with an increasing level of difficulty.\nBut don't worry: we are here to help!  Assignments are not mandatory to complete the course, but are required to get your certificate\nDirect support through Discord\nConnect to our Discord server and join our community. Ask questions and submit your assignments. We are here to help!",
      "target_audience": [
        "Software engineers",
        "Robot enthusiasts",
        "Beginner Robot Operating System",
        "Beginner ROS"
      ]
    },
    {
      "title": "Asynchronous Python for beginners",
      "url": "https://www.udemy.com/course/asynchronous-python-for-beginners/",
      "bio": "Learn to build scalable python applications with async frameworks",
      "objectives": [
        "You will be able to build scalable python web apps that handle thousands of web requests.",
        "You will be able to implement websockets, to build dynamic web applications",
        "You will be able to identify blocking code, and create solutions for it",
        "You will have a complete understanding of Asyncio and its features",
        "You understand the scenarios to use 2 way communication between the client and the server"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why take this course?",
          "Course Outline",
          "Local Configuration"
        ],
        "Synchronous & Asynchronous Programming Models": [
          "Synchronous Programming Models",
          "Asynchronous Programming Models",
          "Quiz"
        ],
        "WSGI - Web Server Gateway Interface": [
          "WSGI Specification",
          "WSGI Simple Demo",
          "WSGI Blocking Application Demo",
          "Wrap Up",
          "Quiz"
        ],
        "Monkey Patching": [
          "Monkey Patching",
          "Monkey Patching Demo"
        ],
        "The Event Loop & ASGI": [
          "The Event Loop",
          "ASGI - Asynchronous Server Gateway Interface",
          "ASGI Demo",
          "Quiz"
        ],
        "ASYNCIO": [
          "Asyncio Theory",
          "Co-routine Demo",
          "Tasks Demo",
          "Futures Theory",
          "Futures Demo",
          "WebSockets Simple Demo",
          "WebSockets Advanced Demo",
          "Quiz"
        ],
        "Supplement Content": [
          "Asyncio: Debug Mode",
          "Asyncio: Debug Mode Demo"
        ]
      },
      "requirements": [
        "Basic knowledge of Python development",
        "Basic knowledge of Linux/Unix command line",
        "You know how to install python dependencies, and execute python scripts",
        "You are familiar with python web development frameworks"
      ],
      "description": "This course will allow students to explore the principles of Asynchronous programming with Python. By setting a foundation of the problem sets async python can help solve and diving into the frameworks that facilitate this. Your education will be further enhanced by walking through coding exercises and demos that aim to provide sample scenarios.\nInstructor:\nEmmanuel Apau, an AWS Certified DevOps specialist with 10 years of experience developing innovative automation solutions using DevOps & Site reliability best practices for clients with Python\nTopics Covered:\n1. Synchronous vs Asynchronous Programming\n2. WSGI vs ASGI Applications\n3. Monkey Patching\n4. The event loop\n5. Asyncio\n6. Coroutines, Tasks & Futures\n7. Websockets\nOnce this course is complete:\n- You will be able to build scalable python web apps that handle thousands of web requests.\n- You will be able to implement WebSockets, to build dynamic web applications.\n- You will be able to identify blocking code and create solutions for it.\n- You will utilize 2-way communication between the client and understand the scenarios when it is necessary.\n- You will have a complete understanding of Asyncio and its features\nPrerequisites:\n- This course expects that you have a basic understanding of python development.\n- That is you know how to install dependencies, execute python scripts\n- That you are familiar with web development frameworks",
      "target_audience": [
        "Beginner python developers",
        "Developers who want to build scalable python applications",
        "Developers who want a thorough understanding of Asyncio",
        "Developers who want to better understand the benefits of asynchronous applications"
      ]
    },
    {
      "title": "Build Modern GUI Apps With CustomTkinter, Tkinter and Python",
      "url": "https://www.udemy.com/course/build-modern-gui-apps-with-customtkinter-tkinter-and-python/",
      "bio": "No More Outdated Looking Tkinter Apps! CustomTkinter Makes Tkinter Apps Look Modern Again!",
      "objectives": [
        "Introductory TKinter for GUI Apps",
        "The CustomTkinter Framework For Tkinter",
        "How to Build Basic Apps With TKinter and Python",
        "How To Use All The Major CustomTkinter Widgets"
      ],
      "course_content": {
        "Basic CustomTkinter Widgets": [
          "Introduction",
          "Buttons",
          "Entry Boxes",
          "Check Boxes",
          "Combo Boxes",
          "Progress Bar",
          "Radio Buttons",
          "Scrollable Frame",
          "Segmented Buttons",
          "Sliders"
        ],
        "More Advanced CustomTkinter Widgets": [
          "Switch Widget",
          "Tabview",
          "Text Box",
          "Input Dialog",
          "TopLevel Window",
          "Fonts",
          "Images",
          "Option Menu",
          "Light and Dark Mode",
          "Custom Color Themes",
          "Scaling",
          "Object Oriented Classes",
          "Animations"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No special tools are necessary to take this course",
        "A Basic Understanding of Python and Tkinter Is Helpful"
      ],
      "description": "In this course I'll teach you how  to make modern looking graphical user interfaces for Python using the CustomTkinter Library with TKinter.  You'll be surprised just how quickly you can create some pretty cool looking apps!\n\n\nI'll show you the ins and outs of CustomTkinter, and how to make your old looking Tkinter apps look new and modern.\n\n\nWe'll start out by learning all about the main CustomTkinter widgets.  Including:\n\n\nButtons\nCheckButtons\nComboboxes\nDateEntry\nEntry Boxes\nFloodgauges\nFrames\nLabels\nLabelFrames\nMenuButtons\nMeters\nNotebooks\nPaned Windows\nProgressBars\nRadioButtons\nScales\nScrollbars\nSeparators\nSizeGrips\nSpinBoxes\nTreeviews\nColor Choosers\nDialog Boxes\nToast Messages\nAnd More!\n\n\nOnce you learn these main CustomTkinter widgets, you can easily use them in any Tkinter app you build in the future!\n\n\nIf you love Tkinter, but hate the way it looks...this course is for you!  There are several modern libraries for Tkinter, but CustomTkinter is one of the most complete and up to date...and in my opinion, one of the easiest to use!\n\n\nIf you don't have any experience with Tkinter, that's fine...I'll walk you through everything you need in this course.  Likewise, if you're an old pro at Tkinter, this refreshing library should be quick and easy for you to pick up..",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn to build Modern Looking GUI Apps With TKinter and Python",
        "Anyone wanting to learn to build GUI apps with Python"
      ]
    },
    {
      "title": "Part B - Networking Projects - Implement TCP/IP Stack in C",
      "url": "https://www.udemy.com/course/tcpipstack_b/",
      "bio": "C/C++ Linux Project, Network Socket Programming, Build TCP/IP Stack, Final Year Project, System Programming in C",
      "objectives": [
        "Working with Timers in Networking Domain",
        "How to implement Networking Oriented Algorithms",
        "Implement Callback Registration Model",
        "Parsing and Cooking Network Packets",
        "Notification Chains",
        "Developing more realistic virtual Networking Device environment"
      ],
      "course_content": {
        "What is this Course all About ?": [
          "Agenda",
          "End Product of this Course",
          "Join Telegram Group",
          "Code Access for partB"
        ],
        "Project 1 : Interface Management and Statistics": [
          "Introduction",
          "Enable Disable an Interface - Problem Statement",
          "Code changes for Intf Enable/Disable",
          "Gathering Interface statistics",
          "Mandatory Assignment"
        ],
        "Project 2 : Implementing Packet Generator": [
          "Problem Statement",
          "Packet Exchange Infra - Revision from Part A",
          "Packet Generator Design",
          "Packet Generator Implementation - Code Walk",
          "Demonstration",
          "Optional Assignment"
        ],
        "Project 3.1 : L3 Route Calculation - Data Structures and Supporting APIs": [
          "Problem Statement",
          "Pre-Requisites",
          "Demonstration",
          "CLI Requirements",
          "Spf Algo - GroundWork to be done",
          "Desiging Data Structures",
          "Data Structure Snapshot",
          "Data Structure Definitions",
          "Helper APIs for Spf Algo Implementation",
          "Helper APIs - 1,2 of 10",
          "Helper APIs - 3-8 of 10",
          "Helper APIs - 9-10 of 10",
          "Priority Queue Operations"
        ],
        "Project 3.2 : SPF Algorithm (Dijkstra) Implementation": [
          "SPF Algo - Implementation Plan",
          "Spf Algo : Intialization Part 1",
          "Nexthop Calculation",
          "Writing a Nexthop Looping Macro",
          "Spf Algo : Intialization Part 2",
          "Spf Algo : Intialization Part 3",
          "Spf Algo : Execution Phase",
          "Spf Algo : Execution Phase : Part 4",
          "Spf Algo : Execution Phase : Part 5",
          "Spf Algo : Nbr Node Exploration Rules",
          "Spf Algo : Execution Phase : Part 6 (Final Step) - Flowchart",
          "Spf Algo : Execution Phase : Part 6 (Final Step) - Implementation",
          "Mandatory Assignment - Write some new CLIs",
          "Testing SPF Algo on Various Topologies"
        ],
        "Project 3.3 : Routing Table Construction": [
          "Understanding ECMP Requirements",
          "ECMP : Data Structure Enhancements",
          "ECMP : Data Forwarding using ECMP route",
          "Spf Algo : Phase 3 (Final) : Route Calculation",
          "Spf Algo : Final Demo",
          "Auto Populating Routing Tables on TCP/IP Stack Lib Start-Up"
        ],
        "Project 4 : Developing Logging Infrastructure": [
          "Problem Statement",
          "Working Demo - Packet Capture and Debugging",
          "Goals",
          "Header Parsing APIs",
          "Mandatory Assignment - Define the Enums",
          "Lets Code up Header Formatting APIs",
          "Writing Custom tcp_dump()",
          "Emitting logging data to output sources",
          "Integrating Logging APIs with TCP/IP Stack lib",
          "Logging Buffers",
          "Logging Output Sources - Log files & stdout",
          "Mandatory Assignment - Implement Logging CLIs"
        ],
        "Project 5 : Notification Chains": [
          "Introduction to Notification Chains",
          "A generic Example of NFC",
          "Role of NFC in our TCP/IP Stack Project",
          "NFC Data Structures",
          "NFC Functions Implementation",
          "TCP IP Stack Specific NFC",
          "Interface Config Relay NFC - 3 Steps",
          "Step 1/3 - Subscriber Registration - API discussion",
          "Step 1/3 - Subscriber Registration - API Implementation",
          "Mandatory Assignment - Using NFC Registration API",
          "Step 2/3 - Generating Notifications - API",
          "Step 2/3 - Generating Notifications - Implementation",
          "Step 3/3 - Processing Notification by Subscriber",
          "Notification Chains - Final Demo",
          "Assignment on NFC"
        ],
        "Project 6 : Integrating Timer Library": [
          "Why Timers are important in Networking ?",
          "Road-Map of this Section",
          "Steps to integrate Timer Library",
          "Dynamic ARP Tables",
          "How to use Timer Library",
          "Solution Steps",
          "Assignment",
          "New APIs to manage ARP Entry Timers",
          "Main Project Final Code Changes"
        ],
        "Appendix A.1 - Part1 - Dynamic Construction of Layer 3 Routing Table": [
          "Introduction",
          "Goals and Problem Statement",
          "Routing Table Entry Format",
          "ECMP - Equal Cost Multiple Path",
          "L3 Device Collaboration",
          "Generic Steps to Build Routing Table"
        ]
      },
      "requirements": [
        "Part A of this Course is a pre-requisite",
        "Good in Coding in C or any one main stream language",
        "Must know how to work with git - atleast basics",
        "Good with Pointers and Memory management Skills in C"
      ],
      "description": "Welcome to the Part-B of the TCP/IP Stack Development Course Series. This is a sequel course to Part-A in which we implemented a pseudo TCP/IP Stack working in Virtualized topology.\nIn this Course, We shall be implementing more advanced and additional features to our Pseudo TCP/IP Stack and would try to impart a more realistic flavor to it.\n\n\nWe will resume from where we left in Part-A. If you have signed up for this course, I presume you have completed Part-A of the course and we are ready for another roller coaster ride into our project.\nThis course is Advanced as compared to Part-A. In this course we will learn some more aspects of TCP/IP stack and in general, how Networking software is developed. You will not only doing Networking Based Programming but also, you will continue doing a typical Linux based System Programming development as Networking is strongly tied to System Programming.\n\n\nStudent Level: Intermediate to Advanced to Working Professionals, Beginners in Coding pls excuse this course.\n\n\nTable of Contents\n1. What is this Course all about?\n2. Project 1 : Interface Management and Statistics\nEnable/Disable an Interface\nGathering Interface Rx/Tx Statistics\n3. Project 2 : Implementing the Packet Generator\nCreate and Feed Pkt stream into Topology\n4. Project 3 : Implementing Routing Table Construction Algorithm\nDesigning Data Structure\nShortest Path First Algorithm in Detail\nImplementation Strategy\nTesting SPF Algorithm Implementation\nRoute Calculation\n5. Project 4 : Logging Infra\nTrack Ingress and Egress pkts per device per interface\nTrack L3 Path taken by a pkt from src to dst\n6. Project 5 : Notification Chains\nIntroduction to NFC\nUnderstand with the help of Example\nWriting a Generic NOTIF Infra code\nWriting TCP/IP Stack NFC\nImplement Publisher Subscriber APIs\nSee NFC in Action\n7. Project 6 : Working with Timers\nImplementing Ageism\nImplement Timer State Machine",
      "target_audience": [
        "Those who have finished Part A (Prequel Course)",
        "Who want to learn System and Network Programming"
      ]
    },
    {
      "title": "Develop Your Electrical Circuit Solver in Python",
      "url": "https://www.udemy.com/course/develop-your-electrical-circuit-solver-in-python/",
      "bio": "Discover the theory behind today's circuit simulators and implement it in Python.",
      "objectives": [
        "Graph theory applied to Circuit Analysis",
        "Apply Modified Nodal Analysis (MNA) to electrical circuits in time domain and frequency domain",
        "Python Fundamentals",
        "Basics of version control, Git and GitHub",
        "Develop a circuit solver in time domain and frequency domain",
        "Get familiar with NumPy, the most popular Python scientific library",
        "Basics of the pandas library for easy data manipulation and nice output formatting",
        "Object-Oriented Programming with Python",
        "The Don't Repeat Yourself (DRY) principle with class inheritance in Python",
        "Code refactoring to improve your program structure"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Circuit Theory": [
          "Introduction to Modified Nodal Analysis (MNA)",
          "MNA Basics - Example 1 - Part 1",
          "MNA Basics - Example 1 - Part 2",
          "MNA Basics - Example 2 - Part 1",
          "MNA Basics - Example 2 - Part 2",
          "Application of the MNA Principles - Part 1",
          "Application of the MNA Principles - Part 2",
          "Application of the MNA Principles - Exercise Solution",
          "MNA Computational Formulation",
          "Calculation of Branch Voltages and Currents",
          "Incidence Matrix",
          "Branch Admittance Matrix and Complete Equation for Currents",
          "LC Modelling in Time Domain - Trapezoid Area",
          "LC Modelling in Time Domain - Trapezoidal Rule",
          "LC Modelling in Time Domain - Common Representation and Iterative Process",
          "LC Modelling in Time Domain - Proof of the Inductor Model",
          "LC Modelling in Time Domain - Proof of the Capacitor Model",
          "LC Modelling in Time Domain - Impact on the MNA Matrix Equation",
          "Exercise - Proof of the Nodal Analysis Formulation",
          "Presentation of the Proof of the Nodal Analysis Matrix Equation",
          "Exercise - Proof of the MNA Formulation",
          "Presentation of the Proof of the MNA Formulation"
        ],
        "Python Fundamentals": [
          "Python Installation",
          "Code Editor and IDE",
          "Getting Started with PyCharm",
          "Integers, Floats and Strings",
          "Lists",
          "Conditional Statements",
          "Loops - Part 1",
          "Loops - Part 2",
          "Exercises - Lists, Loops and Conditional Statements",
          "Exercises Solutions - Lists, Loops and Conditional Statements",
          "Dictionaries - Part 1",
          "Dictionaries - Part 2",
          "Exercise - Dictionaries",
          "Functions - Part 1",
          "Functions - Part 2",
          "Functions - Part 3",
          "Exercises - Functions",
          "Functions - Solution to Exercise 1",
          "Functions - Solution to Exercise 2",
          "Object-Oriented Programming - Part 1",
          "Object-Oriented Programming - Part 2",
          "Object-Oriented Programming - Part 3",
          "Exercise - Object-Oriented Programming",
          "Object-Oriented Programming - Solution to the Exercise",
          "Files I/O",
          "Introduction to NumPy",
          "Introduction to Pandas",
          "Introduction to Matplotlib",
          "__name__ and __main__",
          "Virtual Environments"
        ],
        "DC Circuit Solver": [
          "Introduction",
          "Program Structure",
          "Solution - Part 1 - Storing the Input Data",
          "Solution - Part 2 - Input Pre-processing",
          "Solution - Part 3 - Node Admittance Matrix",
          "Solution - Part 4 - Incidence Matrix and MNA Matrix",
          "Solution - Part 5 - RHS Vector and System Solution",
          "Solution - Part 6 - Branch Voltages and Currents",
          "Documentation and Arbitrary Nodes Labelling"
        ],
        "Introduction to Version Control": [
          "Version Control Definition and Concepts",
          "Token Authentication for Git Operations",
          "Practicing Git From the Command Line",
          "Version Control with PyCharm"
        ],
        "Frequency Domain Solver": [
          "Introduction",
          "Tips and Hints",
          "Solution - Part 1 - Input Pre-processing",
          "Solution - Part 2 - System Solution and Results Validation"
        ],
        "Time Domain Solver": [
          "Introduction",
          "Tips and Hints",
          "Solution - Part 1 - Before the Main Loop",
          "Solution - Part 2 - Main Loop Implementation",
          "Results Validation"
        ],
        "Code Refactoring and Output Formatting": [
          "Introduction",
          "Introduction to Class Inheritance",
          "Changes to the Input Files Format",
          "Base Class Implementation",
          "Decorators and Static Methods",
          "Output Formatting - Introduction",
          "Output Formatting - Implementation",
          "Defining the Python End-User Interface - Introduction",
          "Defining the Python End-User Interface - Implementation",
          "Allowing Alpha-Numerical Nodes Labelling - Introduction",
          "Allowing Alpha-Numerical Nodes Labelling - Implementation",
          "Running a Python Script With Additional Command Line Arguments",
          "Improvements Suggestion"
        ]
      },
      "requirements": [
        "Basic knowledge of electrical circuits: modelling independent voltage sources, independent current sources and RLC in time domain and frequency domain",
        "1st year undergraduate level is enough (to understand basic matrix operations)",
        "No prior knowledge of Python is required",
        "A computer with an internet connection"
      ],
      "description": "Welcome to one of the very few online courses that will teach you how to develop an electrical circuit solver!\n\nAre you interested in the theory used in most circuit simulators and how to implement it yourself?\nAre you an electrical engineering student/professional wishing to develop coding skills?\nWould you like to switch to a software engineering career and start with a programming project linked to electrical engineering?\nIf the answer to any of these questions is yes, this course is for you.\nIf you are a university student, you will find that this course is complementary to your curriculum.\nYou will discover Modified Nodal Analysis (MNA), a powerful method to solve electrical circuits. Leonhard Martin Wedepohl, a noted electrical engineering educator, emphasised that \"the absence of this circuit analysis technique from many academic engineering courses is totally at variance with its widespread application in modern circuit simulation packages\". And here is where you can learn this awesome technique!\nPlease note that this course does not cover the development of a graphical interface for drawing electrical circuits. However, this may be your next project after completing this one!\nIn the theory part of this course, you will get the foundations to build a circuit solver both in time domain and frequency domain. Although the implementation only covers independent voltage sources, independent current sources and RLC elements, modelling other components will require minimal additional effort!\nIf you have never programmed in Python, don't worry, we have dedicated a section to teach you how to code in Python as well as all the language concepts you need to complete this project! There are many exercises along the way before beginning the development of your circuit solver. These exercises will let you feel better ready for the real project.\nYou will start your program with a warmup challenge: build a DC solver in steady state. Once done, you will continue with the development of a frequency domain solver followed by a time domain solver.\nDuring your adventure, you will learn an essential software engineering concept: version control. This will make it easier for you to monitor the progress of your development and avoid any loss of information if you screw things up or your program crashes at any time! In this course, you will use Git with GitHub (you will have to create a GitHub account -it's free- to better understand and apply version control concepts).\nThe last section of this course focuses on improving the structure of your code and defining an appropriate output format for your end-user.\nIf, at the end of this course, you are keen to continue with this project and develop further functionalities, you will find many creative opportunities that will help you to expand your programming skills and, in addition, enable you to show up with great achievements to employers! If you need guidance, some improvement suggestions are listed in the very last lecture of this course.",
      "target_audience": [
        "Anyone studying electrical engineering or working in this field with the wish to start learning programming.",
        "Anyone aiming to develop a real-world programming project related to electrical engineering.",
        "This project may be suitable as a project proposal for university students.",
        "Electrical engineering students/professionals wishing to extend their career opportunities by developing multi-disciplinary skills.",
        "Anyone curious in understanding the theory behind the solvers implemented in modern circuit simulators."
      ]
    },
    {
      "title": "Spring AI: Creating Workflows, Agents and Parsing data",
      "url": "https://www.udemy.com/course/spring-ai-creating-workflows-agents-and-parsing-data/",
      "bio": "Creating Workflows, Agents and Parsing Data create intelligent workflows, autonomous agents, and advanced data parsing",
      "objectives": [
        "Build AI-driven workflows and automation using the Spring framework and generative AI models (LLMs)",
        "Develop intelligent AI agents in Java that can interact with APIs and data, leveraging Spring AI’s tools",
        "Parse and analyze data with AI (NLP techniques) integrated into Spring Boot applications",
        "Integrate OpenAI/ChatGPT and other models into Spring Boot to create real-world AI-powered features",
        "Apply best practices in AI app development, including prompt engineering, model selection, and deployment in Java"
      ],
      "course_content": {
        "Introduction": [
          "Curse Overview and Support Material",
          "Why traditional computing fail on simple tasks",
          "Spring AI VS Native Library",
          "Quiz Introduction"
        ],
        "One-shot Prompt": [
          "What is One-shot Prompt",
          "The Input and its parameters",
          "Choosing a LLM Provider and a model",
          "Quiz One-shot Prompt"
        ],
        "Retrieval, Tools & Prompt engineering": [
          "Retrieval (RAG VS CAG)",
          "Adding Tool Calling",
          "Prompt engineering",
          "Quiz Prompt engineering",
          "Avoiding Prompt Injection",
          "OWASP Gen AI Security Quiz"
        ],
        "AI Workflow": [
          "AI Workflows and How They Differ from Agents",
          "Workflow for Parsing Bills from CSV and PDF",
          "Add categories and suppliers in the workflow",
          "Add Support to PDF parsing",
          "PDF Processing with Image Extraction and Reasoning"
        ],
        "Agents & MCP": [
          "Agent and MCP Integration Documentation",
          "Advanced Agents Overview"
        ],
        "Assistants": [
          "Assistant Interaction",
          "Create a reactive end-point with tooling for assistant",
          "Front-End Assistant Code",
          "Code generation using V0"
        ],
        "Fine tunning": [
          "Fine tunning a model"
        ],
        "Final Quiz": [
          "Final Quiz - part 1",
          "Final Quiz - part 2"
        ]
      },
      "requirements": [
        "Intermediate Java programming experience (familiarity with Java 11+ syntax and OOP)",
        "Basic knowledge of the Spring Boot framework (creating simple REST APIs, Spring Boot project setup)"
      ],
      "description": "In this course, you won’t waste hours watching unfocused coding or endless trial and error. Every lesson is designed to deliver practical knowledge and clear explanations, so you can make real progress without unnecessary filler. Better a shorter and direct curse than tons of hours without giving you time to practise.\n\nIf you are an intermediate Java developer eager to start creating products with AI, this course is your gateway to building intelligent applications with Spring. Are you comfortable with Spring Boot and looking to add cutting-edge AI features like chatbots, workflow automation, or smart data processing to your skillset? This course blends theory with hands-on projects to take your expertise to the next level. You’ll learn how to harness Spring AI – the latest Spring ecosystem project – to seamlessly integrate powerful AI models (like OpenAI’s GPT-4) into Java applications.\n\n\nIn “Spring AI: Creating Workflows, Agents and Parsing Data,” you will work on real-world scenarios and coding exercises that bridge the gap between AI and Spring development. Through a step-by-step approach, you’ll:\n\n\nDevelop AI-driven workflows: use Spring Boot and generative AI APIs to automate tasks and decision-making processes in your apps.\nBuild autonomous AI agents: create agents that can call APIs, handle data, and make intelligent decisions (leveraging concepts like LangChain and Spring AI’s tool integrations).\nImplement advanced data parsing: learn NLP techniques to extract insights from unstructured data (emails, documents, logs) using LLMs within Spring applications.\nIntegrate popular AI models: bring ChatGPT, or other AI services into your Java projects, mastering API integration and prompt engineering.\nWhy learn AI integration with Spring? Artificial Intelligence is transforming how software is built, and Java developers with AI skills are in high demand. By combining Spring Boot (Java’s leading framework) with AI capabilities, you can build innovative, AI-powered products that stand out in the market. This course shows you practical techniques to add features like intelligent chatbots, automated workflows, and smart data analyzers to your applications – skills that can accelerate your career.",
      "target_audience": [
        "Software engineers and tech leads aiming to incorporate AI workflows and agents into enterprise Java applications"
      ]
    },
    {
      "title": "Algorithms in JavaScript - Cracking Coding Interviews",
      "url": "https://www.udemy.com/course/algorithms-in-javascript-cracking-coding-interviews/",
      "bio": "Learn to implement real world algorithms in JavaScript and ace your technical interviews",
      "objectives": [
        "Learn to quickly implement popular data structures and algorithms",
        "Crack technical interview easily with real world problem solving techniques",
        "Understand the core concepts behind Algorithms",
        "Learn to create real world implementation in JavaScript"
      ],
      "course_content": {
        "Understanding Course": [
          "Intro",
          "Overview of Course",
          "Understanding Technical Interview",
          "At the Technical Interview",
          "Approaches of Algorithm"
        ],
        "Sorting Algorithms": [
          "Quick Sort Algorithm",
          "Understanding Quick Sort",
          "Implementation of Quick Sort with JS",
          "Merge Sort Algorithm",
          "Understanding Merge Sort Final",
          "Implementation of Merge Sort in JS",
          "Shell Sort Algorithm",
          "Algorithm Analysis Shell Sort",
          "Understanding Shell Sort Algorithm Final",
          "Implementation of Shell Sort with JS",
          "Heap Sort",
          "Implementation of Heap Sort with JS",
          "Understanding heap Sort Final"
        ],
        "Search Algorithms": [
          "Understanding Linear Search Algorithm",
          "Linear Search algorithm example- Final",
          "Implementation of Linear Search with Example",
          "Finding Minimum And Maximum Value in an array",
          "Binary search Algorithm",
          "Binary Search Algorithm Example",
          "Implementation of Binary Search with example",
          "Counting Occurences"
        ],
        "Illustrations of Algorithms": [
          "Understanding Palindrome Number",
          "Palindrome Number is JS",
          "Understanding Armstrong Number",
          "Armstrong Numbger is Js",
          "Understanding Double Armstrong Number",
          "Double Armstrong Number in Js",
          "Anagrams",
          "Anagrms in Js",
          "What are Fibonnaci Series",
          "Implementation of Fibonnaci Series"
        ],
        "Advanced Algorithms": [
          "Dynamic Programming",
          "Finding longest common string of two strings-Final",
          "Greedy Algorithms",
          "First Greedy Algorithm Coin Chnaging Problem",
          "Knapsack Problem",
          "Greedy Algorithm solution to the knapsack problem",
          "Resulation Combination Using Knapsack"
        ],
        "String Manipulation": [
          "Three Ways to Reverse a String",
          "Finding Vowels in JS",
          "Dtring Function Implementation"
        ],
        "Trees": [
          "Building a Binary Search Tree",
          "Binary Search Tree Implementation",
          "Searching for Minimum and maximum value",
          "Searching For A Specific Value"
        ],
        "Graphs": [
          "Graph Data Structure",
          "Building a Graph in JS",
          "Depth First Traversal",
          "A-Implementation of Depth First Traversal-new",
          "B-Analysing Output",
          "Breadth First Tranversal",
          "Implementation of Breadth First Traversal in JS",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of JavaScript is required to complete the course"
      ],
      "description": "The most important tool that you can arm yourself with as a programmer is coding algorithms. Algorithms are the building blocks of coding, which means in order to write any program successfully you would need to write your own algorithm.\nAs each program grows, you cannot physically write every code for every bit of your website or your program, which is where these algorithms come handy. They are basically a set of rules that you give to the computer to help them solve certain problems. They not only simplify your life as a coder, but also help your computer perform tasks faster and efficiently.\nStarting your journey as a programmer with the right tools in hand is important and this is why we have created this beginners guide to coding algorithms to help you maximize your potential as a programmer.\nIn this course, you will start at the very beginning and understand what exactly algorithms are, why they are important, the different types of coding algorithms, how to write algorithms, and even how to implement them into your JavaScript code.\nThat’s not all, we will also help you crack the most common interview questions that are asked during a technical round.\nThis extensive coding algorithms course aims to help you start at the very beginning and break down the complex programming principles into simple and easy to understand segments. While we cover theory extensively, we do not simply stop there. We also focus on the implementation of the different algorithms, which means that in addition to understanding how to write the code, you will also see the code in action.\nThe course will cover various topics such as an overview of Algorithms, how to ace a technical interview on algorithms, different sorting algorithms (Quick sort, Merge Sort, Shell Sort, Heap Sort, etc.), different search algorithms (Linear, Binary), Advance Algorithms (Palindrome, Armstrong and Fibonnaci Sequence), String Manipulation, Trees, Graphs and so much more!\nSo, what are you waiting for? Enroll now and become a professional programmer!",
      "target_audience": [
        "Software developers who want to learn implementation of popular algorithms will greatly beneft from this course",
        "Anyone appearing for job Interviews will also find this course very useful"
      ]
    },
    {
      "title": "Become an Azure Container Hero",
      "url": "https://www.udemy.com/course/azure-container/",
      "bio": "The guide to deploying containers on Microsoft Azure. Azure Kubernetes, Web App for Containers, Docker and much more",
      "objectives": [
        "Learn how to select the correct Azure Container Service for each use case",
        "Learn how to setup your mac or windows machine for building docker containers",
        "Learn how Docker Hub works and how to deploy containers to docker hub",
        "Learn how to build a dotnet API and turn it into docker container",
        "Learn how to deploy containers to Azure Container Instances",
        "Deep dive into Web App for Containers (Azure App Service)",
        "Learn how to leverage Azure Container Registries to store and deploy containers",
        "Deep dive into Azure Kubernetes Service"
      ],
      "course_content": {
        "Introduction": [
          "Why You Should Buy This Course"
        ],
        "Docker - Installation": [
          "Section Overview",
          "What version of Docker do I need",
          "Create your Docker Hub account",
          "Docker for Windows 10 Pro or Enterprise",
          "Docker for macOS"
        ],
        "Docker - Run your first container": [
          "Section Overview",
          "Run a simple container",
          "Clean up our local containers and images",
          "Create a container with more control",
          "Clean up containers and images (the nuclear way)",
          "Image tagging",
          "Port forwarding",
          "Docker Knowledge Check",
          "Docker Cheat Sheet"
        ],
        "Docker - How to dockerise a .net core API": [
          "Section Overview",
          "Create your first donet core API with docker support",
          "Deconstructing a DockerFile",
          "Build a docker image and push to docker hub",
          "dotnet docker Knowledge Check"
        ],
        "Microsoft Container Offerings": [
          "Section Overview",
          "What are the options",
          "The cost of doing business",
          "When to use each service"
        ],
        "Azure Container Instances": [
          "Section Overview",
          "Pull a container from docker hub",
          "Create an ACI with Networking and DNS",
          "Clean up Azure Container Instances"
        ],
        "Web App for Containers": [
          "Section Overview",
          "Pull a container from Docker Hub",
          "Deploy a .net core API",
          "Basic Continuous Delivery",
          "Scale up / Scale Out Hosting Plan",
          "Always On",
          "ARR Affinity",
          "High Density Hosting",
          "Multiple Apps in a Hosting Plan",
          "Automatic Scaling",
          "Web App - Knowledge Check"
        ],
        "Azure Container Registries": [
          "Section Overview",
          "Create our first container registry",
          "Install Azure CLI",
          "Push Simple API"
        ],
        "Azure Kubernetes Service Fundamentals": [
          "Section Overview",
          "Create AKS Cluster",
          "AKS Upgrade",
          "AKS Management Tools",
          "Launch the AKS Dashboard",
          "Namespaces",
          "Deploy our first pod",
          "Allow AKS to pull Images from ACR",
          "Deploy a Simple API",
          "AKS Command Cheat Sheet"
        ]
      },
      "requirements": [
        "Basic understanding of networking",
        "Understanding of dotnet core",
        "An Azure Subscription",
        "Windows Pro or Enterprise or MacOS"
      ],
      "description": "The guide to deploying containers on Microsoft Azure!\nThis course isn't just a bunch of theory on how we think you should use containers on Microsoft Azure.  This is a hands on deep dive into how to deploy containers on the Azure Platform.\nDocker is at the heart of creating containers, we are going to teach you how to configure your mac or windows machine to build containers locally.\nWe have developed a simple container and we will teach you to do the same.  These will be used to deploy to each of the Azure Services.\nThe Azure Services we are going to cover are:\nAzure Container Instances\nAzure Container Registries\nWeb App for containers\nAzure Kubernetes Service\nOnce you have finished this course you will be able to apply this knowledge to your own projects and ship containers to Azure.\nBut most importantly we are going to teach you how to select the correct azure service for each of your use cases.\nIn this course you will get online support so if you have any questions you can post them in the discussions and we will get back to you as soon as we can.",
      "target_audience": [
        "Software developers and architects who want to learn how to deploy containers on the Azure Platform",
        "AWS or Google cloud professionals that want to learn about Microsoft's Azure offerings"
      ]
    },
    {
      "title": "Algorithms in Python : Design Techniques And Approach",
      "url": "https://www.udemy.com/course/algorithms-in-python-design-techniques/",
      "bio": "BackTracking,Divide & Conquer,Dynamic Programming,Greedy Algorithms via Data Structures for Interview & problem solving",
      "objectives": [
        "Algorithms In Python",
        "Algorithms Design Techniques",
        "Data Structures",
        "Tress",
        "Graphs",
        "Dynamic Programming , Recursion, Backtracking"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Resources"
        ],
        "Introduction to algorithms": [
          "Introduction to algorithms"
        ],
        "Complexity Analysis": [
          "Section Introduction",
          "Complexity Analysis - part 1",
          "Complexity Analysis - part 2",
          "Summary"
        ],
        "Recurrence Relation": [
          "Section Introduction",
          "Recurrence Relation",
          "Solving Recurrence Relation",
          "Master's Theorem",
          "Summary"
        ],
        "Thinking Recursively": [
          "Section Introduction",
          "Recursion",
          "Identification",
          "Approaching the solution",
          "Problem 01 : FindingSubstrings - Logic",
          "Problem 01 : FindingSubstrings - Live Code Python",
          "Problem 01 : FindingSubstrings - Complexity Analysis",
          "Problem 02 : Tower Of Hanoi",
          "Problem 02 : Tower of Hanoi - Lets code in Python",
          "Problem 02 : Tower of Hanoi - Complexity Analysis",
          "Problem 03 : Array Product Sum - Logic",
          "Problem 03 : Array Product Sum - Live Code Python",
          "Problem 03 : Array Product Sum - Complexity Analysis",
          "Problem 04 : Binary Subtree - Logic",
          "Problem 04 : Binary Subtree : Live code",
          "Problem 04 : Binary Subtree - Complexity Analysis",
          "Why and Why not Recursion",
          "Types Of Recursion",
          "Tail Recursion",
          "Summary"
        ],
        "Backtracking": [
          "Section Introduction",
          "Introduction to Backtracking",
          "Identification",
          "Approaching The Solution",
          "Problem 01 : Rat In Maze - Logic",
          "Problem 01 : Rat In Maze - Code",
          "Problem 01 : Rat In Maze - Complexity Analysis",
          "Problem 02 : NQueen - Logic",
          "Problem 02 : N-Queens - Live Code in Python",
          "Problem 02 : N-Queens - Complexity Analysis",
          "Problem 03 : Knight's Tour Problem - Logic",
          "Problem 03 : Knight's Tour Problem - Live Code in Python",
          "Problem 03 : Knight Tour Problem - Complexity Analysis",
          "Problem 04 : Boggle | Word Search - Logic",
          "Problem 04 : Boggle | Word Search - Live Code in Python",
          "Problem 04 : Boggle | Word Search - Complexity Analysis",
          "Section Summary"
        ],
        "Divide and Conquer": [
          "Section Introduction",
          "Introduction To Divide And Conquer",
          "Identification and Approaching",
          "Problem 01 : MergeSort - Logic",
          "Problem 01 : MergeSort - Live Python Code",
          "Problem 01 : MergeSort - Complexity Analysis",
          "Problem 02 : QuickSort - Logic",
          "Problem 02 : QuickSort - Live Python Code",
          "Problem 02 : QuickSort - Complexity Analysis",
          "Problem 03 : Median Of Medians - Logic",
          "Problem 03 : Median Of Medians - Live Python Code",
          "Section Summary"
        ],
        "Greedy Technique": [
          "Section Introduction",
          "Introduction to Greedy",
          "Identification & Approaching the Solution",
          "Problem 01 : Fractional Knapsack - Logic",
          "Problem 01 : Fractional Knapsack - Live Code Python",
          "Problem 01 : Fractional Knapsack - Complexity Analysis",
          "Problem 02 : IntervalScheduling - Logic",
          "Problem 02 : IntervalScheduling - Live Code Python",
          "Problem 02 : IntervalScheduling - Complexity Analysis",
          "Problem 03 : Huffman Code - Logic",
          "Problem 03 : Huffman Code - Live Code",
          "Problem 03 : Huffman Code - Complexity Analysis",
          "Problem 04 : Dijkstra - Logic",
          "Problem 04 : Dijkstra Logic - Live Code Python",
          "Problem 04 : Dijkstra - Complexity Analysis",
          "Summary"
        ],
        "Dynamic Programming": [
          "Section Introduction",
          "Introduction to Dynamic Programming",
          "Identification",
          "Compare DP, D&C and Greedy",
          "Approaching the Solution",
          "Example 01 : Staircase Problem Explanation & Live Code",
          "Example 01 : Staircase Problem Complexity Analysis",
          "Example 02 - 0/1 Knapsack Explanation & Live code",
          "Example 02 - 0/1 Knapsack Complexity Analysis",
          "Example 03 - Coin Change Problem Theory and Code",
          "Example 03 - Coin Change Problem Complexity Analysis",
          "Example 04 : Longest Decreasing Subsequence Explanation And Code",
          "Example 04 : Longest Decreasing Subsequence | Complexity Analysis",
          "Example 05 : Levenshtein problem",
          "Example 05 : Levenshtein Complexity Analysis",
          "Example 06 : Rod Cutting",
          "Example 06 : Rod Cutting - Complexity Analysis",
          "Example 07 : Matrix Chain Multiplication",
          "Example 07 : Matrix Chain Multiplication | Complexity Analysis",
          "Summary"
        ],
        "Famous Algorithms": [
          "Kadane's Algo",
          "Kadane's Algo Live Code Python",
          "Kadane's Algo Complexity Analysis",
          "BellmanFord's Algo",
          "BellmanFord's Algo Live Code Python",
          "BellmanFord's Algo Complexity Analysis",
          "Topological Sort : Kahn's Algo",
          "Topological Sort Live Code Python",
          "Topological Sort Complexity Analysis",
          "Edmon's Karp/ Ford-Fulkerson Algorithm",
          "Edmon's Karp/ Ford-Fulkerson Live Code",
          "Problem 3: Binary Search Tree",
          "Problem 3: Binary Search Tree - Live Code"
        ]
      },
      "requirements": [
        "Basic Python"
      ],
      "description": "Algorithm Design Techniques: Live problem-solving in Python\nAlgorithms are everywhere. One great algorithm applied sensibly can result in a System like GOOGLE!\nCompleter scientists have worked for 100s of years and derived some of the techniques that can be applied to write and design algorithms.\nSo Why to reinvent the wheel ??\nLet’s go through some of the most famous algorithm design techniques in this course.\nOnce you will come to know these design techniques It will become very easy for you to approach a problem by identifying which technique to apply to solve that correctly and efficiently.\n\n\n0. Complexity analysis\n1. Recursion is the base of any algorithm design\n2. Backtracking\n3. Divide and Conquer\n4. Greedy algorithms\n5. Dynamic programming\n6. Trees\n7. Graphs\nAnd WE WILL WRITE THE CODE LINE BY LINE IN PYTHON !!\nBy the end of this course -\n1. You will understand how to design algorithms\n2. A lot of coding practice and design live problems in Java\n3. Algorithm Complexity analysis\nAND\nIf you are preparing for your coding Interview or doing competitive programming This course will be a big help for you.\nTHRILLED? I welcome you to the course and I am sure this will be fun!!\nIf it does not - It comes with a 30 Days money-back guarantee so don’t think twice to give it a shot.\nHappy Learning\nBasics>Strong;",
      "target_audience": [
        "Want to Learn to Design Algorithms"
      ]
    },
    {
      "title": "Byte-Sized-Chunks: Sorting and Searching Algorithms",
      "url": "https://www.udemy.com/course/sorting-and-searching-algorithms/",
      "bio": "A visual way to master basic algorithms for strong fundamentals!",
      "objectives": [
        "Design and implement software that use sorting and searching algorithms",
        "Understand the trade-offs, complexity and use-cases for different types of sort and search algorithms",
        "Visualise - really vividly imagine - the common data structures, and the algorithms applied to them"
      ],
      "course_content": {
        "Needle In A Haystack: Sorting and Searching!": [
          "You, This Course, and Us!",
          "Performance and Complexity",
          "Big O Notation",
          "Big O Notation More Examples",
          "Sorting Trade-Offs",
          "Selection Sort",
          "Bubble Sort",
          "Insertion Sort",
          "Shell Sort",
          "Merge Sort",
          "Quick Sort",
          "Binary Search - search quickly through a sorted list",
          "Heap Sort Phase I - Heapify",
          "Heap Sort Phase II - The Actual Sort"
        ]
      },
      "requirements": [
        "Basic knowledge of programming is assumed, preferably in Java"
      ],
      "description": "Note: This course is a subset of our 20+ hour course 'From 0 to 1: Data Structures & Algorithms' so please don't sign up for both:-)\n\nThis is an animated, visual and spatial way to learn data structures and algorithms\nOur brains process different types of information differently - evolutionarily we are wired to absorb information best when it is visual and spatial i.e. when we can close our eyes and see it\nMore than most other concepts, Data Structures and Algorithms are best learnt visually. These are incredibly easy to learn visually, very hard to understand most other ways\nThis course has been put together by a team with tons of everyday experience in thinking about these concepts and using them at work at Google, Microsoft and Flipkart\nWhat's Covered:\n\nBig-O notation and complexity\nSorts: Quick, heap, merge, bubble, selection\nSearch: Binary searching a sorted list",
      "target_audience": [
        "Nope! Please don't enroll for this class if you have already enrolled for our 15-hour course 'From 0 to 1: Data Structures and Algorithms'",
        "Yep! Computer Science and Engineering grads who are looking to really visualise data structures, and internalise how they work",
        "Yep! Experienced software engineers who are looking to refresh important fundamental concepts"
      ]
    },
    {
      "title": "Real World Hadoop - Upgrade Cloudera and Hadoop hands on",
      "url": "https://www.udemy.com/course/real-world-hadoop-upgrade-cloudera-and-hadoop-hands-on/",
      "bio": "New version of Hadoop? Need to upgrade a running PROD Hadoop Environment without losing data? We show you hands on ...",
      "objectives": [
        "Simply run a single command on your desktop, go for a coffee, and come back with a running distributed environment for cluster deployment",
        "Quickly build an environment where Cloudera and Hadoop software can be installed.",
        "Ability to automate the installation of software across multiple Virtual Machines",
        "Upgrade the Cloudera and Hadoop Version to the next version of Hadoop"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Suggested course curriculum to follow ..."
        ],
        "First Steps. Bring up the Environment": [
          "Course Notes and Resources",
          "Stepping through the MultiNode Virtual Machine topology we are going to build.",
          "Short background on the Cluster that it about to be built"
        ],
        "Install Hadoop with CDH 5.7.2": [
          "Install Hadoop with CDH 5.7.2 - Part I",
          "Install Hadoop with CDH 5.7.2 - Part II",
          "Install Hadoop with CDH 5.7.2 - Part III"
        ],
        "Upgrading Cloudera Manager": [
          "Prep for Hadoop CDH 5.8.2 Upgrade",
          "First steps - Upgrade Cloudera Manager to 5.8.2",
          "Part I - Upgrade Cloudera Agents to 5.8.2",
          "Part II - Upgrade Cloudera Agents to 5.8.2",
          "Part III - Upgrade Cloudera Agents to 5.8.2"
        ],
        "Upgrading Hadoop": [
          "Part I - Upgrade Hadoop Cluster to CDH 5.8.2",
          "Part II - Upgrade Hadoop Cluster to CDH 5.8.2"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming or scripting experience is required.",
        "You will need a desktop PC and an Internet connection. The course is created with Windows in mind.",
        "The software needed for this course is freely available",
        "You will require a computer with a Virtualization chipset support - VT-x. Most computers purchased over the last five years should be good enough",
        "Optional : Some exposure to Linux and/or Bash shell environment",
        "64-bit Windows operating system required (Would recommend Windows 7 or above)",
        "This course is not recommened if you have no desire to work with/in distributed computing",
        "This course is built on top of - \"Real World Vagrant - Automate a Cloudera Manager Build\""
      ],
      "description": "Note : This course is built on top of the \"Real World Vagrant - Automate a Cloudera Manager Build - Toyin Akin\" course\n\n.\n\nUpgrading Cloudera Manager enables new features of the latest product versions while preserving existing data and settings. Some new settings are added, and some additional steps may be required, but no existing configuration is removed.\nUpgrading Cloudera Manager\nThe process for upgrading Cloudera Manager varies depending on the starting point. Categories of tasks to be completed include the following:\nInstall databases required for the release. In Cloudera Manager 5, the Host Monitor and Service Monitor roles use an internal database that provides greater capacity and flexibility. You do not need to configure an external database for these roles.\nUpgrade the Cloudera Manager Server.\nUpgrade the Cloudera Manager Agent. You can use an upgrade wizard that is invoked when you connect to the Admin Console or manually install the Cloudera Manager Agent packages.\nUpgrading CDH\nCloudera Manager 5 can manage both CDH 4 and CDH 5. To benefit from the most current CDH features, you must upgrade CDH.\n.\n\nHere I present a curriculum as to the current state of my Cloudera courses.\nMy Hadoop courses are based on Vagrant so that you can practice and destroy your virtual environment before applying the installation onto real servers/VMs.\n.\nFor those with little or no knowledge of the Hadoop eco system Udemy course : Big Data Intro for IT Administrators, Devs and Consultants\n.\nI would first practice with Vagrant so that you can carve out a virtual environment on your local desktop. You don't want to corrupt your physical servers if you do not understand the steps or make a mistake. Udemy course : Real World Vagrant For Distributed Computing\n.\nI would then, on the virtual servers, deploy Cloudera Manager plus agents. Agents are the guys that will sit on all the slave nodes ready to deploy your Hadoop services Udemy course : Real World Vagrant - Automate a Cloudera Manager Build\n.\nThen deploy the Hadoop services across your cluster (via the installed Cloudera Manager in the previous step). We look at the logic regarding the placement of master and slave services. Udemy course : Real World Hadoop - Deploying Hadoop with Cloudera Manager\n.\nIf you want to play around with HDFS commands (Hands on distributed file manipulation). Udemy course : Real World Hadoop - Hands on Enterprise Distributed Storage.\n.\nYou can also automate the deployment of the Hadoop services via Python (using the Cloudera Manager Python API). But this is an advanced step and thus I would make sure that you understand how to manually deploy the Hadoop services first. Udemy course : Real World Hadoop - Automating Hadoop install with Python!\n.\nThere is also the upgrade step. Once you have a running cluster, how do you upgrade to a newer hadoop cluster (Both for Cloudera Manager and the Hadoop Services). Udemy course : Real World Hadoop - Upgrade Cloudera and Hadoop hands on",
      "target_audience": [
        "Software engineers who want to expand their skills into the world of distributed computing",
        "System Engineers that want to expand their skillsets beyond the single server",
        "Developers who want to write/test their code against a valid distributed enviroment"
      ]
    },
    {
      "title": "Coding Interview Bootcamp",
      "url": "https://www.udemy.com/course/coding-interview-bootcamp/",
      "bio": "Comprehensive and easy to follow guide in preparing for your upcoming coding interview",
      "objectives": [
        "Master the most frequently asked questions by software engineering interviewers",
        "Perform confidently in coding interviews",
        "Get that job offer!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Content",
          "How to approach interview questions",
          "What you'll need for this class",
          "What you'll gain at the end of this class"
        ],
        "Arrays and Strings": [
          "Merge Arrays: Problem Statement",
          "Merge Arrays: Solution",
          "Merge Arrays: Complexity",
          "Reverse Sentence: Problem Statement",
          "Reverse Sentence: Solution",
          "Reverse Sentence: Complexity",
          "Max Difference: Problem Statement",
          "Max Difference: Part I Solution",
          "Max Difference: Part II Solution",
          "Max Difference: Complexity"
        ],
        "Linked Lists": [
          "Reversing a Linked List: Problem Statement",
          "Reversing a Linked List: Solution",
          "Reversing a Linked List: Complexity",
          "Remove Kth: Problem Statement",
          "Remove Kth: Solution",
          "Remove Kth: Complexity",
          "Detecting Cycles: Problem Statement",
          "Detecting Cycles: Solution",
          "Detecting Cycles: Complexity"
        ],
        "Recursion": [
          "Eight Queens: Problem Statement",
          "Eight Queens: Part I Solution",
          "Eight Queens: Part II Solution",
          "Eight Queens: Complexity",
          "String Permutation: Problem Statement",
          "String Permutation: Problem Solution",
          "String Permutation: Complexity",
          "Towers of Hanoi: Problem Statement",
          "Towers of Hanoi: Part I Solution",
          "Towers of Hanoi: Part II Solution",
          "Towers of Hanoi: Complexity"
        ],
        "Trees": [
          "Overview of Trees",
          "Breadth First Search: Overview",
          "Breadth First Search: Solution Part I",
          "Breadth First Search: Part II",
          "Breadth First Search: Solution Part III",
          "Depth First Search: Overview",
          "Depth First Search: Solution",
          "Depth First Search: Analysis",
          "Red Black Trees Overview",
          "Red Black Trees Final Note"
        ],
        "Conclusion": [
          "You made it!",
          "General Interviewing Tips",
          "Closing Remarks"
        ]
      },
      "requirements": [
        "Basic programming fundamentals",
        "Have coded in at least one language before this",
        "Any language can be used, compiling the programs is not necessary"
      ],
      "description": "Who This Class is For\n\nThe ideal student for this course is someone who wants a comprehensive and easy to follow guide in preparing for coding interviews. They can be someone who's completely new to coding interviews (ie new grad, or someone going through a career change), or someone who hasn't done them in a while and wants to brush up for an upcoming interview.\n\nWhat You Will Achieve at the End of this Class\nWhat I hope to achieve with you at the end of the class is a better awareness and preparedness of what questions tech companies ask, and how to prepare for those questions. Even if the question isn't exactly the same, you'll recognize the pattern, and be able to start solving and speaking intelligently to the problem.\nSteps for the Rest of the Class\nEvery coding interview I've done (with a few exceptions) has included whiteboarding. If you're coding remotely, it'll most likely be a word document with no compiler. There are some companies that will provide a platform that runs test cases through your program. This class is intended for the majority of companies that still whiteboard.\nTherefore, it's smart to use pen(pencil) and paper to follow along with the lectures as I type and make your own notes. Try to solve the problem on your own before you look at the solution, and then compare your solution to mine. How do they differ and why? Each problem set will include a problem statement, a strategy for solving, a solution, and Big O complexity analysis (how efficient is our solution?) Go over the sections that you don't understand, because it will make you feel more confident.",
      "target_audience": [
        "Seasoned software professionals looking to prepare for their upcoming job interview",
        "Recent grads who want to get their first job out of college",
        "Anyone's who's made a career change from another field and wants to get their first software job"
      ]
    },
    {
      "title": "SonarSource (Qube, Cloud and Lint) Crash Course",
      "url": "https://www.udemy.com/course/sonarsource-qube-cloud-and-lint-crash-course/",
      "bio": "750+ Students! Master SonarQube, SonarCloud and SonarLint, All in one!",
      "objectives": [
        "Install JDK 11 and SonarQube",
        "Understand SonarQube Architecture",
        "Understand the Concept of WaterLeaks(and Quality Gates)",
        "Set up Sonar Scanner (for Python Scripts)",
        "Install Python on Windows/Mac/Linux",
        "How to use keyboard shortcuts with SonarQube/Cloud",
        "Use Plugins/Quality Profiles and Quality Gates",
        "Complete DevOps cycle with SonarCloud, GitHub and Travis CI (with Continuous Integration)",
        "Integrate SonarLint with PyCharm/Eclipse and SonarQube"
      ],
      "course_content": {},
      "requirements": [
        "An Internet connection",
        "A working Computer with either Windows/MacOS or Linux",
        "A desire to learn and Crush It!",
        "Elementary knowledge of Unix/Linux can help you, but not needed",
        "Elementary knowledge of Python/DevOps can help you, but not needed"
      ],
      "description": "Always have a hard time maintaining Code Quality? Having a hard time getting your developers to maintain the same standards across applications? Always have problems before a release?\nWhether you are a Software Architect looking to enforce standards or a developer looking for a one stop shop to manage your entire Devops cycle with configuration you setup, SonarSource has the solution for you!\nYou will get a quick grasp on SonarSource Products. SonarQube is where you setup your standards, and quality checks, You then run scanners against your code which are compatible with 25+ languages. SonarCloud provides the same service from the Cloud. SonarLint Integrates with your IDE and fixes issues right at the source.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.\nIntroduction\nSign In and Signup for SonarQube. Get Familiar with the User Interface, so it doesn't look like a strange land to you as we continue on our journey. Setup SonarQube on your local machine, whether it's on a Mac/Windows or Linux. We will Install JDK 11.\nArchitecture and Concepts\nUnderstand the Architecture of SonarQube and the reason we use SonarSource products with the WaterLeak concept.\nFirst Project\nThe goal is to create a simple project which we can use to test our Sonar Scanner. We will be using Python, for those of you new to python, there are lectures explaining what you need. We run the scanner against our project to check for bugs/vulnerabilities/code smells.\nSonarQube Efficiency\nDon't be slow, use keyboard shortcuts and get 10x faster. Also, learn about the use of Quality Profiles and Quality Gates.\nSonarCloud and CI Integration\nUse SonarCloud and Integrate it with the rest of your DevOps Cycle. We demonstrate the integration with Travis CI and Github.\nSonarLint\nIntegrate SonarLint with Eclipse and PyCharm. Integrate it with SonarQube.",
      "target_audience": [
        "Students trying to get a quick grasp of SonarQube/SonarCould or SonarLint",
        "Developers looking to monitor their code quality with SonarQube",
        "Developers looking to automatically maintain code standards via CI tools like Travis CI",
        "Devs looking to check code standards while programming in their favorite editor",
        "Software Architects trying to improve overall code quality at all levels, development, code reviews and releases",
        "Those who like sonar :)"
      ]
    },
    {
      "title": "Mastering OpenAI & Google Gemini APIs: Build AI Applications",
      "url": "https://www.udemy.com/course/how-to-use-chatgpt-and-openai-api-for-developers/",
      "bio": "Integrate OpenAI Chat, Vision, Speech & Gemini APIs. Master Prompt Engineering, RAG, MCP, Fine-Tuning & Deployment",
      "objectives": [
        "What is the OpenAI API",
        "LLMs, transformers, and high level how they work",
        "How to generate text with the OpenAI API",
        "How to summarize with OpenAI API",
        "How to translate with OpenAI API",
        "How to Fine Tune GPT 3.5 Turbo",
        "How to use OpenAI API with other libraries",
        "Deploying OpenAI applications with GCP and AWS",
        "How to use GPT Builder to create custom GPTs"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of Python and development environments",
        "Basic understanding of AWS, GCP, or a deployment environment"
      ],
      "description": "Ready to build powerful applications fueled by leading Large Language Models? This comprehensive course provides developers with the practical skills to harness the OpenAI API ecosystem and the Google Gemini & Translate APIs. Go beyond theory and learn to integrate cutting-edge AI capabilities into your projects, from setup and prompt engineering to fine-tuning and deployment.\nWe cover the essential concepts and provide hands-on examples to ensure you can confidently build real-world AI solutions. Whether you want to create intelligent chatbots, automate content creation, translate languages, generate images, or analyze data with computer vision, this course provides the roadmap.\nIn this course, you will master:\nLLM & Prompt Engineering Fundamentals: Understand Transformers, advanced Prompt Engineering (Zero/Few-Shot, Chain of Thought, Frameworks, Evaluation), RAG, AI Agents, and Open vs Closed Source Models.\nOpenAI API Setup & Architecture: Get your OpenAI API Key, set up your environment, understand pricing/limits, and grasp essential AI Application Architecture principles.\nCore OpenAI APIs (Text & Chat): Utilize the Completions API and Chat Completion API for tasks like translation, summarization, sentiment analysis, classification, and building interactive chatbots (including a financial statement analysis project).\nOpenAI Multimodal APIs: Integrate Image Generation (DALL-E), Text-to-Speech (TTS), and Computer Vision (GPT-4V) capabilities into your applications with practical examples (phone wallpapers, blog post transcription, calorie counting).\nGoogle Gemini & Translate APIs: Get started with the Google Gemini API via AI Studio & Colab, explore Large Context Window use cases, and leverage the Google Translate API for basic and advanced translation tasks (including a subtitle translation project).\nBuilding RAG Pipelines: Implement Retrieval Augmented Generation (RAG) from scratch to ground LLM responses in external data.\nFine-Tuning & Deployment: Learn the concepts of Fine-Tuning, fine-tune a model using the OpenAI API, use GPT Builder, and understand how to deploy an AI application.\nAI Ethics: Discuss the crucial dos and don'ts of responsible AI development.\n\n\nThis course is designed for developers, engineers, and technical individuals aiming to build practical AI applications. By the end, you'll possess the skills to leverage the OpenAI and Google AI ecosystems effectively and ethically.\nEnroll today and start building the next generation of AI-powered applications!",
      "target_audience": [
        "Beginner Python users and software engineers that want to develop an AI application with OpenAI API",
        "Entrepreneurs that want to build their own AI application",
        "Software engineers that want to create AI applications"
      ]
    },
    {
      "title": "1200+ Java Interview Questions - Practice Tests",
      "url": "https://www.udemy.com/course/java-interview-questions-practice-tests/",
      "bio": "Supercharge Your Java Interview Success! Practice Tests, Master Key Concepts, and Land Your Dream Role!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "\"Unlock Your Java Potential: Excel in Interviews and Beyond\" is a complete guide to mastering Java programming and acing technical interviews. This comprehensive course covers all the necessary topics, including fundamental concepts like data types, variables, and arrays, as well as advanced topics such as serialization, networking, and Java environment essentials.\n\n\nBy engaging in a range of interactive practice tests, and coding exercises, and receiving expert insights, you will acquire the skills and self-assurance required to excel in interviews and secure your desired job in the tech industry. This course caters to both beginners looking to enter the world of Java programming and experienced developers who are aiming to advance their careers. Regardless of your level of expertise, this course has something beneficial for everyone.\n\n\nGet ready to enhance your coding proficiency, improve your problem-solving skills, and distinguish yourself from the competition. Our comprehensive guidance and practical examples will help you establish a strong footing in Java programming, making you a highly desirable candidate in the job market.\n\n\nJoin us on an exciting journey to master Java programming. Enroll now and unlock your full potential in this dynamic field of software development. This is your first step towards a successful career in the world of Java programming. Don't wait, enroll now to start your journey towards Java mastery.",
      "target_audience": [
        "Anyone interested in learning Java programming from scratch or refreshing their knowledge to stay competitive in the job market.",
        "Individuals preparing for technical interviews at companies that require strong Java programming skills, including software development firms, technology startups, and IT consulting companies.",
        "Professionals in the IT industry seeking to advance their careers by mastering Java development and preparing for job interviews.",
        "Enthusiasts who enjoy coding challenges and want to test their Java programming knowledge with practical exercises and interview-style questions.",
        "Students studying computer science or software engineering who want to solidify their Java programming skills and enhance their employability."
      ]
    },
    {
      "title": "Learn Image Processing like Engineers do ! | Online Course",
      "url": "https://www.udemy.com/course/learn-image-processing-like-engineers-do/",
      "bio": "Discover, Build and Launch ! .Digital image processing complete course for absolute beginners-(Theory,Apps & Projects).",
      "objectives": [
        "Digital image processing",
        "MATLAB",
        "Understand how some softwares and apps work !",
        "Necessary knowledge to build and sell DIP softwares or plugins",
        "Bring your ideas to life training through our projects",
        "Use this knowledge and launch your own startup !"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Matrices",
          "Arithmetic Ops.",
          "Concept of an image in digital computers",
          "How powerful is Matlab ?",
          "No Matlab ? ,No Problem ! ( FREE SOLUTION )"
        ],
        "Sampling and Quantization": [
          "Sampling - Better understanding with 1D signals case",
          "Aliasing",
          "Qunatization I",
          "Quantization II",
          "Quantization error",
          "How an image is represented on a computer"
        ],
        "Basics": [
          "Reading images",
          "Displaying images",
          "Writing images",
          "Image classes",
          "Matlab functions",
          "Converting between classes"
        ],
        "Getting started with DIP": [
          "Array indexing",
          "Project 1",
          "Drawing shapes",
          "Project 2 - wowface"
        ],
        "Intensity Transformations": [
          "Intensity Transformations",
          "Contrast stretching",
          "Image scaling",
          "Project 3 - Zooming project"
        ],
        "Histogram processing": [
          "Histogram processing",
          "Histogram equalization",
          "Adaptive histogram",
          "Histogram of colored images"
        ],
        "Spatial filtering": [
          "Spatial filtering",
          "Mechanism of spatial filtering",
          "Non linear spatial filtering",
          "Contra-Harmonic Mean filter",
          "Project 4 - Blur license plates",
          "The laplacian mask"
        ],
        "Frequency filtering": [
          "Introduction to frequency filtering",
          "Programming the DFT",
          "Example of DFT on a signal",
          "Logarithmic transformations",
          "Computing and visualizing the 2D DFT",
          "Convolution theorem - part I",
          "Convolution theorem - part II",
          "Padding vs No padding - part I",
          "Padding vs No padding - part II",
          "Fundamental steps in DFT filtering",
          "Obtaining frequency filters from spatial filters - part I",
          "O.F.F.S.F - part II (Edge Detection)",
          "Lowpass filters",
          "Highpass filters",
          "Highpass filters - Application",
          "High frequency emphasis",
          "High frequency emphasis - Application",
          "Bandpass & Bandreject filters",
          "Bandpass & Bandreject filters - Application",
          "Hybrid images",
          "Project 5 - Albert Einstein and Marlyn Monroe anecdote"
        ],
        "Geometric operations": [
          "Geometric operations - Introduction",
          "Scaling",
          "Shrinking",
          "Local neighborhood Algorithm",
          "Rotation",
          "Rotation - Application",
          "Reflection",
          "Reflection - reconstruction of an animal's face"
        ]
      },
      "requirements": [
        "Basic mathematics",
        "MATLAB software (If you don't own Matlab ,there is a FREE solution !!! )",
        "Familiar with Matlab programming (Optional !)",
        "Multivariable calculus (preferable !)"
      ],
      "description": "Digital images are everywhere these days – in thousands of scientific (e.g., astronomical, bio-medical), consumer, industrial, and artistic applications. Moreover they come in a wide range of the electromagnetic spectrum - from visible light and infrared to gamma rays and beyond. The ability to process image signals is therefore an incredibly important skill to master for engineering/science students, software developers, and practicing scientists.\nImage processing is the analysis and manipulation of a digitized image using mathematical modeling in oder to improve its quality . In the last few years, there has been a revolution in the image processing field especially when A.I was involved giving birth to a lot of new startups that will shape our near future ! .Some billion dollars companies are already doing so like Snapchat and other sillicon valley startups... .\n\n\nThis course will cover the fundamentals of image and video processing. We will provide a mathematical framework to describe and analyze images and videos as two-dimensional signals in the spatial and frequency domains.\nIn this class not only will you learn the theory behind fundamental processing tasks including image enhancement, filtering, and image compression - but you will also learn how to perform these key processing tasks in practice using state-of-the-art techniques and tools.Like the image processing toolbox provided by MATLAB.\nWe have found that working on projects and solving problem sets is the most effective method to learn image processing. The theory (barring advanced topics) is basically discrete math; it can be looked up easily on the Internet. Intuition and mental visualization of algorithms are very important, and they come only through experience and that is exactly what we are offering you through our learning system !.\nAll lectures are equipped with manually generated & high quality closed captions in English and new languages are going to be added soon to help you learn with your native language !\nif you are a beginner in the image processing field ,this is your chance to get the necessary concepts in this business.We will be using the MATLAB software in order to complete all of our projects and applications but you don't have to worry because we have a solution for the software inside the course .",
      "target_audience": [
        "Engineering students",
        "Scientists",
        "High-tech startups Entrepreneurs",
        "Programmers",
        "Interested in Artificial intellegence (image processing topic)",
        "Anyone eager to learn !"
      ]
    },
    {
      "title": "Build API Servers with Rust and Actix",
      "url": "https://www.udemy.com/course/learn-rust-actix-web-and-sqlx/",
      "bio": "Learn to Build API Servers Using Actix Web and SqlX and Create a Twitter Api Clone",
      "objectives": [
        "Understand how to build Web Api with Actix Web",
        "Understand how to Query and Update databases with SqlX",
        "Understand coding in Rust using design patterns and loosely coupled architecture",
        "Use Docker within examples to gain practical knowledge on how to build modern services"
      ],
      "course_content": {
        "Overview of Actix Web": [
          "Introduction: What We will Learn",
          "Architecture of Actix Web",
          "Extractors: Introduction and App State",
          "Extractors: The Core Extractors Path and Json",
          "Extractors: Multipart, Handling Forms and Files",
          "Response",
          "Error Handling",
          "Handlers"
        ],
        "Overview of Sqlx Crate": [
          "Introduction: What We Will Learn",
          "Learning SQLX Database Driver"
        ],
        "Let's Build Our App!": [
          "Introduction: What We Will Learn",
          "Overview of Project Structure",
          "First Layer: Data Access",
          "Second Layer: Actix Web App Instance"
        ]
      },
      "requirements": [
        "Intermediate Rust language knowledge and several years experience building servers in any language"
      ],
      "description": "Get a conceptual understanding of Actix Web's architecture and learn about its many features and capabilities.\nLearn how to setup and initialize an Actix Web Server. Learn how to build Route Handlers that respond to requests. Create unique Extractors to receive parameters in a type safe way. Handle Errors that may occur during Route Handler processing.\nUnderstand how SqlX works and how to query databases. Use SqlX to connect to Postgres, through a Docker image, and do CRUD operations like select, insert, update, and delete. Learn how to perform transactions in SqlX and how to exit a transaction early if an error occurs. Also learn about SqlX's database migration capabilities, so that you can create and modify schema as data needs change.\nLearn how to structure an Api Server. Creating Separation of Concerns, Encapsulation, and loose coupling of code. This will enhance your ability to continue building on the original application.\nGain practical understanding on the code base for a large and realistic Twitter Api clone. We will be diving deep into Actix Web Routing, Extractors, Responders, Error Handling, SqlX queries, and more.\nAll Course projects are built using Docker images containing both the Actix Web Server and Postgres database as needed for the lessons.",
      "target_audience": [
        "Intermediate Rust Programmers interested in gaining more advanced skills"
      ]
    },
    {
      "title": "Event Sourcing & Event Modeling - Getting Started!",
      "url": "https://www.udemy.com/course/event-sourcing-event-modeling-getting-started/",
      "bio": "Build a strong foundation around event sourcing and event modeling to design, model, and implement robust systems!",
      "objectives": [
        "Learn and understand the essence of Event Sourcing",
        "Model information systems using Event Modeling",
        "Learn how to implement event-sourced systems",
        "Apply learnings in practice through hands-on excercises",
        "Learn and understand the latest innovations like DCB"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Course Overview",
          "About the Technology Stack Used in This Course"
        ],
        "Concepts and Terminology": [
          "Introduction",
          "Commands, Queries, and Events",
          "Commands, Queries, and Events",
          "Command Query Separation (CQS)",
          "CQS",
          "Command Query Responsibility Segration (CQRS)",
          "CQRS",
          "Event Sourcing",
          "Event Sourcing -- Additional Reading",
          "Event Sourcing",
          "Combining Event Sourcing with CQRS",
          "Combining Event Sourcing with CQRS",
          "Event Streaming",
          "Event Streaming",
          "Event Modeling",
          "Event Modeling",
          "Domain-Driven Design (DDD)",
          "Domain-Driven Design (DDD)",
          "Event Sourcing with CQRS and DDD",
          "Vertical Slices",
          "Vertical Slices",
          "Summary",
          "Glossary Reference"
        ],
        "Event Modeling - Getting Started": [
          "Introduction",
          "Event-Sourced vs State-Stored Systems in Event Modeling",
          "The Main Building Blocks",
          "Brainstorming and Exploring the Domain",
          "Wireframes & UI Mockups",
          "State-Change Pattern",
          "State View Pattern",
          "Automation Pattern",
          "Translation Pattern",
          "The Patterns are Independent of Implementation",
          "Swimlanes",
          "Information Completeness Check",
          "Given When Thens (GWTs)",
          "Slices",
          "Summary"
        ],
        "Functional Event Sourcing and Domain Modeling": [
          "Introduction",
          "Three Fundamental Functions: Decide, Evolve, and React",
          "Decider Pattern",
          "View Pattern",
          "Saga Pattern",
          "Combining Deciders, Views, and Sagas",
          "Knowledge Check: Decider, View, and Saga",
          "Summary"
        ],
        "The Application Layer": [
          "Introduction",
          "Aggregates",
          "Materialized View",
          "Ephemeral View",
          "Saga Manager",
          "Note on Extensibility",
          "Orchestration and Choreography",
          "Application Styles",
          "Knowledge Check: The Application Layer",
          "Summary"
        ],
        "The Infrastructure Layer": [
          "Some Event Store Options",
          "Some Event Streaming Options",
          "Additional note on event streaming"
        ],
        "Modeling a Simple Review Approval System": [
          "Introduction",
          "Exploring the UI Prototype and First Draft",
          "[Reminder] Event Modeling Flexibility",
          "Completing the Event Model",
          "Summary"
        ],
        "Implementing a Simple Review Approval System": [
          "Solution Overview",
          "Implementing the Domain Model",
          "Implementing the Application and Infrastructure Layer",
          "Integrating the UI"
        ],
        "Rethinking Event Sourcing: Dynamic Consistency Boundaries (DCB)": [
          "Introduction",
          "The Limitations of Aggregates",
          "The Relationship Between Commands and Queries",
          "Decision Models",
          "Append Conditions",
          "DCB Specification",
          "Summary"
        ],
        "Where to Go From Here": [
          "Event Sourcing and Event Modeling -- Additional Learning"
        ]
      },
      "requirements": [
        "Basic understanding of software architecture and software engineering",
        "Experience in any programming language will be beneficial for hands-on lectures",
        "A willingness to learn and challenge traditional approaches"
      ],
      "description": "Are you ready to rethink how modern systems are built?\n\nThis course will give you a solid understanding of event sourcing and event modeling, two powerful approaches for designing and implementing software close to the domain of your business.\nInstead of storing only the current state of your data, event sourcing captures every change as an immutable sequence of events. Event modeling builds on this by providing a structured way to design, visualize, and reason about your entire system through these events without going into detail about how the system is implemented.\nThroughout this course, you will:\nLearn the fundamental concepts and terminology behind event sourcing and event modeling.\nExplore how commands, events, queries,  and more work together to coordinate business processes.\nLearn how to implement event sourcing using functional patterns like deciders, views, sagas.\nDiscover dynamic consistency boundaries (DCB) — a fresh way of thinking about consistency in event-sourced systems.\nPut everything into practice by modeling and implementing a simple review approval system step by step.\nThe focus of this course is on concepts and patterns, not on a specific tool or framework. Most examples are written in Kotlin/Java, but the ideas apply to any technology stack.\nBy the end, you’ll have the knowledge and confidence to apply event sourcing and event modeling in your own projects — and to participate in ongoing discussions about where these approaches are heading.\nIf you’re a software engineer, architect, or anyone interested in better ways to model complex systems, this course is for you.",
      "target_audience": [
        "Software Engineers",
        "Software and Solutions Architects",
        "IT Leads and Engineering Managers",
        "Product Management"
      ]
    },
    {
      "title": "Microservices Fundamentals - Gain Solid Understanding",
      "url": "https://www.udemy.com/course/microservices-fundamentals-gain-solid-understanding/",
      "bio": "Master the most popular Software Architecture Style",
      "objectives": [
        "Deep Dive into Microservices architecture with examples and hands-on lectures",
        "Learn about Microservice architecture and deployment",
        "Understand how Microservices interact with each other with examples",
        "Learn to deliver Microservices",
        "In-depth understanding on how to build Microservices",
        "Learn Microservices security"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction & Agenda",
          "What to expect rom this course?"
        ],
        "Getting started with Microservices": [
          "Introduction to Microservices",
          "Definition of Microservices",
          "12 Factor App Methodology in Microservices",
          "Core concept of Microservices",
          "How to implement Microservices"
        ],
        "Why should you use Microservices?": [
          "The Monolith",
          "Should I use Microservices?",
          "Overcoming Microservices Complexity"
        ],
        "Architecting Microservices": [
          "How to Architect a Microservice?",
          "Docker Fully Explained",
          "Install Docker on VM",
          "How to install Docker on Windows"
        ],
        "Building Microservices Demo": [
          "Building Microservices"
        ],
        "Communicating between Microservices": [
          "Communicating between Microservices",
          "AWS Autoscaling Demo"
        ],
        "Securing Microservices": [
          "Securing Microservices",
          "AWS Route 53 Demo"
        ],
        "Delivering Microservices": [
          "Delivering Microservices"
        ],
        "Break a Monolith Application into Microservices": [
          "Hands-on Challenge Project"
        ],
        "Conclusion: Resources": [
          "Download Resources"
        ]
      },
      "requirements": [
        "Basic computer experience",
        "Cloud computing fundamentals is desirable but not required"
      ],
      "description": "This Microservices Fundamentals - Gain Solid Understanding course teaches you the fundamentals of Microservices. A microservices architecture consists of a collection of small, autonomous services. Each service is self-contained and should implement a single business capability within a bounded context. A bounded context is a natural division within a business and provides an explicit boundary within which a domain model exists.\nThis course is also extremely useful if you are starting your journey with cloud computing. It will also help you in preparing for AWS certifications like the AWS Certified Solutions Architect Associate and AWS Certified Solutions Architect Professional or the AWS Certified Advanced Networking Specialty.\nHere's a summary of the skills you'll learn in this Microservices Fundamentals - Gain Solid Understanding course:\nMicroservices architecture\nBuilding microservices\nCommunication between microservices\nSecuring microservices\nDelivering microservices\nIf you take this course, you'll know everything there is to know about Microservices\nWhat do students say?\n\"This course is absolutely right. Very informative and presented in an amazingly clear and professional manner.\" Prakash Mehra\n\"The course content and the way Syed teaches is absolutely brilliant, I've learnt some vital information on the Microservice architecture. Really appreciate the examples and hands-on. Thank you very much.\" Chris Leroy\n\n\nWhy should you take this course and who this course is for:\nGet prepared for technical job interviews\nGain solid understanding of software architecture principles\nBy the end of this course you'll become a real expert in Microservices, and you'll be able to design advanced, robust Microservices-based systems.\nAnyone who is working with AWS networking\nStudents studying for the AWS Certified Solutions Architect Associate (additional training required)\nStudents studying for the AWS Certified Solutions Architect Professional (additional training required)\nStudents studying for the AWS Certified Advanced Network Specialty (additional training required)\nMEET YOUR INSTRUCTOR\nHi, my name is Syed Raza - I'll be your instructor for this course. We teach a combined student base of over 1+ million. I created this course to help you understand Microservices in depth. I enjoy teaching on Udemy as it allows me to leverage my knowledge and hands-on experience that I have built over the last 20 years.\nThank you\nSyed\nTeam ClayDesk",
      "target_audience": [
        "Beginner AWS students",
        "Anyone who wants to gain solid understanding in Microservices"
      ]
    },
    {
      "title": "Learn to scrape websites in Python in 3 hours",
      "url": "https://www.udemy.com/course/scrape-websites-airbnb/",
      "bio": "Learn to scrape listings from airbnb using Python, then apply your code to scrape any website",
      "objectives": [
        "🏡 Learn to scrape websites by scraping Airbnb"
      ],
      "course_content": {
        "Web scraping is just copying and pasting...with style": [
          "1.1 Intro",
          "1.2 Course Outline"
        ],
        "Getting listing information from Airbnb manually": [
          "2.1 Getting listing information manually",
          "2.2 How websites work"
        ],
        "Writing code to get information for one listing": [
          "3.1 Download VSCode to write code in",
          "3.2 Writing our first line of code!",
          "3.3 Python basics",
          "3.4 Documenting the steps for our web scraper",
          "3.5 Getting html from airbnb.com",
          "3.6 Getting information for 1 listing"
        ],
        "Formatting listings data": [
          "4.1 Formatting listings data",
          "4.2 `string`.replace(characters_to_replace, replacement)",
          "4.3 Replacing unwanted text in scrape_airbnb.py",
          "4.4 `string`.split(characters_to_split_on)",
          "4.5 Splitting guest_info in scrape_airbnb.py",
          "4.6 `string`.strip()",
          "4.7 Removing leading and trailing spaces in scrape_airbnb.py",
          "4.8 Concatenating strings",
          "4.9 Updating the link in scrape_airbnb"
        ],
        "Getting data for all listings": [
          "5.1 Now that we're done with 1 listing, let's get all the listings!",
          "5.2 Using a `for loop` to repeat code",
          "5.3 Adding conditions to for loops",
          "5.4 Updating scrape_airbnb.py to get the data for all listings"
        ],
        "Saving listings data to spreadsheet": [
          "6.1 We got all the data, now let's store it somewhere!",
          "6.2 Using lists to store data as our code runs",
          "6.3 Adding code to scrape_airbnb.py to store listings info",
          "6.4 Using dictionaries to store the data",
          "6.5 Updating scrape_airbnb.py to store info on each listing in a dictionary",
          "6.6 Saving listings data into a spreadsheet"
        ],
        "Getting listings for multiple locations": [
          "7.1 Now let's get information from multiple search results!",
          "7.2 Updating scrape_airbnb.py to get listings from multiple locations"
        ],
        "Wrapping it up": [
          "8.1 That's a wrap"
        ]
      },
      "requirements": [
        "Nope! 0 coding experience required"
      ],
      "description": "What you'll learn:\n- Go from zero coding knowledge to building a web scraper in just a few hours!\n- Scrape listings from Airbnb and learn to apply code to scrape any website you like\n- Learn critical Python skills like data structuring, formatting, loops, and storing data\n\n\nTestimonials:\n'No code is a superpower, but combining with a bit of code (Python in this case) takes things next level. Matt's one of the best teachers I know and explains complex topics in an easy to understand way. Each course is easily worth 5-10x the value he charges. Highly recommend checking it out!' -Seth, Founder of No Code MBA\n'Very well-structured and approachable way to gain an initial understanding of Python. For the past 6-months or so I have been planning to dive into a self-taught Python course which is many hours long & daunting. Once I came across your course I felt it was a great way to spend an hour or so to cover the basic aspects but also walk away with a completed activity. So thank you for creating this course!' -Mike\n'I'm loving this course! It's broken down amazingly well and I'm learning way more than I have in any other coding course I've taken.' -Lucas",
      "target_audience": [
        "Beginner Python students looking to learn to scrape websites"
      ]
    },
    {
      "title": "Pose Estimation - Deep Learning using OpenPose",
      "url": "https://www.udemy.com/course/pose-estimation-deep-learning-using-openpose/",
      "bio": "The Complete Guide to Creating your own Pose Estimation Apps: Learn the Full Workflow - Build 5 AI Apps",
      "objectives": [
        "What is Pose Estimation",
        "How to take Pose Estimation further using OpenPose",
        "Step-by-step instructions on how to execute OpenPose",
        "How to implement your own Fall Detection App.",
        "Using OpenPose to Count People",
        "Dive deeper by using Pose Estimation for Yoga Pose Identification",
        "Ensure perfect planking and push up posture with OpenPose",
        "Calculate real-time body ratios"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How to take this course.",
          "Setup & Execution of Pose Estimation",
          "Open Pose Intuition and How it Works",
          "Pose Estimation Quiz"
        ],
        "App Development with AI Pose Estimation": [
          "App 1 - Person Counter",
          "App 2 - Fall Detection",
          "App 3 – Yoga Pose Angle Corrector",
          "App 4 – Planking/ Push up Detector",
          "App 5 - Body Ratio"
        ],
        "Course Conclusion": [
          "Where to go from here? [BONUS]",
          "[NEW] XR Developers Podcast with Ritesh Kanjee"
        ]
      },
      "requirements": [
        "Background in OpenCV & Computer Vision",
        "Have prior experience in Python using Anaconda.",
        "A PC/Laptop with CUDA-enabled Nvidia graphics Card for Acceleration"
      ],
      "description": "Learn how we implemented OpenPose Deep Learning Pose Estimation Models & Build 5 Apps\nPose Estimation is a computer vision technique, which can detect human figures in both images and videos. You may have first experienced Pose Estimation if you've played with an Xbox Kinect or a PlayStation Eye. Now image developing your own Pose Estimation applications but without the specialized hardware, i.e. just using an ordinary web-cam and the power of AI!\nNow you can! Whether you want to apply this technology for character animation, video games, assisted driving systems or even medical applications, this course can help you achieve your goal in the shortest possible time.\nWhat We Cover in the Course\nWe take you on a journey, assuming you know nothing about Pose estimation, from learning the fundamentals of the technology to implementing the OpenPose Framework in real-time. We also explore how to adapt this frame work for 5 practical applications:\nFall Detection\nPeople Counting\nYoga Pose Identification\nPlank Pose Correction\nAutomatic Body Ratio Calculation, and much more\nAs you can see, you will be learning the state of the art in Deep Learning using AI to understand human actions and behaviors.\nYou also get helpful bonuses:\nArtificial Neural Network Fundamentals\nConvolutional Neural Network Fundamentals\nPersonal help within the course\nWe donate my time to regularly hold office hours with students. During the office hours you can ask me any business question you want, and we will do my best to help you. Students can start discussions and message us with private questions. We regularly update this course to reflect the current marketing landscape.\nGet a Career Boost with a Certificate of Completion\nUpon completing 100% of this course, you will be emailed a certificate of completion. You can show it as proof of your expertise and that you have completed a certain number of hours of instruction.\nIf you want to get a marketing job or freelancing clients, a certificate from this course can help you appear as a stronger candidate for Artificial Intelligence jobs.\nMoney-Back Guarantee\nThe course comes with an unconditional, Udemy-backed, 30-day money-back guarantee. This is not just a guarantee, it's my personal promise to you that I will go out of my way to help you succeed just like I've done for thousands of my other students.\nLet me help you get fast results.  Enroll now, by clicking the button and let us show you how to Develop Pose Estimation Using OpenPose.\n\n\n***Important Notes***\nThis is a practical-focused course. While we do provide an overview of OpenPose theory, we focus mostly on helping you getting OpenPose working step-by-step.",
      "target_audience": [
        "Students who want to learn how to take Pose Estimation further with OpenPose",
        "Students who are curious to learn practical approach to Pose Estimation",
        "This course is for students with Python, OpenCV or AI experience who want to learn how to do Pose Estimation."
      ]
    },
    {
      "title": "Starting With K3S (Lightweight Kubernetes) and MicroOS",
      "url": "https://www.udemy.com/course/start-with-k3s-and-microos/",
      "bio": "Get started down the path of an HA lightweight Kubernetes immutable infrastructure.",
      "objectives": [
        "What is K3s",
        "How to install K3s",
        "Managing nodes",
        "Managing K3s",
        "K3s HA setup"
      ],
      "course_content": {
        "Course Overview": [
          "Introduction",
          "What is K3S"
        ],
        "Node Setup": [
          "Installing MicroOS",
          "Set Static IP",
          "Updating MicroOS"
        ],
        "Installing K3s": [
          "Setup Master Node",
          "Setup HA Cluster",
          "Kubeconfig",
          "Modifying K3S Parameters",
          "Updating K3S",
          "Our K3S Setup"
        ],
        "Deploying Workloads": [
          "Installing Helm",
          "Installing Longhorn",
          "Troubleshooting Longhorn",
          "Lets Deploy an Application",
          "Deploy Using K3S Helm Controller"
        ],
        "Course End": [
          "Thanks for Watching"
        ]
      },
      "requirements": [
        "Basic understanding of containers",
        "What is container orchestration",
        "Linux",
        "Basic terminal text editing",
        "Basic networking"
      ],
      "description": "Lightweight Kubernetes (k3s) allows us to deploy a very low-footprint infrastructure to everything from big data centers to a Raspberry Pi that sits in remote locations. SUSE has provided us with a very simplified Kubernetes distribution that can be used in home labs for free or in data centers with vendor support. MicroOS will allow us to use an immutable operating system in which we can deploy a static system that is the same across the entire cluster. This also allows us to easily apply updates on a running system and roll back the system to a previous state at the filesystem level. Longhorn allows us to easily provision storage for our Kubernetes workloads. Helm will allow us to easily deploy applications into our environment with the simplicity of a package manager.\nIn this course, we will be setting up a high-availability Kubernetes environment sitting on top of an immutable MicroOS environment. We will start with some concepts and information about K3S. We will then move over to set up a three-node HA Kubernetes (k3s) environment. Upgrading your environment is important, and we will be updating both K3S and MicroOS.\nYou will see over an hour's worth of technical content and should be able to take this knowledge to set up a home lab or even production environment. So, join me in getting started in this exciting product developer by Rancher Labs and now owned by SUSE.\nI have been using Kubernetes for ~4 years now in both home lab and enterprise environments. I have been working in IT for over 12 years now in Linux, Windows, cybersecurity, and many other roles.",
      "target_audience": [
        "DevOps Engineer",
        "System administrator",
        "System engineer",
        "Developer"
      ]
    },
    {
      "title": "Mastering Solutions Architecture",
      "url": "https://www.udemy.com/course/mastering-solutions-architecture/",
      "bio": "Master Solutions Architecture: Build, Lead, and Deliver Scalable AI and Data Projects with Confidence",
      "objectives": [
        "The exact role of the Solutions Architect.",
        "Practical techniques to become a Solutions Architect.",
        "Structure of the Solutions Design document.",
        "Address the soft skills that make your work much easier.",
        "Approach system design problems with the right questions.",
        "Design highly scalable, highly available and performant software solutions."
      ],
      "course_content": {
        "Introduction": [
          "Getting Started",
          "Who is this course for?",
          "Course Outline"
        ],
        "Solutions Architect Role": [
          "Types of Architect",
          "Who is a Solutions Architect?",
          "Who is the client?"
        ],
        "Soft Skills": [
          "Intro to Soft Skills",
          "Communication",
          "Problem Solving",
          "Business and Strategy",
          "Soft Skills Quiz"
        ],
        "Technical Skills - Network Metrics and Protocols": [
          "Intro to Technical Skills",
          "Netwrok Metrics",
          "Network Security Protocols",
          "Directory Access Protocol",
          "Data Transfer Protocol - FTP, POP, IMAP, SMTP",
          "Data Trasnfer Protocol - TCP/IP, UDP",
          "Data Transfer Protocol - HTTP, HTTPS",
          "Security Threats",
          "Additional Internet Concepts",
          "Network Metrics and Protocols"
        ],
        "Technical Skills - Software Architecture Patterns": [
          "Intro to Software Architecture",
          "Three Tier Architecture",
          "Multi Tier Architecture",
          "Event Driven Architecture",
          "Microservice Architecture",
          "Serverless Architecture",
          "Container Architecture",
          "Architecture Comparison",
          "Quiz"
        ],
        "Technical Skills - API Design and Architecture": [
          "Intro to API Design",
          "What are the different types of APIs?",
          "REST API",
          "SOAP",
          "GraphQL",
          "Webhook",
          "gRPC",
          "WebSocket",
          "SSE",
          "API Gateway",
          "Quiz"
        ],
        "Technical Skills - System Design Key Concepts": [
          "Horizontal Scaling vs Vertical Scaling",
          "Load Balancing",
          "SQL DB vs No SQL DB",
          "Cap Theorem",
          "Database Design",
          "Caching",
          "CDN",
          "Consistent Hashing",
          "Disaster Recovery",
          "Big Data",
          "Streaming Data",
          "Map Reduce",
          "Machine Learning",
          "Quiz"
        ],
        "Solutions Architecture Processes": [
          "Intro to Solutions Architect Processes",
          "Discovery or Triage",
          "Solutions Design",
          "Solutions Design - Functional Requirements",
          "Solutions Design - Non Functional Requirements",
          "Solutions Design Review",
          "Proof of Concept",
          "Deployment",
          "Customer Satisfaction",
          "Quiz"
        ],
        "Case Study": [
          "Intro to the Case Study",
          "Problem Statement and Proposed Solutions",
          "Business Justification",
          "Risk Management and Success Metrics",
          "Assumptions and Constraints",
          "Functional and Non-Functional Requirements",
          "Data Flow, Data Model and API",
          "Technical Architecture Diagram - AWS Services",
          "Technical Architecture Diagram - ETL Task",
          "Technical Architecture Diagram - EMR CLuster",
          "Technical Architecture Diagram - REST API and Resource Costs",
          "Data Access Controls and Security Compliance",
          "Test Plan and Deployment Plan",
          "Appendix - Slack Notification | Data Analysis and Predictions"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of software engineering"
      ],
      "description": "Throughout this comprehensive course, we cover a wide range of soft skills and technical skills to help you succeed in this role. Then we go through the solutions architect processes and we finish the course with a case study for a large-scale data and AI project. For Additional learning, I have also included some interview questions to help you prepare for potential interviews for the solutions architect role. Here is the course outline in details:\n\n\nSoft Skills\nCommunication\nExcellent verbal and written communication\nTeam Collaboration\nPresentation\nLeadership\nStakeholder Management\nEmpathy\nActive Listening\nPay attention\nShow that you are listening\nListen without judgment\nAsk questions\nSummarize or paraphrase\nNegotiation\nProblem-Solving\nRequirement Analysis\nAnalytical Thinking\nDecision Making\nBusiness and Strategy\nBusiness Acumen\nCost Management\nProject Management\nTechnical Skills\nNetwork and Security Protocols\nNetwork Metrics\nNetwork Security Protocols (SSH, SSL, TLS)\nDirectory Access Protocol (LDAP)\nData Transfer Protocols (FTP, POP, IMAP, SMTP, TCP/IP, UDP, HTTP, HTTPS)\nSecurity Threats (XSS, SQL Injection, DDoS)\nAdditional Internet Concepts (DNS, URL, URI)\nSoftware Architecture Patterns\nThree Tier Architecture\nMulti-Tier Architecture\nEvent-Driven Architecture\nMicroservice Architecture\nServerless Architecture\nContainer Architecture\nAPI Design and Architecture\nREST (HTTP Methods)\nSOAP\nGraphQL\nWebhooks\nGRPC\nWebSocket\nSocket\nSSE (Server-Sent Events)\nSystem Design\nHorizontal Scaling vs Vertical Scaling\nLoad Balancing\nSQL DB vs Non-SQL DB\nCap Theorem\nDatabase design for distributed systems (Database Sharding, Database Replication, Database Partitioning)\nCaching\nCDN\nConsistent Hashing\nDisaster Recovery\nBig Data (Streaming Data, MapReduce)\nMachine Learning\nSolutions Architect Processes\nDiscover (Triage)\nSolution Design\nProof of Concept\nDeployment\nProject Closure\nCase Study\nMore Learnings\nBehavioural Interview Questions\nTechnical Interview Questions",
      "target_audience": [
        "Anyone who is willing to become a Solutions Architect",
        "Software Engineers",
        "Technical Leads",
        "Engineering Managers",
        "Solutions Designers/Engineers",
        "Application/Technical/Softwate Architects",
        "Associate Solutions Architects",
        "Solutions Architects who just entered this path",
        "Or anyone with at least 1 year of Software Development experience"
      ]
    },
    {
      "title": "JUnit and Mockito Unit Testing for Java Developers",
      "url": "https://www.udemy.com/course/junit-unit-testing-for-java-developers/",
      "bio": "Master how to use JUnit to unit test Java applications using JUnit, Mockito and Hamcrest!",
      "objectives": [
        "Be able to write unit tests confidently using JUnit",
        "Appreciate mocking and mock objects and understand how to test interactions with Mockito",
        "Be able to use Mockito to create test fixtures, stub methods by programmatic and annotation-driven test setup",
        "Understand how to analyse production code to guide writing unit tests",
        "Gain an appreciation of the JUnit Assertions API and be able to write assertions using that and Hamcrest, the popular assertions library shipped with JUnit",
        "Understand modern unit testing concepts and best practices"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course!",
          "How to get help and support",
          "Overview of the Course Structure",
          "A quick welcome and note on the course format"
        ],
        "Unit Testing Foundations": [
          "Section introduction",
          "What is Unit Testing?",
          "What is JUnit?",
          "Introducing a Simple Unit Test in JUnit",
          "Structure of a Unit Test (Arrange-Act-Assert and Given/When/Then)",
          "Conventions for Writing Unit Tests",
          "Characteristics of Proper Unit Tests",
          "What are Assertions?"
        ],
        "Creating a Java Project which uses JUnit": [
          "Section introduction",
          "Creating a Java project which includes JUnit using the Maven Quickstart Archetyp",
          "Introducing a typical Java project structure (production vs test source trees)",
          "Understanding the basic conventions for creating unit tests (package and naming"
        ],
        "Writing and Running Unit Tests with JUnit and IntelliJ IDEA": [
          "Section introduction",
          "Creating a test method with the @Test annotation",
          "Running a unit test within the IDE and understanding test success",
          "Understanding test failures with exceptions",
          "Failing a unit tests explicitly with Assert.fail",
          "Using Assert.fail to check validation logic in a try/catch",
          "An introduction to the JUnit Assertions API",
          "Structuring unit tests with Arrange/Act/Assert",
          "Understanding execution of assertions and JUnit's fail-fast test failure mechani",
          "Adding descriptive comments to assertions and test failures to aid diagnostics",
          "Coding a unit test following Arrange-Act-Assert",
          "Keeping test setup DRY with @Before",
          "Understanding test fixture instantiation"
        ],
        "Unit Testing with Mock Objects and Mockito": [
          "Section introduction",
          "What is Mockito and what are mock objects?",
          "Introduction to testing with mock objects",
          "Configuring Projects to Use Mockito",
          "Creating a project which uses JUnit and Mockito",
          "Coding a Layered Architecture - Presentation Layer",
          "Coding a Layered Architecture - Business Layer",
          "Coding a Layered Architecture - Persistence Layer",
          "Putting the correct packages in place to respect the layering",
          "Writing a test for the Login Controller in the presentation layer",
          "Understanding the test fixture setup when writing mock object based unit tests",
          "Writing a test for the Authentication Service in the business layer",
          "Thinking about design decisions when unit testing"
        ],
        "Looking at the Hamcrest Assertions Library": [
          "Section Introduction",
          "Evolving the Domain and Repository Classes",
          "Ignoring Tests with @ignore",
          "Implementing a Finder in the Repository",
          "Implementing Business Logic in the Service",
          "Configuring Maven to use Java 8",
          "Evolving the Repository Class",
          "Adding a Parameter-driven Finder to the Service",
          "Refactoring to Evolve a New Service",
          "Generating Test Methods in the IDE and Toggling Between Production and Test Code",
          "Introducing the JUnit Mockito Runner and @Mock",
          "Analyzing the Production Code to Determine How to Write the Arrange Section",
          "Using Mockito's @InjectMocks to Create the System Under Test with it's Dependenc",
          "Keep Yourself Motivated by Checking the Happy Path Test Output",
          "Using the JUnit Assertions API to write the Assert Section",
          "Thinking About the Weaknesses of the JUnit Assertions API",
          "The Importance of Checking Your Work as you Go!",
          "Upgrading a JUnit project to use the full Hamcrest version",
          "Replacing JUnit assertions with Hamcrest assertions and using assertions with co",
          "Understanding and Reading Hamcrest Test Failures",
          "Quick thoughts on Hamcrest individual vs collection Assertions",
          "Don't invoke unneeded production code in your test classes",
          "Understanding Evaluation of Hamcrest Matchers",
          "Thinking about why we keep production code to a minimum in tests",
          "Creating Complex Hamcrest Assertions with allOf and Property Matchers"
        ],
        "Wrapping Up!": [
          "Bonus: Taking your Java knowledge further"
        ]
      },
      "requirements": [
        "Have some knowledge of coding in Java to at least a basic level",
        "An awareness and excitement to learn all about unit testing with Junit, Mockito and Hamcrest!",
        "Have an interest in understanding unit testing from the ground up through theory and practical examples"
      ],
      "description": "Do you want to get hands on demonstrations of JUnit and Mockito in action, want a simple no-fluff guide to how unit testing works including getting an understanding of best practices along the way?\nAre you struggling to understand unit testing and would like a friendly guide to help you understand it all completely from the ground up?\nMaybe you're a junior Java developer who is just starting out and you need a hands-on guide to JUnit and Mockito unit testing to get up and running quickly?\nOr you might be an old hand at Java who has been out of practice and needs to level up your unit testing and JUnit and Mockito knowledge ready for a new project?\nThen this course is for you!\n\n\nWe cover the following themes:\nFoundations - this is all the good stuff that's been distilled down through the years - it's best practices and gets you up and running with knowing the stuff the APIs don't tell you\nInstallation and Set Up / Project Creation - we get you creating a project which uses JUnit and introduce you to the project structure and conventions you need to know\nWriting Tests with JUnit - we cover exactly how to write unit tests with JUnit in this section and get a feel for the API together, covering best practices and how JUnit works along the way\nWriting mock objects based unit tests with Mockito - we cover a quick start on getting up and running with Mockito to test a simple layered architecture you might find in a webapp (also coding the presentation, business and data layers in preparation to demonstrate this too!) then we demonstrate using Mockito to write tests for it\nUsing the Hamcrest assertions library - we cover how you can do more powerful assertions in your unit tests by harnessing the power of the Hamcrest assertions library that comes shipped with JUnit.\nAnd the following topics:\nArrange/Act/Assert\nAssertions\nTesting Conventions\nGood test characteristics\nJava project structure\nCreating a JUnit project with Maven\nRunning unit tests in the IDE\nTest failures\nJUnit's fail fast mechanism\nJUnit's annotations\nTest fixtures\nMock objects and their use in unit testing\nMockito basics\nLayered architecture principles\nTesting a simple layered architecture with Mockito and JUnit\nUnderstanding the different types of assertions\nUsing the JUnit Assertions API and Hamcrest\nUsing Hamcrest matchers\nComposing Hamcrest matchers and creating complex, yet readable assertions\nReading Hamcrest test failures\nAnalysing the production code to guide you to writing unit tests\nand much, much more!\nThis course takes you straight from the beginning and gets you up and running to be fully proficient at writing unit tests using JUnit, Mockito and Hamcrest in quick time. Maybe you've started a new job where they use it to test their applications, or you're learning industry-standard tools to better place you ahead of the competition or you just want to ramp up your unit testing knowledge quickly in a no-fuss guide - then this course is for you!\nUltimately, by unlocking the mechanics of how JUnit and Mockito work in front of your eyes, you should be able to better test your Java projects with the frameworks and have fun doing so!\nI look forward to teaching you all about JUnit, Mockito and unit testing inside! ;)",
      "target_audience": [
        "Developers who want to know how to write unit tests using JUnit, Mockito and Hamcrest",
        "Testers who want to better understand testing theory and be able to write their own unit tests out of interest",
        "Anyone who is hungry to learn all about the craft of writing better unit tests and understanding this from the ground up!"
      ]
    },
    {
      "title": "Learn Data Structures using C in Arabic - for beginners",
      "url": "https://www.udemy.com/course/computerscienceempire_datastructures/",
      "bio": "هياكل البيانات باستخدام لغة C",
      "objectives": [
        "Time complexity analysis basics",
        "ADT & Encapsulation idea",
        "Array-based stack",
        "Array-based queue",
        "Array-based list",
        "Linked-based stack",
        "Linked-based queue",
        "Linked-based list",
        "Binary Search Tree (BST)",
        "Dictionaries",
        "AVL trees",
        "Hash tables",
        "Graphs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "[Exclusive & temp] Summer 23' Online Camp recording": [
          "Day 1",
          "Day 2 - Task 1 review",
          "Day 2 - Session",
          "Day 3",
          "Day 4",
          "Day 5",
          "Day 6",
          "Day 7"
        ],
        "Time complexity": [
          "Time complexity"
        ],
        "ADT & Encapsulation": [
          "ADT & Encapsulation",
          "User & implementation files creation"
        ],
        "Stack - Part 1": [
          "Stack - Idea & Applications",
          "Array-based Stack - Idea",
          "Array-based Stack - Implementation"
        ],
        "Queue - Part 1": [
          "Queue - Idea",
          "Queue - Applications",
          "Queue - Variations",
          "Array-based Queue - Idea",
          "Array-based Queue - Implementation",
          "Array-based Queue - Implementation Cont.",
          "Array-based Queue - Implementation Cont.",
          "Array-based Queue - Challenge",
          "Array-based Queue - Task"
        ],
        "Dictionaries, AVL & Hashing": [
          "Dictionaries",
          "AVL tree",
          "Hashing",
          "Hash tables",
          "Hash table - insertion",
          "Hash table - collision handling",
          "Hash table - search and deletion"
        ],
        "Graph": [
          "Graph usage",
          "Graph components",
          "Directed VS undirected graph",
          "Weighted VS unweighted graph",
          "Successor and predecessor vertices",
          "Cyclic VS acyclic graph",
          "Adjacent vertices",
          "Simple path & simple cycle",
          "Types of graph",
          "Task"
        ]
      },
      "requirements": [
        "Having a PC / laptop.",
        "Knowledge of C language basics is preferred.",
        "Knowledge of functions, pointers & struct is mandatory.",
        "Knowledge of any programming language logic and concepts."
      ],
      "description": "In this course, you will learn Data structures using C in Arabic!\n\n\n[The course recording is not finished yet.]\n\n\nThe content of the course as in sections and videos;\n\n\n01: Introduction.\n\n\n02: Time complexity.\n\n\n03:\n1- Abstract Data Types (ADT) and encapsulation.\n\n\n2- User and implementation files creation.\n\n\n04:\n1- Stack - Idea & applications.\n2- Array-based stack - idea.\n3- Array-based stack - implementation.\n4- Challenge.\n5- Task.\n\n\n05:\n1- Queue - Idea & applications.\n2- Array-based queue - Idea.\n3- Array-based queue - implementation.\n4- Challenge.\n5- Task.\n\n\n06:\n1- List - Idea & applications.\n2- Array-based list - idea.\n3- Linked-based list - idea.\n4- Linked-based list - implementation.\n5- Challenge.\n6- Task.\n\n\n07:\n1- Linked-based stack - idea.\n2- Linked-based stack - implementation.\n\n\n08:\n1- Linked-based queue - idea.\n2- Linked-based queue - implementation.\n\n\n09: Revision.\n\n\n10:\n1- Tree - idea & applications.\n2- Binary Search Tree (BST).\n3- Binary Search Tree - implementation.\n\n\n11:\n1- Dictionaries.\n2- AVL.\n3- Hashing.\n4- Hash table.\n12: Graphs.\n13: Revision.\n\n\n14: What's next.\n\n\n=============\n\n\nNotes:\nIf you want to learn data structures using C, you need to know the C language important topics like pointers and struct. And if you want to learn the concepts of data structures regardless the language, you are welcome, you will know the idea of each data structure, when, where and why to use it.\nTo get the most benefit from the course, please watch the videos, read the external resources, think and try to solve the challenges and tasks.",
      "target_audience": [
        "Computer science students.",
        "Those who want to learn data structures using C language.",
        "Those who want to learn the concept and idea of data structures regardless the language."
      ]
    },
    {
      "title": "Data Structure & Algorithms Coding Challenges",
      "url": "https://www.udemy.com/course/coding-challenges-the-ultimate-course-for-programmers/",
      "bio": "Learn Data structure and Algorithm Coding Challenges with Confidence. Learn challenges.",
      "objectives": [
        "Develop Problem-Solving Skills: Learn to approach and solve a wide range of coding challenges, enhancing your ability to think critically and logically.",
        "Master Algorithm Design: Gain a deep understanding of algorithmic techniques and how to apply them to efficiently solve complex problems, optimizing your code.",
        "Improve Coding Efficiency: Enhance your coding practices by writing clean, efficient, and maintainable code, utilizing best practices and advanced programming.",
        "Prepare for Technical Interviews: Build confidence and proficiency in tackling coding challenges commonly encountered in technical interviews."
      ],
      "course_content": {
        "Prerequisities": [
          "Introduction"
        ],
        "Two Sum": [
          "Brute Force",
          "Two Pointers",
          "Hash Map",
          "Complement"
        ],
        "Merge Sorted Arrays": [
          "Extra Space & Backward Merge",
          "Coding"
        ],
        "Climbing Stairs": [
          "Recursive",
          "Recursive - Coding",
          "Memoization (DP)",
          "Tabulation (DP)"
        ],
        "Symmetric Tree": [
          "Recursive",
          "Recursive-Coding",
          "Iterative With Queue",
          "Iterative (Queue) - Coding"
        ],
        "Min Stack": [
          "Two Stacks",
          "List or Tuple",
          "Variable"
        ],
        "3Sum": [
          "Brute Force",
          "Two Pointers",
          "Two Pointers - Code"
        ],
        "Longest Substring": [
          "Brute Force",
          "Brute Force - Code",
          "Sliding Window",
          "Sliding Window - Code"
        ],
        "Container With Most Water": [
          "Two Pointers"
        ],
        "Unique Paths": [
          "Recursive"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: Familiarity with at least one programming language (such as Python, Java, C++, or JavaScript) is essential to understand and solve coding challenges",
        "Understanding of Core Programming Concepts: A solid grasp of fundamental programming concepts such as variables, loops, conditionals, functions, and data structure"
      ],
      "description": "Are you ready to take your programming skills to the next level? Join our comprehensive coding challenges course and embark on a journey from novice to ninja in the world of coding! Whether you're a beginner looking to build a solid foundation or an experienced programmer aiming to sharpen your skills, this course is designed to help you master coding challenges with confidence.\n\n\nOur course covers a wide range of topics essential for tackling real-world coding problems. You'll learn advanced algorithmic techniques, data structures, and best coding practices that will not only improve your problem-solving abilities but also make your code more efficient and maintainable. Each module is carefully crafted to provide you with in-depth knowledge and practical skills that you can apply immediately.\n\n\nOne of the highlights of this course is its focus on preparing you for technical interviews. We'll guide you through solving challenging problems similar to those asked by top tech companies, helping you build the confidence and skills needed to ace your next interview.\n\n\nJoin us today and unlock your full coding potential. Whether you're aiming for a career in tech, looking to enhance your programming skills, or simply enjoy solving coding challenges, this course is your gateway to coding excellence.",
      "target_audience": [
        "Aspiring Programmers: Individuals who are new to programming and want to develop strong problem-solving skills and a solid foundation in coding challenges.",
        "Intermediate Coders: Programmers with some experience looking to enhance their coding abilities, learn advanced techniques, and tackle more complex challenges.",
        "Coding Enthusiasts: Hobbyists and self-taught programmers who enjoy solving coding challenges and wish to continuously improve their coding proficiency and knowledge."
      ]
    },
    {
      "title": "Design pattern in C# by using professional examples",
      "url": "https://www.udemy.com/course/design-pattern-in-c-by-using-professional-examples/",
      "bio": "Concepts, class diagram along with professional examples to understand design patterns with C# and .NET",
      "objectives": [
        "Able to write clean code.",
        "Identify the most suitable design pattern to address a given application design problem.",
        "Apply design principles (e.g., open-closed, dependency inversion etc )"
      ],
      "course_content": {
        "Creational Design Pattern": [
          "Introduction",
          "Getting Started",
          "Simple Factory - Concepts",
          "Simple Factory - Implementation [Example : OnLineExam ]",
          "Factory Method Pattern - Concepts",
          "Factory Method Pattern - Implementation [ Example : OnLineExam ]",
          "Abstract Factory Pattern - Concepts",
          "Abstract Factory Pattern - Implementation - [ AbstractWidgetFactory ]",
          "Singleton Pattern - Concepts",
          "Singleton Pattern Implementation - Thread Safe and Double Check Locking",
          "Singleton Pattern Implementation - Static Initialization and Lazy Instantiation",
          "Prototype Pattern - Concepts",
          "Prototype Pattern - Implementation - [Example : General and Privilege Customer]",
          "Prototype Pattern - Shallow Copy",
          "Prototype Pattern - Deep Copy",
          "Prototype Pattern - Implementation of Both Shallow and Deep Copy",
          "Builder Pattern - Fluent Interface - Concepts",
          "Builder Pattern - Fluent Interface - [Example - Creation of Account Object]",
          "Builder Pattern - Concepts",
          "Builder Pattern - Implementation - [Ex:BankBuilder with different account types]"
        ],
        "Structural Design Pattern": [
          "Getting Started",
          "Adapter Design Pattern - Concepts",
          "Adapter Design Pattern - Implementation- [ Ex : MediaPlayer and MediaPackage ]",
          "Bridge Design Pattern - Concepts",
          "Bridge Design Pattern - Ex :Maintain persistence with type and persist mechanism",
          "Composite Design Pattern - Concepts",
          "Composite Design Pattern -Class Diagram-HTML structure with Parent and Child tag",
          "Composite Design Pattern - Implementation [ Ex : HTML Structure ]",
          "Composite Design Pattern - Client",
          "Decorator Design Pattern - Concepts",
          "Decorator Design Pattern-Class Diagram-Understanding concepts by CarRacing App",
          "Decorator Design Pattern - Implementation - CarRacingApplication Decorator",
          "Facade Design Pattern - Concepts",
          "Facade Design Pattern - Implementation [ Ex : FacadeReportGenerator ]",
          "Proxy Design Pattern - Concepts",
          "Remote Proxy - Concepts",
          "Remote Proxy - .Net Remoting Concepts",
          "Remote Proxy - Implementation [ Ex: Remotely Generate Report by using proxy ]",
          "Virtual Proxy - Concepts and Class Diagram [ Blog and Post Example ]",
          "Virtual Proxy - Implementation [ Ex : Blog and Post Lazy creation of Post ]",
          "Protection Proxy - Concepts and Class Diagram [ ReportGenerator ]",
          "Protection Proxy - Implementation - Ex: Report Generate by Manager only"
        ],
        "Behavioral Design Pattern": [
          "Getting Started",
          "Chain Of Responsibility - Concepts and Class Diagram [ Ex : ATMWithdraw ]",
          "Chain Of Responsibility - Implementation - Ex : ATMWithdraw",
          "Command Design Pattern - Concepts",
          "Command Design Pattern - Class Diagram - Ex : Calculator Application",
          "Command Design Pattern - Implementation - Ex : Calculator Application",
          "Interpreter Design Pattern - Concepts",
          "Interpreter Design Pattern - Class Diagram - Ex: Convert Roman to Number",
          "Interpreter Design Pattern - Implementation - Ex: Convert Roman to Number",
          "Iterator Design Pattern - Concepts",
          "Iterator Design Pattern - Class Diagram - Ex : Iterate Posts in Blog",
          "Iterator Design Pattern - Implementation - Ex : Iterate Posts in Blog",
          "Mediator Design Pattern - Concepts",
          "Mediator Design Pattern - Class Diagram : Ex: ChatMediator",
          "Mediator Design Pattern - Implementation : Ex: ChatMediator",
          "Memento Design Pattern - Concepts",
          "Memento Design Pattern - Implementation - Savepoint of file contents",
          "Observer Design Pattern - Concepts and Class Diagram",
          "Observer - Implementation : Ex: Notify the customers when product is available"
        ],
        "Solid Principle": [
          "Why Solid - Checkpoint to see dirty code",
          "Solid Principle - Should we give importance ?",
          "Solid Principle - Acronym",
          "Solid - Single Responsibility",
          "SRP : Ex : Loan Application which is not following SRP",
          "Open Closed Principle - Analyzing loan application",
          "Implementing SRP and OCP to Loan Application",
          "Liskov Substitution Principle - Concepts",
          "LSP - Adding \"EducationalLoan\" to existing \"LoanApplication\" - Analysis",
          "ISP - Provide solution LSP issue",
          "DIP - Ex: Adding Messenger then correct the system by using DIP"
        ],
        "End Of Course": [
          "Thank you"
        ]
      },
      "requirements": [
        "Understanding of object oriented programming concepts.",
        "Knowledge of C#."
      ],
      "description": "Creational Design Pattern\n1. Simple Factory - Creation of object by using \"CreateExam\" Method for OnlineExam.\n2. Factory Method - Creation of object by using ConcreteFactory subclasses for OnlineExam.\n3. Abstract Factory -  Creation of object for Window and Dialog with respect to different OS by using AbstractWidgetFactory.\n4. Singleton - Generic example to understand the concepts, example of static initialization and double lock checking.\n5. Prototype - Creation prototype object at run time for GeneralCustomer and PrevilegeCustomer.\n6. Builder - Creation of object in series of steps by using Fluent Interface and Bank builder for BankAccount.\nStructural Design Pattern\n1. Adapter - Adapter used in between Mediaplayer and Mediapackage\n2. Bridge - Example Used - Bridge used in between persistence mechanism and file types.\n3. Composite - Example Used - HTML tree structure with parent and child element.\n4. Decorator - Example Used - Decorating CarRacing application with stage progression.\n5. Facade - FacadeReportGenerator for different type of DB.\n6. Proxy - Example used for remote proxy, virtual proxy and protection proxy through restaurant application.\nBehavioral Design Pattern\n1. Chain of Responsibility - ATMWithdraw application for different denominator of Indian rupees.\n2. Command - Calculator Application with redo and undo features.\n3. Interpreter - Convert Roman number to number.\n4. Iterator - Iterating posts of blog.\n5. Mediator - ChatMediator for different category of users.\n6. Memento - Savepoint with file contents so that go back to previous save point.\n7. Observer - Notify all customers when product is available\nSolid Principle\n1. Checkpoint to see dirty code.\n2. Should we give importance to Solid Principle.\n3. Acronym of SOLID.\n4. SRP Concetps with violation - Example Used : Loan Application\n5. OCP : Used open and closed principle in Loan Application\n6. LSP : Violation of LSP after adding Educational Loan to Loan Application.\n7. ISP : Provide solution to LSP violation in the form of ISP.\n8. DIP : Used English and French messenger to understand the concepts in Loan Application.",
      "target_audience": [
        "Beginner, intermediate and experienced developers.",
        "Interested in design principles."
      ]
    },
    {
      "title": "Data Structures & Algorithms Cracking Coding Interviews 2023",
      "url": "https://www.udemy.com/course/coding-interview-master-data-structures-and-algorithms/",
      "bio": "Quickly prepare for cracking the coding rounds! This course covers coder interview questions and coding interview prep!",
      "objectives": [
        "Crack Coding Interviews given by both large companies and small companies",
        "Solve complex coding problems on the Whiteboard",
        "Code out important Algorithms in JavaScript",
        "Become more confident and prepared for your next coding interview",
        "Become a better Software Engineer by mastering Computer Science fundamentals",
        "Improve the efficiency, performance, and scalability of your code, applications, and programs",
        "Create your own, custom, algorithms that can perform whatever functionality you may need",
        "Become an Expert Software Engineer in your Team"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Multiple Array Algorithm and Implement a Data Structure called Set": [
          "Intersection of Two Arrays"
        ],
        "Algorithm Game": [
          "Jump Game"
        ],
        "Algorithm to dynamically find the maximum profit": [
          "Dynamically Calculate Max Profit"
        ],
        "Data Structure: Linked List": [
          "Linked List Cycle with Pointers"
        ],
        "Arrays and Missing Values": [
          "Which Numbers are Missing?"
        ],
        "Binary Search: Calculate the Square Root": [
          "Solve the Square Root"
        ],
        "Kadane's Algorithm": [
          "Maximum Array"
        ],
        "Data Structures: Queue and Stack": [
          "Implement Queues",
          "Implement Stacks",
          "Binary Tree using Recursion",
          "Stock Market Algorithm"
        ]
      },
      "requirements": [
        "Basic understanding of any programming language - this course teaches algorithms step by step"
      ],
      "description": "This is the most up to date JavaScript Coding Interview Course on Udemy. I recently added a lot of NEW CONTENT in January 2023\nThis CRASH course will teach you the most common interview questions that you'll see in a coding interviews, giving you the tools you need to crack your next technical interview in 2023.\nThis course teaches Algorithms and Data Structures in JavaScript from the ground up. Using algorithms in your programming allows you to improve the efficiency, performance, speed, and scalability of your code/applications/programs. You will learn what algorithms are, why they are important, and how to code them out in JavaScript. You will also learn other important programming concepts along the way such as functional programming, time complexity, recursion, and other important concepts, because you will be implementing them in the algorithms that you build throughout this course.\nMy job as an instructor will be successful if I am able to help you become better at coding interviews and land more jobs with higher salary. This one skill can really improve your career and I hope you sign up today to see what it can do for your career!\nThis course is also very good for anyone who is interviewing for developer/engineering jobs at both large and small companies. Interviewers will very often ask candidates to write algorithms out in code, and this course will prepare you very well to do that. If you have recently graduated from a coding bootcamp or are currently looking for a job, you will find this course to be beneficial. Knowing algorithms will absolutely help you to excel in technical interviews.\nConstant support on the Udemy Q&A forums from me!",
      "target_audience": [
        "Developers and Students who wants to learn how to code out algorithms in JavaScript",
        "Developers and Students who wants to learn how to implement algorithms in their applications",
        "Developers and Students who is currently, or will be interviewing for engineering/developer roles and wants to be well prepared for technical interview questions",
        "Developers and Students who already knows algorithms but needs a refresher",
        "Developers and Students who wants to strengthen their computer science fundamentals"
      ]
    },
    {
      "title": "The Complete Course of UML 2025",
      "url": "https://www.udemy.com/course/uml-course/",
      "bio": "Learn UML diagram in a professional way. Become an expert in visualizying systems and softwares, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master UML, to be able to draw your diagrams to provide a standard way to visualize the design any system and software",
        "You will become familiar with the UML interface tools, UML diagram, and UML notation",
        "You will be able to create and build step by step any kind of diagram, understanding all the logic and ending with advanced practical examples",
        "You will understand the fundamental concepts of SDA (System Design and Analysis)",
        "You will learn in a professional way the UseCase Diagrams, the Class Diagrams, the Sequence Diagrams, the Activity Diagrams, and the State Machine Diagrams",
        "You will master all applications of Component and Deployment Diagrams",
        "You will fully understand how to Design Patterns in UML, and you will master the Model-Driven Architecture",
        "You will extend UML for specific domains, understanding their interpretation",
        "You will work with Case-Studies, Real-world applications, and Best practices, to improve and avoid pitfalls",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the final project",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction and Background": [
          "Overview of UML (Modeling)",
          "Quiz",
          "Importance of System Design and Analysis",
          "Introduction to SDA principles"
        ],
        "Getting Started with UML": [
          "Installing UML modeling tool",
          "Basics of UML diagrams",
          "Understanding the UML notation"
        ],
        "Usecase Diagrams": [
          "Purpose and benifits of usecase diagrams",
          "Creating use-case diagrams",
          "Usecase relationships and actors"
        ],
        "Class Diagrams": [
          "Basics of Class Diagrams",
          "Class Relationships and Associations",
          "Inheritance and polymorphism in class diagrams"
        ],
        "Sequence Diagrams": [
          "Overview of Sequence Diagrams",
          "Lifelines and Activations",
          "Communication and Interactions in Sequence Diagrams"
        ],
        "Activity Diagrams": [
          "Introduction to Activity Diagrams",
          "Action nodes and control flow",
          "Decision nodes and merge node"
        ],
        "State Machine Diagrams": [
          "Basics of State Machine Diagrams",
          "States Transitions and Events",
          "Hirerichial State Machine Diagrams"
        ],
        "Component and Deployment Diagrams": [
          "Understanding Component Diagrams Diagrams",
          "Deployment Diagram for system Architecture",
          "Node and Communication in Deployment Diagrams"
        ],
        "Advance UML concepts": [
          "Design Patterns in UML",
          "Model-Driven Architecture",
          "Extending UML for specific domains"
        ],
        "Case Studies and Real world-applications": [
          "Analyzing and modeling real-world systems",
          "Case-Studies for successful UML implementations",
          "Best Practices and pitfalls to avoid"
        ]
      },
      "requirements": [
        "Having basic notions of UML can help, but the course starts from scratch",
        "Installing UML modeling tool (if you don't know how, don't worry, it's very easy, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become an UML professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that software engineers, developers, testers, software architects, students... can learn Unified Modeling Language (UML) from scratch to use it in a practical and professional way. Never mind if you have no experience in the software, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working in software design, we have realized that nowadays mastering UML diagram is very necessary for visualizing and understanding systems and software architectures. Knowing how to use UML can give you many job opportunities and many economic benefits, especially in the world of software development.\nThe big problem has always been the complexity to perfectly understand UML it requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith almost 11 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master UML. The course will teach you how to draw and build diagrams for understanding any kind of software architecture, in a practical way, from scratch, and step by step.\nWe will start with the installation and setup of the UML modeling tool on your computer, regardless of the features of your computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to Unified Modeling Language (UML), System Design and Analysis, and course dynamics\nInstallation of UML modeling tool\nGeneral familiarization with the UML interface tool, UML diagram and UML notation\nUseCase Diagrams\nClass Diagrams\nSequence Diagrams\nActivity Diagrams\nState Machine Diagrams\nComponent and Deployment Diagrams\nDesign Patterns in UML\nModel-Driven Architecture\nExtending UML for specific domains\nCase Studies, Real-world applications, Best practices, and pitfalls to avoid\nBuilding from scratch your UML Real-life project: a complete UML implementation\nMastery and application of absolutely ALL the functionalities of UML and all kind of diagrams\nPractical exercises and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to solve a wide variety of projects quickly and make versatile and complete use of UML diagram. And if that were not enough, you will get lifetime access to any class and I will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning UML has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used UML before",
        "Software engineers, developers, testers, software architects, students... who want to learn an efficient manner to visualize the way a system has been designed",
        "Intermediate or advanced UML diagram users who want to improve their skills even more!"
      ]
    },
    {
      "title": "AUTOSAR Application Software Layer Course (ASWL) | english",
      "url": "https://www.udemy.com/course/autosar-application-software-layer-course-aswl-english/",
      "bio": "learn in depth",
      "objectives": [
        "Foundational ASWL Concepts: Understand the fundamental principles and architectural concepts of the AUTOSAR Application Software Layer.",
        "Component Design and Integration: Learn to design and integrate different software components, enhancing system functionality and interconnectivity.",
        "Interface Management: Master the management of ports and interfaces, crucial for data exchange and system integrity within automotive software.",
        "Real-World Application Development: Apply AUTOSAR standards to develop and implement a real-world automotive software project, from planning through to executio"
      ],
      "course_content": {
        "AUTOSAR ASW Layer concepts": [
          "Introduction",
          "Use Cases of AUTOSAR Applications",
          "AUTOSAR SW “System Design Process”",
          "RTE & VFB",
          "AUTOSAR SWC (Implementation Sequence)"
        ],
        "SWCs Types": [
          "materials",
          "Application software component",
          "Service software component",
          "NVblockSwComponent",
          "Complex device driver software component",
          "Sensoractuator / ECUabstraction software components",
          "Parameter / Composition software components",
          "Software components Architecture Case Study"
        ],
        "Ports and Interfaces (sender Receiver Interface)": [
          "materials",
          "Ports / Interfaces types",
          "Sender Receiver Interface",
          "Sender Receiver Interface AR-IF ARXML",
          "Ports ARXML",
          "Case Study",
          "RTE SR APIs"
        ],
        "Client-Server Interface": [
          "Materials",
          "Client-Server Interface",
          "Client-Server arxml",
          "CS Interface (RTE Point of View)",
          "CS case study"
        ],
        "Composition and Connectors": [
          "Materials",
          "Composition and Connectors Concepts",
          "case study (COMPOSITION)"
        ],
        "Runnables": [
          "materials",
          "Runnable Entities",
          "Runnables case study",
          "Runnable Entities implementation"
        ],
        "RTE Events": [
          "materials",
          "RTE Events Overview",
          "RTE Events types",
          "RTE Events case study",
          "exclusive area"
        ],
        "RTE Layer": [
          "materials",
          "Application SWCs (ARXML, Implementation C Files)",
          "RTE Layer for Sender Receiver Interface APIs",
          "RTE Layer for Client Server Interface APIs",
          "RTE Configuration (Event to Task Mapping)"
        ],
        "AUTOSAR Data Types and Data Conversion": [
          "materials",
          "AUTOSAR data types",
          "data types (ARXML)",
          "SW base types",
          "IMPLEMENTATION DATA TYPE"
        ],
        "Door Lock indication Project": [
          "materials",
          "Non-AUTOSAR Implementation",
          "Figure out SWCs",
          "Implement Abstract DIO and PORT MCAL modules",
          "Data Types And Interfaces arxml",
          "implement SWCs part1",
          "implement SWCs part2",
          "implement SWCs part3",
          "implement SWCs part4",
          "implement SWCs part5",
          "finalize the project And compile",
          "run the project on Keil uvision And Proteuse"
        ]
      },
      "requirements": [
        "Background in Software Engineering: A basic understanding of software development principles and methodologies is recommended.",
        "Interest in Automotive Systems: While not mandatory, an interest or background in automotive technology will be beneficial.",
        "Familiarity with C Programming: Some lectures require understanding of C programming, particularly for implementing software components."
      ],
      "description": "Dive deep into the world of automotive software systems with our advanced course on AUTOSAR Application Software Layer (ASWL). Designed for experienced professionals in the automotive sector, this course provides an extensive analysis of ASW layer concepts—from software component types, ports, and interfaces, to composition, connectors, and RTE (Runtime Environment) events and layers.\nWhat You Will Learn:\nIn-depth Understanding of ASW Layer Concepts: Explore the structure and functionality of software components, ports, interfaces, and more.\nHands-on Component Integration: Gain practical skills in connecting and interfacing various automotive software components.\nExpertise in Runtime Environment: Learn about the RTE layers essential for the seamless interaction between software components and hardware.\nData Handling Skills: Enhance your ability to work with AUTOSAR types and convert data efficiently within automotive systems.\nReal-World Application: Apply your knowledge in a practical project that simulates real-world challenges in automotive software.\nWhy Choose This Course?\nTargeted Expertise: Tailored content that addresses the specific needs of automotive software engineers.\nPractical Focus: Emphasizes real-world applications and hands-on learning to prepare you for professional challenges.\nCareer Advancement: Equip yourself with advanced skills in a field at the forefront of automotive innovation.\nWhether you’re looking to advance in your current role or seeking new opportunities in automotive software engineering, this course is your pathway to becoming a leader in your field. Enroll today and take the next step in your professional journey!",
      "target_audience": [
        "Software Engineers and Developers looking to specialize in automotive software systems.",
        "Automotive Professionals aiming to upgrade their software skills in line with AUTOSAR standards.",
        "Technical Project Managers needing a deep understanding of automotive software architecture for better project oversight.",
        "Students and Academics in the fields of computer science and engineering who are interested in automotive software development."
      ]
    },
    {
      "title": "Software Engineering Interview Questions Practice Test Quiz",
      "url": "https://www.udemy.com/course/software-engineering-mcq/",
      "bio": "400 Software Engineering Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Software Engineering Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.\nEmbark on a journey to master the fundamentals and complexities of Software Engineering with our comprehensive MCQ Practice Course. Designed meticulously for beginners and professionals alike, this course covers all critical areas of software engineering, ensuring a deep and practical understanding of each concept.\nWhat You Will Learn:\nSoftware Development Life Cycle (SDLC): Dive into the various stages and models of SDLC, including Waterfall, Agile, Iterative, V-Model, Spiral, RAD, and Big Bang models. Understand the basic concepts and the unique characteristics of each model to select and apply the right approach for your project.\nSoftware Prototyping: Learn about the significance of prototyping in software development. Explore different types of prototyping like Rapid, Evolutionary, Incremental, and Extreme, and understand their advantages, disadvantages, and role in Agile development.\nSoftware Testing: Gain insights into various testing methodologies including White Box, Black Box, Unit, Integration, Regression, System, and Stress testing. This section is crucial for ensuring the reliability and performance of software applications.\nSoftware Design and Architecture: Delve into the principles of software design, familiarize yourself with different architecture styles like Monolithic and Microservices, and learn about essential design patterns such as Singleton and Observer. Enhance your skills in user interface design, database design, and API development.\nSoftware Maintenance and Evolution: Understand the basics of software maintenance, different types of maintenance activities (Corrective, Adaptive, Perfective, Preventive), and the concepts of software re-engineering and reverse engineering. Explore software configuration management and evolution models to manage and adapt software effectively over time.\nSoftware Quality Assurance (SQA): Learn about the fundamentals of SQA, various quality attributes, and quality metrics. Understand the importance of software audits, reviews, quality standards like ISO/IEC 25010, IEEE standards, and the processes of software validation and verification.\nCourse Features:\nExtensive Question Bank: Over [Number of Questions] multiple-choice questions carefully crafted to cover all aspects of software engineering.\nDetailed Explanations: Each question is accompanied by an explanation, providing a deeper understanding of the topic.\nInteractive Learning Experience: Engage in a stimulating learning experience with varied question formats to test and enhance your knowledge.\nProgress Tracking: Monitor your learning journey and understand your strengths and areas for improvement.\nResourceful for Certification Prep: An invaluable resource for those preparing for software engineering certifications or interviews.\nQuiz-Based Learning:\nOur course adopts an engaging quiz-based format, designed to challenge your understanding and application of software engineering concepts. This interactive approach makes learning both effective and enjoyable.\nWe Update Questions Regularly:\nDynamic Content: We continuously refresh our question bank to keep the content up-to-date with the latest trends and developments in software engineering.\nRelevance and Variety: New questions are added to reflect emerging technologies, methodologies, and industry best practices.\nContinuous Improvement: Based on student feedback and performance analytics, we regularly refine our questions to ensure clarity, relevance, and educational value.\nExamples of the Types of Questions You'll Encounter:\nScenario-Based Questions: Tackle real-world scenarios that test your ability to apply concepts in practical situations.\nConceptual Questions: Delve into the fundamentals and theories to solidify your understanding of core principles.\nComparative Analysis: Evaluate different methodologies, models, or technologies and understand their advantages and disadvantages in various contexts.\nProblem-Solving Questions: Test your analytical skills by solving complex problems that mimic challenges faced in actual software development projects.\nFrequently Asked Questions (FAQs):\nQ: What is the key difference between Agile and Waterfall models in SDLC?\nA: Agile is an iterative approach focusing on collaboration, customer feedback, and small, rapid releases. Waterfall is a linear and sequential approach where each phase must be completed before the next begins.\nQ: Why is prototyping important in software development?\nA: Prototyping is crucial for validating requirements and design, improving user engagement, and reducing misunderstandings between developers and clients.\nQ: What distinguishes white box testing from black box testing?\nA: White box testing involves testing internal structures or workings of an application, while black box testing focuses on the functionality of the software without peering into its internal structures.\nEnroll now and take the first step towards becoming an expert in software engineering. With this course, you'll not only prepare for exams and interviews but also build a strong foundation for a successful career in software development!",
      "target_audience": [
        "Aspiring Software Engineers: If you're starting your journey in the field of software engineering, this course will provide you with the foundational knowledge and practical insights needed to understand complex concepts and methodologies.",
        "Computer Science Students: Ideal for undergraduates or graduates in computer science or related fields, this course offers a thorough understanding of software engineering principles, preparing you for academic exams and practical applications.",
        "Professionals Seeking Refresher: Experienced professionals who wish to refresh their knowledge or stay updated with the latest trends in software engineering will find this course beneficial.",
        "IT Professionals Transitioning to Software Engineering: If you're an IT professional looking to transition into software engineering or expand your skill set, this course covers the breadth of essential topics to help you in your career shift.",
        "Candidates Preparing for Technical Interviews: Those gearing up for job interviews in software development roles will find this course a valuable resource for brushing up on key concepts and practicing problem-solving skills.",
        "Hobbyists and Tech Enthusiasts: Even if you're not pursuing a career in software engineering, but have a keen interest in understanding how software is developed and maintained, this course provides an engaging way to learn.",
        "Certification Aspirants: For learners preparing for certification exams in software engineering or related fields, this course serves as an excellent supplement to your study materials, with its extensive range of questions and answers."
      ]
    },
    {
      "title": "Crack Java Coding Interview",
      "url": "https://www.udemy.com/course/crack-java-coding-interview/",
      "bio": "Frequently Asked Java Coding Interview Questions and Solutions",
      "objectives": [
        "Learn current coding questions asked in the interviews including their solutions.",
        "Learn Core Java in the best way by hands on coding.",
        "You will learn how to write functions/methods faster as you practice hands on while watching the lessons",
        "You will be taking and owning the functions written and modify as needed to fit your needs.",
        "In this course, you will find many different lessons and you can start from any of the sections. Use them to master your learning goals.",
        "Preparing for interview is a hustle, one needs to do in order to achieve going to next round and so on. Our goal is to master Technical Interview for IT people",
        "Mastering Technical interview is one of the essential learning curve preparing for an interview. We will help you get there as much as possible.",
        "Java is used in many organizations core since for decades. They need you to maintain java codebase, it is irreplaceable component!",
        "At the end of the course, you will have access to some bonus content. It will prepare you much more going into the interviews.",
        "As you provide more interview questions in the discord, they will be solved by the community and added in the curriculum for your reference. Empower each other.",
        "You will master how to use classic for loop and make the best of String Manipulation."
      ],
      "course_content": {
        "Introduction": [
          "Introduction. Getting to know the instructor and the content.",
          "What platform are we going to use to write our codes?",
          "Resource",
          "Exercise: Odd or even"
        ],
        "Most Recent Interview Questions Solved": [
          "Find Common Characters inside given two strings",
          "Greatest ascending difference",
          "Get Duplicate Values and total Count",
          "Coding Exercise: Return common characters given two inputs"
        ],
        "Recursive Coding Revealed": [
          "Find first occurrence of given value: Find the index value via recursive call",
          "Is the array sorted ? Return true or false",
          "Coding exercise: Find first occurence"
        ],
        "Interview Basics IO events: Read Operations from standard input = STDIN": [
          "1 Read input data from stdin, via Scanner class",
          "2 Read Input from stdin via BufferedReader",
          "3 Parse and store values inside a list from stdin via Scanner,",
          "4 Get the stdin data as buffered stream and store values inside a list.",
          "5 Analysis 1: Filter Numbers from parsed data via lambda or regex statement",
          "6 Analysis 2: Filter Text from Stdin via basic regular expression"
        ],
        "Understand the class components, getters and setters.": [
          "Lesson 3 Getting Started:Survey(if not taken):",
          "Lesson 4: Understand how getters and setters work in Java",
          "Lesson 4 Part 2: Apply how getters and setters in your own program.",
          "Introduce yourself, return name and job and high school number",
          "Resource"
        ],
        "IsLetter, getCount, find and separate characters.": [
          "Solve this for starters. Easy task.",
          "IsLetter function: First part of the lesson. Note: these 3 lessons are together",
          "Find and Separate characters",
          "Lecture 8: Get count of given values. Last part of the lesson in the section.",
          "Section 3 Quiz - checkup",
          "Resource"
        ],
        "Find middle number in given integers and decimals": [
          "Find middle value of given integer numbers.",
          "Find middle value of given decimal numbers part 1",
          "Find middle value of given decimal numbers part 2",
          "Resource"
        ],
        "Count duplicates + Sum of N values": [
          "Count Duplicates",
          "Sum of n values - Solution in Java and JavaScript",
          "Resources and the basic idea for the bonus lesson"
        ],
        "Find missing number": [
          "Find missing number in given list of numbers that are consecutive",
          "Resource"
        ],
        "Find longest zeros in binary numbers such as 100001 returns 4": [
          "Binary numbers and measure distance between 1s while counting 0s.",
          "Resource"
        ]
      },
      "requirements": [
        "Basic Programming/Coding experience is needed. You will learn how to write your programs and what platforms you can use.",
        "We need you to have core java programming understanding of primitive data types and conditional statements, a little understanding of Arrays, for loops. The rest will be easy since you will build your own portfolio from ground up.",
        "We will use onecompiler website( onecompiler .com ) to write codes. We recommend if you sign in with your preferred gmail account, onecompiler will then save all your codes in your account.",
        "Understand a little about text based coding in case you have to write code in text editors(less likely but still is a case in some companies).",
        "Although, we may not use block based coding , this course is intended for any age beginners who knows basic java and highly recommended.",
        "No worries if you have no programming experience, join our discord group to get help how to get started.",
        "You should know how to use Primitive data types, if-else, switch case, for loop, while loop and similar statements. Join Discord to ask questions as needed."
      ],
      "description": "Welcome to \"Crack Java Coding Interview\" course. We have been waiting for you. Thank you for being here.\nJava has been in the IT field for years. By coding hands on as you watch video lessons, you will gain the skills to Solve given problems in java that may show up in the interviews. Some lessons may be from recent interviews collected from the local community. We aim to create a discord community to crowdsource technical java interview information. Time to time, add in resources to the course and use a discord server to discuss current and past frequently asked interview questions. Feel free to share or ask coding questions to get help and learn more about java interview questions others ask. Provide insights regarding solving the technical coding problems. Highly encourage you to do hands on coding!\nCreate a code resource depot using submitted input interview problems (thanks for joining discord 7 to 77+ server). Anyone interested in Information Technology can join. Anyone else who wants to pursue a career as an IT professional can also join and be exposed to the coding field. Join surveys sent to the discord community and submit your interview questions. Optionally ask the community to help solve the problems. Meet new people and see how they solve a coding challenge versus others.\n\n\nEnjoy watching 12+ hours of lessons, and know that I have spent 77+ hours plus a decent number of weekends to produce these valuable lesson contents. This course will wisely grow bigger and better with you all. Thank you for your participation. Good luck in your studies and job applications.\nAll in good times, never give up and keep on coding! Don't be afraid to ask for help and empower yourself by interacting with others.",
      "target_audience": [
        "Anyone who has a some coding experience can sharpen their technical skillset in this course.",
        "Anyone who want to land a job in IT field can join and learn a few good tips and tricks to use in the job interviews. Technical interview prep course will provide help with lessons, videos and interactive content.",
        "Beginners who has no programming experience can still benefit from this program, however, I request you join our live events to learn more about what you can do.",
        "Young programmers can also learn programming after they complete a mini MIT- scratch, code monkey, microbit makecode or code academy courses. That is the foundation of programming.",
        "Java is used in most teams in many companies in the IT industry",
        "Know javascript? Say this course is a good addition to your skillset."
      ]
    },
    {
      "title": "Introduction to Java unit testing with JUnit5 framework",
      "url": "https://www.udemy.com/course/introduction-to-java-unit-testing-with-junit5-framework/",
      "bio": "Hands-on experience with JUnit5 for absolute beginners",
      "objectives": [
        "JUnit5 framework basics",
        "How to create unit tests for a given class",
        "How to run unit tests",
        "How to interpret results of unit tests",
        "How to make changes in the class code and/or unit tests to fix failing tests",
        "How to find out whether all methods are covered by unit tests"
      ],
      "course_content": {
        "Introduction to unit testing": [
          "Course introduction",
          "Why do we need unit testing",
          "First unit test creation"
        ],
        "Unit tests creation for a given class": [
          "Create a new Java class to write tests for",
          "Basics methods of JUnit5 for tests creation",
          "Basic JUnit annotations",
          "Unit tests for a given class",
          "How to fix failed tests",
          "Code coverage with tests"
        ]
      },
      "requirements": [
        "Java8+ basic concepts and hands-on experience",
        "Basic knowledge of Intellij Idea IDE"
      ],
      "description": "In this course you will be guided through the basics of Java unit testing using JUnit5 framework. You do not need to have any prior JUnit experience or knowledge to take this course.  All you need to have - willingness to learn some new exiting things about unit testing on Java using JUnit5 framework and some time to write unit tests along with me.\n\n\nSome basic Java knowledge is required, you need to be familiar with some basic concepts like class, method, variables, objects, etc.\n\n\nJava 11 LTS is used in this course and examples are shown in IntelliJ IDEA. But all taught content will work fine on later versions of Java.\n\n\nWe will define a basic Java class and for each method of this class we will create unit tests, so we could be sure everything works as it should.\nThe most important topics covered in this course includes\nExplanation why we should include unit tests in each our application\nHow to define a test class, where all unit tests will reside\nImportant annotations used in test classes\nHow to interpret unit tests results\nHow to fix failed tests\nI hope you will really enjoy opening for yourself a new entertaining world of unit testing on Java!",
      "target_audience": [
        "Java developers of all levels with no prior knowledge in unit testing"
      ]
    },
    {
      "title": "OpenAI API (ChatGPT, Whisper, DALL-E) - Complete Course",
      "url": "https://www.udemy.com/course/openai-learnit/",
      "bio": "Learn OpenAI API, including ChatGPT, DALL-E, Whisper, and create powerful Web apps with Slack, Jira, Gmail",
      "objectives": [
        "OpenAI API",
        "ChatGPT",
        "Best Practices of using ChatGPT",
        "Jira Software Cloud API",
        "Slack Messenger API",
        "ChatGPT, Slack, Jira Integration via Java Spring Boot Web App",
        "Create Web App via Spring Boot, ChatGPT, Jira, Slack for Project Management Operations Automation",
        "Project Management with ChatGPT",
        "Project Governance with ChatGPT",
        "Knowledge Base Management with ChatGPT",
        "Risk Management with ChatGPT",
        "Planning and Estimation with ChatGPT",
        "Requirements creation and requirements management with ChatGPT",
        "Whisper - Speech to Text AI by OpenAI",
        "DALL-E - Text to Image AI by OpenAI"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "ChatGPT Web Application": [
          "Introduction to ChatGPT Web Application"
        ],
        "OpenAI": [
          "Intro to the OpenAI Section",
          "OpenAI: Basic Concepts",
          "OpenAI API: Create & Manage Personal Account"
        ],
        "OpenAI API: ChatGPT Model": [
          "Important note about API Testing",
          "ChatGPT: Chat API",
          "Send First Request to GPT API & Parse Response",
          "First Web Application with ChatGPT",
          "Function calling in ChatGPT",
          "GPT Best Practices"
        ],
        "Web Application Hosting at Home": [
          "Web Hosting at Home: Port Forwarding"
        ],
        "GPT + Slack Integration": [
          "Create Slack Application, Configuration of Incoming & Outgoing Webhooks",
          "Connect GPT to the Slack",
          "Context Management in Web App to Integrate with GPT"
        ],
        "Jira": [
          "The Role of Jira in our Web Application | Why this section is needed?",
          "First Project in Jira Cloud",
          "Jira API"
        ],
        "GPT + Slack + Jira + Gmail Integration": [
          "GPT + Slack + Jira Integration: Work with Jira Datasource",
          "Generate Tickets in Jira & Send Email from Slack via Chat Interface"
        ],
        "Manage a Scrum Team with ChatGPT": [
          "Managing Scrum & Risk Management with Custom Bot, Slack & GPT"
        ],
        "Fine-tuning, Creation & Training of Custom GPT Model": [
          "Fine-tuning: Key Concepts & Overview of the Process",
          "Important note about updates in GPT fine-tuning",
          "Preparing Training Dataset: Key Principles, Use cases & Examples - PART 1",
          "Preparing Training Dataset: Key Principles, Use cases & Examples - PART 2",
          "Prepare Training Dataset",
          "Create your first fine-tuned model: Part 1",
          "Create your first fine-tuned model: Part 2",
          "=== EXAM: Create and Integrate Custom ChatBot for Confluence into the Slack ===",
          "Chat Bot for Knowledge Base and How to build iterative process of fine-tuning"
        ]
      },
      "requirements": [
        "There is expectation that you are familiar with API, if not - then you need to start learning from Annex where I teach you Postman and API basics first",
        "During the course there are code examples on Java. Code examples can be written on any language, but for the demo purposes Java is used"
      ],
      "description": "In this course, we are going to Learn OpenAI API in Depth, including ChatGPT API, Whisper API & DALL-E API.\nAdvantages of this course:\nHuge amount of source code examples: Even the first edition of this course already contains around 1000 files that can be used as examples. And this is just for one project that we develop with students. Not talking about examples that I share on the slides, or during the no-code development. This course is extremely oriented on practice and business use cases. And new examples are added to the course on a regular basis, because I update this course with new use cases, with new updates after new releases of OpenAI models. We are going to develop web application to manage project management operations using OpenAI API.\nConcentration of useful materials: Cut to the chase - No water. In this course, you will not find 10 hours of lessons teaching you how to enter text in the chat GPT web application. We are going to learn a lot of things, and what is most important, we are going to learn a lot of different things.\nVast experience in the subject: my company was one of the first on the market that start consulting clients about OpenAI API since API was publicly exposed.\nQ&A Support and Close collaboration during the course: at the end of the day, you don't just get the video lessons, you also get support from me. We work in close collaboration, you ask your questions about topics discussed in the video, source code reviewed and other things. No matter what questions you have, I'm here to help.\nProfessional learning approach: I'm a tutor with 900 students from more than 200 countries around the world. I was an offline tutor for a long time, and then I founded Learn IT Online University. I have a lot of experience in communication and teaching students both: offline and online. And I can easily find the right approach to explain things, and make complex things easier to understand.\nNo drama money-back guarantee:  In case you didn't like the course, for any reason, you should explain nothing. You can easily get your money back within the 30 days after registration. I promise you. So, there is no risk at all for you. In case you don't like the course, you can quit anytime you want.\n\n\nTarget Audience of the Course:\nThis course is designed for everyone who wants to learn OpenAI API. I can say that this is the most detailed and most complete OpenAI API course available online based on today\nA significant part of the course will be dedicated to learning the OpenAI API. During the course we are going to create our own web application, and develop chat bot - that's why this course will be interesting for developers\nBut even despite the fact that I have lessons with coding examples, I still believe that this course will be interesting for Product Managers, Product Owners, and Project Managers. I know this because very often I receive requests from Product Managers asking me about capabilities of ChatGPT, business use cases, technical limitations, and similar questions. This course will help you to get a deep understanding of how OpenAI API works under the hood, and what its weak and strong sides are that you can take advantage of.",
      "target_audience": [
        "Everyone who wants to learn OpenAI API in depth",
        "Web Developers who want to create web applications using ChatGPT, DALL-E, Whisper or other capabilities of OpenAI Models",
        "Product Managers who wants to explore and learn technical details and OpenAI API limitations to udnerstand how to build products using OpenAI API"
      ]
    },
    {
      "title": "Building Deploying and Scaling LLM Powered Applications",
      "url": "https://www.udemy.com/course/building-deploying-and-scaling-llm-powered-applications/",
      "bio": "Course1 - Building and Scaling Text Summarization Service using Langchain, OpenAI and Amazon Web Services",
      "objectives": [
        "You will Learn to Build a Complete Scalable Software Application Which Is Powered By a Large Language Model And Deploy It At Scale on Amazon Web Services",
        "You Will learn to Integrate Your Application's LLM Powered Backend with Streamlit UI Frontend",
        "You Will First Learn To Locally Test Your Application , Then Package It Using Docker And Finally Learn The Best Practices For Using Streamlit Inside Docker",
        "You Will Learn a Template & Best Practices to Inject your OpenAI's API Keys Into Your Containerized Application At Run Time",
        "You Will Learn To Address Vulnerabilities In Your Containerized Application And Best Practices To Resolve Them",
        "You Will Learn to Design Your System's Architecture Based On The Components And Design Choices In Your Application",
        "You Will Learn the Differences Between Horizontal Scaling and Vertical Scaling",
        "You Will Learn in Depth to Apply Serverless Deployment and Learn To apply Load Balancers and Auto Scaling To Your Application",
        "You Will Be Able To Apply Your Learnings To Build Deploy & Scale other LLM Powered Langchain Applications"
      ],
      "course_content": {
        "Introduction and Software Installation": [
          "Introduction",
          "Installing Development Software"
        ],
        "Building And Testing Prediction Pipeline": [
          "Building A Prediction Pipeline",
          "Testing Prediction Pipeline"
        ],
        "Setting Up AWS CLI and Secrets Manager": [
          "Installing AWS CLI",
          "Setting Up Secrets Manager"
        ],
        "Integrating Secrets Manager With Prediction Pipeline": [
          "Injecting API Key From Secrets Manager into Application",
          "Feeding API Key Directly Into Prediction Pipeline"
        ],
        "Building and Testing Application Frontend": [
          "Building Front End Of Application",
          "Testing Front End Of Application"
        ],
        "Packaging And Storing Application in Elastic Container Registry": [
          "Writing Docker File",
          "Packaging Our Application and Storing on Elastic Container Registry",
          "Testing Our Packaged Application"
        ],
        "Adding Permissions For Successful Deployment": [
          "Modifying Account Permissions For Deployment"
        ],
        "Deploying and Testing Application on Elastic Container Service": [
          "Deploying Our Application on ECS",
          "Testing Our Application on ECS"
        ],
        "Scaling Our Service with Application Load Balancers and Auto Scaling Groups": [
          "Difference between Horizontal Scaling vs Vertical Scaling",
          "Building Scalable Service - Adding Load Balancer and Auto Scaling",
          "Exposing & Testing Our Service"
        ]
      },
      "requirements": [
        "Users of this course must know how to write code in Python, Basic Knowledge of Langchain ( though, it will be discussed in the course videos ), Basic Knowledge of AWS. Additionally basic knowledge of Docker is preferred but not required as the required information to package applications for deployment will be taught in the course"
      ],
      "description": "Are you ready to dive deep into the world of Machine Learning Engineering and build powerful software applications? Our Machine Learning Engineering course is designed to equip you with the skills and knowledge to harness the full potential of Langchain, integrate the OpenAI API, deploy applications on AWS Elastic Container Service, and efficiently manage scaling using Load Balancers and Auto Scaling Groups.\nIn this hands-on course, you'll learn how to create robust ML applications from the ground up. We'll start by mastering Langchain, a cutting-edge language model, and demonstrate how to seamlessly inject your OpenAI API key into the prediction pipeline at runtime. You'll gain proficiency in designing and developing ML applications that can understand, process, and generate human-like text.\nAs you progress, we'll explore the fundamental concepts of Horizontal Scaling and Vertical Scaling, providing a clear understanding of when and how to implement each strategy. You'll then discover how to scale your ML application with ease by deploying Application Load Balancers and Auto Scaling Groups on AWS, ensuring high availability and fault tolerance.\nBy the end of this course, you'll be well-versed in building ML-driven software applications, deploying them on AWS, and scaling them to meet the demands of your users. Join us on this exciting journey into the world of Machine Learning Engineering and become a skilled practitioner in this rapidly evolving field.",
      "target_audience": [
        "The focus of this course is to Introduce you to Machine Learning Engineering. This course would enable learners to build deploy and scale an end to end software application which in the backend is powered by a Large Language Model to generate results based on user given input. The main goal of this course is to teach a framework which users can repeat and apply to build other software applications which use LLMs from OpenAI, inject API Keys at run time to avoid key leakage and deploy their respective applications at Scale on Amazon Web Services.",
        "This is an intermediate level course and is intended for Developers interested in Developing Deploying and Scaling LLM Powered Applications. The Target Audience for this course are : Software Engineers, Data Scientists, ML Engineers and AI Engineers. However these are definitely not hard requirements, and who want to learn building, testing and deploying software applications at scale are equally welcome."
      ]
    },
    {
      "already_crawled_in": "it-and-software/IT Certifications",
      "url": "https://www.udemy.com/course/azure-app-services-web-apps/"
    },
    {
      "title": "Functional Programming with Ramda",
      "url": "https://www.udemy.com/course/functional-programming-with-ramda/",
      "bio": "Broaden your programming skills by learning to write javascript in a functional style",
      "objectives": [
        "Code in a functional style using Ramda",
        "Break down coding problems into small simple functions that can be reused",
        "Know some of the patterns Ramda programmers use to get things done"
      ],
      "course_content": {
        "Basic Functional Programming": [
          "Simple Operators",
          "Introduction to Functional Programming",
          "Curried Functions",
          "Composing Functions",
          "Piping Functions",
          "Section One Assignment"
        ],
        "Intermediate Functional Programming": [
          "Point-Free",
          "Immutability",
          "Statelessness",
          "Functors",
          "Monads",
          "Final Assignment Connect 4"
        ]
      },
      "requirements": [
        "Be comfortable using the command line",
        "You should be able to write some Javascript",
        "Install packages from npm"
      ],
      "description": "This course introduces the main concepts and patterns of functional programming. I use the javascript Ramda library to explore to do this. The course is in two halves each with it's own assignment. At the end of the course you will\nUnderstand how to write javascript in a functional style\nKnow what pure functions are and how to create them\nKnow the main principles underpinning functional programming\nSolved real coding problems in a functional style\nThe course is labeled 'intermediate' as it assumes some comfort with the command line, the notion of writing tests for code, and some familiarity with Javascript. However, if you are beginning to learn to code, or new to Javascript I'm confident you'll be able to follow along with no problem.",
      "target_audience": [
        "Anyone wanting to learn about functional programming",
        "Developers wanting to start using the Ramda library",
        "Full stack, backend and frontend developers will benefit from functional programming with Ramda"
      ]
    },
    {
      "title": "Code Smells made-easy",
      "url": "https://www.udemy.com/course/code-smells-made-easy/",
      "bio": "Master code smells and refactoring to write cleaner, more maintainable code by improving structure, readability.",
      "objectives": [
        "Identify different types of code smells in software development.",
        "Understand the impact of code smells on software maintainability.",
        "Apply refactoring techniques to improve code structure.",
        "Recognize signs of duplicate code and eliminate redundancy."
      ],
      "course_content": {
        "Introduction": [
          "Understanding Code Smells"
        ],
        "Bloaters": [
          "Long Method",
          "Large Class",
          "Primitive Obsession",
          "Long Parameter List",
          "Data Clumps"
        ],
        "Object-Orientation Abusers": [
          "Switch Statements",
          "Temporary Field",
          "Refused Bequest",
          "Alternative Classes with Different Interfaces"
        ],
        "Change Preventers": [
          "Divergent Change",
          "Shotgun Surgery",
          "Parallel Inheritance Hierarchies"
        ],
        "Dispensables": [
          "Comments",
          "Duplicate Code",
          "Lazy Class",
          "Data Class",
          "Dead Code",
          "Speculative Generality"
        ],
        "Couplers": [
          "Feature Envy",
          "Inappropriate Intimacy",
          "Message Chains",
          "Middle Man",
          "Incomplete Library Class"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge – Familiarity with at least one programming language (e.g., Python, Java, C++).",
        "Object-Oriented Programming (OOP) Concepts – Understanding of classes, inheritance, polymorphism, and encapsulation.",
        "Fundamentals of Software Development – Experience with writing, testing, and debugging code."
      ],
      "description": "Code Smells Made-Easy: Write Cleaner, Maintainable Code\nBad code can slow down development, introduce bugs, and make maintenance a nightmare. But how do you identify these problems before they spiral out of control? Welcome to Code Smells Made-Easy, where you’ll learn to detect and eliminate bad coding practices, ensuring your software remains scalable, efficient, and maintainable.\nIn this course, you'll dive deep into common code smells—subtle but harmful patterns that indicate deeper design issues. You’ll explore how to spot, analyze, and refactor smelly code using real-world examples and hands-on exercises.\n\n\nWhat You’ll Learn\nUnderstand what code smells are and why they matter\nIdentify common code smells like Long Methods, Large Classes, and Duplicated Code\nLearn practical refactoring techniques to improve code quality\nRecognize the impact of bad code on maintainability and performance\nDevelop better coding habits to prevent code smells in the first place\n\n\nWho Is This Course For?\nDevelopers (Beginner to Intermediate) who want to write cleaner code\nSoftware Engineers who maintain legacy codebases\nCode Reviewers & Team Leads who ensure best practices\nAnyone interested in refactoring and improving software design\n\n\nWhy Take This Course?\nHands-on Examples – See real-world code smells and how to fix them\nStep-by-Step Refactoring – Learn best practices for improving bad code\nSave Time & Effort – Write code that is easier to read, debug, and maintain\nBoost Your Software Engineering Skills – Improve your design thinking and coding standards\nBy the end of this course, you’ll be able to write cleaner, more maintainable code that reduces technical debt and improves software quality. Join now and level up your coding skills today!",
      "target_audience": [
        "Software Developers – Who want to improve code quality and maintainability.",
        "Junior & Mid-Level Programmers – Looking to refine their coding skills and learn best practices.",
        "Software Engineers – Interested in applying refactoring techniques for scalable software.",
        "Code Reviewers & QA Engineers – Who need to identify and resolve code smells efficiently.",
        "Computer Science Students – Preparing for industry-level software development.",
        "Technical Leads & Architects – Aiming to enforce clean code practices within teams.",
        "Freelance Developers – Who want to write better, more maintainable code for clients."
      ]
    },
    {
      "title": "Introduction to AI and Machine Learning with Go (Golang)",
      "url": "https://www.udemy.com/course/introduction-to-ai-and-machine-learning-with-go-golang/",
      "bio": "Learn the fundamentals of Artificial Intelligence and Machine Learning and apply them to your Go programs.",
      "objectives": [
        "Learn the basic principles of artificial intelligence",
        "Learn AI search algorithms (BFS, DFS, GBFS, Dijkstra & A* Search)",
        "Learn the basic principles behind machine learning",
        "Learn about creating worlds with rules for artificial intelligence",
        "Learn how to manage probability with artificial intelligence",
        "Learn how to train a model using linear regression and multiple linear regression",
        "Learn how to implement and use a neural network",
        "Learn how to connect to and use remote models on services like Hugging Face",
        "Learn how to integrate a Go application with LLMs like ChatGPT, and locally hosted LLMs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "A bit about me",
          "Installing Go",
          "Installing an IDE",
          "Setting up VS Code for Python"
        ],
        "Search and Artificial Intelligence Part I": [
          "What we'll cover in this section",
          "Defining a maze",
          "Loading the maze from disk",
          "Uninformed Search",
          "Getting started with Depth First Search (DFS)",
          "Trying out our DFS algorithm",
          "Adding image output to our project",
          "Producing an animation of the maze solving process",
          "Implementing Breadth First Search (BFS)",
          "Implementing Dijkstra's Search",
          "Adding the Manhattan Cost to our generated images",
          "Informed Search",
          "Implementing Greedy Best First Search (GBFS)",
          "A* Search: an Overview",
          "Implementing A* Search",
          "Adding obstructions to our maze",
          "Calculating cost with obstructions",
          "Summary"
        ],
        "Search and Artificial Intelligence - Part II": [
          "What we'll cover in this section",
          "Getting started with our robot vacuum",
          "Loading the Room configuration",
          "Getting started printing the room to the terminal",
          "Finishing up printing the room to the terminal",
          "Loading furniture and obstacles",
          "The Random Walk algorithm overview",
          "Setting up functions that every cleaning algorithm will need",
          "Implementing A* for the Random Walk algorithm",
          "Getting started with the Random Walk algorithm",
          "Bresenham's line algorithm and moving along a line until obstructed",
          "Finishing up the CleanRandomWalk function",
          "Trying out our code with CleanRandomWalk",
          "The SLAM algorithm",
          "Getting started with the SLAM algorithm",
          "Adding neighbors to the frontier",
          "Continuing with the SLAM algorith",
          "Adding a thorough frontier check and checking for sufficient coverage",
          "Finishing up and trying our SLAM algorithm",
          "The Spiral Algorithm",
          "Getting started with the Spiral algorithm",
          "Finding the room center and creating a spiral pattern",
          "Finishing up the Spiral alogorithm",
          "The Snaking (or Boustrophedon path) algorithm",
          "Getting started with the Snaking algorithm",
          "Finishing up the Snaking algorithm",
          "Adding obstacle recognition",
          "Complicating matters with a Cat",
          "Finishing up the Cat logic"
        ],
        "Knowledge Based Agents: Propositional Logic": [
          "What we'll cover in this section",
          "Getting started with multiple rooms",
          "Getting the code working for multiple rooms, but without logic",
          "Defining our truth table and rules for propositional logic",
          "Getting started with our logical world",
          "Finishing up the methods for our logical world",
          "Getting started with our logic enabled robot",
          "Trying out our new logic aware robot and world",
          "Finishing up the propositional logic robot"
        ],
        "Knowledge Based Agents: Model Checking": [
          "What we'll build in this section",
          "Getting started with our code",
          "Loading applicants from the CSV file",
          "Setting up the fairness property",
          "Setting up the risk property",
          "Finishing up our model checking logic and trying things out"
        ],
        "Artificial Intelligence and Uncertainty I": [
          "What we'll cover in this section",
          "Getting started with our Battleship game",
          "Setting up the Human player",
          "Setting up the AI player",
          "Placing the AI player's ships",
          "Placing the Human player's ships",
          "Letting the Human player take a turn",
          "Getting started with letting the AI player take a turn",
          "Setting up huntModeBoosts",
          "Finishing up letting the AI player take a turn",
          "Displaying the heat map and trying things out",
          "Improving our heatmap functionality",
          "Sinking ships",
          "Trying out the finished game"
        ],
        "Artificial Intelligence and Uncertainty II": [
          "What we'll cover in this section",
          "Getting started with our Blackjack game",
          "Clearing the screen, creating a deck of cards, and shuffling them",
          "The strategy our card counter will use",
          "Card counting abilties for our AI player",
          "Checking if the deck needs re-shuffled and creating players",
          "Dealing cards to all three players and calculating scores",
          "Displaying the players' hands",
          "Playing a round for the Human player",
          "Playing a round for the AI player",
          "Playing a round for the Dealer and trying things out"
        ],
        "Machine Learning in Python (supervised): Linear & Multiple Linear Regression": [
          "What we'll cover in this section",
          "Getting started with our program: loading and pre-processing the data",
          "Prepare data for modeling, split data, and train the model",
          "Evaluating our model",
          "Print the results of our training to the console",
          "Display a visualization of the data",
          "Predict a house's price based on data outside our dataset",
          "Getting started with Multiple Linear Regression in Python",
          "Implement data processing capabilities",
          "Develop the model operations - Part I",
          "Develop the model operations - Part II",
          "Trying out the code we've written so far",
          "Visualization: Display Results",
          "Creating data for visualizations",
          "Creating a 2d visualization",
          "Creating a 3d visualization"
        ],
        "Machine Learning in Go (supervised): Linear & Multiple Linear Regression": [
          "What we'll cover in this section",
          "Getting started with our program: parsing command line flags",
          "Setting up types, and loading and validating data",
          "Setting up the Linear Regression Type, and persisting model data",
          "Loading data and printing summary info",
          "Setting up a Model handler and trying out loading data",
          "Normalize Features",
          "Training the model",
          "Displaying trained model information",
          "Trying out training a model",
          "Saving and Loading a trained model",
          "Setting up a Predict method on the LinearRegression type",
          "Setting up the handlePrediction function",
          "Displaying Predictions",
          "Installing a sidecar application to create a visualization of the data (plot)",
          "Writing the Go code to call the sidecar application: Part I",
          "Writing the Go code to call the sidecar application: Part II",
          "Trying out our plotting functionality",
          "Updating our Python app to save to JSON format",
          "Loading a model trained in Python in our Go application"
        ],
        "Machine Learning: Neural Networks": [
          "What we'll cover in this section",
          "Setting up a Python project for a Neural Network",
          "Loading and preprocessing our data",
          "Trying out loading data",
          "Setting up the rest of our command line flags",
          "Getting started with training our neural network",
          "Setting up the training loop",
          "Trying out the training loop",
          "Saving the trained model",
          "Loading a saved ONNX file and making predictions",
          "Trying out our prediction function",
          "Cats vs Dogs: Convolutional Neural Networks",
          "Getting started with our CNN",
          "Setting up GPUs, if available",
          "Getting started with training our model: loading data",
          "Defining our neural network",
          "Setting up the forward pass for our network",
          "Setting up the loss function, optimizer, and learning rate scheduler",
          "Setting up the train_model function",
          "Implementing early stopping",
          "Best model restoration",
          "Saving model state",
          "Setting up inference",
          "Trying things out"
        ]
      },
      "requirements": [
        "A basic understanding of the Go programming knowledge",
        "A basic understanding of the Python programming language",
        "Ideally, a computer with a GPU (helpful, but not strictly necessary)"
      ],
      "description": "Are you a Go developer ready to explore the exciting world of AI and machine learning? This course is your comprehensive guide, designed specifically for Gophers who want to add powerful AI skills to their toolkit.\nMuch of the code in this course is written in Go, but some of it is written in Python, where it makes sense to do so, and this means that before taking this course you should have a basic understanding of both languages.\nWe'll start with fundamental AI concepts, building a strong foundation with practical, hands-on projects. Then, we'll dive into the world of machine learning, tackling everything from classic regression models to modern neural networks. You'll learn how to leverage Go for high-performance AI applications, and discover how to integrate it with Python and cutting-edge tools like Hugging Face and LLMs for state-of-the-art solutions.\n\n\nWhat You'll Learn\n\nSearch Algorithms & Intelligent Agents: Master core AI search algorithms like A* and Dijkstra's by solving mazes and building a robot vacuum.\nPropositional Logic & Model Checking: knowledge based AI agents often need to make decisions based on available information in the world they operate in. Propositional logic and model checking are two different approaches to solving this problem.\nUncertainty: Learn how AI agents handle randomness by creating a Battleship AI and a card-counting Blackjack player.\nMachine Learning Fundamentals: Get a practical understanding of linear regression by building models in both Python and Go to predict housing prices.\nDeep Learning & Neural Networks: Build a neural network from scratch for housing price prediction and a Convolutional Neural Network (CNN) for image classification.\nNatural Language Processing (NLP): Discover the power of NLP by creating an extractive summarization program in Go. You'll also learn to interface with external models from Hugging Face and harness the power of Large Language Models (LLMs) to create hybrid summarization systems.\nLarge Language Models (LLMs): Learn how to connect your Go programs to Large Language Models like ChatGPT. We'll use a locally hosted LLM using Ollama, but the code we write will be 100% compatible with OpenAI, which is used to connect to most LLMs.\n\n\nCourse Requirements\nThis course is for intermediate to advanced Go developers. You should be comfortable with Go syntax and core concepts. A basic understanding of data structures like graphs and trees is also helpful, but not required. You should also have a basic understanding of Python.\nAll you need is a computer running Windows, macOS, or Linux. While a GPU will speed up certain deep learning tasks, it is not essential; everything will run on a CPU.\n\n\nWhy This Course?\nThis isn't just another machine learning course; it's tailored for Go programmers. You'll learn how to build production-ready AI and machine learning applications that leverage Go's performance and concurrency. By the end, you'll have a portfolio of projects and the skills to confidently build your own intelligent applications.\nReady to build the future of AI with Go? Enroll now and start your journey!",
      "target_audience": [
        "Developers who want to see how AI & Machine Learning can improve their development skills while working in the Go programming language."
      ]
    },
    {
      "title": "SAP BTP Basics for Implementation and Operation [2025 NEW]",
      "url": "https://www.udemy.com/course/sap-btp-en/",
      "bio": "You can learn BTP (Business Technology Platform) which is focused recently in all over the world.",
      "objectives": [
        "Benefits and Features of BTP",
        "Why is BTP attracting attention?",
        "What should be decided before BTP implementation?(Composition, Sizing, Security etc...)",
        "What is restriction in BTP operation? (Outage, Recovery, Monitoring etc...)"
      ],
      "course_content": {
        "Introduction": [
          "Benefits of taking this course",
          "Target viewer for this course",
          "Structure and Scope of this course",
          "Why is BTP attracting attention?",
          "Notices"
        ],
        "What is BTP?": [
          "Goal of this Section",
          "What is the Original Product Name?",
          "What are the Benefits of BTP?",
          "(1) Ready to use immediately",
          "(2) Use Whenever you want",
          "(3) Work Well with other SAP products",
          "(4) Reduce the Impact of S/4HANA Version-upgrade",
          "What should you pay attention to before using BTP?",
          "(1) Internet Connection",
          "(2) Rapid Evolution",
          "(3) Where to Develop",
          "(4) How to Quote"
        ],
        "Key points of Constructing BTP": [
          "Goal of this Section",
          "Environment Selection",
          "Components",
          "Landscape",
          "Sizing",
          "User ID Management (System Administrator)",
          "User ID Management (Developers,End Users)",
          "Two-factor authentication (System Administrator)",
          "Authority",
          "Network Security"
        ],
        "Key Points of BTP Operation": [
          "Goal of this Section",
          "Downtime",
          "System Utilization Rate",
          "Recovery Policy",
          "Version Upgrades / Patch Applications",
          "Disaster Recovery",
          "Monitoring",
          "Release (Transport)",
          "Log"
        ],
        "Appendix": [
          "Material"
        ]
      },
      "requirements": [
        "Anyone can take this course because of basic contents.",
        "No need skill or knowledge as a premise.",
        "Developers and Operators, also Managers having experience on implementing or maintaining some kind of system can easily understand."
      ],
      "description": "[CAUTION] this is the same course as Japanese Lecture\"【SAP】BTPの基礎がわかる！最新トレンドを先取りしてまわりと差をつけよう！（今旬の最新機能も紹介）\"(translated from Japanese into English)\n\n\nThis course is to learn the basics of the Cloud Product BTP (Business Technology Platform) provided by SAP Inc. clearly summarized the overview of what BTP should be used for and how it should be used, as well as the information necessary for implementation and operation. In addition, since created by an Instructor with extensive implementation experience, you will be able to learn the key points that you need to keep in mind in a short amount of time.\n\n\nThis course is divided into three major chapters: \"Overview\", \"Implementation\" and \"Operation\".\n\n\nIn the \"Overview\" chapter, you can understand the features and benefits of BTP. We will also explain the background of why BTP has become popular.\n\n\nIn the \"Construction\" chapter, you can understand what you need to decide before BTP Go-Live. We will cover topics such as what environment options you can choose from, how many environments you should prepare, and to what extent the security level in user authentication and networks can be strengthened.\n\n\nIn the \"Operation\" chapter, you can understand the operational constraints of BTP. You should understand the predetermined operational rules such as system outage and version upgrades, and clarify to what extent SAP Inc will operate it and to what extent you should operate by yourself.\n\n\nSo many companies have been considering BTP as \"side-by-side\" system when they use S/4HANA to reduce Version Upgrade activities. It is required to know BTP architecture if you use S/4HANA nowadays.",
      "target_audience": [
        "Who should investigate BTP",
        "Who implement BTP construction before Go-Live",
        "Who operate and maintenance BTP after Go-Live",
        "Business Companies which is wondering whether to use BTP",
        "IT Companies which support Business Company",
        "IT Architect"
      ]
    },
    {
      "title": "System Design for Beginners: Build Scalable Backend Systems",
      "url": "https://www.udemy.com/course/system-design-mastery/",
      "bio": "Learn system design basics with APIs, databases, caching, proxies, load balancers, and real interview examples.",
      "objectives": [
        "Design scalable backend systems using real-world system design principles.",
        "Understand how backend systems are architected and what makes them scalable.",
        "Learn how production apps are structured, from compute to storage to networking layers.",
        "Apply design requirements like scalability, reliability, and maintainability to real systems.",
        "Master networking essentials like DNS, TCP/IP, and how data flows through systems.",
        "Understand horizontal vs vertical scaling and how to eliminate single points of failure.",
        "Design and optimize RESTful APIs, choosing the right protocols and security layers.",
        "Use caching strategies, CDNs, and signed URLs to reduce latency and scale apps.",
        "Compare SQL vs NoSQL databases and understand when to use each one.",
        "Learn how transactions work and apply ACID principles to ensure data integrity.",
        "Use load balancers and proxies to distribute traffic and remove single points of failure.",
        "Understand how MapReduce and object storage are used in big data systems.",
        "Learn how CI/CD pipelines work in real-world deployments and why they matter in system reliability.",
        "Common system design interview questions and how to handle them."
      ],
      "course_content": {
        "Foundations": [
          "Computer Architecture",
          "Architecture of Production Apps",
          "Design Requirements"
        ],
        "API Design": [
          "Networking Essentials",
          "Essential Application Protocols",
          "API Design 101: From Basics to Best Practices",
          "Caching & CDNs"
        ],
        "Proxy Servers": [
          "How Proxies Work: Forward & Reverse Proxies",
          "Load Balancing Strategies and Techniques"
        ],
        "Databases": [
          "Introduction to Databases",
          "SQL For Beginners",
          "SQL Transactions and ACID Properties",
          "NoSQL Databases",
          "Database Replication & Sharding"
        ],
        "Big Data Processing": [
          "Object Storage (BLOB)",
          "Signed URLs and Cookies",
          "Map Reduce",
          "Message Queues"
        ],
        "Bonus: System Design Interviews": [
          "Design Spotify",
          "Design TinyURL",
          "Design WhatsApp",
          "Design Twitter (X)",
          "Congrats on Completing the Course!"
        ]
      },
      "requirements": [
        "No prior system design experience needed — this course starts from the basics",
        "Helpful but not required: basic understanding of how frontend and backend interact"
      ],
      "description": "System design is one of the most important skills for any backend or full-stack developer — but most tutorials are either too advanced or too abstract. This beginner-friendly course is designed to help you build a strong foundation in system design by focusing on real-world concepts used by top tech companies.\nYou’ll start with the basics: how modern web apps are structured, what makes a system scalable, and how production architectures are actually built. Then we’ll dive into the key components of backend systems — covering networking essentials, APIs, caching, CDNs, proxies, databases, and load balancing.\nYou’ll learn how SQL and NoSQL databases work, what ACID properties mean, how to scale reads and writes, and when to use object storage like BLOB. I will also explain CI/CD pipelines, MapReduce, and how big data is processed at scale in distributed systems.\nBy the end, you’ll not only understand how to design backend systems — you'll also be ready to tackle common system design interview questions like designing YouTube, Twitter, or a file storage service.\nWhether you're a junior developer, bootcamp grad, or mid-level engineer, this course will give you the practical, job-ready knowledge you need to grow your backend skills and build better systems.",
      "target_audience": [
        "Junior and mid-level developers who want to level up their backend skills",
        "Anyone preparing for technical interviews or aiming to design scalable systems"
      ]
    },
    {
      "title": "Getting started with DApps (Create decentralized apps)",
      "url": "https://www.udemy.com/course/getting-started-with-dapps-create-decentralized-apps/",
      "bio": "Learn all about Blockchains, DApps, Smart contracts and their development",
      "objectives": [
        "Understand what Blockchain and DApp is",
        "Locally create a blockchain to better understand its operations",
        "Send transactions in our local Blockchain",
        "Creating a DApp from scratch using the HardHat framework",
        "Creating and deploying a smart contract on our local blockchain",
        "Creating and deploying a smart contract on cloud"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to this course!"
        ],
        "Understanding the concepts": [
          "What are DApps and Blockchains?",
          "DApps vs. Smart contracts"
        ],
        "Getting started": [
          "This course plan",
          "Installing the prerequisites"
        ],
        "DApps in practice": [
          "Creating our environment",
          "Compiling the project",
          "Deploying a smart contract locally",
          "Deploying a smart contract on cloud"
        ]
      },
      "requirements": [
        "The only prerequisite is a computer with internet connection"
      ],
      "description": "The term DApp comes from “decentralized application” and these are applications that run on the blockchain.\nBeing decentralized, they do not obey the control of any single authority. They can better safeguard user privacy and resist censorship.\nThis type of application is taking the world by storm along with Web3, NFTs and the decentralized authority available nowadays on the Blockchain. Everyone is talking about them and developers good with these technologies will be very well paid!\nWith that being said, getting started with DApps is not easy, given the vast amount of options available out there.\nThat's why I created this simple course on DApps to help you get started on your path of developing in this field.\nYou will first learn how to set up a development environment on your local machine and install on it all the programming languages, IDEs and frameworks that are necessary to start writing code.\nThen, we will create a local Blockchain in order to better understand its presented definition and the transactions it provides.\nWe will also write our very own Smart contract and deploy it both on our local Blockchain and on a testnet one, on cloud.\nAll these operations will not require any money, so do not worry about that, you are here to learn!\nAfter finishing this course, you will have a clear idea on what DApps are, how a blockchain and a smart contract work and also how to set up a local environment on your machine that will get you set up to start developing them on your own.\nSo if all of this sounds interesting, I look forward to seeing you in the first lecture!",
      "target_audience": [
        "People that want to learn more about DApps, Blockchain and smart contracts"
      ]
    },
    {
      "title": "Algorithms and Data Structures in Javascript (2020)",
      "url": "https://www.udemy.com/course/algorithms-and-data-structures-in-javascript/",
      "bio": "Master algorithms and data structures in Javascript.",
      "objectives": [
        "Master Sorting Algorithms and Data Structures FAST",
        "Implement Selection, Bubble, Merge and Quick Sort",
        "Implement Binary Search Tree, AVL Tree, Linked List, Tries and Hash Tables",
        "Improve problem-solving skills & Construct Efficient Algorithms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Say Hello :)",
          "Install VisualStudio Code"
        ],
        "Simple Sorting Algorithms": [
          "Problem Definition",
          "Selection Sort",
          "CODE: Selection Sort",
          "Bubble Sort",
          "CODE: Bubble Sort",
          "CODE: Bubble Sort #Challenge",
          "CODE: Bubble Sort #Solution"
        ],
        "Recursion": [
          "What is Recursion?",
          "CODE: Recursion",
          "CODE: Recursion 2 (debugging)"
        ],
        "Advanced Sorting Algorithms": [
          "Merge Sort",
          "CODE: Merge Sort",
          "Quick Sort",
          "CODE: Quick Sort",
          "CODE: Quick Sort #Challenge",
          "CODE: Quick Sort #Solution"
        ],
        "Time Complexity": [
          "What is Time Complexity?",
          "Big O notation",
          "Compared Sorting Algorithms",
          "CODE: Comparing Sorting Algorithms",
          "Sorting Algorithms",
          "PRACTICE: Simple Algorithms"
        ],
        "Tree Data Structures": [
          "What is Data Structure?",
          "Binary Search Tree",
          "CODE: Binary Search Tree",
          "CODE: Binary Search Tree 2",
          "CODE: Binary Search Tree 3",
          "AVL Tree",
          "AVL Tree Insertion",
          "AVL Tree Deletion",
          "CODE: AVL Tree",
          "CODE: AVL Tree 2",
          "CODE: AVL Tree 3",
          "CODE: AVL Tree 4",
          "CODE: AVL Tree 5"
        ],
        "List": [
          "Linked List",
          "CODE: Linked List"
        ],
        "Advanced Data Structures": [
          "Trie",
          "CODE: Trie",
          "Hash Table",
          "CODE: Hash Table",
          "Data Structures"
        ],
        "BONUS: Discounts to my other courses!": [
          "BONUS: Discounts to my other courses!"
        ]
      },
      "requirements": [
        "Basic Javascript programming knowledge"
      ],
      "description": "This course is designed to help you understand sorting algorithms and data structures. In my experience most people focus on the programming language, but people often forget about algorithms.\nAlgorithms are definitely more important than a programming language, you can learn a programming language in about week, but the problem-solving ability is much harder to learn. But the benefits are worth it.\nWhen you get to interview mostly they care about your problem-solving abilities, algorithms and data structures.\nTo get your dream job, you need to know how to solve whatever problem they have. In this course, you will learn how to do that.\nAlso, I believe that nobody has time for long and boring lectures, so in this class, I try to explain the important things in a fast and engaging way, so I won't bore you to death.\nWe start off with Sorting algorithms:\n- Selection Sort\n- Bubble Sort\nFirst there is the explenation lecture where you learn the idea behind an algorithm, then there is the implementation lecture, where we implement the algorithm in Javascript.\nThen I show you how Recursion works, once again I try to explain what recursion means, then we implement some recursion algorithms and we use debugger to see how computer evaluates recursive functions.\nThen we move on to recursive Sorting Algorithms\n- Merge sort\n- Quick sort\nThese algorithms are most commonly used. With each algorithm I explain the idea, then we implement the algorithm.\nOnce you learn sorting algorithms, we move on to Time Complexity:\n- What is time Complexity\n- Big O notation\nI explain what is time complexity and why we need it, also, I will show you how to compare sorting algorithms, so that we can see which one is the \"best\".\nIn this section you also find an article with a lot of problems, where you can train your problem solving skills.\nAfter that we take a look at Data Structures, I choose In my opinion the best dat structures for you to learn the important concepts.\nWe start of with Tree Data Structures:\n- Binary Search Tree\n- AVL tree\nYou learn how these works and also how to implement them.\nThen we take a look at Linked List, Stack, Tries and Hash Tables. Once again we implement all of these in Javascript.\nI believe that learning and understanding these concepts will help you solve problems more efficiently.",
      "target_audience": [
        "Anyone who wants to learn Sorting Algorithms",
        "Anyone who wants to learn Data Structures",
        "Anyone who wants to implement Algorithms and Data Structures in Javascript",
        "Anyone who wants to improve their problem-solving skills"
      ]
    },
    {
      "title": "Smart Contract Development: CryptoDoggies Token Game",
      "url": "https://www.udemy.com/course/cryptodoggies/",
      "bio": "Develop Web3 & Solidity Applications on the Ethereum Blockchain",
      "objectives": [
        "Development Pipeline - Full stack understanding of how to create and deploy smart contract applications.",
        "Unit Testing - How to Unit Test smart contracts before deploying to an Immutable state.",
        "Solidity Basics - General Overview of the functionality the Solidity language provides.",
        "Development Tools - How to use Truffle, Web3 and Remix to speed up development.",
        "Frontend Interface - How to create a simple frontend that supports MetaMask for your end users to interact with."
      ],
      "course_content": {
        "Introduction & Development Setup": [
          "Welcome to the Course",
          "What Is Ethereum?",
          "Introduction to Smart Contracts",
          "Development Setup - Windows",
          "Development Setup - MacOS",
          "Development Setup - Linux"
        ],
        "Solidity Basics - The Skeleton of our Smart Contract": [
          "CryptoDoggies Contract",
          "Version Pragma",
          "State Variables & Math Operators",
          "Structs - Defining our Doggies",
          "Arrays & Functions - Location for our Doggies",
          "Mapping - Storing our Doggies",
          "Events - Tracing our Doggies",
          "[Optional] Testing Smart Contracts with Remix"
        ],
        "Truffle - Developing and Testing Locally": [
          "Setting up IDE for Truffle Development",
          "Layout of a Truffle Project",
          "Ganache & TestRPC Usage",
          "Web3 Unit Testing"
        ],
        "Solidity Intermediate - Turning our Doggies into ERC721 Tokens": [
          "ERC721 Tokens",
          "Adding ERC721 Interface and Libraries",
          "CryptoDoggies DNA Explained",
          "Adding Required ERC721 Variables and Data Structures",
          "ERC721 Token Creation and Access",
          "Generate Random DNA",
          "Token Purchase and Balance Withdrawal",
          "Token Pricing Steps",
          "ERC721 Token Function Overrides",
          "ERC721 Private Function Overrides",
          "Refactoring Unit Tests and Crushing Bugs!",
          "Introduction to Remix, MetaMask and Ropsten Testnet"
        ],
        "Frontend - Building an Interface to Interact With": [
          "Getting Started With Frontend Development",
          "Creating the Doggy Cards",
          "Write the loadDoggy Function to visualise the Cards",
          "Contract Load from JSON ABI",
          "Handle Doggy Purchase",
          "Load Doggies from Contract Function",
          "Deploy CryptoDoggies to Ropsten Testnet",
          "[Optional] Deploying to Mainnet",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Access to a computer (Windows, MacOS, Linux)",
        "Basic Experience with JavaScript and NPM"
      ],
      "description": "I'm sure you've heard of CryptoKitties, the first highly successful Ethereum Smart Contract and Distributed Application (DApp) that took the world by storm!.\nThere is no denying that Ethereum and the amazing opportunities that come from writing Smart Contracts will only get bigger and more disruptive in the coming years as it continues to grow.\nLearn How To Use:\nSolidity - The programming language used to write smart contracts\nTruffle - The most popular way to develop smart contracts\nMetaMask - Browser extension to interact with your smart contract\nBootstrap / JavaScript - You'll build your own website using common web frameworks and languages.\nERC721 Token Standards - You'll build your own ERC721 compliant Token that can be traded on the Ethereum blockchain.\nI wrote this course for people who want to step through each of the steps required to implement their very own ERC721 Token called CryptoDoggies. Each of the Doggies created is completely unique and can be sold and collected on the Ethereum Blockchain.\n\nBy the end of this course you will have deployed your very own CryptoDoggy contract, and be fully capable in creating anything you can dream of using the amazing power of Ethereum Smart Contracts.",
      "target_audience": [
        "Motivated entrepreneurs looking to get an early leg up into understand the power of Smart Contracts",
        "Beginners to Smart Contracts who just want learn how to get started in a practical and fun way",
        "Veteran developers who want to move into the new world of Blockchain Development"
      ]
    },
    {
      "title": "Developers Best Coding Practices on C,C++, C#, Java & Python",
      "url": "https://www.udemy.com/course/python-java-c-c-c-programming-practices-for-dummies/",
      "bio": "Supercharge your software programming skill with best coding practices in C, C++, C#, Java and Python programming",
      "objectives": [
        "You will build lots of projects that will help to strengthen your skill in C, C++, C#, Java and Python language programming in this course",
        "You will implement programs to master operators such as Arithmetic, Relational, Logical, Bitwise operators and so on",
        "You will implement programs to master decision statements such as if statement, if else statement, else if statement etc",
        "You will implement programs to master loop systems such as for loop, while loop and do while loop",
        "Go through the course curriculum to see the rich projects you will execute in this course"
      ],
      "course_content": {
        "Python programming CODING practices for absolute beginners": [
          "Python Practice 1. How to detect Positive and Negative Numbers",
          "Python Practice 2. How to check for Even and odd Numbers",
          "Python Practice 3. How to check for Greatest of 3 Numbers",
          "Python Practice Practice 4. How to check for divisibility of a Number",
          "Python Practice 5. How to convert from Celsius to Fahrenheit",
          "Python Practice 6. How to convert from Fahrenheit to Celsius",
          "Python Practice 7. How to create a simple Thermometer",
          "Python Practice 8. How to calculate Mass, Density and Volume",
          "Python Practice 9 How to determine the quadrant of a point",
          "Python Practice 10. How to determine if a Triangle exist",
          "Python Practice 11. How to check for Leap year",
          "Python Practice 12. How to check if a point belongs to Circle",
          "Python Practice 13. How to create quadratic Equation",
          "Python Practice 14. How to make guess of Random number",
          "Python Practice 15. How to print out the ASCII Table",
          "Python Practice 16. How to create a Multiplication Table using while loop",
          "Python Practice 17. How to create Multiplication Table using for loop",
          "Python Practice 18. How to convert from base 2 to 9",
          "Python Practice 19. How to build a simple Calculator",
          "Python Practice 20. Number of digits in an Integer",
          "Python Practice 21. How to get Sum and Product of digits",
          "Python Practice 22. How to make a Binary search of number in an array",
          "Python Practice 23. How to sum of N series of an element",
          "Python Practice 24. How to get value of Even and Odd digits",
          "Python Practice 25. How to get a Factorial using a while loop",
          "Python Practice 26. How to get Factorial using for loop",
          "Python Practice 27. How to create a Fibonacci Sequence",
          "Python Practice 28. How to get the value of Fibonacci Element",
          "Python Practice 29. How to get find the Greatest Common Divisor",
          "Python Practice 30. How to maximum value of a floating point number",
          "Python Practice 31. How to get Prime and Complex Numbers",
          "Python Practice 32. Quadratic Equations at specified Range of Coefficient",
          "Python Practice 33. How to Reverse Numbers",
          "Python Practice 34. How to expand Strings of Alphabet",
          "Python Practice 35. How to Replace a Substring of a String",
          "Python Practice 36. How to select Integers from String",
          "Python Practice 37. How to sort words according to their length",
          "Python Practice 38. How to find the longest word in a String",
          "Python Practice 39. How to get Percentage of Uppercase and Lowercase",
          "Python Practice 40. How to check for String Palindrome",
          "Python Practice 41. How to generate Random numbers using Arrays",
          "Python Practice 42. How to get the Maximum Element in an Array",
          "Python Practice 43. How to get the Minimum Element in an Array",
          "Python Practice 44. How to get the Number of Even and Odd numbers",
          "Python Practice 45. How to get Positive numbers out of Negative Numbers",
          "Python Practice 46. How to get numbers greater than the average of an Array",
          "Python Practice 47. How to Replace listitems with -1, 0, 1",
          "Python Practice 48. How to check for File Extension",
          "Python Practice 49. How to remove symbols from Text",
          "Python Practice 50. How to get Intersection of list using for loop",
          "Python Practice 51. Simple Intersection of List",
          "Python Practice 52. Longest ordered sequence in ascending order",
          "Python Practice 53. How to get the most occurrent Element",
          "Python Practice 54. How to bubble sort elements of an Array",
          "Python Practice 55. How to sort Array using Selection sorting",
          "Python Practice 56. How to generate Matrix of Random numbers",
          "Python Practice 57. How to get the rows & columns with maximum sum of elements",
          "Python Practice 58. Sum items in rows and columns of elements",
          "Python Practice 59. How to sum diagonals of a Matrix",
          "Python Practice 60. How to interchange the principal diagonals of matrix",
          "Python Practice 61. How to sort columns of element by sorting the first row",
          "Python Practice 62. How to check rows and columns that has particular element",
          "Python Practice 63. How to generate beautiful Unicode",
          "Python Practice 64. How to get prices of products",
          "Python Practice 65. How to make list of dictionary using 2 Lists",
          "Python Practice 66. How to delete dictionary item",
          "Python Practice 67. Return value of 2 Arguments using function",
          "Python Practice 68. How to fill List",
          "Python Practice 69. How to get the Arithmetic mean of a List",
          "Python Practice 70. How to generate Fibonacci sequence using Function",
          "Python Practice 71. How to get Fibonacci value using recursion",
          "Python Practice 72. How to get Factorial using recursion",
          "Python Practice 73. How to get the LCM",
          "Python Practice 74. How to Reverse Word Sequence",
          "Python Practice 75. How to search for Binary numbers",
          "Python Practice 76. How to make a ring shift or recycle items of a list",
          "Python Practice 77. How to Read Text",
          "Python Practice 78. How to use Read Method",
          "Python Practice 79. How to use ReadLine Method",
          "Python Practice 80. How to use ReadLines Method",
          "Python Practice 81. How to Write to File",
          "Python Practice 82. How to Read Text from File to Dictionary",
          "Python Practice 83. How to count Number of Lines, Words & Letters in a text file",
          "Python Practice 84. How to capture String Errors",
          "Python Practice 85. How to check for non existence of number",
          "Python Practice 86. How to display Error message for non existed files",
          "Python Practice 87. How to get Division by Zero error",
          "Python Practice 88. How to get Index out of Exception",
          "Python Practice 89. How to Raise Exceptions",
          "Python Practice 90. How to use classes and constructor",
          "Python Practice 91. How to fill a list with natural Numbers",
          "Python Practice 92. How to fill a list with Random Numbers",
          "Python Practice 93. How to select Even Numbers from list",
          "Python Practice 94. How to create List from Dictionary",
          "Python Practice 95. How to unpack Matrix into one level list",
          "Python Practice 96. Read Data from file into Lines and Characters",
          "Python Practice 97. How to calculate the Orbital speed",
          "Python Practice 98. Sum of a Random of 3 digit numbers",
          "Python Practice 99. How to calculate Area & Perimeter of Right Angle Triangle",
          "Python Practice 100. How to get Total Surface Area of a Cylinder"
        ],
        "Java Programming CODING Practices for Absolute Beginners": [
          "Java Practice 1. Hello World",
          "Java Practice 2. PrintWriter",
          "Java Practice 3. Basic Arithmetic Calculators",
          "Java Practice 4. User Input",
          "Java Practice 5. Date and Time",
          "Java Practice 6. Swapping two different values",
          "Java Practice 7. Method Overloading",
          "Java Practice 8. String Overloading",
          "Java Practice 9. Method Overriding",
          "Java Practice 10. Use of Final Keyword as a variable",
          "Java Practice 11. Use of final Keyword as a method",
          "Java Practice 12. Use of finalized keyword",
          "Java Practice 13. Static Variable",
          "Java Practice 14. Program for Interface",
          "Java Practice 15. Super class",
          "Java Practice 16. How to use This keyword",
          "Java Practice 17. Print numbers in Matrix Format",
          "Java Practice 18. Matrix Addition",
          "Java Practice 19. Matrix Subtraction",
          "Java Practice 20. Matrix Multiplication",
          "Java Practice 21. Triangular Pattern (1)",
          "Java Practice 22. Triangular Pattern (2)",
          "Java Practice 23. Triangular Pattern (3)",
          "Java Practice 24. Triangular Pattern (4)",
          "Java Practice 25. Paschal Triangle",
          "Java Practice 26. Floyds Triangle",
          "Java Practice 27. Multiplication Table",
          "Java Practice 29. How to detect largest Number input from a user",
          "Java Practice 30. Use of math operators for Calculator",
          "Java Practice 31. A program for calculating Factorial",
          "Java Practice 32. A program to determine Student's grade",
          "Java Practice 33. Detect Negative and Positive Numbers from a user",
          "Java Practice 34. Detect Even and Odd Numbers",
          "Java Practice 35. A program for Fibonacci Sequence",
          "Java Practice 36. A program to check palindrome number",
          "Java Practice 37. Program to check Vowels and Consonants",
          "Java Practice 38. Print out Arrays",
          "Java Practice 39. Print out Array from user",
          "Java Practice 40. Print out Arrays in ascending order",
          "Java Practice 41. Print out String Arrays",
          "Java Practice 42. Sorting an Array",
          "Java Practice 43. Program to search an element in an Array",
          "Java Practice 44. Insert Element in an Array",
          "Java Practice 45. Program to Reverse an Array",
          "Java Practice 46. Minimum and Maximum Element in Array",
          "Java Practice 47. A program to merge two Arrays",
          "Java Practice 48. A program to sort a Merged Array",
          "Java Practice 49. Abstract Class",
          "Java Practice 50. A program for Abstract class and Abstract Method",
          "Java Practice 51. Array to String",
          "Java Practice 52. A Program to calculate Array's average",
          "Java Practice 53. For Loop",
          "Java Practice 54. Infinite Loop",
          "Java Practice 55. Generate Random Numbers",
          "Java Practice 56. Reverse a Number",
          "Java Practice 57. Convert from Fahrenheit to Centigrade",
          "Java Practice 58. Convert Centigrade to Fahrenheit",
          "Java Practice 59. Reverse a Number using For loop",
          "Java Practice 60. Program to print out Prime Numbers",
          "Java Practice 61. A program to swap two different Numbers",
          "Java Practice 62. A program to swap two different numbers (2)",
          "Java Practice 63. Print out current Date and Time",
          "Java Practice 64. Program to detect a leap year",
          "Java Practice 65. A program to detect Prime numbers only",
          "Java Practice 66. A program to check a perfect square",
          "Java Practice 67. Program to convert from Decimal to Binary",
          "Java Practice 68. Sum of Digits from User",
          "Java Practice 69. A program to find two top maximum numbers in an Array",
          "Java Practice 70. A program to convert from String to Character",
          "Java Practice 71. A program to convert from String to other Data Types",
          "Java Practice 72. A program to check Armstrong Numbers",
          "Java Practice 73. A program to calculate Arithmetic Mean",
          "Java Practice 74. Program to calculate HCF and LCM",
          "Java Practice 75. Program to convert from Decimal to Octal",
          "Java Practice 76. A program to convert from Binary to Decimal",
          "Java Practice 77. Program to convert from Decimal to Hexadecimal",
          "Java Practice 78. Program to create current locale",
          "Java Practice 79. A program for Array List",
          "Java Practice 80. Iterate through HashMap",
          "Java Practice 81. A program to sort HashMap",
          "Java Practice 82. Sort HashMap by Values",
          "Java Practice 83. Program to find longest sub string",
          "Java Practice 84. A program to get Employee's data",
          "Java Practice 85. A program to sort Object using comparable interface",
          "Java Practice 86. A program to sort Object using Comparator Interface",
          "Java Practice 87. A program to detect first non repeated character",
          "Java Practice 88. A program to generate permutation of a string",
          "Java Practice 89. A program to get the result of the longest Palindrome",
          "Java Practice 90. A program to sort Array in Descending order",
          "Java Practice 91. A program to remove duplicate element in a list",
          "Java Practice 92. A program to run a Thread",
          "Java Practice 93. A program to create a Thread using runnable interface",
          "Java Practice 94. A program to join two Threads",
          "Java Practice 95. Program to remove Multiple spaces in a String",
          "Java Practice 96. A program to find the union of two Arrays",
          "Java Practice 97. A program to find intersection of two Arrays",
          "Java Practice 99. A program for Exception Handling",
          "Java Practice 100. A program for Multiple catch Blocks in Exception Handling",
          "Java Practice 101. A program to implement Exception Handling using Finally Block",
          "Java Practice 102. A program to implement Try-Catch-Finally Blocks",
          "Java Practice 103. A program to implement Throw in java",
          "Java Practice 104. A program for User Define Exception",
          "Java Practice 105. A program for Constructor Inheritance",
          "Java Practice 106. A program for super class in Inheritance",
          "Java Practice 107. A program to clone Objects",
          "Java Practice 108. A program to get sub-list from an Array with clone",
          "Java Practice 109. Sync Array list using Collections.synchochroniseList",
          "Java Practice 110. Get the last occurrence of an object in an Arraylist",
          "Java Practice 111. A program to demonstrate Single Inheritance",
          "Java Practice 112. A program to demonstrate Multilevel Inheritance",
          "Java Practice 113. A program to demonstrate Hierarchical Inheritance",
          "Java Practice 114. A project to print different String functions",
          "Java Practice 115. A program to count Number of words in a String variable",
          "Java Practice 116. A program to find Armstrong using Multithreading",
          "Java Practice 117. A program to find Prime Numbers using Multithreading",
          "Java Practice 118. A program to print out Alphabets A-Z using Multithreading",
          "Java Practice 119. A program to print out Alphabet using Alternate",
          "Java Practice 120. A program to print out Numbers",
          "Java Practice 121. A program to check for Even Numbers",
          "Java Practice 122. A program to check for Odd Numbers",
          "Java Practice 123. A program to get square of Numbers with Multithreading",
          "Java Practice 124. A program to get Cube of numbers using Multithreading"
        ],
        "C Programming CODING Practices for Absolute Beginners": [
          "C Practice 1. Hello World",
          "C Practice 2. How to accept input from User",
          "C Practice 3. How to sum 2 integers from user",
          "C Practice 4. How to build a Simple Interest Calculator",
          "C Practice 5. How to Multiply Float Numbers",
          "C Practice 6. How to Find ASCII value",
          "C Practice 7. How to get quotient and remainder",
          "C Practice 8. How to swap 2 numbers",
          "C Practice 9. Alternative method to swap 2 numbers",
          "C Practice 10. How to swap 2 Strings",
          "C Practice 11. How to add Complex Numbers",
          "C Practice 12. How calculate Sum of digit numbers",
          "C Practice 13. How to create Floyd's Triangle",
          "C Practice 14. A program to calculate Area of a Circle",
          "C Practice 15. How to calculate Area of a Rectangle",
          "C Practice 16. How to calculate Area of Square",
          "C Practice 17. How to calculate Area of a Triangle",
          "C Practice 18. How to calculate volume of a Cube",
          "C Practice 19. How to calculate Area of a Cylinder",
          "C Practice 20. How to calculate volume of Sphere",
          "C Practice 21. How to generate Random Numbers",
          "C Practice 22. How to calculate gross salary",
          "C Practice 23. How to calculate percentage",
          "C Practice 24. A program to Shut Down Computer",
          "C Practice 25. A program to get IP Address",
          "C Practice 26. A program for Date and Time",
          "C Practice 27. How to detect Even and Odd numbers",
          "C Practice 28. How to detect Vowels and Consonants",
          "C Practice 29. How to detect Greatest of 3 Numbers",
          "C Practice 30. How to find Roots of Quadratic Equation",
          "C Practice 31. How to detect a Leap Year",
          "C Practice 32. How to display Student's Grade",
          "C Practice 33. How to Sum a given a Number",
          "C Practice 34. How to Calculate factorial using function",
          "C Practice 35. How to create Multiplication Table",
          "C Practice 36. How to create Fibonacci Sequence",
          "C Practice 37. How to Reverse Numbers",
          "C Practice 38. How to Reverse Numbers using Array",
          "C Practice 39. How to Reverse String",
          "C Practice 40. How to check Palindrome",
          "C Practice 41. How to create Prime Numbers",
          "C Practice 42. How to Calculate HCF and LCM",
          "C Practice 43. How to detect Armstrong Numbers",
          "C Practice 44. How to generate Armstrong Numbers",
          "C Practice 45. How to create Half Pyramid Pattern",
          "C Practice 46. How to create half pyramid",
          "C Practice 47. How to create Full Pyramid",
          "C Practice 48. How to create Inverted Half Pyramid",
          "C Practice 49. How to create Paschal Triangle",
          "C Practice 50. How to create Perfect Square",
          "C Practice 51. How to create Diamond pattern",
          "C Practice 52. How to build Simple Calculator",
          "C Practice 53. How to Reverse Numbers using Array",
          "C Practice 54. How to Reverse Array without Pointer",
          "C Practice 55. How to find Length of String",
          "C Practice 56. How to Add 2 Matrices with Multidimensional Array",
          "C Practice 57. How to Subtract 2 Matrices",
          "C Practice 58. How to Multiply 2 Matrices",
          "C Practice 59. How to Transpose a Matrix",
          "C Practice 60. How to Add 2 Numbers",
          "C Practice 61. How to sum Array Elements",
          "C Practice 62. How to sort String",
          "C Practice 63. How to Find the Maximum Element in an Array",
          "C Practice 64. How to Merge 2 Arrays",
          "C Practice 65. How to insert a new Element into an Array",
          "C Practice 66. How to delete an Element in an Array",
          "C Practice 67. Check frequency of occurrence of a character",
          "C Practice 68. How to remove spaces in-between strings",
          "C Practice 69. String Concatenation",
          "C Practice 70. Find the length of Strings",
          "C Practice 72. How to Compare Strings",
          "C Practice 73. How to get the substring of a string",
          "C Practice 74. How to find the Minimum Element",
          "C Practice 75. How to remove Vowels from String",
          "C Practice 76. How to use Structure",
          "C Practice 77. How to add 2 distances using Structure",
          "C Practice 78. How to generate Student's Data using Union",
          "C Practice 79. How to write to File",
          "C Practice 80. How to read a File",
          "C Practice 81. How to Delete a File",
          "C Practice 82. How to copy one file into another",
          "C Practice 83. How to copy more than one Files",
          "C Practice 84. How to print out source code",
          "C Practice 85. How to convert from Binary to Decimal",
          "C Practice 86. How to convert from Binary to Hexadecimal",
          "C Practice 87. How to convert from Decimal to Octal",
          "C Practice 88. How to convert from Decimal to Binary",
          "C Practice 89. How to Convert from Decimal to Binary Bitwise",
          "C Practice 90. How to build Binary Pattern",
          "C Practice 91. Squares of N Numbers",
          "C Practice 92. How to get square of number entered by user",
          "C Practice 93. How to check for Positive Number",
          "C Practice 94. Alternative method to check for Positive Number",
          "C Practice 95. How to Add first and last digit of a Number",
          "C Practice 96. How to find Factors of a Number",
          "C Practice 97. How to Check Average of numbers",
          "C Practice 98. How to convert from Uppercase to Lowercase",
          "C Practice 99. How to create Binary Pattern",
          "C Practice 100. How to convert from Binary to Octal",
          "C Practice 101. How to create a Diamond Pattern",
          "C Practice 102. How to create Diamond Outline",
          "C Practice 103. How to Create Diamond of Numbers",
          "C Practice 104. How to create Floyd's pattern",
          "C Practice 105. How to create a Hollow Diamond pattern",
          "C Practice 106. How to create a Hollow square pattern",
          "C Practice 107. How to create Hour Glass pattern",
          "C Practice 108. How to create Star Hash pyramid pattern",
          "C Practice 109. How to create Nested Star Hash Pyramid",
          "C Practice 110. How to create Alpha Numeric Pattern",
          "C Practice 111. How to build Numeric Diamond Pattern",
          "C Practice 112. How to create Numeric Pattern",
          "C Practice 113. How to create Numeric Pattern (Part 2)",
          "C Practice 114. How to create Numeric Pattern (Part 3)",
          "C Practice 115. How to create Numeric Pattern ( part 4)",
          "C Practice 116. How to create Pascal Triangle",
          "C Practice 117. How to create Pascal Triangle (Part 2)",
          "C Practice 118. How to create Pascal Triangle using Function",
          "C Practice 119. How to create Half Cone pattern",
          "C Practice 120. How to create Alpha pattern",
          "C Practice 121. How to create Alphabet Pattern",
          "C Practice 122. How to create Numeric pattern (Part 5)",
          "C Practice 123. How to create inverted Half Cone",
          "C Practice 124. How to create a Simple Pattern (Part 2)",
          "C Practice 125. How to create Numeric Diagonal",
          "C Practice 126. How to create a Simple Pattern(Part 3)",
          "C Practice 127. How to create a Steep slope pattern",
          "C Practice 128. How to check for Float and Integer",
          "C Practice 129. How to create Numeric Slope Pattern",
          "C Practice 130. How to create Pyramid pattern",
          "C Practice 131. How to create Rectangular Pattern",
          "C Practice 132. How to create Rectangular Star Pattern",
          "C Practice 133. How to create Inverted Cone",
          "C Practice 134. How to create a Rhombus pattern",
          "C Practice 135. How to create Square Kite Pattern",
          "C Practice 136. How to create Square star pattern",
          "C Practice 137. How to create an X pattern",
          "C Practice 138. How to create a Triangle without fill"
        ],
        "C++ Programming CODING Practices for Absolute Beginners": [
          "C++ Practice 1. Hello World",
          "C++ Practice 2. Use of Variables",
          "C++ Practice 3. Understanding local and global variable",
          "C++ Practice 4. User Input",
          "C++ Practice 5. How to accept strings from Users",
          "C++ Practice 6. How to add 2 Numbers",
          "C++ Practice 7. How to use math operators",
          "C++ Practice 8. How to add n Numbers",
          "C++ Practice 9. How to use if Statement",
          "C++ Practice 10. How use Nested if Statement",
          "C++ Practice 11. How to use if else Statement",
          "C++ Practice 12. How to use else if Statement",
          "C++ Practice 13. How to use switch Statement",
          "C++ Practice 14. Nested switch Statement",
          "C++ Practice 15. How to use while Loop",
          "C++ Practice 16. do while loop",
          "C++ Practice 17. How to use for loop",
          "C++ Practice 18. Prime Numbers",
          "C++ Practice 19. Area of a Triangle",
          "C++ Practice 20. How to find Even and Odd Numbers",
          "C++ Practice 21. How to add digits from user",
          "C++ Practice 22. How to find Greatest of three Numbers",
          "C++ Practice 23. How to swap numbers using variables",
          "C++ Practice 24. How to swap Numbers using 2 variables",
          "C++ Practice 26. How to calculate Gross Salary",
          "C++ Practice 27. How to calculate Simple Interest",
          "C++ Practice 28. How to check a Leap Year",
          "C++ Practice 29. How to get HCF using Recursive Function",
          "C++ Practice 30. How to calculate the LCM",
          "C++ Practice 31. How to calculate LCM and HCF",
          "C++ Practice 32. How to get Factorial of nCr and nPr",
          "C++ Practice 33. How to reverse numbers",
          "C++ Practice 34. How to reverse arrays of Numbers",
          "C++ Practice 35. How to check for a Palindrome",
          "C++ Practice 36. How to generate Prime Numbers",
          "C++ Practice 37. List of Prime Numbers",
          "C++ Practice 38. How to check for Armstrong Numbers",
          "C++ Practice 39. How to Generate Armstrong Numbers",
          "C++ Practice 40. Calculate Factorial",
          "C++ Practice 41. How to calculate Factorial using Recursive function",
          "C++ Practice 42. How to create a Fibonacci Series",
          "C++ Practice 43. Fibonacci Series using Recursive Function",
          "C++ Practice 44. Mathematical Functions",
          "C++ Practice 45. How to generate Random Numbers",
          "C++ Practice 46. How to convert from Binary to Hexadecimal",
          "C++ Practice 47. How to convert from Binary to Octal",
          "C++ Practice 48. How to convert from Binary to Decimal",
          "C++ Practice 49. How to convert from Decimal to Octal",
          "C++ Practice 50. How to convert from Decimal to Binary",
          "C++ Practice 51. How to convert from Decimal to Bitwise",
          "C++ Practice 52. How to find first and last number in an Array",
          "C++ Practice 53. How to pass Arrays to Functions",
          "C++ Practice 54. How to find maximum element in Array",
          "C++ Practice 55. How to find the minimum element in an Array",
          "C++ Practice 56. How to Reverse Array Elements",
          "C++ Practice 57. How to insert a new element into an Array",
          "C++ Practice 58. How to delete an Element in Array",
          "C++ Practice 59. How to Merge 2 Arrays",
          "C++ Practice 60. How to add two matrices",
          "C++ Practice 61. How to subtract two Matrices",
          "C++ Practice 62. How to Transpose a Matrix",
          "C++ Practice 63. How to multiply 2 matrices",
          "C++ Practice 64. Simple String Format",
          "C++ Practice 65. How to check for Length of String using for loop",
          "C++ Practice 66. How to check for length of String using function",
          "C++ Practice 67. How to compare Strings using for loop",
          "C++ Practice 68. How to compare two Strings using Function",
          "C++ Practice 69. How to copy Strings",
          "C++ Practice 70. How to copy strings using strcpy",
          "C++ Practice 71. How to make concatenation using a for loop",
          "C++ Practice 73. How to Reverse a string using while loop",
          "C++ Practice 74. How to Reverse a String using strrev",
          "C++ Practice 75. How to Reverse Complete Sentence",
          "C++ Practice 76. How to check if a String is a Palindrome",
          "C++ Practice 77. How to convert from Uppercase to Lowercase",
          "C++ Practice 78. How to convert from Uppercase to Lowercase using strlwr",
          "C++ Practice 79. How to convert from Uppercase to Lowercase using while loop",
          "C++ Practice 80. How to convert from Lowercase to Uppercase using strupr",
          "C++ Practice 81. How to Remove vowels from string",
          "C++ Practice 82. How to find the frequency occurrence of a Character",
          "C++ Practice 83. How to check Vowels and Consonants",
          "C++ Practice 84. How to get number of Vowels, Consonants, Digits and Whitespaces",
          "C++ Practice 85. How to search for an Element in an Array",
          "C++ Practice86. How to check for an Element in an Array using Recursive function",
          "C++ Practice 87. How to sort Array using Bubble",
          "C++ Practice 88. How to sort Arrays using Insertion",
          "C++ Practice 89. How to sort Arrays using Selection method",
          "C++ Practice 90. How to call by Value",
          "C++ Practice 91. How to call by Reference",
          "C++ Practice 92. How to call by Pointer",
          "C++ Practice 93. How to Write to a file",
          "C++ Practice 94. How to Read from a file",
          "C++ Practice 95. How to add 2 Numbers using function",
          "C++ Practice 96. How to subtract two Numbers using function",
          "C++ Practice 97. How to create Classes",
          "C++ Practice 98. How to Pass Argument to Function",
          "C++ Practice 99. How to use inline function",
          "C++ Practice 100. How to check length of string using Pointer",
          "C++ Practice 101. How to create a Pyramid pattern",
          "C++ Practice 102. How to create a Right Angled Triangle",
          "C++ Practice 103. How to a Diamond pattern",
          "C++ Practice 104. How to create a Right Angle Triangle pattern",
          "C++ Practice 105. How to create Alphabet pattern",
          "C++ Practice 106. How to create a Pascal Triangle pattern",
          "C++ Practice 107. How create a Floyd's Triangle",
          "C++ Practice 108. How to create Numeric Pyramid pattern"
        ],
        "Best C# Programming Practices for Beginners": [
          "C# Practice 1. Hello World",
          "C# Practice 2. How to sum 2 Numbers",
          "C# Practice 3. How to check for Even and Odd Numbers",
          "C# Practice 4. How to count 1s in number",
          "C# Practice 5. How to find ASCII values of characters",
          "C# Practice 6. How to find a Leap year",
          "C# Practice 7. How to swap 2 Numbers",
          "C# Practice 8. Celsius to Fahrenheit",
          "C# Practice 9. How to get length of a String",
          "C# Practice 10. How to Reverse Numbers",
          "C# Practice 11. How to count number of Words",
          "C# Practice 12. How to check for Vowels and Consonants",
          "C# Practice 13. Count number of Vowels and Consonants",
          "C# Practice 14. How to count number of Alphabets, Digits and Special Characters",
          "C# Practice 15. How to find a Substring",
          "C# Practice 16. Date Format",
          "C# Practice 17. How to get Employee Data",
          "C# Practice 18. How to get Employee Data using Nested Structure",
          "C# Practice 19. Area of Rectangle using Structure",
          "C# Practice 20. Power of Number using Recursion",
          "C# Practice 21. How to use Static property",
          "C# Practice 22. How to use Static Constructor",
          "C# Practice 23. Single Cast Delegate",
          "C# Practice 24. Multiple Cast Delegate",
          "C# Practice 26. Single Cast Delegate and Event",
          "C# Practice 27. Multicast Delegate and Event",
          "C# Practice 28. Trigonometric Functions",
          "C# Practice 29. How to get square root",
          "C# Practice 30. How to get the cube root",
          "C# Practice 31. How to add 2 Dates",
          "C# Practice 32. How to add 2 Binary numbers",
          "C# Practice 33. How to sum 1-N Numbers",
          "C# Practice 34. How to create a Fibonacci Series",
          "C# Practice 35. How to detect a Prime Number",
          "C# Practice 36. How to check for Palindrome",
          "C# Practice 37. How to get factorial of a Number",
          "C# Practice 38. How to check for Armstrong Numbers",
          "C# Practice 39. How to Reverse Number",
          "C# Practice 40. How to convert from Decimal to Binary",
          "C# Practice 41. How to create Alphabet Triangle",
          "C# Practice 42. How to convert Digits to Text",
          "C# Practice 43. How to Check for duplicate elements in an Array",
          "C# Practice 44. How to Add 2 Matrices",
          "C# Practice 45. How to Bubble Sort Array",
          "C# Practice 46. How to sort Array Selection Sorting",
          "C# Practice 47. How to get LCM and GCD",
          "C# Practice 48. How to create Binary Triangle",
          "C# Practice 49. How to create Rectangular pattern",
          "C# Practice 50. How to create a Triangular pattern",
          "C# Practice 51. Arithmetic Calculator",
          "C# Practice 52. How to use if else Statement",
          "C# Practice 53. How to use else if Statement",
          "C# Practice 54. How to get the Greatest of 3 Numbers",
          "C# Practice 55. How to create Multiplication Table using while loop",
          "C# Practice 56. How to create a Multiplication Table using for loop",
          "C# Practice 58. Add 2 Numbers using Function",
          "C# Practice 59. How to find HCF",
          "C# Practice 60. How to get the magnitude of an Integer",
          "C# Practice 61. How to get Factors of a Number",
          "C# Practice 62. How to detect the State of a Number",
          "C# Practice 63. How to get the Minimum and Maximum Number in an Array",
          "C# Practice 64. How to calculate Acceleration",
          "C# Practice 65. How to calculate sum of digits entered by user",
          "C# Practice 66. How to generate Random Numbers",
          "C# Practice 67. How to calculate the square feet of a Room",
          "C# Practice 68. How to create a Pythagoras Theorem",
          "C# Practice 69. How to create a Numerical Triangle",
          "C# Practice 70. How to create a Binary Triangle",
          "C# Practice 71. How to calculate sin()",
          "C# Practice 72. How to create a Cosine of Zero",
          "C# Practice 73. How to convert from Binary to Decimal",
          "C# Practice 74. How to convert from Decimal to Octal",
          "C# Practice 75. Convert Decimal to Hexadecimal",
          "Congratulations! Keep Learning..."
        ]
      },
      "requirements": [
        "Be ready to learn the complete basics of programming of your choice in Python, Java, C#, C++ or C programming language",
        "This course requires the knowledge of basics of computer programming",
        "Ensure you install the necessary IDEs ready for implementation of of the skills learned in this course",
        "Be ready to learn new skills today"
      ],
      "description": "Embark on an exciting journey into the world of programming with the \"500+ Beginners CODING Practices in Python, Java, C, C++, & C#\" course. Designed specifically for beginners, this course offers an extensive collection of coding exercises and projects across five of the most popular programming languages. Whether you're just starting out or looking to reinforce your programming skills, this course provides the hands-on experience you need to become proficient in Python, Java, C, C++, and C#.\nWhat You Will Learn:\nThis course is packed with over 500 coding exercises that cover the essential concepts of programming through practical, real-world projects. Here’s a glimpse of what you’ll master:\n1. User Input Projects:\nBasic Input/Output: Learn how to interact with users by accepting inputs and displaying outputs in each language.\nData Validation: Implement projects that check user inputs for accuracy, ensuring robust and user-friendly applications.\nInteractive Games: Create simple text-based games that rely on user inputs to function, like number guessing games and quizzes.\n2. Number Manipulation Projects:\nSwapping Numbers: Write programs to swap two numbers using various methods, including temporary variables and arithmetic operations.\nArithmetic Operations: Develop projects that perform basic calculations like addition, subtraction, multiplication, and division.\nPrime Number Checkers: Create programs that determine whether a given number is prime.\n3. String Manipulation Projects:\nPalindrome Checker: Develop programs that check whether a string reads the same forward and backward.\nString Reversal: Write code to reverse the characters in a string, a fundamental exercise in understanding data manipulation.\nWord Count: Build applications that count the number of words in a sentence or paragraph.\n4. Control Flow and Decision-Making Projects:\nEven/Odd Number Checker: Implement programs that determine whether a number is even or odd.\nLeap Year Calculator: Write a program that checks if a given year is a leap year.\nGrading System: Create a simple grading system that assigns letter grades based on numerical scores.\n5. Looping and Iteration Projects:\nFactorial Calculator: Develop programs to calculate the factorial of a number using loops.\nFibonacci Series: Implement a project that generates the Fibonacci sequence up to a certain number.\nPattern Printing: Write code to print various patterns like triangles, squares, and pyramids using loops.\n6. Array and List Manipulation Projects:\nArray Sorting: Implement sorting algorithms like bubble sort and selection sort.\nSum of Elements: Write programs that calculate the sum of elements in an array or list.\nFinding the Maximum and Minimum: Develop projects to find the largest and smallest elements in a list or array.\n7. Object-Oriented Programming (OOP) Projects:\nClass and Object Creation: Learn how to create classes and objects to model real-world scenarios.\nInheritance and Polymorphism: Implement projects that demonstrate the power of OOP concepts like inheritance and polymorphism.\nSimple Banking System: Create a basic banking application that handles deposits, withdrawals, and balance inquiries.\n8. File Handling Projects:\nReading from and Writing to Files: Develop programs that read data from files and write data to files.\nFile Encryption/Decryption: Implement simple encryption and decryption techniques for files.\nLog File Analysis: Create a project that processes and analyzes log files.\n9. Data Structures and Algorithms Projects:\nLinked List Implementation: Write code to create, traverse, and manipulate linked lists.\nBinary Search: Implement the binary search algorithm to efficiently find elements in a sorted array.\nStack and Queue Operations: Develop projects that simulate stack and queue operations.\n\n\nBenefits of Taking This Bootcamp Course:\nExtensive Practice: With over 500 coding exercises, this course ensures you get the hands-on experience needed to solidify your understanding of programming concepts across multiple languages.\nLanguage Versatility: By working on projects in Python, Java, C, C++, and C#, you’ll develop a versatile skill set that is applicable in various areas of software development.\nProblem-Solving Skills: Each project is designed to challenge you and enhance your problem-solving abilities, making you a more effective and efficient programmer.\nReal-World Applications: The projects you work on are not just theoretical; they’re practical exercises that reflect real-world programming scenarios, giving you the confidence to tackle real coding challenges.\nPortfolio Development: By the end of this course, you’ll have a portfolio of projects that you can showcase to potential employers, demonstrating your coding skills and your ability to work with different programming languages.\nCareer Advancement: Mastering these languages and completing this extensive range of projects will make you a strong candidate for entry-level programming positions, internships, and more.\nWho Should Take This Course?\nComplete Beginners: If you’re new to programming, this course is the perfect starting point. It provides clear, structured lessons that gradually build your skills through practice.\nAspiring Developers: If you’re looking to break into the tech industry, this bootcamp will equip you with the fundamental skills needed to succeed.\nStudents and Professionals: Whether you’re a student looking to supplement your learning or a professional aiming to reskill, this course offers a wealth of practical exercises to boost your proficiency.\nEnroll now in the \"500+ Beginners CODING Practices in Python, Java, C, C++, & C#\" course and start your journey to becoming a skilled programmer. With this course, you’ll gain the knowledge, experience, and confidence needed to excel in the world of programming, opening doors to new opportunities and career paths in the tech industry.\n\n\nPython is an interpreted, high-level and general-purpose programming language. Created by Guido van Rossum and first released in 1991, Python's design philosophy emphasizes code readability with its notable use of significant whitespace. Its language constructs and object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.\nPython is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented, and functional programming. Python is often described as a \"batteries included\" language due to its comprehensive standard library.\nPython was created in the late 1980s as a successor to the ABC language. Python 2.0, released in 2000, introduced features like list comprehensions and a garbage collection system with reference counting.\nPython 3.0, released in 2008, was a major revision of the language that is not completely backward-compatible, and much Python 2 code does not run unmodified on Python 3.\nThe Python 2 language was officially discontinued in 2020 (first planned for 2015), and \"Python 2.7.18 is the last Python 2.7 release and therefore the last Python 2 release.\" No more security patches or other improvements will be released for it. With Python 2's end-of-life, only Python 3.6.x and later are supported.\n\n\nJava is a class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming language intended to let application developers write once, run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation. Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture. The syntax of Java is similar to C and C++, but it has fewer low-level facilities than either of them. As of 2019, Java was one of the most popular programming languages in use according to GitHub, particularly for client-server web applications, with a reported 9 million developers.\nJava was originally developed by James Gosling at Sun Microsystems (which has since been acquired by Oracle) and released in 1995 as a core component of Sun Microsystems' Java platform. The original and reference implementation Java compilers, virtual machines, and class libraries were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the Java Community Process, Sun had relicensed most of its Java technologies under the GNU General Public License. Oracle offers its own HotSpot Java Virtual Machine, however the official reference implementation is the OpenJDK JVM which is free open source software and used by most developers including the Eclipse IDE and is the default JVM for almost all Linux distributions.\nThe latest versions are Java 15, released in September 2020, and Java 11, a currently supported long-term support (LTS) version, released on September 25, 2018; Oracle released for the legacy Java 8 LTS the last free public update in January 2019 for commercial use, while it will otherwise still support Java 8 with public updates for personal use up to at least December 2020.\n\n\nC is a general-purpose, procedural computer programming language supporting structured programming, lexical variable scope, and recursion, with a static type system. By design, C provides constructs that map efficiently to typical machine instructions. It has found lasting use in applications previously coded in assembly language. Such applications include operating systems and various application software for computer architectures that range from supercomputers to PLCs and embedded systems.\nA successor to the programming language B, C was originally developed at Bell Labs by Dennis Ritchie between 1972 and 1973 to construct utilities running on Unix. It was applied to re-implementing the kernel of the Unix operating system. During the 1980s, C gradually gained popularity. It has become one of the most widely used programming languages, with C compilers from various vendors available for the majority of existing computer architectures and operating systems. C has been standardized by the ANSI since 1989 (ANSI C) and by the International Organization for Standardization (ISO). As of September 2020, C is the most popular programming language.\nC is an imperative procedural language. It was designed to be compiled to provide low-level access to memory and language constructs that map efficiently to machine instructions, all with minimal runtime support. Despite its low-level capabilities, the language was designed to encourage cross-platform programming. A standards-compliant C program written with portability in mind can be compiled for a wide variety of computer platforms and operating systems with few changes to its source code.\n\n\nC++ is a general-purpose programming language created by Bjarne Stroustrup as an extension of the C programming language, or \"C with Classes\". The language has expanded significantly over time, and modern C++ now has object-oriented, generic, and functional features in addition to facilities for low-level memory manipulation. It is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Oracle, and IBM, so it is available on many platforms.\nC++ was designed with a bias toward system programming and embedded, resource-constrained software and large systems, with performance, efficiency, and flexibility of use as its design highlights. C++ has also been found useful in many other contexts, with key strengths being software infrastructure and resource-constrained applications, including desktop applications, video games, servers (e.g. e-commerce, Web search, or SQL servers), and performance-critical applications (e.g. telephone switches or space probes).\n\n\nC# is a general-purpose, multi-paradigm programming language encompassing strong typing, lexically scoped, imperative, declarative, functional, generic, object-oriented, and component-oriented programming disciplines.\n[Ref: Wikipedia]",
      "target_audience": [
        "Junior Developers",
        "Dummies",
        "Students",
        "Beginners"
      ]
    },
    {
      "title": "From Developer to Team Lead - Effective Dev Team Leading",
      "url": "https://www.udemy.com/course/from-developer-to-team-lead-effective-dev-team-leading/",
      "bio": "Practical tools for software development leadership",
      "objectives": [
        "Have a deep understanding of the team lead position",
        "Manage and lead software development teams",
        "Mentor and guide developers",
        "Promote tasks within a development team",
        "Manage time as a software development team lead"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How This Course Is Built"
        ],
        "A Developer's Lifecycle Within Your Team": [
          "Introduction",
          "Hiring",
          "Successful Onboarding",
          "Delivering Effective Feedback",
          "Mentoring a Struggling Developer",
          "Dismissing",
          "Conclusion"
        ],
        "Changing the Team's Behaviour": [
          "Introduction",
          "Team Values",
          "Motivating Your Team",
          "Setting the Atmosphere",
          "Reinforcing Behaviors",
          "Setting Boundaries",
          "Conclusion"
        ],
        "Promoting Tasks": [
          "Introduction",
          "Deciding Whether or Not to Perform a Task",
          "Analyzing Tasks",
          "Time Estimates",
          "Promoting Tasks Within Your Team",
          "Code Reviews",
          "Conclusion"
        ],
        "Productive Time Management": [
          "Introduction",
          "Moving In The Right Direction",
          "Optimizing Time Allocation",
          "Time Thieves",
          "Conclusion"
        ],
        "The Workshop": [
          "Introduction",
          "Attention",
          "Decisions Decisions",
          "Friendly Fire",
          "Off With His Head!",
          "Instructions Unclear"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "No requirements. Anyone can join"
      ],
      "description": "So you're a software developer, and you consider advancing to becoming a team lead.\nOr maybe you just want to become a better developer by understanding the team lead role.\n\n\nThis course will show you what being a dev team lead means, with lots of advice and tips you won't find anywhere else!\n\n\nIn this course, Oren, a seasoned team lead, teaches you in details everything you need to know in order to become a team lead.\n\n\nHere are some of the topics you'll learn:\nHow to hire and mentor developers.\nHow to change a team's behaviour and navigate it to where you want.\nHow to deeply understand software tasks.\nHow to make accurate time estimates.\nHow to manage your time as a team lead.\nAnd so much more..\n\n\nSo if you don't want to get stuck behind, this course will get you from where you are right now, to being able to perform as a software team lead, with basic and advanced insights, advice and tips!\n\n\nIf you're a software developer pondering the leap to a team lead role, or simply aiming to enhance your skills by grasping the intricacies of leadership within software development, this course is tailored for you.\nPerhaps you're driven by a desire to understand the team lead position better, to improve not just your coding skills but your capacity to lead and inspire a team. This comprehensive course is designed to unfold the layers of being an effective dev team lead, packed with unique insights, practical advice, and actionable tips that are hard to come by elsewhere.\nGuided by Oren, an experienced team lead with a wealth of knowledge, this course dives deep into the essential skills and knowledge needed to transition into a competent and respected team lead. You'll be walked through a series of meticulously curated topics, each aimed at building your leadership capabilities from the ground up.\n\n\nYou will also get lifetime access to all lectures, and a 30 day money back guarantee!",
      "target_audience": [
        "Anyone who wants to understand the team lead’s role",
        "Anyone who wants to become a team lead",
        "Team leads who want to improve"
      ]
    },
    {
      "title": "The Essential Types of Software Engineering & Development",
      "url": "https://www.udemy.com/course/types-of-software-development-engineering-masterclass-2023/",
      "bio": "Learn Types of Software Development from Front end web development to Backend Machine Learning & Everything in between",
      "objectives": [
        "Types of Software Development present in todays world",
        "Types of Software Engineering",
        "Tools Technologies used in different types of software development",
        "Skills and Programming Languages used in different types of software development",
        "Future of Software Development",
        "Types of software Developer and which type of software developer you can become",
        "How to evaluate the software Development Requirments"
      ],
      "course_content": {
        "Introduction": [
          "What is this course ?",
          "Case Study for this course",
          "How to take up this type of software development course",
          "Software Development"
        ],
        "Types of Software Development": [
          "Introduction to Types of Software Development",
          "Front End Web Development",
          "Backend Development",
          "API REST API Development",
          "Data Science Development",
          "Mobile Application Development",
          "Desktop Application Development",
          "Cloud Computing Development",
          "Full Stack Web Development",
          "Video Game Development",
          "Embedded System Development",
          "Progressive Web Application Development PWA",
          "Open Source Software Development",
          "Enterprise Application Development",
          "E-commerce Application Development",
          "Database Development",
          "AI and ML development"
        ],
        "Case Study Analysis": [
          "Y-Mart application Requirments",
          "Y-Mart Application Case Study Evaluation"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Anybody who has interest in Software's , From Students to Teacher, From People who are about to start their career to Professionals in software industry."
      ],
      "description": "Learn Types of Software Development, Technologies, Programming Languages to master to become well rounded Software Developer\n\nIn this course we are going to learn about different kind of Software Development getting carried out in the Real world IT industry project. You will also get to learn the Technologies, Programming Languages ,Skills to master to acquire the expertise in this software discipline\n\n\nIn this course we will start with understanding what is Software Development then gradually will start understanding the different types of software\n\nCourse Content:\n\nTypes of Software Development / Types of Software Engineering\nFront end web development\nbackend Development\nAPI Development\nData Science\nMobile Development\nDesktop Development\nCloud Computing Development\nFull Stack development\nVideo game development\nEmbedded System Development\nProgressive web app development\nOpen source development\nE-commerce App development\nEnterprise App Development\nDatabase Development\nArtificial intelligence and machine learning development\n\nCase Study :\nEcommerce Application Requirements Evaluation\n\nAll these things we are going to learn from scratch and learn in the real time project case study example ,we will evaluate real life project called Y-Mart Application and we will understand each requirements and technologies development needed to fulfill those in great detail during coding this Case study.\n\n\nThis Course will help to Answer questions like :\n\n\nTypes of Software Developer in the Real world IT Projects ?\nTop programming languages used in each of the type of software development discipline?\nKind of work getting done in the IT software project ?\n\n\n\n\nAll above things  are covered in just over 1+ hours of high-quality content. This is equivalent to a book with more than a thousand pages!  in  very clear and concise manner doesn't waste a single minute of your precious time!\n\n\nYou're not going to get this information at One Place Anywhere over the Web.\n\n\nAnd on top of all these, you'll get:\nClosed-captions generated by a human, not a computer! Currently only the first few sections have closed-captions but new captions are being added every week.\nOffline access: if you are traveling or have a slow connection, you can download the videos and watch them offline.\nDownloadable resource\n\n\nPREREQUISITES\nThere is no such Prerequisite for this course anybody who is using google search for finding answers to their personal and professional problem can take up this course. We will learn everything from the scratch in this course.\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you are not happy for any reasons, contact Udemy for a full refund within the first 30 days of your enrolment. All your money back, no questions asked.\n\n\n\n\nABOUT YOUR INSTRUCTOR\nHi! My name is Yogesh Dahake ! I'm a passionate Lead Software engineer with a decade of experience and I've taught over thousand  of people over Udemy on the Software Development Life Cycle  and on self and office productivity  techniques and obviously on Coding as well through my YouTube channels like vibranthinking and Codekranti\n\nMy goal is to enable people not just learn but in Optimal, efficient and effective way and Generate that Spark of learning .That's why my courses are simple, pragmatic and free of clutter\n\n\n\n\nSo, what are you waiting for? Don't waste your time jumping from one tutorial to another. Enroll in the course Acquire the LIFE Changing Skill in just 1+ hours\n\n\n\n\nWho this course is for:\nPeople who are starting their career in the software industry.\nPeople who are student of Software Engineering.\nPeople who are already working in the software company.\nDeveloper, Lead, Technical Architect ,Tester anybody who is directly or indirectly involved in the process of software development\nPeople who wants to develop the quality software's\nOn Higher note ,\nAnybody who has interest in Software's , From Students to Teacher, From People who are about to start their career to Professionals in software industry.",
      "target_audience": [
        "Beginner who is about to start his career in IT companies",
        "Experts who wants to get holistic view of software Development",
        "Professional software Developers who wants to become well rounded software developer",
        "Software Architect guys who wants to evaluate the software requirements"
      ]
    },
    {
      "title": "Technical Writing with AsciiDoc and IntelliJ IDEA",
      "url": "https://www.udemy.com/course/technical-writing-with-asciidoc-and-intellij-idea/",
      "bio": "Learn how to install IntelliJ and use it effectively for technical writing in AsciiDoc",
      "objectives": [
        "Installing IntelliJ together with the plugin for AsciiDoc",
        "Navigating in existing documentation projects",
        "Writing AsciiDoc content in IntelliJ",
        "Optimize the preview in the IDE for AsciiDoc",
        "Creating a pull request for a Git repository"
      ],
      "course_content": {
        "Choosing IntelliJ IDEA for technical writing": [
          "Technical Writing in IntelliJ IDEA"
        ],
        "Getting ready with IntelliJ IDEA": [
          "Installing IntelliJ IDEA",
          "Things to know when installing IntelliJ IDEA",
          "Starting and customizing IntelliJ IDEA",
          "Opening a project"
        ],
        "Writing AsciiDoc content": [
          "Editing AsciiDoc content",
          "Improving the preview",
          "Learning the AsciiDoc Syntax",
          "AsciiDoc and Asciidoctor",
          "Working with Git and GitHub"
        ],
        "Searching and navigating content": [
          "Navigating from file to file",
          "Searching within files of a project"
        ],
        "Congratulations & Closing": [
          "Good bye and stay in touch!"
        ]
      },
      "requirements": [
        "No previous knowledge about IntelliJ is necessary.",
        "Previous experience in technical writing and AsciiDoc is a plus, but not required.",
        "Basic understanding of Git is required for the chapter covering Git in IntelliJ"
      ],
      "description": "New to IntelliJ IDEA and wonder how to get started with AsciiDoc and Documentation as Code? This beginner’s course takes from and installing IntelliJ IDEA to using it effectively to write, review and navigate technical documentation written in AsciiDoc.\nThe AsciiDoc plugin for IntelliJ IDEA provides you with the best tools to write and validate your content in your IDE. All course material is presented by Alexander Schwartz, the maintainer of the AsciiDoc plugin for IntelliJ and an active member of the AsciiDoc community.\nIt covers all steps necessary to get you ready for Technical Writing with AsciiDoc and IntelliJ IDEA:\nInstalling IntelliJ IDEA as the workplace for technical writing.\nStarting IntelliJ IDEA for the first time and installing the AsciiDoc plugin.\nOpening the first project in IntelliJ IDEA.\nAdding a file to a project and editing AsciiDoc content in an existing project.\nMaking use of the preview to validate the content.\nLearning the AsciiDoc Syntax via small exercises.\nUsing IntelliJ to submit changes to Git via a pull request.\nNavigating from one file to other referenced files in a project.\nSearching AsciiDoc content in a large project.\nAfter this course, you’ll be able to contribute to a documentation project that uses AsciiDoc for its technical documentation via IntelliJ IDEA.\nDuring the course, you can contact the instructor with your questions.",
      "target_audience": [
        "Technical writers who want to get familiar with writing AsciiDoc content in IntelliJ"
      ]
    },
    {
      "title": "Mastering Time & Space Complexity Analysis",
      "url": "https://www.udemy.com/course/mastering-time-space-complexity-analysis/",
      "bio": "Big O Notation, Time Complexity Classes, Space Complexity, Best, Worst, and Average Cases",
      "objectives": [
        "Understand Big O Notation: Grasp and apply Big O notation to analyze algorithm efficiency, covering both time and space complexity.",
        "Understand Big O Notation: Grasp and apply Big O notation to analyze algorithm efficiency, covering both time and space complexity.",
        "Optimize Code for Efficiency: Learn techniques to optimize code, reducing time and space complexity, and improving application performance.",
        "Apply Complexity Analysis: Apply time and space complexity analysis to real-world scenarios, solving practical problems and understanding algorithm trade-offs.",
        "Differentiate Complexity Classes: Distinguish between different complexity classes (constant, logarithmic, linear, quadratic, etc.) and understand their implica",
        "Utilize Data Structures Efficiently: Learn how to choose and utilize appropriate data structures to optimize algorithms for better time and space efficiency."
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course!"
        ],
        "Fundamentals of Time & Space Complexity": [
          "Introduction to Time & Space Complexity",
          "How Hardware Affects Algorithm Performance",
          "Understanding Single Core CPU Multitasking",
          "How Input Size Affect Your Code",
          "Understanding Rate of Growth"
        ],
        "Comprehensive Algorithm Analysis": [
          "Introduction to Asymptotic Notation",
          "Measuring Code Complexity",
          "Understanding Best, Average, & Worst Case Scenarios"
        ],
        "Mastering Big O Notation": [
          "Mastering Big O Notation Like a Pro",
          "How to Calculate Complexity in Big O Notation",
          "Problem 1",
          "Problem 2",
          "Problem 3",
          "Problem 4",
          "Problem 5",
          "Problem 6",
          "Problem 7",
          "Problem 8",
          "Problem 9",
          "Problem 10",
          "Problem 11",
          "Problem 12",
          "Problem 13"
        ],
        "Understanding Performance Cases": [
          "Best Case Scenario",
          "Average Case Analysis"
        ],
        "In-depth Complexity Analysis": [
          "Understanding Recursive Code Time Complexity",
          "Problem 1",
          "Problem 2",
          "Problem 3",
          "Problem 4",
          "Understanding Space Complexity",
          "Understanding Space Complexity in Recursion",
          "Mastering Amortized Analysis",
          "Amortized Analysis with Arrays"
        ]
      },
      "requirements": [
        "Very basic of any programming language is enough"
      ],
      "description": "In this comprehensive online course, you will learn everything you need to know about analyzing the efficiency of algorithms, including time and space complexity. The course covers both the basics and advanced concepts of time and space complexity analysis, starting from the fundamentals and building up to more complex techniques.\nThroughout the course, you will learn how to analyze algorithms and estimate their time and space complexity using various tools and techniques, such as big O notation, asymptotic analysis, worst-case and average-case analysis, and more. You will also learn how to evaluate the trade-offs between different algorithms based on their time and space complexity and choose the most efficient one for a particular problem.\nIn addition to theoretical concepts, the course also includes practical examples and exercises to help you develop hands-on skills in time and space complexity analysis. You will have the opportunity to work with real-world problems and datasets and apply your newly acquired knowledge to solve them.\nWhether you are a beginner or an experienced programmer, this course will provide you with a solid foundation in time and space complexity analysis, an essential skill for anyone working in the field of computer science, data science, or artificial intelligence. By the end of the course, you will have the confidence and skills to analyze any algorithm and make informed decisions about the best approach to solve a particular problem.",
      "target_audience": [
        "Computer science students seeking to understand algorithm efficiency.",
        "Software developers aiming to optimize their code for better performance.",
        "Coding enthusiasts preparing for technical interviews or competitive programming.",
        "Beginners looking for foundational knowledge in time and space complexity.",
        "Experienced programmers wanting to refine their skills in algorithm analysis.",
        "Learners with basic programming knowledge aiming to deepen their understanding of optimization techniques."
      ]
    },
    {
      "title": "Hadoop and Big Data for Absolute Beginners",
      "url": "https://www.udemy.com/course/hadoop-and-big-data-for-absolute-beginners/",
      "bio": "Learn Hadoop, Big Data, Apache Pig, Hive and HDFS from ground up. Learn real world applications of Big Data",
      "objectives": [
        "Learn Big Data Concepts from Ground Up",
        "Learn Big Data and Hadoop Architecture",
        "Learn to use big data in real world applications",
        "Learn associate technologies like HDFS, Pig and Hive"
      ],
      "course_content": {
        "Big Data Concepts": [
          "Course intro",
          "BigDataConcepts - Starting the Journey",
          "BigDataConcepts - Basics",
          "BigDataConcepts - Wrap up"
        ],
        "Big Data Environment Setup": [
          "BigData-EnvSetup-AmazonAwsEC2",
          "BigData-EnvSetup-VirtualBoxUbuntu"
        ],
        "Hadoop Concepts and Setup": [
          "Hadoop - Introduction",
          "Hadoop - Ecosystem Features",
          "Hadoop - Implementations",
          "Hadoop- Installation & Configuration",
          "Hadoop- Installation & Configuration - Part 2"
        ],
        "Hadoop HDFS & Mapreduce": [
          "HDFS Architecture",
          "Hadoop DFS"
        ],
        "Apache Pig": [
          "Hadoop Pig",
          "Hadoop MapReduce",
          "Hadoop MapReduceHandsOn"
        ],
        "Apache Hive": [
          "Hadoop Hive",
          "Hadoop Hive Installation",
          "Hadoop Hive Handson",
          "Hadoop Hive QA",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic programming knowledge is assumed in languages such as Python or Java",
        "Basic knowledge of Linux or Unix"
      ],
      "description": "Master Big Data with our PRACTICAL Big Data Course!\nBig Data isn’t always found in a sorted filed cabinet; sometimes, it’s just in a huge mess of bits and bytes. The value of data isn’t understood until we start finding patterns and trends within the data, which we can then start using for making more sound and informed decisions.\nHowever, there are technological solutions to help you not only sort data, but also help you find these trends within them. Hadoop and HDFS are two of the many different technologies that are available to help you. And, this is exactly what we are offering in this Big Data for absolute beginners course!\nHadoop is an open-source framework and is the more popular solution to big data. It works for storing and processing big data sets using the MapReduce programming model, in which it split files into large blocks and distributes them across nodes in a cluster. These clustered packaged codes are then transferred to nodes to process the data in parallel. This simplifies the process of sorting and processes data faster and more efficiently.\nAnd in this course, you will learn not only about Hadoop and associated technologies but also everything you need to know about Big Data. From installation to configuration and even to actually tackling big data, you will become a big master expert with our course.\n\nDesigned from the ground up, the only pre-requisite is knowing UNIX and Java. In collaboration with Big Data experts, at the end of this course you will not only have the theoretical knowledge, but also the confidence for putting this knowledge into practical application. You will be handling big data projects with our course in no time.\nThe course will cover topics such as different concepts of big data, setting up and configuring Hadoop and EC2 instance, Hadoop core concepts, HDFS architecture, Map Reduce, as well as installation and configuration of Apache Pig and Hive.\nEnroll now and become a Big Data Ninja!",
      "target_audience": [
        "Any one who wants to get started on Big Data technologies like Hadoop, Pig And Hive will find this course very useful"
      ]
    },
    {
      "title": "Mastering microservice communication with Spring Cloud Feign",
      "url": "https://www.udemy.com/course/mastering-microservice-communication-with-spring-cloud-feign/",
      "bio": "Learn how to implement resilient microservice communications in an entirely practical course",
      "objectives": [
        "Using Feign to communicate between microservices",
        "Using Spring Cloud OpenFeign to communicate between microservices",
        "Ensuring service resiliency",
        "Integration testing of microservice communications using WireMock",
        "Integrating circuit breakers into the communications",
        "Ensuring API response time using Time Limiters",
        "Key Resilience4J features combined with Feign",
        "Client side load balancing",
        "Using Spring Cloud Netflix Eureka as a Service Registry"
      ],
      "course_content": {
        "The start": [
          "The architecture",
          "What is Feign?",
          "Creating the projects"
        ],
        "Feign in real-life": [
          "@RequestLine and @Param - The first Feign client to validate user sessions",
          "Configuring a custom JSON decoder for response deserialization",
          "Turning on Logging",
          "@QueryMap - Dynamic data passing",
          "Java default methods with @QueryMap",
          "Using POJOs for URL parameters",
          "@Headers - Posting JSON data to create new products in the system",
          "Custom expander for request parameters",
          "@HeaderMap - Passing dynamic headers",
          "Defining base clients for health checks",
          "Writing our own RequestInterceptor to pass session data to downstream services",
          "Implementing a custom ErrorDecoder",
          "Retrying failed requests",
          "Customizing request timeout options",
          "Following redirects",
          "Async HTTP communication with Feign",
          "Configuring Dropwizard metrics",
          "Configuring Micrometer metrics"
        ],
        "The Spring way": [
          "Implementing Feign clients with Spring Cloud OpenFeign",
          "Async Feign clients with Spring",
          "Maintainable error handling"
        ],
        "Service resiliency with Feign and Resilience4J": [
          "Adding Eureka integration for dynamic discovery",
          "Feign client fallbacks",
          "Configuring error-based circuit breaking with Resilience4J",
          "Configuring slowness-based circuit breaking with Resilience4J",
          "Cutting off traffic when requests are taking too long",
          "Exposing circuit breaker metrics to Spring Actuator",
          "Client load balancing requests to multiple service instances"
        ],
        "Integration testing with Feign clients": [
          "Emulating Feign client behavior with WireMock",
          "Testing client-side load balancing",
          "Testing Resilience4J error-based circuit breaking",
          "Testing Resilience4J slowness-based circuit breaking",
          "Testing Resilience4J traffic cut-off with Resilience4J TimeLimiters"
        ],
        "Course closing": [
          "Course closing"
        ]
      },
      "requirements": [
        "Beginner Java knowledge",
        "Beginner Spring and Spring Boot knowledge",
        "A tiny bit of WireMock knowledge for the testing module"
      ],
      "description": "In this very practical course, you'll learn how to do effective microservice HTTP communication using Feign and Spring Cloud OpenFeign.\nNowadays microservices are everywhere. We need to learn how to use the architecture to our advantage to achieve the targeted goals. I'll help you to understand how to build a resilient communication channel between your services.\nThe course curriculum includes a lot of exciting pieces:\nRegular Feign annotations and mappings\nRetries\nCustom error handling\nTimeout handling\nAsync communication\nSpring Cloud OpenFeign configuration\nResilience4J circuit breakers\nResilience4J time limiters\nIntegrating Spring Cloud Eureka service registry\nClient side load balancing\nIntegration testing the API clients using WireMock\nIntegration testing circuit breakers, time limtiers and load balancing using WireMock\nAnd that's just a high-level overview what's covered. The course includes non-stop coding where we'll build a complex microservice system to make sure you understand the concepts in detail.\nMastering how to build a reliable communication between your services is critical for every product. In a microservice system, everything can break, even your communication. During this course you'll learn the tools to ensure your messages hit the destination.\nAnother important question, making sure your individual services can scale to the load. What if they cannot? How to configure your API clients to cope with this and make sure we're not overloading the services? Using Resilience4J and Spring Cloud OpenFeign, we'll hit this milestone very quickly.\nTesting microservices was never easy. On the contrary, it's a question most engineers would avoid. Using WireMock and combining it with Spring Cloud OpenFeign, I'll show you how to test your request/response mappings, circuit breakers, load balancing, and much more.",
      "target_audience": [
        "Intermediate Java engineers curious about microservice communication",
        "Anybody with little or no experience about Feign",
        "Anybody with little or no experience about Spring Cloud OpenFeign",
        "Java engineers curious about the integration testing of microservice communications"
      ]
    },
    {
      "title": "Learn real world API design in PHP using Apigility",
      "url": "https://www.udemy.com/course/learn-real-world-api-design-in-php-using-apigility/",
      "bio": "PHP is the language of the web. Apigility is structured approach to building REST and RPC based APIs.",
      "objectives": [
        "Create your own unit-tested APIs",
        "Be familiar with Oauth2 authentication and customizing Authorization",
        "Be able to send notification e-mail messages"
      ],
      "course_content": {
        "Scope of course": [
          "Introduction"
        ],
        "Software that we'll be using throughout this course": [
          "IDE installation and Apigility installation",
          "HOTFIX - related to some fatal errors when you run composer update"
        ],
        "Dependency Management": [
          "composer discussion and requiring doctrine-orm-module"
        ],
        "Vagrant, VirtualBox, and not breaking your local OS": [
          "UPDATE — docker container support",
          "DEPRECATED - Virtualbox environment"
        ],
        "Doctrine ORM - Part 1": [
          "Configuring Doctrine",
          "Configuration Doctrine OAuth2"
        ],
        "General ZF2 concepts (no coding here, just conceptual stuff)": [
          "Dependency injection overview",
          "Services and Factories in ZF2"
        ],
        "User Domain Model - Part 1": [
          "Software-level separation of concerns",
          "User Service Interface, User Service, and User Service Factory creation",
          "PHPUnit - Adding to a module",
          "Configuring PHPUnit in scotch box and for our MyCompany module",
          "User Service - User Registration part 1",
          "User Service - User Registration part 2 - repeatable unit tests and exception",
          "User Service - User Registration part 3 - Sending a welcome email",
          "User Service - Forgot Password and Reset Password part 1",
          "User Service - Forgot Password and Reset Password part 2"
        ],
        "Apigility - continuing set-up": [
          "Solving the Deprecated Warning"
        ],
        "REST - User Registration": [
          "Register user - getting some data to flow"
        ],
        "REST - forgot password / reset password": [
          "Rest - Forgot Password",
          "Bonus: Resetting the password -- creating a reset landing page"
        ]
      },
      "requirements": [
        "PHP Syntax",
        "PHP Object Oriented programming",
        "Exception handling",
        "Web server technologies using PHP",
        "A general knowledge of continuous integration"
      ],
      "description": "Learn how to build a robust API for your projects using the actively developed and frequently contributed to API framework, Apigility. This course is designed to jumpstart your API development and clear up many of the potentially confusing parts on how to get started using Apigility.\nAt the end of this course you will have a working API that provides user registration, forgotten password resets, and email notifications. You will gain some working experience with Doctrine ORM and oauth2. Finally, you'll be confident that your API's backing logic will reliably perform how you expect it to because your domain models will be unit tested.",
      "target_audience": [
        "This course is designed for developers already familiar with Object Oriented programming in PHP and need to implement an API but are unfamiliar with Apigility."
      ]
    },
    {
      "title": "An Introduction to AWS CloudFront",
      "url": "https://www.udemy.com/course/master-aws-cloudfront-in-a-weekend/",
      "bio": "Deep Dive into AWS CloudFront and learn how to use this popular CDN",
      "objectives": [
        "How to setup a CloudFront distribution",
        "How to assign permissions to developers working on CloudFront",
        "What is a CDN and how does AWS implement it",
        "Setup AWS CloudFront as a CDN for Wordpress Websites",
        "How to use AWS CloudWatch to monitor CloudFront",
        "Setup SSL certificates for HTTPS requests with CloudFront",
        "Route custom domains to CloudFront using Route 53",
        "The Difference between CDN and Cache"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is CDN",
          "What is an Edge Location",
          "CloudFront Case Study",
          "CDN VS Cache"
        ],
        "AWS Overview": [
          "AWS Overview",
          "AWS UI",
          "What is S3"
        ],
        "Basic Setup": [
          "Setting Permissions",
          "CloudFront Setup 101",
          "Cloudfront for a wordpress website"
        ],
        "Detailed Setup of a Distribution": [
          "Detailed Setup of a Distribution",
          "Lambda Functions",
          "Deliver an API via CloudFront",
          "Custom Error Pages via CloudFront",
          "CloudFront - Object Access Identity",
          "SSL Certificates"
        ],
        "CloudFront for Developers and Support Engineers [Monitoring]": [
          "Alarms",
          "Cache Statistics",
          "Further Monitoring",
          "The CloudFront Quiz",
          "The CloudFront Quiz 2",
          "Quick Assignment - CloudFront"
        ],
        "Conclusion": [
          "Is it the End?"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "You must setup a free or a paid account on Amazon AWS"
      ],
      "description": "Welcome to this AWS CloudFront (CDN)Course\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in AWS CloudFront.\nIn this course you will Learn by example, where we demonstrate all the concepts discussed so that you can see them working, and you can try them out for yourself as well.\nMy step-by-step training will initiate you into the world of AWS CloudFront.\nAmazon CloudFront is a content delivery web service which integrates with servers, Wordpress and AWS Storage to give you a fast way to deliver images, videos, websites (and other content) to end users with low latency and high data transfer speeds by lowering the physical distance your requests have to travel.\nWhy Learn AWS CloudFront?\nAnother Question: How can you delivery you deliver your websites faster?\nAWS CloudFront will help you in all stages of Website Content Delivery. From SSL Certificates to Domain management, AWS CloudFront is there for you. CloudFront can leverage other tools in the AWS suits like Route 53, certificate manager and SNS. Pinpoint all issues during website delivery and setup monitors and alarms to track performance. Use Lambda functions to alter requests and responses as well. Finally, by monitoring all your requests and responses, you can use AWS CloudFront to optimize end user experience. This is done by creating interactive dashboards, monitors and widgets in AWS CloudWatch. CloudWatch helps us monitor all our metrics and logs. Email and Slack Alerting notify you of any upcoming issues.\nDuring this course we will start by covering a range of concepts from an introduction to what a CDN is, to edge locations, to regional edge cache and monitoring. We will then do a step by step guide of creating a Web Distribution, and we also see how to integrate it with 3rd party tools like Wordpress. Post the creation of the Web Distribution we will deep dive into the different configuration options like setting up SSL certificates for HTTPS requests and setting up different Edge locations for our users . We ensure you learn the best practices at all times.\nBy the end of the course you will have set up and learnt to manage a AWS CloudFront like a pro.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Software Developers who want to understand how to get deliver web content faster using a CDN like AWS CloudFront",
        "DevOps Engineers",
        "System Reliability Engineers",
        "Anyone interested in how to use a CDN"
      ]
    },
    {
      "title": "Kubernetes Masterclass for Application Developers",
      "url": "https://www.udemy.com/course/kubernetes-masterclass-for-application-developers/",
      "bio": "Upgrade your skillset by learning Kubernetes with a complete, step-by-step, hands-on course",
      "objectives": [
        "Understand how Kubernetes operates in a cluster-setup",
        "Learn about the most important Kubernetes resources which can be found in any Kubernetes deployment",
        "Be able to debug an application that runs in Kubernetes",
        "Design and implement a Kubernetes setup for a new application",
        "Create and access a Kubernetes cluster in AWS",
        "Understand the best practices for secret management in Kubernetes",
        "Learn to configure rollout strategies in Kubernetes to enable zero-downtime releases"
      ],
      "course_content": {
        "Introduction": [
          "Introduction (promo video)",
          "How you should take this course to get the max out of it"
        ],
        "A short recap about Containers": [
          "What is a container? What makes them so special?",
          "Let's install Docker and play with some containers",
          "What is a Docker image? How can we create one? (tips & tricks)",
          "Let's make 2 containers to talk to each other",
          "Exploring volumes and storages in containers world",
          "Exploring Docker Compose to manage multiple containers"
        ],
        "General Kubernetes Concepts": [
          "What actually is Kubernetes and why it was created?",
          "The role of each component of the Kubernetes Control Plane",
          "What is a Pod and how it relates to a Container?",
          "Let's walk through the Pod lifecycle in Kubernetes",
          "Kubernetes Namespaces and Manifest Files (intro)"
        ],
        "Your first hands-on steps in Kubernetes": [
          "Installing a local Kubernetes cluster with Minikube",
          "Exploring basic kubectl commands",
          "Creating your first Pod with kubectl"
        ],
        "Learning about the Pod Lifecycle Management": [
          "Deploying your own REST API in Kubernetes",
          "Understanding Init containers",
          "Exploring Pod Liveness Probe",
          "Exploring Pod Startup Probe",
          "Understanding Post-Start and Pre-Stop hooks"
        ],
        "Getting access to Pods in Kubernetes through Services": [
          "Exploring Kubernetes Services",
          "Exploring Cluster IP Services",
          "Exploring NodePort Services",
          "Exploring LoadBalancer Services",
          "Exploring Headless Services"
        ],
        "Getting access to Pods in Kubernetes through an Ingress": [
          "What is an Ingress and how it compares to a Service?",
          "Let's install an Ingress Controller in our minikube setup",
          "Creating a new Ingress that routes traffic to a service",
          "Exploring traffic routing strategies of an Ingress"
        ],
        "Managing multiple pods in Kubernetes with ReplicaSets and Deployments": [
          "Exploring ReplicaSets",
          "Exploring the Deployment resource",
          "Exploring the rollout process",
          "Configuring rollout strategies"
        ],
        "Running Batch workflows in Kubernetes": [
          "Exploring the Job resource",
          "Exploring the CronJob resource"
        ],
        "Configuration and Secret Management in Kubernetes": [
          "Exploring the ConfigMap resource",
          "Exploring the Secret resource",
          "Best practices for Secret management in Kubernetes"
        ]
      },
      "requirements": [
        "A local system capable of running minikube, so at least 2 CPUs, 2GB of free memory and 20GB of free disk space",
        "Familiarity with command line is recommended since we're going to use the terminal throughout the course"
      ],
      "description": "Intro\nThis course is the best online resource you need to level up your career by learning Kubernetes from scratch, through hands-on and visual lectures.\nKubernetes is widely used by lots of companies around the world for its stability, versatility and extensibility. It's the engine behind many microservices-based architectures and it powers businesses of billions of dollars.\nThe goal of this course is to teach you the backbone of Kubernetes, which consists of the most essential Kubernetes resources which can be found in any application setup deployed with Kubernetes: Pods, ReplicaSets, Deployments, Services, Ingresses, ConfigMaps, Secrets, PersistentVolumes, and many others.\nIn addition, you'll learn how to discover and adapt to new configurations, because Kubernetes is a platform in active development, so having a strong foundation will make you adaptable enough to learn new resources and build new Kubernetes deployments in the future.\n\nAbout myself\nI'm a Senior Software Engineer, with over 10 years of experience in the field, currently working in big tech. My expertise revolves around designing, implementing and evolving Big Data and low-latency systems using JVM-based technologies.\nI'm heavily involved in building deployment strategies using container-orchestration frameworks (like Kubernetes), but also CI/CD workflows and testing strategies that improve the development process and system stability.\n\n\nWhy I built this course?\nKubernetes is a very complex platform if you try to learn it without a properly defined trajectory. I've seen many people struggling with things like:\nWhy is my pod crashing? What's happening?\nWhy isn't my application receiving any requests?\nWhy is my data lost after my pod wrote it?\nWhat resource should I use to achieve this (particular) functionality?\nThose questions usually uncover some Kubernetes fundamentals that were not properly understood, and it may take hours or even days to debug such issues and figure out what's the problem.\nFor that reason I decided to create a course that explains all those concepts using a bottom-up approach, meaning that concepts are explained using their simplest form, and then everything else is built on top of that.\n\n\nWhat is the content of this course?\nThis course is split into multiple chapters, each one exposing a configuration area of Kubernetes:\nChapter 1 - Introduction\nIn this chapter, we make a short introduction to this course by double-clicking on its scope, and most importantly, how you should follow it so you can get the maximum value out of it.\nThis is an important chapter since it sets the ground for the upcoming lectures.\nChapter 2 - A short recap about Containers\nThis chapter contains a short recap on Docker containers, specifically about the way you can create a Docker image and how to upload it into a remote Docker repository, as well as connecting 2 containers together and passing data between them through a volume.\nThe last lecture makes a short introduction into Docker Compose, which is a compact way of managing multiple containers together.\nChapter 3 - General Kubernetes Concepts\nWe start this amazing journey of learning Kubernetes by visually understanding the main concepts behind it: the cluster setup, the Pod object and its lifecycle and also namespaces.\nThis is a fundamental chapter which sets the ground for the next chapters.\nChapter 4 - Your first hands-on steps in Kubernetes\nIn this chapter you're going install minikube, which is the tool we're going to use throughout this course to play with Kubernetes\nWe're going to introduce the kubectl command line utility that is the bread and butter of Kubernetes, with this command we're going to do pretty much everything in this course\nIn this chapter you're going to create your first Pod in Kubernetes!\nChapter 5 - Learning about the Pod Lifecycle Management\nThis chapter covers the Pod Lifecycle, which involves init containers, readiness & liveness probes as well as post-start and pre-stop hooks\nThose are essential configurations for making sure that Kubernetes perceives your application as up & running\nIn this chapter you're going to deploy your first API in Kubernetes\nChapter 6 - Getting access to Pods through Services\nThis chapter covers the Service resource in Kubernetes, which is essentially a network-level configuration that enables access and load balancing to your pods\nWe're going to learn about multiple types of services, how they work, and what are the main differences between them\nChapter 7 - Getting access to Pods through an Ingress\nIn this chapter we're going to play with an Ingress resource, which is responsible for routing traffic to different services, using configurable routing strategies.\nYou're going to learn about ingress controllers and the main differences between an ingress and a service\nChapter 8 - Managing multiple pods in Kubernetes through ReplicaSets and Deployments\nWe finally reached the chapter where we learn about Deployments and ReplicaSets, which are resources that manage multiple pods in a resilient manner\nBoth those resources ensure that a pre-configured number of replicas is up and running at any given time\nYou're going to learn about rollout strategies as well using the Deployment resource\nChapter 9 - Running Batch workflows in Kubernetes\nThis chapter covers batch workflows in Kubernetes, and we're going to learn about the Job and CronJob resources, which map on a lot of use-cases.\nWe're going to understand how they work and their most important configurations\nChapter 10 - Configuration and Secret Management in Kubernetes\nIn this chapter we're going to cover the ConfigMap and Secret resources, that enable app developers to provide live-changing configurations and secrets to their applications.\nYou're going to learn also best practices for secret management in Kubernetes, using the Vault operator.\nChapter 11 - Managing Storage in Kubernetes\nThis chapter covers stateful workloads in Kubernetes, by exploring the PersistentVolume and PersistentVolumeClaim resources\nYou're going to learn the role of those 2 resources and how they abstract the access to different cloud-storage solutions\nFinally, we're going to learn about the StatefulSet resource, which enables database deployments (and other stateful workloads) in Kubernetes by guaranteeing pod uniqueness.\nChapter 12 - Deploying your app in AWS Elastic Kubernetes Service\nIn this last chapter, we're going to deploy our application in a Kubernetes cluster that we create in AWS using Elastic Kubernetes Service\nYou're going to learn about EKS, IAM, EC2 and other AWS services, while we configure kubectl access to our EKS cluster\nYou're going to learn how to access your application using a network load balancer and also an application load balancer\n\n\nWhat are the requirements for this course?\nA local system capable of running minikube, so at least 2 CPUs, 2GB of free memory and 20GB of free disk space\nA strong desire to learn Kubernetes!\n\n\nThank you for taking the time to look through this description and I'm looking forward to see you in the first lecture!",
      "target_audience": [
        "Application developers who want to expand their expertise by learning Kubernetes",
        "Senior Software Engineers who want to make cross-functional contributions in their organisations",
        "Computer Science Students who want to learn Kubernetes"
      ]
    },
    {
      "title": "Part 1: Video Coding with FFMPEG and C",
      "url": "https://www.udemy.com/course/part-1-video-coding-with-ffmpeg-and-c-in-replit-online-ide/",
      "bio": "Turn FFMPEG commands into code using the C programming language. Handle FFMPEG Data Structures like a Pro Engineer.",
      "objectives": [
        "Learn the basic FFMPEG Data Structures i.e. AVStream, AVFormatContext, AVDictionary etc",
        "Link native FFMPEG libraries to the GNU Compiler Collection",
        "Learn how to use the Replit online IDE to improve learning outcomes",
        "Handle image color correction and algorithmic pixel scaling",
        "Convert FFMPEG command line text into C programs",
        "Use the C Int Types library to work on raw integer data",
        "Manipulate raw bytes for audio and graphical data in the C programming language"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Replit and FFMPEG",
          "Replit Setup"
        ],
        "Compiling FFMPEG, writing our First Function and Bonus Content for Linux users": [
          "Compiling FFMPEG",
          "A function to check if a file exists"
        ],
        "Getting file metadata": [
          "The Dump Format function",
          "AVFormatContext and AVDictionary Data Structures",
          "AV TIME BASE macro, PRId64 macro and int64_t Data Type",
          "Defining Function Macros , Cleaning code and AVDictionary Data Structure"
        ],
        "Deep Dive into Data Structures": [
          "Navigating the FFMPEG Docs",
          "Working with AVCodec, AVCodecParameters and AVStream"
        ]
      },
      "requirements": [
        "Basic grasp of C programming"
      ],
      "description": "**You can code on your phone or laptop. No installations necessary! Super accessible course thanks to Replit!**\nFFMPEG is an audio and video library used by Netflix, TikTok, Comcast and Disney engineers to manipulate audio and video.\nVideo coding engineers earn a basic salary of 180k and companies like NETFLIX pay video coding engineers 900k total compensation.\nThis video series introduces video coding to committed learners. We emphasize using the C programming language, not the command line. The goal is to make accessible video and audio coding to programmers who desire to work in HIGH-PAYING fields. All the code is written in Replit, an online IDE, to allow programmers to code alongside the instructor. Again, the instructor's goal is to make accessible video coding.\nThis course introduces learners to the FFMPEG C API. Unlike courses that teach the command line, this series focuses on writing code in the C programming language.\nStudents are taught -\nHow to navigate the vast FFMPEG documentation.\nThe data structures available to C programmers.\nTips and Tricks professional C programmers use with FFMPEG.\nBy the end of the 1st part learners shall grasp these data structures:\nAVDictionary\nAVDictionaryEntry\nAVCodec\nAVCodecParameters\nAVStream\nAVFormatContext\nAVRational\nAVMEDIA_TYPE\nLearners shall also learn how to work with int64_t data types as defined in the inttypes.h header.",
      "target_audience": [
        "Beginners who desire to learn the FFMPEG API in C",
        "Programmers who want to get into the video and streaming industry",
        "Teams that handle audio and visual content"
      ]
    },
    {
      "title": "C Programming Mastery-Structured Approach from Novice to Pro",
      "url": "https://www.udemy.com/course/structured-programming-in-c-the-ultimate-beginners-course/",
      "bio": "Master C Programming as a Beginner for Proficiency and Lucrative Opportunities. Master Pointers as well.",
      "objectives": [
        "Master the C programming language.",
        "Master the core language that most modern languages are based on. One of the most populate programming languages in the world.",
        "Create various C applications.",
        "Learn the fundamentals of programming languages.",
        "Learn what are Algorithms and how to design one.",
        "Master the program structure, all the keywords, data types and variables in C.",
        "Master the control flow (IF, ELSE, FOR, WHILE, SWITCH).",
        "Master various data structures (Arrays, Matrices, Pointers, Strings, Files).",
        "Master the Functions and Recursion.",
        "Gain problem solving skills (how to solve a problem efficiently and elegantly).",
        "Gain style for good programming (еfficient programming, readable code)."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Programming Languages",
          "Algorithms",
          "Setting up the environment and creating the first project"
        ],
        "Basics": [
          "Program structure, keywords in C, data types",
          "Arithmetical and logical operations",
          "Exercises: Arithmetical and Logical operations",
          "Control Flow",
          "Exercises: Control Flow",
          "Arrays",
          "Exercises: Arrays"
        ],
        "Advanced": [
          "Functions",
          "Exercises: Functions",
          "Recursion",
          "Exercises: Recursion",
          "Pointers",
          "Exercises: Pointers",
          "Strings",
          "Exercises: Strings",
          "Files",
          "Exercises: Files"
        ]
      },
      "requirements": [
        "Basic math skills.",
        "Have a computer (either Mac, Windows, or Linux).",
        "Desire to learn!",
        "No experience needed. You will learn everything you need to know!"
      ],
      "description": "Welcome to the gateway of your software engineering journey!\nIf you aspire to become a proficient software engineer, you've landed at the perfect spot. This course is your ticket to unlocking the intricacies of one of the most powerful and foundational programming languages – C.\nWhy Structured Programming in C?\nStructured programming is the bedrock of efficient and maintainable software development. It's the art of crafting code in a systematic and organized manner, making it easier to understand, modify, and debug. When paired with the C programming language, the synergy is nothing short of magical.\nC, often hailed as the \"mother of all programming languages\", is renowned for its simplicity, efficiency, and close-to-hardware capabilities. It has been the driving force behind countless software systems, operating systems, and embedded applications. By mastering C, you not only gain a deep understanding of programming principles but also open doors to a world of possibilities in software development.\nWhat Makes This Course Stand Out?\nOur \"Structured Programming in C\" course is meticulously crafted to cater to both beginners and intermediate learners. Whether you're taking your first steps into the programming realm or looking to enhance your existing skills, this course provides a comprehensive and hands-on approach to learning.\nPractical Hands-On Learning: Dive into projects that simulate the challenges faced by software engineers daily.\nStructured Approach: Understand the power of organized code and how it contributes to the creation of robust and scalable software applications.\nExpert Guidance: Learn from seasoned instructor with years of industry experience, ensuring you receive top-notch guidance throughout your learning journey.\nEngaging Learning Environment: Join a community where curiosity is encouraged, questions are embraced, and the joy of learning is at the forefront. Despite being a new face in teaching, my passion for fostering a supportive learning environment ensures you feel empowered every step of the way.\nCareer Boost: Gain a competitive edge in the job market by acquiring skills that are highly sought after by employers in the software development industry.\nWhy Enroll Today?\nEmbark on this transformative learning experience guided by a passionate instructor who's dedicated to your success.  As a new teacher with a fresh perspective, I bring not only knowledge and skills but also a commitment to making your learning journey engaging and effective. Join me in this exciting adventure, and let's build your programming prowess together!\nMake the best decision for your career – embark on a journey that will shape you into a skilled and sought-after software engineer. Don't miss out on the opportunity to elevate your programming skills and open doors to a world of exciting possibilities. Enroll now and let your programming journey begin!",
      "target_audience": [
        "Beginner developers who have a desire for becoming software engineers.",
        "Developers who are looking to enhance their existing skills."
      ]
    },
    {
      "title": "Web Scraping Mastery with Python 2023",
      "url": "https://www.udemy.com/course/web-scraping-mastery/",
      "bio": "Become an expert in web scraping, finding hidden api's, reversing them and bypassing web automation/bot detection.",
      "objectives": [
        "Learn about the web scraping fundamentals",
        "Learn about the top 3 web scraping methods",
        "Learn to analyze websites and choose the optimal web scraping method",
        "Learn to find hidden API's and reverse them",
        "Learn to perform request and emulation based web scraping",
        "Learn to parse HTML & JSON",
        "Learn to optimize your requests and create clean fingerprints",
        "Learn to bypass many anti-bot detections with selenium emulation (Advanced & unique)",
        "Learn web-automation with selenium",
        "Learn to scrape e-commerce stores and review websites"
      ],
      "course_content": {
        "Web Scraping Fundamentals": [
          "Web Scraping process",
          "Using chrome dev tools to analyze websites",
          "Choosing the appropriate scraping method",
          "HTML & JSON parsing",
          "The Art of Parsing (New additional content)",
          "Parsing practice quizz"
        ],
        "Request based web scraping": [
          "Web Request explained",
          "[Project] Request based web scraping product listings",
          "[Project] Advanced request based web scraping",
          "The 4 Layers of web security you will encounter",
          "[Project] Trustpilot review scraping bypassing security layer 1 & 2"
        ],
        "Emulation based web scraping & web automation": [
          "Web emulation explained",
          "First emulation with selenium & chromium",
          "[Project] Web automation with selenium @ google.com",
          "Spoofing the emulation & creating a reuseable driver creation class",
          "[Project] Scraping Google places reviews (Emulation + API Reversal -> Requests)"
        ],
        "Assignment": [
          "API & WEB Reversal"
        ]
      },
      "requirements": [
        "Basic knowledge in Python",
        "Internet Access",
        "Hardware with minimum of 4GB RAM"
      ],
      "description": "Web Scraping has become an art in todays online world, more and more websites learn to block automated traffic or generate their data dynamically. Common web scraping techniques are deprecated and tutorials outdated.\nIn addition, the first thing you will see when you google web scraping, are proxy or scraping service providers, which earn alot of money by providing scraping services. Those services use certain tricks to provide scraping services for important websites like amazon, google etc., but they wont share those tricks (I do in this course). They claim to use emulation or simmilar techniques to scrape their targets, but in reality they use much cheaper and more efficient ways of scraping the desired data.\nIn this course you will learn the web scraping fundamentals within an hour and then proceed with learning those secret tricks, big web scraping providers use.\n\n\nWhat can you expect?\nWe will take a look at the web scraping fundamentals and exercise choosing the optimal scraping solution...\nWe will build projects to scrape review data of trustpilot, amazon, google places and so on...\nWe will solve real world practice exercises...\nYou will have advanced knowledge about anti-bot detections and security mechanisms of websites...\nYou will learn about advanced web automation...\nYou will learn about customizing your fingerprint and bypass automation detections...\nYou will learn to reverse complex API's and practice it with real world examples...\nand so much more...",
      "target_audience": [
        "Anyone who wants to scrape data from any website",
        "Skilled developers who want to obtain advanced knowledge in Web Scraping",
        "Entrepreneurs who want to compete in the global Web Scraping & Web-automation market",
        "Anyone who wants to stop spending hours manually copying data off a website, and wants to automate this task",
        "Anyone who wants to scrape Google, Amazon etc."
      ]
    },
    {
      "title": "System Design - Creating a functional design",
      "url": "https://www.udemy.com/course/system-functional-design/",
      "bio": "Functional Design - the first step to being a software architect/principal engineer",
      "objectives": [
        "Create a functional architecture for large products or platforms",
        "Define components and services using single responsibility principle",
        "Component Design",
        "Minimize service sprawl"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Core functions": [
          "Core functions",
          "Assignment - Core function"
        ],
        "Understanding the basics": [
          "Defining the components using single responsibility principle",
          "Integration Design"
        ],
        "Component Design": [
          "Component Design - Part 1",
          "Component Design - Part 2",
          "Component Design - Part 3"
        ],
        "Review and Assignment": [
          "Creating an end-to-end system view",
          "Final Assignment"
        ]
      },
      "requirements": [
        "Some programming experience"
      ],
      "description": "The ability to create an end-to-end system design differentiates a developer from principal engineers and architects. One of the most important aspects of system design is the ability to create a functional design outlining all the components and how they work together. This course provides a step-by-step approach to create a functional design for a system using single responsibility principle and architectural patterns.\nIn this course, you will learn how to\n1) Define the users of a platform you want to build\n2) Understand the most important problems for the users the platform is meant to solve and define the core functions that solve this problem.\n3) A depth-first based approach to design the core functions one-by-one.\n4) Define the components and their integration framework using the single responsibility principle.\n5) Understand the difference between frontend and backend design and the need for a BEFE layer like GraphQL.\n6) Detailed design of each component\n7) Creating an end-to-end system view from the component design.\nWe will use a running example throughout this course to apply the approach described in this course. There are a set of assignments that every student should complete as part of this course. Finally, it is important for you to apply the learnings in your day-to-day work and improve your system design skills with time.",
      "target_audience": [
        "Developers who want to learn system design and up-level to principal engineer/architect"
      ]
    },
    {
      "title": "100 Days of Code: JavaScript Data Structures and Algorithms",
      "url": "https://www.udemy.com/course/javascript-data-structures-and-algorithms/",
      "bio": "Data Structures and Algorithms from Zero to Hero and Crack Top Companies 100+ Interview questions (LEETCODE)",
      "objectives": [
        "Learn DSA Faster with Animated Examples",
        "166 Coding Exercises",
        "Learn, implement and use different Data Structures",
        "Confidently Answer Technical Interview Questions",
        "Learn, implement and use different Algorithms",
        "Time and Space Complexity of Data Structures and Algorithms"
      ],
      "course_content": {
        "Day 1 - Introduction": [
          "Welcome",
          "How to Get Most of Out of This Course",
          "Channel for the Course",
          "What is a Data Structure?",
          "What is an Algorithm?",
          "Why are Data Structures and Algorithms important?",
          "Code Editor",
          "DSA"
        ],
        "Day 2 - Big O Notation": [
          "What is Big O?",
          "Big O Notations - Theta , Omega and Big O",
          "Big O - O(1)",
          "Big O - O(n)",
          "Drop Constants",
          "Big O - O(n2)",
          "Drop Non Dominant Terms",
          "Big O - O(Log n)",
          "Different Terms for Input - Add vs Multiply",
          "Space Complexity",
          "How to Measure the Code using Big O?",
          "Big O Quiz"
        ],
        "Day 3/4 - Arrays": [
          "What is an Array? Why do we need it?",
          "Types of Arrays",
          "Arrays in Memory",
          "Creating Arrays",
          "Inserting Elements to Array",
          "Accessing Array Elements and Array Traversal",
          "Search for a Value in Array",
          "Deleting Elements from Array",
          "Javascript Array Quiz"
        ],
        "Day 4/5 - Array Coding Exercises": [
          "Create and Manipulate Arrays",
          "Reverse an Array",
          "Insert and Remove Elements",
          "Minimum and Maximum",
          "Sum of Array Elements",
          "LeetCode 1 - Two Sum",
          "LeetCode 189 - Rotate Array"
        ],
        "Day 6/7 - Linked List": [
          "What is Linked List?",
          "Linked List vs Arrays",
          "Linked List in Memory",
          "findIndex",
          "Types of Linked List",
          "Find Missing Number",
          "Node Class Constructor",
          "Create Singly Linked List",
          "Append Method Singly Linked List",
          "toString Method Singly Linked List",
          "Prepend Method Singly Linked List",
          "Insert Method Singly Linked List",
          "Traversal of Singly Linked List",
          "Search Method Singly Linked List",
          "Get Method Singly Linked List",
          "Set Method Singly Linked List",
          "popFirst Method Singly Linked List",
          "Pop Method Singly Linked List",
          "Remove Method Singly Linked List",
          "Delete All Method Singly Linked List",
          "Time and Space Complexity of Singly Linked List",
          "Singly Linked List"
        ],
        "Day 8 - Linked List Coding Exercises": [
          "Singly Linked List Constructor",
          "Singly Linked List Append Method",
          "Singly Linked List Prepend Method",
          "Singly Linked List Get Method",
          "Singly Linked List Set Method",
          "Singly Linked List Pop First Method"
        ],
        "Day 9 - Singly Linked List LeetCode and HackerRank": [
          "Remove Duplicates from Sorted List (LeetCode 83)",
          "Compare two linked lists (HackerRank)",
          "Remove Linked List Elements (LeetCode 203)",
          "Merge two sorted linked lists (HackerRank)",
          "Palindrome Linked List (LeetCode 234)"
        ],
        "Day 10/11 - Circular Singly Linked List": [
          "Create Circular Singly Linked List (CSLL)",
          "Append Method Circular Singly Linked List",
          "toString Method",
          "Prepend Method Circular Singly Linked List",
          "Traversal of Circular Singly Linked List",
          "Search Method Circular Singly Linked List",
          "Get Method Circular Singly Linked List",
          "Set Method Circular Singly Linked List",
          "Pop First Method Circular Singly Linked List",
          "Pop Method Circular Singly Linked List",
          "Remove Method Circular Singly Linked List",
          "Delete All Method Circular Singly Linked List",
          "Time and Space Complexity of Circular Singly Linked List",
          "Circular Singly Linked List Quiz"
        ],
        "Day 12 - Circular Linked List CODING EXERCISES (LeetCode and HackerRank)": [
          "Insert at the end of CSLL",
          "Insert at the Beginning of CSLL",
          "Delete from the Beginning of CSLL",
          "Delete from the end of CSLL",
          "Cycle Detection (HackerRank and LeetCode 141)"
        ],
        "Day 13/14 - Doubly Linked List": [
          "Doubly Linked List Node Class",
          "Doubly Linked List Class - Constructor",
          "toString Method Doubly Linked List",
          "Prepend Method Doubly Linked List",
          "Traversal Method Doubly Linked List",
          "Reverse Traversal Method Doubly Linked List",
          "Search Method Doubly Linked List",
          "Get Method Doubly Linked List",
          "Set Method Doubly Linked List",
          "Insert Method Doubly Linked List",
          "PopFirst Method Doubly Linked List",
          "Pop Method Doubly Linked List",
          "Remove Method Doubly Linked List",
          "Delete All Method Doubly Linked List",
          "Time and Space Complexity of Doubly Linked List",
          "DLL Quiz"
        ]
      },
      "requirements": [
        "Basic programming",
        "No experience with data structures or algorithms needed",
        "No previous computer science knowledge necessary"
      ],
      "description": "Are you ready to transform your JavaScript skills and master Data Structures & Algorithms in the most structured, engaging, and practical way?\nWelcome to 100 Days of Code: JavaScript Data Structures and Algorithms, a step-by-step, hands-on coding journey designed to take you from the basics to advanced problem-solving techniques used by top software engineers at Google, Amazon, Facebook, and Microsoft.\n\n\nWhy This Course?\nMany courses give you dry theory, but this course is different!\nStructured 100-Day Plan – No more wondering what to learn next. We guide you every single day.\nHands-on Coding Exercises – 150+ exercises with real-world coding problems, including LeetCode, HackerRank & FAANG-style challenges.\nPractical Interview Preparation – Master the exact concepts asked in coding interviews, with step-by-step explanations.\nBig O Complexity Explained – Learn efficient coding techniques, optimize your solutions, and write scalable code.\nDeep Dives into JavaScript – Not just algorithms, but JavaScript-specific implementations that boost your problem-solving skills.\n\n\nWhat You Will Learn:\n\n\nThis course covers everything you need to know about Data Structures and Algorithms (DSA) in JavaScript:\nBig O Notation & Complexity Analysis\nUnderstand how to analyze and optimize your code.\nEssential Data Structures\nArrays, Linked Lists (Singly, Doubly, Circular)\nStacks & Queues (Array & Linked List Implementation)\nHash Tables (Collision Resolution Techniques)\nTrees & Graphs (BFS, DFS, Adjacency List & Matrix)\nTries, Heaps, and Disjoint Sets\nSorting & Searching Algorithms\nBubble Sort, Selection Sort, Insertion Sort\nMerge Sort, Quick Sort, Bucket Sort\nLinear Search, Binary Search\nAdvanced Algorithms\nGraph Algorithms – BFS, DFS, Topological Sort, Dijkstra’s, Bellman-Ford, Floyd-Warshall\nDynamic Programming (DP) – Memoization, Tabulation, Fibonacci, House Robber, Coin Change\nDivide & Conquer – QuickSelect, Exponentiation by Squaring, Skyline Problem\nGreedy Algorithms – Activity Selection, Huffman Coding, Fractional Knapsack\nBacktracking – N-Queens, Word Search, Permutations\n\n\nFAANG-Level Interview Practice\n75+ LeetCode & HackerRank problems with step-by-step solutions\nReal-world coding problems to make you job-ready!\n\n\nWho is this Course For?\n\n\nJavaScript developers preparing for technical interviews\nSelf-taught programmers who missed computer science fundamentals\nUniversity students struggling with DSA concepts\nAnyone who wants to write efficient, scalable, and optimized code\n\n\nWhy Choose This Course Over Others?\n100 Days of Structured Learning – Unlike random tutorials, this course guides you every step of the way.\n150+ Hands-on Coding Challenges – Because theory alone won’t get you hired.\nLeetCode & FAANG-Level Interview Questions – Get real interview practice as you learn.\nJavaScript-Specific DSA – Learn how JavaScript handles memory, recursion, and data structures better than generic courses.\nClear & Practical Explanations – No fluff. No wasted time. Just results!\n\n\nStudent Reviews from my other courses\n“The best hands-on DSA course ! Super structured and detailed.” – John Monteggia\n“I cracked my FAANG interview because of this course. 100% recommended!” – Eddie Yoga\n“This is the most complete DSA roadmap. If you're serious about interviews, take this course.” – Nikita Dabas\n\n\nReady to become a JavaScript DSA expert?\nDon’t waste time on scattered resources—follow a proven roadmap and master DSA in 100 days!\nEnroll now and start coding your way to success!",
      "target_audience": [
        "Anybody interested in learning more about data structures and algorithms or the technical interview process!",
        "Self-taught programmers who have a basic knowledge in JS and want to be professional in Data Structure and Algorithm and begin interviewing in tech positions!",
        "Students currently studying computer science and want supplementary material on Data Structure and Algorithm and interview preparation for after graduation!",
        "Professional programmers who need practice for upcoming coding interviews."
      ]
    },
    {
      "already_crawled_in": "it-and-software/IT Certifications",
      "url": "https://www.udemy.com/course/implement-advanced-virtual-networking/"
    },
    {
      "title": "Autonomous Robots: Localization",
      "url": "https://www.udemy.com/course/autonomous-robots-localization/",
      "bio": "Learn how a Particle Filter can find a robot! This technology used in Autonomous Vehicles and Self-Driving Cars!",
      "objectives": [
        "How to use a Particle Filter to properly localize a robot!"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Python Intro and Install Guide",
          "What to do if you are still have issues with Python",
          "Problem Setup"
        ],
        "Least Squares": [
          "Least Squares",
          "Assignment 1 Walkthrough",
          "Assignment 1 Solution"
        ],
        "1D Bayes Rule": [
          "Localization Example",
          "Simple Bayes Part 1",
          "Simple Bayes Part 2",
          "Simple Bayes Part 3",
          "Assignment 2 Part 1 Walkthrough",
          "Assignment 2 Part 2 Walkthrough",
          "Assignment 2 Solution"
        ],
        "1D Particle Filter": [
          "Toy Particle Filter",
          "Assignment 3 Part 1 Walkthrough",
          "Assignment 3 Part 1 Solution",
          "Movement Uncertainty",
          "Assignment 3 Part 2 Walkthrough",
          "Assignment 3 Part 2 Solution",
          "Measurement",
          "Assignment 3 Part 3 Walkthrough",
          "Assignment 3 Part 3 Solution",
          "Measurement Uncertainty",
          "Assignment 3 Part 4 Walkthrough",
          "Assignment 3 Part 4 Solution",
          "Resampling",
          "Assignment 3 Part 5 Walkthrough",
          "Assignment 3 Part 5 Solution",
          "Assignment 3 Part 6 Walkthrough",
          "Assignment 3 Part 6 Solution"
        ],
        "2D Particle Filter": [
          "2D Movement",
          "Assignment 4 Walkthrough",
          "Assignment 4 Part 1 Solution",
          "2D Measurement",
          "Assignment 4 Part 2 Solution",
          "2D Update Weights",
          "2D Resample",
          "Assignment 4 Part 4 Solution",
          "Assignment 4 Part 5 Solution",
          "Assignment 4 Part 6 Solution",
          "Assignment 4 Part 3 Solution"
        ],
        "Outro": [
          "Outro"
        ]
      },
      "requirements": [
        "None!"
      ],
      "description": "FYI all Aspiring Roboticists: Your Robot Will Not Work Without Localization! Learn How to Solve This!\nWant to learn the ins and outs of localization in robotics in an easy-to-follow, hands-on, streamlined online course? This program is for you. My course will introduce you to a variety of valuable robotics concepts in a way that is easy to understand and implement, even for robotics beginners!\nYou won’t just be lectured on concepts, you’ll have the chance to put it all to use. You’ll make your own code and test it, just as you would in an in-person workshop. Through our custom online simulator, you can see the results of your solution and how it would work on an autonomous robot in the real world!\nLearning new skills gives you a competitive advantage. Learning about localization gives you another tool to add to your robotics toolbox, and gives you the ability to take on more complex projects. Whether you want to put your coding knowledge to use in your workplace, school, or in your garage (because you just find robots fun; I find them fun, too) this course can help you level up your game.\nCheck out the course and get started experimenting, exploring and seeing what you can do!",
      "target_audience": [
        "Aspiring roboticists"
      ]
    },
    {
      "title": "Mastering Design Patterns - Become a Professional Developer",
      "url": "https://www.udemy.com/course/mastering-design-patterns-become-a-professional-developer/",
      "bio": "Become a Professional Software Engineer, Excel in University Exams & Succeed in the Coding Interviews",
      "objectives": [
        "Master the Structural Design Patterns (Adapter, Bridge, Composite, Decorator, Facade, Flyweight, Proxy)",
        "Master the Creational Design Patterns (Factory, Abstract Factory, Builder, Prototype, Singleton)",
        "Master the Behavioural Design Patterns (Memento, Chain of Responsibility, Command, Iterator, Mediator, Observer, Template, Visitor, Strategy)",
        "Understanding & Creating UML Diagrams",
        "Creating 41 Coding Projects implementing the Design Patterns",
        "Solving 10 Real University Exams",
        "Identify & Solve the Coding Problems"
      ],
      "course_content": {},
      "requirements": [
        "Basic Coding Experience in Any Language",
        "Motivation to Become a Professional Software Developer"
      ],
      "description": "? Are you excited to learn design patterns, but they look complex and obscure.\n? Do you need real examples and step by step code implementation for these design patterns?\n? Are you looking to master the coding interview questions, excel in university exams , or even become  a professional Developer ???\n\n\n??? You came to the right place!  ???\n\n\nIf you want to reach the highest levels of software engineering, you simply MUST master design patterns.\nMost employers are looking for senior software engineers with design pattern skills, and they’re willing to pay extra ?? to hire them.\n\n\n? Basically, design patterns is all about designing maintainable and extensible object-oriented software.\nAnd those are the skills you're going to learn in this course, all using real-world examples! No pizzas, ducks, cars and coffees! Just real software examples.\n\n\n\n\n? Hello my friend, and welcome to Mastering Design Patterns Course,\nI'm Abbass Masri, Running successfull courses on UDEMY with a very good ratings, and best seller course in Android app development.\nMoreover, I'm publishing \"Master Coding App\" on playstore with high rating and  around 1 million installs.\n\n\nStarting from my successful experience in Coding and Teaching, I decided to create this well-crafted course to help you become a professional developer and Master Design patterns.\n\n\nYou'll learn how to design  REUSABLE & EXTENSIBLE Object oriented software. It doesn't matter what language you are familiar with, we just need some basic programming experience.\n\n\n? We'll start from the basics covering the OOP concepts, Classes, Inheritance, polymorphic, abstraction,\npassing through the Unified modelling language UML.\n\n\n?  Then we will master all the structural , behavioural, and Creational design patterns through:\n- Well-Designed lectures and detailed structures of the patterns\n- Discussing 41 real problems and implementing their solutions, so you will create 41 different projects.\n- Solving 10 real university exams & exercises, step by step.\n\n\n----------------------------------------------------------------------------------------------------------------------------------\n??  The good news is that we'll keep updating this course and add new coding exercises\n?? The Bad news is if you don't enrol now, you will waste your time & money trying to find a professional course with a lot      of coding examples like this course.\n\n\n?? This course is designed to help you implement the design patterns in your next projects, or maybe your current projects.\nAlso, you will immerse yourself into new way of looking at software design through the lenses of java design patterns\n\n\n?? I'm very great full that you're here, & I'm looking forward to see you inside",
      "target_audience": [
        "Anyone who wants to become a professional software developer",
        "Any developer who likes to advance his coding career",
        "University Students who like to excel in their Design Patterns course"
      ]
    },
    {
      "title": "Big Data Intro for IT Administrators, Devs and Consultants",
      "url": "https://www.udemy.com/course/big-data-intro-big-money-for-admins-devs-and-consultants/",
      "bio": "Grasp why \"Big Data\" knowledge is in hot demand for Developers / Consultants and Admins",
      "objectives": [
        "Grasp why \"Big Data\" is the current Gold Rush for Developers / Consultants and Admins",
        "Understand the Hadoop ECO System.",
        "Basic HDFS / YARN / HIVE / SCOOP / SPARK will be covered with examples"
      ],
      "course_content": {},
      "requirements": [
        "Nice to have some development background",
        "Nice to have some SQL knowledge"
      ],
      "description": "Understand \"Big Data\" and grasp why, if you are a Developer, Database Administrator, Software Architect or a IT Consultant, why you should be looking at this technology stack\nThere are more job opportunities in Big Data management and Analytics than there were last year and many IT professionals are prepared to invest time and money for the training.\nWhy Is Big Data Different?\nIn the old days… you know… a few years ago, we would utilize systems to extract, transform and load data (ETL) into giant data warehouses that had business intelligence solutions built over them for reporting. Periodically, all the systems would backup and combine the data into a database where reports could be run and everyone could get insight into what was going on.\nThe problem was that the database technology simply couldn’t handle multiple, continuous streams of data. It couldn’t handle the volume of data. It couldn’t modify the incoming data in real-time. And reporting tools were lacking that couldn’t handle anything but a relational query on the back-end. Big Data solutions offer cloud hosting, highly indexed and optimized data structures, automatic archival and extraction capabilities, and reporting interfaces have been designed to provide more accurate analyses that enable businesses to make better decisions.\nBetter business decisions means that companies can reduce the risk of their decisions, and make better decisions that reduce costs and increase marketing and sales effectiveness.\nWhat Are the Benefits of Big Data?\nThis infographic from Informatica walks through the risks and opportunities associated with leveraging big data in corporations.\nBig Data is Timely – A large percentage of each workday, knowledge workers spend attempting to find and manage data.\n\nBig Data is Accessible – Senior executives report that accessing the right data is difficult.\n\nBig Data is Holistic – Information is currently kept in silos within the organization. Marketing data, for example, might be found in web analytics, mobile analytics, social analytics, CRMs, A/B Testing tools, email marketing systems, and more… each with focus on its silo.\nBig Data is Trustworthy – Organizations measure the monetary cost of poor data quality. Things as simple as monitoring multiple systems for customer contact information updates can save millions of dollars.\nBig Data is Relevant – Organizations are dissatisfied with their tools ability to filter out irrelevant data. Something as simple as filtering customers from your web analytics can provide a ton of insight into your acquisition efforts.\nBig Data is Authoritive – Organizations struggle with multiple versions of the truth depending on the source of their data. By combining multiple, vetted sources, more companies can produce highly accurate intelligence sources.\nBig Data is Actionable – Outdated or bad data results in organizations making bad decisions that can cost billions.\n.\n\nHere I present a curriculum as to the current state of my Cloudera courses.\nMy Hadoop courses are based on Vagrant so that you can practice and destroy your virtual environment before applying the installation onto real servers/VMs.\n.\nFor those with little or no knowledge of the Hadoop eco system Udemy course : Big Data Intro for IT Administrators, Devs and Consultants\n.\nI would first practice with Vagrant so that you can carve out a virtual environment on your local desktop. You don't want to corrupt your physical servers if you do not understand the steps or make a mistake. Udemy course : Real World Vagrant For Distributed Computing\n.\nI would then, on the virtual servers, deploy Cloudera Manager plus agents. Agents are the guys that will sit on all the slave nodes ready to deploy your Hadoop services Udemy course : Real World Vagrant - Automate a Cloudera Manager Build\n.\nThen deploy the Hadoop services across your cluster (via the installed Cloudera Manager in the previous step). We look at the logic regarding the placement of master and slave services. Udemy course : Real World Hadoop - Deploying Hadoop with Cloudera Manager\n.\nIf you want to play around with HDFS commands (Hands on distributed file manipulation). Udemy course : Real World Hadoop - Hands on Enterprise Distributed Storage.\n.\nYou can also automate the deployment of the Hadoop services via Python (using the Cloudera Manager Python API). But this is an advanced step and thus I would make sure that you understand how to manually deploy the Hadoop services first. Udemy course : Real World Hadoop - Automating Hadoop install with Python!\n.\nThere is also the upgrade step. Once you have a running cluster, how do you upgrade to a newer hadoop cluster (Both for Cloudera Manager and the Hadoop Services). Udemy course : Real World Hadoop - Upgrade Cloudera and Hadoop hands on",
      "target_audience": [
        "Software engineers who want to expand their skills into the world of distributed computing",
        "System Engineers that want to expand their skillsets beyond the single server",
        "Developers who want to write and develop distributed systems",
        "Database Administrators who want to manage an Hadoop ODS or EDW with HIVE"
      ]
    },
    {
      "title": "Master Parallel Computing and Multithreading in Java",
      "url": "https://www.udemy.com/course/master-parallel-computing-and-multithreading-in-java/",
      "bio": "Discover Multithreading, Concurrency & Parallel programming with practical and fun examples in Java",
      "objectives": [
        "Discover how to create responsive and high performance software.",
        "See how to use multithreading and multiprocessing for modeling certain types of problems.",
        "Develop programs with Java that are highly Concurrent and Parallel.",
        "Understand the advantages, limits and properties of Parallel computing.",
        "Improve your programming skills in Java with more advanced, mulithreading topics.",
        "Learn about threads, processes, mutexes, barriers, waitgroups, queues, condition variables, deadlocks, spin locks and more."
      ],
      "course_content": {
        "Introduction": [
          "Understanding Parallel Computing",
          "More on Parallel Computing",
          "Links and Resources for this course"
        ],
        "Creating Threads and Processes": [
          "Processes and Threads",
          "Threads in Java",
          "Processes in Java"
        ],
        "Memory Sharing between Threads": [
          "Memory Sharing",
          "Letter count Implementation",
          "Letter count using Memory Sharing"
        ],
        "Thread Synchronization with Mutexes": [
          "Why do we need Synchronization?",
          "Adding Mutexes to Letter Count",
          "Adding Mutexes to Letter Count Implementation"
        ],
        "Waiting for Completed tasks using Joins": [
          "Understanding Joins",
          "File Search Example",
          "Concurrent File Search"
        ],
        "Synchronization using Condition Variables": [
          "Introduction to Condition Variables",
          "Condition Variables for Wait Groups",
          "Implementing Wait Groups with Condition Variables",
          "Using Wait Groups"
        ],
        "Barriers Explained": [
          "What’s a Barrier?",
          "Example Barrier Application: Matrix Multiplication",
          "Matrix Multiplication Implementation",
          "Multi Threaded Matrix Multiplication with Barriers",
          "Multi Threaded implementation with Barriers"
        ],
        "Communication using Message passing": [
          "Thread Communication using Queues",
          "Pipelining Example with Queues",
          "Single Thread implementation",
          "Multi Thread implementation"
        ],
        "Thread Pools": [
          "Introduction to Thread Pools",
          "Example, shoelace algorithm part 1",
          "Example, shoelace algorithm part 2",
          "Java's built-in thread pools",
          "Java's Futures",
          "Shoelace algorithm explained (optional)"
        ],
        "Avoiding Deadlocks": [
          "Deadlocking Robots, Philosophers and Trains",
          "Simple Deadlock Example",
          "Train Deadlock Example Part 1",
          "Train Deadlock Example Part 2",
          "Solving Deadlocks using Resource Hierarchy",
          "Implementing Resource Hierarchy Solution",
          "Solving Deadlocks using an Arbitrator",
          "Implementing Arbitrator Solution"
        ]
      },
      "requirements": [
        "Some experience of programming in Java. It helps if you know how to use java common collections (maps and lists) and have basic knowledge of using anonymous functions.",
        "Recent version of Java installed.",
        "Being able to do 150 sit ups while shouting the Fibonacci sequence in reverse down to 1 on each rep (just kidding)."
      ],
      "description": "The mood in the meeting on the 12th floor of an international investment bank was as bleak as it gets. The developers of the firm met to discuss the best way forward after a critical core application failed and caused a system wide outage.\n\n\n\"Guys, we have a serious issue here. I found out that the outage was caused by a race condition in our code, introduced a while ago and triggered last night.\" says Mark Adams, senior developer.\n\n\nThe room goes silent. The cars outside the floor to ceiling windows slowly and silently creep along in the heavy city traffic. The senior developers immediately understand the severity of the situation, realizing that they will now be working around the clock to fix the issue and sort out the mess in the datastore. The less experienced developers understand that a race condition is serious but don't know exactly what causes it and therefore keep their mouths shut.\n\n\nEventually Brian Holmes, delivery manager, breaks the silence with \"The application has been running for months without any problems, we haven't released any code recently, how is it possible that the software just broke down?!\"\n\n\nEveryone shakes their heads and goes back to their desk leaving Brian in the room alone, puzzled. He takes out his phone and googles \"race condition\".\n\n\nSound familiar? How many times have you heard another developer talking about using threads and concurrent programming to solve a particular problem but out of fear you stayed out of the discussion?\n\n\nHere's the little secret that senior developers will never share... Multithreading and Multiprocessing programming is not much harder than normal programming. Developers are scared of concurrent programming because they think it is an advanced topic that only highly experienced developers get to play with.\n\n\nThis is far from the truth. Our minds are very much used to dealing with concurrency. In fact we do this in our everyday life without any problem but somehow we struggle to translate this into our code. One of the reasons for this is that we're not familiar with the concepts and tools available to us to manage this concurrency. This course is here to help you understand how to use multithreading and multiprocessing tools and concepts to manage your parallel programming. It is designed to be as practical as possible. We start with some theory around parallelism and then explain how the operating system handles multiple processes and threads. Later we move on to explain the multiple tools available by solving example problems using concurrent programming.\n\n\nIn this course we use the Java language, however the concepts learned here can be applied to most programming languages.\n\n\nAll code in this course can be found on github, username/project: cutajarj/multithreadinginjava",
      "target_audience": [
        "Developers who want to take their career to the next level by improving their skills and learning about concurrent and parallel programming.",
        "College students currently learning about parallel computing who want to see how concepts learned in class relate to practice.",
        "Experienced developers that have struggled with this topic and want to give it another try using a different approach.",
        "Delivery managers called Brian Holmes."
      ]
    },
    {
      "title": "Learn Java and Software Engineering with Minecraft",
      "url": "https://www.udemy.com/course/learn-java-and-software-engineering-with-minecraft/",
      "bio": "Build Minecraft Plugins and Run Your Own Server",
      "objectives": [
        "Learn Java programming language",
        "Develop Minecraft plugins in Bukkit, Spigot, and Paper",
        "Build foundation for software engineering",
        "Master development tools, techniques, and patterns"
      ],
      "course_content": {
        "Setup": [
          "Install Java (Programming Language)",
          "Install IntelliJ IDEA (Integrated Development Environment)",
          "Install Minecraft (Client Launcher and Server)"
        ],
        "Getting Started": [
          "Making First Minecraft Plugin",
          "Bootcamp: Java Basics",
          "Debug Java Programs and Plugins",
          "Upgrade Plugin to Newer Version (1.18 -> 1.19)"
        ],
        "Project: Sugar Rush!": [
          "Event Handler, Items, Potion Effect",
          "Sound, Delayed Task, Chat Color",
          "Bootcamp: Tools Basics"
        ],
        "Project: Launch Pad!": [
          "Bootcamp: Event Basics",
          "Server Config, List, and For Loops"
        ],
        "Project: Firework Show!": [
          "Spawn Entity, Server Scheduler, Builder Pattern",
          "Factory Pattern, Random Value, Array"
        ],
        "Software Engineering Foundation": [
          "Build Open Source Plugins using Git"
        ],
        "Project: Warp Teleport!": [
          "Commands and Permissions",
          "Particle and Maven Shading",
          "Gui and Singleton Pattern"
        ],
        "Project: Tree Feller!": [
          "Blocks and Recursion"
        ]
      },
      "requirements": [
        "a computer or laptop"
      ],
      "description": "Are you interested in learning about programming? Does software engineering as a career choice interest you? Start with building your own Minecraft plugins! This course requires no coding experience and covers all the knowledge you need to become a successful Minecraft Plugin Developer.\n\n\nEnroll in the course now because:\nJava and programming skills are in high demand.\nDevelop Minecraft plugin projects to show you are passionate about technology and take initiative.\nBoost your resume with Minecraft plugins as side projects.\nFreelance opportunity and contract work related to Minecraft or the software development industry.\nSell premium plugins to Minecraft server owners.\nBuild custom servers for players.\n\n\nBy the end of this course, you will know:\nProgramming languages (Java)\nData structures (Array, List, HashMap)\nDesign Patterns (Observer, Builder, Factory, Singleton)\nSpigot API (Events, Items, Effects)\nMinecraft Library (CommandAPI, ParticleLib, InventoryGui)\nDevelopment Tools (IntelliJ, GitHub, Maven)\nSoftware Engineering Skills (Debugger, Tracing, and Problem-solving)\n\n\nIn the course, the Minecraft plugins run on Spigot, which is the biggest Minecraft server software. We will set up a Minecraft server that players can connect to, install everything needed to develop software, and develop plugins that run on the latest version of the Minecraft server (currently 1.19) but the course includes the tutorial on how to downgrade or upgrade the plugin to run on a different version of Minecraft.",
      "target_audience": [
        "Minecraft gamers who wants to program amazing stuffs in Minecraft",
        "A person with no programming experience and wants to learn about Java",
        "Minecraft server owners that want to become technical developers"
      ]
    },
    {
      "title": "The Complete vSphere for Administrators Course: From A to Z",
      "url": "https://www.udemy.com/course/the-complete-vsphere-for-administrators-course/",
      "bio": "Learn how to design a virtualized data center with VMware vSphere.",
      "objectives": [
        "Learn and Understand Virtualization",
        "Cloud Technologies & SaaS",
        "Configure & Manage the Virtual Network",
        "vSphere Upgrading & Patch Management",
        "Configuring & Managing Storage",
        "Configuring & Managing Virtual Appliances",
        "Configuring & Managing Distributed Switches",
        "Learning vSphere Management",
        "Learning vSphere Performance",
        "Learning Backup & Disaster Recovery",
        "vSphere Upgrading & Patch Management"
      ],
      "course_content": {
        "Welcome": [
          "Introduction"
        ],
        "Getting started with this course": [
          "Learn and Understand Virtualization",
          "Learn and Understand Cloud Technologies & SaaS",
          "Learn About the Installation",
          "Learn to Install ESXi - 1",
          "Learn to Install ESXi - 2",
          "Learn to Access ESXi - 1",
          "Learn to Access ESXi - 2",
          "Learn to Manage ESXi - 1",
          "Learn to Manage ESXi - 2",
          "Learn About vSphere/vCloud Licensing - 1",
          "Learn About vSphere/vCloud Licensing - 2",
          "Learn and Understand vCenter Architecture",
          "Server, Hardware Requirements, SQL Database Setup, SSO & Certificate Authority",
          "Learn How to Plan the Deployment & Learn How to Install vCenter",
          "Learn How to Manage vCenter"
        ],
        "Learn How to Configure & Manage the Virtual Network": [
          "Introduction",
          "Learn and Understand vSwitch Features - 1",
          "Learn and Understand vSwitch Features - 2",
          "Learn and Understand vSwitch Features - 3"
        ],
        "Configuring & Managing Storage": [
          "Learn and Understand Storage - 1",
          "Learn and Understand Storage - 2",
          "Learn and Understand iSCSI Storage - 1",
          "Learn and Understand iSCSI Storage - 2",
          "Learn and Understand iSCSI Storage - 3",
          "Section Summary"
        ],
        "Configuring & Managing Virtual Appliances": [
          "Learn and Understand Virtual Appliance",
          "Learn and Understand Virtual Machines",
          "Learn How to Create a VM",
          "Learn How to Manage Virtual Machines",
          "Learn About Clones, Templates & Snapshots",
          "Learn and Understand VMware Converter - 1",
          "Learn and Understand VMware Converter - 2"
        ],
        "Configuring & Managing Distributed Switches": [
          "Understanding Core Concepts",
          "Learning Distributed Switch - Hands On"
        ],
        "Learn About vSphere Management": [
          "Learn and Understand vSphere Management - 1",
          "Learn and Understand vSphere Management - 2",
          "Learn and Understand vSphere Cluster"
        ],
        "Learn About vSphere Performance": [
          "Learn and Understand VM Performance - 1",
          "Learn and Understand VM Performance - 2",
          "Learn About Resource Pools & vCenter Alarms",
          "Learn About Performance Charts"
        ],
        "Learn About Backup & Disaster Recovery": [
          "Learn and Understand Business Continuity & High Availability",
          "Learn About vSphere Backups - 1",
          "Learn About vSphere Backups - 2",
          "Learning Disaster Recovery & Section Summary"
        ],
        "Learn About vSphere Upgrading & Patch Management": [
          "Introduction",
          "vSphere Upgrading - Update Manager Demonstration",
          "vSphere Upgrading - Upgrading & vCenter Separate Upgrade"
        ]
      },
      "requirements": [
        "Network equivalent knowledge",
        "Basic virtualization/cloud knowledge"
      ],
      "description": "Master VMware vSphere: Design, Implement & Optimize Your Virtual Infrastructure\nTransform Your IT Career and Unleash the Full Potential of Virtualization with VMware vSphere – The Industry Standard.\nIn today's hyper-competitive digital landscape, businesses demand peak efficiency, robust scalability, and optimized resource utilization. Virtualization is no longer a luxury but a foundational necessity, and VMware vSphere stands as the undisputed leader in powering modern data centers. If you're ready to command this powerful technology and become an indispensable asset to any organization, this course is your definitive launchpad.\nThis immersive and meticulously crafted program is engineered to elevate you from a proficient IT professional to a VMware vSphere expert. We'll guide you step-by-step through the intricacies of designing, deploying, and managing sophisticated virtual data centers. Prepare to master the skills that enable seamless workload management, enhanced performance, and future-proof infrastructure, positioning you at the forefront of IT innovation.\nWhat You Will Master:\nDeep Dive into Virtualization & vSphere Architecture: Unravel the core principles of virtualization and gain a comprehensive understanding of the VMware vSphere ecosystem. Explore its sophisticated architecture and the critical components that make it the backbone of enterprise-grade data centers.\nStrategic Infrastructure Design & Proven Best Practices: Move beyond theory and learn to architect resilient, scalable, and highly efficient vSphere virtual data centers. We'll equip you with industry-leading design methodologies tailored for optimal performance and flexibility.\nAdvanced vSphere Configuration & Seamless Management: Attain mastery over the configuration and administration of essential vSphere elements – from compute and storage to intricate networking and robust security. Get hands-on with cutting-edge features, including high-throughput storage access technologies like Remote Direct Memory Access (RDMA) and Persistent Memory.\nProactive High Availability & Intelligent Workload Balancing: Learn to implement Proactive High Availability to virtually eliminate unplanned downtime. Harness the power of Predictive Distributed Resource Scheduler (DRS) to dynamically optimize resource allocation, ensuring your applications always perform at their peak.\nFortress-Grade Security for Your Virtual Realm: Discover the art and science of securing your virtual infrastructure. We'll cover critical configuration, meticulous management, and granular access control, empowering you to safeguard vital applications and virtual machines against emerging threats.\nPeak Performance Optimization & Troubleshooting: Elevate your infrastructure's capabilities by mastering advanced virtual networking and storage optimization techniques. Learn to proactively monitor performance, diagnose bottlenecks, and troubleshoot complex issues to ensure uninterrupted, high-speed operations.\nWhy This Is The Definitive vSphere Course For You:\nThis course is meticulously architected for ambitious IT professionals, dedicated system administrators, and anyone aspiring to achieve elite status as a VMware expert. Whether you're embarking on your VMware journey or seeking to significantly upgrade your existing skill set, you'll find unparalleled value in our structured guidance, practical real-world scenarios, and hands-on approach that solidifies your technical prowess.\nCourse Highlights: Elevate Your Expertise\nAll-Encompassing Curriculum: Journey through in-depth modules covering every facet of designing, implementing, and managing sophisticated VMware environments.\nReal-World Problem Solving: Engage with practical, focused recipes and compelling case studies that mirror the actual challenges and innovative solutions encountered in the field.\nBuild Your Own vSphere Lab: Construct a fully functional VMware vSphere lab environment from the ground up. This hands-on experience is crucial for testing, deploying demanding workloads, and honing your optimization skills.\nMaster Proven Design Principles: Absorb and apply best-practice design methodologies to create a virtual infrastructure that is not only reliable and scalable but also delivers exceptional performance.\nGain Industry-Recognized, Career-Boosting Skills: Acquire the knowledge and practical abilities that are in high demand across the IT industry, significantly enhancing your professional credibility and marketability.\nWhat’s Included In Your Learning Arsenal:\nComprehensive Video Lectures: Detailed, engaging lessons covering the full spectrum of VMware vSphere 6.x features and functionalities.\nPractical Exercises & Lab Scenarios: Reinforce your learning and build muscle memory with targeted exercises and realistic lab simulations.\nContinuous Learning: Access to timely updates reflecting the latest advancements in VMware technologies and evolving best practices.\nValuable Downloadable Resources: Equip yourself with design templates, essential guides, and supplementary materials to aid in the implementation of your own world-class solutions.\nBy The End Of This Course, You Will Confidently:\nArchitect, deploy, and expertly manage a complete VMware vSphere virtual data center.\nConfigure and secure vSphere to support the most demanding and critical enterprise workloads.\nImplement VMware’s gold-standard best practices for achieving unparalleled high availability, seamless scalability, and peak performance optimization.\nOperate your own VMware vSphere lab environment to continuously experiment, innovate, and refine your skills.\nDeliver a robust, agile, and efficient virtualized infrastructure perfectly aligned with your organization's strategic objectives.\nYour journey to becoming a VMware vSphere authority starts now. If you're driven to elevate your career, spearhead cutting-edge IT infrastructure, and become a leader in the virtualization domain, this course provides the comprehensive knowledge and practical skills you need to succeed.\nEnroll today and take the decisive step towards mastering VMware vSphere!",
      "target_audience": [
        "Web Developers",
        "Software Developers",
        "Programmers",
        "Anyone interested in vSphere"
      ]
    },
    {
      "title": "Distributed configuration with Spring Cloud Config",
      "url": "https://www.udemy.com/course/distributed-configuration-with-spring-cloud-config/",
      "bio": "Centralized, distributed external configuration management backed by a GIT repository.",
      "objectives": [
        "The students will learn how to use to host a centralized configuration repository that can be used for Spring cloud and/or MicroServices instances.",
        "The Students will learn how to use Spring RestTemplate to pull Spring Configuration from a centralized Spring Cloud Config Server.",
        "Students will learn how configuration is stored and managed in Cloud Config",
        "Students will learn how branching and tagging of configuration can provide total control over complex configuration requirements",
        "Students will learn how to secure the Spring Cloud Config endpoints with BASIC Authentication.",
        "Students will create a Client application that connects to a Config Server using BASIC Authentication."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "About Mick Knutson",
          "What you will learn in this class",
          "Tools and Source for this Course"
        ],
        "Spring Ecosystem Overview": [
          "About This Section",
          "Spring IO Platform Overview",
          "Spring Boot Overview",
          "Spring Cloud Overview",
          "Spring Cloud Config Overview",
          "LAB: Spring Boot Primer",
          "Section Review"
        ],
        "Setup Spring Cloud Config Server": [
          "About this section",
          "Create Spring Boot project for our Spring Cloud Config Server",
          "Initial Maven then Gradle startup of Config Server",
          "Import Server project into IDEA",
          "Configure Config Server",
          "Section Review"
        ],
        "Setup GIT Configuration Repository": [
          "About This Section",
          "Creating a local GIT repository",
          "Create a properties file on Master branch and create TAG",
          "LAB: Spring Cloud Config Server",
          "Create YAML file on Master create TAG",
          "Create Properties and YAML file on Master, w/Profile, create TAG",
          "Create Properties and YAML file on HOTFIX branch, w/Profile, create TAG",
          "Pull LABEL and Profile configuration from Config Server",
          "Section Review"
        ],
        "Spring Cloud Config Clients": [
          "About This Section",
          "Create Spring Boot Project for Microservices client",
          "Configure Spring Cloud Microservices Client Application",
          "Create Spring RestController to expose configuration of this Service Endpoint",
          "Verify Default Profile Service Endpoint Properties",
          "LAB: Spring Cloud Config Client",
          "Create custom @ConfigurationProperties Object to encapsulate complex properties",
          "Delete .properties file from repository and verify YML precedence",
          "Pull configuration from BRANCH and from TAG",
          "LAB: Spring Cloud Config Server working with branches",
          "Microservice Label version strategy",
          "Section Review"
        ],
        "Additional Spring Cloud Config Options": [
          "About This Section",
          "Configure Client to fail fast if the Server is unavailable",
          "Setting fail-fast retry options",
          "Enabling BASIC Authentication on the Config Server",
          "Configuring Client Authentication Credentials",
          "Refreshing @ConfigurationProperties in client application",
          "Enable configuration refresh without application restart",
          "Section Review"
        ],
        "Extras and Bonus": [
          "Extra Resources"
        ]
      },
      "requirements": [
        "The student should be familiar with the SpringFramework, inversion of control (IoC) @Profile's and the Spring configuration lifecycle.",
        "The student should be familiar with Spring boot.",
        "The student should be familiar with GIT, versioning files, and potentially branching and labeling.",
        "The student should have some exposure to Maven and/or Gradle build system tool."
      ],
      "description": "This course will lead intermediate to advanced SpringFramework and Spring Boot developers in creating a centralized Cloud Configuration server for use in cloud environments and MicroService architectures.\nThe course starts by creating a centralized Spring Cloud Config server. Students will learn how this can be used with or without a cloud oriented system like AWS. This technique can give great flexibility and manageability to any Spring-based deployment.\nStudents will create Spring Boot projects based mostly on Maven, but will also learn how to create the same projects using Gradle.\nThen students will create a local GIT repository and pushing configuration files the students have created.\nThen students will create remote Spring Boot clients to pull configuration from the Central config server, detailing out the various configuration that each remote application retrieve.\nThe students will then cover additional topics such as GIT TAG's and BRANCH's, and how applications can pull from them.\nStudents will also learn techniques for dynamically changing version of configuration to be pulled from a Spring Cloud Config server, for applications like parallel Microservice deployments.\nSpring Cloud Config Server features:\nHTTP, resource-based API for external configuration (name-value pairs, or equivalent YAML content)\nEncrypt and decrypt property values (symmetric or asymmetric)\nEmbeddable easily in a Spring Boot application using @EnableConfigServer\nEnable BASIC Authentication for configuration access\nConfig Client features (for Spring applications):\nBind to the Config Server and initialize Spring Environment with remote property sources\nBind directly to complex Objects using @ConfigurationProperties with remote property source\nEnable BASIC Authentication for configuration access\nnext...",
      "target_audience": [
        "Spring Framework and/or Spring Boot developers that want to learn about distributed Spring configuration management with Spring Cloud Config."
      ]
    },
    {
      "title": "Azure Key Vault: The Complete Introduction",
      "url": "https://www.udemy.com/course/azure-key-vault-the-complete-introduction/",
      "bio": "Store and access application secrets securely on Microsoft’s Azure Cloud",
      "objectives": [
        "Understand Azure Key Vault core features and its usage scenario with hands on examples",
        "Use Azure Key Vault to securely store and access application secrets like database connection strings, API keys, cryptographic keys, digital certificates, etc.",
        "Understand difference between Management plane and Data plane of Key Vault",
        "Use Role Based Authentication and Access Policies to securely access Key Vault and its data",
        "Implement Azure Disk Encryption using Key Vault"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Key Vault Basics": [
          "What is Azure Key Vault?",
          "Why use Key Vault?",
          "Introduction to Key Vault Objects",
          "Module Summary",
          "Key Vault Basics"
        ],
        "Creating Key Vault": [
          "Module Overview",
          "Create Key Vault in Portal",
          "How to access course source code?",
          "Create Key Vault Using PowerShell",
          "Useful Resources",
          "Module Summary"
        ],
        "Creating Data in Key Vault": [
          "Module Overview",
          "Key Vault Secrets",
          "Demo: Key Vault Secrets",
          "Useful Resources",
          "Key Vault Keys",
          "Demo: Key Vault Keys",
          "Useful Resources",
          "Key Vault Certificates",
          "Demo: Key Vault Certificates",
          "Useful Resources",
          "Module Summary"
        ],
        "Common Key Vault Use Cases": [
          "Module Overview",
          "Managing App Secrets with Key Vault",
          "Useful Resources",
          "Key Operations with Key Vault",
          "Useful Resources",
          "Symmetric Key Wrap/Unwrap",
          "Useful Resources",
          "Azure Disk Encryption (ADE) with Key Vault",
          "Module Summary"
        ],
        "Managing Access to Key Vault": [
          "Module Overview",
          "Management Plane vs Data Plane",
          "Management Plane Authorization using RBAC",
          "Demo: Role Based Access Control with Built in Roles",
          "Useful Resources",
          "Demo: Role Based Access Control with Custom Roles",
          "Module Summary"
        ],
        "Managing Access to Data in Key Vault": [
          "Module Overview",
          "About Access Policy",
          "Demo: Configuring Access Policy",
          "Managed Identity",
          "Demo: Assign Managed Identity to Function App",
          "Network Restrictions",
          "Module Summary"
        ],
        "Monitoring and Logging": [
          "Logging and Monitoring Overview",
          "Demo: Enable Logging for Key Vault",
          "Demo: Logging to Storage Account",
          "Demo: Key Vault Analytics",
          "Module Summary"
        ],
        "Wrap Up": [
          "Key Vault Pricing",
          "Course Summary",
          "Bonus!"
        ]
      },
      "requirements": [
        "Basic understanding of Microsoft Azure cloud",
        "A free or paid subscription to Microsoft Azure",
        "High level understanding of basic security concepts like authentication, authorization and identity",
        "Excitement to learn Microsoft's constantly growing cloud platform!!!"
      ],
      "description": "Learn about Azure Key Vault with this hands-on, project-based course and take a step towards securing your application secrets in Azure cloud.\n\n\nSecrets, keys, and certificates are some of the most sensitive data in your organization and accidently exposing this data to the internet can be catastrophic to the individual, organization and its customers. But your applications need access to this critical data at runtime to perform various operations.\n\n\nAzure Key Vault provides a secure central scalable storage of these artifacts in Azure cloud and gives admin granular control over who (user or application) has access to this data.\n\n\nIn this course, we will\nProvision Azure Key Vault using multiple interfaces supported by Azure\nUnderstand with examples different types of data that can be stored in Key Vault\nImplement 4 real world scenarios using Azure Key Vault\nManage access to Key Vault and its data using Role Based Access Control and Access Policies\nMonitor and log who is accessing the Key Vault\n\n\nThis Course Also Comes With:\n\n\nLifetime Access to All Future Updates\nLinks to interesting articles, and lots of code to practice and improve\nA 30 Day \"No Questions Asked\" Money Back Guarantee!\n\n\nThis course is a great learning resource for anyone taking AZ-500 Exam for 'Azure Security Engineer Associate' certification to learn about the Azure Key Vault module of the exam.\n\n\nLet's have some fun and build some awesome stuff in cloud together!",
      "target_audience": [
        "Anyone who want to understand Azure Key Vault core concepts and its usage",
        "Developers, software architects who want to understand and implement secure applications in Azure",
        "Anyone studying for AZ-500 certification exam"
      ]
    },
    {
      "title": "Python for Linux Admins",
      "url": "https://www.udemy.com/course/python-for-linux-and-devops-engineers/",
      "bio": "A comprehensive course to empower Linux Admins with Python for automation and orchestration",
      "objectives": [
        "Configure Python environments on Linux systems, using editors like VSCode or Vim, and manage virtual environments effectively",
        "Write Python scripts using fundamental syntax, data types, control structures, and data structures like lists and dictionaries",
        "Automate system tasks with Python, including file handling, text processing with regular expressions, and OS interactions",
        "Apply Python in DevOps workflows to automate Git operations, manage CI/CD pipelines, and interact with tools like Ansible, Docker, and Kubernetes"
      ],
      "course_content": {
        "Course Overview": [
          "Introduction to the Course",
          "Objectives and learning outcomes",
          "Importance of Python in Linux and DevOps",
          "Overview of tools and technologies to be used"
        ],
        "Section 1: Getting Started with Python": [
          "Basic syntax and semantics",
          "Code Structure",
          "Variables, data types, and type casting",
          "Operators and expressions",
          "Lab: Basics"
        ],
        "Section 2: Control Flow and Data Structures": [
          "Conditional statements (if, elif, else)",
          "Looping Constructs (for, while)",
          "Lab: Looping Constructs (for, while)",
          "Loop Control Statements (break, continue, pass)",
          "Lab: Loop Control Statements (break, continue, pass)",
          "Lists, Tuples, Sets, and Dictionaries",
          "Lab: Lists, Tuples, Sets, and Dictionaries",
          "List Comprehensions and Generator Expressions",
          "Lab: List Comprehensions and Generator Expressions",
          "Working with Collections and Iterables",
          "Lab: Working with Collections and Iterables"
        ],
        "Section 3: Functions and Modules": [
          "Introduction to Functions in Python",
          "Lab: Converting Celsius to Fahrenheit",
          "Default Arguments and Variable Length Arguments",
          "Lab: Create a Function to Accept Variable Arguments & Calculate Their Average",
          "Introduction to Lambda Functions",
          "Lab: Use Lambda Functions to Filter out Odd Numbers From a List of Integers",
          "Importing built-in Modules",
          "Lab: Using the time Module to Measure Function Execution Time",
          "Creating Custom Modules and Packages",
          "Lab: Creating a Custom Module for File Operations",
          "Understanding Scope and Namespaces",
          "Lab: Experimenting with global and nonlocal in Nested Functions"
        ],
        "File Handling and Exception Management": [
          "Reading from and Writing to files",
          "Lab: Python File Operations",
          "Working with Directories Using os and shutil Modules",
          "Lab: Python Directory Management",
          "Parsing Configuration Files (INI, JSON and YAML)",
          "Lab: Parsing Configuration Files",
          "Exception Handling in Python",
          "Lab: Exception Handling in Python"
        ],
        "Working with the Operating System": [
          "Environment Variables",
          "Lab: Environment Variables",
          "File and Directory Operations",
          "Lab: File and Directory Operations",
          "System Specific Parameters and Functions",
          "Lab: System Specific Parameters and Functions",
          "Lab: Executing Shell Commands",
          "Running External Commands and Capturing Output",
          "Lab: Running External Commands and Capturing Output",
          "Error Handling in Subprocesses",
          "Lab: Error Handling in Subprocesses"
        ],
        "Automation and Scripting": [
          "Lab: Disk Usage Reporting",
          "Automating User Account Creation",
          "Using The re Module",
          "Searching Matching and Replacing Text"
        ],
        "Networking and Web Services": [
          "Introduction to sockets Module",
          "Lab: Resolve a Domain Name",
          "Creating TCP UDP Clients and Servers",
          "Lab: Build a Simple TCP echo Server",
          "Lab: Create a UDP Chat Application",
          "Web Requests and APIs",
          "Consuming RESTful APIs",
          "Handling JSON and XML Data",
          "Lab: API Interaction Fetching Weather Data with Python"
        ]
      },
      "requirements": [
        "Basic Knowledge of Linux: Familiarity with Linux operating systems and command-line interface",
        "Understanding of DevOps Concepts: Basic awareness of DevOps practices and tools",
        "Prior Programming Experience (Beneficial but Not Required): Some experience with programming concepts can be helpful",
        "Access to a Linux System: A computer running a Linux distribution to install Python and other tools",
        "Text Editor or IDE: Tools like VSCode or Vim installed for writing and editing code",
        "Internet Connection: For downloading software, accessing online resources, and working with cloud services"
      ],
      "description": "Hello Everyone\nWelcome to the Python course designed for Linux Admins. This course introduces you to the practical application of Python in system administration workflows.\nWe begin with setting up Python, understanding its significance in Linux and DevOps, and exploring the essential tools and technologies used throughout the course. You'll learn the basics of Python, including syntax, data types, and essential programming constructs such as loops, conditional statements, and commonly used data structures like lists, tuples, sets, and dictionaries.\nThe course emphasizes the importance of functions and modules, teaching you how to create reusable code, organize projects, and leverage Python's extensive standard library. We'll also cover file handling and exception management to help you build robust scripts.\nAs system interaction is a crucial skill, you'll gain hands-on experience working with Python's OS-related modules, enabling you to automate system tasks effectively. The course provides real-world examples, ensuring that every concept is tied to practical applications in Linux and DevOps environments.\nBy the end of the course, you'll be equipped with the foundational skills required to write efficient Python scripts and automate repetitive tasks, enhancing your productivity as a Linux administrator or DevOps engineer. This comprehensive course ensures you’re ready for real-world challenges.",
      "target_audience": [
        "This course is tailored for Linux and DevOps engineers who are eager to enhance their automation and scripting capabilities using Python. It's ideal for system administrators, network engineers, and DevOps professionals who have a basic understanding of Linux operating systems and command-line interfaces. Whether you're new to programming or looking to expand your existing skill set, this course offers practical insights into leveraging Python for automating system tasks, managing infrastructure, and integrating with DevOps tools like Git, CI/CD pipelines, Ansible, Docker, and Kubernetes. If you're committed to improving efficiency, embracing automation, and advancing your career in the DevOps field, this course will provide valuable knowledge and hands-on experience"
      ]
    },
    {
      "title": "Complete IT Requirements and Requirement Engineering Course",
      "url": "https://www.udemy.com/course/complete-it-requirements-and-requirement-engineering-course/",
      "bio": "Mastering Requirement Gathering: Comprehensive Guide to Software Engineering IT Requirements in Requirement Engineering",
      "objectives": [
        "Basics of IT Requirement's and Requirement Engineering",
        "How to gather the IT Project Requirement's effectively",
        "Techniques and Tools for Requirement Engineering",
        "Requirement Engineering in Software Engineering, where it fits",
        "Everything about Requirement Engineering"
      ],
      "course_content": {
        "About Course": [
          "Introduction - What is this Course about",
          "Why to Learn IT Requirements Engineering and why this course",
          "How to take up this course"
        ],
        "SDLC Software Development Life Cycle Basics": [
          "Introduction",
          "What is Software Development",
          "Overview of SDLC Software Development Life Cycle",
          "Importance of Requirement Engineering in SDLC",
          "Waterfall vs Agile",
          "Concept : Waterfall Model",
          "Concept : Agile Model"
        ],
        "Basics of Requirements Engineering": [
          "Introduction",
          "What is Requirements",
          "What is Engineering",
          "Why Defining Requirements are so much Important for Software Success",
          "Signs of NOT Having Clear Project Requirement's",
          "Benefits of Clear Software Project Requirements",
          "Overview of Requirment Engineering Process",
          "Properties of Clear Software Requirements"
        ],
        "Types of Requirements": [
          "Introduction",
          "Business Requirments",
          "External Interface Requirments",
          "User Requirments",
          "System Requirement",
          "Performance Requirments",
          "Regulatory Requirements",
          "Functional Requirements",
          "Non Functional Requirements",
          "Product Vs Project Requirments"
        ],
        "Requirements Elicitation": [
          "Introduction",
          "What is Requirement Elicitation | Introduction to Requirement Elicitation",
          "Understanding Stakeholders and Their Importance in Requirement Elicitation",
          "Techniques of Requirement Elicitation",
          "Conducting Interviews for Requirement Elicitation",
          "Surveys and Questionnaires for Requirement Engineering",
          "Observation Method for Requirement Engineering",
          "Joint Application Development (JAD) Sessions",
          "Document Analysis in Requirements Elicitation",
          "Use Cases and Scenarios",
          "Concept - Use Stories in Agile",
          "Brainstorming for Requirement Discovery",
          "Use Case Diagram and Use Case Table ADD EXAMPLE Here",
          "Requirements Workshop",
          "Challenges and Best Practices in Requirements Elicitation"
        ],
        "Requirement Analysis and Specification": [
          "Introduction",
          "Introduction to Requirements Analysis and Specification",
          "Techniques of Requirement Analysis",
          "Requirements Traceability",
          "Example of Requirement Traceability Matrix",
          "Applying Kano Prioritization to Online banking application",
          "Requirements Prioritization",
          "Best Practices and Common Challenges"
        ],
        "Requirements Validation and Verification": [
          "Introduction",
          "Techniques for Validating and Verifying Requirements",
          "Requirements Inspection and Review",
          "Test Case Development and Requirements-based Testing"
        ],
        "Requirement Management": [
          "Introduction",
          "Requirements Version Control",
          "Defining a Version Identification Scheme",
          "Tracking Individual Requirement Versions",
          "Requirement Baseline",
          "Managing Requirements in Agile Project",
          "Change Control or Change Management Process",
          "Change Control Policy",
          "Change Management Process Flow",
          "Change Request Lifecycle",
          "Roles and Responsibilities in the Change Management Process",
          "Effect or Impact of Changes on Project",
          "Requirement Status Tracking",
          "Requirements Attributes to Track",
          "List of Requirement Attributes for reference"
        ],
        "Requirement Engineering Tools": [
          "Requirements Engineering Tools Or IT Requirement Tools",
          "Resource : Software Requirement Specification Template for Waterfall Model",
          "Resource : Software Design Prototyping Modelling Diagrams"
        ],
        "Conclusion": [
          "Course Wrap Up"
        ]
      },
      "requirements": [
        "No Prior knowledge needed"
      ],
      "description": "Welcome to this course on IT Requirments- Requirement Engineering Course\n\n\nThis is the first-ever comprehensive IT Requirments- Requirement Engineering course that covers almost everything that anyone aspiring to learn and progress in the Software field can take up and become as proficient as someone with nearly 10+ years of experience. This course is the gist of my entire decades of experience crafted in 3+ hours of content. Whatever I learned during my career concerning the real-world IT Requirment Engineering I have included in this course. No boasting at all, Look at the course curriculum you will get the idea. In these 14 + Hours we are going to learn all the below concepts from scratch with a Real-life Case Study\n\n\n\n\nAll these things we will learn via the Real Life examples and case studies. All of the above things are covered in just over 3+ hours of high-quality content. This is equivalent to a book with more than a thousand pages! in a very clear and concise manner doesn't waste a single minute of your precious time!\n\n\nYou're not going to get this information in One Place Anywhere over the Web.\n\n\nHere is the course content in brief\n\nIntroduction\nOverview of Requirement Engineering in IT\nImportance of SEO in Course Descriptions\nSECTION 1: Types of Requirements\nBusiness Requirements\nDefinition and Examples\nExternal Interface Requirements\nImportance in System Integration\nUser Requirements\nGathering User Needs and Expectations\nSystem Requirements\nTechnical Specifications and Constraints\nPerformance Requirements\nEnsuring System Efficiency and Effectiveness\nRegulatory Requirements\nCompliance with Laws and Standards\nFunctional Requirements\nCore Functions and Features\nNon-Functional Requirements\nUsability, Reliability, and Scalability\nLevels of Requirements\nHigh-Level vs. Detailed Requirements\nProduct Requirement vs. Project Requirements\nDifferences and Interconnections\nSECTION 2: Introduction to Requirements Elicitation\nUnderstanding Stakeholders and their Importance\nIdentifying and Engaging Stakeholders\nTechniques for Eliciting Requirements\nSurveys, Questionnaires, and Interviews\nObservation Method in Requirements Collection\nBenefits of Direct Observation\nPrototyping and Mock-ups for Requirement Clarification\nVisualizing Requirements\nJoint Application Development (JAD) Sessions\nCollaborative Requirement Gathering\nBrainstorming for Requirement Discovery\nGenerating Innovative Ideas\nDocument Analysis in Requirements Elicitation\nReviewing Existing Documents\nUse Cases and Scenarios\nDefining User Interactions\nUser Stories\nCapturing User Needs in Agile Projects\nSECTION 3: Requirements Analysis and Specification\nTechniques for Analyzing and Specifying Requirements\nBreaking Down and Detailing Requirements\nFunctional and Non-Functional Requirements\nDistinguishing Between Types\nRequirements Modeling\nVisual Representations of Requirements\nRequirement Documentation\nCreating Clear and Concise Documents\nRequirements Traceability\nLinking Requirements to Artifacts\nRequirement Traceability Matrix\nTracking Requirements Throughout the Project\nRequirements Prioritization\nDetermining Importance and Urgency\nBest Practices and Challenges of Requirements Analysis\nTips and Common Pitfalls\nSECTION 4: Requirements Validation and Verification\nTechniques for Validating and Verifying Requirements\nEnsuring Accuracy and Completeness\nRequirements Inspection and Review\nFormal and Informal Reviews\nTest Case Development and Requirements-based Testing\nAligning Tests with Requirements\nSECTION 5: Requirements Management\nRequirements Version Control\nManaging Changes and Versions\nDefining a Version Identification Scheme\nCreating a System for Tracking Versions\nTracking Individual Requirement Versions\nMonitoring Changes Over Time\nTracking Versions of Requirement Sets\nManaging Sets of Requirements\nRequirement Baseline\nEstablishing an Approved Set of Requirements\nManaging Requirements in Agile Projects\nAdapting Requirements in Agile Environments\nChange Control or Change Management Process\nHandling Changes to Requirements\nChange Control Policy\nDefining Rules for Changes\nChange Management Process Flow\nSteps for Managing Changes\nChange Request Lifecycle\nStages of a Change Request\nRoles and Responsibilities in the Change Management Process\nDefining Who Does What\nEffect of Change on Project Resources\nAssessing Impact on Time, Budget, and Scope\nRequirement Status Tracking\nMonitoring Progress and Status\nRequirements Tracing\nEnsuring Consistency and Completeness\nRequirement Attributes to Track\nKey Attributes to Monitor\nRequirement Attribute List\nDetailed List of Attributes\nConclusion\nRecap of Key Points\nImportance of Thorough Requirement Engineering\nFAQs\nWhat is the difference between functional and non-functional requirements?\nHow do you prioritize requirements in a project?\nWhat is a requirement traceability matrix and why is it important?\nHow can stakeholders be effectively engaged in the requirements process?\nWhat are the challenges of managing requirements in agile projects?\n\n\n\n\nDownloadable resource\n\n\nPREREQUISITES\n\n\nThere is no such Prerequisite for this course anybody who has an interest in learning the Software development process can take up this course. We will learn everything from scratch in this course.\n\n\n30-DAY FULL MONEY-BACK GUARANTEE\n\n\nThis course comes with a 30-day full money-back guarantee. Take the course, watch every lecture, and do the exercises, and if you are not happy for any reason, contact Udemy for a full refund within the first 30 days of your enrolment. All your money back, no questions asked.\n\n\nABOUT YOUR INSTRUCTOR\n\n\nHi! My name is Yogesh Dahake! I'm a passionate Lead Software engineer with a decade of experience and I've taught over a thousand people about software development and Coding via my course and YouTube channel.\n\n\nMy goal is to enable people not just to learn but in an Optimal, efficient, and effective way and Generate that Spark of learning. That's why my courses are simple, pragmatic, and free of clutter\n\n\nSo, what are you waiting for? Don't waste your time jumping from one tutorial to another. Enroll in the course Acquire the LIFE Changing Skill in just 14 hours\n\n\nWho this course is for:\n\n\n1. People who are starting their careers in the software industry.\n2. People who are students of Software Engineering.\n3. People who are already working in the software company.\n4. Developer, Lead, Technical Architect, Tester anybody who is directly or indirectly involved in the process of software development\n5. People who want to develop quality software\n6. Aspring Business analyst guys\nOn a higher note,\n\n\nAnybody who has an interest in Software, From Students to Teachers, From People who are about to start their careers to Professionals in the software industry.",
      "target_audience": [
        "Aspiring Software Business Analyst people",
        "People working in the software teams",
        "Software Developers ,Lead , senior software engineering , managers ,technical lead, Project Lead"
      ]
    },
    {
      "title": "Python GUI Mastery: Crafting Interactive Applications",
      "url": "https://www.udemy.com/course/python-gui-training-program-for-gui-development/",
      "bio": "Unlock the power of Python GUI programming and create interactive applications with ease in this comprehensive course.",
      "objectives": [
        "Fundamental concepts of GUI programming with Python.",
        "How to create various GUI elements such as buttons, labels, entry fields, and more.",
        "Techniques for organizing GUI components using frames, paned windows, and label frames.",
        "Implementation of interactive features like menus, checkboxes, radio buttons, and spin boxes.",
        "Advanced GUI programming topics including message boxes, scroll bars, and canvas.",
        "Strategies for handling user input, events, and callbacks effectively.",
        "Practical examples and projects to reinforce learning and build real-world GUI applications."
      ],
      "course_content": {
        "Python GUI Training": [
          "Introduction to Python GUI",
          "Types of GUI Interfaces",
          "Basic GUI Programming",
          "Creating Button in Python GUI",
          "Creating Canvas in Python GUI",
          "Creating CheckBox in Python GUI",
          "Creating Frames in Python GUI",
          "Creating Labels in Python GUI",
          "Entry in Python GUI",
          "List Box in Python GUI",
          "Menu in Python GUI",
          "Menu in Python GUI Continue",
          "Menu Button in Python GUI",
          "Message in Python GUI",
          "Radio Button in Python GUI",
          "Scale in Python GUI",
          "Scroll Bar in Python GUI",
          "Text in Python GUI",
          "Top Level in Python GUI",
          "Spin Box in Python GUI",
          "Paned Window in Python GUI",
          "Label Frame in Python GUI",
          "Message Box in Python GUI"
        ]
      },
      "requirements": [
        "The way we design our course doesn’t require any prerequisite to leverage the full potential of the course. We try to build everything from the basics and lay a strong foundation so that the empire of knowledge that would be built on it would be strong enough to resist the inevitable changes. Having said that, below mentioned are a few pointers which will help in grasping things quickly and without much hassle obtain the maximum juice out of this course! Knowing any scripting language would be an advantage as it will be easier to grasp the code portion of the course. It is highly recommended for non-coders to have some coding sessions before jumping to Python GUI training. Knowing python basics will also be an added advantage during the course. Having the appetite to solve the assignments or projects on your own and also bring out a solution that is out of the box."
      ],
      "description": "Welcome to the \"Python GUI Training\" course, your gateway to mastering Graphical User Interface (GUI) programming with Python. Graphical User Interfaces play a pivotal role in modern software development, providing users with intuitive interfaces to interact with applications. In this course, we will embark on an insightful journey to explore the fundamentals of GUI programming using Python, empowering you to design and develop powerful and user-friendly applications.\nThroughout this course, you will delve into the essential concepts and techniques of GUI programming, starting from the basics and gradually advancing to more complex topics. Whether you're a beginner or an experienced Python developer looking to expand your skill set, this course is designed to accommodate learners of all levels.\nJoin us as we dive into the world of Python GUI programming, where you'll learn how to create interactive and visually appealing applications that cater to diverse user needs. Get ready to unleash your creativity and build impressive GUI applications that leave a lasting impression. Let's embark on this exciting learning journey together!\nIn the \"Python GUI Training\" course, students embark on a comprehensive journey into the world of Graphical User Interface (GUI) programming using Python. The course begins with an introduction to Python GUI, providing students with insights into the significance and versatility of GUI applications. Moving forward, students explore various types of GUI interfaces, including desktop applications, web interfaces, and mobile app interfaces, understanding their distinct features and use cases.\nFollowing the introductory phase, students delve into the core concepts of GUI programming in Python. They learn about essential components such as buttons, canvases, checkboxes, frames, labels, entry fields, list boxes, menus, and more. Each component is thoroughly explained, accompanied by practical demonstrations to ensure a hands-on learning experience.\nAs students progress through the course, they gain proficiency in creating and customizing GUI elements, understanding event handling, and implementing interactive features to enhance user experience. They learn how to design intuitive and aesthetically pleasing interfaces using Python's GUI libraries.\nThe course covers a wide range of GUI components, including buttons for executing actions, canvases for drawing graphics, checkboxes for multiple selections, frames for layout management, labels for displaying text, and various other elements essential for building rich GUI applications. Additionally, students explore advanced components such as scroll bars, message boxes, radio buttons, scales, spin boxes, and more, expanding their toolkit for GUI development.\nBy the end of the course, students acquire the skills and knowledge needed to create functional and visually appealing GUI applications using Python. Whether aspiring developers or seasoned professionals, this course equips learners with valuable expertise to tackle real-world GUI programming challenges effectively.",
      "target_audience": [
        "Beginner Python programmers interested in expanding their skills into GUI development.",
        "Software developers aiming to enhance their proficiency in creating user interfaces with Python.",
        "Students or professionals seeking practical knowledge in building interactive applications.",
        "Individuals interested in graphical user interface design and development using Python.",
        "Anyone looking to add GUI programming skills to their repertoire for personal or professional projects."
      ]
    },
    {
      "title": "Apache Airflow From Basics to Mastery",
      "url": "https://www.udemy.com/course/apache-airflow-from-basics-to-mastery/",
      "bio": "Learn Apache Airflow with practical examples and build efficient, scalable data pipelines",
      "objectives": [
        "How to write complex pipelines with just a few lines of code",
        "The look and feel of the Airflow tool and its ecosystem",
        "Step-by-step guidance on moving from simple to complex system components",
        "How to avoid mistakes and understand why they happen",
        "You will learn through practical examples based on common real-world usage"
      ],
      "course_content": {},
      "requirements": [
        "You should be familiar with the basics of Python"
      ],
      "description": "Apache Airflow From Basics to Mastery is your step-by-step guide to advancing your workflow automation skills. Whether you’re just getting started or looking to deepen your understanding, this course will help you write efficient, scalable, and dynamic pipelines with minimal code. You'll explore the core features of Apache Airflow, learning how to move from simple to complex system components while avoiding common mistakes and understanding why they happen.\nThroughout the course, you'll gain hands-on experience with real-world examples, ensuring you can confidently apply what you learn in practical scenarios. You’ll work with Docker containers, create your first DAG, and explore key features like branching, trigger rules, and decorators. The course covers essential operators, hooks, and sensors, including AWS S3, Postgres, SQL, and more.\nAs you progress, you’ll dive into scheduling, dataset management, and Airflow’s powerful integration capabilities, such as working with DBT, securing passwords with a Fernet key, and managing access control. Additionally, you’ll learn best practices for versioning your code with Git, ensuring your workflows remain organized and maintainable.\nThis course is designed for anyone looking to boost their Airflow skills or use it regularly for workflow automation. Whether you’re a data engineer, developer, or DevOps professional, you’ll walk away with a strong foundation in Apache Airflow and the confidence to build robust data pipelines.",
      "target_audience": [
        "This course is for anyone looking to boost their Airflow skills or use it regularly for workflow automation"
      ]
    },
    {
      "title": "HMI Panelview 800 Configuring and Programming",
      "url": "https://www.udemy.com/course/hmi_panelview_800_programming/",
      "bio": "Learning on the Panelview 800 HMI",
      "objectives": [
        "Students will be able to configure and set up the parameters of a Panelview 800 HMI",
        "Students will be able to select and adjust colors, fonts, add text, and various backgrounds to Panelview HMI",
        "Students will be able to configure inputs and outputs on the Panelview 800 HMI",
        "Students will be able to monitor and minipulate counter, timer, and math data on the Panelview 800 HMI"
      ],
      "course_content": {},
      "requirements": [
        "Students should be familiar with PLC programming by taking the Micro 800 PLC programming course or similar course"
      ],
      "description": "This course will allow students to become familiar with a Panelview human machine interface (HMI).  Student will learn how to configure, wire, and program in concert with the Micro 850 PLC.  HMIs are used in industry and manufacturing to control and monitor processes.  It gives an operator an oportunity to observe these processes, and make changes whenever necessary.  After this course the students will be able to:\n1. Configure the HMI to communicate with the PLC\n2. Add the necessary wiring to the HMI, both power, and communication connections\n3. Design and program an input device\n4. Design and program an output device\n5. Install a start/stop motor control station\n6. Program and connect an electrical interlock circuit for forward and reverse operation\n7. Program and connect a timer to monitor time on the HMI\n8. Program and connect a counter to monitor the count values on the HMI\n9. Program and connect compare instructions like equal, not equal, greater than, less than, a combination of these, and minimum and maximum parameters\n10. Program and connect math operations\n11. Add a variety of screens when more space is needed\n12. Manipulate font styles, sizes, and colors bachground colors, and minulipulate text\nThe students should have a background in programmable logical controllers and basic electricity.  The students should have good computer skills and know how to cut, copy, paste, etc.",
      "target_audience": [
        "Students in this course may be currently working in the industrial maintenance of manufacturing sector, or looking to enter such fields."
      ]
    },
    {
      "title": "Web3 Stack - how blockchain works behind the scenes",
      "url": "https://www.udemy.com/course/web3-stack/",
      "bio": "Fast-track your career and learn how crypto infrastructure works",
      "objectives": [
        "Blockchain 101",
        "Web3 Architecture",
        "Node and Networks Consensus",
        "Smart Contracts",
        "Web3 Identity",
        "Web3 Identity",
        "Understand technical topics as a non-technical person and understand benefits of blockchains",
        "Transition from Web2 software engineering to working in Solidity by having Web3 explained, from top to bottom",
        "Streamline cross-functional collaboration across developer and non-developer teams effortlessly.",
        "Write blockchain marketing pieces that target a technical audience and connect with developer communities"
      ],
      "course_content": {
        "Welcome": [
          "Navigating the technical world of Web3",
          "Course overview - structure and syllabus"
        ],
        "Blockchain Behind the Scenes": [
          "Block - what is it?",
          "From a block to the blockchain",
          "Immutability - how blocks stay unchanged",
          "So, what actually is a blockchain?",
          "What are nodes",
          "Decentralization",
          "Consensus - what is it?",
          "PoW, PoS, PoA deciphered",
          "Proof of Work explained",
          "Proof of Stake explained",
          "Solana's Proof of Stake explained",
          "Gas - the blockchain fuel",
          "Let’s wrap it up!",
          "Blockchain Behind the Scenes"
        ],
        "Into the World of Different Blockchains": [
          "Bitcoin - how it all started",
          "Ethereum - the second revolution",
          "Digital asset - what is it?",
          "Wait, so cryptocurrencies are not the same as tokens?",
          "Let’s wrap it up!",
          "Into the World of Different Blockchains"
        ],
        "Web3 Architecture": [
          "Typical Web2 architecture",
          "Typical Web3 architecture",
          "Layer 0 - the protocol layer",
          "Layer 1 - the protocol layer",
          "The blockchain trilemma",
          "Layer 2 - the scalability layer",
          "Layer 3 - the application layer",
          "Let’s wrap it up!",
          "Web3 Architecture"
        ],
        "Smart Contracts": [
          "What are smart contracts?",
          "Solidity 101",
          "ABI - the menu of a smart contract",
          "The testnet",
          "ERC-20",
          "NFTs - ERC-721/1155",
          "The Surge NFT contract",
          "DAO - the encoded organization",
          "A DAO contract example",
          "Let’s wrap it up!",
          "Smart Contracts"
        ],
        "Web3 Identity": [
          "Authentication - Web2 vs Web3",
          "Public and private keys",
          "Accounts - EOA and Contract Accounts",
          "Messages and transactions - what is the difference?",
          "Wallet - what is it?",
          "Types of wallets",
          "Multi-signature wallets",
          "Signing transactions",
          "The most common hacks",
          "Not your key, not your crypto - how to stay safe",
          "Let’s wrap it up!",
          "Thank you!",
          "Web3 Identity"
        ],
        "Deep Dives intoWeb3 Tech": [
          "ARAGON: What is a DAO Framework",
          "STATION: Protocol Architecture 101 and The Station Proposer Protocol",
          "SNAPSHOT: DAO Governance with Snapshot"
        ]
      },
      "requirements": [
        "Anybody who want to learn about blockchain technology is welcome"
      ],
      "description": "Gain a solid technical understanding of how crypto works, all at your own pace.\nThe Surge Web 3 Stack course will guide you through the technical aspects of blockchains, smart contracts, NFTs, DAOs, Nodes, Web3 Architecture & Identity and more.\nThe Surge Web3 Stack course was designed to offer non-technical people a technical understanding of Web3 from a developer’s perspective, and technical builders analogies and examples to refresh their understanding or educate others.\nLevel up your career by understanding technical topics as a non-technical person and understand benefits of blockchains\nStreamline cross-functional collaboration across developer and non-developer teams effortlessly.\nTransition from Web2 software engineering to working in Solidity by having Web3 explained, from top to bottom.\nWrite blockchain marketing pieces that target a technical audience and connect with developer communities.\nThe course has 5 modules where you will gain a solid understanding of blockchain technology, giving you the knowledge to level-up scale up your Web3 capabilities. Titled “Deep Dives into Web3 Tech”, this module features lectures from top Web3 companies explaining actual applications of different Web3 technologies.\n\n\nGo Deeper into Web3 Tech - Special lectures from top Web3 organizations like Aragon, Snapshot, Station, and others.\nSurge Hotline - A Discord channel designated for Surge students. This is the place to ask all your questions.\nCertified Course - Receive a certificate of completion to share on LinkedIn, as well as a POAP to share with your network.",
      "target_audience": [
        "People in non-technical Web3 roles who want to learn how blockchains work, step by step",
        "Project managers who are looking to streamline collaboration across developer and non- developer teams.",
        "Web2 developers who want to start working in Web3 and understand how blockchain technology works",
        "Developers and engineers who want a quick and effective Web3 training customized for the Web3 development stack"
      ]
    },
    {
      "title": "Learn To Build Your Own Chatbots",
      "url": "https://www.udemy.com/course/learn-to-build-your-own-chatbots/",
      "bio": "Towards Business Excellence",
      "objectives": [
        "Learn To Build Your Own ChatBots"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is a ChatBot?",
          "Exploring ChatBots Online #1",
          "Exploring ChatBots Online #2",
          "Exploring ChatBots Online #3",
          "Exploring ChatBots Online #4",
          "Exploring ChatBots Online #5",
          "Exploring ChatBots Online #6",
          "Exploring ChatBots Online #7",
          "Conclusion"
        ]
      },
      "requirements": [
        "No Programming Skills Required"
      ],
      "description": "The Module creating your own chatbots, offers unique blend of learning via online platforms which cater to our needs. It is like exploring the modules and the facilities available towards the needful. So, if you are thinking about jumping on the chatbot bandwagon, here are the special  chatbot platforms you should know about and explore towards success at large. The beauty is that any person without any knowledge of coding can create his/her own bot on Facebook Messenger using the mentioned platforms and learning. Cheers and happy learning.\nThe Creating Your Own Chatbots Module provides students with a unique educational opportunity by using a variety of internet platforms that have been modified to match our particular requirements. This allows the module to provide students an educational experience that is really one of a kind. This stage comprises looking at the many various possibilities available, which is comparable to assessing the many distinct modules and capabilities that are provided in relation to what is required. In order for you to achieve success on a larger scale, the following is a list of specialist chatbot platforms that you should get familiar with and do research on. The following is a rundown of several chatbot platforms that you should be aware with if you are considering joining the chatbot bandwagon. The amazing thing about it is that anyone, regardless of whether or not they have any prior experience with coding, is capable of building their very own bot for use on Facebook Messenger by making use of the platforms that have been covered and by learning. This can be accomplished by utilizing the platforms that have been covered. Cheers, and I hope that all of your academic attempts go swimmingly for you!",
      "target_audience": [
        "Business Owners/ Enthusiasts/ Marketing Guys/ Sales Personals"
      ]
    },
    {
      "title": "Beat the Codility Coding Interview in Ruby",
      "url": "https://www.udemy.com/course/beat-the-codility-coding-interview-in-ruby/",
      "bio": "Learn and practice how to solve many coding puzzles from Codility using Ruby.",
      "objectives": [
        "Experience solving many of codility's coding interview puzzles, with problem descriptions, hints and solutions",
        "Learn common problem solving tips ideal for coding interviews",
        "Have a greater chance of passing the coding interview with codility, hackerrank and others",
        "Have a better chance of doing well in a face to face or phone coding interview"
      ],
      "course_content": {
        "Introduction": [
          "Make most of this course",
          "Useful links and resources"
        ],
        "Time Complexity": [
          "Quick recap on Complexity Theory",
          "Perm Missing Element Problem",
          "Perm Missing Element Hint 1",
          "Perm Missing Element Hint 2",
          "Perm Missing Element Solution",
          "Perm Missing Element Code Walkthrough",
          "Equilibrium Problem",
          "Equilibrium Hint 1",
          "Equilibrium Hint 2",
          "Equilibrium Solution",
          "Equilibrium Code Walkthrough"
        ],
        "Arrays": [
          "Refresh your knowledge on Arrays",
          "Cyclic Rotation Problem",
          "Cyclic Rotation Hint",
          "Cyclic Rotation Solution",
          "Cyclic Rotation Code Walkthrough"
        ],
        "Counting Elements": [
          "What do we mean by Counting Elements?",
          "Frog River One Problem",
          "Frog River One Hint",
          "Frog River One Solution",
          "Frog River One Code Walkthrough",
          "Max Counters Problem",
          "Max Counters Hint 1",
          "Max Counters Hint 2",
          "Max Counters Solution",
          "Max Counters Code Walkthrough"
        ],
        "Stacks and Queues": [
          "The basics around Stacks and Queues",
          "Brackets Problem",
          "Brackets Hint",
          "Brackets Solution",
          "Brackets Code Walkthrough",
          "Fish Problem",
          "Fish Hint",
          "Fish Solution",
          "Fish Code Walkthrough"
        ],
        "Leader": [
          "Leader definition and the Dominator Problem",
          "Dominator Hint",
          "Dominator Solution",
          "Dominator Code Walkthrough"
        ],
        "Maximum Slice Problem": [
          "Introduction to the Maximum Sub Array problem",
          "Max Profit Problem",
          "Max Profit Hint",
          "Max Profit Solution",
          "Max Profit Code Walkthrough"
        ],
        "Sorting": [
          "Overview of different Sorting Algorithms",
          "Disc Intersection Problem",
          "Disc Intersection Hint",
          "Disc Intersection Solution",
          "Disc Intersection Code Walkthrough"
        ],
        "Prefix Sums": [
          "How to generate prefix sums",
          "Passing Cars Problem",
          "Passing Cars Hint",
          "Passing Cars Solution",
          "Passing Cars Code Walkthrough",
          "Div Count Problem",
          "Div Count Hint",
          "Div Count Solution",
          "Div Count Code Walkthrough"
        ],
        "Primes and Composites": [
          "Understanding Primes and Composites",
          "Flags Problem",
          "Flags Hint 1",
          "Flags Hint 2",
          "Flags Solution",
          "Flags Code Walkthrough"
        ]
      },
      "requirements": [
        "Ruby programming language",
        "Basic understanding of data structures and algorithms"
      ],
      "description": "This course has been designed to help you pass your next coding interview. It focuses on puzzles from Codility's training lessons, so if you have an online coding test coming up, this course is perfect for you.\nThe key to passing coding interviews is to practice as much as possible by solving various types of coding puzzles. In doing so you sharpen your problem solving skills and eventually you will start to see patterns amongst the different coding solutions. You also increase your chances of being asked a problem you’ve already solved.\nIn this course you’ll get to practice many of these coding puzzles. In every section we introduce the topic, explain the problem and later provide you with a few hints that help solve the puzzle. In the end we arrive at the solution together.\nAlong the way you'll learn how to ride a motorbike, surf, scuba dive and fly an aeroplane. *\nJoin me on this course, and let’s get you to pass this interview!\n\n\n*Not really, however this course is pretty fun regardless.\nAll code in this course can be found on github, username/project: cutajarj/CodilityInRuby",
      "target_audience": [
        "Ruby Developers about to take the codility coding interview",
        "Ruby Developers about to take another coding interview, such as hackerrank or others",
        "Ruby Developers about to take a face to face or phone coding interview"
      ]
    },
    {
      "title": "NodeJS & React Authentication: JWT, Role-Based Access, 2FA",
      "url": "https://www.udemy.com/course/nodejs-react-authentication/",
      "bio": "Complete Guide to Auth with NodeJS & React: JWT, Role Based Access Control, Two-Factor Authentication, Revoke Token",
      "objectives": [
        "How JWT access and refresh tokens work, and how to manage them securely",
        "How to implement login, registration, and logout flows from scratch",
        "Best practices for storing tokens in the browser (cookies vs localStorage)",
        "How to protect backend routes using middleware and RBAC",
        "How to build role-based frontend interfaces (Permission dashboards)",
        "How to implement 2FA with QR codes (compatible with Google Authenticator)",
        "How to use Redis to manage refresh token storage",
        "Frontend authentication flow using React, React Router, and Redux"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Demo refresh token, forgot & reset password",
          "Demo two factor authentication",
          "Demo role based-access control"
        ],
        "Setup Code Base": [
          "Download source code",
          "Understand Node API folder structure",
          "Prepare React Project",
          "Setup mongodb",
          "Fix mongodb error"
        ],
        "Authentication with Json Web Token": [
          "Create user model",
          "JWT in theory",
          "Sign Up",
          "Generate JWT",
          "Sign In",
          "Authentication middleware - part 1",
          "Authentication middleware - part 2",
          "Authentication middleware - part 3",
          "Connect API to Frontend",
          "Setup react router",
          "Setup toastify",
          "Setup API Layer",
          "Understand interceptor",
          "Prepare protected page",
          "Attach access token",
          "Ignore attach access token on some routes",
          "Show profile",
          "Setup redux",
          "User reducer",
          "Persist user data when refresh",
          "Fix typescript",
          "Logout",
          "Protected route",
          "Clearify some questions",
          "Clear redux when token expired",
          "Unauthorized route",
          "Handle signup page"
        ],
        "Refresh Token": [
          "Introduction to Refresh Token",
          "Generate refresh token",
          "Refresh token controller",
          "Understand refresh token flow",
          "Update a api error message",
          "Refresh token on Frontend",
          "What's exactly a original request?",
          "The problem with update user info",
          "Attach refresh token to cookie",
          "Handle refresh token from cookie",
          "Clear refresh token from cookie"
        ],
        "Forgot & Reset Password": [
          "Update a model for reset password",
          "Forgot password - part 1",
          "Forgot password - part 2",
          "Reset password",
          "Call API Reset Password",
          "Handle loading status",
          "Problem with update profile"
        ],
        "Role based access control (RBAC) on Backend": [
          "Introduction to RBAC",
          "Create model for RBAC",
          "Seed permission data",
          "Seed role data",
          "Assign default role to new user",
          "Add role to user",
          "How to generate permission based on API route ?",
          "Get all api route",
          "Map API Routes to permissions",
          "Initialize permissions",
          "Get all permissions",
          "Update permission name",
          "Add permissions to role",
          "Get all roles",
          "Get role detail",
          "Verify permission middleware - part 1",
          "Verify permission middleware - part 2",
          "Apply middleware & fix bug",
          "Get all users"
        ],
        "Role based access control (RBAC) on Frontend": [
          "Prepare permission page",
          "Create a table",
          "Render all users",
          "Render all roles",
          "Render all permissions",
          "Add full permission to admin",
          "Add/Update permission modal",
          "Show all permisison on dropdown",
          "Auto select default permisison",
          "Fix refresh token",
          "Call API to add permission to the role",
          "Update permission name modal",
          "Call API to update permisison name",
          "API Get all permissions by roles",
          "Ingore some permissions",
          "usePermission hook",
          "Enhance usePermission hook",
          "Authorization route",
          "Select all permissions",
          "Organize route"
        ],
        "Two Factor Authentication (2FA)": [
          "Introduction to 2FA",
          "Create some models for 2FA",
          "API get 2FA QR",
          "API verify OTP from QR",
          "Show 2FA QR on Frontend",
          "Submit OTP",
          "Remove user session when logout",
          "Required 2FA Page",
          "Fix sign up & test flow"
        ],
        "Revoke Token: Redis": [
          "Answer few questions",
          "Revoke token flow",
          "API banned user",
          "Install & Setup redis",
          "Create unique jwt id",
          "Store jwtId in Set Data Structure",
          "Revoke token when banned user",
          "Revoke token when refresh token",
          "Fix axios interceptor",
          "Prevent sign in when account was banned"
        ]
      },
      "requirements": [
        "Familiarity with Node.js and Express",
        "Familiarity with React.js",
        "Fundamental knowledge of APIs",
        "(Optional but helpful) Experience with tools like Redux and redis"
      ],
      "description": "In today’s world, secure authentication is no longer optional — it’s essential. Whether you're building a startup product, working on enterprise-level software, or simply looking to strengthen your development skills, knowing how to implement authentication and authorization properly is a must.\nThis course is your complete guide to implementing a modern, secure, and scalable authentication system using Node.js for the backend and React for the frontend. We’ll walk through real-world practices for handling user login, registration, protected routes, user roles, and advanced security features like 2-Factor Authentication (2FA).\nYou’ll begin by learning the foundations of JWT (JSON Web Tokens), how to generate and verify access and refresh tokens, and how to store them securely. Then, we’ll dive deep into Role-Based Access Control (RBAC) — giving different permissions to users based on roles like admin, moderator, or customer. You’ll learn how to build APIs that enforce these rules safely and efficiently.\nTo take things further, we’ll implement Two-Factor Authentication (2FA) using TOTP (Time-based One-Time Passwords). Users will be able to scan a QR code with an app like Google Authenticator and input time-based codes during login, significantly boosting security.\nThis course doesn’t just show you how to implement things — it explains why each step is important and how to avoid common pitfalls in building secure systems. You’ll follow best practices in both backend and frontend development, and understand the real-world considerations behind authentication systems: token expiration, token rotation, cookie vs localStorage, refresh token reuse detection, and more.",
      "target_audience": [
        "Full-stack developers who want to implement secure login systems with JWT, role management, and 2FA",
        "Backend developers looking to master authentication, refresh tokens, and role-based access with Node.js",
        "Frontend developers who want to integrate login, protected routes, and 2FA into React apps",
        "Students or self-learners building portfolio projects with real authentication features"
      ]
    },
    {
      "title": "Creating Software In GoDot: Basics",
      "url": "https://www.udemy.com/course/creating-software-in-godot-basics/",
      "bio": "Learn To Create Programs The Easy Way",
      "objectives": [
        "Create a UI based software",
        "Send and connect signals to a script",
        "How to save and open files",
        "Node customization",
        "Create hyper-links",
        "How to open something in your users default application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Where To Get GoDot",
          "Export Templates"
        ],
        "Project": [
          "Setting Up Our Project",
          "Creating Menus",
          "Creating About Popup",
          "Save and Open Popup",
          "Updating The Window Title",
          "New File",
          "Open A File",
          "Save A File",
          "Quitting",
          "Connecting The About",
          "Exporting To Platform Of Choice"
        ]
      },
      "requirements": [
        "Some coding basic knowledge will be useful but not required"
      ],
      "description": "We will be learning how to use the GoDot engine for creating software and go over some coding concepts you may need while developing software inside the engine. For this series I use GoDot 3.1\n\nIn this class, we are going to create a simple program you can use everyday and you will learn\nHow to add elements to our UI\nCreate a UI based software\nSend node signals to a script\nLearn how to save and open files\nLearn how to create a file extension\nHow to customize different nodes\nHow to create hyperlinks\nHow to open a URL from the application",
      "target_audience": [
        "Anyone who wants to learn to develop software using GoDot",
        "Anyone who wants to see more of a software developement rather than game developement"
      ]
    },
    {
      "title": "DataDog for AWS Monitoring",
      "url": "https://www.udemy.com/course/datadog-for-aws-monitoring/",
      "bio": "Master Monitoring and Alerting for AWS using DataDog",
      "objectives": [
        "Monitor your AWS infrastructure with DataDog",
        "Basic understanding of AWS, EC2,ECS and RDS",
        "How to send notifications for anomalies via Slack and Email",
        "Make use of DataDog Dashboards",
        "DataDog Architecture for AWS and cloud monitoring",
        "Why we need AWS monitoring",
        "How DataDog and AWS work together in industry"
      ],
      "course_content": {
        "Introduction": [
          "Why DataDog?",
          "Introduction",
          "Dislaimer",
          "DD-AWS Architecture",
          "DD-Neto-Case Study",
          "Why AWS?",
          "Create a DataDog & AWS Account",
          "AWS Basics - Quiz",
          "DataDog Pricing",
          "Why Datadog"
        ],
        "Monitoring and Alerting AWS EC2 using DataDog": [
          "Why use EC2 instances",
          "How to Create and Monitor EC2 instances"
        ],
        "Monitoring your ECS infrastructure": [
          "What are containers, how have they evolved?",
          "What is ECS",
          "Monitoring ECS using DataDog",
          "EC2 and ECS Monitoring"
        ],
        "Monitor your EBS infrastructure": [
          "What is EBS",
          "Monitoring EBS using DataDog",
          "EBS Monitoring Quiz"
        ],
        "RDS Monitoring": [
          "What is RDS",
          "RDS basic monitoring",
          "RDS enhanced monitoring",
          "DataDog-AWS Assignment"
        ],
        "GoodBye?": [
          "Final Thoughts"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "You must setup a free or a paid account on Amazon AWS"
      ],
      "description": "Welcome to this DataDog Monitoring Course\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in DataDog.\nIn this course you will Learn by example, where we demonstrate all the concepts discussed so that you can see them working, and you can try them out for yourself as well.\nMy step-by-step training will initiate you into the world of DataDog monitoring.\nDataDog is an Monitoring/Analytics platform for all of your performance metrics. DataDog allows you to query, visualize, alert on and understand your metrics no matter which cloud environment you use. Create, explore, and share dashboards with your team and increase collaboration.\nWhy Learn DataDog?\nAnother Question: How can you monitor your AWS/cloud infrastructure?\nWhether you are new to AWS or an advanced user, DataDog will give you the end to end observability you require to monitor your cloud infrastructure. DataDog utilizes a single data platform for all metrics, events, logs, and traces and delivers the ability to visualize, analyze, and troubleshoot your entire AWS environment. In this course you will practice AWS monitoring using EC2, ECS, ELB and RDS instances. DataDog can monitor all other parts of your AWS infrastructure as well. Before moving onto the practical application we will learn the theory around DataDog Monitoring as well as how the pricing works.\nDatadog will help you in all stages for AWS/Cloud adoption. From Migration and Modernization to Optimization, Datadog is there for you. Pinpoint all issues during migration to AWS and take technical and business decisions accordingly. Modernize your DevOps process and monitor your performance using DataDog. Finally, by monitoring all your data, you can use DataDog to optimize end user experience. This is done by creating interactive dashboard, monitors and widgets. Email and Slack Alerting notify you of any upcoming issues.\nBy the end of the course you will have set up and learnt to manage a AWS like a pro.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Software Developers who want to understand how to get started with DataDog for AWS",
        "DevOps Engineers",
        "System Reliability Engineers",
        "Those looking to monitor their AWS instance with DataDog",
        "Anyone interested in monitoring their AWS instances"
      ]
    },
    {
      "title": "Dynamic Programming Python, Coding Interviews & Applications",
      "url": "https://www.udemy.com/course/dynamic-programming-python/",
      "bio": "Become a better developer by learning how to build efficient Dynamic Programming algorithms",
      "objectives": [
        "Recognize a problem that can be solved using Dynamic Programming",
        "Come up with both a top down and bottom up Dynamic Programming solution using Python",
        "Use Dynamic Programming for coding interview puzzles and practical applications",
        "Improve your problem-solving skills and become a better developer",
        "Revise your recursion knowledge"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Useful links and resources"
        ],
        "Understanding Recursion": [
          "Introduction to recursion",
          "More Recursion"
        ],
        "Counting Derangements": [
          "What's a Derangement?",
          "Coming up with a Recurrence Relation",
          "Recursive code walkthrough",
          "Top Down Solution",
          "Top Down code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Aircraft Spacing": [
          "Solving Air Traffic",
          "Defining a solution recursively",
          "Recursive code walkthrough",
          "Top Down Solution",
          "Top Down code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Maximum Sub Array": [
          "How are maximum sub arrays useful?",
          "Recurrence Relation",
          "Recursive code walkthrough",
          "Top Down Solution and code walkthrough",
          "Bottom Up Solution and code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Text Justification": [
          "How to make paragraphs look pretty",
          "Solving Recursively",
          "Recursive code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization",
          "Optimization and code walkthrough"
        ],
        "String Distance": [
          "Distance between Strings",
          "Solving Recursively",
          "Recursive code walkthrough",
          "Top Down Solution and code walkthrough",
          "Bottom Up Solution",
          "Bottom Up code walkthrough",
          "Optimization and code walkthrough"
        ],
        "Final Course Exercise": [
          "Well done!",
          "The Full Bus Tour Problem"
        ]
      },
      "requirements": [
        "Python programming language",
        "Familiarity with recursion, although we also cover this in the course"
      ],
      "description": "Have you ever wondered what makes a good developer? Why it is that big tech companies are increasingly asking candidates to solve challenging coding puzzles in interviews? Or why you should bother to learn about complicated algorithms?\n\n\nWith regards to technical skills a good developer has an understanding of computer science and knows when to apply this knowledge. Tech companies know that if someone has a good grasp of these fundamentals, she will likely be fine learning any programming language, using any new tool and solving a wide range of programming problems. As a developer comprehending data structures and algorithms you’ll be better equipped to tackle some of the more difficult problems both in your day-to-day job and for coding interviews.\n\n\nDynamic Programming is a topic in data structures and algorithms. It covers a method (the technical term is “algorithm paradigm”) to solve a certain class of problems. In this course we will go into some detail on this subject by going through various examples. The course is designed not to be heavy on mathematics and formal definitions. Instead you will learn through practical everyday programming algorithms and through some coding interview puzzles. We present a method to recognize problems that can be solved using dynamic programming and then build an efficient solution through small gradual steps.\n\n\nIn addition, you will also learn how to gamble professionally, how to be an air traffic controller and how to become a serious writer.*\n*Not really… but hey it’s hard to make Dynamic Programming sound exciting...\n\n\nAll code in this course can be found on github, username/project: cutajarj/DynamicProgrammingInPython\n\n\nAt the end of the course we have a small coding exercise to test your knowledge.",
      "target_audience": [
        "Self taught developers who are looking to up their game and become better developers",
        "Experienced developers wanting to learn how to apply Dynamic Programming to solve certain classes of problems",
        "Developers wanting to prepare for an upcoming coding interview",
        "University students struggling with Dynamic Programming"
      ]
    },
    {
      "title": "Getting Started: macOS apps with SwiftUI",
      "url": "https://www.udemy.com/course/macos-apps-with-swiftui/",
      "bio": "Unlocking macOS App Development: A Beginner's Guide to SwiftUI",
      "objectives": [
        "Master macOS Development with SwiftUI",
        "Build Functional Projects",
        "Prepare for App Launch",
        "Publish Apps Successfully"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting Started",
          "Quiz"
        ],
        "Project: Building a Number Randomizer (Difficulty Level: Easy)": [
          "What We Will Build",
          "Creating a New SwiftUI Project",
          "Diving Deep into ContentView Code",
          "Creating the User Interface and Click Logic",
          "Quiz"
        ],
        "Project: Building A Windowless Screenshot App (Difficulty Level: Medium)": [
          "What We Will Build",
          "Building the App EasyScreenshot",
          "Quiz"
        ],
        "Project: Building A Photo Fetching App (Difficulty Level: Medium)": [
          "What We Will Build",
          "Building the App SimplePhotos",
          "Quiz"
        ],
        "macOS Development and SwiftUI Basics": [
          "What We Will Learn",
          "Views and View Instance Methods",
          "Managing States In SwiftUI",
          "Core Data",
          "SF Symbols",
          "Quiz"
        ],
        "Preparing For Launch": [
          "What We Need to Do Before Launch",
          "Adjusting the Minimum OS Version",
          "App Icon",
          "Localization",
          "Quiz"
        ],
        "Distribution": [
          "What We Will Learn",
          "Versioning",
          "App Store",
          "Self-Distribution",
          "Quiz"
        ],
        "Conclusion": [
          "Final Words"
        ]
      },
      "requirements": [
        "Mac Computer",
        "Install Xcode",
        "Apple Developer Program Membership",
        "Prior Programming Experience"
      ],
      "description": "Got awesome macOS app ideas but unsure where to begin? This course will not only equip you with the right tools and essential concepts but also guide you, step by step, with hands-on examples. Get ready to unleash your creativity and publish your own app!\nIn this comprehensive course, you'll dive into macOS app development with SwiftUI, Apple's powerful framework for building intuitive user interfaces. Whether you're new to programming or looking to expand your skills into the macOS ecosystem, this course is designed to guide you through every step of the process.\n\n\nWhat You'll Learn:\nPrepare for macOS Development: Get ready to build your first macOS app with SwiftUI by setting up your development environment and exploring essential tools.\nHands-On Projects: Build four unique projects, each carefully crafted to take you from beginner to advanced levels, ensuring a well-rounded learning experience.\nmacOS Development and SwiftUI Basics: Master the fundamentals of macOS development using SwiftUI, covering everything from views and containers to managing states.\nApp Launch Preparation: Learn how to prepare your app for launch, including adjusting the minimum OS version, creating app icons, and localization.\nApp Publishing: Discover the ins and outs of publishing your app, whether through the App Store or self-distribution, and ensure a successful launch.\n\n\nWho Can Join:\nThis course is perfect for anyone new to macOS app development with SwiftUI. Whether you're a complete beginner or have prior programming experience in other languages, you'll find valuable insights and guidance to help you succeed.\n\n\nWhy Choose This Course:\nHands-On Experience: Dive right into example projects that reinforce your learning and allow you to apply your newfound skills in real-world scenarios.\nTailored Exercises: Engage with tailored exercises and quizzes designed to solidify your understanding of key concepts.\nExpert Insights: Benefit from valuable tips and insights shared by an experienced developer, providing you with practical advice to enhance your development journey.\nUp-to-Date Content: Stay ahead with tutorials based on the latest Xcode 15 and up-to-date with the newest tools and features in macOS development.",
      "target_audience": [
        "Beginners in macOS Development",
        "Programmers with Prior Experience",
        "Aspiring App Developers",
        "Self-Learners and Hobbyists"
      ]
    },
    {
      "title": "Introduction to AWS Glue for Developers",
      "url": "https://www.udemy.com/course/introduction-to-aws-glue-for-developers/",
      "bio": "Deep Dive into AWS Glue and learn how to use this popular ETL Tool",
      "objectives": [
        "How to setup an AWS Glue Pipeline",
        "How to assign permissions to developers working on AWS Glue",
        "What is an ETL pipeline and how does AWS implement it",
        "Setup AWS Glue crawlers with tags and cron jobs to make them run according to your business requirements",
        "How to use AWS CloudWatch to monitor Glue",
        "How to use AWS Glue Studio",
        "Use AWS Glue Transformations",
        "AWS Glue Redshift Integration"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is an ETL",
          "AWS Glue Architecture"
        ],
        "AWS Glue Setup": [
          "AWS Overview",
          "S3 Overview",
          "AWS Permissions",
          "AWS Glue 101"
        ],
        "AWS Glue for Developers": [
          "AWS Glue Tags",
          "What are Cron Jobs",
          "AWS Glue Cron Jobs",
          "AWS Glue Studio",
          "TRanformations",
          "Metrics",
          "AWS Glue Alarms",
          "AWS Redshift Integration",
          "AWS Glue Test 101",
          "AWS Glue Test 102",
          "AWS Glue Test 103"
        ],
        "Conclusion": [
          "Final Thoughts"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "You must setup a free or a paid account on Amazon AWS"
      ],
      "description": "Welcome to this AWS Glue Course\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in AWS Glue.\nIn this course you will Learn by example, where we demonstrate all the concepts discussed so that you can see them working, and you can try them out for yourself as well.\nMy step-by-step training will initiate you into the world of AWS Glue.\nAmazon Glue is a ETL (Extract, Transform and Load) tool which integrates with different data storages. It allows you to clean, compile, massage and transform the data as your move it between different data stores. AWS lets you schedule these jobs to move and transform the data.\nWhy Learn AWS Glue?\nAnother Question: What tool should you use for Data Integration when you have multiple data sources and need it in one place for analysis?\nAWS Glue will help you in all stages of Data Warehousing. From Data Extraction to Data visualization, AWS Glue is there for you. Glue can leverage other tools in the AWS suits like Amazon Redshift, S3 Data Lake and Athena. Pinpoint all issues during data delivery and setup monitors and alarms to track the pipeline. Use AWS Glue Studio to visualize and create your ETL pipeline. Finally, by integrating all your data sources, you can use AWS Glue to optimize your data visualization process. This is done by creating interactive dashboards, monitors and widgets in AWS Redshift and other 3rd party tools. CloudWatch helps us monitor all our metrics and logs. Email and Slack Alerting notify you of any upcoming issues.\nDuring this course we will start by covering a range of concepts from an introduction to what an ETL is, to crawlers, to cron jobs and data catalogs. We will then do a step by step guide of creating an ETL, and we also see how to integrate it with other AWS tools like RedShift. Finally we take a look at some real life examples to study where and how AWS Glue can help us. We ensure you learn the best practices at all times.\nBy the end of the course you will have set up and learnt to manage a AWS Glue like a pro.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Software Developers who want to understand how to integrate data efficiently using a ETL tool like AWS Glue",
        "DevOps Engineers",
        "System Reliability Engineers",
        "Anyone interested in how to use an ETL Tool"
      ]
    },
    {
      "title": "Kafka Event Driven Microservices With Java + Spring [Part-2]",
      "url": "https://www.udemy.com/course/saga-pattern/",
      "bio": "Apache Kafka with Spring Boot: Architectural Patterns - Saga, Choreography, Orchestrator, OutBox, Fan Out, Fan In etc",
      "objectives": [
        "Master Event-Driven Microservices: Learn how to design and build scalable, resilient microservices using event-driven architectures.",
        "Understand Saga Patterns: Explore the Saga Choreography and Saga Orchestrator patterns for complex workflows.",
        "Leverage Spring Cloud Stream: Learn how to use Spring Cloud Stream to develop event-driven microservices with Kafka.",
        "Implement Integration Patterns: Understand and apply various integration patterns, such as Fan-Out/Fan-In and Content-Based Routing.",
        "Ensure Data Consistency: Learn how to use the Transactional Outbox Pattern for reliable message sending.",
        "Gain Practical Experience: Practice building event-driven microservices through hands-on exercises.",
        "Stay Ahead of the Curve: Learn in-demand skills that are essential for modern microservices architectures.",
        "Reactive Programming: Utilize reactive programming concepts for building scalable and responsive microservices.",
        "Hands-On Exercises: Practice building event-driven microservices through practical examples."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Note: Part - 2"
        ],
        "Spring Cloud Stream - Reactive Kafka": [
          "Spring Cloud Stream - Introduction",
          "Binder vs Binding",
          "*** Humble Request & Resources ***",
          "Project Setup",
          "Simple Consumer Using Spring Cloud Stream",
          "OPTIONAL - Kafka Setup Refresh",
          "Simple Consumer",
          "Consumer As Function",
          "Setting Up Active Profiles",
          "Binder Properties",
          "Receiver Options Customizer",
          "Binding Specific Properties",
          "Simple Producer Using Spring Cloud Stream",
          "Producer Ack Config Update",
          "Sender Options Customizer",
          "Issues With Test Binder",
          "Getting Started With Integration Tests",
          "Test Property Source",
          "Producer Test",
          "Timeout In Integration Tests",
          "What about Correlation Id ?",
          "Facing Issues?",
          "Simple Processor",
          "Processor Demo",
          "Processor Integration Test",
          "Messages With Keys - Part 1",
          "Messages With Keys - Part 2",
          "Acknowledgement Demo",
          "Should I Always Send As Message?",
          "Quick Integration Test For Messages With Keys",
          "Summary"
        ],
        "Stream Bridge": [
          "Introduction",
          "DTOs",
          "Producer Emitting Objects",
          "Digital / Physical Delivery Consumer",
          "Content Based Routing - Part 1",
          "Content Based Routing - Part 2",
          "Content Based Routing - Demo",
          "Dynamic Routing",
          "Dynamic Routing - Integration Test",
          "Routing Via Message Header - Part 1",
          "Routing Via Message Header - Part 2",
          "StreamBridge As DLT Producer",
          "Summary"
        ],
        "Fan-Out/Fan-In": [
          "Fan-Out Introduction",
          "Fan-Out Demo",
          "Fan-Out With Message Header",
          "Fan-Out With Tuples",
          "Fan-Out With Tuples Demo",
          "Fan-In Introduction",
          "Heat Index",
          "Fan-In Implementation",
          "Fan-In Test"
        ],
        "Spring Cloud Stream - Tips & Tricks": [
          "Introduction",
          "Native Decoding Demo",
          "Encoding/Decoding Using Abstract Type - Part 1",
          "Encoding/Decoding Using Abstract Type - Part 2",
          "Encoding/Decoding Using Abstract Type - Part 3",
          "Domain Modeling",
          "Consuming Messages From Multiple Topics",
          "What About Other Features?",
          "Summary"
        ],
        "Saga Pattern - Choreography - Getting Started": [
          "Introduction",
          "Project Structure & Setup",
          "Project Template",
          "OPTIONAL - Multi Module Project Setup",
          "Project Setup Check",
          "High Level Design Discussion",
          "Circular Depdendency?",
          "Saga Domain Events",
          "Java Sealed Class",
          "More On Domain Modeling",
          "Defining Order Domain Events",
          "Defining Payment Domain Events",
          "Defining Inventory Domain Events",
          "Defining Shipping Domain Events",
          "Order Event Processor",
          "Java Pattern Matching Alternatives",
          "Additional Maven Plugins",
          "Enabling Preview",
          "Payment / Inventory / Shipping Processor Interface",
          "Event Publisher",
          "Duplicate Event Handler",
          "Summary"
        ],
        "Saga Pattern - Choreography - Payment / Inventory / Shipping Services": [
          "Payment Service - Introduction",
          "Payment Service - DB Initialization Scripts",
          "Entity / DTO / Repository",
          "Mapper & Service API",
          "Service Implementation - Part 1",
          "Service Implementation - Part 2",
          "Payment Service Processing Order Events - Part 1",
          "Payment Service Processing Order Events - Part 2",
          "Payment Service Processing Order Events - Part 3",
          "Payment Service - Spring Cloud Stream Config",
          "Application Config",
          "Payment Service - Integration Test - Part 1",
          "Payment Service - Integration Test - Part 2",
          "Payment Service - Integration Test - Part 3",
          "Payment Service - Integration Test - Part 4",
          "Inventory Service - DB Initialization Scripts",
          "Inventory Service - ASSIGNMENT",
          "Inventory Service - ASSIGNMENT SOLUTION",
          "Inventory Service - Integration Test",
          "Shipping Service - DB Initialization Scripts",
          "Shipping Service - Introduction",
          "Shipping Service - Entity / DTO / Repository",
          "Shipping Service Implementation",
          "Shipping Service - Messaging Implementation",
          "Shipping Service - Integration Test - Part 1",
          "Shipping Service - Integration Test - Part 2"
        ],
        "Saga Pattern - Choreography - Order Service": [
          "Order Service - DB Initialization Scripts",
          "Introduction",
          "Entity / DTO / Repository",
          "Defining Service API",
          "Service Implementation",
          "Payment Component Service Implementation",
          "Inventory Component Service Implementation",
          "Get Order Details - Performance - Clarification",
          "Shipping Component Service Implementation",
          "Order Fulfillment Service Implementation - Part 1",
          "Order Components - SQL",
          "Order Fulfillment Service Implementation - Part 2",
          "Messaging Event Mapper",
          "Order Service Processing Payment & Inventory Events",
          "Order Service Processing Shipping Events",
          "Order Event Publisher",
          "Spring Cloud Stream Binding Config - Part 1",
          "Spring Cloud Stream Binding Config - Part 2",
          "Spring Cloud Stream Binding Config - Part 3",
          "Spring Cloud Stream Binding Config - Part 4",
          "REST Controller",
          "Application Bean Creation Check",
          "Integration Test - Part 1",
          "Integration Test - Part 2",
          "Integration Test - Part 3",
          "Concurrent Event Processing Issue",
          "Concurrency Control Using Optimistic Locking",
          "Integration Test - Part 4",
          "Integration Test - Part 5",
          "Integration Test - Part 6",
          "Integration Test - Part 7",
          "Saga Pattern Choreography - DEMO - Part 1",
          "Saga Pattern Choreography - DEMO - Part 2",
          "Static Resource",
          "Saga Pattern Choreography - DEMO - Part 3",
          "Saga Pattern Choreography - DEMO - Concurrent Requests Tests",
          "Summary"
        ],
        "Saga Pattern - Orchestrator - Getting Started": [
          "Introduction",
          "Project Setup",
          "Request / Response Interface",
          "Modeling Payment Request Response",
          "Modeling Inventory / Shipping Request Response",
          "Modeling Request Processor",
          "Warning",
          "Payment Service Implementation - Part 1",
          "Payment Service Implementation - Part 2",
          "Payment Service Implementation - Part 3",
          "Payment Service - Integration Test - Part 1",
          "Payment Service - Integration Test - Part 2",
          "Inventory Service - ASSIGNMENT",
          "Inventory Service - ASSIGNMENT SOLUTION",
          "Shipping Service - Requirements",
          "Shipping Service - Implementation - Part 1",
          "Shipping Service - Implementation - Part 2",
          "Shipping Service - Integration Test"
        ],
        "Saga Pattern - Orchestrator - Final": [
          "High Level Design Discussion",
          "Modeling Workflow Step",
          "DB Initialization Scripts",
          "Entity / DTO / Repository",
          "Entity / DTO Mapper",
          "Service API Definition",
          "Service Implementation - Part 1",
          "Service Implementation - Part 2",
          "Controller",
          "Message DTO Mapper",
          "Defining Individual Step Interfaces",
          "Payment Step Implementation",
          "Inventory Step Implementation",
          "Handling OnSuccess / OnFailure Cases",
          "Shipping Step Implementation",
          "Orchestrator Interface",
          "Orchestrator Implementation",
          "Workflow Builder",
          "Order Event Listener",
          "Orchestrator Config",
          "Application Config",
          "Integration Test - Part 1",
          "Integration Test - Part 2",
          "Integration Test - Part 3",
          "Orchestrator Demo - Part 1",
          "Static Resource",
          "Orchestrator Demo - Part 2",
          "Orchestrator Demo - Part 3 - Changing Steps",
          "Orchestrator Demo - Part 4 - Concurrent Requests",
          "Summary"
        ]
      },
      "requirements": [
        "Finish the Part-1",
        "Comfortable with Indian Accent"
      ],
      "description": "*** Note ***\nThis course has 2 parts. This is Part-2. Do NOT ENROLL without enrolling Part-1.\nThis course is specifically designed for senior or staff-level engineers who are interested in learning about Event-Driven Microservices, the Saga Pattern, and various architectural patterns using technologies such as Spring Cloud Stream, Kafka, and Java Reactive Programming.\nBy the end of the course, participants will gain a deep understanding and comfort with the following patterns:\nSaga Choreography Pattern\nSaga Orchestrator Pattern\nTransactional Outbox Pattern\nFan-Out / Fan-In\nContent-Based Routing / Dynamic Routing\nHere is what we will do in this course:\n\nThe course begins by exploring Spring Cloud Stream, a framework for developing Event-Driven Microservices. Participants will learn how to use the Reactive Kafka binder and practice producing, consuming, processing, and acknowledging messages using Java Reactive and functional interfaces. Integration tests using Embedded Kafka will also be covered.\nNext, participants will delve into Stream Bridge, a utility for sending arbitrary messages to a Kafka Topic. Stream Bridge enables routing messages based on content, achieving dynamic routing, and even acting as a Dead-Letter-Topic producer during error handling.\nThe course then progresses to designing a complex application involving multiple microservices. Participants will learn how to achieve a complex workflow that involves all the services, with a focus on implementing the Saga Pattern. The Saga Orchestrator and Saga Choreography styles will be explored, where participants will understand the role of a central coordinator or the observation and reaction of events among the saga participants.\nFinally, the course covers the Transactional Outbox Pattern, which addresses reliable message sending to a Kafka Topic. The pattern involves the use of an 'Outbox' table acting as a proxy Kafka topic. Messages intended for the Kafka topic are first inserted into this table as part of the application's database transaction. Periodic querying of the table ensures messages are sent, marked as 'Sent,' and not sent again.",
      "target_audience": [
        "Any senior / staff level engineer"
      ]
    },
    {
      "title": "Parsing TCP Socket Data with C/C++",
      "url": "https://www.udemy.com/course/parsing-tcp-socket-data-with-cc/",
      "bio": "The correct TCP data handling solution using C++",
      "objectives": [
        "They would be able to build applications communicating through sockets, in their own network or the Internet."
      ],
      "course_content": {
        "Welcome!": [
          "Introduction",
          "Environment and Pre-requisite"
        ],
        "TCP": [
          "What is TCP?",
          "Features of TCP"
        ],
        "Parsing": [
          "Concept of Parsing",
          "Structure of Process"
        ],
        "Codes & Test": [
          "Plan to Test",
          "Demo and comparing",
          "Codes of client",
          "Codes of non-parsing server",
          "Codes of parsing server - design",
          "Codes of parsing server - Parser class"
        ],
        "Review": [
          "Summary, Review and Improvement"
        ],
        "Resources": [
          "What are the contents in the PacketParsing.zip file?"
        ]
      },
      "requirements": [
        "MS Visual Studio 2015 Community Edition C++ and at least Windows 7 for OS."
      ],
      "description": "In C/C++, socket programming is one of the most challenging subjects to every developer. Not only the theory of the socket is quite tricky, and there are a lot of things to learn, but we also need much experience and guidance in various cases.\nTo parse and handle TCP data is that very case. We can recognize the necessity and make sure the solution is correct, only by experience.\nWith my 16 yrs experience in developing financial trading platforms with Visual C++, I'm sure that you need to learn and utilize this lecture.",
      "target_audience": [
        "This is for all who needs to develop applications with TCP sockets communication using MS Visual Studio 2015 C++. They should only know basic programming in C++."
      ]
    },
    {
      "title": "Byte-Sized-Chunks: Graph Algorithms and Problems in Java",
      "url": "https://www.udemy.com/course/byte-sized-chunks-graph-algorithms-and-problems-in-java/",
      "bio": "Djisktra, Prim, Kruskal, Bellman-Ford, the topological sort - all will make sense now!",
      "objectives": [
        "Design and implement software using canonical graph algorithms - Djikstra, Prim, Kruskal, Bellman Ford and topological sort",
        "Understand the use-cases for the common graph algorithm"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of programming is assumed, preferably in Java"
      ],
      "description": "Note: This course is a subset of our much longer course 'From 0 to 1: Data Structures & Algorithms' so please don't sign up for both:-)\nThis is an animated, visual and spatial way to learn data structures and algorithms\nOur brains process different types of information differently - evolutionarily we are wired to absorb information best when it is visual and spatial i.e. when we can close our eyes and see it\nMore than most other concepts, Data Structures and Algorithms are best learnt visually. These are incredibly easy to learn visually, very hard to understand most other ways\nThis course has been put together by a team with tons of everyday experience in thinking about these concepts and using them at work at Google, Microsoft and Flipkart\nTaught by a Stanford-educated ex-Googler.\nThe graph is a data structure that is used to model a very large number of real world problems. It's also an programming interview favorite. The study of graphs and algorithms associated with graphs forms an entire field of study called graph theory.\nDirected and undirected graphs\nAdjacency matrices, lists and sets\nBreadth and Depth-First traversal\nTopological sort\nDjikstra's algorithm\nBellman-Ford algorithm\nPrim's algorithm\nKruskal's algorithm",
      "target_audience": [
        "Nope! Please don't enroll for this class if you have already enrolled for our 15-hour course 'From 0 to 1: Data Structures and Algorithms'",
        "Yep! Computer Science and Engineering grads who are looking to really visualise data structures, and internalise how they work",
        "Yep! Experienced software engineers who are looking to refresh important fundamental concepts",
        "Yep! MBA graduates or business professionals who are looking to move to a heavily quantitative role"
      ]
    },
    {
      "title": "Spring Transactions In-Depth",
      "url": "https://www.udemy.com/course/spring-transactions-in-depth/",
      "bio": "The Complete Course",
      "objectives": [
        "Understanding the fundamentals of transaction management in Spring.",
        "Configuring and managing transactions using Spring's declarative and programmatic approaches.",
        "Implementing transactional behavior across different layers of the application.",
        "Exploring advanced transactional features like save-points, transaction propagation, and isolation levels.",
        "Handling nested transactions and understanding their implications.",
        "Optimizing transaction management for performance and reliability.",
        "Understanding message-driven architecture and its benefits.",
        "Mastering exception handling strategies within Spring applications.",
        "Ensure application reliability including the ability to recover from failures."
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "What You Need to Know"
        ],
        "Spring Framework Introduction (Optional)": [
          "Module Introduction",
          "Introduction to Spring Framework",
          "Dependency Injection & IoC",
          "Annotations",
          "Creating Spring Boot Application",
          "Presentation Layer",
          "Service Layer",
          "Data Access Layer",
          "Database Persistence",
          "Spring Framework Quiz"
        ],
        "Database Transaction": [
          "What is a Transaction?",
          "Installing Docker and MySQL",
          "Transaction Management using MySQL Console",
          "Transaction Savepoint",
          "Transaction Management using Plain Java"
        ],
        "Spring Transactions": [
          "Module Introduction",
          "Project Setup",
          "Stuck? Here’s the Final Code for Every Section",
          "Handling CORS Exception",
          "Demystifying Open Session in View (OSIV)",
          "Transactional Annotation",
          "Transactional Updates",
          "Read-Only Transactions",
          "Spring Proxy",
          "Eager Fetching Exposed",
          "No-Session & Lazy Initialization Exceptions",
          "Applied Transactions"
        ],
        "Exceptions and Rollbacks": [
          "Exception Types",
          "How Exceptions Affect Transactions",
          "Controlling Rollback"
        ],
        "Transaction Propagation": [
          "Propagation Types",
          "Transaction Boundaries",
          "Data Inconsistency"
        ],
        "Spring Events": [
          "Introduction to Spring Events",
          "Event Listener",
          "Conditional Event Handling",
          "Exception Propagation",
          "Transactional Event Listener",
          "Before Commit Phase",
          "Recovering from Failure",
          "Listeners Gone Quiet",
          "Fallback Execution"
        ],
        "Isolation Levels": [
          "Introduction to Isolation Level",
          "Hands-On Demo with MySQL"
        ],
        "Roundup": [
          "It’s Been Great Having You in the Course"
        ]
      },
      "requirements": [
        "Basic Java knowledge is required",
        "Basic relational database knowledge (ex: SQL, MySQL, MariaDB or Postgresql)"
      ],
      "description": "Over the years, I’ve seen far too many projects run into serious trouble—not because of bad code, but because developers didn’t fully understand how transactions actually work. Features fail silently, data becomes inconsistent, and debugging becomes a nightmare.\nThat’s why I created this course: to give you a clear, practical, and in-depth understanding of transaction management This course is built for engineers who don’t just want to use transactions, but want to understand exactly what’s going on under the hood—how Spring coordinates with the database, what triggers rollbacks, and where hidden bugs often live.\nWhether you’re just starting out or have years of backend experience, this course will challenge the assumptions you didn’t even know you were making. You’ll learn how to implement transactions the right way—and avoid the hidden pitfalls that most engineers don’t even realize exist—until something breaks in production.\nWe’ll start with a quick refresher on the Spring Framework, so even if you're a bit rusty or new to it, you’ll be up to speed. Then, before diving into Spring’s transactions, we’ll take a step back and understand how transactions work at the database level—because knowing what’s happening under the hood is critical for writing reliable backend code.\nFrom there, we’ll build a complete backend from scratch using Spring Boot, Java, and MySQL, powering a real Angular-based food ordering application (frontend provided). This gives you a practical context to learn and apply everything, not just theory.\nHere’s what you’ll learn:\nHow database transactions work and why they matter\nDeclarative vs programmatic transaction management in Spring\nUnderstanding transaction propagation behavior\nManaging exceptions, rollbacks, and how Spring decides when to commit or abort\nThe impact of event listeners and transaction synchronization\nAvoiding common transaction pitfalls: self-invocation, lazy loading, silent rollbacks, and more\nReal-world strategies for building reliable, consistent, and maintainable transactional systems\nThis course blends deep explanations with real development work. You’ll debug, experiment, and build real backend. Every concept is grounded in practical implementation so you can apply what you learn immediately.\nBy the end, you won’t just know how transactions work—you’ll understand how to use it effectively in real-world systems, avoid subtle bugs, and build robust, data-consistent applications.",
      "target_audience": [
        "This course is designed for engineers at all levels, whether they're new to the field or seasoned professionals, who are eager to master the intricacies of Spring's @Transactional annotation to enhance their practical skills.",
        "It caters to individuals who have a keen interest in applying real-world scenarios to gain proficiency in both Spring transactions and messaging.",
        "Participants will benefit from learning proper debugging techniques and resolution strategies for transactional issues or exceptions, making it suitable for anyone looking to improve their troubleshooting skills in this area.",
        "This course empowers individuals to confidently tackle challenges or exceptions that arise during transactional operations, ensuring they can navigate such situations with ease and expertise."
      ]
    },
    {
      "title": "UML Bootcamp: Master Unified Modeling Language (UML) Today!",
      "url": "https://www.udemy.com/course/uml-bootcamp-master-unified-modeling-language-uml-today/",
      "bio": "Expert-Led UML Training: Your Journey to Proficient UML Modeling, Design, and Software Development Excellence With UML",
      "objectives": [
        "The foundational principles of UML and its significance in software design",
        "Class and Object diagrams: Visualizing software structures and relationships",
        "Use Cases: Unveiling system functionalities and actor interactions",
        "Activity and Sequence diagrams: Mapping dynamic workflows and interaction sequences",
        "Practical modeling tips for various UML diagrams, ensuring clarity and precision",
        "Hands-on exercises, simulating real-world software design scenarios",
        "And MUCH more"
      ],
      "course_content": {
        "Laying the Foundations: Grasping UML Basics and Setup": [
          "Introduction to UML: Setting the Stage",
          "Understanding UML: Its Importance and Applications",
          "Exploring the Various UML Diagrams",
          "Getting Started: Installing and Configuring UML Tools",
          "The Advantages of Object-Oriented Design"
        ],
        "Deep Dive into Classes: Mastering UML Class Design and Relationships": [
          "Diving into Object-Oriented Programming (OOP)",
          "Distinguishing Between Objects and Classes in UML",
          "Class and Object Diagrams: Visualizing Structures and Relationships",
          "Defining Values and Attributes in UML",
          "Understanding Operations and Methods in UML Design",
          "Deciphering UML Notation: A Guide to Class Symbols and Indicators",
          "Hands-On: Crafting Your First Class in StarUML",
          "Unveiling Links and Associations in UML Relationships",
          "Grasping Multiplicity: Defining Relationships in UML",
          "Diving into Association End Names: Enhancing UML Clarity",
          "Mastering Association Classes: Bridging Relationships in UML",
          "Unpacking Generalization and Inheritance in UML Design",
          "Class Modeling Best Practices: Tips for Effective UML Design"
        ],
        "Navigating Use Cases: From Actors to Interactions in UML": [
          "Introducing Actors: Defining Roles in UML Use Cases",
          "Understanding Use Cases: Capturing System Functionalities in UML",
          "Use Case Description (Vending Machine) DO NOT SKIP !",
          "Crafting Use Case Diagrams: Visualizing System Interactions",
          "Decoding Relationships in Use Case Diagrams: 'Include', 'Extend' and Beyond"
        ],
        "From Scenarios to Sequences: Charting UML Interaction Pathways": [
          "Delving into Scenarios: Narratives of UML Interactions",
          "Sequence Diagrams: Mapping Interaction Lifelines in UML",
          "Crafting Effective Sequence Models: Expert Tips and Techniques",
          "Cheat Sheet"
        ],
        "Traversing Activity Landscapes: Unpacking UML Workflow Diagrams": [
          "Activity Diagrams Uncovered: Visualizing Dynamic Workflows in UML",
          "Decomposing Activities for Granular UML Insights",
          "Refining Activity Models: Best Practices for UML Workflow Design",
          "Cheat Sheet"
        ],
        "Wrapping Up: Reflection and Forward Momentum": [
          "Quiz !",
          "Bravo! Celebrating Your Journey Through UML Mastery",
          "Onward and Upward: Taking Your Skills to the Next Level"
        ]
      },
      "requirements": [
        "No programming experience needed - we'll teach you everything you need to know",
        "A computer with access to the internet",
        "No paid software required"
      ],
      "description": "Welcome to the Ultimate UML Mastery Course, your definitive guide to understanding and mastering the intricacies of Unified Modeling Language (UML). As the backbone of software design and architecture, mastering UML equips you with a powerful toolset, putting you ahead in the software development industry which continually leans towards systematic design processes.\nSpanning multiple hours of comprehensive content, enriched with world-class slides and valuable resources, this course stands out as the most in-depth UML guide you'll encounter. Whether you're new to software design or seeking to refine your skills, this course propels you from novice to UML expert. Here's why:\nTaught by an expert who's been at the forefront of software design and has shared this knowledge in leading institutions worldwide.\nReflecting the current best practices of 2023, you'll assimilate techniques and tools endorsed by leading software development organizations.\nNo corners cut! Experience meticulously crafted presentations, real-world projects, an array of downloadable resources, insightful articles, and much more.\nThe curriculum has been honed over years, benefiting from extensive student interaction, feedback, and the instructor's rich teaching experience.\nThousands have benefitted from our courses, with many transitioning to professional roles or spearheading their software ventures.\nContinuous course updates ensure you're always equipped with the latest in UML knowledge and practices.\nEngaging video modules walk you through every UML concept, ensuring a robust understanding and application readiness.\nThe course boasts numerous hours of HD tutorials, progressively building your expertise while tackling hands-on tasks.\nIn this comprehensive UML learning experience, you'll delve into:\nThe foundational principles of UML and its significance in software design.\nClass and Object diagrams: Visualizing software structures and relationships.\nUse Cases: Unveiling system functionalities and actor interactions.\nActivity and Sequence diagrams: Mapping dynamic workflows and interaction sequences.\nPractical modeling tips for various UML diagrams, ensuring clarity and precision.\nHands-on exercises, simulating real-world software design scenarios.\nAnd MUCH more!\nArmed with the knowledge from this course, you'll be set to lead software design initiatives, produce clear and effective design documentation, and enhance collaboration across development teams.\nEnroll now and enjoy:\nAnimated Video Lectures\nMultiple Hours of Expert Instruction\nUML-centric Assignments and Projects\nEngaging Quizzes & Practice Opportunities\nDownloadable UML Resources and Cheat Sheets\nInsightful UML-focused Articles\n$1000+ worth of UML course materials and curriculum.\nWe're excited to have you as part of Evergreen Programming, so take action and immerse yourself in this fully comprehensive UML course.\nSee you inside!",
      "target_audience": [
        "If you want to grasp the intricate structures of Unified Modeling Language (UML) and its importance in software design, then take this course.",
        "If you are looking to delve into the systematic world of UML and its applications in software architecture.",
        "If you want to take ONE COURSE and learn everything you need to know about UML, take this course."
      ]
    },
    {
      "title": "Agile IT Business Analysis: From Requirements to Reality",
      "url": "https://www.udemy.com/course/agile-ba/",
      "bio": "A Comprehensive Guide to Developing Clear Requirements, Impactful User Stories, and Robust Software Features",
      "objectives": [
        "Illustrate the capabilities and claims of Lean and Agile software development frameworks",
        "Adapt different requirements gathering techniques from Lean, Agile, Kanban and Scrum software development methodologies",
        "Analyze the costs and benefits of IT projects",
        "Leverage the learning trajectory to integrate the presented techniques into your job interview"
      ],
      "course_content": {
        "System Analysis Core": [
          "System Analysis Explained: Concepts, Methodologies, and Roles in IT",
          "Understanding System Analysis: Key Concepts",
          "System Analysis Concepts: Bridging Theory and Practice",
          "Mastering System Analysis in IT",
          "System Analysis Exam Prep",
          "System Analysis for Modern IT: Design, Implementation, & Optimization",
          "Understanding the System Analyst Role: Key Responsibilities and Skills",
          "What Does a System Analyst Do? A Deep Dive into Roles, Skills, & Impact",
          "Exploring System Analysis in IT: Waterfall vs. Phased Approaches"
        ],
        "Software Development Industry Overview": [
          "The Evolution of the Software Industry: Warm-up",
          "Software Innovations in the 1990s-2000s: Transforming Industries",
          "Exploring Cloud-Based Delivery, AI Integration, and Future Paradigm Shifts",
          "Project Activities Life-cycle",
          "Uncertainty in IT",
          "IT Projects",
          "Intro to Agile and its Manifesto",
          "Agile: Kanban",
          "Rational Unified Process - RUP",
          "Activities and Services of IT Companies",
          "Models of IT Outsourcing Services",
          "Types of IT Projects Funding",
          "IT Projects' Roles I",
          "IT Projects' Roles II",
          "SDLC models: Cascade, Iterative, Spiral"
        ],
        "Agile IT Project Management": [
          "Intro and Objectives",
          "Management Notion",
          "Management Theory Evolution",
          "The Evolution of Management Theory: From Ancient Foundations to Agile",
          "System Approach",
          "IT Project Management System Approach: Frameworks, Tools & ROI",
          "Thinking Process in Computer Science",
          "Management Process",
          "Waterfall Model",
          "Scrum Framework",
          "Scrum Framework Explained: Adaptive Teamwork, Roles, Events & Best Practices",
          "Scrum Framework: Backlog, Sprints",
          "Backlog, Sprints & Continuous Improvement Explained",
          "Scrum: Sprint Planning, Review, Retrospection",
          "Scrum Ceremonies",
          "Scrum: Misc",
          "Kanban Overview",
          "Lean and Quiz Preparation"
        ],
        "IT Business Analysis Core": [
          "Intro and Objectives",
          "BA Concept",
          "Business Analysis: The Art of Transforming Data into Decisions",
          "Requirements Classification",
          "Business Analysis: Requirements Classification - A Strategic Framework",
          "BA Goals and Value",
          "Business Analysis: The Strategic Engine Driving Organizational Success",
          "Elicitation",
          "The Art and Science of Business Analysis Elicitation",
          "Highlighting User Classes",
          "Business Analysis: Understanding User Classes for Strategic Success",
          "User Interface Analysis",
          "Business Analysis Meets UI",
          "BA Interview",
          "Roadmap to Interview Success for Business Analysts",
          "Workshops",
          "Run Better Workshops",
          "Brainstorm",
          "Business Analysis Essentials – The Brainstorm Method",
          "Focus Group",
          "Business Analysis Focus Groups: P.R.O.M.P.T.S. Framework for Action",
          "Users in Workplaces",
          "Prototyping",
          "The Prototyping Method — Fast, Low-Risk Product Discovery",
          "Survey",
          "The Surveys Method — Design, Sample, Analyze, and Turn Data into Decisions",
          "Recap",
          "The Evolving Role of Business Analysis"
        ],
        "IT Business Analysis Core II": [
          "Intro and Objectives",
          "Requirements Analysis",
          "Requirements Prioritization",
          "Requirements Modelling",
          "Requirements Validation Management",
          "Requirements Writing",
          "BA Objectives",
          "BA Tasks",
          "BA Role",
          "BA Skills I",
          "BA Skills II",
          "Recap"
        ],
        "Agile Methodologies Big Picture": [
          "Intro and Objectives",
          "Agile Concept",
          "Agile Principles",
          "Agile Development Overview",
          "Agile History",
          "Agile Philosophy",
          "Agile Methods",
          "Agile Challenges",
          "Agile Management and Recap"
        ],
        "User Stories": [
          "Intro and Objectives",
          "History",
          "User Stories Core",
          "User Stories Benefits and Limitations",
          "Usage",
          "User Stories Map and Recap"
        ],
        "BA in Virtual Reality Domain": [
          "Beyond Reality: Objectives",
          "VR as A New Reality in Entertainment, Education and Business",
          "Embracing VR Immersion as Gateway to Virtual Worlds",
          "VR: Beyond the Screen, Beyond Imagination",
          "How Haptic Technology is Transforming VR",
          "The Evolution of \"Virtual\": From Simulation to Reality",
          "Beyond the Headset: History of Virtual Reality",
          "VR Driving Simulators: Transforming Training & Beyond",
          "Avatar Image-Based Technology",
          "Desktop VR: Interesting Experiences, Lower Cost",
          "Virtual Worlds of Modern First-Person Video Games",
          "Turning Point Date in Virtual Reality",
          "Comparison of Contemporary VR with 2017",
          "VR Applications in Industries",
          "Web 3D Consortium and Web Experience",
          "Unity as Gateway for VR Development",
          "Modern VR History",
          "Recap: Potential of Virtual Reality"
        ],
        "BA in eGames Industry": [
          "Explore the World of eGames: From Design to Economic Impact",
          "Video Gaming: Genres, Platforms, and Accessories",
          "Exploring Career Opportunities in the eGames Industry: From Developers to Esport",
          "The Rise of eGames Economy: Transforming the Digital Landscape",
          "The Electronic Games Industry During the Pandemic: Resilience and Growth",
          "The Indie Breakup Phenomenon in the Electronic Games Industry",
          "Exploring Global Trends in the Electronic Games Industry",
          "Largest Markets in the Electronic Games Industry"
        ],
        "BA in eSports Domain: Decade by Decade": [
          "eSports Industry Introduction",
          "The Birth of eSports: Exploring the 90s",
          "The Rise of eSports: Evolution in the 2000s",
          "eSports in the 2010s: The Rise of Streaming, Mobile, and Global Tournaments",
          "eSports as a Sport: The Case for Olympic Inclusion"
        ]
      },
      "requirements": [
        "Interest in IT business analysis",
        "Basic technical background",
        "The majority of the course has no prerequisites"
      ],
      "description": "Course Overview\nWelcome to a simplified yet in-depth tutorial designed to assist learners in gaining critical insights into Business Analysis. Whether you are starting your IT career or looking for a refresher, this course delivers all the essential knowledge to sharpen your skills in IT business analysis.\nWhat You Will Learn\nThis course will equip you with the ability to conduct:\nInterviews\nWorkshops\nOn-site Observations\nBrainstorming activities\nFocus Groups\nSurveys\nYou will learn to analyze Business Processes and their requirements, enabling you to identify problems, develop project roadmaps, and effectively communicate with stakeholders.\nIn-Depth Modules\nStakeholder Management\nStakeholder Analysis and Mind-Mapping\nUtilizing the RACI Chart\nProject Communication Plans\nRequirements Gathering Techniques\nRequirements Modeling (Functional & Non-Functional Requirements)\nUser Requirements & Business Needs\nUse Cases and UML Foundations\nPrioritizing Backlog Items\nBy covering the full scope of business analysis methods, you will be prepared to address and solve IT challenges using agile, lean, and scrum frameworks.\nIndustry-Focused Business Analysis\nVirtual Reality Domain\nEnter the immersive world of Virtual Reality, where business analysis is vital to transform complex digital requirements into captivating, interactive experiences. Learn to analyze user interactions, system requirements, and design intuitive interfaces that bring virtual worlds to life.\neGames Industry\nIn the dynamic eGames industry, BA skills play a crucial role in examining game economies, streamlining development processes, and enhancing user engagement. Understand market trends and data-driven insights that fuel successful game design and monetization strategies.\neSports Industry\nExplore the complete history of eSports, from its humble beginnings to its current status as a global phenomenon. This section takes you decade by decade, covering the key milestones, iconic games, influential players, and technological advancements that shaped the industry. Learn about the foundational 90s, the rise of pro leagues in the 2000s, and the explosion of streaming and mobile gaming in the 2010s. Understand the arguments for and against eSports as a \"real\" sport, and its potential Olympic inclusion. By the end of this section, you'll be able to trace the evolution of eSports, identify its defining moments, and analyze the factors driving its continued growth.\nComputer/Machine Vision Domain\nInformation Management Systems Domain\nOther Emerging Domains Will be Added Soon.\nYour Future as a Business Analyst\nBy completing this course, you will be empowered to take ownership of IT projects and drive your organization’s success through:\nEnhanced problem-solving and decision-making skills\nEffective communication with stakeholders\nThe ability to develop and promote project roadmaps\nAdaptability to various high-demand industries\nTake control of your IT projects with confidence and precision. See you in the course!",
      "target_audience": [
        "Junior to intermediate Business Analysts",
        "University Graduates",
        "College Graduates"
      ]
    },
    {
      "title": "Byte-Sized-Chunks: Stacks, Queues, Binary Trees, Heaps",
      "url": "https://www.udemy.com/course/stacks-queues-binary-trees-heaps/",
      "bio": "A visual way to master basic data structures for strong fundamentals!",
      "objectives": [
        "Design and implement software that use fundamental data structures",
        "Visualise - really vividly imagine - the common data structures, and the algorithms applied to them",
        "Understand the trade-offs, complexity and use-cases for different types of container data structures"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of programming is assumed, preferably in Java"
      ],
      "description": "Note: This course is a subset of our much longer course 'From 0 to 1: Data Structures & Algorithms' so please don't sign up for both:-)\nThis is an animated, visual and spatial way to learn data structures and algorithms\nOur brains process different types of information differently - evolutionarily we are wired to absorb information best when it is visual and spatial i.e. when we can close our eyes and see it\nMore than most other concepts, Data Structures and Algorithms are best learnt visually. These are incredibly easy to learn visually, very hard to understand most other ways\nThis course has been put together by a team with tons of everyday experience in thinking about these concepts and using them at work at Google, Microsoft and Flipkart\nWhat's Covered:\n\nBig-O notation and complexity\nStacks\nQueues\nTrees\nHeaps",
      "target_audience": [
        "Nope! Please don't enroll for this class if you have already enrolled for our 15-hour course 'From 0 to 1: Data Structures and Algorithms'",
        "Yep! Computer Science and Engineering grads who are looking to really visualise data structures, and internalise how they work",
        "Yep! Experienced software engineers who are looking to refresh important fundamental concepts"
      ]
    },
    {
      "title": "Jenkins for Professionals",
      "url": "https://www.udemy.com/course/jenkins-for-professionals/",
      "bio": "The Real World Training Program for Jenkins",
      "objectives": [
        "Learn core concepts of Jenkins",
        "Learn to build CI/CD pipeline using Jenkins",
        "Learn to configure Jenkins as per your development stack",
        "Learn to use Jenkins with Docker"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting started with Jenkins": [
          "Introduction to Jenkins",
          "Installing Jenkins",
          "Tools to install",
          "Architecture of Jenkins",
          "Creating a Jenkins Freestyle project",
          "Scheduling a Jenkins Job",
          "Triggering Builds remotely",
          "Parameterizing Jenkins Job"
        ],
        "Configuring Jenkins": [
          "Creating a user",
          "Installing Plugins",
          "Implementing Role based access",
          "Configuring Jenkins System",
          "Configuring Jenkins system - 2",
          "Email Notifications",
          "Extended Email Notification"
        ],
        "Jenkins Pipeline": [
          "Introduction to pipelines",
          "Pipeline Concepts",
          "Creating a Simple Pipeline",
          "Building a Project with Jenkins Pipeline",
          "Building a Pipeline with Jenkinsfile",
          "Using Environment Variables",
          "Setting Environment Sariables"
        ],
        "Jenkins Blue Ocean": [
          "Getting Started with Blue Ocean",
          "Installing Blue Ocean",
          "Creating a Pipeline in Blue Ocean",
          "Creating a Pipeline with Blue Ocean Visual Designer"
        ],
        "Jenkins in Docker": [
          "Running Jenkins in Docker",
          "Persisting Jenkins data in a Volume",
          "Running multiple Jenkins instances in Docker"
        ],
        "Jenkins Plugins": [
          "Create Build Monitor View",
          "Using Catlight",
          "Using Jenkins CLI",
          "Jenkins Multibranch Pipeline",
          "Jenkins Multibranch Pipeline Part 2",
          "Integrating Jenkins with Slack",
          "Jenkins Metrics and Trends"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knolwedge of Java is required to complete this course"
      ],
      "description": "Jenkins is one of the most popular CI tool used by companies worldwide. You can now master this amazing tool using our comprehensive step by step guide. You will understand the core architecture of Jenkins and will learn to configure it for your development stack. You will learn it through real world examples and exercises.\nWe have made this course practical and task oriented so that you get a complete Hands on experience with Jenkins. Start now and build your CI/CD pipeline using jenkins.",
      "target_audience": [
        "Any developer who wants to learn jenkins and build CI/CD pipeline will find this course very useful"
      ]
    },
    {
      "title": "Professional React Native - by Basarat",
      "url": "https://www.udemy.com/course/professional-react-native/",
      "bio": "Use your React knowledge to build native iOS and Android Apps",
      "objectives": [
        "Learn how to use ReactJS to build real native mobile apps",
        "Develop cross platform (iOS and Android) applications without knowing Swift / ObjectiveC / Java / Kotlin",
        "Explore React Native basic and advanced features",
        "Deploy your mobile applications to the app stores (apple and google)"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction"
        ],
        "Get Started with React Native CLI": [
          "Local Development Setup for Native Development",
          "Create your first React Native CLI Application",
          "React Native CLI Template Walkthrough"
        ],
        "Get Started with Expo": [
          "React Native Development using Expo",
          "Create your first Expo App",
          "Migrating an Expo Project to TypeScript",
          "Exposing your Expo Dev App to the Internet using Tunneling",
          "Running Expo App locally on an iOS simulator and Android emulator"
        ],
        "React Native Core Features": [
          "How does React Native Work?",
          "Typography in React Native",
          "SafeAreaView - Handling the notch",
          "React Native Button Component",
          "React Native Status Bar Component",
          "StyleSheet vs style object vs styles array in React Native",
          "FlexBox guide for React Native"
        ],
        "React Native CLI Platform Projects": [
          "iOS and Android Native Projects"
        ],
        "React Native Debugging": [
          "VSCode React Native Extension",
          "Using Flipper with React Native"
        ],
        "React Native Patterns, Tips and Tricks": [
          "Touchable components Opacity vs Highlight",
          "Completely Custom Buttons using Pressable",
          "Collecting User Input Text in React Native",
          "Targeting Specific Platforms using React Native",
          "Using a boolean input - The Switch Component",
          "Loading Spinner in React Native",
          "Making Network Request and talking to backend services over http",
          "Displaying Images in React Native",
          "Scrolling Content in React Native",
          "Building a custom component in React Native // Build a separator component",
          "Optimising Scroll Performance in React Native using FlatList",
          "React Native SectionList component // FlatList with headers",
          "Displaying Web Content (HTML / JS / CSS) in React Native with WebView",
          "Create an Image Background in React Native",
          "Creating Modals",
          "Responsive Design for Mobile Applications using React Native",
          "Using Custom Fonts in React Native"
        ],
        "Build an full application": [
          "Build Tic Tac Toe"
        ],
        "Expo Advanced Features": [
          "Building Expo Applications Locally",
          "Debugging Expo Applications",
          "Setting Application Icons and Splash Screen"
        ],
        "App Store Deployment": [
          "Sign up for Android Developer account with one time fee",
          "Creating Application Binaries using Expo Cloud",
          "Expo Automatic Version Code Management",
          "Publish your application to the google play console",
          "Publish your application to the apple app store",
          "Create a Google Play Store badge for your application",
          "Create an Apple App Store Badge for your application"
        ]
      },
      "requirements": [
        "Knowledge of the fundamental JavaScript programming",
        "Beginner level React knowledge is required",
        "Familiarity with TypeScript",
        "No native experience required! We cover everything you need to know about native development :)"
      ],
      "description": "Welcome to the ultimate guide for mastering React Native and becoming a proficient cross-platform mobile app developer. In this comprehensive Udemy course, \"Professional React Native Mastery,\" you will embark on a journey to unlock the full potential of React Native, enabling you to build high-quality, efficient, and engaging mobile applications for both iOS and Android platforms.\nWhether you're a seasoned developer or a newcomer to the world of mobile app development, this course is designed to take you from the fundamentals of React Native to advanced techniques used by industry professionals. Through a carefully structured curriculum and hands-on projects, you'll gain the skills necessary to create polished and feature-rich apps that leverage the power of React Native.\nBy the end of the course, we'll build and publish a complete app to the google play store as well as the apple app store.\nHere is a brief overview of the topics covered:\nThe core concepts and theory behind React Native\nComplete developer setup from easier Expo to full power bare React CLI\nMain features maintained officially the React Native Team\nDebugging React Native Applications\nUsing third party React Native packages\nThe iOS and Android app store setup\nPublishing your application to the different platforms\nCreating QR Codes to promote your application",
      "target_audience": [
        "Developers looking for a professional career in React Native",
        "Indie developers looking to build their app ideas"
      ]
    },
    {
      "title": "The Complete course for Python Microservices",
      "url": "https://www.udemy.com/course/the-complete-course-for-python-microservices/",
      "bio": "You will master all Python Microservices with examples and learn Best Practices in Python Microservices!",
      "objectives": [
        "Learn all Python Microservices in this course",
        "Learn Key Features of Python for Microservices",
        "Learn Advantages of Microservices in Python",
        "Learn the best practices in Python Microservices and how to build them from basics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Loops in Python Microservices": [
          "Loops to retrieve the data",
          "Operating on Nampy arrays in Python Microservices"
        ],
        "Iterations with loops in Python Microservices": [
          "Working with CSV data files"
        ],
        "Pandas Data frame in Python Microservices": [
          "Pandas Dataframe in Python Microservices",
          "Multi Dimentional Nampy arrays",
          "Retrieving data from a data frame in Python Microservices"
        ]
      },
      "requirements": [
        "You need to be interested in learning Python Microservices"
      ],
      "description": "You will learn everything about Python Microservices in this course. Python Microservices architecture is a software design approach where an application is built as a collection of small, loosely coupled services. Each service operates independently, focusing on a specific functionality, and communicates with other services using lightweight protocols like HTTP/REST, gRPC, or message queues. Python, known for its simplicity and versatility, is widely adopted for implementing microservices due to its rich ecosystem and robust libraries.\nPython's suitability for microservices is attributed to frameworks such as Flask, FastAPI, and Django Rest Framework (DRF). Flask and FastAPI are lightweight and enable developers to create highly performant APIs with minimal overhead. FastAPI, in particular, leverages Python’s type hints for validation and auto-generates interactive documentation, making it a favorite for modern microservices. Microservices also require robust monitoring and debugging mechanisms. Python supports integrations with tools like Prometheus, Grafana, and ELK Stack for logging, monitoring, and visualization. These tools help track the health and performance of individual services.\nPython’s simplicity, rich libraries, and strong community support make it a compelling choice for developing microservices. By leveraging its ecosystem and best practices, developers can build scalable, maintainable, and efficient systems tailored to meet the needs of modern applications.",
      "target_audience": [
        "This course is for those wanting to learn Python Microservices"
      ]
    },
    {
      "title": "AI‑Powered Blockchain Development - Solidity & React + AI",
      "url": "https://www.udemy.com/course/ai-powered-blockchain-dev-solidity-react/",
      "bio": "AI‑Powered Blockchain Development: Build & Deploy Blockchain dApps with Solidity + React + Web3.js + AI Tools + IPFS",
      "objectives": [
        "Build and deploy full-stack blockchain dApps using Solidity, Web3.js, React and AI Tools",
        "Use AI tools like ChatGPT to generate, optimize, and debug smart contract and develop beautiful React frontend",
        "Design secure smart contracts with proper structure, access control, and event handling.",
        "Connect a React frontend to Ethereum smart contracts using Web3.js for real-time interaction."
      ],
      "course_content": {
        "Course Kickoff and Planning": [
          "Introduction to the Course",
          "Explanation of Process Flow"
        ],
        "Smart Contract Development — Fundamentals": [
          "Smart Contract Structure and Remix Platform",
          "Smart Contract access control and core functionality",
          "Smart Contract Add/Edit Doctor Functionality"
        ],
        "Smart Contract Development — Advanced Functionality": [
          "Creating and Managing Treatment Records in Solidity",
          "Linking Doctors and Reports to Treatments in Your Smart Contract",
          "Retrieving Patient Treatments, Doctors, and Reports in Solidity"
        ],
        "Events and Smart Contract Finalization": [
          "Using Solidity Events to Track Treatment Additions",
          "Emitting Events for Doctor Assignments and Report Additions",
          "Compiling, Deploying, and Testing Smart Contracts on Remix"
        ],
        "Transitioning from Backend to Frontend": [
          "Backend Recap & Frontend Kickoff",
          "Using AI to Design the Frontend",
          "Windows Setup Essentials"
        ],
        "Project Setup and Configuration": [
          "Setting Up Hardhat",
          "Pushing Code to GitHub",
          "Tailwind CSS Setup"
        ],
        "Frontend Development with React & AI": [
          "Generating Component Boilerplate with AI",
          "Creating Page Boilerplate",
          "Navigation Setup",
          "Routing Snapshot on GitHub",
          "Building the Homepage"
        ],
        "Building Doctor and Patient Interfaces": [
          "Doctor Form Component",
          "Add Doctor Page UI",
          "Patient Form Component",
          "Add Patient Page UI"
        ],
        "Managing Treatments and User Data": [
          "Treatment & Report Form",
          "Treatment UI & Submission",
          "Treatment Form Breakdown",
          "All Members Page",
          "Patient Details Page",
          "All Treatments Page"
        ],
        "Connecting Frontend to Blockchain": [
          "Ganache & MetaMask Downloading",
          "Connecting Remix, MetaMask & Ganache",
          "Setting Up Web3.js - Part 1",
          "Setting Up Web3.js - Part 2"
        ]
      },
      "requirements": [
        "Basic Solidity syntax needed which can be achieved online or by my previous courses, NO programming skills required."
      ],
      "description": "Curious about blockchain development but don’t know where to start? Or maybe you're a developer looking to supercharge your workflow with AI? This course takes you from idea to deployment — guiding you step-by-step as you build full-stack decentralised applications (dApps) using Solidity, Web3.js, React, IPFS and AI tools like ChatGPT.\nYou'll not only learn how to code but also how to think like a blockchain engineer — designing clean, scalable systems and using modern AI assistants to streamline the development process.\nYou’ll learn how to:\nUnderstand and break down real-world problem statements into technical flows\nDesign smart contract architecture before writing any code\nWrite secure smart contracts using Solidity and proper access control\nUse data structures like mappings and arrays to organize contract data\nUse of IPFS for storing files\nEmit custom events for real-time data tracking and user feedback\nConnect smart contracts to a React frontend using Web3.js\nUse ChatGPT to generate, debug, and optimize frontend code\nBuild, test, and deploy a complete, real-world dApp from scratch\nWhether you're a total beginner exploring blockchain for the first time or an experienced developer looking to integrate AI into your workflow, this course gives you the hands-on skills, tools, and mindset needed to build production-ready decentralised apps with confidence.",
      "target_audience": [
        "This course is designed for anyone interested in building blockchain-based decentralized applications, regardless of their current skill level. Whether you're a complete beginner curious about Web3 or an experienced developer looking to integrate AI tools into your workflow, this course will guide you step by step. Ideal for aspiring blockchain developers, full-stack engineers, freelancers, and tech enthusiasts who want to explore how AI can accelerate smart contract and dApp development using Solidity, Web3.js, and React."
      ]
    },
    {
      "title": "Master CI/CD for Xamarin",
      "url": "https://www.udemy.com/course/continuous-integration-and-continuous-delivery-for-xamarin/",
      "bio": "Learn Continuous Integration and Continuous Deployment / Delivery to increase your employability in 2019 and beyond!",
      "objectives": [
        "Apply complete CI/CD flows in their app development process.",
        "Use GitHub to trigger code checks and app distribution to users.",
        "Use App Center to automate checks and protect important branches.",
        "Leverage App Center to automatically create builds on every merge.",
        "Automate the distribution of a new build to beta testers.",
        "A full list of other features are on this page."
      ],
      "course_content": {
        "DevOps": [
          "Course Structure",
          "What is DevOps",
          "Why use DevOps",
          "What you will accomplish by the end"
        ],
        "Source Control and GitHub": [
          "Source Control And Branch Structure",
          "Initialize Version Control",
          "Committing Changes",
          "Creating Branches",
          "Working with Branches",
          "Creating a GitHub Repo",
          "Pushing to GitHub",
          "Working in Teams",
          "Making Pull Requests",
          "A Simulated CI/CD Rundown"
        ],
        "Intro to App Center": [
          "Intro to App Center",
          "Creating an App Center Account",
          "Connecting App Center",
          "Source Code and GitHub repo",
          "Crashing the Application",
          "Tracking Crashes with App Center",
          "Tracking with Better Context",
          "Running on iOS",
          "Tracking All kinds of Events",
          "Tracking Events with Better Context"
        ],
        "Continuous Integration": [
          "Why use Continuous Integration",
          "Working with Feature Branches",
          "A first CI Build - Android",
          "A first CI Build - iOS",
          "Adding Checks to Pull Requests",
          "Making the Checks work",
          "Using Checks to Protect Branches",
          "A Complete CI Flow"
        ],
        "Continuous Quality": [
          "Prepare Solution for Tests",
          "Installing the App Center CLI",
          "REPL and TroubleShooting",
          "Intro to Continuous Quality",
          "Writing Xamarin.UI Tests",
          "Uploading the iOS Tests",
          "Uploading the Android Tests"
        ],
        "Continuous Delivery": [
          "Intro to Continuous Delivery",
          "Creating an iOS Distribution Group",
          "Creating an Android Distribution Group",
          "Configuring iOS Continuous Delivery",
          "Configuring Android Continuous Delivery",
          "Installing from App Center",
          "Creating a First Manual Store Release",
          "Continuous Delivery to the Play Store",
          "Continuous Delivery to the App Store",
          "Continuous Integration / Continuous Delivery"
        ],
        "Extra Information - Source code, and other stuff": [
          "Source Codes",
          "Bonus Lecture and Information"
        ]
      },
      "requirements": [
        "The course does not require any previous CI/CD or DevOps experience",
        "Some basic Git & GitHub experience is desirable",
        "While this is a CI/CD course, it is oriented to Xamarin students, so some basic Xamarin experience is required."
      ],
      "description": "What you will learn in this course?\nIn this course, you will learn the fundamentals of CI/CD which is short for Continuous Integration/Continuous Delivery and be able to apply these fundamentals in your Xamarin development process.\n\nThe word Deployment is often used in place of Delivery but effectively means the same thing.\n\nThese skills are essential to maximize your career potential in 2019 and beyond, because more and more companies are adopting these development practices requiring new employees or freelancers to be well versed in these concepts.\nWhat is Continuous Integration (CI) ?\nCI is the practice of merging all programmers current working copies to a shared mainline on a regular basis (usually several times a day).\nA developer checks out a working copy of the code base prior to making a change.  Over time as other developers check out and make changes, this checked out working copy of the source code base gets out of date, potentially requiring more and more work by developers to actually  check their completed changes back in to the main repository.\nWithout using CI it can become really difficult to merge all these changes and can lead to it taking more time to  merge changes back into the main source code base than it took to make the the change itself.\nCI seeks to eliminate this problem by making sure all developers integrate early and often with the goal to reduce rework and ultimately save cost and time.  This involves all developers merging their code back into the main repository multiple times a day.\nAn added bonus is that each programmer who is merging changes needs to build and run (and pass) all unit tests which usually run automatically meaning the code base is easier to work with and merge changes into and is potentially more stable as a result.\nWhat is Continuous Delivery or Deployment (CD) ?\nThis extends CI to ensure that new changes to software can be released to clients quicker, but in a more sustainable way.  It takes the advantages of CI from a development perspective (automated testing, on code check-in, etc) allowing the actual code base to be built and new releases to be automatically released to the client, effectively meaning a new version can be deployed to the client by a click of a button.\nCI/CD concepts.\nBy adhering to a CI/CD development process, the code base can be built and released more quickly, and is in a more stable state overall.  These are some of the reasons why more and more companies are adopting a CI/CD development process in 2019 and beyond.\nKey topics in this course.\n1. Continuous Integration\n2. Continuous Delivery\n3. App Center\n4. GitHub Pull Requests\n5. Branch protection\n6. UI Tests\n7. App Diagnostics\n8. App Analytics\nWhat will you learn?\n• Learn how to track errors and crashes in your apps.\n• Learn how to track any event triggered within your apps.\n• Apply complete CI/CD flows in your app development process.\n• Use GitHub to trigger code checks and app distribution to users.\n• Use App Center to automate checks and protect important branches.\n• Leverage App Center to automatically create builds on every merge.\n• Automate the distribution of a new build to beta testers.\n• Automate the distribution of new releases to the Apple and Google app stores.\n• Learn to create UI tests for your Xamarin Forms apps.\n• Focus on the development of features, leave the build and distribution to App Center.\n• Improve teamwork with automatic builds and checks that improve the quality of your merges.\n• Enable product discovery with the help of Analytics in the App Center.\n• Test your app in a wide array of cloud-hosted physical devices.\nDifferences with other CI/CD courses.\nWhile there are other CI/CD courses out there, most of them are too general. This course is completely tailored to Xamarin developers, this way you can immediately start applying what you learn in your app development process. Because of this, the course also covers topics not normally found on other CI/CD courses, such as UI Tests for Xamarin apps.\nWho is the course aimed at?\n\nThe course does not require any previous CI/CD or DevOps experience, although some basic Git & GitHub experience is desirable.\n\nWhile this is a CI/CD course, it is oriented to Xamarin students, so some basic Xamarin experience is required.\nGetting started\nIf you are ready to get started, click on the Enroll or Add to Cart button on this page and start taking your CI/CD skills with\nXamarin to the next level.",
      "target_audience": [
        "Xamarin developers looking to become skilled in the CI/CD process"
      ]
    },
    {
      "title": "Amazing Graph Algorithms : Coding in Java,JavaScript, Python",
      "url": "https://www.udemy.com/course/amazing-graph-algorithms-coding-in-javajavascript-python/",
      "bio": "Graph Data Structure, DFS, BFS, Minimum Spanning Tree, Shortest Path, Network Flow, Strongly Connected Components",
      "objectives": [
        "Graph Algorithms",
        "Programming Algorithms"
      ],
      "course_content": {
        "Understanding Graphs": [
          "Graphs - In Real World",
          "Google's Knowledge Graph",
          "Graphs - Overview",
          "Terminologies",
          "Identification of Problem",
          "Approaching the Problem",
          "Journey : What We Are Going To Cover"
        ],
        "Let's Get Started": [
          "Course Resources"
        ],
        "Graph Traversal Algorithms": [
          "Graph Traversal",
          "Depth First Search Traversal - DFS",
          "DFS - Recursive Java Implementation",
          "DFS - Iterative Java Implementation",
          "DFS - Recursive Javascript Implementation",
          "DFS - Iterative Javascript Implementation",
          "DFS - Recursive Python Implementation",
          "DFS - Complexity Analysis",
          "Breadth First Search Traversal",
          "BFS - Java Implementation",
          "BFS - Javascript Implementation",
          "BFS - Python Implementation",
          "BFS - Complexity Analysis"
        ],
        "Minimum Spanning Tree Algorithms": [
          "What Are Spanning Trees; What is MST?",
          "Prim's Algorithm",
          "Prim's Algorithm - Java Implementation",
          "Prim's Algorithm - Javascript Implementation",
          "Prim's Algorithm - Python Implementation",
          "Kruskal's Algorithm",
          "Union-Find Algorithm",
          "Kruskal's Algorithm - java Implementation",
          "Kruskal's Algorithm - Javascript Implementation",
          "Kruskal's Algorithm - Python Implementation"
        ],
        "Shortest Path Algorithms": [
          "Finding Shortest Path",
          "Dijkstra's Algorithm",
          "Dijkstra's Algorithm - Java Implementation",
          "Dijkstra's Algorithm - Javascript Implementation",
          "Dijkstra's Algorithm - Python Implementation",
          "BellmanFord's Algo",
          "BellmanFord's Algo Live Code Java",
          "BellmanFord's Algo Live Code Javascript",
          "BellmanFord's Algo Live Code Python",
          "Floyd Warshall Algorithm",
          "Floyd-Warshall Algorithm - Java Implementation",
          "Floyd-Warshall Algorithm - Javascript Implementation",
          "Floyd-Warshall Algorithm - Python Implementation",
          "Johnson's Algorithm",
          "Johnson's Algorithm - Java Implementation",
          "Johnson's Algorithm - Javascript Implementation",
          "Johnson's Algorithm - Python Implementation"
        ],
        "Network Flow Algorithms": [
          "What Are Flow Networks?",
          "Ford-Fulkerson Algorithm",
          "Ford-Fulkerson Algorithm - Edmond's Karp Java Implementation",
          "Ford-Fulkerson Algorithm - Edmond's Karp Javascript Implementation",
          "Ford-Fulkerson Algorithm - Edmond's Karp Python Implementation",
          "Max-Flow Min-Cut Theorem"
        ],
        "Strongly Connected Components": [
          "Strongly Connected Components",
          "Tarjan's Algorithm",
          "Tarjan's Algorithm - Java Implementation",
          "Tarjan's Algorithm - Javascript Implementation",
          "Tarjan's Algorithm - Python Implementation",
          "Kosaraju's Algorithm",
          "Kosaraju's Algorithm - Java Implementation",
          "Kosaraju's Algorithm - Javascript Implementation",
          "Kosaraju's Algorithm - Python Implementation"
        ],
        "Others": [
          "Topological Sort : Kahn's Algo",
          "Topological Sort Live Code Java",
          "Topological Sort Live Code Javascript",
          "Topological Sort Live Code Python"
        ],
        "Thank You": [
          "Thank you!"
        ]
      },
      "requirements": [
        "No"
      ],
      "description": "Graphs are Amazing!\nWe will have a lot to cover in this course also the course is coded in Java, JavaScript & Python.\nWhile solving graph algorithms, We may need to visit and process each node present in the graph. And for that, we must know how to traverse the graphs efficiently,\nSo, first, we will cover graph traversal, where we gonna see the 2 types of graph traversals, Depth First Search, and Breadth-first Search.\nThen we will understand Spanning Trees and will see famous algorithms to find minimum cost spanning tree, basically, a minimum cost spanning tree is a tree from the graph connecting all the vertices with single edges each and that all\nOf the lowest cost, so to minimize the cost to connect all the vertices.\nFor example :\nSuppose, you own a telecommunication company\nand you have towers that spread across the state.\nYou want to connect them so that data can be passed from one tower to others.\nConnecting different towers involve different costs, so the problem is how will you minimize the cost. Here, comes the need of using Minimum spanning tree algorithms to find\nThat tree connecting all the towers with edges that have a minimum cost, so that the spanning Tree cost is minimum.\nAfter that, we will look to Shortest Path algorithms, these are useful to find the shortest distance from of a source from all the other vertices (called single-source shortest path)\nor shortest distance of each vertex with all the\nOther vertices, that's called finding all pair shortest path.\nFor example, finding the distance of a city, let's say Istambul to all the other famous cities of turkey.\nOr let's say A person who is planning a trip may need to answer questions such as, “What is the least expensive way to get from Princeton to San Jose?” A person more interested in time than in money may need to know the answer to the question “What is the fastest way to get from Princeton to San Jose?” To answer such questions, we process information about connections (travel routes) between items (towns and cities).\nThen we will move to Flow network problems. These are concerned with the networks or graph, having a flow going through it.\nThere will be problems that ask to maximize the flow across the network or problems that ask to disconnect the source from the destination or sink in minimum cost.\nAfter that we will discuss, algorithms to find strongly connected components in a graph.\nHope you will enjoy the course.\nHappy Learning",
      "target_audience": [
        "Who wants to deep dive into graphs",
        "Want to solve some super complicated graph Algorithms"
      ]
    },
    {
      "title": "How to Make Money at Hackathons: A Short Guide for Beginners",
      "url": "https://www.udemy.com/course/win-at-hackathons/",
      "bio": "Learn Simple Tips to Win Prizes and Get Extra Benefits at Hackathons",
      "objectives": [
        "Understand what hackathons are and the different types you can join",
        "Explore the regular benefits of hackathons, including potential money-making opportunities",
        "Learn how to decide between solo or team participation, choose a team, and pick a unique project idea",
        "Get tips on following hackathon guidelines, staying organized, and creating a compelling presentation",
        "Plus, strategies on how to stand out to the judges!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Hackathons": [
          "Finding and Choosing Hackathons",
          "Monetizing Without Winning",
          "Choosing Your Team and Project",
          "Winning Prizes"
        ],
        "Conclusion": [
          "Conclusion",
          "Blooper"
        ]
      },
      "requirements": [
        "No Experience Required"
      ],
      "description": "Dive into the world of hackathons with this easy-to-follow, comprehensive course. This course is designed to take you from understanding the basics of \"What is a hackathon?\" to mastering strategies for winning exciting prizes and unlocking valuable career opportunities. Whether you're just starting out your research into hackathons or looking to refine your skills, this course will guide you step-by-step through every phase of the hackathon journey, preparing you for success in both competitive and collaborative environments.\nYou’ll learn how to effectively find, participate in, and monetize your innovative ideas or products at hackathons, along with valuable insights and tips drawn from my personal experiences. After each module, I help reinforce what you’ve learned with a recap, ensuring that you're retaining key concepts and applying them effectively.\nAnyone can be a hacker, and whether you want to win your next hackathon, improve your overall experience when you participate, or just expand your knowledge of the tech world, this course will give you the solid foundation, expert advice, and insider knowledge you need to win. Embrace your creativity, sharpen your problem-solving skills, and gain the confidence to take your hackathon experience to the next level!\nSo jump right in and let's get hacking!",
      "target_audience": [
        "Beginner hackathon attendees"
      ]
    },
    {
      "title": "Advanced Data Structures and Algorithms in Python ( DSA )",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-in-python-2/",
      "bio": "Advanced Data Structures and Algorithms in Python Using Python DSA with Python Data Structures DSA Python DSA in Python",
      "objectives": [
        "Understand various data structures and algorithms (DSA) through animations",
        "Get the ability to implement different algorithms in Python",
        "Get the confidence to face programming interviews",
        "Learn theory and implementation of AVL Trees, B Trees, Threaded Binary Trees and Expression Trees",
        "Graph, traversal and shortest path algorithms"
      ],
      "course_content": {},
      "requirements": [
        "Knowledge of Python programming",
        "Knowledge of linked list, stack, queue and binary search trees"
      ],
      "description": "This \"Advanced Data Structures and Algorithms In Python\" course is thoroughly detailed and uses lots of animations to help you visualize the concepts.\nThis \"Advanced Data Structures and Algorithms in Python\" tutorial provides a comprehensive explanation of different types of graph and various graph algorithms. Throughout the course a step by step approach is followed to make you understand different algorithms. Through this course you can build a strong foundation and it will help you to crack Data Structures and Algorithms in Python coding interviews questions and work on projects. Good foundation on Data Structures and Algorithms in Python interview topics helps you to attempt tricky interview questions.\nThis Data Structures and Algorithms using Python course covers following DSA topics in Python with implementation :\nTrees : AVL Tree, Threaded Binary Tree, Expression Tree, B Tree explained and implemented in Python\nGraphs : Adjacency matrix, Adjacency list, Path matrix, Warshall’s Algorithm, Traversal, Breadth First Search (BFS), Depth First Search (DFS),\nDijkstra’s Shortest Path Algorithm, Prim's Algorithm and Kruskal's Algorithm for minimum spanning tree\nHere are the DSA topics in course-\nAVL Tree\nThreaded Binary Tree\nExpression Tree\nB Tree\nGraph\nTraversal in Graph\nShortest Paths in Graph\nMinimum Spanning Tree of a Graph\nThe Data Structures and Algorithms with Python course is broken down into easy to assimilate short lectures and complete working programs are shown for each concept that is explained. The algorithms and examples are explained with figures and animations to simplify the learning of this complex topic.  You will see code implementation of different data structures in Python and algorithms are explained in step-wise manner.\nIn this Data Structures and Algorithms through Python course, Python programs are used for implementing various concepts, but you can easily code them in any other programming language like Java, C++, C#.\nThis \"Data Structures and Algorithms In Python\" online course on udemy will help software developers to refresh the concepts studied in Data Structures and Algorithms In Python books / pdf and also to students learning from referred books / pdf.\n\n\nSo what are you waiting for, click on Buy button to enroll now and start learning.",
      "target_audience": [
        "Professional Programmers wanting to write effective code",
        "Programmers looking for jobs",
        "Computer Science students having Data Structures as part of their curriculum",
        "Non Computer science students wanting to enter IT industry"
      ]
    },
    {
      "title": "Electron Masterclass: Build Desktop Apps with JavaScript",
      "url": "https://www.udemy.com/course/master-electron-build-desktop-applications-using-javascript/",
      "bio": "The Ultimate Electron Course for Cross Platform Desktop Applications Development using HTML, JavaScript & CSS",
      "objectives": [
        "Development and launching of cross-platform desktop applications using Electron",
        "Mastering Electron from beginning to advanced topics",
        "Integrate UI frameworks like React with Electron",
        "Developing automated tests for Electron applications using Playwright",
        "Building and code signing the project and making it ready for production"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Electron ?",
          "Environment Setup",
          "Course Source Code Repository"
        ],
        "Electron Basics": [
          "Section Introduction",
          "Quick Information for a Better Course Experience",
          "First Project Source Code Reporitory",
          "Setting Up the Project",
          "Implementing the Main Process",
          "Implementing the Renderer Process",
          "Using the Electron Quick Starter Project",
          "Understanding Electron's Project Structure",
          "Understanding the Main Process File",
          "Writing the First Code Change",
          "Auto Reload Code Changes using \"nodemon\"",
          "Source Code Repository for the Exercises",
          "Section Summary",
          "Useful Links and Resources",
          "Exercise 1: Creating and Configuring a Project"
        ],
        "Windows Creation using the \"BrowserWindow\" Class": [
          "Section Introduction",
          "Basic Windows Properties",
          "Setting the Window Title",
          "Exercise 2: Configuring the Main Window",
          "Creating Frameless Windows",
          "Making the Application Window Draggable",
          "Exercise 3: Using a Framless Window",
          "Creating Transparent Windows",
          "Creating Children Windows",
          "Understanding the \"BrowserWindow\" Events",
          "Working with the \"BrowserWindow\" Methods",
          "Exercise 4: Displaying a Child Window",
          "Window Positioning and Resizing",
          "Modal Windows",
          "Section Summary",
          "Useful Links and Resources",
          "BrowserWindow"
        ],
        "Project: Hashing App": [
          "Project Source Code",
          "App Overview",
          "Creating the App UI",
          "Styling the App",
          "Implementing the App Functionality",
          "Building the App"
        ],
        "Handling Windows Events": [
          "Introduction to BrowserWindow Events",
          "The 'ready-to-show' Event",
          "The 'close' and 'closed' Events",
          "The 'focus' and 'blur' Events",
          "The 'resize' and 'move' Events",
          "The 'unresponsive' and 'responsive' Events",
          "Useful Links and Resources",
          "BrowserWindow Events"
        ],
        "Application Lifecycle in Electron": [
          "Introduction to the Electron Applications Lifecycle",
          "The \"app\" Module and Its Events",
          "Handling the Application Events",
          "Exercise 10: Creating a Simple Session Tracker App",
          "Section Summary",
          "Useful Links and Resources",
          "Applications Lifecycle in Electron"
        ],
        "Menus in Electron": [
          "Introduction to Electron’s Menu System",
          "Creating Menus using the \"Menu\" Class",
          "Creating Menu Items using the \"MenuItem\" Class",
          "Working with the \"Menu\" Class Static Methods",
          "Building a Basic Application Menu",
          "Working with the \"Menu\" Class Instance Methods",
          "Adding Keyboard Shortcuts (Accelerators)",
          "Useful Links and Resources",
          "Menus"
        ],
        "The IPC Module": [
          "Introduction to the IPC",
          "Sending Messages from the Main Process using the \"ipcMain\" Module",
          "Sending Messages from the Renderer using the \"ipcRenderer\" Module",
          "Fire-and-Forget Messaging with IPC",
          "Request/Response Messaging with IPC",
          "IPC Synchronous Communication - The Old Way (Not Recommended but Nice to Learn)",
          "Understanding the \"event\" Object",
          "IPC Asynchronous Communication",
          "Exercise 5: Using IPC to Create Children Windows",
          "Useful Links and Resources",
          "IPC"
        ],
        "Project: Pomodoro timer": [
          "Project Source Code",
          "App Overview",
          "Creating the UI",
          "Adding the Menu",
          "Implementing the Main Process",
          "Implementing the Renderer Process"
        ],
        "Main Process Modules": [
          "Working with the \"clipboard\" Module",
          "Working with Chromium Themes using \"nativeTheme\"",
          "Making HTTP/HTTPS Requests with the \"net\" Module",
          "Useful Links and Resources"
        ]
      },
      "requirements": [
        "Basic web development knowledge",
        "Angular and React knowledge is an advantage but not required"
      ],
      "description": "Do you want to build cross-platform desktop applications using JavaScript, HTML and CSS?  This is the right course for you!\nWelcome to the most complete and up-to-date Electron course on Udemy!\n\n\nIn this course, we will dive deep into Electron development and cover everything from the basics to advanced topics — all through hands-on projects, real-world examples, and practical exercises.\n\n\nAfter completing this course you will have the knowledge and practical skills required to start professionally working on building cross-platform desktop applications using Electron.\n\n\nThis complete Electron course is designed for web developers who want to build desktop applications and games using their existing JavaScript, HTML, and CSS skills, or for Electron developers who want to improve and deepen their understanding of the platform.\n\n\nIn this course, you'll learn a wide range of topics including:\nElectron basics and how it works\nUnderstanding the main and the renderer processes in Electron and how they communicate via IPC\nElectron advanced topics and features\nData  storage in Electron\nHow to build and sign the code\nHow to release Electron applications and enable automatic version updates\nIntegrating Electron with React.js and Angular.js\nTesting via Playwright\nConnecting to databases using Firebase\nGames development in Electron using Phaser.js\n\n\nAnd here are the topics in more details:\nWhat is Electron and how it works\nSetting up the development environment\nElectron app structure and the main process\nCreating and managing BrowserWindows\nUsing Nodemon and live reload\nWorking with application menus and keyboard shortcuts\nCreating tray-based desktop applications\nInter-process communication (IPC)\nDialogs and file system integration\nContext menus and shell integration\nUsing preload scripts securely\nDebugging Electron applications\nWriting end-to-end tests using Playwright\nPackaging and releasing Electrons apps\nIntegrating React and Vite with Electron using Vite\nIntegrating Electron with Angular.js\nPlaying Music in Electron: Integrating with Amplitue.js\nConnecting with databases and Firebase integration\nGame Development with Electron: Integrating with Phaser.js\nThroughout the course, you’ll build hands-on projects like:\nA Hashing Utility\nA Pomodoro Timer\nA Code Editor\nAn Comodity-Prices Application\nA Spaceware Game\nA Chat Application\nThese projects are designed to reinforce your learning and give you real, portfolio-ready desktop applications.\nI’m confident that you will love this course, and that you’ll become a professional Electron developer, or significantly improve your current skills if you already have experience.\n\n\nSo join me on this journey and master Electron development today!",
      "target_audience": [
        "Web developers who want to learn how to develop native cross-platform applications",
        "Anyone with basic web knowledge who wants to develop native cross-platform applications"
      ]
    },
    {
      "title": "Solid Principles for Clean Code Programming & Architecture",
      "url": "https://www.udemy.com/course/solid-principles-for-clean-code-programming-design-architecture/",
      "bio": "Master SOLID Principles for Clean Code Programming and Software Design and Architecture",
      "objectives": [
        "Understanding and implementation of all five SOLID principles: Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency In",
        "Identification of design smells and how to fix them using SOLID principles",
        "Practical implementation of SOLID principles in object-oriented programming, specifically using C#",
        "Understanding of related concepts such as cohesion, coupling, and decomposition in software design",
        "Preparation for interviews and real-world application of SOLID principles in software development projects",
        "Application of SOLID principles in a real-life case study of an Employee Management System (EMS) portal"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to SOLID Principles Course",
          "Why should you Learn SOLID Principles and Why this Course",
          "What is SOLID Principles",
          "Design Smells and Signs of Bad Design in Software Design and Architecture"
        ],
        "Case Study for SOLID Principles Illustrations": [
          "Solid Principle Case Study Overview",
          "Case Study Code Setup"
        ],
        "Single Responsibility Principle SRP | SOLID Principles": [
          "Single Responsibility Principle - SRP",
          "Defining Single Responsibility or Single Reason to Change",
          "Case Study Changes for Defining Responsbility",
          "Information Expert Principle - GRASP",
          "Decomposition",
          "Cohesion",
          "Coupling",
          "SRP Final Checklist for Implementation",
          "SRP QUIZ"
        ],
        "Open Closed Principle OCP | SOLID principles": [
          "Open Closed Principle OCP | SOLID principles",
          "OCP Checklist",
          "OCP Quiz"
        ],
        "Liskov Substitution Principle LSP | SOLID principles": [
          "Liskov Substitution Principle LSP",
          "LSP in Real Life",
          "LSP Checklist",
          "LSP Quiz"
        ],
        "Interface Segregation Principle ISP | SOLID principles": [
          "Interfaces and Abstraction Concepts",
          "Implement Abstraction using Interfaces Part-2",
          "Interface Segregation Principle ISP",
          "ISP Checklist for implementation",
          "ISP QUIZ"
        ],
        "Dependency Inversion Principle DIP | SOLID principles": [
          "Dependency Inversion Principle DIP",
          "Dependency Injection DI",
          "Inversion of Control IOC",
          "IOC-Case Study Changes",
          "DIP Implementation Checklist",
          "DIP QUIZ"
        ],
        "Common Software Application Design and Architectural Principles": [
          "DRY Principle",
          "KISS Keep it Simple Stupid Principle",
          "YAGNI - You ain’t gonna need it",
          "Opportunity Cost Principle",
          "Occam’s Razor Principle",
          "Principle Of Least Astonishment",
          "Avoid Premature Optimization",
          "Rough Design Up Front - RDUF",
          "Single Level of Abstraction Principle (SLAP)"
        ],
        "Conclusion of SOLID principles Course": [
          "Summary of Solid Principles",
          "Interview Questions Solid Principle",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic Programming experience is required"
      ],
      "description": "Master SOLID Principles for Clean Code and Software Architecture\n\nIn this course, you will master the SOLID principles of software design and software architecture to write clean code in C#. Designed for both beginners and experienced developers, this course covers the SOLID programming principles essential for building scalable, maintainable, and robust software.\n\nWhat You'll Learn:\nSOLID Design Principles: Learn how the SOLID principles, originally introduced by Robert Martin in Agile Software Development: Principles, Patterns, and Practices, shape the foundation of modern software architecture.\nReal-World Application: See how to apply SOLID principles in C#, Java, and other object-oriented programming languages through practical examples and real-world case studies.\nImportance of SOLID: Understand why SOLID programming principles are critical for creating flexible, scalable, and clean code.\nApplying SOLID Principles: Learn step-by-step how to implement SOLID principles in real-life projects to ensure your software architecture is clean, modular, and future-proof.\nTopics Covered:\nSingle Responsibility Principle (SRP)\nWhat is SRP in OOP languages like C# and Java\nWhy SRP is a fundamental SOLID principle in software design\nHow to implement SRP to create more focused and maintainable classes\nOpen-Closed Principle (OCP)\nUnderstanding OCP in languages like C# and Java\nHow OCP supports extensible and adaptable software architecture\nPractical examples of applying OCP in real-world scenarios\nLiskov Substitution Principle (LSP)\nWhat is LSP in OOP languages like C# and Java\nWhy LSP is crucial for flexible and reliable code\nHow to ensure LSP compliance in your codebase\nInterface Segregation Principle (ISP)\nThe role of ISP in designing lean and efficient interfaces\nWhy ISP is important for modular software architecture\nReal-world examples of implementing ISP\nDependency Inversion Principle (DIP)\nWhat is DIP and how it enhances your software architecture\nWhy DIP is a key component of SOLID programming principles\nHow to use DIP in your projects for better modularity and decoupling\nDependency Injection (DI) and Inversion of Control (IOC)\nImplementing Dependency Injection (DI) with IoC containers like Unity\nUnderstanding the difference between DI, DIP, and IOC\nHow to use DI to improve your software’s flexibility\nBeyond SOLID:\nIn addition to the SOLID design principles, we’ll also cover other important programming concepts such as:\nDRY (Don’t Repeat Yourself)\nKISS (Keep It Simple, Stupid)\nGRASP (General Responsibility Assignment Software Patterns)\nYAGNI (You Aren’t Gonna Need It)\nOpportunity Cost Principle\nBig Design Up Front & Rough Design Up Front\nSingle Source of Truth\nPrinciple of Least Astonishment\nHands-On Case Study:\nYou will put the SOLID principles into practice by building an Employee Management Portal. This real-world case study will guide you through implementing each SOLID principle as part of a complete software architecture. Even if you’re not familiar with C#, these SOLID programming principles apply across multiple languages like Java, JavaScript, Python, and more.\nBy the end of this course, you’ll have a solid understanding of the SOLID principles, enabling you to write clean code and create robust software architecture. Plus, we’ll prepare you for common interview questions on SOLID principles, giving you the skills needed to succeed in software development roles.",
      "target_audience": [
        "Software developers at all career stages, from beginners to experienced professionals looking to enhance their design skills",
        "Individuals about to start their journey in the software industry who want to learn best practices from the beginning",
        "Current software industry professionals aiming to scale up and advance their careers",
        "Developers seeking to improve their ability to design and architect quality, agile, and maintainable software",
        "Programmers looking to prepare for technical interviews where SOLID principles are often discussed"
      ]
    },
    {
      "title": "Apache Kafka Guru - Zero to Hero in Minutes (Mac/Windows)",
      "url": "https://www.udemy.com/course/kafka-tutorial/",
      "bio": "Master Apache Kafka Core Concepts, Build Real World Kafka Producers & Consumers, Integrate with Apache Spark & much more",
      "objectives": [
        "Learn core concepts about Apache Kafka & how it works",
        "Develop your own custom Kafka producers and consumers",
        "Build real world like data pipelines to move data from one system to another using real time processing"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Who we are - DataShark Academy"
        ],
        "Apache Kafka & It's Features": [
          "What is Apache Kafka",
          "High Levels of Scalability",
          "In-built Fault Tolerance",
          "Apache Kafka is Popular"
        ],
        "Why we need Apache Kafka": [
          "Why need Apache Kafka",
          "Decoupling of Systems Using Kafka"
        ],
        "Let's Review Kafka Architecture": [
          "Kafka Architecture",
          "Kafka @ Netflix"
        ],
        "Anatomy of Apache Kafka": [
          "What is Kafka Broker",
          "What is Kafka Topic",
          "Learn about Kafka Partitions",
          "Learn about Kafka Offsets",
          "Topic Replication in Kafka",
          "Who is the Leader",
          "Let's talk about Zookeeper",
          "Kafka Producers",
          "Kafka Consumers",
          "Putting Everything Together"
        ],
        "Design Considerations For Kafka Applications": [
          "Designing Apache Kafka Applications"
        ],
        "Expert Level Hands-on Practicals": [
          "Setup Apache Kafka on Local Computer (Mac/Linux Users)",
          "Setup Apache Kafka on Local Computer (Windows PC Users)",
          "How to connect to HDP Sandbox terminal (Windows PC users)",
          "Let's Fire Up a Local Cluster (Windows PC Users)",
          "It's time to Create Kafka Topics",
          "What Kafka Topics Have You Got",
          "Peak into Details of a Kafka Topic",
          "How to Delete a Kafka Topic",
          "Running a Kafka Producer",
          "Running a Kafka Consumer",
          "What to do when Producer or Consumer Goes Down"
        ],
        "Creating Your Own Kafka Producers & Consumers": [
          "Create a Custom Kafka Producer (Java Code)",
          "Create a Custom Kafka Consumer (Java Code)"
        ],
        "Integrate Apache Kafka with Spark Streaming": [
          "Create a Spark Streaming Application aka Consumer (Scala Code)"
        ],
        "Bonus Lectures": [
          "Trick#1 - Generate Data for Your Kafka Producer",
          "Trick#2 - Simulate a Real Time Streaming Data Source For Your Kafka Cluster"
        ]
      },
      "requirements": [
        "Passion to learn something new and awesome",
        "An internet connection & a computer"
      ],
      "description": "Learn Apache Kafka with plenty of hands on practicals !!!\nJust in few minutes you will be on the route to be an Apache Kafka hero. You will learn in this course how 1000s of companies have built their business solutions (ex. Netflix) around Apache Kafka.\nThis comprehensive Kafka tutorial starts with building foundation about all major concepts in Apache Kafka. This part of the course is vital for understanding how Kafka really works. This section will help you with hands-on exercises later in this course.\nIn the later part of this Kafka tutorial, we will have lots of hands-on exercises covering from basic to advanced topics of Kafka. You will learn how to set up Apache Kafka on your personal computer (Mac/Linux or Windows PC). Then create Kafka topics (where actual data is stored inside Kafka) & perform various operations on your topics. Later you will setup Kafka producers and Kafka consumers to send and receive data.\nUnder more advance topics you will learn how to create your own Kafka Producers and Kafka Consumers.\n\n\nWHY APACHE KAFKA\nApache Kafka is one of the most promising data processing system available today. Apache Kafka is an open source distributed streaming platform which can handle 100s of billions of events in a day.\nIt is giving tough competition to other streaming applications such as Apache Spark & Flink.\nApache Kafka is easy to setup and learn. It enables you to connect multiple systems to share the data in 100s of different possible combinations. For instance, using Apache Kafka, you can connect a legacy Relation Database System  (RDBMS) with Apache Hadoop's Distributed File System, or with ElasticSearch in ELK stack. You can also capture data from one system and send it to AWS S3 or AWS Lambda functions. The possibilities are endless.\nThat's why every data engineer and data architect must learn Apache Kafka today.\n\n\nABOUT THIS COURSE\nIn this course you will learn all core concepts in Apache Kafka followed by hands-on practicals to dig deeper into the concepts and see how Kafka really work first hand. Apart from this, you will also learn how to integrate Apache Kafka with Spark Streaming and build a real world like data processing system. Once you complete this exercise, it will enable you to work on any company's applications.\nYou will also learn how to create your own custom Kafka Producers and Kafka Consumers using Java code in easy to understand manner. These exercises will greatly boost your confidence to build any custom producers and consumers for real world problems.\nHere are some of topics that we will cover in this course:\n\n\nSection 1 – APACHE KAFKA & IT’S FEATURES\nIn this section of the course, we will start with building the knowledge about various key concepts of Apache Kafka. This will be important section, so make sure you watch all videos before moving to the next section of the course. Here are some of the chapters covered in this section:\nWhat is Apache Kafka?\nHow Apache Kafka provides High Level of Scalability?\nKafka’s In-built Fault Tolerance\nApache Kafka is damn Popular\n\n\nSection 2 – WHY APACHE KAFKA?\nIn this part of the course, we will discuss why we really need Apache Kafka and what kind of real world problem does it solve? Here are some of the chapters covered in this section:\nWhy we need Apache Kafka?\nDecoupling of Systems\n\n\nSection 3 – APACHE KAFKA ARCHITECTURE\nIt’s time to dig deeper into how Apache Kafka really works and we will do this by understanding Kafka’s architecture.\nApache Kafka Architecture\nHow Netflix is using Kafka\n\n\nSection 4 – ANATOMY OF APACHE KAFKA\nIn this section of the course, we will look at various components that make Apache Kafka what it is today. This is an important section of this course. It will help you really build the core understanding about each individual component of a Kafka application.\nWhat is Kafka Broker\nKafka Topic Explained\nLearn about Kafka Topic Partitions\nWhat are Kafka Offsets\nHow Replication Works in Kafka\nWho is the leader\nLet’s talk about Zookeeper\nKafka Producers\nKafka Consumers\nPutting everything together\n\n\nSection 5 – DESIGNING APACHE KAFKA APPLICATIONS\nIn this section, we will talk about what to consider while designing Apache Kafka applications.\nDesigning Considerations\n\n\nSection 6 – EXPERT LEVEL HANDS-ON\nLet’s use the knowledge and get our hands dirty by working on some real exercises.\nSetup Apache Kafka on Local Computer (Mac & Linux users)\nSetup Apache Kafka on Local Computer (Windows PC users)\nHow to connect to HDP Sandbox terminal (Windows PC users)\nLet’s fire up a local cluster (Windows PC users)\nIt’s time to create some Kafka Topics\nWhat Kafka topics you got?\nPeak inside a Kafka topic\nHow to delete a Kafka topic\nRunning a Kafka Producer\nRunning a Kafka Consumer\nWhat to do when a Kafka Producer or Kafka Consumer goes down in production\n\n\nSection 7 – ADVANCE LEVEL HANDS-ON\nIn this part of the course, you will work on more advanced subjects.\nHow to create your own Kafka Producer (Java Code)\nHow to create your own Kafka Consumer (Java Code)\nIntegrating Kafka with Spark Streaming (Scala Code)\nRunning your Spark Data Aggregator\n\n\nSection 8 – BONUS LECTURES\nTrick #1 – Generate data for your Kafka Console Producer\nTrick #2 – Simulate a Real Time Streaming Data Source\n\n\nYOUR INSTRUCTORS\nThis course is taught by professionals with extensive experience in handling big data applications for top fortune 100 companies of the world.\nYour instructors have managed to create data pipelines for extracting, transforming & processing over 100's of Terabytes of data in a day for their clients providing data analytics for user services.\nAt DataShark Academy, we provide accelerated learning programs taught by professionals with years of expertise in Big Data technologies and working with 10s of clients.\nYou will learn plenty using our unique approach that focuses on maximum results in the shortest possible time.",
      "target_audience": [
        "A developer who wants to build applications to move data from one end to another.",
        "Big data architect who wants to design giant data processing applications"
      ]
    },
    {
      "title": "How to Create your Own Altcoin | Bitcoin hard fork",
      "url": "https://www.udemy.com/course/how-to-create-your-own-altcoin-bitcoin-hard-fork-y/",
      "bio": "Creating a Bitcoin fork: A practical course",
      "objectives": [
        "Creating a Bitcoin-based altcoin;",
        "Better understanding of the inner mechanics of Bitcoin;",
        "Finding new genesis blocks;",
        "Changing consensus and network parameters;",
        "Setting up your own network;"
      ],
      "course_content": {
        "Введение": [
          "Introduction",
          "Preparation",
          "Renaming the client",
          "Modifying Network Parameters",
          "Mining new genesis blocks",
          "Mining",
          "Changing the logo and graphics"
        ]
      },
      "requirements": [
        "Programming skills are advantageous, but not necessary",
        "Any operating system"
      ],
      "description": "The course will let you create your own cryptocurrency.\nIf you have already started learning about blockchain development and cryptocurrencies, or are simply familiar with the subject and want to practice, this course is exactly what you need.\n\n\nThere were significant changes in the IT sector in the last few years.\nThe advance of blockchain technology and cryptocurrencies has created a demand for narrow-focus specialized developers. However, it is not easy to find a course that would include a practical instruction.\n\n\nOur course is a step-by-step guide to creating a cryptocurrency fork.\nOur video and instructions will help you create your own bitcoin-based altcoin.\n\n\nWe are a team of experienced IT developers and we are glad to help you take the first step to creating your own cryptocurrency fork.\nWe will teach you how to mine a new genesis block and how to alter the parameters of the network and the consensus.\n\n\nIf you have any questions after completing our course, you can always contact us for a detailed consultation.",
      "target_audience": [
        "Anyone who wants to know more about cryptocurrencies and the blockchain technology",
        "Anyone who wants to create their own cryptocurrency"
      ]
    },
    {
      "title": "Blockchain: Practical dApps Development using Solidity",
      "url": "https://www.udemy.com/course/blockchain-practical-dapps-development-using-solidity/",
      "bio": "Using Ethereum, Solidity, and Smart Contracts to build dApss with Web3, React and IPFS",
      "objectives": [
        "Ethereum Blockchain Techology",
        "Solidity Programming Language",
        "Development Tools for dApps",
        "Write Smart Contracts for ERC20, ERC721, ERC1155, and Escrow Services",
        "Smart Contract Security Issues and Solutions",
        "Write front-end Web3 application to interact with Smart Contracts and IPFS"
      ],
      "course_content": {
        "Blockchain Technology": [
          "Introduction",
          "Blockchain - What? How? Why?",
          "Bitcoin - Decentralized Money",
          "Ethereum and dApps"
        ],
        "dApps Development Tools": [
          "dApps Development Tools - Introduction",
          "Remix - IDE (Integrated Development Tool) for Solidity",
          "Dev Tools - Ganache and MetaMask",
          "Dev Tools - Example of Coding, Compilation, Testing",
          "DevTools: Web3, Infura and Nodejs to Access Ethereum Network",
          "Dev Tools: Truffle Framework and Testing Example"
        ],
        "Smart Contract and Solidity Programming Language": [
          "The Concept of Smart Contract",
          "Smart Contract: An Example Using A Vending Machine",
          "Solidity - an Introduction and Data Types",
          "Solidity - Data Types and Usage Examples",
          "Solidity - Function and Usage Example",
          "Solidity: Functions, Events, Access Control",
          "Solidity - Inheritance, Payment Functions, Access Control and Event",
          "Solidity: Abstract Contract, Inheritance, and Interface"
        ],
        "Ethereum Token Standards - Introduction": [
          "Introduction to Ethereum Token Standards"
        ],
        "ERC20 Token Standard Practical Coding Sessions": [
          "ERC20 Coding Demo 1",
          "ERC20 Demo 2",
          "ERC20 Demo 3",
          "ERC20 Demo 4A",
          "ERC20 Demo 4B",
          "ERC20 Demo 5",
          "ERC20 Demo 6",
          "ERC20 Demo 7 Nodejs",
          "ERC20 Demo 7 Web3",
          "ERC20 Demo 8",
          "ERC20 Demo 9",
          "ERC20 Demo 10",
          "ERC20 Demo 11",
          "ERC20 Demo 12"
        ],
        "ERC721 NFT Token Standard": [
          "ERC721 NFT 01",
          "ERC721 NFT 02 Smart Contract",
          "ERC721 NFT 03 Web 3 IPFS",
          "ERC721 NFT 04 OpenSea Integration"
        ],
        "ERC1155 Multi Token Standard": [
          "ERC1155 Multi Token Smart Contract"
        ],
        "Smart Contract Security": [
          "Reentrancy Attack",
          "SEC_02 Solution to Reentrancy Attack",
          "Security Using Escrow Service Contract",
          "Escrow Service Contract Testing"
        ],
        "Summary": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Basic programming knowledge will be helpful."
      ],
      "description": "This course is designed for anyone new to Blockchain technology and Solidity programming. You will learn and use Solidity to write Smart Contract and deploy it on Ethereum as a Decentralized application - dApps.\nDApp is a new trend of writing programs which is able to enforce the contract based on rules, logic and events; and execute automatically  by transferring Ether payment based on those conditions.\nDApp do not require intermediaries like banks or institutions as it is able to validate, authorize and settle transactions and record them on the immutable Blockchain.  It's essentially a 'Trust Machine' where transaction is open, verifiable and permanent on the blockchain.\nBlockchain is the most promising technology of the future since the invention of the Internet.\nWhat you will learn in this course:\nEthereum Blockchain Technology\nSolidity Programming Language\nDevelopment Tools for dApps\nWrite Smart Contracts for ERC20, ERC721, ERC1155, and Escrow Services\nSmart Contract Security Issues and Solutions\nWrite front-end Web3 application to interact with Smart Contracts and IPFS\nThe Blockchain technology that we are learning in this course was actually inspired by the innovative and successful implementation of Bitcoin system.\nBitcoin was invented by Satoshi Nakamoto in his / her paper titled \"Bitcoin: A Peer-to-Peer Electronic Cash System“.   ( 2009 )   Bitcoin is both a digital currency and direct peer-to-peer payment system.   (i.e. no banks or governments involved in the transfer)\nInterestingly, the word 'Blockchain' was not mentioned in the white paper.  It was later discovered by developers and communities that this Bitcoin is running on a new technology (we call it Blockchain) which solved the 'Double Spending' problem where many earlier electronic cash proposal failed.\nThe Bitcoin Blockchain proposed and implemented by Nakamoto essentially fuse together the following technologies which were known at that time:\n\n\nCryptographic hash function,\nProof-of-work consensus protocol,\nDecentralized Network Architecture\n\n\nThe ideas and innovation was quite ingenious. Together with the participation of the Miners in the system, every block is inspected and validated and Miners compete to have the right to add the new Block by solving a cryptographic puzzle first.\nThe Miners who first solved the puzzle will broadcast to the Peers and a 'Proof-of-Work\" is demonstrated and verified by other Miners. The Miner who solved the puzzle got the right to add the new Block, receive Ether reward, and the process continue on.\nSo, every attempt by a malicious attacker to the Bitcoin network (ie. essentially attempting to re-write the transaction log) will need to compete with the entire network of Validators.  It has been shown that it is very difficult to cheat or bring down the Bitcoin network.\n\n\nWith the success of this innovative Blockchain technology, the developers and corporations started to evaluate whether we can use Blockchain to decentralized other assets beside money.\nAssets such as property title, certification, voting system, supply-chain system, artworks, health records, etc., becomes feasible as each of the asset requires recording system (i.e. a public Distributed Ledger System)\nThe idea of a trusted DLS where transactions are verified by the peer nodes continuously through cryptographic hash keys protection, and decentralized network architecture with no single point of failure - is an attractive proposition for new decentralized applications (dApps).\n\n\nHowever, the Bitcoin blockchain has inherent limitation to be used for other more complex application as was discovered by Vitalik Buterin.  Bitcoin system is not a 'Turing Complete' machine.  (ie. you can write simple scripts on Bitcoin blockchain but it is limited to transfer of Bitcoin and not able to implement more complex applications )\n\n\nIn 2013/2014, Vitalik proposed and implemented Ethereum - a decentralized, open-source blockchain system with Smart Contract functionality.\nThe proposal is to build an EVM (Ethereum Virtual Machine) - a Turing Complete machine - that will run on each Node / Client computer on the network.   And Smart Contracts are just programs written in Solidity - a programming language that target the EVM for deployment and execution.\n\n\nWith Ethereum blockchain system, developer can design Smart Contract, compile it, and deploy on the Ethereum network.  This is quite an amazing innovation.  The Ethereum blockchain thus become a Global, Open, Super Computer -where Smart Contract programs can be deployed and executed for various kind of decentralized applications.\nWe will be learning Solidity programming language for Smart Contracts development and examine the language, examples and application in detail during the course.\nIn short, Ethereum is a programmable Blockchain.  A platform for running Smart Contracts (beside the ability to send / receive the native crypto currency Ether)\n\n\nWe will learn a range of Development Tools for writing Smart Contracts, compilation, deployment and testing in the course.\n\n\nIn a series of practical sessions, we will look at ERC20, ERC721 and ERC1155 as examples of industrial standard contracts and write our own tokens using those standards.\nAs Ethereum blockchain has a native crytocurrency (ETH Ether), the transfer and exchange of money is integrated with the Solidity programming code.   Hence, it is possible to automate agreements and execute them based on verified events and rules of the contract to send monry (i.e. Ether) directly to each other - thereby eliminating the intermediaries (ie. Banks, Insurance company,   (i.e. noteL  a Smart Contract can hold Ether values as well beside EOA (Externally Owned Account) by users.\nThe possibilities and use cases of Smart Contracts are just endless and we are limited only my our imagination.\nWith the possibility of financial transactions that can be executed automatically by Smart Contracts - it opens up the risks of malicious Hackers to exploit errors or bugs in a Smart Contract.    History had shown incidents of cybercrime where millions were stolen from Smart Contracts / Account Holders.\n\n\nTherefore, every Smart Contract developer must have a good grounding on Smart Contract Security and know how to write code to protect the Owner and Contract itself.  We will look at the classic attack of Smart Contract in the last session and how to overcome it.\n\n\nBenefits to you for learning this course:\nGain knowledge and skills of Blockchain technology and dApps development\nPrepare yourself for many high-demand job opportunities in Blockchain technology\nKick-start your opportunities to launch Start-up projects using Blockchain and dApps\nWhat's the difference of this course with other courses on Blockchain:\nThis course is designed with total beginner in mind and simplify complex topics\nWe first cover the fundamental concepts of Blockchain and related topics before diving into coding\nWe avoid confusion and courses which use outdated tools\nLearn by coding is the key to go in depth into the technology\nCome, join us today!\nYours faithfully,\nAbel Choy,   Software Engineer / Lecture in Computer Science",
      "target_audience": [
        "Anyone who wants to learn dApps development and Blockchain technology"
      ]
    },
    {
      "title": "Writing Enterprise Level PHP Code",
      "url": "https://www.udemy.com/course/enterprise-php/",
      "bio": "Are you creating more bugs than you’re fixing? Learn how to write HQ maintainable software matching latest standards!",
      "objectives": [
        "[CODE REVIEW] Work in a team for companies where applying best practices is a requirement.",
        "[CODE REVIEW] Filter out constructive feedback received by your teammates during code reviews and be able to apply it.",
        "[CODE REVIEW] Defend your code decisions in discussions by providing technical arguments and explaining benefits of your solutions.",
        "[BEST PRACTICES] Apply industry standard code practices.",
        "[BEST PRACTICES] Write clean, consistent code you will be proud of.",
        "[BEST PRACTICES] Refactor existing code like an experienced developer.",
        "[BEST PRACTICES] Build applications that are easy to debug, maintain and scale.",
        "[DESIGN PATTERNS] Solve tricky business requirements using the most commonly used design patterns.",
        "[OPERATIONS] Efficiently use GIT in the same way companies like Facebook, trivago do.",
        "[OPERATIONS] Use Docker to virtualise your PHP and MySQL environment.",
        "[ARCHITECTURE] Visualise architecture of any complex system.",
        "[ARCHITECTURE] Design even advanced asynchronous communication between components.",
        "[CAREER] Provide a repository to future recruiters demonstrating your architecture and programming skills.",
        "[BONUS] You will get access to further course content, yet to come!"
      ],
      "course_content": {
        "Welcome!": [
          "Meet the instructor! (skip if seen the promo video)"
        ],
        "Daily clean code": [
          "Coding standards",
          "Installing CodeSniffer",
          "Clean coding standards violations with CodeSniffer",
          "Configuring CodeSniffer for real time analysis in PhpStorm",
          "Enterprise level GIT workflow",
          "Refactoring: Naming in nutshell",
          "Refactoring: Designing Scope Introduction",
          "Refactoring: Designing Scope 101",
          "Refactoring: Why Setters are evil and benefits of encapsulation"
        ],
        "Refactoring using S.O.L.I.D OOP principles": [
          "Introduction",
          "Single Responsibility Principle",
          "Open-closed Principle",
          "Liskov Substitution Principle",
          "Dependency Inversion Principle",
          "Interface Segregation Principle",
          "Quiz"
        ],
        "Building real Symfony project using Design Patterns": [
          "What are design patterns?",
          "How to choose the right design pattern?",
          "Installing Symfony 3 application",
          "Installing MySQL using Docker",
          "1. Design Pattern: Simple Factory",
          "2. Design Pattern: Builder",
          "3. Design Pattern: Adapter",
          "Summary",
          "Quiz"
        ],
        "Designing practical and professional architecture": [
          "What is software architecture?",
          "Practical guide to architecture design",
          "How to visualise an asynchronous communication",
          "Summary"
        ],
        "Code reviews the right way": [
          "Introduction",
          "What's the purpose of a code review?",
          "Code reviews best practices (Author/Reviewer)",
          "Filtering constructive feedback from inappropriate comments"
        ]
      },
      "requirements": [
        "You just need to have basics understanding of PHP language."
      ],
      "description": "Are you creating more bugs than you're fixing?\n\nDo you feel uncomfortable receiving feedback on your code?\n\nAre you stuck with complex software that needs refactoring?\nDo you want to improve your skills to keep up with best practises?\nDuring this course, you will be introduced to the many techniques and best practices that I've learned throughout my coding journey. Together we will work on refactoring a legacy project, building a new one from scratch and designing complex architecture. We will focus on using simple, practical models and processes that are applicable in any software application.\nThrough every step of this journey, we will critique what is the right path to take to solve technical problems such that you are adequately equipped to take on complex of software projects.\nYour course roadmap to enterprise level software engineer:\nYou will start with complete fundamentals of clean code.\nThen you will learn how to write SOLID code regardless the framework.\nYou will explore design patterns and find out how to directly solve some of the most common business requirements with ease, without re-inventing the wheel and learn how you can develop your knowledge even further without any other course!\nAt the end you will be able to design an architecture of ANY system, software, regardless it's complexity in a practical manner so your colleagues will be impressed every time you draw a diagram without getting lost in it.",
      "target_audience": [
        "Every beginner PHP developer who wants to learn how to write high-quality enterprise level software.",
        "Every developer using OOP looking for a way to level up his programming skills to be able to work on projects with large codebases."
      ]
    },
    {
      "title": "System Design: Ultimate Course for Cracking Tech Interviews",
      "url": "https://www.udemy.com/course/system-design-ultimate-course-for-cracking-tech-interviews/",
      "bio": "Learn Scalable System Design Techniques for Tech Interviews: A Step-by-Step Guide",
      "objectives": [
        "Comprehensive Understanding of System Design Principles: By the end of this course, participants will have a thorough grasp of fundamental system design concept",
        "Practical Application of Design Patterns: Learners will be able to apply various design patterns and architectural styles to real-world problems.",
        "Proficiency in Analyzing and Solving Complex Problems: Students will develop the skills to break down complex system design problems, and analyze requirements.",
        "Effective Communication of Design Decisions: Participants will learn to articulate their design choices clearly and confidently."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Principles",
          "Objectives",
          "Data Structure Review",
          "Time Complexity",
          "Space Complexity"
        ],
        "Scalability": [
          "Introduction",
          "Types of Scalability",
          "Strategies"
        ],
        "Load Balancing": [
          "What is Load Balancing",
          "How Do We Use Load Balancing",
          "How Load Balancing Works?",
          "Methods - Round Robin",
          "Least Connections",
          "IP Hashing",
          "Hardware Load Balancers",
          "Software Load Balancers",
          "Cloud Load Balancers",
          "Real World Applications - E-Commerce",
          "Real World Applications - Video Streaming",
          "Cloud Computing and Load Balancing",
          "Challenges - Latency",
          "Challenges - Session Persistence",
          "Importance of Load Balancing"
        ],
        "Autoscaling": [
          "Introduction",
          "How Autoscaling Works?",
          "Metrics for Autoscaling Decisions",
          "Horizontal Scaling",
          "Vertical Scaling",
          "Reactive Autoscaling",
          "Predictive Autoscaling",
          "Autoscaling in Cloud Platforms",
          "Advantages of Autoscaling",
          "Challenges of Autoscaling"
        ],
        "Reliability": [
          "Introduction",
          "High Availability",
          "Fault Tolerance",
          "Redundancy"
        ],
        "Failover Mechanisms": [
          "Importance of Failover",
          "Why is Failover Important?",
          "Types: Active Passive Failover",
          "Types: Active Active Failover",
          "Types: Manual Failover",
          "Monitoring: Heartbeat Signals",
          "Active-Active Loadbalancers",
          "Failover in Cloud Infrastructure",
          "Failover in Databases",
          "Consistency Challenge",
          "Network Latency Challenge",
          "Choosing Right Failover Strategy"
        ],
        "Availability": [
          "Introduction"
        ],
        "Backup and Recovery": [
          "What is Backup and Recovery?",
          "Why Do We Need Backup and Recovery?",
          "Full Backup Strategy",
          "Incremental Backup Strategy",
          "Differential Backup Strategy",
          "Cold Recovery",
          "Warm Recovery",
          "Hot Recovery",
          "Backup and Recovery in Cloud Services",
          "Disaster Recovery for E-Commerce",
          "Storage Space Challenge",
          "RTO",
          "RPO",
          "Importance of Backup and Recovery"
        ],
        "Consistency": [
          "Introduction",
          "CAP Theorem",
          "Strong and Eventual Consistency"
        ],
        "Data Storage": [
          "Partioning",
          "Sharding"
        ]
      },
      "requirements": [
        "Basic Knowledge of Software Engineering,",
        "Familiarity with Networking Basics",
        "Hands-on Programming Experience",
        "Knowledge of Databases"
      ],
      "description": "Unlock your potential with our in-depth System Design Interview Course, meticulously crafted to help you ace your tech interviews and land your dream job at top tech companies. This course covers everything you need to know to master system design, from foundational principles to advanced concepts. You'll gain a comprehensive understanding of scalability, reliability, and maintainability, ensuring you can design systems that are robust and efficient.\n\n\nDesigned for aspiring software engineers, experienced developers, computer science students, technical architects, and career switchers, our course provides practical, real-world examples and best practices that you can apply immediately. With a strong emphasis on hands-on learning, you'll learn to apply various design patterns and architectural styles to solve complex problems, breaking them down into manageable parts and proposing effective solutions.\n\n\nOur course also focuses on enhancing your communication skills, teaching you how to articulate your design choices clearly and confidently, using the right technical terminology. This ensures you can convey your ideas effectively to interviewers and stakeholders, giving you an edge in high-pressure interview scenarios.\n\n\nPrerequisites for this course include a solid understanding of software engineering principles, experience with distributed systems, familiarity with networking basics, hands-on programming experience, and knowledge of databases. Enroll now and start your journey to becoming a system design expert, ready to tackle any challenge and impress in your next tech interview.",
      "target_audience": [
        "Aspiring Software Engineers",
        "Experienced Software Developers",
        "Computer Science Students and Graduates",
        "Technical Architects and Engineering Managers"
      ]
    },
    {
      "title": "Microsoft Dynamics 365 System Performance and Scalability",
      "url": "https://www.udemy.com/course/dynamics-365-system-performance-and-scalability/",
      "bio": "How to build and support enterprise scale business applications",
      "objectives": [
        "Understand the key concerns and variables that play a role in system performance",
        "Understand design anti-patterns that are common causes of performance issues",
        "Understand system design considerations that impact system performance"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Agenda",
          "About Your Instructor",
          "Learning Objectives",
          "Target Audiences"
        ],
        "Performance Overview": [
          "Overview",
          "Elements of Performance",
          "Baseline Performance",
          "Performance vs. Scalability",
          "Performance Degradation Types",
          "Performance Degradation Variables",
          "Pareto Principle of System Load",
          "Why Does This Happen?",
          "Summary"
        ],
        "Performance Variables": [
          "Overview",
          "Data Velocity",
          "Data Volume",
          "Data Viscosity",
          "Hot Spots",
          "Data Cardinality",
          "Data Concurrency",
          "Rules of system load",
          "Summary"
        ],
        "Load Anti-Patterns": [
          "Overview",
          "Process Execution Modes",
          "Process Cascade Pattern",
          "Process Overload Pattern",
          "Process Loop Pattern",
          "Cardinality Exposure Pattern",
          "Concurrency Violation Pattern",
          "Redundant Execution Pattern",
          "Data Gluttony Pattern",
          "Summary"
        ],
        "Performance Considerations": [
          "Overview",
          "Handling High Velocity Entities",
          "Attachment Considerations",
          "External Integrations",
          "Entity Ownership",
          "Record Sharing",
          "Concurrency Symptoms",
          "Summary"
        ],
        "Summary": [
          "Wrap up"
        ]
      },
      "requirements": [
        "Working knowledge of Microsoft Dynamics 365 CRM or any prior platform versions",
        "Ideally you will have some project implmentation experience as a basis for applying the material"
      ],
      "description": "System performance is a critical non-functional requirement in any application, yet it's seldom taken into account until after it becomes a problem. The worst thing that can happen after investing months in developing a system is for it to fail after being deployed to users. User feedback and politics can be quite brutal when a system fails to meet expectations and the consequences of a poorly performing system can be severe even to the point people lose their jobs. While system performance is often times looked at as an intangible aspect of application development it's based in design patterns and distributed system architecture principles that can be addressed.\nIn this course, we'll review Dynamics platform internals and take a pragmatic look at design anti-patterns we should avoid and mitigate in enterprise applications. This information which has never been presented to the public outside of Microsoft is derived from system performance research challenges and solutions of real world Microsoft enterprise customers.\nIn this course you will learn:\nThe basic components of system performance\nThe variables that play into how a system will behave after go live\nLoad anti-patterns that are the most common causes of poor performance\nDesign considerations that we can make proactively and mitigate retroactively in existing systems\nThis course is not meant to be technical deep dive, but rather a strategic review of the concepts and patterns that are required to build systems that perform and can scale. These concepts are applicable to both developers and business analysts alike and can be used in system architecture design conversations. While these concepts can be applied retroactively in performance mitigation scenarios it's significantly easier and less painful to build your system with these design considerations in mind.",
      "target_audience": [
        "Microsoft Dynamics customers experiencing system performance issues",
        "Microsoft Consulting partners that want to minimize red projects",
        "Microsoft ISV partners that wish to build scalable Dynamics 365 platform add-ons",
        "Technical leads that wish to understand patterns to look for in their code base",
        "Dynamics system support resources that maintain actively deployed systems",
        "Dynamics developers who want to understand design patterns to avoid",
        "Business analysts and consultants that wish to understand system design implications"
      ]
    },
    {
      "title": "Field Oriented Motor Control Development in Matlab Simulink",
      "url": "https://www.udemy.com/course/field-oriented-motor-control-of-pmsm-electric-servo-drives/",
      "bio": "Field Oriented Control (FOC), Permanent Magnet Synchronous Machines (PMSM), Matlab Simulink Development",
      "objectives": [
        "After completing this course, you will have a fundamental knowledge about the possible PMSM stator and rotor constructions.",
        "After completing this course, you will have a solid understanding of the detailed development process of a PMSM servo drive system.",
        "After completing this course, you will be able to implement your own PMSM motor model using Matlab Simulink environment.",
        "After completing this course, you will have a deep understanding of three phase voltage inverters using SVPWM modulation to create effective drive systems.",
        "During this course, you are going to implement your own Field Oriented Control algorithm for PMSM motors from scratch, in Matlab Simulink environment.",
        "This course will guide you through the advanced simulation methods aimed for validating the developed PMSM servo drive system effectiveness."
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "Typical applications of PMSM machines",
          "Introduction to PMSM rotor constructions",
          "BLDC vs. PMSM constructions",
          "Introduction to PMSM stator constructions",
          "Torque production of PMSM machines",
          "Appropriate phase currents for FOC algorithm"
        ],
        "FOC Control Algorithm Effect Diagram": [
          "Section overview",
          "Introduction to the servo drive effect diagram",
          "Typical signals in the FOC algorithm",
          "Clarke transformation - Three-phase currents",
          "Park transformation - Two-phase currents",
          "Proportional-Intergal (PI) speed controller",
          "Proportional-Intergal (PI) current controllers",
          "Inverse Park transformation - Two-phase voltages",
          "Inverse Clarke transformation - Three-phase voltages",
          "Introduction to State Vector Pulse-Width Modulation (SVPWM) method",
          "Introduction to three-phase voltage inverters",
          "Applied angular sensors in FOC control"
        ],
        "PMSM Plant Model - Model In Loop Environment": [
          "Overview of the plant model in MIL environment",
          "Ideal three-phase voltage inverter model - Simulink",
          "PMSM motor parameters and their importance",
          "Analytical PMSM model - Simulink"
        ],
        "Implementation of the FOC algorithm": [
          "Current transformation implementation - (Clarke-Park)",
          "Implementation of current reference generation",
          "Current controller implementation - Voltage decoupling logic",
          "Current controller implementation - PI regulator",
          "Voltage transformation implementation - (Inverse Clarke-Park)",
          "Implementation of SVPWM algorithm",
          "Implementation of torque calculation logic"
        ],
        "Validation of the implemented FOC algorithm in MIL environment": [
          "Sine vs. SVPWM reference duty modulation - Simulation",
          "The effect of pole-flux towards the modeled system - Simulation",
          "Voltage decoupling as optimization method - Simulation",
          "External load torque effect towards the modeled system - Simulation"
        ]
      },
      "requirements": [
        "Basic knowledge of Matlab and Simulink is required however each step of the development process is going to be introduced.",
        "Basic understanding of electrical principles as well as PMSM servo drives are good to have. Although this course is also forum for the enthusiastic starters.",
        "Basic knowledge of DC/AC power systems are good to have, however this course discusses them from the ground up."
      ],
      "description": "This course is created for enthusiastic starters who are interested in the control methods of the Permanent Magnet Synchronous Machines (PMSM) used in hybrid or electric cars. This course covers the needed theoretical background on PMSM constructions, unfolds their advantages over the Induction Machines (IM), explaining why these electric rotary machines are preferred in the modern world. Challenges of the Field Oriented Control (FOC) algorithm introduced throughout its block diagram representation to ease the learning process by firstly understanding why developers all around the world are preferring this control method. Several mathematical operations needed for the implementation of the FOC algorithm, such as Clark- and Park coordinate system transformations are going to be deducted and represented with simple scalar equations. The main purpose of this course is to inspire brave minds to dive into the interesting challenges of the motor control world starting from scratch.\nThe theoretical knowledge gained regarding the PMSM motors as well as the FOC algorithm are going to be planted into practice, in which we are going to develop a working motor control algorithm in Matlab Simulink environment. This course is created for you, if you are eager to learn how the great guys in the automotive industry are developing complex softwares for powerful electric vehicles. After implementing the FOC algorithm, Model-In Loop (MIL) simulations are going to be carried out where several PMSM parameters as well as logics within the motor control algorithm are going to be explained throughout spectacular simulation results. Each step of the FOC implementation as well as the MIL simulations are created to guide you through the whole development process of such motor control algorithm.\nThis course was created in the hope of increasing the potential number of future motor control developers, starting from the ground and implementing complex systems from scratch. As part of this course, you are going to get several Matlab and Simulink files to ease the learning process and guide you through this interesting topic.",
      "target_audience": [
        "This course is created for enthusiastic starters who are interested in the control methods of the Permanent Magnet Synchronous Machines (PMSM) used in hybrid or electric cars.",
        "This course is also created for university students who would like to deepen their knowledge about the electric motor control techniques and their practical implementation possibilities.",
        "Finally, this course gives the attendees a detailed overview about the Field Oriented Control method for PMSM machines from A to Z."
      ]
    },
    {
      "title": "Building APIs doing TDD in Node and Typescript (and Jest)",
      "url": "https://www.udemy.com/course/building-apis-doing-tdd-in-node-and-typescript-and-jest/",
      "bio": "A practical example on how to build REST API doing TDD using Nodejs Typescript and jest (and mongodb)",
      "objectives": [
        "Build REST API in Node and TypeScript",
        "Test with Jest framework",
        "Inside-out approach a.k.a. classicist a.k.a. Chicago school TDD",
        "Test doubles, mocks, spies, stubs, fakes and dummies",
        "Docker",
        "Mongo MongoDB Mongoose",
        "Node Express"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the course"
        ],
        "Building One Time Secret REST API": [
          "Problem Presentation",
          "Project Initialization",
          "Test coverage",
          "Domain Models",
          "Domain Use Cases",
          "Token Generator Service",
          "Secret Repository (Database)",
          "REST Controllers",
          "Error handler",
          "Express Application & Integration tests",
          "E2E tests with docker",
          "Recap"
        ]
      },
      "requirements": [
        "Familiar with Node and Typescript",
        "Familiar writing tests",
        "Familiar with mongodb"
      ],
      "description": "In this course we are going to implement from scratch a REST API in Node using Typescript and testing with Jest, but using Test Driven Development (TDD). During this exercise, we will follow the Inside-out TDD approach also known as classicist or referred also sometimes as Chicago school TDD. We will start from deep inside our application and build our way out until we have meet all the business requirements, being at any time covered by our own tests.\nThe API we are going to build is a clone of the One Time Secret site. We will create an application that stores our secrets and provides us a URL to access them later, but with the condition that we can access that URL one time only. Whenever we attempt to retrieve the same secret again, hitting the same URL for a second time, we will receive an error. We will use a mongodb as a persistence layer.\nAt the beginning of this course, we will analyze the business requirements just mentioned before and we will see how we translate that into working and well crafted code. We will see how we design the application and how we implement it, using a TDD approach having all the time our production code under control. We will get some inspiration from DDD, Hexagonal arch and CQRS to design our solution.\n\nKudos to @Panos for the constructive feedback that helped to make this course better.",
      "target_audience": [
        "Developers with certain experience writing code",
        "Developers with certain experience writing tests"
      ]
    },
    {
      "title": "Run Full Ethereum Node With TX Pool Monitoring in Javascript",
      "url": "https://www.udemy.com/course/full-ethereum-node-mempool/",
      "bio": "Get insights on blockchain transactions using Javascript before they happen by running your own full node for Ethereum",
      "objectives": [
        "Run your own full node on Ethereum",
        "Access your own blockchain node remotely using NGINX",
        "See user trades and transactions before they occur on the blockchain",
        "Understand how the blockchain works and what it means to run a full node",
        "Receive unlimited API calls and listen to events for blockchain crypto transactions"
      ],
      "course_content": {
        "Introduction": [
          "What You Will Learn",
          "Why I Run a Full ETH Node",
          "Questions and Discord",
          "How to Approach Course",
          "Disclaimer",
          "RESOURCES"
        ],
        "Understanding Blockchain Nodes": [
          "What is a Blockchain - DLT (Decentralised Ledger Technology)",
          "What is a Blockchain - Hash Functions (Google Sheets Example)",
          "Typical Modules of a Blockchain Node",
          "Consensus - Proof of Work (PoW)",
          "Consensus - Proof of Stake (PoS)",
          "Execution vs Consensus Client from Ethereum Merge"
        ],
        "Hardware Requirements": [
          "Hardware Requirements for Execution and Client Layers",
          "Hardware Provider Selection",
          "CAUTION - Please Read",
          "Third Party Vs Own Full Node API Advantage"
        ],
        "Ethereum Hardware Acquisition": [
          "WARNING - READ FIRST",
          "Dedicated Server Selection",
          "Server Check",
          "Create SSH Key",
          "Store SSH Key",
          "Install OS Ubuntu 22.04 OS",
          "About Reinstalling OS",
          "Testing SSH Access",
          "VSCode SSH Access Setup"
        ],
        "Ethereum Full Node Setup": [
          "Cheat Sheet Resource Instructions",
          "About Resetting Your Server",
          "Software Install",
          "Firewall Setup",
          "Prysm Consensus Beacon Creation",
          "Test Start Prysm",
          "Test Start Geth",
          "Stopping Tests and Note on Errors",
          "Automate Geth Service",
          "About Systemctl",
          "Automate Prysm Service",
          "ETH Syncing False (Initial Check)",
          "ETH Syncing True (Downloading Blockchain)",
          "Blockchain Fully Synced Check",
          "Other Useful Geth Attach Commands"
        ],
        "NGINX and Remote Access": [
          "Why NGINX",
          "Domain Clarification",
          "SSL Encryption",
          "Username and Password",
          "NGINX Conf Update",
          "NGINX Default Test",
          "Full Remote Test"
        ],
        "Pending Transactions Mempool Watching": [
          "Software Installations",
          "Extract Pending Transaction Hashes",
          "Transactions in Summary",
          "Transactions in Detail",
          "Decoding Transaction Data",
          "Decoding Big Numbers and Gas",
          "Extracting Symbol and Decimal Token Information",
          "Console Logging Output",
          "Ethereum Node Evaluation"
        ],
        "Ethereum Server Reset": [
          "Wipe Your Server Clean - Warning - Will Erase Your Blockchain Node",
          "Server Reset",
          "SSH Move Host Key"
        ],
        "Congratulations": [
          "Congratulations"
        ]
      },
      "requirements": [
        "Know what a crypto currency is (in particular Ethereum or BNB)",
        "Have some basic programming experience in JavaScript or TypeScript",
        "Be comfortable with using a Command Line Interface"
      ],
      "description": "Running your own blockchain node has a number of key advantages including:\n\n- Unlimited API requests to the blockchain\n- Speed of information flow versus API provider alternatives\n- Breadth of information flow on pending transactions\n- Supporting the blockchain\n- Financial decentralised trading and MEV (Maximal Extractable Value)\n\nHowever, running your own full node can be a daunting task. If you don't have a Linux OS distribution at home with plenty of SSD, Ram and reliable Networking speeds, it can cost hundreds of dollars per month to rent just the hardware alone in getting your node up and running. In this course, we bypass all the headaches.\n\nIf you have the equipment and reliable broadband speeds at home already, running a full will cost you nothing. I personally do not, so I opted to rent the hardware purely for making this course.\n\nInside you will gain an understanding of:\n\n1) What is a blockchain and what does it really mean to run an Ethereum node\n2) What are the typical modules that make up a blockchain node\n3) How are transactions validated and what are pending transactions\n4) How to get a full node up and running within 2 days on Ethereum\n5) What code allows you to quickly and easily decode transactions on the blockchain\n\nThe course at the time of making, does not cover how to run a Binance Smart Chain (or BNB Chain) full node. The reason for this is because it is simply too expensive to make it worth your while.\n\nIf you have basic programming experience and have been looking to run your own full node but are tired of the headaches that come with it, then this will be a great course for you.\n\n\nSee you in class!\nShaun",
      "target_audience": [
        "A crypto enthusiast wanting to know exactly how to get a full node setup with less headache",
        "A trader looking to gain an edge in cryptocurrency"
      ]
    },
    {
      "title": "Software Engineering : Master Software Engineering in C#",
      "url": "https://www.udemy.com/course/software-engineering-fundamentals-from-scratch-in-c-sharp/",
      "bio": "Build great Software and Understand Software engineering in C#",
      "objectives": [
        "Understand Core Concepts of Software Engineering",
        "Understand Sorting Algorithms",
        "Understand Data Structures",
        "Understand Software Engineering"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Say Hello :)",
          "Resources"
        ],
        "Sorting Algorithms": [
          "Sorting Problem",
          "Selection Sort",
          "CODE | Selection Sort",
          "Bubble Sort",
          "CODE | Bubble Sort",
          "Recursion",
          "CODE | Recursion",
          "Merge Sort",
          "CODE | Merge Sort",
          "Quick Sort",
          "CODE | Quick Sort",
          "Comparing",
          "CODE | Comparing"
        ],
        "Data Structures": [
          "What is Data Structure",
          "Binary search tree",
          "CODE | Binary Search Tree",
          "AVL tree",
          "AVL tree (insertion)",
          "AVL tree (deletion)",
          "CODE | AVL tree",
          "Linked List",
          "CODE | Linked List",
          "Trie",
          "CODE | Trie",
          "Hash Table",
          "CODE | Hash Table"
        ],
        "Problem solving techniques": [
          "Divide and Conquer",
          "Dynamic Programming",
          "Greedy approach",
          "Backtracking"
        ],
        "Complex Problems": [
          "0-1 Knapsack problem",
          "Kruskal's algorithm"
        ]
      },
      "requirements": [
        "Basic Knowledge Of Programming"
      ],
      "description": "In order to create Efficient Algorithms, you must start from bottom. Learn the important concepts of problem solving and Software engineering. And then use the knowledge you gain to create your own algorithms. Algorithms are essential part of computer science and programing. Every program is executing some Algorithm. So it is important to know how to create efficient algorithms.\nI think every programmer expierienced null pointer exception or something like that. These errors are not created by \"not knowing the programming language\" but they are created because the algorithm is incorrect. So what do you think is more important, Algorithms or programming language ?\nBy learning Software engineering concepts. You will be able to create algorithms. Ofcourse it takes also practice, but learning software engineering is first step to better algorithms and better analythic thinking.\nIn this course I will go through Software engineering ( algorithms and data structures, problem solving)\nIn Sorting Algorithms section you will learn:\nSelection Sort\nBubble Sort\nRecursion\nMerge Sort\nQuick Sort\nIn Data Structures section you will learn:\nWhat is Data Structure\nBinary Search Tree\nAVL tree\nLinked List\nTrie\nHash Table\nIn Problem Solving section you will learn:\nDivide and Conquer\nDynamic  programming\nGreedy Aproach\nBacktracking\nAnd I will explin these techniques on:\n0-1 Knapsack problem\nKruskal's algorithms\nSo do you want to learn software engineering ?",
      "target_audience": [
        "Anyone who wants to improve Problem Solving skills",
        "Anyone who wats to learn Software engineering",
        "Anyone who wants to learn Data Structures and Sorting Algorithms"
      ]
    },
    {
      "title": "Model Driven Architecture",
      "url": "https://www.udemy.com/course/model-driven-architecture/",
      "bio": "An introductory course about understanding the principles, process, models and tools of model driven architecture.",
      "objectives": [
        "Be introduced to Systems Engineering",
        "Be introduced to the Development Life cycle",
        "Understand Model-Driven Architecture",
        "Know the different principles of MDA",
        "Be aware of the different models of MDA",
        "Learn the MDA process",
        "Be aware of the different MDA standards",
        "Know the different MDA tools",
        "Be aware of the future of MDA"
      ],
      "course_content": {
        "Systems Engineering and Development Lifecycle": [
          "Introduction and Objectives",
          "Introduction to Systems Engineering",
          "Lifecycle of Systems Engineering",
          "Introduction to the Systems Development Lifecycle",
          "History of the Systems Development Lifecycle",
          "Systems Development Phases",
          "Strength and Weakness of the Systems Development Lifecycle",
          "Best Coding Practices"
        ],
        "Introduction to Model-Driven Architecture": [
          "Introduction and Objectives",
          "Introduction to Model Driven Architecture",
          "History of Model Driven Architecture",
          "Benefits of Model Driven Architecture",
          "Concerns of Model Driven Architecture",
          "Human Factor Integration",
          "Software System"
        ],
        "Model-Driven Architecture Principles and Models": [
          "Introduction and Objectives",
          "Model Driven Architecture Principles",
          "Introduction to Model Driven Architecture Models",
          "Rationale for Modeling",
          "Why Use Models?",
          "Basic Concepts",
          "Types of Models"
        ],
        "Model-Driven Architecture Process": [
          "Introduction and Objectives",
          "Introduction to Model Driven Architecture Process",
          "Transformation Mappings",
          "Basic",
          "Complex System",
          "Approach",
          "Development Process"
        ],
        "Model-Driven Architecture Standards": [
          "Introduction and Objectives",
          "Introduction to Model Driven Architecture Standards",
          "Unified Modeling Language",
          "Meta-Object Facility",
          "XMI Metadata Interchange",
          "OLC / QVT / M2T"
        ],
        "Model-Driven Architecture Tools": [
          "Introduction and Objectives",
          "Introduction to Model Driven Architecture Tools",
          "Categories of Model Driven Architecture Tools",
          "Commercial or Opensource?",
          "Open Source Tools",
          "Commercial Tools",
          "Partial or Complete",
          "Generation from the Model or Execution of the Model",
          "MDA vs UML"
        ],
        "Model-Driven Architecture Transformation and Future of MDA": [
          "Introduction and Objectives",
          "Introduction to the Model Driven Architecture Transformation",
          "Classification of Model Driven Architecture Transformation",
          "Approaches of Model Driven Architecture Transformation",
          "Selection of Model Driven Architecture Transformation",
          "Future of Model Driven Architecture"
        ],
        "Course Resources": [
          "Model Driven Architecture Glossary of Terms"
        ],
        "Model Driven Architecture Certification": [
          "Final Exam",
          "Conclusion - Final Lecture"
        ]
      },
      "requirements": [
        "Basic understanding of the IT industry",
        "Knowledge of the English language"
      ],
      "description": "Model-Driven Architecture (MDA) is an approach for the development of software systems. It is a set of guidelines for the structuring of specifications and are commonly shown as models.\nThis course will begin discussions by presenting an overview of Systems Engineering, Development Life cycle, and Model-Driven Architecture. This course will also explain Model-Driven Architecture principles, models, tools, and processes.",
      "target_audience": [
        "IT Professionals learning about software systems and design trends.",
        "IT organizations and Business Analysts looking to implement an MDA approach for software development.",
        "Software Engineers and Architects looking to learn about system models and MDA tools, standards, and processes."
      ]
    },
    {
      "title": "Unit Testing with Rust and Tokio",
      "url": "https://www.udemy.com/course/unit-testing-with-rust-and-tokio/",
      "bio": "Build Fully Mocked Unit Tests Using Techniques and Tools",
      "objectives": [
        "Unit Testing in Rust",
        "Rust and Tokio features to help setup tests",
        "Rust language features to help structure tests",
        "Crates that can help with testing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and Tips"
        ],
        "Prerequisites": [
          "Section Intro",
          "Rust Modules",
          "Brief Overview of SQLX",
          "Intro to lazy_static",
          "Overview of Necessary Crates"
        ],
        "Let's Create Our Unit Tests": [
          "Section Intro",
          "Simple Version of Test Patterns",
          "Bringing it All Together",
          "Bonus: Mocking using Generics"
        ]
      },
      "requirements": [
        "Basic knowledge of Rust and prior experience with Unit Testing"
      ],
      "description": "Programming with Rust is challenging. Even after spending substantial time learning and building apps with Rust, creating fully Mocked Unit Tests can be quite difficult.\nA real Unit Test should have its calls Mocked and only allow the Unit Under Test to run real code. But how does one do this with Rust? Dependency Injection is kind of doable, but dealing with Traits and their usage constraints can sometimes feel like a wrestling match.\nAlthough Rust has its own form of Interface, Rust is not an Object Oriented Programming language and does not have inheritance--which can make it unclear as to how to use Traits to perform patterns like Dependency Injection and creation of test Mocks. In addition the usage of async functions through the Tokio Runtime adds additional complexity to our tests. How do I force my tests to wait until certain variables are set? How do I share fixtures that are set globally across individual tests?\nIn this course we'll learn about various design patterns we can use to help build Rust based Unit Tests that are truly Mocked, and not Integration Tests masquerading as Unit Tests. We'll also learn about several crates that can help with things like pre-setting global variables to be used by our tests before the tests are run, mocking crates that can help us Mock out services, and utilities that can help set random values to add robustness to our tests.\nBonus Content shows how to use Generics to inject our Mocks into the internal implementation of functions. This allows us to Mock internal calls within functions without actually modifying the working function itself.",
      "target_audience": [
        "Intermediate Rust Developers"
      ]
    },
    {
      "title": "Mastering Amazon EKS - Hands-On",
      "url": "https://www.udemy.com/course/mastering-amazon-eks-hands-on/",
      "bio": "Build, Deploy, and Operate Kubernetes clusters with Amazon EKS",
      "objectives": [
        "How to Design and Implement Amazon Elastic Kubernetes Cluster",
        "How to Configure and Manage Network and Storage on a AWS EKS",
        "Creating IAM Cluster Role, NodeGroup Role",
        "Comparing Managed Node Groups and Fargate Profiles",
        "Storage management using EBS (block storage) and EFS (shared storage)",
        "Understanding Ingress Controllers and Application LoadBalancer",
        "Understanding and implementing Cluster Autoscaler",
        "Integrating private registry (ECR - Elastic Container Registry)"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Course Material - Mastering Amazon EKS - Hands-On"
        ],
        "Introduction to Managed Kubernetes": [
          "Section Introduction",
          "Demystifying Container Orchestration",
          "Limitations of Native Kubernetes",
          "What is Amazon EKS?",
          "Summary",
          "Checkout - Practical Kubernetes - Beyond CKA and CKAD | Hands-on"
        ],
        "Getting Started with Amazon EKS": [
          "Section Introduction",
          "Understanding EKS Architecture",
          "Demonstration - Creating IAM Cluster Role",
          "Demonstration - Creating IAM NodeGroup Role",
          "Demonstration - Installing CLI Tools and Setting Up EKS Access",
          "Summary",
          "Checkout - Podman for the Absolute Beginners - Hands-On DevOps"
        ],
        "Creating an EKS Cluster": [
          "Section Introduction",
          "Demonstration - Create EKS Cluster via AWS Console & Explore Control Plane",
          "Demonstration - EKS UI Walkthrough",
          "Demonstration - Upgrading the EKS Cluster Version",
          "Demonstration - Access EKS Using kubectl and AWS CLI",
          "Summary"
        ],
        "Worker Nodes and Compute Options in EKS": [
          "Section Introduction",
          "Comparing Managed Node Groups and Fargate Profiles",
          "Demonstration - Creating Managed Node Groups",
          "Demonstration - Creating IAM Role for Fargate Profile",
          "Demonstration - Adding a Fargate Profile to EKS",
          "Demonstration - Deploying a Pod to Fargate",
          "Demonstration - Adding aws-logging Configmap",
          "Summary"
        ],
        "Exposing Applications with Load Balancers in EKS": [
          "Section Introduction",
          "Understanding Load Balancing in EKS",
          "Demonstration - Expose Application using ServiceType LoadBalancer",
          "Demonstration - Using Annotations to Create Network LB",
          "Demonstration - Cleaning up Existing Resources",
          "Summary"
        ],
        "Storage Integration (EBS and EFS)": [
          "Section Introduction",
          "Overview of EBS Volumes & How it works",
          "Demonstration - IAM Configurations to use EBS as Storage",
          "Demonstration - Install & Configure EBS CSI Driver",
          "Demonstration - Persistent Storage with PVC EBS CSI Driver",
          "Demonstration - Persistent Storage with ClaimTemplates",
          "Overview of EFS for Shared Access Across Pods",
          "Demonstration - Configurations to use EFS as PersistentVolume",
          "Demonstration - Using EFS with for Multiple Pods",
          "Summary"
        ],
        "Managing Networking and Ingress": [
          "Section Introduction",
          "Understanding Ingress Controllers and ALB Setup",
          "Demonstration - Creating IAM Policy & Role",
          "Demonstration - Deploying ALB Ingress Controller Resources",
          "Demonstration - Deploying ALB Ingress Controller to Route External Traffic",
          "Summary"
        ],
        "Scaling Node Groups (Cluster Autoscaler)": [
          "Section Introduction",
          "Understanding Cluster Autoscaler for Node Groups",
          "Demonstration - Created IAM Policy & Role for Cluster Autoscaler",
          "Demonstration - Enabling and Observing Cluster Autoscaler in Action",
          "Summary",
          "Checkout - Argo CD for the Absolute Beginners - Hands-On DevOps"
        ],
        "Private Registry (ECR - Elastic Container Registry) Integration": [
          "Section Introduction",
          "Demonstration - Creating and Managing Amazon ECR Repositories",
          "Demonstration - Authenticating on Ubuntu Machine for ECR",
          "Demonstration - Pushing a Docker Image to ECR and Deploying it on EKS",
          "Summary"
        ]
      },
      "requirements": [
        "Basic Unix/Linux Knowledge (Good to have)",
        "Basic understanding of Docker/Cri-O",
        "Basic understanding of native Kubernetes"
      ],
      "description": "Amazon EKS brings the power of Kubernetes to AWS cloud, helping you run containerized applications at scale without the burden of managing your own control plane. While it offers flexibility and control, setting up and managing EKS involves working with IAM roles, cluster configuration, networking, storage, and scaling.\nThis course is designed for DevOps engineers, cloud practitioners, and platform engineers who want a practical, hands-on approach to mastering Amazon EKS.\n\n\nWhat’s in this course?\nWe will start with the fundamentals of container orchestration and EKS architecture, then move into real-world demonstrations covering cluster creation, version upgrades, node group setup, load balancing, persistent storage, autoscaling, and ECR integration. Each section combines clear conceptual explanations with demonstrations using both the AWS Management Console and CLI, helping you build confidence as you go.\nWhether you are new to EKS or looking to strengthen your skills, this course gives you the tools to deploy and operate EKS environments efficiently and securely.\n\n\nSpecial Note:\nThis course is designed to showcase all practical concepts through live demonstrations. Every concept is presented in real-time, and any issues or errors that arise are promptly troubleshooted and addressed as they occur, allowing you to learn from real-world scenarios.\n\n\nCourse Structure:\nLectures\nLive Demonstrations\nAssessments\nCourse Contents:\nIntroduction to Amazon EKS\nGetting Started with Amazon EKS\nCreating an EKS Cluster\nWorker Nodes and Compute Options in EKS\nExposing Applications with Load Balancers in EKS\nStorage Options\nManaging Networking and Ingress\nScaling Node Groups\nECR Integration\nAll sections include hands-on demonstrations. Learners are encouraged to set up their own Amazon EKS environments, follow along with the exercises, and reinforce their understanding through practical application.",
      "target_audience": [
        "DevOps Administrators or DevOps Engineers",
        "Cloud Administrators or Cloud Engineers",
        "System Administrators or System Engineers",
        "Application Developers and Testers"
      ]
    },
    {
      "title": "Efficient BIM Ducting Design with Revit and Dynamo",
      "url": "https://www.udemy.com/course/acmducting/",
      "bio": "Learn to Model from Scratch Ducting Instalations and jump to workflows for autorouting and coordination with Dynamo",
      "objectives": [
        "Create MEP System types for Ducting and Set Routing Solutions",
        "Modify correct or create MEP elements to Models.",
        "How to review that information assets comply with the values set.",
        "Create Dynamo Structures for Autorouting Solutions and Change",
        "Extract or Set Elements to solve the Instalation Creation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Modeling Instalation Principles LOD",
          "Resources"
        ],
        "Ducting Configuration": [
          "Disclaimers and Revit 2024 Updates",
          "Duct Modeling Processes",
          "Creating and Connecting Ducts",
          "Air Terminal families",
          "Mechanical Families"
        ],
        "Modeling Exercise": [
          "Inserting File and Setting the File",
          "Creating the Air Terminals",
          "Creating the Ducts Related to",
          "More Ducts and the Mechanical Equipment"
        ],
        "Dynamo Basic Requirements": [
          "Dynamo Update Instructions on 2024",
          "Dynamo Setup and Packages",
          "Inputs_Lists_Dynamo Generic Overflow",
          "Points_Vectors and Routings",
          "Creating Ducts with Routing"
        ],
        "Mep Modeling by Dynamo": [
          "Using the Autorouting Layout of ducts",
          "Extracting Connectors from Air Terminals and Mechanical Equipments",
          "Connecting to Main Line",
          "Creating Grid Systems",
          "Creating Ducts over Grids",
          "Creating all Fittings and Connections"
        ]
      },
      "requirements": [
        "Need to know basics on Autodesk Revit",
        "Need to know Dynamo Modeling Basics for Geometry Analysis and Player or any Related",
        "Be Resilient Curious and Creative"
      ],
      "description": "This course is designed to help you accelerate your BIM modeling process by integrating Revit and Dynamo, focusing on ducting installations. MEP modeling, particularly ductwork, is often complex and time-consuming due to its dependency on architectural and structural elements. By utilizing Dynamo’s automation capabilities, you can drastically reduce manual work and make design changes faster and more efficiently.\nIn this course, you'll learn how to model ducting systems from scratch and explore workflows that automate design coordination, autorouting, and modifications. The course will also cover using Dynamo to create reusable patterns and custom nodes, enabling you to quickly adapt to any design changes or project-specific requirements.\nThroughout the course, we will guide you through the creation of smart workflows using Dynamo, helping you establish patterns for ducting that can be easily adjusted. You'll learn how to export data, automate repetitive tasks, and optimize coordination processes to streamline your project workflow.\nBy the end of this course, you will:\nHave a thorough understanding of ducting systems in Revit and how to apply them effectively.\nBe able to use Dynamo to enhance and automate ductwork modeling, saving you time and effort.\nGain the skills to create dynamic workflows for MEP modeling, ensuring coordination and flexibility throughout the project lifecycle.",
      "target_audience": [
        "MEP Engineers that believe on rules, patterns and that understand that modeling needs to be a product of analysis and logic not of handcrafted hours of repetition",
        "MEP Engineers that what to solve or model elements by Dynamo use, and change their performance forever",
        "Constructors and Engineers that want to see the capabilities for MEP modeling.",
        "Architects that would seek to develop fully integrated projects"
      ]
    },
    {
      "title": "Developing P2P Applications with Rust",
      "url": "https://www.udemy.com/course/developing-p2p-applications-with-rust/",
      "bio": "Learn to create awesome and decentralized applications with ease!",
      "objectives": [
        "Learning the basics of peer-to-peer application development",
        "Development with LibP2P using Rust",
        "Different technics to implement anything on a peer-to-peer basis",
        "Creating a real-world p2p application using Rust"
      ],
      "course_content": {
        "Peer-to-Peer Basics": [
          "Introduction",
          "P2P Basics"
        ],
        "LibP2P step-by-step": [
          "Introduction",
          "Our first application",
          "Peer discovery - mDNS",
          "Kademlia DHT",
          "Improve connectivity with Relays",
          "Gossipsub"
        ],
        "Developing a real world P2P application": [
          "Introduction",
          "DFS skeleton",
          "LibP2P Swarm setup",
          "P2P service",
          "GRPC server",
          "File processing",
          "Merkle Tree",
          "File publish - Kademlia provide",
          "File store with RocksDB",
          "Metadata file download protocol",
          "File download preparation",
          "Add CLI capabilites to configure app",
          "Automatically providing files",
          "File download workers",
          "File download service",
          "File download service - part 2",
          "File chunk download protocol - Downloading and saving files - Part 1",
          "File chunk download protocol - Downloading and saving files - Part 2",
          "File chunk download finish",
          "Broadcasting public files",
          "DFS overview"
        ]
      },
      "requirements": [
        "Basic Rust development experience needed"
      ],
      "description": "Have you ever thinking about how torrent works, how blockchain systems can stay in sync together across the globe or how to create decentralized applications in general?\nHaving a little-bit of Rust knowledge?\nIf yes, then this course is 100% for you!\n\n\nThis course is a very good starting point for anyone who may want to start develop a blockchain or any kind of p2p applications.\n\n\nIn this course, first we are going over the basics of peer to peer development that gives you a relatively good understanding of how these kind of applications looks like. While learning, of course we do some coding as well, to get familiar with LibP2P's Rust based implementation!\nThen in the last big section we will go through a full real world application development cycle (not making it 100% production ready, but works fine) from scratch!\nThere we check all the aspects of a real P2P application, including local database, networking, verification of data coming from other peers and so on!\n\n\nWhile this course expects some basic Rust knowledge, during the course it can be get easily as there are not much expert topic is touched regarding Rust.\n\n\nSo overall, if you would like to deepen your understanding of P2P application development and add some cool new skills to your skillset, just take this course! :)",
      "target_audience": [
        "Developers with some Rust knowledge whos are interested in P2P application development"
      ]
    },
    {
      "title": "Data Structures in JavaScript: Master The Fundamentals",
      "url": "https://www.udemy.com/course/javascript-datastructures/",
      "bio": "Learn the fundamentals of computer programming using JavaScript data structures",
      "objectives": [
        "Learn fundamental concepts of Data Structures and Algorithms",
        "Learn to implement popular data structures in JavaScript",
        "Learn how data structures are used for creating software"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Arrays": [
          "Arrays vs Lists",
          "Common Array Iterations",
          "Pairwise Array Comparisons",
          "Array Functions",
          "Searching Arrays",
          "Is Sorted Challenge",
          "Is Sorted Solution",
          "2d Arrays",
          "Iterating Over 2d Arrays",
          "2d Bounds Checking",
          "Minesweeper Challenge",
          "Mnesweeper Solution",
          "Tally Sort Challenge",
          "Tally Sort Solution"
        ],
        "Lists": [
          "Lists Out of Arrays",
          "Implementing List Push and Grow",
          "Implementing List Remove",
          "Implement List Insert",
          "List Contains Challenge",
          "List Contains Solution",
          "List Get and Set",
          "Concat Challenge",
          "Concat Solution"
        ],
        "Big o Time Space Asymptotic Analysis": [
          "Intro to Big o",
          "Big o of n Squared",
          "Timing Big o of one Versus n Versus n Squared",
          "No Constants- n Big o Notation",
          "Big o Challenge",
          "Big o Solution"
        ],
        "Linked Lists": [
          "Linked Lists",
          "Coding Linked Lists",
          "Linked List Manipulation Challenge",
          "Linked List Manipulation Solution",
          "Linked List Class",
          "Get at Index",
          "Remove at Index",
          "Add at Index",
          "Summarizing Arrays vs Linked Lists",
          "Prefer Manipulating Pointers to Copying Data"
        ],
        "Stacks": [
          "Intro to Stacks",
          "Stack Implementations",
          "Stack out of Linked List",
          "Stack out of Array",
          "Balance Parenthesis Challenge",
          "Balance Parenthesis Solution",
          "Paren Bracket Curly Balance Challenge",
          "Paren Bracket Curly Balance Solution",
          "Condense Challenge",
          "Condense Inefficient Solution",
          "Condense Efficient Solution"
        ],
        "Queues": [
          "Intro to Queues",
          "Implementing a Queue",
          "Josephus Challenge",
          "Josephus Solution",
          "Sieve of Eratosthenes Challenge",
          "Sieve of Eratosthenes Solution",
          "Native js Arrays Stacks and Queues"
        ],
        "Recursion": [
          "Intro to Recursion",
          "Recursive Fibonacci",
          "Palindrome Challenge",
          "Palindrome Hints",
          "Palindrome Solution",
          "Palindrome Bonus"
        ],
        "Trees": [
          "Intro to Trees",
          "Iterating Over Trees",
          "Tree Sum Challenge",
          "Tree Sum Solution",
          "Tree Contains Challenge",
          "Tree Contains Solution",
          "Tree Size Leaves Challenge",
          "Tree Size Leaves Solution",
          "Tree Min Max Height Challenge",
          "Tree Min Max Height Solution",
          "Binary Search Trees",
          "Binary Search Tree Add",
          "Binay Search Tree Contains Challenge",
          "Binary Search Tree Contains Solution",
          "Unbalanced Binary Search Trees",
          "Morse Code Challenge",
          "Morse Code Solution"
        ],
        "Hash Maps": [
          "Intro to Hash Maps",
          "Handling Collisions with Linear Probing",
          "Handling Collisions by Chaining Linked Lists",
          "Coding Linked List Collisions"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript is required for completing this course"
      ],
      "description": "If you want to be a good programmer or want to build good software, then the knowledge of data structures and their role in software development becomes essential. Data Structure is basically a process for collecting and organizing the data in the best way possible for performing operations efficiently. They form the fundamentals of computer science. With a good understanding of data structure, we master the way of organizing and storing data for a specific purpose.  This course is aimed for helping you understand the core concepts behind these data structures and how they are used to build algorithms that solve business problems.\nWhy this course is important?\nThis course gives insight into the data science and algorithms in JavaScript covering all the essential topics. It unfolds with the basic introduction, then covers all the aspects of arrays such as arrays vs lists, common array iterations, array functions and others. Following this, lists, big o time space asymptomatic analysis, linked lists and stacks are also covered in details. Lastly, introduction to queues, its implementation, various aspects of recursion, trees, hash maps and graphs are also covered for the complete understanding of data science and algorithms.\nThis course includes-\n1. Introduction to the data structure\n2. Arrays, common array comparisons, array functions, searching arrays, 2d arrays, iterating over 2d arrays, Minesweeper challenge, minesweeper solution and others\n3. Lists, implementing list push, implementing list remove and so on\n4. Big o time space asymptomatic analysis- its introduction, big o of n squared, no constants, big o challenge and big o solution\n5. Linked lists, coding linked lists, linked list class, remove at index and add at index\n6. Stacks- introduction, implementation, stack out of linked list, stack out of array, condense challenge and others\n7. Queues, recursion, trees, hash maps, graphs and much more important things!\nGet started with this course now to learn data structures and algorithms for acing any job interview or building better software!",
      "target_audience": [
        "Anyone who wants to learn software engineering will find this course very useful",
        "Learn to build better software with conceptual understanding of the fundamental data structures."
      ]
    },
    {
      "title": "Linux Tutorial - Master The Command Line",
      "url": "https://www.udemy.com/course/linux-tutorial-master-the-command-line/",
      "bio": "Become a Linux Command Line Expert - From Beginner to Advanced Techniques",
      "objectives": [
        "How to install Ubuntu Linux on VirtualBox in Windows",
        "Basic Linux commands such as \"ls\", \"cd\", \"mkdir\", \"rmdir\", \"touch\", \"cat\", \"rm\", \"cp\", and \"mv\"",
        "Advanced topics like file permissions, user and group management, network troubleshooting, network utilities, secure file transfer, and system monitoring",
        "Network utilities such as \"ifconfig\", \"ip\", \"whois\", \"nslookup\", and \"wget\"",
        "Secure file transfer with \"ssh\" and \"scp\"",
        "System monitoring tools like \"uptime\", \"ps\", \"top\", and \"kill\"",
        "How to use the \"nl\", \"chage\", and \"passwd\" commands"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Ls Command in Linux",
          "cd Command",
          "mkdir Command",
          "rmdir Command",
          "touch Command",
          "cat Command",
          "rm Command",
          "cp Command",
          "mv Command",
          "test",
          "zip Command",
          "unzip Command",
          "Permissions Command",
          "chmod Command",
          "useradd - adduser command",
          "Groupadd command",
          "Usermod Part 1",
          "Usermod Part 2",
          "Head Command",
          "Tail Command",
          "Chown Command",
          "Chgrp Command",
          "ping Command",
          "traceroute command",
          "MTR command",
          "host command",
          "ifconfig command",
          "ip command",
          "Whois Command",
          "nslookup",
          "Wget",
          "Wget_part2",
          "SSH Command",
          "SCP Command",
          "Uptime Command",
          "Uname Command",
          "hostname Command",
          "passwd Command",
          "chage Command",
          "nl Command",
          "Process",
          "ps command",
          "Top Command",
          "Kill command"
        ]
      },
      "requirements": [
        "A basic understanding of computer concepts",
        "A willingness to learn"
      ],
      "description": "Welcome to \"Linux Tutorial - Master The Command Line\"!\nIn this course, you will learn the fundamental skills required to navigate and work with the Linux command line. We will start by installing Ubuntu Linux on VirtualBox in Windows, and then proceed to cover a variety of basic Linux commands, including the \"ls\" command for listing directory contents, the \"cd\" command for changing directories, the \"mkdir\" command for creating directories, the \"rmdir\" command for deleting directories, the \"touch\" command for creating files, the \"cat\" command for displaying file contents, the \"rm\" command for deleting files, the \"cp\" command for copying files, and the \"mv\" command for moving files.\nWe will also delve into more advanced topics such as file permissions, user and group management with the \"chmod\", \"useradd\", and \"groupadd\" commands, the \"head\" and \"tail\" commands for viewing the beginning and end of a file, the \"chown\" and \"chgrp\" commands for changing file ownership and group membership, and the \"ping\", \"traceroute\", and \"mtr\" commands for network troubleshooting.\nAdditionally, we will cover important network utilities such as \"ifconfig\", \"ip\", \"whois\", \"nslookup\", and \"wget\", as well as secure file transfer with \"ssh\" and \"scp\". We will also discuss system monitoring tools like \"uptime\", \"ps\", \"top\", and \"kill\", and explore the \"nl\", \"chage\", and \"passwd\" commands.\nBy the end of this course, you will have a solid foundation in the Linux command line and be well-prepared to take on more advanced tasks and challenges. So, enroll now and let's get started!",
      "target_audience": [
        "Beginners who are new to the Linux command line",
        "Experienced users looking to expand their skills",
        "IT professionals looking to add Linux command line proficiency to their toolkit",
        "Anyone who wants to become proficient in using the Linux command line"
      ]
    },
    {
      "title": "Data Structures and Algorithms - Complete Course",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-course-1/",
      "bio": "Master the fundamentals of data structures and algorithms.",
      "objectives": [
        "Data Structures",
        "Algorithms and Analysis of Algorithms",
        "Programming interview skills"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "What are data structures and algorithms?"
        ],
        "Analysis of Algorithms": [
          "Analysis of Algorithms - Running Time",
          "Asymptotic Analysis of Algorithms",
          "Big O notation",
          "Big Omega notation",
          "Big Theta Notation"
        ],
        "Arrays": [
          "Arrays - Introduction",
          "Arrays in C++, Java, Python",
          "Exercise: Build Array from Permutation",
          "Exercise: Concatenation of Array",
          "Running Sum of 1d Array",
          "Dynamic Arrays - Introduction",
          "Assignment 1",
          "2D Arrays",
          "Flipping an Image"
        ],
        "Linked Lists": [
          "Linked List - Introduction",
          "Linked List - Advantages and Disadvantages",
          "Linked List - Representation and Traversal",
          "Linked List - Insertion cases and Code",
          "Linked List - Deletion",
          "Linked List - Search a key",
          "Find Kth Node from end of a Linked List",
          "Find Middle of a Linked List",
          "Detect Loop in Linked List",
          "Why Floyd's Cycle detection works?",
          "Find the beginning of Loop in Linked List"
        ],
        "Trees": [
          "Trees - Introduction",
          "Binary Trees - Representation",
          "Simple Binary Tree in C++",
          "Properties of Binary Tree",
          "Types of Binary Tree",
          "Insertion in Binary Tree - Level Order Insertion",
          "Deletion in Binary Tree - in single traversal",
          "Tree Traversals - Inorder, Preorder, Postorder, Level Order",
          "Range sum of a Binary Search Tree",
          "Path Sum of Binary Tree",
          "Do Inorder traversal of a Binary Tree without Recursion",
          "Exercise - Two Sum in Binary Search Tree"
        ],
        "Stacks and Queues": [
          "Stack data strcuture",
          "Queue data structure",
          "Stacks - C++ STL",
          "Queue - C++ STL",
          "Inorder traversal of Binary Tree without recursion"
        ],
        "Graphs": [
          "Graphs - Introduction",
          "Graph Representation",
          "Breadth First Search - Graph Traversal",
          "Depth First Search - Graph Traversal",
          "Applications of DFS and BFS",
          "Iterative DFS",
          "Pre and Post visited times in DFS",
          "DFS - Types of Edges",
          "Cycle Detection in Directed Graph",
          "Cycle Detection in Undirected Graph",
          "Disjoint Set (Union-Find) Algorithm - Introduction"
        ],
        "Heaps": [
          "Binary Heap - Introduction",
          "Binary Heap - Representation",
          "Binary Heap Implementation",
          "Build Heap and its Time Complexity",
          "Merge k sorted linked lists"
        ],
        "Hash Table": [
          "Hash Table - Introduction",
          "Hash Table - Principle",
          "Designing a Hash Table",
          "Design a Hash Set",
          "Design a Hash Set - Explanation and solution",
          "Design a Hash Map",
          "Using Hash Set in C++, Java and Python",
          "Complexity Analysis of Hash Tables"
        ],
        "Recursion": [
          "Mastering Recursion for Programming Interviews",
          "Sum of left leaves of Binary Tree"
        ]
      },
      "requirements": [
        "Basic programming skill in any laguage"
      ],
      "description": "In this course we will understand different data structures and how to use them effectively for solving problems. It is expected that the students have basic experience in any high-level programming language. Data structures and algorithms are a crucial part of programming interviews. This course is a complete course on Complete data structure and algorithms. The main focus here will be mastering the Data structures, implementing those and some problems explaining application of those data structures and understand different programming paradigms, analysis of algorithms and applying different data structures.\nIn this course, we will cover the following topics:\nTime and Space complexity of algorithms\nArrays,\nLinked Lists,\nTrees - Representation, binary trees, binary search trees, balanced binary search trees, and related problems\nStacks and Queues,\nHeaps,\nGraphs - representation, traversal of graph using breadth-first search, depth first search, graph algorithms\nHash Table,\nTries\nRecursion\nDynamic Programming\nA good understanding of data structures and algorithms is very crucial for programming interview. After completing this course you should be able to understand which data structures and algorithms should be used to solve a problem and why. It will not only prepare you for your coding interviews, but also make you a better programmer in general.\nSo, let's start our wonderful journey towards mastering data structures and algorithms.",
      "target_audience": [
        "Software Engineers",
        "Computer Science students",
        "Data Scientists"
      ]
    },
    {
      "title": "Elasticsearch Masterclass For Java Spring Developers [2025]",
      "url": "https://www.udemy.com/course/elasticsearch-java/",
      "bio": "Master Full-Text Search, Fuzzy Match, Powerful Aggregations and Robust Search Engine Architecture From Scratch.",
      "objectives": [
        "Core Elasticsearch Concepts - Indexing, sharding, replication, and distributed search",
        "Full-Text Search & Relevance Tuning - BM25, tokenization, stemming, and boosting",
        "Aggregations - Bucket, metric, range and historgram aggregations",
        "Data Modeling - Mappings, analyzers, and custom tokenizers",
        "Bulk Indexing & Query Optimization - Handling millions of documents efficiently",
        "Autocomplete & Search Suggestions - Implementing completion suggesters and search as you type",
        "Spring Boot Integration - Implement Elasticsearch-powered search in Java applications",
        "Security & Scaling - Authentication, SSL/TLS"
      ],
      "course_content": {
        "Introduction": [
          "Before You Enroll... The Need For Search - Why Elasticsearch!"
        ],
        "Elasticsearch Setup": [
          "*** Humble Request & Resource ***",
          "Elasticsearch Setup Using Docker Compose",
          "Kibana Dev Tools"
        ],
        "Elasticsearch Core Concepts": [
          "Terminologies",
          "Index - Create / Delete",
          "[CRUD] - Adding Documents",
          "Source Metadata Fields",
          "[CRUD] - Adding Documents With ID",
          "[CRUD] - Querying Documents",
          "[CRUD] - Updating Documents",
          "[CRUD] - Patch",
          "[CRUD] - Scripted Update",
          "[CRUD] - Delete",
          "Inverted Index",
          "Term Dictionary / Term Frequency / Document Frequency",
          "[Optional] - Segments",
          "[Optional] - Refresh API",
          "Summary",
          "Quiz"
        ],
        "Clustering / Sharding / Replication": [
          "Elasticsearch Cluster",
          "Sharding",
          "Routing",
          "Replica Shard",
          "Index Creation With Shard And Replica",
          "Node Roles",
          "Three Node Elastcisearch Cluster",
          "Master Election",
          "High Availability Demo",
          "Two Shards Demo",
          "Initial Master Demo",
          "Node Roles Demo",
          "Coordination Only Node",
          "Optimistic Concurrency Control",
          "Cluster Settings - Persistent / Transient",
          "[FAQ] - How Many Primary Shards Do I Need?",
          "[FAQ] - How To Change Shard Count?",
          "[FAQ] - How Many Replica Shards Do I Need?",
          "Summary",
          "Quiz"
        ],
        "Bulk API": [
          "Bulk API Introduction",
          "Bulk API Demo",
          "Granular Error Handling",
          "Optimistic Concurrency Control / Multiple Indices",
          "File Upload",
          "Reindex API",
          "Summary"
        ],
        "Analyzer": [
          "Analyzer Introduction",
          "Analyzer Components",
          "Analyzer Clarification",
          "Character Filters",
          "Tokenizers",
          "Token Filters",
          "Synonym Filter",
          "Stop Word Filter",
          "Stemming Filter",
          "Analyzers",
          "Custom Analyzer",
          "[FAQ] - Is Elasticsearch Insert Slow?",
          "[FAQ] - How Elasticsearch Fits In Your Architecture",
          "[FAQ] - Custom Analyzer In Java",
          "Summary",
          "Quiz"
        ],
        "Data Mapping": [
          "Data Mapping - Introduction",
          "Dynamic Mapping",
          "Explicit Mapping",
          "[FAQ] - Can I Add New Field?",
          "[FAQ] - Can I Change Existing Field Type?",
          "Field Possible Values",
          "Using Custom Analyzer",
          "Custom Analyzer Clarification",
          "Skipping A Field",
          "1-To-1 Parent Child Mapping",
          "1-To-Many Parent Child Mapping",
          "Summary",
          "Quiz"
        ],
        "Full-Text Search": [
          "Introduction",
          "Match All",
          "Select By IDs",
          "Term / Terms Query",
          "Range Query",
          "Prefix / Wildcard / Regexp",
          "Exists Query",
          "Relevance",
          "Match Query With Relevance Score - Part 1",
          "Match Query With Relevance Score - Part 2",
          "Fuzziness",
          "Match Phrase",
          "Multi Match",
          "Highlight",
          "Multi Field Mapping",
          "Leaf vs Compound Queries",
          "Bool Query - Part 1",
          "Bool Query - Part 2",
          "Bool Query - Should Clause - Part 1",
          "Bool Query - Should Clause - Part 2",
          "[Optional] - Bool Query Guidelines",
          "*** Bool Query - Assignment 1 ***",
          "*** Bool Query - Assignment 2 ***",
          "Minimum Match For Should Clause",
          "Personalized Results Using Should Clause",
          "Boosting Query",
          "Disjunction Max Query",
          "Query String",
          "Geo Spatial Query",
          "1-to-1 Parent Child Query",
          "1-to-Many Parent Child Query",
          "Inner Hits",
          "Date Math",
          "Summary",
          "Quiz"
        ],
        "Field Selection / Pagination / Sorting": [
          "Field Selection",
          "Pagination",
          "Sorting",
          "Array - Sort Mode",
          "[FAQ] - Sorting By ID"
        ],
        "Aggregation / Facets": [
          "Aggregation - Introduction",
          "Metric Aggregation",
          "Bucket Terms Aggregation - Part 1",
          "Bucket Terms Aggregation - Part 2",
          "Range / Histogram Aggregation",
          "{Optional] - Nested Aggregation",
          "Summary"
        ]
      },
      "requirements": [
        "Docker",
        "Java",
        "Spring Boot"
      ],
      "description": "This course is up to date with latest Elasticsearch version 9.\nElasticsearch 9 Masterclass: Building Powerful Search Engine with Java & Spring Boot.\nNote: This is NOT a logging/monitoring/analytics course.\n\n\nAs part of this course, we will learn the power of Elasticsearch 8 and build blazing fast, intelligent search solutions! This comprehensive, hands-on course is designed for Java/Spring Boot developers who want to master full-text search, fuzzy matching, powerful aggregations and robust search engine architecture from the fundamentals to advanced topics.\nWhy Learn Elasticsearch?\nPower Modern Applications - Build scalable and intelligent search solutions for e-commerce, enterprise applications, and more.\nUnlock Career Growth - Advance your skills and open doors to high-demand roles like Staff and Principal Engineer.\nEffortless Scaling - Handle massive datasets and deliver lightning-fast search results.\nWhat You will Learn:\nCore Concepts - Grasp essential Elasticsearch concepts like indexing, sharding, replication, and distributed search. How it works behind the scenes with concepts like Inverted Index & Segments.\nFull-Text Search Mastery - Master full-text search techniques, including BM25, tokenization, stemming, and boosting for optimal relevance.\nAggregations - Uncover valuable insights with bucket, metric, range, and histogram aggregations.\nData Modeling Excellence: Design efficient and effective data models using mappings, analyzers, and custom tokenizers.\nHigh-Performance Techniques: Optimize indexing and query performance to handle millions of documents efficiently.\nAutocomplete & Search Suggestions: Implement real-time search suggestions with completion suggesters and search-as-you-type features.\nSpring Boot Integration: Seamlessly integrate Elasticsearch into your Java applications using Spring Boot.\nSecurity & Scalability: Ensure secure and scalable search solutions with authentication, TLS, and best practices.\nHands-On Project\nApply your knowledge by building a Real World Search Engine with 5 Millions Documents using Spring Boot & Elasticsearch—with features like Auto Complete, Filtering & Providing Relevant Search Results.\nBy the end of this course, you will be confidently designing and deploying large scale, high performance search engines for real-world applications.\nStart your Elasticsearch mastery today!",
      "target_audience": [
        "Software Developers, Software Architects"
      ]
    },
    {
      "title": "Java Multithreading and Parallel Programming Masterclass",
      "url": "https://www.udemy.com/course/java-multithreading-and-parallel-programming-masterclass/",
      "bio": "Learn Multithreading the right way in a complete, step-by-step guide",
      "objectives": [
        "Understand why Multithreading is a real advantage for any Java developer",
        "Understand the basic building blocks of multithreaded applications",
        "Understand when Multithreading can speed up the application and when it can't",
        "Understand the Operating System and the hardware implications of a multithreaded application",
        "Be able to see hands-on, relevant examples, deeply explained, for each concept that's being presented",
        "Be able to connect the concepts learned in this course with real-world projects"
      ],
      "course_content": {
        "Introduction": [
          "Motivation",
          "How to take the most out of this course",
          "Course Prerequisites & Code Resources"
        ],
        "General Multithreading Concepts": [
          "What is a Process?",
          "What is a Thread?",
          "Threads vs Processes",
          "Parallel vs Concurrent vs Asynchronous vs Non-Blocking",
          "Amdahl's Law",
          "[Quiz] - General Multithreading Concepts"
        ],
        "Thread Management": [
          "Thread Creation",
          "Thread Priorities and States",
          "Let's play with Thread Groups",
          "Daemon Threads and User Threads",
          "Thread Exception Handling",
          "Thread Local Variables and Race Conditions",
          "[Project] - Parallel Text File Processing"
        ],
        "Thread Synchronization - Part 1": [
          "What is Thread Synchronization?",
          "The Synchronized keyword",
          "Wait Sets and Notifications (Producer Consumer)",
          "Understanding Locks with Parallel Vector Sum",
          "What are ReadWrite locks and Spin Locks?",
          "Producer Consumer with Condition Variables",
          "Let's Synchronize Jobs with Semaphores",
          "The Atomic Variables",
          "Can you solve the Race Condition?"
        ],
        "Thread Synchronization - Part 2": [
          "Parallel Array Search with CountDownLatch",
          "Crushing Matrixes with Barriers",
          "Parallel Array Processing with Phasers",
          "Shift data between threads with Exchangers",
          "What is a Deadlock and how can we avoid it?",
          "The Volatile Keyword",
          "[Project] - Simulating a MapReduce Job with Threads - Part 1",
          "[Project] - Simulating a MapReduce Job with Threads - Part 2",
          "Fan-out values in a set of threads"
        ],
        "Thread Reusability": [
          "Why we should reuse threads?",
          "Introducing the ThreadPoolExecutor class",
          "Work queues for ThreadPools",
          "Handling exceptions in ThreadPools",
          "Managing rejected tasks in a ThreadPool",
          "Monitoring the Performance of a ThreadPool",
          "Scheduling tasks with ScheduledThreadPoolExecutor",
          "Let's play with ForkJoinPools",
          "Creating Thread Pools with Executors",
          "How to properly size a Thread Pool?"
        ],
        "Parallel Algorithms": [
          "Bringing parallelism to Quick Sort",
          "Can we improve Binary Search through Multithreading?",
          "Parallel Matrix Multiplication - The naive way",
          "Parallel Matrix Multiplication - The optimal way"
        ],
        "Famous Multithreading Problems": [
          "Dining Philosophers Problem",
          "Readers-Writers Problem",
          "Sleeping Barber Problem",
          "No-Starve Mutex Problem"
        ],
        "Multithreading in Real World": [
          "How can we see what's happening inside a JVM?",
          "Introducing Spring Boot Framework (in a nutshell)",
          "Running Asynchronous Workloads on Spring Boot",
          "Introducing RxJava framework (in a nutshell)",
          "Building Parallel Data Pipelines with RxJava2",
          "Unblocking the UI through Multithreading (with JavaFX)"
        ],
        "Virtual Threads and Structured Concurrency in Java 21+": [
          "What are Virtual Threads and how they can be created?",
          "Practical use-case for Virtual Threads in a Spring-Boot Application",
          "Structured Concurrency Explained"
        ]
      },
      "requirements": [
        "Basic Java OOP knowledge (classes, interfaces, methods)",
        "Java 15 (JDK) installed",
        "Intellij Idea Community Edition (preferable), or any other Java IDE installed"
      ],
      "description": "Intro\nThis course is the best online resource you need to become proficient in working with threads and correctly apply Multithreading techniques to your applications, in order to leverage the CPU capabilities of your machines and max out the application throughput.\n\nThe goal of this course is to make you deeply understand the multithreading concepts (that can be re-used in many other languages), applied and exemplified in Java, the language used by many large companies and more than 9 million developers around the world.\n\nAbout myself\nI wrote my first line of code 10 years ago when I was in highschool. I quickly got addicted by how easy you could build useful programs using C# and Windows Forms.\n\nI followed the Computer Science University track where I managed to set the ground knowledge for anything related to Software Engineering (Algorithms, Data Structures, Operating Systems, Multithreading, Distributed Computing, Networking, and many other topics), and I finalized this amazing 6-year learning path by getting a Master's Degree in Parallel and Distributed Systems where I built from the ground a custom Kubernetes Gang Scheduler optimised for running Spark Jobs.\n\nCurrently, I'm a Software Engineer focused on high-scale JVM-based development. I build code used by millions of people around the world.\n\n\nWhy I built this course?\nMultithreading is an advanced topic for any developer. I saw many people struggling to understand things like:\nHow can I speed up the runtime of this code?\nIs it possible to split this problem into multiple independent pieces?\nHow can I measure the performance of this code?\nWhy is my multithreaded code stuck? How can I debug it?\nIt was really hard for me too to understand some of those things, even if I had enough university background in this area.\nBut fortunately, after many years of working with threads, many trial and errors, many profiling sessions and books & articles read, I managed to deeply understand those critical concepts and use them properly in my daily job.\n\nFor those reasons, I thought that building a course where I expose my understanding on Multithreading, would definitely help other people to save time and avoid going into the same pitfalls that I went through.\n\n\nThis course is going to be continuously updated with new information in the multithreading field, but also with the relevant topics that you request in the Q&A section, so you're buying a true learning asset, since you can use this course as a technical reference.\n\n\nWhat is the content course?\nThis course is split into multiple chapters, each one exposing a major topic in Multithreading:\nChapter 1 - General Multithreading Concepts\nIn this chapter we're going to learn the basics of Multithreading - threads, processes, concurrency, parallelism. This chapter is full of visual lectures, designed to provide a unique learning experience.\nChapter 2 - Thread Management\nThis is the first hands-on chapter where we're going to learn how to create threads, how to use thread groups, daemon threads, but also how to build exception control flows, to avoid crashes due to unhandled exceptions.\nChapter 3 - Thread Synchronization - Part 1\nThis chapter goes into the main challenge when working with multiple threads, which is thread synchronization so that we get a predictable output of our application and avoid inconsistent behaviours.\nWe're going to learn basic synchonization tools - locks, wait sets and notifications, read & write locks and semaphores\nChapter 4 - Thread Synchronization - Part 2\nThis chapter is a continuation of the previous one, where we're going to tackle advanced synchronization tools, like Barriers and Phasers, but we're also going to learn about deadlocks and cache coherency enforcement by the use of the volatile keyword.\nChapter 5 - Thread Reusability\nWe can't create an infinite number of threads in our applications, because each thread needs some resources in order to be created, so for that reason we need to reuse threads.\nThis chapter describes the tools we have in Java to deal with thread reusability (Thread Pools) and it goes deep into how to work with them, manage performance, choose the right parameters (tuning) and many others.\nChapter 6 - Parallel Algorithms\nIn this chapter we're going to see how can we improve the runtime of a couple of known algorithms through multithreading.\nWe're going to learn the thinking process of breaking a problem into multiple pieces which can be processed in parallel, and finally merging the results to get the main output.\nChapter 7 - Famous Multithreading Problems\nThe first steps in Multithreading have been done many years ago, where famous computer scientists have tackled the problems which are know part of the Java Threading API.\nIn this chapter, we're going to study a couple of those problems and get the thought process of their solution. This exercise is very valuable and contributes to the overall understanding of parallelism and synchronization.\nChapter 8 - Multithreading in Real World\nThis final chapter of this course tackles the connection between Multithreading and widely used frameworks, like Spring-Boot, JavaRx and JavaFX. We're going to see how can we design a REST API in Spring Boot, which processes requests in an asynchronous way, leveraging multithreading.\nWe're going to see how can we build parallel data flows with JavaRx2, and also how to decouple the UI updates from the background processing in JavaFx, which technically applies to mobile and desktop applications.\n\n\nWhat are the requirements for this course?\nBasic Java Knowledge (including Object Orientated Programming)\nAn IDE of your choice, ideally IntelliJ Idea Community Edition, but you can use any IDE where you can run plain Java code\nWillingness to learn and an open-mind\n\n\nThank you for taking the time to look through this description and I'm looking forward to see you in the first lecture!",
      "target_audience": [
        "Beginner Java Developers who want to enhance their skillset by learning multithreading and parallel programming",
        "Java Developers who want to learn multithreading the right way, by following a well established step-by-step curriculum",
        "Any developer with basic Java knowledge, who want to improve the performance of their applications by leveraging parallel programming",
        "Computer Science / Engineering / PhD Students who want to learn multithreading from the ground"
      ]
    },
    {
      "title": "Learn Git, GitHub and GitHub Actions",
      "url": "https://www.udemy.com/course/learn-git-github-and-github-actions/",
      "bio": "Learn professional software development practices like Continuous Integration and Delivery, GitHub Flow, and more!",
      "objectives": [
        "Using basic and advanced commands in Git",
        "Create repositories locally",
        "Create repositories in GitHub",
        "Create workflows in GitHub Actions to automate tasks",
        "Do continous integrations to build projects and run automatic tests using Github Actions",
        "Do continous delivery to automatically deploy projects when updating the code on GitHub"
      ],
      "course_content": {},
      "requirements": [
        "No experience in Git, GitHub nor GitHub Actions is needed. Does not need a coding background."
      ],
      "description": "In this course we will learn Git, GitHub, and GitHub Actions.\nGit is a technology that enables decentralized version control. It supports professional software development by providing each team member with the complete history of project changes on their local machine. Additionally, it facilitates the creation of branches for new functionalities. Git also allows you to revert to any previous version of the software. If something stops working, you can restore a version that functioned correctly.\nGitHub enables us to share projects and collaborate with others. It’s more than just a code-sharing tool—it facilitates project discussions, task tracking, automation implementation, and more.\nFinally, GitHub Actions enables us to automate various tasks in GitHub. For example, we can compile and run automated tests whenever our repository is updated. We can also automate the deployment of our applications.\nTopics we’ll cover include:\nIntroduction to Git\nBasic commands: init, add, commit\nAdvanced commands, such as cherry-pick, rebase, and stash\nIntroduction to GitHub\nExploring GitHub features like repositories, issues, pull requests, and projects\nIntroduction to GitHub Actions\nUsing triggers to run our workflows\nLeveraging predefined Actions to simplify process automation\nImplementing continuous integration and continuous delivery\nAnd much more!\nBy the end of this course, you’ll have a solid understanding of Git, GitHub, and GitHub Actions, empowering you to manage version control, collaborate effectively, and automate workflows with confidence. Whether you're new to these tools or looking to enhance your skills, this course will provide you with the knowledge and practical experience to be proficient in modern software development. Let’s get started!",
      "target_audience": [
        "People who wants to learn Git, GitHub and GitHub Actions"
      ]
    },
    {
      "title": "Design Patterns in C# Demystified: Creational",
      "url": "https://www.udemy.com/course/creational-design-patterns-in-csharp-demystified/",
      "bio": "A beginner-friendly creational design patterns masterclass",
      "objectives": [
        "Exactly how to code all of the creational design patterns",
        "Recognizing and understanding when to apply which creational design pattern",
        "How to create objects the SOLID way",
        "How to write cleaner and more maintainable C# code",
        "Writing code that allows for the easy addition of new object types without modifying existing code",
        "How to write modular, loosely coupled code that is easy to extend"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Design Patterns",
          "Prerequisites & Code Exercise Files"
        ],
        "Factory Method": [
          "What is the Factory Method Pattern?",
          "Factory Method Class Diagram",
          "Coding the Factory Method Pattern",
          "Coding Exercise: Factory Method"
        ],
        "Abstract Factory": [
          "What is the Abstract Factory Pattern?",
          "Abstract Factory Class Diagram",
          "Coding the Abstract Factory Pattern",
          "Coding Exercise: Abstract Factory"
        ],
        "Builder": [
          "What is the Builder Pattern?",
          "Builder Pattern Class Diagram",
          "Coding the Builder Pattern",
          "Coding Exercise: Builder"
        ],
        "Singleton": [
          "What is the Singleton Pattern?",
          "Singleton Pattern Class Diagram",
          "Coding the Singleton Pattern",
          "Coding Exercise: Singleton"
        ],
        "Prototype": [
          "What is the Prototype Pattern?",
          "Prototype Pattern Class Diagram",
          "Coding the Prototype Pattern",
          "Coding Exercise: Prototype"
        ],
        "Conclusion": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Basic proficiency in C#",
        "Basic understanding of object-oriented programming"
      ],
      "description": "Are you eager to enhance your C# programming skills and create robust, flexible, and maintainable software? Welcome to \"Design Patterns in C# Demystified: Creational\" where we'll delve into the world of creational design patterns and demystify the process of creating powerful and efficient software architectures.\nYou'll explore a range of creational design patterns, including the Factory Method, Abstract Factory, Builder, Singleton, and Prototype patterns.\nBy the end of this course, you will have a solid foundation in the creational design patterns and their applications. You'll understand how to choose the appropriate pattern for a given scenario, and you'll be equipped with the skills to implement these patterns effectively in your C# projects.\nWhat sets this course apart is our unique teaching approach. We blend theory and practical implementation, guiding you through detailed explanations, code demonstrations, and hands-on exercises.\nHere's what you'll gain from enrolling in this course:\nMaster the fundamental concepts of creational design patterns in C#.\nLearn how to apply creational design patterns to solve real-world software engineering challenges.\nAcquire valuable problem-solving skills that will enhance your software development career.\nBuild confidence in writing cleaner, more maintainable, and scalable C# code.\nDon't miss this opportunity to unlock the secrets of creational design patterns in C#. Enroll now and become a proficient C# developer capable of building robust and flexible software architectures!",
      "target_audience": [
        "Software Engineers",
        "Software Developers",
        "Software Architects"
      ]
    },
    {
      "title": "Hands On Kubernetes | Weekend Project Series for Kubernetes",
      "url": "https://www.udemy.com/course/kubernetes-on-weekends/",
      "bio": "Kubernetes Hands-on Web Scraping Project",
      "objectives": [
        "Kubernetes Developers with basic Kubernetes knowledge",
        "Kubernetes Administrators with basic Kubernetes knowledge",
        "Learn Kubernetes with real world scenarios",
        "Complete a hands on project which you can own and mention in your job interviews"
      ],
      "course_content": {
        "Static WebSite": [
          "Project Overview",
          "Deploy To Kubernetes",
          "Expose Deployment via Load Balancer"
        ],
        "Web Scraping": [
          "Introduction to Kubernetes project & basic commands overview",
          "Kubernetes Deployments: Streamlining Application Deployment",
          "Fine-tuning Kubernetes Applications: ENV Variables, Resource Requests & Limits",
          "Configuring Applications with Kubernetes ConfigMaps and Secrets: Best Practices",
          "ConfigMap as Volume: Auto-Refreshing Pod Variables in Kubernetes",
          "Kubernetes EmptyDir: Efficient Data Sharing within Pods",
          "Kubernetes HostPath: Accessing Host Node Resources",
          "Persistent Volumes in Kubernetes: Reliable Data Storage"
        ]
      },
      "requirements": [
        "Basic Kubernetes knowledge is expected",
        "No programming experience needed"
      ],
      "description": "Short Description: Enhance your Kubernetes skills through practical experience with our comprehensive intermediate course. Dive into a web scraping project and explore Kubernetes concepts like Pods, ReplicaSets, Deployments, ConfigMaps, Secrets, volume mounting, and more. Enroll today and level up your Kubernetes practice.\n\n\nDetailed Description:\nLooking to level up your Kubernetes practice and gain practical experience? Join our comprehensive intermediate course designed to provide hands-on learning through a web scraping project. This immersive program will empower you to delve into various Kubernetes concepts and solve real-world challenges within the Kubernetes ecosystem.\nHands-on Problem Solving in Kubernetes: Immerse yourself in a stimulating web scraping project that requires you to think critically and apply Kubernetes concepts to find practical solutions. Through hands-on problem-solving exercises, you'll sharpen your Kubernetes skills and develop a deep understanding of its applications.\nMaster Essential Kubernetes Concepts: Unlock the power of Kubernetes by exploring fundamental components such as Pods, ReplicaSets, and Deployments. Gain insights into their functionalities and learn best practices for scaling, self-healing, and rolling updates. Become proficient in managing and orchestrating containers within a Kubernetes cluster.\nConfigMaps and Secrets Management: Discover how to effectively manage configuration data and sensitive information using ConfigMaps and Secrets. Learn to store and access environment-specific settings, securely handle confidential data like passwords and keys, and decouple configuration from container images. Build resilient and portable applications with ease.\nVolume Mounting for Data Management: Explore the versatility of volume mounting in Kubernetes and master various volume types, including emptyDir, hostPath, and Persistent Volumes. Learn how to seamlessly share and persist data between containers, nodes, and cloud storage solutions. Effectively manage data in your Kubernetes applications.\nLeveraging Environment Variables: Harness the flexibility and configurability of environment variables in Kubernetes. Understand their role in dynamic configurations and how they enable your applications to adapt to changing environments effortlessly. Learn practical examples of utilizing environment variables for enhanced application flexibility.\nReal-time Updates with ConfigMap Mounting: Discover the power of ConfigMap mounting and leverage real-time value updates within your Kubernetes deployments. Eliminate the need for pod restarts and enhance efficiency by reflecting changes in the ConfigMap dynamically. Streamline your application's configuration management.\nEffective Data Storage with EmptyDir and HostPath: Delve into the capabilities of emptyDir and hostPath volumes for efficient data storage within Kubernetes. Explore temporary and permanent storage solutions, including caching and job-specific storage needs. Learn how to optimize data handling in your Kubernetes environment.\nUnlock the Potential of Persistent Volumes: Master Persistent Volumes (PV) and PersistentVolumeClaims (PVC) to provide reliable and scalable storage solutions for stateful applications. Gain practical experience in provisioning, configuring, and managing persistent storage resources, ensuring data integrity and availability.\nEnroll in our comprehensive Kubernetes intermediate course today to gain practical experience, tackle real-world challenges, and elevate your Kubernetes practice. Level up your skills and unlock a world of possibilities within the Kubernetes ecosystem.\n\n\nImportant Concepts Discussed:\nKubernetes tutorial\nKubernetes hands-on practice\nIntermediate Kubernetes course\nKubernetes web scraping\nPod in Kubernetes\nReplicaSet in Kubernetes\nDeployment in Kubernetes\nConfigMaps in Kubernetes\nSecrets in Kubernetes\nVolume mounts in Kubernetes\nPersistent storage in Kubernetes\nKubernetes troubleshooting\nKubernetes best practices\nContainer orchestration\nDevOps with Kubernetes",
      "target_audience": [
        "Students",
        "Kubernetes Developers",
        "Kubernetes Administrators"
      ]
    },
    {
      "title": "Efficient BIM Piping Modeling with Revit and Dynamo",
      "url": "https://www.udemy.com/course/abmrevdynpip/",
      "bio": "Learn Piping Design from Scratch and Implement Time-Saving Autorouting and Coordination Workflows Using Dynamo",
      "objectives": [
        "Create MEP System types for Piping Configure Elements and set parameters",
        "Modify correct or create MEP elements to Models.",
        "How to review that information assets comply with the values set.",
        "Create Dynamo Structures for Autorouting Solutions and Change",
        "Extract or Set Elements to solve the Instalation Creation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Dynamic Modeling for MEP Introduction",
          "Resources"
        ],
        "Piping Configuration": [
          "Disclaimer of Differences with 2024",
          "Pipe Modeling Processes",
          "Properties and Config of Pipe Systems",
          "Inserting Plumbing Fixtures and Mechanical Equipments",
          "Inserting Links",
          "Plumbing Fixture Placement",
          "Sanitary Modeling",
          "Sanitary Instalation Finish Up"
        ],
        "Dynamo Basic Requirements": [
          "Dynamo Overview Presentation",
          "Inputs_Connectors and Fixtures",
          "Connecting to a Main Branch",
          "Create Routing System to Custom Node",
          "Closing Functions for Connections",
          "Updates for Dynamo 2024"
        ],
        "MEP Modeling by Dynamo": [
          "Modeling Ventilation Systems",
          "Ending Ventilation Functions",
          "Ventilation Going Top",
          "Placing Hidraulic Supply",
          "Modeling Hidraulic Suply",
          "Placing Fire Protection Systems",
          "Modeling Fire Protection Systems",
          "Finishing the Function",
          "Updates to Dynamo Revit 2024"
        ],
        "MEP Modeling with Player": [
          "Sanitary Samples with Player",
          "Sanitary Samples going Back",
          "Ventilation Samples with Player",
          "Hidraulic and Fire Protection Samples with Player",
          "Dynamo Updates 2024"
        ]
      },
      "requirements": [
        "Need to know basics on Autodesk Revit",
        "Need to know Dynamo Modeling Basics for Geometry Analysis and Player or any Related",
        "Be Resilient Curious and Creative"
      ],
      "description": "This course is part of a cutting-edge series designed to elevate Dynamo as a central tool in BIM processes across various project types. Tailored for professionals seeking to streamline MEP modeling, this course focuses on using Dynamo for automating and optimizing piping installations.\nWhy MEP Modeling with Dynamo?\nMEP modeling, especially for piping installations, is often a time-consuming process, heavily dependent on architectural and structural components. Changes in these elements often result in rework for MEP models. By integrating Dynamo, you can automate rule-driven processes based on analysis, requirements, and formulas, allowing for seamless updates and more efficient workflows.\nWhat You Will Learn:\nMEP Modeling Crash Course: A quick introduction to piping installation techniques, highlighting best practices within Revit's MEP environment.\nDynamo Logic Fundamentals: A beginner-friendly overview of Dynamo's core logic, preparing you to automate repetitive tasks in Revit.\nPattern Creation for MEP Installations: Learn to develop dynamic piping patterns that auto-route and adapt to design changes effortlessly.\nCustom Nodes & Toolkit Creation: Explore how to build custom Dynamo nodes for specialized tasks, enhancing your MEP modeling toolkit with tailored solutions.\nMEP Generative Design Foundations: Get a glimpse into generative design for MEP, utilizing Dynamo to create adaptive and efficient installations based on defined parameters.\nWhy Take This Course?\nDynamo is increasingly used worldwide to accelerate Revit modeling, streamline project management, optimize quantities, and integrate workflows across different disciplines. This course will help you unlock new possibilities by merging technology and creativity, making MEP modeling faster, smarter, and more adaptable.\nStay Updated & Engage\nThroughout the course, you'll have access to discussion forums for real-time Q&A and be encouraged to stay connected across multiple platforms to keep up with new features and advancements that can transform your work in the long run.\nUnleash the full potential of Dynamo for MEP modeling and enjoy the freedom to innovate, automate, and stay ahead of the curve in a rapidly evolving industry.",
      "target_audience": [
        "MEP Engineers that believe on rules, patterns and that understand that modeling needs to be a product of analysis and logic not of handcrafted hours of repetition",
        "MEP Engineers that what to solve or model elements by Dynamo use, and change their performance forever",
        "Constructors and Engineers that want to see the capabilities for MEP modeling.",
        "Architects that would seek to develop fully integrated projects"
      ]
    },
    {
      "title": "Java Spring AI, Neo4J, and OpenAI for Knowledge Graph RAG",
      "url": "https://www.udemy.com/course/java-spring-ai-neo4j-openai-knowledge-graph-rag/",
      "bio": "RAG (Retrieval Augmented Generation) with Vector Similarity and Knowledge Graph using Spring AI, Neo4J, and Temporal",
      "objectives": [
        "Understand Retrieval Augmented Generation (RAG) for Generative AI",
        "Understand Knowledge Graph and How It Enhances RAG to Form GraphRAG",
        "Implements Retrieval Augmented Generation (RAG) Using OpenAI, Spring Boot 3 and Spring AI",
        "Implements Knowledge Graph RAG Using Neo4j"
      ],
      "course_content": {
        "Introduction": [
          "Welcome To This Course",
          "Course Structure & Coverage",
          "Technology In This Course",
          "Download Source Code & Scripts",
          "Tips : How To Get Maximum Value From This Course"
        ],
        "Using Artificial Intelligence (AI) Assistant": [
          "AI Assistant In This Course",
          "About This Section",
          "Important Points on Course With AI Assistant",
          "Download AI Prompts"
        ],
        "How AI Assistant Change The Way We Work": [
          "AI Assistant in Software Engineering",
          "AI Assistant in Software Testing",
          "ChatGPT & Github Copilot Introduction",
          "ChatGPT & Github Copilot Installation"
        ],
        "Tools Installation": [
          "What & Why Docker",
          "Install Visual Studio Code",
          "Visual Studio Code With GitHub Copilot"
        ],
        "Generative AI & Large Language Models": [
          "Generative AI (Gen AI)",
          "Large Language Models (LLM)",
          "Prompt Engineering",
          "LLM Limitations"
        ],
        "Retrieval Augmented Generation (RAG)": [
          "Retrieval Augmented Generation (RAG) Introduction",
          "RAG System Design"
        ],
        "Spring AI First Steps": [
          "Start With Spring AI",
          "Hello OpenAI"
        ],
        "Basic RAG": [
          "Basic Indexing Pipeline - Theory",
          "Basic Indexing Pipeline - Hands On",
          "Basic Indexing Pipeline - Test The Application",
          "Basic RAG Processor - Theory",
          "Basic RAG Processor - Hands On",
          "Basic RAG Processor - Test The Application"
        ],
        "Vector RAG": [
          "Vector Indexing Pipeline - Theory",
          "Neo4j Installation",
          "Vector Indexing Pipeline - Hands On",
          "Vector Indexing Pipeline - Test The Application",
          "Vector RAG Processor - Theory",
          "Vector RAG Processor - Hands On",
          "Vector RAG Processor - Test The Application",
          "It Works, But ...",
          "Avoid Duplicates",
          "Test The Enhanced Pipeline",
          "Tips: Vector Store"
        ],
        "Reliable Pipeline App": [
          "Dedicated Pipeline App - Hands On",
          "Dedicated Pipeline App - Test The Pipeline"
        ]
      },
      "requirements": [
        "Basic Java Programming",
        "Basic Spring Boot Programming",
        "Basic Understanding of Using Large Language Models like OpenAI"
      ],
      "description": "Enhance Your Generative AI Expertise with Retrieval Augmented Generation (RAG) and Knowledge Graph\n\n\nRetrieval-augmented generation (RAG) is a powerful approach for utilizing generative AI to access information beyond the pre-trained data of Large Language Models (LLMs) while avoiding over-reliance on these models for factual content. The effectiveness of RAG hinges on the ability to quickly identify and provide the most relevant context to the LLM. Knowledge Graphs transforms RAG systems with improved performance, accuracy, traceability, and completeness.\nThe RAG with Knowledge Graph, also known as GraphRAG, is an effective way to improve the capability of Generative AI. Take your AI skills to the next level with this ultimate course, designed to help you unlock the potential of LLMs by leveraging Knowledge Graphs and RAG systems.\n\n\nIn this course, you will learn:\nIntroduction to RAG Systems: Discover why Retrieval Augmented Generation is a groundbreaking tool for enhancing AI.\nFoundations of Knowledge Graphs: Grasp the basics of knowledge graphs, including their structure and data relationships. Understand how these graphs enhance data modeling for RAG.\nImplementing GraphRAG from Scratch: Build a fully operational RAG system with knowledge graphs. Use LLMs to extract and organize information.\nBuilding Knowledge From Multiple Data Sources: Learn to integrate knowledge graphs with unstructured and structured data sources.\nQuerying Knowledge Graphs: Gain practical experience with leading tools and techniques.\n\n\nTechnology Highlights:\nSpring AI: A new technology from famous Java Spring to help engineers work easily with various Generative AI and Large Language Models\nOpen AI: The innovative Generative AI that everyone loves. A groundbreaking tool for Large Language Models and AI.\nNeo4J: Graph database and Vector store that integrates easily with Spring AI to form RAG and Knowledge Graph\nTemporal: A workflow orchestrator platform to help engineers build a reliable GrahRAG pipeline.\n\n\nMastering advanced AI techniques offers a significant edge in today's fast-paced, data-driven world. This course provides actionable insights to enhance your career or innovate in your field.",
      "target_audience": [
        "Software Developers / Engineers (particularly on Java Spring)",
        "AI Enthusiasts",
        "Technical Lead / Managers"
      ]
    },
    {
      "title": "C# Minimal API in .NET 6 with Visual Studio 2022",
      "url": "https://www.udemy.com/course/c-minimal-api/",
      "bio": "Create C# newest feature \"Minimal API\", write C# API's as never before. Create project from 0 to end in newest .NET 6",
      "objectives": [
        "Learn latest C# 10 and .NET 6 features.",
        "Create project in newest Visual Studio 2022.",
        "Build C# Minimal API from 0 to end.",
        "Compare minimal API project with standard API project."
      ],
      "course_content": {
        "New project and cars endpoints": [
          "November 2021 great news",
          "Presentation: Minimal API",
          "Presentation: Project plan",
          "Presentation: Tools which we will use",
          "Text: Websites for downloading tool which we will use in project",
          "Demo: GitHub repository",
          "Text: My GitHub account page for repositories",
          "Demo: Download repository",
          "Demo: Create new .NET 6 project",
          "Demo: New project files overview",
          "Demo: Project Board",
          "Demo: GetCars minimal endpoint",
          "Demo: Remaining CRUD minimal endpoints",
          "Demo: Add comments",
          "Demo: Task 1.1 completed",
          "Demo: Exercise 1",
          "Text: Exercise 1",
          "Demo: Exercise 1 end",
          "Text: Exercise 2 solution files",
          "Demo: Regions"
        ],
        "Persistance": [
          "Demo: Project board",
          "Demo: DbContext and RaceDb",
          "Demo: Code database migration",
          "Demo: CreateCar and GetCars endpoints persistence",
          "Demo: Remaining endpoints persistence",
          "Demo: Project board",
          "Demo: Exercise 2",
          "Text: Exercise 2",
          "Text: Exercise 2 solution"
        ],
        "Car race": [
          "Demo: Project board",
          "Demo: Car race model",
          "Demo: Code first migration",
          "Demo: HTTP get endpoints",
          "Demo: Remaining CRUD endpoints",
          "Demo: Error fix",
          "Demo: Implementation test",
          "Demo: Add car to race",
          "Demo: Start race",
          "Demo: Commit changes",
          "Demo: Exercise 3",
          "Text: Exercize 3 solution"
        ],
        "Race algorithm": [
          "Demo: Project board",
          "Demo: Run race method",
          "Demo: Test implementation",
          "Demo: Project board",
          "Demo: Exercise 4",
          "Text: Exercise 4",
          "Text: Exercise 4 solution",
          "Demo: Minimal API final look"
        ]
      },
      "requirements": [
        "1 year of programing in C#",
        "Half year of programing in ASP NET"
      ],
      "description": "November 2021 represents significant date for every developer interested in C# and its related tools and technologies.\nOn November 2021 Microsoft lunched new C# version, version 10, new .NET CORE version, Version 6, new Visual Studio, version 2022, and many more.\nOne of the greatest changes is lunch of minimal API's! A new minimal way of writing C# API's.\n\n\nThis changes everything, from the way of thinking about C# API to its new minimal look and feel.\n\n\nLets together get skilled in all of the C# new technologies in a projects in which we will create new .NET 6 minimal API from zero to the end.\n\n\nWe will start with an preexisting regular REST .NET 5 C# web API which we will use for features guidance's and beside it create new .NET 6 minimal API project which we will compare to the old ways of writing API's.\n\n\nI'm Luke, Senior Full Stack Software Engineer and lets together get skills and knowledge for building C# newest minimal API's.\n\n\nC#\n\n\nC# 10 adds the following features and enhancements to the C# language:\nRecord structs\nImprovements of structure types\nInterpolated string handlers\nglobal using directives\nFile-scoped namespace declaration\nExtended property patterns\nImprovements on lambda expressions\nAllow const interpolated strings\nRecord types can seal ToString()\nImproved definite assignment\nAllow both assignment and declaration in the same deconstruction\nAllow AsyncMethodBuilder attribute on methods\nCallerArgumentExpression attribute\nEnhanced #line pragma\n\n\n.NET 6\n\n\n.NET 6 delivers the final parts of the .NET unification plan that started with .NET 5. .NET 6 unifies the SDK, base libraries, and runtime across mobile, desktop, IoT, and cloud apps. In addition to this unification, the .NET 6 ecosystem offers:\nSimplified development: Getting started is easy. New language features in C# 10 reduce the amount of code you need to write. And investments in the web stack and minimal APIs make it easy to quickly write smaller, faster microservices.\nBetter performance: .NET 6 is the fastest full stack web framework, which lowers compute costs if you're running in the cloud.\nUltimate productivity: .NET 6 and Visual Studio 2022 provide hot reload, new git tooling, intelligent code editing, robust diagnostics and testing tools, and better team collaboration.\n.NET 6 will be supported for three years as a long-term support (LTS) release.\nPreview features are disabled by default. They are also not supported for use in production and may be removed in a future version. The new RequiresPreviewFeaturesAttribute is used to annotate preview APIs, and a corresponding analyzer alerts you if you're using these preview APIs.\n.NET 6 is supported by Visual Studio 2022 and Visual Studio 2022 for Mac (and later versions).\n\n\nVisual studio 2022\n\n\nWith Visual Studio 2022, you'll always get the best-in-class tools and services available for any developer, any app, and any platform. Whether you're using Visual Studio for the first time or you've been using it for years, there's a lot to like in our newest version!",
      "target_audience": [
        "For beginners, medior and senior technical professionals who are interested in latest C# features."
      ]
    },
    {
      "title": "Jakarta EE (formerly Java EE) Quick Start Course",
      "url": "https://www.udemy.com/course/jakarta-ee-formerly-java-ee-quick-start-course/",
      "bio": "Your quick guide to starting enterprise Java development with the Jakarta EE (formerly Java EE) platform",
      "objectives": [
        "Build a simple Todo app showcasing the 3 canonical Java EE APIs",
        "Be able to use the Java Persistence API to persist data",
        "Be able to use the Java Persistence API to query data from a database",
        "Be able to use the Contexts and Dependency Injection (CDI) API to manage dependencies",
        "Be able to use the Java API for RESTful Web Services to create simple web services"
      ],
      "course_content": {
        "Introduction": [
          "Setting the Stage",
          "What are we going to build?",
          "The Real Goal of this course"
        ],
        "Data Modelling with JPA": [
          "A Jakarta EE App Template",
          "A Jakarta EE Hello World",
          "The 3 Canonical Jakarta EE APIs",
          "Let's Create the Todo Entity",
          "Mapping the Primary Key Column",
          "Customizing the Mapping Process",
          "Transient Entity Fields",
          "JPA Entity Relationships",
          "Mapping Todo and TodoUser Class Relationships",
          "Fleshing Out the TodoUser Entity",
          "An Intro to JPA Entity Inheritance",
          "Implementing JPA Inheritance",
          "Persistence Unit, Persistence Context and the EntityManager Interface",
          "Creating the Persistence Unit",
          "Datasources Definition and the Persistence Unit"
        ],
        "Business Components with CDI": [
          "Building Jakarta EE Business Components - A Primer",
          "The EntityManager Interface API Documentation",
          "Business Components with CDI - The Persistence Service Class",
          "Activating CDI in Jakarta EE",
          "Injecting the JPA EntityManager Interface",
          "Implementing the PersistenceService Class - Transactional Contexts",
          "Implementing Persistence Service",
          "Implementing QueryService - Dynamic Queries",
          "Implementing QueryService - NamedQueries",
          "Implementing QueryService - FindById",
          "Linking a Todo to a TodoUser"
        ],
        "RESTful Web Services with JAX-RS": [
          "Activating RESTful Web Service in Java EE",
          "The TodoResource Class",
          "Recap",
          "Mapping HTTP Methods to JAX-RS Resources",
          "Saving a Todo Object Resource Method",
          "Save TodoUser Resource Method",
          "Get A User's Todos Resource Method",
          "Passing Parameters to JAX-RS REST Resources",
          "Insomnia Rest Client",
          "Let's Run the App",
          "Summary",
          "More Jakarta EE (formerly Java EE) Courses"
        ]
      },
      "requirements": [
        "Be able to program in the Java Programming Language - Standard Edition",
        "Have at least Java 8 installed",
        "Have Maven installed",
        "Any Java IDE that supports Maven",
        "Internet Connection"
      ],
      "description": "WARNING: Do NOT take this course if you DON'T want to jump start your enterprise Java development career in 2019!\nWhat?\nSo you've learned the Java Programming Language, Standard Edition. You know all there is to know about the Java syntax and everything. Now you're wondering, how do I develop real world apps with Java? It can all seem overwhelming at first, because let's face it, the Java ecosystem is HUGE. You definitely want to move your Java career from 0-1, but not sure where to start?\nJakarta EE (formerly Java EE) Quick Start Course is your quick guide to developing server side, enterprise apps with Java using the Jakarta EE (formerly Java EE) platform.\nWhether you’re a newly minted Java developer or an experienced one, Jakarta EE (formerly Java EE) Quick Start Course is the easiest and fastest way to get initiated into the art of modern software development with the industry gold standard Jakarta EE (formerly Java EE).\nWhat will you learn?\nIn this fast paced initiation to Jakarta EE (formerly Java EE) software development, you’ll learn\nAbout the 3 canonical Jakarta EE APIs - JPA, CDI, JAX-RS\nHow to map Plain Old Java Objects to relational database tables\nHow to persist data into relational database tables\nHow to query data from relational database tables\nHow to create loosely coupled business components with the CDI API\nHow to create modern, powerful and portable RESTful web services with the JAX-RS API\nThe theoretical underpinnings of Java EE\nFully working source code available with each example\nGet started today!\nJakarta EE (formerly Java EE) Quick Start Course is your fastest way to get started developing modern, portable and powerful server side Java apps with the industry standard Jakarta EE (formerly Java EE) platform.\nGet started on your journey to professional server side Java software development with Jakarta EE (formerly Java EE) today with Jakarta EE (formerly Java EE) Quick Start Course.\nEnroll now and I'll see you in lesson 1.",
      "target_audience": [
        "New Java SE developers looking to transition to Enterprise Java",
        "Beginner Java developers curious about Jakarta EE (formerly Java EE)",
        "Anyone who needs a quick overview of enterprise Java Development with Jakarta EE (formerly Java EE)"
      ]
    },
    {
      "title": "Domain Driven Design",
      "url": "https://www.udemy.com/course/guide-to-domain-driven-design/",
      "bio": "Domain Driven Design with theory and practical real world example",
      "objectives": [
        "DDD elements - Value Objects, Entities, Aggregates",
        "Practical examples with Golang and PHP",
        "How to define Bounded Context and Ubiquitous language of your domain",
        "How to simplify their domain to reduce the technical debt"
      ],
      "course_content": {
        "DDD Introduction": [
          "How DDD Come To The Stage Of Computer Science and Eric Evan's Book"
        ],
        "Entities, Value Objects, and Aggregates (Golang)": [
          "Entities",
          "Value Objects",
          "Aggregates"
        ],
        "OpenApi": [
          "OpenApi Generator to Build Your Api"
        ],
        "gRPC": [
          "gRPC and Protocol Buffers",
          "gRPC example with Golang",
          "Protocol Buffers Encoding",
          "Error Handling"
        ],
        "Resiliency": [
          "Resilient Interservice Communication",
          "Resiliency - Timeout pattern",
          "Timeout Pattern continues",
          "Timeout Pattern Demo",
          "Retry Pattern"
        ],
        "Alternatives - Hexagonal Architecture": [
          "Whats Hexagonal Architecture and Blog Service",
          "Adapters of Blog Service",
          "gRPC Adapter For The Blog Service"
        ],
        "DDD in PHP": [
          "Who am I and why you should take this course",
          "Essential tools should be installed before starting to the course",
          "Project details and API Provider",
          "Why do we need to use an ORM and Doctrine setup",
          "Complete code from the project",
          "How to reach me out",
          "Bounded context and ubiquitous language of DDD",
          "Model Driven Design",
          "Check Point"
        ],
        "Docker": [
          "Creating Dockerfile to build the Docker image for our app",
          "Generating docker-compose and container parameters",
          "Running Docker containers with Makefile"
        ],
        "Preparing development environment": [
          "Domain Driven Architecture and Folder Structure",
          "Doctrine schema definitions"
        ],
        "Domain Layer and Bounded Context": [
          "Entity definitions",
          "Running Doctrine schema update and creating some fixtures",
          "Hexagonal Architecture and some DDD elements"
        ]
      },
      "requirements": [
        "At least good at one programming language"
      ],
      "description": "We will first focus the theory of DDD and understand the essentials.\n\nThere are many examples to grasp the theory. Those are mostly written by Golang.\n\nThen going to try to create a base for a scalable backend with using PHP. We will separate the app to 3 main parts Application, Domain and Infrastructure. And going to try not to stay tightly coupled to the framework itself but still going to use the all features Symfony is providing us.\n\nApplication layer will be a transition between the outside world to our Domain and going to isolate everything domain related inside our DDD.\n\nAlso will be taking care of authentication with JWT and going to use Symfony Security bundle to maintain the user access definitions to resources.\nWill be writing Unit tests and use a framework for mocking/stubbing the test doubles.\n\nIn Infrastructure layer we are going to use Doctrine as ORM and try to not to stay tightly coupled to the library but stay as flexible as possible so we can use the same domain logic easily whenever we want with some other library or even with plain SQL queries.\n\nSince we are going to implement a rest api, we are also going to use an api provider to get the data for our game. To access the api provider we will implement some commands with using Symfony Command component.",
      "target_audience": [
        "Who is looking for how to simplify their domain to reduce the technical debt",
        "Programmers who is looking for theory but also practical usage of DDD"
      ]
    },
    {
      "title": "Learn Cisco AppDynamics (APM & DevOps)",
      "url": "https://www.udemy.com/course/the-complete-intro-to-cisco-appdynamics-apm-devops/",
      "bio": "Quickstart Investigations into production issues, user behaviour and application performance",
      "objectives": [
        "How to Integrate AppDynamics into your DevOps lifecycle (we use a nodejs app for example)",
        "You will setup AppDynamics agents and monitor the web applications",
        "Understand and Resolve Errors detected by AppDynamics",
        "How AppDynamics enables APM, RUM and Synthetic Monitoring",
        "Understand how the architecture of the App-dynamics agent works",
        "Understand the Pro's and Con's of using Apdex Score",
        "How to use the baselining feature in App-dynamics"
      ],
      "course_content": {
        "Introduction": [
          "Why Use Appdynamics",
          "Introduction",
          "AppDynamics in your DevOps Lifecycle",
          "Disclaimer",
          "AppDynamics Architecture"
        ],
        "The Setup": [
          "Section Intro",
          "Sign In and Sign Up",
          "Application Overview",
          "Setting Up the Application",
          "Git Bash for Windows",
          "Further Setup",
          "Setup a Java App (Optional)"
        ],
        "AppDynamics for the DevOps Engineer/Developer": [
          "Section Intro",
          "What is APM",
          "Playing with the user Interface",
          "Environment Management: Tiers and Nodes",
          "Debugging",
          "Database Management",
          "Apdex",
          "Baseline Management",
          "Alerting Part 1",
          "Alerting Part 2",
          "End User Monitoring",
          "Course-Quiz",
          "Assignment - Building Dashboards"
        ],
        "Real Life use Cases of AppDynamics": [
          "Section Overview",
          "Case Study - Expedia",
          "Case Study - Pizza Pizza"
        ],
        "Reference Guide and How To Lectures": [
          "Section Overview",
          "TomCat Server Setup",
          "Setting up End User Monitoring",
          "MongoDb Setup",
          "MySQL Setup"
        ],
        "Closing Notes": [
          "GoodBye?"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "JVM on your machine for a couple of lectures (Optional)"
      ],
      "description": "AppDynamics is the leading monitoring service out there, whether it's databases, operating systems, servers or browsers, AppDynamics covers it all.  If you are an aspiring APM Guru, this course is for you! AppDynamics customer base and popularity is sky-rocketing, be ahead of the curve and a handle on it! Cisco AppDynamics was named a leader in 2020 Gartner Magic Quadrant for 8th time.\nThe course will guide you through the architecture of AppDynamics and where it should fit in your DevOps Lifecycle. You will create an AppDynamics account as well as install an agent in your application. The data the agent reports will be used to calculate metrics like Apdex Scores, SLO's, SLI's and SLA's. We will make use of the automated baselining feature as well.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.\nThe Introduction\nUnderstand why we should use AppDynamics and what it's customer base looks like. Everything in this course will be straight from the free trial version, so you you don't need to buy anything.Sign up for AppDynamics and understand where it fits in the larger scheme of things, your DevOps architecture. What does the AppDynamics architecture look like?\nThe Setup\nUnderstand how to setup an application to go along with the lectures. In particular, the setup of an online shoe store. Also setup an agent in your application which will then send metrics and other data to AppDynamics on the cloud.\nAppDynamics for an Engineer\nWhere does AppDynamics fit in your DevOps cycle? What are the build stages and how does AppDynamics aid each one? Get into your role as a rising developer in an organizations and battle through all your problems using Cisco AppDynamics. These problems will range from production issues to slow database queries. Investigate everything with ease. Move on to some more advanced concepts like Apdex Scores, and automated baselining. Once you master alerting you will understand why AppDynamics is the \"central nervous system\" of your application suite.\nReal Life use Cases of AppDynamics\nWhere and when do we apply AppDynamics? While the decision is yours, take a look at how some well-known names in the industry do it.\nReference Guide\nThink of this section as a reference guide, like a dictionary. Whenever you want to learn how to set something up, come here\nThis is an into level course, if you have already taken a course on APM, this may not be the best fit for you.",
      "target_audience": [
        "This course is great if you're in an Ops or DevOps position and you want to learn about DataMonitoring via AppDynamics"
      ]
    },
    {
      "title": "Splunk Developer and Admin Course for Beginners",
      "url": "https://www.udemy.com/course/splunk-developer-and-admin-course-for-beginners/",
      "bio": "A complete course on Splunk Data Analytics Tool",
      "objectives": [
        "Splunk Functionality",
        "Splunk vs Elk vs Sumologic",
        "Career in Splunk",
        "Splunk Components",
        "Splunk Architecture",
        "Data Models",
        "Splunk Alerts",
        "Events",
        "Tags",
        "Lookups",
        "Fields",
        "Pivots",
        "Licensing in Splunk",
        "Licence Master ,Slave and Pool",
        "Configuration Files",
        "Splunk Admin Roles and Responsibilities",
        "Splunk Interview Questions"
      ],
      "course_content": {
        "Module 0": [
          "0.1 Splunk Installation",
          "0.2 Splunk Interface"
        ],
        "Module 1": [
          "1.1 Need of Splunk",
          "1.2 What is Splunk",
          "1.3 Splunk Functionality",
          "1.4 Splunk vs Elk vs Sumologic",
          "1.5 Splunk Career",
          "1.6 Splunk Use Cases",
          "1.7 Stages in Data Pipeline",
          "1.8 Splunk Components",
          "1.9 Splunk Architecture",
          "1.10 Splunk Knowledge Objects",
          "1.11 Splunk Knowledge Objects-Data Models",
          "1.12 Splunk Knowledge Object- Splunk Alerts",
          "1.13 Splunk Knowledge Object- Events",
          "1.14 Splunk Knowledge Object- Event Types",
          "1.15 Splunk Knowledge Object- Tags",
          "1.16 Splunk Lookups",
          "1.17 Create and Configure Splunk Lookups",
          "1.18 Splunk Fields",
          "1.19 Licensing in Splunk",
          "1.20 Licence Master ,Slave and Pool",
          "1.21 Data Ageing",
          "1.22 Configuration Files",
          "1.23 Concepts Related to .conf File",
          "1.24 Common Configuration files",
          "1.25 Index Time v/s Search Time",
          "1.26 Splunk Admin Roles and Responsibilities",
          "1.27 Pivot",
          "1.28 Pivot Editor",
          "1.29 Example of Pivot",
          "1.30 Splunk Report"
        ],
        "Module 2 Resources": [
          "Splunk Interview Questions"
        ]
      },
      "requirements": [
        "Install software in a Windows or Linux environment.",
        "Understand Basic Windows concepts.",
        "Basic Computer programming Terminologies",
        "Knowledge of Data Analytics concepts is beneficial but not essential.",
        "Must have good knowledge of system administration."
      ],
      "description": "Splunk is a software platform to search, analyze and visualize the machine-generated data gathered from the websites, applications, sensors, devices etc. which make up your IT infrastructure and business.\nIf you have a machine which is generating data continuously and you want to analyze the machine state in real time, then how will you do it? Can you do it with the help of Splunk? Yes! You can. Here you can see the image, it will help you relate to how Splunk collects data.\nReal time processing is Splunk’s biggest selling point because, we have seen storage devices get better and better over the years, we have seen processors become more efficient with every ageing day, but not data movement. This technique has not improved and this is the bottleneck in most of the processes within organizations.\nThis course is intended to briefly understand the growth of Splunk and the massive career opportunities it presents in possibly every domain of big data. Just in case you didn’t know already, Splunk is a platform that is used to monitor and analyze big data generated by an organization’s technology infrastructure, security systems, business operations, and other sources. Of course, SMAC from your organization generates a truck full of data that Splunk is hungry for. Splunk collates, indexes and processes all of this data to help organizations gain valuable operational intelligence from huge quantities of machine-generated data.\nForbes says that big data related jobs pertaining to unstructured machine data and Internet of Things (IoT) have seen unprecedented growth percentages in excess of 704% globally over the last five years. Specific job roles that promise lucrative Splunk careers include:\nSoftware Engineer\nSystems Engineer\nProgramming Analyst\nSolutions Architect\nSecurity Engineer\nTechnical Services Manager\n\n\nIf you are a Splunk enthusiast (or aspire to be one anytime soon), the future is filled with possibilities that are challenging and lucrative. This is just the perfect time to learn and master Splunk. A career in Splunk has three primary spokes – Architect, Administrator and Developer.",
      "target_audience": [
        "Software Engineer",
        "Systems Engineer",
        "Programming Analyst",
        "Solutions Architect",
        "Security Engineer",
        "Technical Services Manager"
      ]
    },
    {
      "title": "NextAuth v5 - The Complete Guide to authentication",
      "url": "https://www.udemy.com/course/nextauthjs-v5-the-complete-guide-to-authentication/",
      "bio": "Learn NextAuth v5 aka AuthJs and get complete understanding of how to do Authentication in web apps like Next js v14",
      "objectives": [
        "Learn how to setup NextAuth js in a Next js App",
        "Learn how to use a number of OAuth providers like Google, Github, Zoom etc. to Authenticate Users",
        "Learn how to use email as a way to authenticate users",
        "Get a deeper understanding of how sessions work and how to put custom data in them",
        "Learn how to use middleware in Next js to apply authentication",
        "Design a multi user system where multiple users belong to an organization and see the same data",
        "Design a custom backdoor page to your Next js application so you can log in and impersonate as any user"
      ],
      "course_content": {
        "Getting Started": [
          "Getting Started"
        ],
        "Protecting Information": [
          "Protecting Information"
        ],
        "More OAuth": [
          "More OAuth"
        ],
        "Database Adatper": [
          "Database Adapter"
        ],
        "Email Provider": [
          "Email Provider"
        ],
        "Custom Credentials": [
          "Custom Credentials"
        ],
        "Multi-User / Organization Modal": [
          "Multi-User / Organization Modal"
        ],
        "Backdoor page": [
          "Backdoor page"
        ],
        "Wrap up": [
          "Wrap up"
        ]
      },
      "requirements": [
        "ReactJS knowledge is recommended",
        "Familiarity with Next js will be helpful, but is not required",
        "NO Prior NextAuth js knowledge is required"
      ],
      "description": "Welcome to the complete soups to nuts comprehensive NextAuth  course! I'm Sandeep, a seasoned software developer and together, we will delve into the ins and outs of user authentication while using the latest version, version 5 of NextAuth  and latest version v14 of NextJs\n\n\nWe kick off by exploring how to establish OAuth flow for your application. Learn how to seamlessly integrate authentication from various providers such as Google, Github, Zoom, and more.\n\n\nNext, we'll dive into the world of passwordless email authentication. Here we will be able to send user an email by using providers like Mailgun, sangria etc. and log them right in.\n\n\nWe will then setup custom username-password authentication system tailored to your specific needs.\n\n\nFrom there we will move to configuring database adapters to persist all user information in your chosen database.\n\n\nNext we will dive in to session management using JSON Web Tokens (JWT), and learn how to enhance them by putting custom information within the session.\n\n\nWhile working on NextAuth we will also be learning how to intergrate it into  NextJs v14 which utilizes the \"app\" structure. We will learn how to build public and protected routes, implementing authentication in the API layer, and creating a backdoor access for user impersonation.\n\n\nI invite you to embark on this learning journey with me. Try out the course, and I look forward to engaging with you in our course chat.\n\n\nThank you for joining, and let's dive into the world of NextAuth together!",
      "target_audience": [
        "React & Next js developers who want to learn how to add Authentication to their app",
        "React & Next js developers looking to learn NextAuth js",
        "Web developers in general who want to learn authentication & authorization."
      ]
    },
    {
      "title": "Creating GraphQL APIs with ASP.Net Core for Beginners",
      "url": "https://www.udemy.com/course/creating-graphql-apis-with-aspnet-core-for-beginners/",
      "bio": "Understood GraphQL specifications as well as use of GraphQL dotnet library for creating GraphQL API & Client",
      "objectives": [
        "Understood GraphQL specifications",
        "Write GraphQL queries",
        "Create own GraphQL APIs",
        "Consume GraphQL API from dotnet client"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is GraphQL?",
          "GraphQL vs REST"
        ],
        "Querying Data from GitHub": [
          "Basic GraphQL Query",
          "Arguments & Alias",
          "Using Fragments",
          "Inline Fragments",
          "Using Variables",
          "Inline Variables",
          "Using Directives",
          "Using Paging"
        ],
        "Schema & Types": [
          "Scalar and Object Type",
          "Interface and Union Type",
          "Enums and InputObject type",
          "List and Not Null"
        ],
        "Advance GraphQL Concepts": [
          "Introspection: Type",
          "Introspection: Schema & TypeName",
          "Validations in GraphQL",
          "Mutation",
          "Subscription"
        ],
        "Create own GraphQL APIs": [
          "Setting up Entity Framework",
          "Setting up GraphQL",
          "Create Types",
          "Create First Query",
          "Query with Parameter",
          "Nested field in Query"
        ],
        "Mutation & Subscriptions": [
          "Mutation: Input Type",
          "Mutation: Create",
          "Mutation: Update & Delete",
          "Subscription: Create",
          "Subscription: Update"
        ],
        "Paging & Authantication": [
          "Using Paging",
          "Using Sorting",
          "Authantication - 1",
          "Authantication - 2",
          "Authantication - 3",
          "Error Handling",
          "Metrics"
        ],
        "Using Client": [
          "Create Project",
          "Using Query",
          "Using Mutation"
        ],
        "Conclusion": [
          "Conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic concepts of C#",
        "Basic ASP dotnet development",
        "Visual Studio 2019"
      ],
      "description": "GraphQL is a language for APIs that enables you to query and manipulate data easily through an intuitive and flexible syntax.\nGraphQL is an open-source data query and manipulation language for APIs.\nGraphQL was developed internally by Facebook in 2012 before being publicly released in 2015.\nIt is used in many server-side languages like Java, Node, Ruby, Python, PHP, Go, and obviously dotnet too. And APIs created using GraphQL can easily accessible by almost languages like JavaScript, Android, Swift, Python, PHP, Java, and dotnet.\nIn a GraphQL request, you specify how to structure the data when it’s returned by the server. This makes it possible for you to query only the data you need, in the format you need. This results in better network utilization and performance, especially on mobile devices.\nThe course outline includes:\nIntroduction to GraphQL. And understood how it’s different from RESTful APIs.\nCreate basic GraphQL queries. As well as with Arguments and aliases.\nUsing fragments and inline fragments on the type to select specific fields.\nUsing variables for passing data via query variable, and directives to obtain fields based on condition.\nUse paging to retrieve data as page wise and with sorting order.\nUnderstood what schema is and learn about each type supported by GraphQL.\nUse of Introspection for obtaining schema or type related details.\nCreate a server-side project with Entity Framework core and GraphQL dotnet library.\nUse mutation for insert, update, or delete operation.\nUsing subscription for creating an event stream.\nImplement Authentication for queries based on JWT Identity.\nValidation of query and Exception handing from the server-side.\nAnd executing queries and mutations from client-side project using C#.",
      "target_audience": [
        "This is for newbies who want to learn GraphQL",
        "Developer who know C# & ASP dotnet and want to create GraphQL APIs",
        "Person who want to understand GraphQL specifications",
        "Developer who want to create own GraphQL APIs"
      ]
    },
    {
      "title": "Snowflake Agentic AI: Cortex Analyst, Search & AI Agents",
      "url": "https://www.udemy.com/course/snowflake-ai-agents/",
      "bio": "Master Snowflake’s - build and deploy Agents, leverage Cortex Analyst & Cortex Search, Unlock insights with Intelligence",
      "objectives": [
        "Build and deploy Snowflake Agents to automate tasks and answer queries in natural language.",
        "Use Cortex Analyst to query and analyze data without writing complex SQL.",
        "Implement Cortex Search for semantic and full-text search across structured and unstructured data.",
        "Apply Snowflake Intelligence to summarize, detect trends, and generate insights.",
        "Integrate Snowflake AI features with external dashboards, APIs, and applications."
      ],
      "course_content": {
        "Generative AI Fundamentals": [
          "What is Generative AI?",
          "Large Language Models (LLMs) Explained",
          "Key GenAI Concepts: Tokens, Prompts, and Context",
          "Popular LLMs: GPT, Claude, Gemini Overview"
        ],
        "Snowflake Platform Fundamentals": [
          "Create Snowflake Account",
          "Snowflake Architecture Overview",
          "Create Snowflake's Database Tables",
          "Copy Tables",
          "Snowflake Stage",
          "Snowflake Intelligence DB Creation",
          "Snowflake AI & ML Introduction",
          "Snowflake Enable Models"
        ],
        "Introduction to Snowflake Agents": [
          "What are AI Agents?",
          "What are Snowflake Agents?",
          "What are Snowflake Analyst?"
        ],
        "Snowflake Analyst": [
          "Cortex Analyst - One Table",
          "Cortex Analyst - Two Tables",
          "Cortex Analyst - Semantic View"
        ],
        "Cortex Agents Framework": [
          "Cortex Agents Architecture and Components",
          "Cortex Agents - Structured One Table",
          "Snowflake Intelligence UI - Test One Table",
          "Cortex Agents - Structured Multiple Table",
          "Choose Agents Sources",
          "Agent Orchestration",
          "Agents Response Instructions",
          "Default Questions"
        ],
        "Enterprise Scale Agents": [
          "All Tables Analyst",
          "Enterprise Sales Agent",
          "Ask Questions to Agents"
        ],
        "Snowflake Cortex Search": [
          "Introduction of Cortex Search",
          "How Keyword search Works without AI",
          "What is RAG",
          "Vector Embeddings",
          "Cortex Search vs. traditional search",
          "Cortex Search architecture overview"
        ],
        "Cortex Search: Unstructured Data": [
          "Upload Stage Documents",
          "Extracting embeddings and metadata",
          "Test: Search Service using SQL",
          "Test Search Service using UI"
        ],
        "Integrating Cortex Search": [
          "Cortex Search with Snowflake Agents"
        ],
        "LLM Functions and Extensions": [
          "Introduction to LLM Functions: Overview",
          "Summarize LLM Functions",
          "Sentiment LLM Function",
          "COMPLETE LLM Functions"
        ]
      },
      "requirements": [
        "A basic understanding of Snowflake and SQL fundamentals."
      ],
      "description": "Learn Snowflake AI: Agents, Cortex Analyst, Cortex Search, and Snowflake Intelligence\n\n\nSnowflake is transforming the way businesses work with data — and with its AI-powered features, it’s now possible to interact with your data in completely new ways. From building intelligent agents to running natural language queries and semantic searches, Snowflake gives you the tools to deliver smarter insights faster.\n\n\nIn this hands-on course, you’ll learn how to:\nCreate and deploy Snowflake Agents to automate workflows and respond to natural language queries.\nAnalyze data using plain English with Cortex Analyst — no complex SQL required.\nImplement Cortex Search to find answers in structured and unstructured datasets instantly.\nUse Snowflake Intelligence to summarize data, detect trends, and generate AI-powered recommendations.\nIntegrate Snowflake’s AI features with external APIs, dashboards, and applications.\nApply these tools to real-world use cases in analytics, reporting, and decision-making.\n\n\nWhether you’re a data engineer, data analyst, BI developer, or business professional, this course will help you unlock Snowflake’s next-generation capabilities to work smarter, not harder.\n\n\nBy the end of this course, you will:\nUnderstand the Snowflake AI ecosystem and its core components.\nBuild AI-powered applications directly inside Snowflake.\nSearch, analyze, and generate insights without heavy coding.\nBe ready to apply Snowflake AI tools in real business scenarios.\n\n\nKeywords: Snowflake AI, Snowflake Agents, Cortex Analyst, Cortex Search, Snowflake Intelligence, AI data analytics, semantic search, natural language queries, AI-powered data warehouse.",
      "target_audience": [
        "Data Analysts who want to use AI to query and analyze data without writing complex SQL",
        "Business Intelligence Professionals who want faster, smarter insights.",
        "Data Engineers looking to build AI-powered workflows directly in Snowflake.",
        "Developers interested in integrating Snowflake AI features into applications.",
        "Business Users & Decision Makers who need quick, accurate answers from data."
      ]
    },
    {
      "title": "The Ultimate Guide to Running Effective 3-Amigos Workshops",
      "url": "https://www.udemy.com/course/how-to-run-an-effective-three-amigos-workshop/",
      "bio": "Deliver clear, testable requirements faster with practical discovery techniques and AI-enhanced workshops.",
      "objectives": [
        "Learn to run Three Amigos workshops that get your whole team involved and deliver clear requirements every time",
        "Master simple facilitation techniques that turn silent observers into active contributors",
        "Use practical tools and AI to speed up requirements discovery and create better user stories",
        "Apply a proven step-by-step process to get from user story to testable features quickly"
      ],
      "course_content": {},
      "requirements": [
        "Some experience working in software development teams. If you know what user stories and acceptance criteria are, you're ready for this course."
      ],
      "description": "Are your Three Amigos workshops really delivering value?\nDo your sessions take too long, feel unproductive, or still result in misunderstood requirements and late defects? Many teams think they’re running effective 3-Amigos sessions—but without the right structure and techniques, they miss critical gaps that lead to rework, frustration, and wasted time.\nIn this course, you’ll learn a proven, step-by-step process to transform your workshops into focused, high-impact sessions. This approach has helped hundreds of Agile teams deliver clearer requirements, fewer defects, and higher-quality features—without wasting hours in unnecessary discussions.\nWhether you’re practicing BDD, Scrum, or SAFe, this course will give you the tools to:\nUncover hidden issues before development starts.\nAlign developers, testers, and product owners quickly and effectively.\nProduce clear, testable acceptance criteria every time.\n\n\nWhat You’ll Learn\nHow to run structured 3-Amigos workshops that deliver results.\nUse Example Mapping and Feature Mapping to clarify requirements and uncover edge cases.\nIdentify gaps, hidden assumptions, and tricky scenarios before they become defects.\nFacilitate sessions that keep developers, testers, and product owners engaged and aligned.\nUse modern AI tools to accelerate your discovery process and capture insights efficiently.\n\n\nWatch Real-World Workshops in Action\nSee real, start-to-finish Example Mapping and Feature Mapping sessions where an experienced facilitator:\nGuides conversations to uncover essential requirements.\nHandles common challenges and keeps everyone focused.\nCaptures outputs in a way that ensures clarity and testability.\n\n\nWho This Course Is For\nScrum Masters and Agile Coaches looking to streamline their workshops.\nProduct Owners and Business Analysts who need clear, actionable requirements.\nDevelopers seeking better alignment and fewer surprises.\nQA Engineers who want earlier involvement and fewer late-stage defects.\n\n\nBy the End of This Course, You’ll Be Able To:\nRun 3-Amigos workshops that are fast, focused, and effective.\nEngage your entire team and drive meaningful collaboration.\nProduce clear, testable requirements that prevent rework and defects.\nCut meeting times in half while increasing output quality.\n\n\nIf you’re new to Three Amigos or feel like your current workshops aren’t as productive as they could be, this course will give you the tools and confidence to make a real impact.\n\n\nStop wasting time on unproductive requirements sessions—transform your process today!",
      "target_audience": [
        "Scrum Masters, Product Owners, developers and testers who want to run better team workshops. Perfect for both beginners and those looking to improve existing practices."
      ]
    },
    {
      "title": "Build an A.I. Image Generator App With Tkinter and Python",
      "url": "https://www.udemy.com/course/build-an-ai-image-generator-app-with-tkinter-and-python/",
      "bio": "Learn Artificial Intelligence Image Generation With The OpenAI Dall-E API",
      "objectives": [
        "Intro To OpenAI Dall-E API For Artificial Intelligence",
        "Integrate AI Into Python Apps",
        "Create Apps With The CustomTkinter Library",
        "Download and Install Python"
      ],
      "course_content": {
        "Introduction and Installation of Tools": [
          "Introduction",
          "Install Python",
          "Install Sublime Text Editor and Git Bash Terminal",
          "Create A Virtual Environment",
          "OpenAI Update"
        ],
        "Build Out The GUI App With CustomTkinter and Python": [
          "Create The App",
          "Design the App Layout",
          "TextBox Widget Error Handling"
        ],
        "Open AI API": [
          "Intro To OpenAI",
          "Call The OpenAI API",
          "Create New Windows",
          "Process The Image",
          "Error Handling From OpenAI"
        ],
        "Save The Image": [
          "Add A Menu To The New Window",
          "Copy Image URL",
          "Create a FileDialog Save As Box",
          "Save The Image"
        ],
        "API Key Management": [
          "Add an API Button",
          "Create a 'Save API' Window",
          "Save API Key To File",
          "Open API Key File",
          "Grab API Key From File",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No programming skills or special tools are necessary to take this course",
        "You just need a computer with Internet access and a Web Browser"
      ],
      "description": "In this course you'll learn how to create an Image Generator app using Python, CustomTkinter, and the Dall-E API from OpenAi.\n\n\nOpen AI are the makers of the popular ChatGPT AI tool, and their DALL-E api allows you to generate images by simply typing in words to describe the image you'd like to create.\n\n\nWe'll leverage that API to add that same ability to our own Python GUI app using the modern CustomTkinter library, which takes regular old Tkinter and gives it a fresh new spin and look.\n\n\nThis course is aimed at the absolute beginner.  You don't need any programming or AI experience at all, though a basic understanding of Python will help, I'll walk you through everything step by step.\n\n\nWe'll start out by downloading and installing the free tools you'll need...things like Python itself, the Sublime Text Editor to write our code on, and the git bash terminal to run our code on.\n\n\nThen we'll build out the app using customTkinter, which is a free library that makes regular Tkinter look and feel more modern.\n\n\nAfter that I'll walk you through the OpenAI Api and show you how to get a developer API key that allows you to connect your app to the AI Engine at OpenAI.\n\n\nThen we'll integrate the API into our app and that will be that!\n\n\nI think you'll be absolutely amazed at how easy it is to harness some extremely powerful Artificial Intelligence into your own apps.\n\n\nWhether you're a coding newbie or an advanced developer who wants to learn how to integrate AI into their code...this course is for you!\n\n\nMy name is John Elder and I'll see you on the inside!",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn to use OpenAI Artificial Intelligence in their Python GUI Apps"
      ]
    },
    {
      "title": "Building Desktop Applications with Python and Kivy",
      "url": "https://www.udemy.com/course/desktop-guis-with-python-and-kivy/",
      "bio": "create modern GUIs with a cross platform NUI framework",
      "objectives": [
        "Build Graphical User Interfaces For Your Programs",
        "Know How To Use The Right Approach For A Particular Usecase",
        "Build Three Real World Applications",
        "Learn All The Ins and Outs of Kivy",
        "Seamlessly Integrate Third-Party Libraries with Kivy"
      ],
      "course_content": {
        "Introduction and Environment Setup": [
          "Introduction",
          "Installation",
          "Installation: VsCode",
          "Hello Kivy"
        ],
        "Basic Widgets and Layouts": [
          "Understanding The Hello Kivy Program",
          "The Label Widget: Intro",
          "The Label Widget: Properties",
          "The Button Widget: Intro",
          "The Button Widget: Properties",
          "Get Properties",
          "Layouts: BoxLayout",
          "Layouts: GridLayout",
          "KvLang",
          "Widget Sizing and Spacing"
        ],
        "Project 01: Kivy Calculator": [
          "Project Demo",
          "Project Setup and Basic Layout",
          "Adding the Buttons",
          "The TextInput Widget",
          "Add More Buttons",
          "Add Text to Input",
          "Get Results",
          "Get Results: 02",
          "Get Results: final",
          "Calc Theming",
          "Correctly Display Results",
          "Bonus Lecture: Custom Input"
        ],
        "Project 1: Photo Gallery": [
          "Project Demo",
          "Project Setup",
          "The Dropdown Widget",
          "The Action Bar",
          "Filter for Images",
          "Display an Image: The Image Class",
          "The RecycleView",
          "Display All Images",
          "Add Descriptions: Kivy Custom Widgets",
          "Clickable Images: Kivy Behaviors",
          "View Image",
          "Kivy IconFonts",
          "Adding Image Operations Buttons",
          "Fit Image To Modal: part 2",
          "Fit Image To Modal part 1",
          "Traversing in Kivy",
          "Next Image",
          "Previous Image",
          "Rename Image: part 1",
          "Rename Image: part 2",
          "Image Effects: part 1",
          "Image Effects: part 2 - Burn Effect",
          "Image Effects: part 3 - Flip Image Options(1)",
          "Image Effects: part 4 - Flip Image",
          "Image Effects: part 5 - Mirror Image Options",
          "Image Effects: part 6 - Mirror Image",
          "Image Effects: part 7 - Rotate Image Options",
          "Image Effects: part 8 - Rotate Image",
          "Open An Image: Intro To ScreenManagers",
          "Open A Folder",
          "The 'About' Popup",
          "Theming The Program",
          "Bonus Lecture: Image Backdrop"
        ],
        "Cross Platform Videoplayer": [
          "Project Demo",
          "Setup",
          "The VideoPlayer Widget",
          "The Video Widget",
          "Player Controls",
          "Volume Control: Slider Widget",
          "Video Duration and Progress",
          "Add Icons To Controls",
          "Align Widgets",
          "Increase/Decrease Volume",
          "Update Position Slider",
          "Video Seeking,Playing & Pausing",
          "Fast Forward/Rewind",
          "Open File: part 02",
          "Open Folder",
          "Initialise Playlist view: PageLayout",
          "Add Videos to Playlist",
          "Playlist Entry Size",
          "Play From List",
          "Add File To List",
          "Remove Duplicates From List",
          "Play Next Video",
          "Play Previous Video",
          "Theme the Player",
          "About & Credits"
        ]
      },
      "requirements": [
        "A basic understanding of Python",
        "A working python installation"
      ],
      "description": "This course is designed for python developers who have been building console programs and would like to now tap into the world of graphical user interfaces. The goal of this course is to teach you everything you need to know about the kivy framework and help you build slick and modern graphical user interfaces to engage your users.By the time you finish this course, you will be able to build virtually any GUI you set your mind at.",
      "target_audience": [
        "A curious and exploratory mind",
        "Python developers who want to move from console programs to modern user interfaces",
        "Professionals and/or hobbists who would like to learn a new thing"
      ]
    },
    {
      "title": "Master Algorithmic Trading in the Indian Stock Market",
      "url": "https://www.udemy.com/course/master-algorithmic-trading-in-the-indian-stock-market/",
      "bio": "Automate Strategies with Python and Free APIs. Learn to Build, Backtest, and Implement Automated Trading Systems.",
      "objectives": [
        "Basic and Advanced Trading",
        "Basic and Advanced Python",
        "Start Algorithmic Trading using Free APIs",
        "Leverage AI in Building and Managing Free Tools",
        "Build, Backtest and Employ Strategies surrounding the concepts in the course"
      ],
      "course_content": {
        "Introduction and Trading Basics": [
          "About Me",
          "Introduction",
          "Demat Account, Buy and Sell shares",
          "Equity Trading - Intraday and Swing, Leverage",
          "Derivatives Trading - Index Futures and Options",
          "What is a Stop Loss?",
          "Support and Resistance"
        ],
        "Chart Patterns and Indicators": [
          "Candlestick Patterns",
          "Trend Lines",
          "Reversal and Continuation Patterns",
          "Momentum Indicators",
          "Test Your Knowledge"
        ],
        "Trading Systems": [
          "Building a trading System",
          "Win Rate and Risk-to-reward ratio",
          "Drawdowns",
          "Trading Psychology",
          "Money Management and Position Sizing",
          "Backtesting"
        ],
        "Python Basics": [
          "Python Installation",
          "IDE Installation",
          "Data types",
          "If-Else Conditions",
          "Data Structures",
          "Loops",
          "Functions",
          "Modules",
          "Exceptions",
          "Practice Programs"
        ],
        "Python for Algotrading (Advanced)": [
          "Pandas",
          "Accessing APIs",
          "Pushbullet",
          "Scheduling",
          "OOPS Concepts",
          "Enum",
          "Using Documentation and ChatGPT Prompt Engineering",
          "Best Practices"
        ],
        "API Setup": [
          "API Setup"
        ],
        "Indicator-Based Strategy": [
          "Introduction",
          "Main Script",
          "Utility functions",
          "SMA Calculation",
          "Position Manager",
          "Logging",
          "Debugging and Deployment"
        ],
        "Statistical Arbitrage Strategy": [
          "Introduction",
          "Complete Codebase",
          "Live Demo"
        ],
        "News Based Strategy": [
          "Introduction",
          "Complete Codebase",
          "Live Demo"
        ],
        "Hosting on PythonAnywhere": [
          "Hosting on PythonAnywhere"
        ]
      },
      "requirements": [
        "No programming experience needed. Only high school level mathematics is required. You'll learn everything you need to know."
      ],
      "description": "Welcome to \"Master Algorithmic Trading in the Indian Stock Market\", the ultimate course for mastering automated trading strategies in India, and the First Course that uses Free APIs!\n\n\nNew Updates: July 2024 - Recent useful material added!\n\n\nDid you know that in the Indian Stock Market, as per a SEBI study in 2023,\n90% of individual traders in equity Futures and Options segment incurred net losses!\nOn an average, loss makers registered net trading loss of around Rs. 50000.\nOn top of this, loss makers spent an additional 28% of net trading losses as transaction costs.\nThose making net profits, spent 15% to 50% of their profit as transaction cost.\n\n\nThis happens because most traders trade emotionally and without a structured strategy, essentially gambling in the market. However, the market is supreme, and no individual can single-handedly make the market bend to their will.\n\n\nThis course teaches you to trade like a professional by using algorithmic systems that follow predefined rules without emotion. These systems can be rigorously backtested with historical market data, ensuring reliability and consistency.\nMaster the Basics of Trading: From setting up a Demat account to executing trades with leverage, dive into the ways of trading!\nHarness Technical Analysis: Identify patterns and trends with candlesticks, trend lines, and momentum indicators to make informed trading decisions.\nBuild Your Trading System: Develop robust trading systems with high win rates and optimal risk-to-reward ratios. Manage drawdowns, master trading psychology, and refine your strategies through rigorous backtesting.\nPython for Algotrading: Master Python essentials, from data handling with Pandas to API integration with PythonAnywhere. Utilize advanced tools like Pushbullet for real-time updates, and Logging for debugging.\nAdvanced Strategies and Tools: Explore indicator-based, statistical arbitrage, and news-based strategies. Set up the free Kotak Securities API and leverage PythonAnywhere for hosting your trading systems.\nThis course isn't just about automation; it's about empowering you to thrive in the dynamic world of algorithmic trading using Python and free APIs. Whether you're a beginner or an experienced trader looking to automate and optimize your strategies, this course equips you with the tools and knowledge to succeed.\nLet's automate your success in the stock market together. See you in the course!",
      "target_audience": [
        "Beginners in trading and Python who want a new source of passive income",
        "Traders looking to save time by automating their strategies"
      ]
    },
    {
      "title": "O Level Computer Certification Course",
      "url": "https://www.udemy.com/course/o-level-computer-certification-course/",
      "bio": "Advance Level Computer Course for All",
      "objectives": [
        "History of Computer",
        "Need of Computer",
        "Functions of Computer",
        "Components of Computer",
        "Student System Configuration",
        "SSD & HDD",
        "RAM & Graphics Card",
        "Hardware & Software",
        "Processer CPU",
        "BIOUS",
        "Windows OS",
        "Mac OS",
        "Linux OS",
        "Windows 11",
        "Open Office",
        "Microsoft 365 Word",
        "Microsoft 365 Excel",
        "Microsoft 365 PowerPoint",
        "HTML 5 & CSS3",
        "Tally ERP 9",
        "Busy Accounting Software",
        "Language C"
      ],
      "course_content": {
        "Introduction": [
          "Author Intro",
          "Journey from Software Developer to Udemy Instructor",
          "Course Introduction",
          "Summery"
        ],
        "Fundamental": [
          "Overview Fundamental Part I",
          "Fundamental Part II",
          "Need of Computer",
          "History of Computer",
          "Fundamental Quiz _1.0",
          "Functions of Computer",
          "Components of Computer System",
          "Fundamental Quiz _1.1"
        ],
        "Computer Hardware": [
          "Buying Guide",
          "Student System Configuration",
          "Processer CPU",
          "RAM & Graphic Card",
          "SSD & HDD",
          "Computer Hardware Quiz_1.0"
        ],
        "Computer Software": [
          "BIOUS",
          "Windows 10 OS",
          "Application Software",
          "Special Softwares"
        ],
        "Operating Software": [
          "Windows OS",
          "Mac OS",
          "Linux OS"
        ],
        "Windows 11": [
          "Intro_Desktop icon arrengment , New Folder Creation",
          "Windows 11_System Settings",
          "Temp File Removal"
        ],
        "Office Softwares": [
          "Microsoft Office History",
          "Open Office"
        ],
        "Microsoft Office 365": [
          "Software Package"
        ],
        "Microsoft Office 365 Word": [
          "Intro",
          "Microsoft 365 Word",
          "Menu Home Tab",
          "Menu Insert Tab",
          "Insert Tab 1.1",
          "Insert Tab 1.2",
          "Insert Tab 1.3",
          "Insert Tab 1.4",
          "Menu Other Tabs _1.0",
          "Assigments For You"
        ],
        "Microsoft Office 365 Excel": [
          "Intro",
          "Microsoft 365 Excel Overview",
          "MS Excel Home Tab",
          "Practical Session"
        ]
      },
      "requirements": [
        "Good Configuration Computer (Minimum 4 GB RAM )",
        "Internet Connection 4G",
        "Mouse If using Laptop"
      ],
      "description": "Computer courses are one of the most popular and sought-after courses that are amongst the top choices for all engineering aspirants. Computer courses are further bifurcated into IT and software engineering courses.\nComputer Courses List is endless and is bifurcated into full-time undergraduate and postgraduate computer courses, online computer courses, or short-term certificate and diploma in computer courses. BTech Computer Science, BCA at the bachelor’s level, and MTech CSE, MCA at the master's level are popular computer courses for which the admissions are either merit-based or based on JEE Main, GATE, or other engineering entrance exams scores.\nInformation Technology (IT) and Software are two different braches of engineering. While IT branch deals with the use of computers to retrieve, transmit and manipulate data or information, software engineering is the application of engineering to develop new software. However, in layman term, IT software is a category that enlists multiple courses in information technology, computer science, computer applications and CAD/ CAM.\nIT software computer courses are offered at undergraduate (UG), postgraduate (PG) and doctoral (PhD) levels in India. Candidates can opt a course of their choice basis interest and qualifications. Such courses are designed to develop the technical skills of a candidate and provide relevant training to individuals planning to make a career in this field.",
      "target_audience": [
        "Graduation Students",
        "ITI",
        "Diploma Students",
        "Computer Science Students",
        "In Job IT Experts",
        "PGDCA Completed Student"
      ]
    },
    {
      "title": "Starting with Blockchain Technology for Developers",
      "url": "https://www.udemy.com/course/starting-with-blockchain-technology/",
      "bio": "For developers who want to understand how blockchain really works. Create a simple blockchain using JavaScript.",
      "objectives": [
        "Code a JavaScript blockchain!",
        "Understand and use of blockchain technology in real world applications",
        "Work with blockchain concepts in real code",
        "Understand the most important aspects of viable blockchain design",
        "Discover how cryptocurrencies utilize blockchain",
        "Learn the various protocols for securing the blockchain",
        "Implement security protocols in a blockchain project",
        "Create block validation logic in JavaScript",
        "Discover the leading cryptocurrency networks and blockchain development platforms in today's market ... and much, much more!"
      ],
      "course_content": {
        "Welcome to Starting with Blockchain Technology": [
          "Starting with Blockchain Tech",
          "What we'll learn",
          "How Do Blockchains Work?",
          "Blockchain Data Validation & Security"
        ],
        "Blockchain Use Cases": [
          "Blockchain Use Cases",
          "Cryptoeconomics",
          "Merkle Trees",
          "Smart Contracts",
          "File Storage & Distribution"
        ],
        "Blockchain Proofs": [
          "Proof of Work",
          "Proof of Stake",
          "Delegated Proof of Stake"
        ],
        "Project": [
          "Create a simple JavaScript blockchain",
          "Crypto-JS",
          "The Blockchain and Block classes",
          "Adding Proof of Work",
          "Creating a Cryptocurrency",
          "Validating Blocks"
        ],
        "Leading Blockchains": [
          "Popular Cryptocurrency Networks",
          "Popular Blockchain Platforms",
          "Wrap up"
        ]
      },
      "requirements": [
        "Before taking this course, a student should ideally (but not absolutely) have some experience in:",
        "Creating applications with Javascript Some exposure to cryptocurrencies, either via the markets or from a technical standpoint JavaScript development of complete web app solutions",
        "BLOCKCHAIN EXPERIENCE IS NOT REQUIRED!!!"
      ],
      "description": "Any IT professional or hobbyist anticipating a solid understanding of how blockchain technology works  and desires an understanding of blockchain's use cases and potential (including  cryptocurrencies and distributed applications) needs to go through this course to leverage blockchain in new or existing development projects.  Anyone desiring to learn how blockchain solutions are designed, configured, and developed needs the knowldege and practice presented in this course.  This not only includes web, mobile, and service application developers, but also architects, UI designers, testers, and administrators. This course provides a solid understanding of how blockchain technology works and a solid foundation for platform evaluation and learning lower level details.",
      "target_audience": [
        "This course was built for forward-looking developers who create solutions for mobile, web, and beyond. This course is designed for those developers who want to begin working with blockchain technology and need a good springboard to start their descent into this deep and detailed set of technologies, theories, and implementations. This course focuses on the primary components of blockchain technology and weaves them together to create a solid understanding of the blockchain stack component's interactions and dependencies. Of course, the info presented here is just as valuable for architects, testers, and product managers as they too should understand how blockchain products are designed and used to create the next level of distributed ledger tech.",
        "This course IS NOT intended for non-technical students. The content presented is in the context of technical review."
      ]
    },
    {
      "title": "Practical Apache Airflow",
      "url": "https://www.udemy.com/course/practical-apache-airflow/",
      "bio": "Develop Data Pipelining & Workflow. Build, schedule and monitor Data Pipelines using Apache Airflow in Python",
      "objectives": [
        "Airflow, Developing Data Pipeline, Python, Pandas",
        "Hands on data pipeline development and comparison with other technology",
        "Installation, Configuration of Airflow",
        "DAG's, Creating workflow, Operators, Tasks, dependency management, Hooks, Connections",
        "Different Executors like Local, Celery and Sequential and differences",
        "Airflow Architecture in detail",
        "Advanced concepts like Xcoms, Branching, Variables and DAG Chaining",
        "Authentication and Log storage to S3",
        "Airflow on Docker"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who this course is for",
          "Dags and Pipeline",
          "What is Airflow?",
          "Why Use Airflow?",
          "Comparison between Luigi, Azkaban, Oozi",
          "Quiz Time"
        ],
        "Architecture": [
          "Airflow Architecture",
          "Quiz Time"
        ],
        "Installation": [
          "Installing Airflow",
          "Environment variable setup",
          "Hands on: setting environment variable and starting web server",
          "Hands on : setting encryption to secure connection secrets",
          "Quiz Time"
        ],
        "Airflow Configuration": [
          "Airflow Configuration Overview",
          "Configuration options: ORM Configuration",
          "Configuration Option: Maximum Active Runs Explained",
          "Configuration Option: Maximum Active Runs Explained Continued",
          "Configuration Options: Additional Configuration Settings",
          "Quiz Time"
        ],
        "Developing Your First Data Pipeline": [
          "Problem Statement",
          "Hands on: Project Setup",
          "Hands on: Data Retrieval from File System",
          "Hands on: Merging DataFrames",
          "Hands on: Aggregation Using Pandas",
          "Hands on: Database Connectivity",
          "Hands on: Creating Dags",
          "Summary"
        ],
        "DAG Chaining": [
          "Dynamic Flow: Pattern -1 and Pattern - 2 Explained",
          "Dynamic Flow: Pattern - 3 Overview",
          "Dynamic Flow: Pattern - 4 Discussed",
          "Dynamic Flow: Exploring Pattern - 5",
          "Hands on: What are Airflow Hooks?",
          "Hands on: Exploring Task Branching",
          "Hands on: Passing and Modifying Variables",
          "Hands on: Xcom in Depth"
        ],
        "Authentication": [
          "Airflow behavior with Python 2 vs Python 3",
          "Setting Authentication",
          "Setting Authentication Demo",
          "Hands On : Creating user with Python 3",
          "Creating user with Python2"
        ],
        "Airflow: Log storage to Cloud": [
          "Writing Logs to S3",
          "Code: How to store Logs to S3",
          "Demo: Logs publishing to S3"
        ],
        "Airflow on Docker": [
          "Intro to setting airflow in docker",
          "Installing Docker",
          "Building docker container for Airflow",
          "Building containers with Local and Celery Executors",
          "Dockerfile Explained",
          "Assignment",
          "Further on Airflow Containers"
        ],
        "REST API's": [
          "Test REST API Server",
          "REST API Continued",
          "REST API"
        ]
      },
      "requirements": [
        "Beginner Python experience will be helpful"
      ],
      "description": "Data engineering is a field that can be thought as a superset of business intelligence and data warehousing which brings more elements from software engineering. The reason data engineering exists today is because companies have massive treasure troves of data, but to provide value the data must be extracted. Data engineering provides the toolbox and is how we make sense of that data quickly and effectively.\nWhen it comes to managing data collection, munging and consumption, data pipeline frameworks play a significant role and with the help of Apache Airflow, task of creating data pipeline is not only easy but its actually fun. Originated from AirBnb, Airflow soon became part of the very core of their tech stack.\nThe data infrastructure ecosystem has yet to show any sign of converging into something more manageable. It seems like we’re still in a huge phase of expansion where every new day bring new distributed database, new frameworks, new libraries and new teammates. As these systems get more complicated and evolve rapidly, it becomes even more important to have something like Apache Airflow that brings everything together in a sane place where every little piece of the puzzle can be orchestrated properly with sane APIs.\nSo in this course we will be learning as how to reach feature completeness with this amazing orchestration tool called Apache Airflow. You will not only learn to setup the environment but also learn how to create workflow pipeline with real world example so don't wait and sign-up today and get started.\nLooking forward to seeing you in this course!",
      "target_audience": [
        "Students who want to learn developing data pipeline",
        "Students and Professional wanting to learn Airflow",
        "Professional looking to implement Airflow for their team and organization"
      ]
    },
    {
      "title": "AWS Fargate DevOps: Autoscaling with Terraform at practice",
      "url": "https://www.udemy.com/course/aws-fargate-devops-autoscaling-with-terraform-at-practice/",
      "bio": "Learn to deploy, scale, and optimize any web application or worker on AWS ECS Fargate using Terraform, at real examples",
      "objectives": [
        "Web application deployment at AWS ECS Fargate using terraform",
        "Auto scaling AWS Fargate policies: predefined auto scaling , step auto scaling, auto scaling based on custom CloudWatch metrics",
        "Terrafom as tool for creating and managing auto scaling",
        "AWS Fargate usage cases and cost optimizations"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Flask test web application and worker": [
          "Flask app - local environment",
          "Flask app - code overview, how application works"
        ],
        "Base AWS infrastructure deployment using Terraform": [
          "Terraform installation with tfenv",
          "AWS profile and terrafrom configuration",
          "Running base terraform scripts - essential introduction",
          "Applying terraform - Part 1: pre init, network and sns terrafrom modules",
          "Applying terraform - Part 2: sqs terrafrom module, testing worker mode",
          "Applying terraform - Part 4: AWS ALB terraform source code",
          "Applying terraform - Part 3: ALB terrafrom module and AWS Certificate Manager",
          "Applying terraform - Part 5: General architecture scheme and request workflow",
          "REMEMBER TO DESTROY ENV IN THE END - BELOW IS THE ARTICLE HOW TO DO IT PROPERLY"
        ],
        "Application deployment at AWS ECS Fargate using Terraform": [
          "What is AWS Fargate?",
          "Lecture 2: Build docker image and push it to the AWS ECR",
          "Fargate terraform module overview - Part 1: ecs cluster, network configurations",
          "Fargate terraform module overview - Part 2: IAM roles",
          "Fargate terraform module overview - Part 3: ecs service",
          "Fargate terraform module overview - Part 4: task definition template",
          "Target group terraform module and implementation code - Part 1",
          "Target group terraform module and implementation code - Part 2",
          "Lecture 6: AWS Fargate - apply terraform code, aws console, inside container"
        ],
        "Fargate autoscaling": [
          "Autoscaling types and use cases being covered at current course",
          "When should we use autoscaling?",
          "Autoscaling terraform module with predefined CPU and RAM target metrics",
          "Testing predefined CPU and memory autoscalining at practice",
          "Target tracking autoscaling surprises",
          "Step autoscaling terraform module - part 1",
          "Step autoscaling terraform module - part 2",
          "Applying autoscaling with predefined custom SQS metric, testing worker",
          "Terraform code autoscaling with predefined custom SQS metric",
          "Testing autoscaling with predefined custom SQS metric at practice",
          "Autoscaling summary"
        ],
        "Fargate costs and how to optimize AWS expenditures": [
          "How much Fargate costs, price comparison with EC2",
          "CPU architecture and saving plans",
          "Fargate spot",
          "Cost optimization recommendations or when AWS Fargate is a bad choice"
        ],
        "Bonus Section": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Active AWS account",
        "Some active web domain",
        "AWS basic conceptions, e.g VPC, EC2, subnets, security groups...",
        "AWS ECS basics",
        "Terraform basics",
        "Basic knowledge at using docker and web programming"
      ],
      "description": "What you'll learn:\nHow to deploy Web API application and SQS worker at AWS Cloud using AWS Fargate and Terraform\nAWS ECS base components and how to deploy them using Terrafom\nWhat is autoscaling and how it works at AWS Fargate\nHow to create autoscaling policies using target metric values + Terraform\nHow to create autoscaling policies using predefined step increments + CloudWatch alarms + Terrafom\nHow to create autoscaling policy based on a custom CloudWatch metric for scaling workers\nHow to use AWS Fargate wisely - CPU architectures, savings plans, and hybrid Fargate Spot systems as strategies for for cost reduction\nRequirements:\nActive AWS account\nSome active web domain\nBasic knowledge at using docker and web programming\nBasic knowledge at Terraform\nAWS basic conceptions, e.g VPC, EC2, subnets, security groups...\nAWS ECS basics.\n\n\nShort description:\nThis course is designed to guide you through the practical implementation of autoscaling using Terraform and AWS Fargate. It discovers how to optimize resource use effectively and ensure seamless application performance, all while managing costs wisely. ATTENTION - it is not the course where I will be writing code from zero, as it will take 6 hours to do it - it is the course where you will get ready code and solutions + clear explanations how to use it.\n\n\nCOURSE STRUCTURE:\nThe course consists of 5 sections:\n\n\nIn the 1st section we will create a test web application and test worker, forming the lab environment for hands-on auto scaling practice. No prior knowledge of those technologies are required.\n\n\nIn the 2d section we will create a base AWS infrastructure - all stuff related to the network, and additional services required for our lab environment - ALB, SNS, SQS, CW. Finally we will configure the real domain for our application using Route 53 and CM. Almost all that would be done rather fast, as we will be using ready terrafom modules.\n\n\nThe 3d section focuses on AWS Fargate. Here, we'll explore the core components of AWS Fargate and deploy our test API application, working towards achieving our desired final architecture.\n\n\nThe 4th section is the heart of our course, where we'll dive deep into autoscaling. We'll explore various autoscaling strategies, including target metric values and predefined step increments using CloudWatch alarms. You'll learn to work with CPU and memory utilization metrics and even create an autoscaling policy based on a custom CloudWatch metric for scaling workers.\n\n\nIn the final, 5th section, we'll discuss the costs involved with AWS Fargate, compare it with EC2 pricing and discuss how to navigate via Fargate limitations. You'll learn strategies to use this technology wisely, ensuring your expenses stay low while maximizing its benefits. We'll cover topics such as CPU architectures, savings plans, and hybrid Fargate Spot systems.\n\n\nWho this course is for:\nAnyone who is interested at autoscaling or who is responsible for Web resources:\nSoftware engineer\nDevOps\nAdmin\nCTO\nCEO",
      "target_audience": [
        "Anyone who is interested at AWS Cloud, AWS Fargate and autoscaling"
      ]
    },
    {
      "title": "CRUD application using C#, PostgreSQL, Windows Forms",
      "url": "https://www.udemy.com/course/crud-application-using-csharp-postgresql-windows-forms/",
      "bio": "CRUD application using C#, PostgreSQL, Windows Forms",
      "objectives": [
        "C# programming using Windows Forms and PostgreSQL as the db server and where we will create an application that can Create, Read, Update and Delete Records.",
        "We will keep the code to a minimum and as simple as possible.",
        "You will gain skills using PostgreSQL and pgAdmin 4 to create and manage the databases, create a Stored Procedure and also create users and their privileges .",
        "You will feel confident using C#, Windows Forms as well as handle PostgreSQL in many ways."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Download and Installation of the Software": [
          "Download and installation of PostgreSQL and Visual Studio",
          "Configuration of PostgreSQL",
          ": Configuration of Visual Studio 2022"
        ],
        "Configuration of our software": [
          "Configuration of PostgreSQL Server",
          "Configuration of Visual Studio 2022",
          "Connection string (App.config) Visual Studio 2022"
        ],
        "Database Table and Stored Procedure creation": [
          "Database Table creation",
          "Stored Procedure creation and insertion of Data"
        ],
        "Read Records from database and display in the DataGridView": [
          "READ – read records from database to DataGridView"
        ],
        "User Interface (UI)": [
          "User Interface prep talk",
          "Lecture 12: Build the User Interface (UI) – no sound",
          "Walk-through of UI and naming all controls",
          "UI – Wrap-up"
        ],
        "Populate records to the UI (User Interface)": [
          "Lecture 15: Populate records to all textboxes"
        ],
        "Clear All Textboxes": [
          "Lecture 16:"
        ],
        "Save, Update, and Delete": [
          "Save record",
          "Update record",
          "Delete record"
        ],
        "Business Logic – Application behaviour": [
          "Lecture 20:",
          "Business Logic – Textboxes and buttons 2",
          "Business Logic – Buttons 1",
          "Business Logic – Buttons 2"
        ]
      },
      "requirements": [
        "There are no hard requirements but having programming in a C like language will be very helpful.",
        "Have some knowledge of SQL (Structured Query Language) will be helpful but not mandatory."
      ],
      "description": "This course (part 1) will have in total 12 sections.\nThe course will give you the knowledge of how to use C# to build a full CRUD application using Windows Forms. We will be using Visual Studio 2022 Community edition and create this CRUD application with PostgreSQL Server as the database. We will also create a Stored Procedure to populate our database with records.\nIn the Part 1 we will use SQL-statements in our source code to perform the database operations.\nIn Part 2 wee will add another database and also implement Stored Procedures / Function to replace all the SQL-statements in our source code.\nIn part 3 we will add capability to use images/photos/logos that we will stored in the database itself.\nYou will find a number of downloads in some of the section /lectures that will help you with some details and definitions. At the end of the course (section 12/Part 1), you will also find the source code itself for download.\nTools and development environment can be downloaded for free – full instructions inside this course regards to installation and configuration. You can find more detailed information on my BLOG. See my instructor page for the link.\nAt the end of this course, you will be confident of writing your own CRUD applications using C# and PostgreSQL Server.\nYou can also contact me in different ways to have some support, if needed.",
      "target_audience": [
        "Anyone that needs to understand how to create a CRUD database application using C#, Windows Forms, and PostgreSQL Server."
      ]
    },
    {
      "title": "Reactive programming with RxJava",
      "url": "https://www.udemy.com/course/reactive-programming-with-rxjava/",
      "bio": "Learn functional reactive programming with RxJava, a library for easy asynchronous programming",
      "objectives": [
        "When to use RxJava and when to use regular Java streams",
        "What's the difference between RxJava and Java standard concurrency library",
        "Understand marble diagrams",
        "Apply Functional Reactive Programming (FRP) principles",
        "Boost application performance with painless, safe, multithreading code",
        "Write asynchronous code optimized for concurrency and parallel processing"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Functional Reactive Programming"
        ],
        "RxJava Concepts": [
          "Observer design pattern",
          "Marble diagrams and RxJava Javadocs",
          "Java native streams and RxJava",
          "RxJava and standard concurrency library",
          "Hot vs cold observables",
          "Exercise",
          "Multithreading part 1: subscribeOn",
          "Multithreading part 2: observeOn",
          "Multithreading part 3: subscribeOn with multiple events",
          "Parallel processing",
          "Schedulers",
          "Error Handling",
          "Flowables and backpressure",
          "Backpressure 2",
          "Backpressure 3",
          "Testing"
        ],
        "Use Cases": [
          "Broadcast event bus",
          "Efficient incremental text search",
          "Memoization: cache of expensive functions",
          "Timeout and retry on failed network requests",
          "Chained and parallel network requests",
          "Periodic cache refresh",
          "Backoff strategy for rate limiting API's",
          "Reflection: Difference between RxJava and Java standard library"
        ],
        "Conclusion": [
          "Final toughts"
        ]
      },
      "requirements": [
        "Basic Java programming"
      ],
      "description": "Functional Reactive Programming (FRP) is a different programming paradigm, just like Object Oriented Programming. It has gotten traction in the recent years where more and more technology adopt it for building responsive, reliable and maintainable systems. Writing multithreading code is usually difficult because you need to think how several pieces move at the same time and work together.\nIn this course I'll teach you RxJava, the Java implementation of Reactive Extensions to write safe, reliable multithreading code. It's being heavily in use in Android applications, but this course presents RxJava concepts in a generic way. You don't need to know anything about Android to use this course, learn and use RxJava in any kind of Java application.\nYou will learn how RxJava compares with Java standard library for writing multithreading code, and the parallel streams introduced in Java 8. In the section about use cases, I present you some examples of how RxJava solves particular challenges, so you can get started quickly. This course is meant to serve as a quick reference, the section about use cases doesn't follow a particular order, so you can skip and come back to lectures as you see fit.\nThe concepts you learn here will also help you understand other libraries that were inspired by Reactive Extensions.\n\n\n(Music: bensound)",
      "target_audience": [
        "Java programmers (either Android or server side) facing concurrency and multithreading challenges"
      ]
    },
    {
      "title": "Fundamentals of Software Development - A Beginner's Guide",
      "url": "https://www.udemy.com/course/fundamentals-of-software-development-a-beginners-guide/",
      "bio": "Kickstart your journey in software development by mastering essential skills and exploring core concepts and tools.",
      "objectives": [
        "Understand the fundamentals of programming, including what programming is and its historical context.",
        "Develop a problem-solving mindset and learn critical thinking skills essential for analyzing and structuring code.",
        "Explore different programming languages and paradigms to understand their applications and use cases.",
        "Gain insights into frontend and backend programming, including the software stack, databases, and cloud computing.",
        "Learn about key frameworks for both frontend and backend development, and how they integrate within the software stack.",
        "Master essential programming techniques, methodologies, and design patterns to write clean, maintainable code.",
        "Discover how AI can accelerate your learning and enhance your software development practices.",
        "Explore various career roles in software development and create a personalized learning plan to achieve your goals."
      ],
      "course_content": {
        "Introduction to Programming": [
          "Welcome and Course Overview",
          "Who is this Course For?",
          "What is Computer Programming?",
          "A Brief History of Computer Programming"
        ],
        "The Programmer's Mindset": [
          "Developing a Problem-Solving Mindset",
          "Algorithms, Pseudocode, and Flowcharts",
          "Critical and Analytical Thinking in Programming",
          "Real-World Problem-Solving Examples"
        ],
        "Types of Programming Languages": [
          "Overview of Programming Languages",
          "Programming Paradigms: Procedural, OOP, Functional, and Declarative",
          "Popular Programming Languages and Their Use Cases"
        ],
        "Frontend vs. Backend Programming": [
          "Understanding the Software Stack",
          "Frontend Programming Concepts",
          "Backend Programming Concepts",
          "Understanding Databases"
        ],
        "Programming Techniques and Principles": [
          "Best Practices in Programming",
          "Design Patterns and Architectural Principles"
        ],
        "Career Pathways in Software Development": [
          "Exploring Different Roles in Software Development",
          "Industry Trends and the Future of Programming",
          "Building a Personal Learning Plan"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "No prior programming experience required: This course is designed for absolute beginners who are new to software development.",
        "A willingness to learn: An open mind and a curiosity to explore the world of programming are essential for making the most of this course.",
        "Basic computer literacy: Familiarity with using a computer, browsing the internet, and installing software will be helpful.",
        "Access to a computer: You will need a computer with internet access to follow along with the course materials and explore additional resources.",
        "Patience and perseverance: Learning to program can be challenging, but with determination and practice, you’ll be able to master the fundamentals."
      ],
      "description": "Are you ready to kickstart your journey in software development?  This course is specifically designed for absolute beginners who want to master the essentials of computer programming and explore the core concepts, tools, frameworks and roles in the tech industry. Whether you have no prior experience or just a little exposure to programming, this course will guide you step by step through the foundational knowledge you need to succeed.\nThrough clear, accessible lessons, you’ll gain a solid understanding of critical programming concepts, such as algorithms, pseudocode, and the differences between frontend and backend development. We’ll demystify complex topics like cloud computing, databases, and software development methodologies, making them easy to understand and apply. You'll also explore various career paths, from frontend developer to backend expert, and even learn how artificial intelligence can accelerate your learning process.\nBy the end of this course, you will have the confidence to navigate the tech landscape and make informed decisions about your future in software development. Whether your goal is to become a frontend developer, backend specialist, or full-stack professional, this course will equip you with the knowledge and skills to pursue your ambitions. Start your career path to becoming a software developer today!",
      "target_audience": [
        "Absolute beginners who have no prior experience in programming but are eager to learn the fundamentals of software development.",
        "Individuals considering a career change and looking to break into the tech industry by gaining a solid foundation in programming concepts and tools.",
        "Students and recent graduates from non-technical fields who want to explore opportunities in software development and gain the skills necessary to enter the field.",
        "Professionals from other industries who wish to expand their skill set by understanding the basics of programming and the software development process.",
        "Tech enthusiasts who are curious about how software is developed and want to explore the different roles and tools in the software development lifecycle.",
        "Anyone interested in AI and its applications in programming, looking to understand how artificial intelligence can accelerate the learning and development process in the tech field."
      ]
    },
    {
      "title": "Professional Scrum Developer Practice Tests + Explanation",
      "url": "https://www.udemy.com/course/psd-professional-scrum-developer/",
      "bio": "Do These Tests First! Make 100% Sure You Are Ready for PSD | November 2020 scrum guide",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Do you want to get PSD certified? Make sure that you are really ready first!\nBy taking these mock exams you will:\nMake sure you don't take the real exam too early\nGo over the theory that you need to know once more\nIdentify topics you score poorly on, so you can study them again\nBe well prepared for the real deal\nThe exams are very similar to the real exam. In the real exam you'll have to answer 85% of 80 questions correctly in 60 minutes. So mind the time while taking the mock exams to make sure that you won't expire your timebox (see what I did there) for the exam.\nThe answers to the questions are explained, so you will definitely learn from them as well. If you fail themock exam, this really means that you are not ready for the actual exam yet. You can expect these questions to appear exactly or very similar in the real exam as well.\nThese questions are made and selected based on the latest Scrum guide (2020 is the latest, also in 2021). However, the focus of PSD is still on software development, even though the new Scrum guide is way less focussed on software development than the old one. As soon as this changes, this course will get updated as well.",
      "target_audience": [
        "Software developers",
        "Scrum developers",
        "Anyone who wants to get their PSD certificate"
      ]
    },
    {
      "title": "Amazon RDS in 60 Minutes: Stop worrying about databases",
      "url": "https://www.udemy.com/course/how-to-use-amazon-rds/",
      "bio": "Learn from Releaseworks Cloud Engineers: How to run and manage databases in AWS with Amazon Relational Database Service.",
      "objectives": [
        "How to create managed MySQL and PostgreSQL databases in RDS",
        "How to create and restore snapshots",
        "How to choose the right storage backend for your database",
        "How to build a LAMP stack in AWS with RDS and EC2",
        "How to set up monitoring for your database instance",
        "How to architect for High Availability with RDS",
        "How to manage RDS with Terraform (Infrastructure as Code)",
        "You will get access to code examples that you can use in your own projects"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of relational databases is helpful",
        "You will need an AWS account (instructions provided in course)"
      ],
      "description": "\"In my 20 years in technology, I have never met a person who would passionately enjoy managing relational databases. The good news is that now you won't have to.\"\n- Miiro Juuso, Founder of Releaseworks\n\n\nLearn from industry-leading DevOps and Cloud Engineers at Releaseworks:\nIn the next 60 minutes, you will learn how to run managed databases in AWS with Amazon RDS. Amazon Relational Database Service, or RDS, takes care of the operational aspects of running databases, like taking backups, upgrading versions, and setting up high availability, helping you to concentrate on what matters most. Amazon RDS supports MySQL, PostgreSQL, MariaDB, MS SQL Server, Oracle, and Aurora databases.\n\n\nAmazon RDS in 60 Minutes includes 4 labs to help you practice along with the instructor, and learn by doing.\nThis course includes all you need to know to get started with RDS, carefully distilled into just one hour of lessons and hands-on labs. We will also provide you access to all the code examples and commands we use in this course to get you started in your own projects.\n\n\nIf you want to have a managed SQL database running in AWS within the next hour, tap Enroll Now, and let’s get started.\n\n\nDid you know that DevOps is one of the most sought-after set of skills in the job market right now, with tens of thousands of open roles globally. According to PayScale, the median DevOps salary in the U.S. is $93,770 per year. The best DevOps specialists on the market can name their price, and often earn more than $200,000 in a year. The best time to start learning DevOps was 5 years ago - the second best time is now!\n\n\nReleaseworks is an upskilling-focussed DevOps and cloud engineering consultancy based in London. We help some of the largest digital organizations in the world to take full advantage of the cloud, and implement DevOps ways of working. Our mission is to help software development teams release better software, faster. Releaseworks Academy is the collection of learning resources that we use to upskill the software development teams of our clients, as well as our own cloud engineers.",
      "target_audience": [
        "Software developers who want to outsource the trouble of managing databases to AWS",
        "System administrators who are looking to migrate on-premises databases into AWS"
      ]
    },
    {
      "title": "Comprehensive Algorithms",
      "url": "https://www.udemy.com/course/comprehensive-algorithms/",
      "bio": "This course provides a comprehensive overview of the concepts of algorithm analysis and development.",
      "objectives": [
        "By the end of this course you will have a thorough understanding of some of the most popular algorithms and data structures"
      ],
      "course_content": {
        "Introduction to Algorithms": [
          "Course Overview",
          "Growth of Functions"
        ],
        "Sorting Algorithms": [
          "Insertion Sort",
          "Counting Sort",
          "Radix Sort",
          "Merge Sort"
        ],
        "Abstract Data Structures": [
          "Stacks",
          "Code Implementation of the Stack Data Structure in Python",
          "Practical Stack Data Structure Example: Reversing a String in Python",
          "Queues"
        ],
        "Binary Search Trees": [
          "Binary Search Tree Introduction",
          "Searching Through a Binary Search Tree",
          "How to Construct a Binary Search Tree",
          "How to Delete a Node from a Binary Search Tree",
          "Preorder Binary Tree Traversal",
          "Postorder Binary Tree Traversal"
        ],
        "Red Black Trees": [
          "Properties of Red Black Trees",
          "Red Black Tree Traversal",
          "How to Rotate a Red Black Tree Data Structure",
          "How to Delete a Node from a Red Black Tree"
        ],
        "Graph Algorithms": [
          "Hamiltonian vs Euler Paths",
          "Prim's Algorithm",
          "Breadth First Search",
          "Depth First Search"
        ],
        "Advanced Algorithms": [
          "Huffman Codes",
          "Introduction to Greedy Algorithms",
          "Greedy Algorithm for Shortest Path Problem",
          "How to Develop a Good Hash Function"
        ],
        "Supplementary Content": [
          "How to Implement a Factorial in the Ruby Programming Language"
        ]
      },
      "requirements": [
        "No previous experience is required"
      ],
      "description": "Course update April 2021: Added Python code implementations for the Stack data structure, including a practical example that shows how to reverse a string.\nThis course provides a comprehensive overview of the concepts of algorithm analysis and development. I attempted to make the course as straightforward as possible, to the point where no previous experience in algorithm analysis or formal computer science education is required.\nIn the lessons, I review popular algorithms such as:\nBinary search trees\nTree traversal and management\nMerge sort\nCounting sort\nInsertion sort\nRadix sort\nHuffman coding\nAnd much more\nAdditionally, you'll learn about the data structures that are utilized to implement these algorithms, such as queues and stacks. I also review a number of graph algorithms and give introductions to additional advanced algorithm analysis concepts.\nAnd based on course feedback, I'm now adding full Python based code implementations of the algorithms, so you can build and run the programs!\nI developed this course while I was taking a graduate level Analysis of Algorithms and Data Structures course from Texas Tech University, and these are all the main topics that we discussed. So whether you are a university student looking to pass your algorithm and data structure class, or you are a developer looking to improve your computer science skills, this is the course for you.",
      "target_audience": [
        "Computer science students",
        "Programmers",
        "Mathematicians"
      ]
    },
    {
      "title": "Java: Master SOLID Principles and Top Design Patterns",
      "url": "https://www.udemy.com/course/java-solid-principles-and-top-design-patterns/",
      "bio": "Master SOLID principles and the Top GoF Design Patterns for JAVA development. Learn how to Architect Robust Solutions.",
      "objectives": [
        "*Master* the most important and fundamental design patterns in modern Software Engineering within the *Java* ecosystem",
        "Learn and internalize the S.O.L.I.D principles of design like seasoned *Senior Developers* do.",
        "Get a deep understanding of the WHAT, WHY, and HOW for those *Fundamental Design Patterns*.",
        "Get a full Architectural exposition (with UML) of each pattern as well as *real-world* scenarios with hands-on coding examples for each pattern.",
        "Work on and complete Object Oriented *Java* assignments that will push your understanding of those patterns deeper and more fundamentally.",
        "Learn how to *identify* the *best pattern* for the given Architectural challenge."
      ],
      "course_content": {
        "Introduction": [
          "What are Design Patterns and why do we need them?",
          "The Design Patterns Covered in This course.",
          "Quick Quiz about design pattern families",
          "The WHY Of Software Architecture.",
          "Why use UML?",
          "Organized vs. Unorganized code.",
          "Setting Up the IDE and Java Environment",
          "*OPTIONAL*: UML Refresher."
        ],
        "What makes a Great Architecture?": [
          "Hallmarks of Good Architecture.",
          "S.O.L.I.D Design Principles.",
          "SOLID *Practice Session* - Single Responsibility Principle(SRP)",
          "SOLID *Practice Session* - Open/Closed Principle (OCP)",
          "SOLID *Practice Session* - Liskov Substitution Principle (LSP)",
          "SOLID *Practice Session* - Interface Segregation Principle (ISP)",
          "SOLID *Practice Session* - Dependency Inversion Principle (DIP)",
          "SOLID Principles Quiz"
        ],
        "Singleton Design Pattern": [
          "Understanding The Singleton Pattern",
          "Singleton Pattern - Architectural Considerations Part#1 - Simple Approach",
          "Coding Part #1A - Practical Logger Example using Simple Singleton in Java",
          "Coding Part #1B- Abstract Logger Example using Simple Singleton in Java",
          "Coding Part #1C- Full SOLID Logger Example using Simple Singleton in Java",
          "Working with the Singleton Pattern",
          "Singleton Pattern - Thread-Safety Revisited - Better Solutions",
          "Singleton Pattern - Architectural Considerations Part#2 - Singleton Attacks",
          "Singleton Pattern - Architectural Considerations Part#3 - Enum Singletons",
          "Singleton Pattern - Part#1 - **Extra** Coding Exercises"
        ],
        "Factory Method Design Pattern": [
          "Understanding the Factory Method Pattern",
          "Architectural Considerations for Factory Method Pattern",
          "Coding the Factory Method Pattern in Java",
          "Factory Method Pattern Quiz",
          "Factory Method Pattern Coding Exercises"
        ],
        "Builder Design Pattern": [
          "Understanding Builder Design Pattern",
          "Architectural Considerations for Builder Design Pattern",
          "Coding the Builder Pattern in Java",
          "Builder Pattern Quiz",
          "Builder Design Pattern Coding Exercises"
        ],
        "Adapter Design Pattern": [
          "Understanding the Adapter Design Pattern",
          "Architectural Considerations for the Adapter Pattern",
          "Coding the Adapter Pattern in Java",
          "Adapter Pattern Quiz",
          "Adapter Design Pattern Coding Exercises"
        ],
        "Strategy Design Pattern": [
          "Understanding the Strategy Design Pattern",
          "Architectural Consideration for the Strategy Design Pattern",
          "Coding the Strategy Design Pattern in Java",
          "Strategy Pattern Quiz",
          "Strategy Design Pattern Coding Exercise"
        ],
        "Observer Design Pattern": [
          "Understanding the Observer Design Pattern",
          "Architectural Consideration for the Observer Design Pattern",
          "Coding With Observer Pattern - Chat Application",
          "Observer Pattern Quiz",
          "Observer Design Pattern Coding Exercise"
        ],
        "State Design Pattern": [
          "Understanding the State Design Pattern",
          "Architectural Consideration for the State Design Pattern",
          "Coding With State Pattern Part #1 - Introducing the Media Player Application",
          "Coding With State Pattern Part #2 - Architecting Media Player Application",
          "Coding With State Pattern Part #3 - Coding the Media Player Application"
        ],
        "Course Assignment - The Game of Life": [
          "About John Conway's Game Of Life Simulation",
          "A Word about the \"Game of Life\" Architecture"
        ]
      },
      "requirements": [
        "It is assumed that you know your way around Java. Only basic experience is required. We have a OOP refresher if you need it.",
        "You should be able to run the Java code that is provided with the course. We will use Visual Studio Code as our IDE but you can use any IDE you like.",
        "Access to a computer. A Mac, Windows, or a Linux based operating system is equally fine. All the tools are OS Independent."
      ],
      "description": "We all want to become better software developers and be able to call ourselves \"Software Engineers\" or \"Software Architects\", but to do that you first have to master a number of design patterns.\nThis course will put you on a track to that destination.\nWe will teach you how to recognize when to use specific design patterns to build complex systems in a divide-and-conquer manner so that complexity is reduced and abstracted.\nBut rather than learning all the design patterns out there, we have curated the most important, top fundamental GoF Design Patterns for you.\n\n\nAll of that in the context of the Java programming language.\n\n\nWe start with full understanding of the S.O.L.I.D Design Principles and how they in turn relate to those design patterns. We eplain everything in the context of real-world problems as well as specific code examples.\nAt the end of the course you will get to Architect a solution by coding John Conway's Game of Life simulation which will run on variety of devices.\n\n\nComplex software systems are plagued with three major issues:\nTimelines are stretched as requirements change.\nMultiple developers have a hard time coordinating their efforts.\nCode redundancy.\n\nThis in turn creates issues with maintenance and overall flexibility for adding new features. In general this means poorly designed systems that are hard to maintain and are not adaptable.\nOne answer to all the above problems is having a proper design and architecture. Think of a skyscraper being built. There is always a high-level blueprint. This blueprint is used to show everybody involved (from architects to supply chain to construction workers to machinery scheduling etc…) what is being worked on.\n\n\nEverybody understands and follows the same vision.\n\n\nA blueprint has a number of commonly understood elements which repeat themselves across many projects. For example all buildings need electrical wiring and plumbing, they might need elevators, and cooling systems, and underground parking lots, and of course stairs. They also usually are connected to the electrical grid and water supply as well as… roads.\nAll these common elements follow certain standards that have been improved over many many years and across many many projects. They are well understood and can be used almost like recipes.\nIn Software Engineering we also have a set of elements that repeat themselves across many projects. For example all software applications need to create objects, they need to communicate state change across those objects, they need to be able traverse over collections of those objects. In other words, if you want to be a better developer then you need to become proficient in those elements that have been time-tested. In the Software Engineering world these elements are known as “Design Patterns”\n\n\nThis course will teach students how to recognize when to use specific design patterns to build complex systems in a divide-and-conquer manner so that complexity is reduced and abstracted.\nThis will help you to design projects in an Architectural manner before any major development happens and can be used to shorten development time and reduce maintenance costs.\n\n\nDesign patterns are important because they are time-tested recipes or solutions to well-known software engineering problems. When creating software applications certain problems recur in a pretty predictable fashion so rather than ‘reinvent’ the wheel we will have an assortment of, if you will, wheels to choose from.\nWe will teach you this in a slightly different manner than you probably have been taught before. We will take a practical approach (i.e. specific examples) but the power of Design Patterns comes from their ‘concept’ and we will teach you the concept of those design patterns so that you are fully able to change them and modify them to your needs. In addition we will look at how to combine all those patterns into something greater: an architecture.\n\n\nA well designed Architecture is this magical thing where the whole is greater than the sum of its parts.\n\nThis is what we will strive to teach you.",
      "target_audience": [
        "*Java* developers who want to learn to Design, Architect, and ultimately develop *better code*.",
        "Developers who want to get a deep understanding of what makes GREAT *Software Architecture*."
      ]
    },
    {
      "title": "Learn Spring GraphQL",
      "url": "https://www.udemy.com/course/learn-spring-graphql/",
      "bio": "Spring GraphQL, Spring Boot 3, MVC, Security(OAuth2), Websocket, Spring Data JPA, Docker, CI/CD, Kubernetes, GraalVM",
      "objectives": [
        "You will Learn the GraphQL basic types",
        "You will learn how to implement GraphQL Query, Mutation and Subscription with Spring",
        "You will learn how JPA interacts with GraphQL",
        "You will learn how to how to implement Instrumentation custom logic for validation",
        "You will learn how to create custom exceptions and validation",
        "You will learn how to handle all Exceptions on Global Application scale",
        "You will implement GraphQL Pagination using two methods",
        "You will learn how to use websocket with GraphQL",
        "You will learn how to package your Application with GraalVm into a native Image",
        "You will secure the GraphQL application as an Oauth2 Resource Server",
        "You will learn how to Implement Authorization Server (Client Credentials)",
        "You will learn how to convert GraphQL scripts to Classes or POJOs",
        "You will learn how to programmatically connect to external GraphQL Servers using Rest Cleint",
        "You will learn how to create native Image using GraalVM",
        "You will see how to Dockerize your application",
        "You will learn how to prepare to deploy to Kubernetes",
        "You will learn pragmatic path to deploy to Kubernetes",
        "You will learn how to Implement CI-CD with Github Actions"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Java 22",
          "Java 22 Setup Guide",
          "Clients Used in Course (VERY IMPORTANT)",
          "Course Resource"
        ],
        "Dependencies": [
          "Init Dependencies using Intellij",
          "Init Dependencies using Start.Spring.io",
          "Explaining Dependencies",
          "Dgs Code Generation Plugin",
          "Dgs Plugin Config and Properties Setup"
        ],
        "GraphQL Data types": [
          "Note!!!",
          "Basic Types",
          "Interface and enum",
          "Union"
        ],
        "Extended Scalar Types": [
          "Extended Scalars",
          "Extended Scalar Config",
          "Extended Scalars Usage"
        ],
        "Basic Endpoints Types": [
          "Query type Part 1",
          "Query type Part 2",
          "Mutation Type",
          "Subscription Type"
        ],
        "GraphQl Entities": [
          "GraphQL entities part 1",
          "GraphQL entities part 2",
          "GraphQL entities part 3",
          "GraphQL entity input"
        ],
        "Jpa Entity Type": [
          "Company Jpa Entity",
          "Other Jpa Entity type",
          "Why we won't be using jpa entity relationship",
          "Enum Converter",
          "Enum Converter Github issue closing",
          "Jpa Repositories",
          "Implement Only the Repository Subset you need"
        ],
        "GraphQL Entity Scripts Implementation": [
          "Initial GraphQL Query",
          "Initial GraphQL Query part 2",
          "Initial GraphQL Mutation",
          "Initial GraphQL Mutation part 2",
          "One Query - One Mutation"
        ],
        "Controller Chassis": [
          "Http verb - GraphQL translation",
          "Http verb - GraphQL translation part 2",
          "Company Controller Chassis",
          "Departmen Controller Chassis and Generated Constants",
          "Employee Controller Chassis"
        ],
        "Mapper Util": [
          "Resource",
          "Mapper Util part 1",
          "Mapper Util Part 2"
        ]
      },
      "requirements": [
        "Java 22. However, Java 8+ experience is enough",
        "Basic Familiarity with Spring or Spring Boot",
        "Very little experience with JPA (You will be guided on all you need to know)",
        "Appreciates Hands-on Coding"
      ],
      "description": "Would you like to learn how to leverage GraphQL using Spring? Then this course is for you\nIt teaches you all you need to know about Spring GraphQL from scratch. We take a pragmatic approach building on the previous sections.\nYou will master why and how each component GraphQLcommunicates.\n\n\nThe course also explains pragmatically how to:\nextend the basic GraphQL types.\nuse Instrumentation to create extra validation logic\nimplement Spring Authorization Server (Oauth2): Client Credentials Granr\nimplement CI/CD Pipeline using Git actions\nuse GraalVm to create a native image depending on your operating system\ninteract with Kubernetes using the low-level kubectl commands to create pods, services, deployments, config maps, port-forwarding\nuse WebSocket to publish events or messages\nSpecific Spring Data JPA repositories to do specific tasks\nuse SpringBootTest with GraphQL, Junit and Hamcrest\nWe write effective Integration test to cover virtually all our use cases\n\n\nIn addition to the Course, you will learn about and/or highlight a bit on:\nContainerization (Docker)\nThe course shows you how to containerize our application. i.e create image\nwe likewise ran the application via Docker commands in the terminal\nPostgresDB\nCustom Exceptions and Validations\nJava records\nSpring Boot Starter Docker Compose and how to use it in development.",
      "target_audience": [
        "This course is for all Java developers: beginners to advanced who want to learn GraphQL with Spring",
        "For developers/Engineers who want api responses to be dynamic",
        "The Course is idea for all Java/ Spring Developers and intending Spring Developers"
      ]
    },
    {
      "title": "Python programming Bible - From Beginner to Advanced",
      "url": "https://www.udemy.com/course/python-programming-bible-from-beginner-to-advanced/",
      "bio": "Learn core python programming with theory, hands-on, 230+ MCQ python assignments and 5 coding assignments",
      "objectives": [
        "Student will learn fundamental and in-depth concept about Python Programming with practical and hands-on examples.",
        "The fundamental concept, that student will learn, will help applying the concept to advanced python programming.",
        "Students will learn about Python installation, program execution, types and operations, python statement, looping techniques, Function concepts, Class & OOPS concepts, Exception handling and various other concepts of Python.",
        "The fundamental concept that student will learn will make them confident to face any interviews for python programming jobs.",
        "230+ assignment and interview questions with answers will make student confident to face python interviews.",
        "Student will learn data Structures in Python ( Stacks and Linked List )",
        "Student will learn programming by practice with 5 Coding assignments."
      ],
      "course_content": {
        "Python programming Bible - Course Overview": [
          "Course Overview and Course Materials"
        ],
        "Python Introduction": [
          "Python History & Introduction",
          "Why to use Python ?",
          "What can be done in Python ?"
        ],
        "Python Installation & Program Execution": [
          "Python Installation",
          "Python Installation Summary",
          "Installation Component & Python Interpreter",
          "Python Program Execution"
        ],
        "Python Data Types & Processing ( Introduction)": [
          "Introduction to Python data types",
          "HandsOn to Python DataTypes"
        ],
        "Python Data Types & Processing (Numbers)": [
          "Introduction to integer, float & complex numbers, built-in function, expressions",
          "Demo (variable create & assign, division, expression, normal & chain comparison)",
          "Demo (Complex,Hex,octal,bin no, bitwise operation, builtin function(pow,abs,min)",
          "Introduction and Demo to Built-in Module ( Math & Random )",
          "Introduction and demo to Decimal, Fraction and Boolean.",
          "Introduction and demo of SETs",
          "Python Assignment 1"
        ],
        "Python Data Types & Processing (Dynamic Typing)": [
          "Intro and Demo to Dynamic Typing. Garbage Collection, Cache & Reference Count",
          "Python Assignment 2"
        ],
        "Python Data Types & Processing (Python String)": [
          "Introduction to Python String",
          "Demo for String Creation, Escape Sequence & Raw String",
          "Writing comment in python",
          "Demo ( Concatenation, Repeat, length, Membership operator-IN)",
          "Demo (Indexing, Slicing and Extended slicing )",
          "Demo ( Immutability, find, replace, split )",
          "Demo ( strip, case, start & end character or string )",
          "Demo ( string conversion, alignment, integer and float formatting)",
          "Demo (Relative, Position, Keyword, dataype based, dictionary based Formatting )",
          "Python Assignment 3"
        ],
        "Python Data Types & Processing (Python List)": [
          "Introduction to Python List",
          "Demo (length, index, slice operator, repeat, update or in-place changes in list)",
          "Demo (index, slice, extended slice, sort, reverse, append, pop, basic matrix )",
          "Demo ( Extend, reverse, index, remove, count, delete )",
          "Python Assignment 4"
        ],
        "Python Data Types & Processing (Python dictionary and Tuple)": [
          "Introduction to dictionary",
          "Demo of dictionary",
          "Introduction to Tuple",
          "Hands on for Tuple",
          "Introduction and Demo of namedtuple",
          "Python Assignment 5"
        ],
        "Python Data Types & Processing (File Operation in Python)": [
          "Introduction to File operation in python",
          "HandsOn to file operation in python",
          "EVAL function - convert a string to python object",
          "Demo (EVAL function read and write python object in file )",
          "Demo (PICKLE function read and write python object in file )",
          "Demo (JSON function read and write python object in file )",
          "Python Assignment 6"
        ]
      },
      "requirements": [
        "Enthusiasm to learn the python programming and willingness to devote time for python learning",
        "A computer with internet connection. Steps are provided for python installation and program execution.",
        "Basic understanding about computer programming language."
      ],
      "description": "Python programming bible course is divided into 8 modules that covers the python programming with theory and practical examples.  This is lectures series of python programming from beginner to advanced topics.  Jupyter files and PPT files used in this lecture have been uploaded.\nIn addition to theory and handson, 230+ assignment and interview question with answers will prepare student for any interview.\nFollowing are the module in the course :\n- Python Introduction & History\n- Installation & Program Execution\n- Python Data Types and processing\n- Python Statement\n- Python Function\n- Python Module and Module Package\n- Class and OOPs concepts\n- Exception handling\n\n\nPython Introduction & History\nThe course starts with basic python introduction and history of python. It also answers basic question on why we should learn python when there are so many programming languages available in the market. It also delves into what can be done in python and what are the areas where python does not score very well.\nInstallation and Program Execution\nThis module covers details about the python installation using anaconda package and steps of python program execution. The python programmer will be able to write their first \"hello world\" program in python using Jupyter editor and Python shell.\nPython Data Types and processing\nThis covers python built-in object types like Numbers- integer, float, complex number, String etc. It also covers  details on list, tuple, dictionary, set and file operations that can be done in python. Dynamic typing concept is investigated here that is fundamentally different from other programming language.\nPython Statement\nThis module covers basic IF, WHILE and FOR loop that is at the heart of python compound statement. We will also go through print, range, zip, enumerate function that is provided by python for looping operations.Iteration and Comprehension is also covered here to traverse the container object in faster and efficient way.\nPython Function\nPython function is natural progression after the study of python statement. In this module we will go through the details of various function, nested function and various types of variables like global, local and non-local. We will also go through the details about a function that takes one or multiple input and how it returns one and multiple outputs. We will also go through the advance concept like lambda function, map, filter & reduce concepts and generator & extended generator concepts.\nPython Module and Module Package\nThis module explains module coding  and module package. It covers the concept about how and when to use IMPORT, FROM and RELOAD commands.\nPython Class and OOPs\nThis module starts with basic introduction of Class and object oriented programming in python. It also includes concept of inheritance, abstract class and operator overloading with theory and  practical examples.\nPython Exception handling\nThis is last module of this course that covers the concepts of exception handling framework in python. We will go through the usage of TRY, EXCEPT, ELSE, FINALLY, RAISE and ASSERT examples. We will also see how to use nested exception handling and how and why to use class hierarchy in exception handling.",
      "target_audience": [
        "Anyone who wants to learn python from scratch",
        "Anyone who wants to take their python programming knowledge to next level with theory and hands-on practice examples.",
        "Anyone who would like to learn by practice with 230+ assignment question."
      ]
    },
    {
      "title": "Detecting memory leaks in nodejs and V8",
      "url": "https://www.udemy.com/course/detecting-memory-leaks-in-nodejs-and-v8/",
      "bio": "How to detect memory leaks using heapdump, snapshots, and profiler in nodejs/react/javascript and V8 engine",
      "objectives": [
        "How to detect memory leaks in React/Javascript/Nodejs/V8",
        "How the memory is orgnised in V8",
        "How to use heapdump",
        "How to take memory snapshots",
        "How to use chrome developer tools to profile your application",
        "How to write code that will help you find leaks instead of hiding them",
        "How to read memory snapshots"
      ],
      "course_content": {
        "Introduction": [
          "Hello! Introduction to the course",
          "Required tools"
        ],
        "V8 garbage collector": [
          "Introduction",
          "What is a garbage collector?",
          "How the memory is organised",
          "Minor GC - Scavenge",
          "Major GC - Mark / Sweep / Compact"
        ],
        "Snapshot, Heapdump, Profile!": [
          "Configure PHPStorm for profiling",
          "Create snapshot with PHPStorm",
          "Create snapshot with Heapdump",
          "Create snapshot with chrome tools",
          "How to create usefull snapshoots"
        ],
        "Finding THE LEAK": [
          "Intro",
          "Making an observation",
          "Buying some time with PM2",
          "Node js and V8 memory options",
          "Summary, Comparision, Contaiment, Statistics",
          "Array memory leak, from heap snapshot to source",
          "TypeDi type memory leak type",
          "Closure type memory leak",
          "SetInterval leak",
          "Filehandler/Streams leak"
        ],
        "Final words": [
          "Summary"
        ]
      },
      "requirements": [
        "nodejs",
        "javascript",
        "chrome tools"
      ],
      "description": "Detect memory leaks like a pro. In this course, you will learn how to connect monitoring to your application, how to take memory snapshots and most importantly, how to compare them with each other to find leaks.\nYou will learn how memory is organized in V8, why short-lived objects are best, and how to write code that will help you find potential memory leaks.\n\n\nYou will learn how to write code that should not contain any leaks, how to find existing ones, and how to write memory-efficient applications.\n\n\nThe entire course is based on nodejs, but these rules can be used in any language that uses the garbage collector.\n\n\nWe will discuss the algorithms that the V8 uses, how long it takes to free memory.\n\n\nWe will also cover what is included in a memory snapshot, what is contaiment, summary, and how to work with comparing them to each other.\n\n\nEffective and trouble-free operation of the application is work on many levels, thanks to this course one of them will be explained and I hope it will become a little more friendly at a time when conscious memory management has gone into the background, thanks to such a great tool as GC. However, he himself is not always able to fix everything, sometimes he needs a little help.\n\n\nThis is why this course was created.\nI belive that together we can save a lot of memory!",
      "target_audience": [
        "Node js/javascript programmers that are concerend about memory efficency of their application",
        "Node js/javascript programmers that want to improve performance of their applications by reducing the memory usage"
      ]
    },
    {
      "title": "SOTIF Safety of Intended functionality -automotive ISO 21448",
      "url": "https://www.udemy.com/course/sotif-safety-of-intended-functionality/",
      "bio": "ISO 21448 applies to functionality that requires proper situational awareness in order to be safe in absence of fault",
      "objectives": [
        "What is SOTIF ISO PAS 21448 standard in automotive",
        "How to do SOTIF analysis",
        "Steps involved in SOTIF analysis using STPA",
        "Safety constraints and safety functions in L3 autonomous development",
        "Address all possible causal factors and when to close analysis"
      ],
      "course_content": {
        "Coarse Promo": [
          "Why to enroll for this SOTIF coarse"
        ],
        "Introduction of trainer": [
          "About trainer and his experience",
          "About trainer and his experience 2"
        ],
        "Introduction to SOTIF": [
          "Why safety? What are current standards?",
          "Try to analyze Tesla accident",
          "Why do we need SOTIF? Why is ISO26262 not enough?",
          "System and Driver aspect",
          "Handbook on STPA",
          "STPA using SOTIF"
        ],
        "Step 1: Accident model": [
          "Inputs and Outputs for Sotif using Stpa",
          "Derive Accident model and control structure",
          "Accident model"
        ],
        "Step 2: Derive UCA": [
          "How to derive UCAs"
        ],
        "Final step: Causal factor analysis": [
          "Part 1: State machine for causal factor analysis",
          "Detailed process of causal factor analysis",
          "More design hints",
          "Detailed process of causal factor analysis with driver misuse"
        ]
      },
      "requirements": [
        "Very basic understanding of automotive systems",
        "optionally ISO26262 safety standard is good to have"
      ],
      "description": "ISO/PAS 21448 applies to functionality that requires proper situational awareness in order to be safe. The standard is concerned with guaranteeing the safety of the intended functionality — SOTIF — in the absence of a fault.\n\n\nAutomotive engineers out there and safety managers out there are hearing this all day about SOTIF requirements and SOTIF analysis. But are not sure how to achieve compliance to this standard. Now you have the opportunity to do so.\n\n\nThe coarse offers you in-depth awareness and analysis methods to apply SOTIF analysis and derive requirements. it also addresses how this standard is related to ISO26262, how are they different, if one is enough or both of them are required.",
      "target_audience": [
        "Automotive developers",
        "Automotive system development associates",
        "Automotive software developers",
        "Automotive safety analysts",
        "Functional safety managers",
        "Operational safety managers"
      ]
    },
    {
      "title": "Azure Service Bus for Developers",
      "url": "https://www.udemy.com/course/azure-service-bus-for-developers/",
      "bio": "Deep Dive into Azure Service Bus and learn how to use this popular message broker!",
      "objectives": [
        "Azure Service Bus Concepts",
        "Azure Service Bus web interface",
        "General Messaging Concepts applicable anywhere",
        "How to connect to Azure Service Bus locally",
        "Azure Service Bus Architecture",
        "Understand the difference between Topics and Queues",
        "Azure CLI to setup Azure Service Bus",
        "Round Robin Distribution of messages"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Topic VS Queue",
          "Azure Service Bus pricing",
          "Why we need Azure Service Bus",
          "Azure Overview"
        ],
        "Setup Azure Service Bus": [
          "Sign up for Azure",
          "Setup 101 for a basic queue",
          "Create a Topic",
          "Working with Topics"
        ],
        "Azure Service Bus Developer Skills": [
          "Azure CLI",
          "Competing Consumers",
          "Logic Apps Integration",
          "Round Robin Distribution of messages",
          "RabbitMQ Integration",
          "Azure Diagnostics Logs",
          "Monitoring and Alerting",
          "Service Bus Advanced features",
          "Azure Service Bus Quiz - 1",
          "Azure Service Bus Quiz -2",
          "Setting up a new Python based queue"
        ],
        "Conclusion": [
          "GoodBye?"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "Access to a paid or free Azure Account",
        "Azure charges are to be watched and taken by the student"
      ],
      "description": "Welcome to this Azure Service Bus\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in Azure Service Bus.\nIn this course you will Learn by example, where we demonstrate all the concepts discussed so that you can see them working, and you can try them out for yourself as well.\nMy step-by-step training will initiate you into the world of Azure Service Bus.\nAzure Service Bus is a powerful yet easy to use message broker developed on Microsoft's cloud platform, Azure. It is used to automate all kinds of communication between apps today. Service Bus can send messages in different formats along with providing you useful dashboards to get a birds eye view on who got which message!\nWhy Learn Service Bus Messaging?\nAnother Question: How can you deliver messages with a cloud infrastructure?\nWhether your systems are built on monolith or a Micro-service based architecture, you need you data moving from one point to another and in good time. Azure Service Bus does the job. Azure Service Bus is like central hub where you send messages from all your applications, and the recipients pickup the messages, and process them.  Azure Service Bus can be compared to something like the Hub and Spoke model. Like a Gmail Server it takes in, organizes, and delivers messages.\nThe course will explain to you not only the theory of Azure Service Bus messaging, but also provide hands-on coding exercises to get your hands dirty and your mind moving. Whether you are a messaging enthusiast, beginner, or experienced developer, this course will surely brings great value for you!\nWe also utilize the Azure Service Bus UI to understand the status of our messages and detect errors, if any.\nBy the end of the course you will have set up and learnt to manage Azure Service Bus like a pro.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Any developer looking to understand how to use Azure Service Bus efficiently",
        "Developers who are curious about Azure Service Bus and messaging concepts",
        "Anybody with a desire to earn more by learning more!",
        "Anyone who wants to learn Azure Service Bus for for managing complex messaging systems",
        "Anyone who wants to learn Message-Queueing"
      ]
    },
    {
      "title": "SOLID Simplified - Software Design Fundamentals",
      "url": "https://www.udemy.com/course/solid-software-design-fundamentals/",
      "bio": "A Comprehensive Guide for Software Developers and Aspiring Architects",
      "objectives": [
        "Build strong foundation for software design",
        "Build knowledge essential for moving up the technical ladder",
        "Accelerate understanding of design patterns"
      ],
      "course_content": {
        "Introduction": [
          "About the Course",
          "Background"
        ],
        "Single Responsibility Principle (SRP)": [
          "Introduction",
          "Introduction - Quiz",
          "Consequences",
          "Consequences - Quiz",
          "Solution",
          "SRP - Only for Class?",
          "Only for class - Quiz",
          "Conclusion",
          "Quiz for SRP"
        ],
        "Open Closed Principle (OCP)": [
          "Introduction",
          "Introduction - Quiz",
          "Consequences",
          "Consequences - Quiz",
          "Solution",
          "Solution - Quiz",
          "OCP Compliance",
          "OCP Compliance - Quiz",
          "Conclusion",
          "Quiz for OCP"
        ],
        "Liskov Substitution Principle (LSP)": [
          "Introduction",
          "Introduction - Quiz",
          "Consequences",
          "Consequences - Quiz",
          "More Violations",
          "More Violations - Quiz",
          "Solution",
          "Solution - Quiz",
          "Conclusion",
          "Quiz for LSP"
        ],
        "Interface Segregation Principle (ISP)": [
          "Introduction",
          "Introduction - Quiz",
          "Consequences",
          "Consequences - Quiz",
          "Solution",
          "Solution - Quiz",
          "Comparison with Other Principles",
          "Comparison with Other Principles - Quiz",
          "Conclusion",
          "Quiz for ISP"
        ],
        "Dependency Inversion Principle (DIP)": [
          "Introduction",
          "Introduction - Quiz",
          "Consequences",
          "Consequences - Quiz",
          "Back to Definition",
          "Back to Definition - Quiz",
          "Solution",
          "Solution - Quiz",
          "Conclusion",
          "Quiz for DIP"
        ]
      },
      "requirements": [
        "Understanding of object-oriented concepts and at least one object oriented language such as C++, C# or Java",
        "Basic understanding of UML notations"
      ],
      "description": "- Have you found yourself losing interest mid-way on a book on software design that you once started with a lot of enthusiasm?\n- Have you wished to strengthen your software design foundation but never found enough time to understand it in detail?\n- Have you struggled in understanding design patterns?\n- Have you gone through SOLID principles but can not still clearly distinguish among them?\n\nThis course addresses all the above issues:\n\nIt is a 1.5 hours comprehensive guide delivered with crystal clear communication.\nThe diagrams and the visual effects keep you focused and  interested throughout the course.\nIt is not just the speaker but also the content that talks to you!\n\nHere's some feedback from the course students:\n\n\n-  \"I took this course the night before an interview and it paid off. Was able to explain SOLID principles in OOP during the interview, and it made me look very good!  \"\n- \"It's really an awesome course. Instructors approach of explaining consequences and solutions is very good and different situations has been explained.\"\n-\"This is an excellent course for SOLID principles with the real time examples. The way each and every principle explained is great\"\n- \"I found this very useful, I tried another courses more focused on the concepts instead the examples. In this course I found both. Concepts and Examples. Very clear and well complemented with real life examples. Thanks!!\"\n- \"The SOLID concept is very methodically exposed, with a lot of clarity, through very comprehensible and concrete examples...\"\n- \"The simple and focused examples really help to understand the SOLID priciples and consequences of naive program development.\"\n- \"Great analysis of the principles...\"\n- \"Crisp, clearly explains basics of SOLID.\"\n- \" Must for every developer. Very nice explanation with examples\"\n- \"Very good and precise...\"\n- \"Although I have had a fair idea about the Design Principles prior to this course, the simple and crisp presentation has only helped me in gaining a newer perspective\"\nDo not let the duration and colorful appearance of the training allow you to think that the content is not deep enough. In fact even the software architects and most experienced developers will immensely benefit as the training covers aspects of the SOLID principles that are not readily available. This also lays a strong base for you to understand design patterns as most of the design patterns are based on these principles.\n\nNote this course needs you to have a prior experience in software development.\nThe training explains with a simple example and builds on it as you go deeper into it. Examples are not overly simple nor too complex - They have just the right balance to help you relate back to your project.\n\nJoin the course with a unique, never-seen-before content and delivery style!",
      "target_audience": [
        "Experienced software developers",
        "Aspiring and Junior software architects"
      ]
    },
    {
      "title": "Data Structures & Algorithms Mastery (2025) : Practice Test",
      "url": "https://www.udemy.com/course/data-structures-algorithms-mastery-practice-test/",
      "bio": "Sharpen Your Problem-Solving Skills and evaluate with Hands-On Practice Tests - Excel in Data Structures & Algorithms",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Welcome to the Data Structures & Algorithms Mastery Practice Test for 2024! This course is meticulously designed to help you enhance your problem-solving abilities and evaluate your proficiency in data structures and algorithms through hands-on practice tests. Whether you're preparing for interviews, examinations, or simply aiming to deepen your understanding, this course is your ultimate resource.\nCourse Structure:\nSection 1: Basic Data Structures and Algorithms\nThis section comprises 50 questions aimed at assessing your fundamental understanding of basic data structures such as arrays, linked lists, stacks, queues, trees, and graphs, along with essential algorithms like searching and sorting.\nSection 2: Advanced Data Structures and Algorithms\nDive into 50 questions that challenge your knowledge of advanced data structures including heaps, hash tables, advanced trees, and graph structures, as well as complex algorithms such as greedy algorithms, divide and conquer, dynamic programming, and backtracking.\nSection 3: Problem Solving Using Data Structures and Algorithms\nPut your skills to the test with 50 questions focusing on solving classic problems using data structures and algorithms. From rotating an array to evaluating reverse polish notation, these questions cover a wide array of problem-solving scenarios.\nSection 4: Advanced Concepts and Applications\nIn this section, tackle 50 questions designed to assess your understanding of advanced concepts like time and space complexity, algorithm design techniques, and the practical application of data structures and algorithms in real-world scenarios.\nWhy Take This Course?\nGain Confidence: Practice with a diverse range of questions to boost your confidence in tackling data structures and algorithms challenges.\nHands-On Learning: Engage in hands-on problem-solving to reinforce your understanding of key concepts.\nTrack Your Progress: Assess your strengths and weaknesses across different topics and refine your study strategy accordingly.\nPrepare for Success: Whether you're preparing for interviews or examinations, this course equips you with the skills and knowledge needed to excel in data structures and algorithms.\nEnroll now and embark on your journey towards mastering data structures and algorithms in 2024!",
      "target_audience": [
        "Aspiring software engineers and computer science students",
        "Individuals preparing for technical interviews",
        "Those seeking to enhance coding skills and algorithmic problem-solving abilities",
        "Participants in competitive programming competitions"
      ]
    },
    {
      "title": "Generative AI for Python Developers with Google AI",
      "url": "https://www.udemy.com/course/generative-ai-for-python-developers-with-google-palm-api/",
      "bio": "Power your Python applications with Google's advanced GenAI capabilities",
      "objectives": [
        "How to add Generative AI capabilities to your Python applications",
        "Integrating the Generative Language API SDK into your Python code",
        "Consuming the Generative Language REST API in your Python code",
        "Integrating the Vertex AI SDK into your Python code",
        "Consuming the Vertex AI REST API in your Python code",
        "Develop a GenAI Bot in Python with Flask",
        "Understand the fundamental concepts of Generative AI from a developer's perspective",
        "Learn about Prompt Engineering best practices",
        "Learn about different prompt design strategies",
        "Learn how to use Vertex AI Studio to design prompts",
        "Understand how LLM model parameters work"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "AI vs. ML vs. GenAI",
          "Google PaLM2 LLM",
          "How Does Generative AI Generate New Content?",
          "Quiz: Important GenAI Concepts"
        ],
        "Setup & Configuration": [
          "Setup & Configuration Overview",
          "Installing Python + IDE + Code Exercise Files",
          "Signing Up for a Google Cloud Platform (GCP) Account",
          "Installing the gcloud CLI",
          "Navigating the Google Cloud Console + Vertex AI Studio",
          "Enabling the Vertex AI and the Cloud Storage APIs",
          "Enabling the Generative Language API",
          "Creating a Service Account"
        ],
        "Prompt Engineering": [
          "What is Prompt Engineering?",
          "Prompt Design Strategies",
          "Zero-Shot Prompting",
          "One-Shot Prompting",
          "Few-Shot Prompting",
          "Testing Your Prompts via cURL",
          "Quiz: Prompt Engineering"
        ],
        "API Integration": [
          "Introduction to Vertex AI Google PaLM API",
          "The Game Plan",
          "Vertex AI REST API Integration",
          "PaLM REST API Integration",
          "Vertex AI SDK Integration",
          "PaLM API SDK Integration",
          "Creating Your Own GenAI Bot"
        ],
        "Conclusion": [
          "Recommended Further Study",
          "Course Summary"
        ]
      },
      "requirements": [
        "Basic proficiency in Python"
      ],
      "description": "Welcome to the \"Generative AI for Python Developers with Google AI\" course!\nAre you a Python developer looking to harness the power of Generative AI in your applications without diving too deep into the complexities of Machine Learning and Data Science? If so, this course is tailor-made for you!\nIn this comprehensive course, you'll discover how to seamlessly integrate Google's advanced Generative AI capabilities into your Python code through the Vertex AI API. Designed by a developer, for developers, no prior knowledge of Machine Learning or Data Science is needed. It focuses on practically, giving you just enough of the what and why, and then a lot of the how.\nThroughout the course, you'll gain a strong foundation in Generative AI, understand the mechanics of how generative AI generates new content, and explore the driving force behind it all—the Google Gemini and PaLM2 Large Language Models. You'll also learn the art of prompt engineering, using Vertex AI Studio, you will craft prompts that yield impressive results tailored to your specific use cases.\nThe core of the course focuses on practicality. You'll be guided through the process of seamlessly integrating the Google Vertex AI API into your Python applications. And the best part? You'll build your very own generative AI application to practice your newly acquired Gen AI skills.\nCourse Highlights:\nLearn how to integrate the Google Vertex AI API into your Python code\nDevelop a GenAI Bot in Python with Flask\nUnderstand the fundamental concepts of Generative AI from a Developer's perspective\nLearn how to use Vertex AI Studio to design prompts\nLearn about Prompt Engineering best practices\nUnderstand how LLM model parameters affect creativity in responses\nDon't miss this unique opportunity to expand your Python development toolkit with the creative possibilities of Generative AI. Enroll today and unlock a new dimension of software development!",
      "target_audience": [
        "Software Developers / Engineers"
      ]
    },
    {
      "title": "Let`s Write Your Research Proposal - Research Methodology",
      "url": "https://www.udemy.com/course/lets-write-your-research-proposal-research-methodology/",
      "bio": "Research Methodology",
      "objectives": [
        "Complete research methodology aspects",
        "Proposal writing from the scratch, until the end",
        "Quantitative / Qualitative / Mix-modes research flavours",
        "Plan your research`s evaluation strategy",
        "How to write the literature review?"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the module",
          "Getting Ready",
          "Finding a research problem",
          "Finalzing your objectives",
          "Positivism",
          "Interpretivism",
          "Research Philosophy",
          "Proposal Outline",
          "Proposal Outline - II",
          "Iterative Framework",
          "Thematic Analysis"
        ]
      },
      "requirements": [
        "N/A"
      ],
      "description": "In any undergraduate or postgraduate programme, the ultimate milestone is to complete a research project. The inception of a research project occurs from the research proposal. This course will teach you the significant concepts associated with research methodology and how you can create your research proposal.\nUpon successful completion of this course, you will be able to:-\nDistinguish the difference between an implementation project and a research project.\nHow to gauge the research contribution?\nHow to find a research gap?\nHow to create a problem statement?\nHow to create a research question?\nHow to set the aim/motivation and research objectives?\nWhat is the research philosophy?\nQuantitative, Qualitative and mix-mode researches.\nHow to create your literature review?\nHow to create the methodology?\nHow to plan your research`s evaluation strategies?\nComplete research proposal structure\nIterative framework in practice.\nThematic Analysis in practice",
      "target_audience": [
        "All undergraduate and postgraduate students in streams of computer science, software engineering, data science, information technology, information systems"
      ]
    },
    {
      "title": "GoLang Concurrency",
      "url": "https://www.udemy.com/course/golang-concurrency/",
      "bio": "Concurrency ++. With React. A Mustard Seed of Courses.",
      "objectives": [
        "Go (GoLang): Concurrency",
        "Concurrency Patterns."
      ],
      "course_content": {
        "Introduction && Foundations": [
          "About:",
          "Install Node",
          "Intall PHP 7.4 ubuntu 19.10",
          "Python 3.8 ubuntu 19.10 install"
        ],
        "Concurrency": [
          "Resources",
          "The Setup",
          "Concurrency Rant 1",
          "Concurrency Breakdown Rant 2",
          "Deadlock Example",
          "Deadlock Example2",
          "Livelocks",
          "Write Skeleton Application",
          "First Micro Engine",
          "First Dual Engine",
          "Setup the roadmap",
          "Simulate Work Lab Setup",
          "Coordinate Work Engines with Wait groups",
          "Wait Group Use Case",
          "Sync.Cond Example One",
          "Sync.Cond Example Two",
          "Sync.Once",
          "Sync.Mutex",
          "sync.RWMutex",
          "Cli Utility One",
          "CLI Utility Two",
          "Quick note on inerfaces",
          "Intro To Pool Excersise",
          "Pool One Exercise Solution",
          "Debug Multiple Clients One port",
          "Solution Concurrent Ports Concurrent Connections",
          "Sync.Map Exercise",
          "Sync Map Exercise One Solution",
          "PM2 Keep Go Binaries Alive!!!",
          "Rant: Connection Pool Vs. Memory Allocation Pool",
          "Slim Connection Pool Part I",
          "Using Our Slim Connection Pool",
          "Memory Pool Project Intro",
          "Pool Project p1",
          "Pool Project Intro to P2",
          "Pool Project P2 Client",
          "Pool Project P2 Server",
          "Pool Project P2 Optimized Server",
          "Pool Project With Sync.Pool",
          "Pool Exercise Github Repo",
          "Road Map From Here",
          "Installing Mongo",
          "Test Mongo Remote Conn & Security",
          "Quick Mongo Crash Course",
          "Redis Install Config",
          "Mongo Connection Module Part I",
          "Mongo Connection Module Part II with Private Repo Config",
          "Websocket Pool Part I",
          "Websocket Pool Part II",
          "Websocket Pool Part III",
          "Websocket Pool Part IV",
          "Websocket Pool Convert Http To Gorilla Mux",
          "Websocket Pool add Public Data Mod",
          "Websocket Pool Upgrade Http to Ws",
          "Websocket Pool Test JSON Msg",
          "Start Pure Go Websocket Client",
          "Finish Non TLS Websocket Client",
          "Start TLS Websocket Client & Server",
          "Upgrade WSServer to TLS add UUID",
          "Finish Websocket Server Client TLS Upgrade",
          "Websocket Client Pool Part I",
          "Websocket Client Pool Part II",
          "Dead Audio Next 5 Videos Listen To your favorite Music",
          "AsyncQ Public Module",
          "Redis Part I",
          "Redis Part II",
          "Redis Part III",
          "Tie Redis Websocket Asycq Together",
          "AUDIO BACK!!! -> Redis To Public Mod Tie 3 Players Together",
          "Continue to Tmux Project"
        ],
        "The Go Tmux Project": [
          "About",
          "Coming Tmux Project",
          "Tmux Part I",
          "Tmux Part II",
          "Tmux Part III",
          "Tmux Part IV"
        ],
        "Basic Context 101": [
          "Context Done 001",
          "Context Done TODO & Background",
          "Context Deadline"
        ],
        "Channels && Wait Group && Go Func Exercises": [
          "Mutliple File GZip Excercise",
          "Wait Group Word Count Part I",
          "Wait Group Word Count Part II",
          "Basic Channels Exercise 001",
          "Channels 002",
          "The Ominous ok",
          "Closed Channels with ok and read",
          "Channel 005 Defer Channel Close and Range pattern",
          "channels 006 Simulate sync.Cond with channels",
          "Channels 007 Safe Cleanup Closing Pattern",
          "Watch out for nil value on closed channel",
          "channels 008 Unblocking and Blocking Behavior",
          "channels 009 Buffered Channels 2Poc",
          "channels 010 Range Example",
          "Channels 011 Chart and Examples",
          "Channels 012 Unblocking Select"
        ],
        "Websockets / Redis & Mongo Exercises": [
          "About:",
          "Mongo Node Command Interpreter Project",
          "Generate Fake Data",
          "Mongo Proj Start",
          "Mongo Proj: Test Connection Server-Side",
          "Polish Off Mongo Proj Server Skeleton",
          "Start Client",
          "Deprecation Warning Fix",
          "Continue Mongo Client Interpreter",
          "First Command From Client To Server",
          "Finish insert-from-file Command",
          "insert-many command",
          "find (all) command",
          "foreach command",
          "Count command",
          "skip command",
          "JSON Placeholder Data for Sort Command",
          "Sort Command",
          "Limit Skip Sort",
          "find-one-int & find-one-str commands",
          "find-with-obj",
          "find-with-obj-count",
          "more mock data",
          "$ne operator",
          "$lt operator",
          "$gt, $lte, $gte operators",
          "$gt, $lt, $gte, $lte, with strings and combining them.",
          "find-with-obj-sort -- Find and Sort Command",
          "find-with-obj-filter Add a projection based command",
          "USING GT and LT with Dates && Filter",
          "find-with-obj-filter-sort FindObj FilterObj SortObj Command",
          "$nin operator practice",
          "$and operator",
          "$and with sort",
          "$or experiments",
          "ARRAYS, EMBEDDED DOCS, $all, $size etc.",
          "ARRAYS, EMBEDDED DOCS, $all, $size etc. Part II",
          "Generate Nested array of docs",
          "$elemMatch",
          "$regex, $type, more examples",
          "Add new update command",
          "Finish Update Command & Test.",
          "Add UpdateOne command & Test",
          "UpdateOne Practice",
          "Add UpdateMany Command",
          "Add ReplaceOne Command",
          "Test ReplaceOne Command",
          "UpdateOne $set and $unset combined",
          "UpdateMany $exists $replace",
          "UpdateMany $currentDate",
          "Test Combined UpdateOne $set $currentDate",
          "UpdateOne arrays practice with $push & $each",
          "UpdateOne $addToSet",
          "UpdateOne $pop",
          "UpdateOne $pullAll",
          "$ <- this",
          "$ <- this w/ $unset",
          "$ <- this with array of docs",
          "$ <- with $elemMatch",
          "$ <- with $inc",
          "remove, deleteOne, deleteMany",
          "remove, deleteOne, deleteMany Part II",
          "Aggregation 001",
          "Aggregation 002",
          "Aggregation 003",
          "Aggregation 004",
          "Aggregation 005",
          "Aggregation 006",
          "Aggregation 007",
          "Aggregation 008",
          "Aggregation 009",
          "Aggregation 010",
          "Aggregation 011",
          "Aggregation 012",
          "Aggregation 013",
          "Aggregation 014",
          "Aggregation 015",
          "Aggregation 016",
          "Aggregation 017",
          "Aggregation 018",
          "Aggregation 019",
          "Aggregation 020",
          "Aggregation 021"
        ],
        "Modules": [
          "About:",
          "go modules 101",
          "Go Public Module linked to Github",
          "Setup for private github repo usage",
          "Using Our Own Public Module Repo",
          "Sub Modules",
          "Using Private Go Module Repos"
        ],
        "Isomorphic Go Exercises": [
          "About:",
          "Go Serving React 001",
          "Go Serving React 002",
          "Go Serving React 003",
          "Go Serving React 004"
        ],
        "React Frontend Framework Campanion": [
          "About:",
          "React Concurrency Front End",
          "React Concurrency Front End Part II",
          "React Front End III",
          "React Front End IV",
          "React Front End V",
          "First React App",
          "Starting the Interface",
          "Interface Continued Part II",
          "Interface Part III",
          "Interface Part IV",
          "Interface Part V",
          "Start Routes Dashboard & Authentication",
          "Hookup Router Switch to Components",
          "Navbar Work",
          "useInputChange Hook",
          "Authtication Registration Component Part I",
          "FormTextField && Images",
          "Form Button Field",
          "Registration Form Part I",
          "Registration Form Part II",
          "Registration Form Part III",
          "Recap Polish Off Registration Form / Forward to Login Form",
          "Login Form Part I",
          "Login Form Part II",
          "Login Form Part III",
          "Polish Off Login Form"
        ],
        "React Node Backend": [
          "About:"
        ]
      },
      "requirements": [
        "Basic understanding of Go (GoLang)"
      ],
      "description": "This is a short and sweet course dedicated to Go ( GoLang ) concurrency. I use a simple POC ( Proof of concept ) Module approach to demonstrate each micro topic in the simplest manner I can. First we will discuss what concurrency and parallelism is and break it into a simple concept of building blocks.Then we will be exploring go's sync package which includes a (Conditional, Locker, Map, Mutex, RWmutex, Once, Pool  and Wait Group). Moving from there we will demonstrate Channels and Channel Selects.\nNext well move on to other more involved concepts like the Context API.",
      "target_audience": [
        "Go ( GoLang ) programmers"
      ]
    },
    {
      "title": "Software engineering: From Developer to Tech Lead",
      "url": "https://www.udemy.com/course/software-engineering-from-developer-to-technical-leadership/",
      "bio": "Learn refactoring, agile, leading teams and incident management to ship great software.",
      "objectives": [
        "Identifying, addressing technical debt",
        "Manage time properly",
        "Break-down, plan and prioritize work",
        "Use Design Patterns to refactor code",
        "Use strangler pattern, feature flag to release at scale",
        "Use Test Driven Development to ship quality code",
        "Get familiar with emotional intelligence to lead your team",
        "Set up and use incident management to respond to urgencies",
        "Understanding how to use Agile in comparison with Waterfall"
      ],
      "course_content": {
        "Technical debt and refactoring": [
          "Introduction",
          "Example with GameVault",
          "Moving to a service",
          "Using a design pattern",
          "Summary and tips"
        ],
        "Leadership and communication": [
          "Introduction",
          "Starting with yourself",
          "Setting vision and direction for your team",
          "Using Agile",
          "Incident Management",
          "Time management"
        ]
      },
      "requirements": [
        "Some programming experience in a software engineering team."
      ],
      "description": "Welcome to a transformative journey that will take you from a proficient developer to a confident tech lead. Our course, \"Software Engineering: From Developer to Tech Lead,\" is designed to equip you with the essential skills and knowledge needed to excel in the dynamic and ever-evolving world of software engineering leadership.\n\n\nTransitioning to Tech Leadership: Master Refactoring, Agile, Team Leadership, and Incident Management\n\n\nLearn the art of refactoring to maintain clean and efficient codebases.\nMaster agile methodologies to enhance your team's productivity and adaptability.\nDevelop the skills necessary to lead and inspire software development teams.\nGain insights into time and incident management to ensure seamless project delivery.\n\n\nNavigating Your Path to Software Engineering Excellence\n\n\nIn the modern realm of software engineering, the ability to seamlessly transition from a developer to a tech lead is a rare skill set that can open doors to remarkable opportunities. Our course, \"Software Engineering: From Developer to Tech Lead,\" encapsulates the core principles, strategies, and practices required to make this transition effectively. Whether you're a seasoned programmer seeking to take on leadership roles, a junior developer curious about how to advance your career rapidly or an aspiring tech lead aiming to enhance your proficiency, this course is your gateway to honing your expertise and expanding your horizons.\nThis course is quite unique: it doesn't cover leadership or coding, but rather a mix of both worlds with a concrete example: a project named GameVault and hosted on GitHub. It contains those two pillars: programming and leadership ixed together with something you can apply straight away in your day-to-day work.\n\n\nCourse Highlights: Your Path to Success\nLearn the techniques of code refactoring with moving code, using design patterns and SOLID principles.\nRecognize the importance of agile practices and methodologies to have the right processes in place so you can focus on your strength: coding and leading a team.\nBuild effective communication, collaboration, and decision-making skills to challenge problems, not individuals.\nExplore time management strategies with the Pareto principle, time boxing and focus time.\nMaster the art of incident management, ensuring swift resolution during the incident and mitigation post incident.\n\n\nWhat You'll Walk Away With\nUpon completing this course, you'll emerge as a software engineer with the potential to ascend to leadership roles. You'll be equipped with:\nProficiency in refactoring techniques to enhance code quality and maintainability.\nExpertise in implementing agile practices to streamline development processes.\nConfidence in leading software development teams, making informed decisions, and fostering collaboration.\nCapability in managing time effectively and responding adeptly to incidents.\nA comprehensive skill set that aligns with the demands of the software engineering industry.\nReal-world experience through hands-on projects and practical simulations.",
      "target_audience": [
        "Intermediate and senior software engineers interested in a Tech Lead or Staff Engineer position",
        "Tech Leads wanting to improve their craft",
        "Junior developers wanting to discover how to move to a technical leadership role"
      ]
    },
    {
      "title": "Spring Boot with Postgres and React in 3 hrs.",
      "url": "https://www.udemy.com/course/best-spring-boot-course/",
      "bio": "Spring Boot with Postgres & React",
      "objectives": [
        "Demonstrate how to build RESTful APIs using Spring Boot.",
        "Understand HTTP methods (GET, POST, PUT, DELETE) and status codes, and apply them in a Spring Boot application.",
        "Install and configure a Spring Boot project with dependencies for PostgreSQL integration",
        "Design and implement an repository pattern using Spring Data JPA",
        "Develop a simple RESTful CRUD (Create, Read, Update, Delete) API with Spring Boot.",
        "Implement request mappings, controllers, and services for managing data.",
        "Use DTOs (Data Transfer Objects) for optimized data exchange between layers.",
        "Implement data validation and error handling for database operations.",
        "Set up a React application to communicate with the Spring Boot REST API.",
        "Handle form submissions in React and send data to the Spring Boot API."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course & PDF part 1",
          "Install JDK, IntelliJ, JSON, Postman & Maven",
          "Install PostgreSQL Database",
          "Setup Spring Boot",
          "A few things about the setup",
          "Our First Controller",
          "GET Mappings",
          "Domain, Exception, Service & Repository",
          "Student Controller - Bringing it together",
          "Troubleshooting",
          "Qualifier",
          "Post & Find by ID",
          "Custom Queries",
          "One Student Many Tasks",
          "One to Many relationship",
          "Many to Many relationship",
          "Set vs List",
          "Actuator",
          "Logging",
          "Validation & Exceptions",
          "Swagger",
          "Testing with Mockito",
          "React UI - Display",
          "React UI - POST",
          "Inversion of Control / PDF and Code of Project",
          "Final Quiz"
        ]
      },
      "requirements": [
        "Basic Java Programming"
      ],
      "description": "Are you ready to kickstart your journey into the world of modern web development? This comprehensive course is a well-edited, concise, and information-packed guide to creating RESTful web APIs using Spring Boot, Postgres, and React.\nIn just 3 hours, you'll learn everything you need to start building!\nWhy Take This Course?\nEfficient Learning: Every minute of this course is packed with actionable knowledge—no fluff, no wasted time.\nHands-On Experience: Follow along as we build a complete project from scratch.\nExpert Editing: Professionally edited content ensures a smooth and engaging learning experience.\nBeginner-Friendly: Step-by-step explanations to guide you, even if you’re new to Spring Boot or full-stack development.\nBy the end of this course, you’ll have the confidence and skills to create your own RESTful web APIs with Spring Boot, Postgres, and React.\nDon’t wait—start building your full-stack development expertise today!\nWhat You'll Learn:\nThe fundamentals of Spring Boot and how to set up a robust backend.\nRESTful API Development: Create APIs that follow industry standards.\nIntegration with Postgres: Learn how to store and manage data effectively.\nBuilding dynamic frontends with React: Bring your APIs to life with an interactive UI.\nBest practices for structuring code and connecting your frontend and backend seamlessly.",
      "target_audience": [
        "Beginner Java programmers wanting to learn Spring Boot"
      ]
    },
    {
      "title": "Learn Microsoft Bot Framework",
      "url": "https://www.udemy.com/course/learn-microsoft-bot-framework/",
      "bio": "Build and connect intelligent bots to interact with your users in Skype, Slack, Telegram, Email or Facebook Messenger.",
      "objectives": [
        "Microsoft Bot Framework",
        "NodeJS",
        "Create a chat bot",
        "Build your own bots"
      ],
      "course_content": {
        "Introduction": [
          "Hello World"
        ],
        "Microsoft Bot Framework": [
          "Collecting input",
          "Adding memory",
          "Chat Connector",
          "Intents",
          "Debug your application"
        ],
        "HR Bot Programming: Setup": [
          "Install modules",
          "Server setup"
        ],
        "HR Bot Programming: Core structure": [
          "Create menu",
          "Database setup",
          "Display holidays"
        ],
        "HR Bot Programming: Advanced functionality": [
          "Login",
          "Create new employees",
          "Sick day request",
          "Sick day request - part 2"
        ],
        "HR Bot Programming: Deploy": [
          "Deploy your bot to production"
        ]
      },
      "requirements": [
        "NodeJS (basic knowledge)",
        "JavaScript (basic knowledge)"
      ],
      "description": "Hello and welcome to Microsoft Bot Framework tutorial.\nIn this course you will learn how to build your own bots with Microsoft bot framework and Node.JS.\n\nYour users talk in many places; your bot should too. The Connector will have your bot talking in full fidelity on the most popular conversation experiences, no additional coding necessary.",
      "target_audience": [
        "People that want to Build as they Learn",
        "Build bots as you learn"
      ]
    },
    {
      "title": "Algorithms and Data structures - Part 1",
      "url": "https://www.udemy.com/course/kal-academy-algorithms-and-data-structures-part-1/",
      "bio": "Ace your next technical interview!",
      "objectives": [
        "Basics of problem solving",
        "Gain deeper understand of Algorithms and Data Structures",
        "Master the skills needed to ace technical interviews"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Course Structure",
          "Practice makes it perfect!",
          "What are Data Structures?"
        ],
        "Arrays": [
          "What is an Array?",
          "Time and Space complexity - Big O",
          "Logarithmic Running Time"
        ],
        "Queues": [
          "Implement a Queue using Arrays"
        ],
        "Stack": [
          "Implement a Stack using Arrays"
        ],
        "Dictionary": [
          "Implementation of Dictionary"
        ],
        "Assignment": [
          "Array Assignment"
        ],
        "Conclusion": [
          "Conclusion of Part 1"
        ]
      },
      "requirements": [
        "Be able to comfortably program in a programming language of choice"
      ],
      "description": "There are four parts to this program.\nIn part 1 of this course, we start with the deep dive implementations on some of the basic linear structures such as Arrays, Queues, Stacks and Dictionary. Understanding data structures are key to problem solving.\nIn part 2 of the course we will deep dive into problem solving, strings, Linked List and recursion.\nIn part 3, we deep dive into more problem solving and dynamic programming.\nFinally in part 4, we will cover Trees and Graphs.\n\n\nHappy coding!",
      "target_audience": [
        "Developers preparing for technical interviews"
      ]
    },
    {
      "title": "Enterprise Application Development Complete Course",
      "url": "https://www.udemy.com/course/enterprise-application-development/",
      "bio": "Enterprise Application Architectures, Java Design Patterns, Web Application Security and more: Academic Course for A+",
      "objectives": [
        "Identify Functional Areas of an Enterprise",
        "Propose Enterprise Architectural Solutions for Functional Areas",
        "Apply Suitable Design Patterns in Enterprise Applications",
        "Explain Enterprise Application Frameworks",
        "Describe Software Development Methodologies",
        "Apply Agile Scrum in Software Development"
      ],
      "course_content": {
        "Introduction": [
          "Functional Areas of Enterprise Applications",
          "Examples for Functional Areas of ESD",
          "Advantages and Disadvantages of Enterprise Software",
          "Nature of Enterprise Software",
          "Case Study Activity",
          "Course Materials"
        ],
        "Enterprise Application Architecture": [
          "Introduction to Enterprise Application Architecture",
          "Example Scenario - What can happen without an Architecture",
          "Overview of the Enterprise Architecture",
          "What can go wrong without an Enterprise Architecture",
          "Layered Architecture - (Client - Server)",
          "Client - Server Architecture Explained Further",
          "Layered Architecture - (Multi-tier)",
          "MVC Architecture",
          "Sample MVC Code Explanation with Live Debugging",
          "Component based Architecture",
          "Sumary of Enterprise Architectures",
          "Quiz on Client-Server Architecture",
          "Course Materials"
        ],
        "Introduction to Web Services": [
          "Introduction to Service Oriented Architecture (SOA)",
          "Characteristics of Service Oriented Architecture",
          "Hands-on Session Web Services - Development Environment Setup",
          "Hands-on Session - Introduction to Restful Web Services and JSON",
          "Hands-on Session - Implementing a Restful GET API with Java Spring Boot",
          "Course Materials"
        ],
        "Frameworks for Enterprise Application Development": [
          "Importance of Frameworks",
          "Example for Frameworks - Bootstrap",
          "What is a Framework",
          "Course Level Quiz",
          "Importance and Characteristics of Frameworks",
          "Course Materials"
        ],
        "Design Patterns": [
          "Introduction to Design Patterns",
          "Design Patterns Types",
          "Singleton Design Pattern",
          "Singleton Design Pattern Hands-on Session",
          "Factory Design Pattern",
          "Factory Design Pattern Explained Further",
          "Factory Design Pattern Hands-on Session",
          "Decorator Design Pattern",
          "Decorator Design Pattern Explained Further",
          "Lecture Materials"
        ],
        "Software Development Life Cycle (SDLC)": [
          "Introduction to Software Development Methodologies",
          "Agile Scrum Explained",
          "Software Development Methodologies - Waterfall Method",
          "Prototyping, Incremental Development, RAP, RUP and Value Centric Approach",
          "Course Materials"
        ],
        "Enterprise Application Security": [
          "Web Application Security - Malware",
          "Levels of Enterprise Application Security",
          "Introduction to OWASP TOP 10",
          "SQL Injection Practical Demonstration, XSS and Standards",
          "Course Materials"
        ],
        "Conclusion": [
          "Revision - Short Note"
        ]
      },
      "requirements": [
        "Java Fundamental Understanding (Java is used for explaining Design Patterns)",
        "Passion and Commitment"
      ],
      "description": "Are you following a degree, diploma or any other academic course which includes Enterprise Application Development related modules and want to learn theoretical concepts and practicals related to the subject in the simplest form possible?\nAre you looking to make your own short note for your studies and prepare for an upcoming assessment or an exam?\n\n\nBut when you search online, the problem is that almost all Enterprise Software Development Courses are outdated, created years ago and do not contain updated information.\n\n\nWhy should you consider enrolling on this Enterprise Application Development Complete Course 2024?\n\nThe course instructor is a lecturer teaching Enterprise Application Development for 3+ years.\nThe course instructor is a former lead software engineer who developed enterprise applications for the Scandinavian region for 3+ years.\nThis course is designed by International-level benchmarking of the lessons and hands-on activities, so it covers all the topics included in almost any university-level lecture module.\nThis course covers everything you need to master the subject without enrolling on other parts/courses related to the topic.\nThis course includes lecture notes/slides as downloadable materials.\nYou will be part of the 40,000+ student community already in my courses.\nI invite you to check the free provided videos and course outline. Then, if you are happy, enrol on this one and only Enterprise Application Development course.\n\n\nImportant: This is not a programming course module. The main objective of this course is to give an overall and complete understanding of Enterprise Software and Design Patterns. However, Java is used as the programming language of choice to explain design patterns. But you can apply these concepts to any object-oriented programming language.\n\n\nAll-in-one Complete Academic Course: Enterprise Application Development Outline\nChapter 01: Introduction\n1.1 Introduction to Enterprise Application Development\n1.2 Examples for Functional Areas of Enterprise Application Development\n1.3 Advantages and Disadvantages of Enterprise Software\n1.4 Nature of Enterprise Software\n1.5 Case Study Activity\n\n\nChapter 02: Enterprise Application Architecture\n2.1 Introduction to Enterprise Application Architecture\n2.2 Example Scenario - What can happen without an Architecture\n2.3 Overview of the Enterprise Architecture\n2.4 What can go wrong without an Enterprise Architecture\n2.5 Layered Architecture - (Client-Server)\n2.6 Client-Server Architecture Explained Further\n2.7 Layered Architecture - (Multi-tier)\n2.8 MVC Architecture\n2.9 Sample MVC Code Explanation with Live Debugging\n2.10 Component-based Architecture\n2.11 Summary of Enterprise Architectures\n\n\nChapter 03: Introduction to Web Services\n3.1 Introduction to Service Oriented Architecture (SOA)\n3.2 Characteristics of Service-Oriented Architecture\n3.3 Hands-on Session Web Services - Development Environment Setup\n3.4 Hands-on Session - Introduction to Restful Web Services and JSON\n3.5 Hands-on Session - Implementing a Restful GET API with Java Spring Boot\n\n\nChapter 04: Frameworks for Enterprise Application Development\n4.1 Importance of Frameworks\n4.2 Example for Frameworks - Bootstrap\n4.3 What is a Framework\n4.4 Importance and Characteristics of Frameworks\n\n\nChapter 05: Design Patterns\n5.1 Introduction to Design Patterns\n5.2 Design Patterns Types\n5.3 Singleton Design Pattern\n5.4 Singleton Design Pattern Hands-on Session\n5.5 Factory Design Pattern\n5.6 Factory Design Pattern Explained Further\n5.7 Factory Design Pattern Hands-on Session\n5.8 Decorator Design Pattern\n5.9 Decorator Design Pattern Explained Further\n\n\nChapter 06: Software Development Lifecycle (SDLC)\n6.1 Introduction to Software Development Methodologies\n6.2 Agile Scrum Explained\n6.3 Agile Scrum in IT Industry (short practical review)\n6.4 Software Development Methodologies - Waterfall Method\n6.5 Prototyping, Incremental Development, RAP, RUP and Value-Centric Approach\n\n\nChapter 7: Conclusion\n7.1 Web Application Security - Malware\n7.2 Levels of Enterprise Application Security\n7.3 Introduction to OWASP TOP 10\n7.4 SQL Injection Practical Demonstration, XSS and Standards\n\n\nChapter 8: Conclusion\n8.1 Summary",
      "target_audience": [
        "Beginners in Enterprise Application Development",
        "Bachelors in Computer Science/Information Technology Undergraduates",
        "Postgraduates Students in Enterprise Application Development (MSc, Masters)",
        "Academics in Enterprise Application Development Field",
        "Students enrolled in Certificate/Diploma level courses related to Enterprise Application Development"
      ]
    },
    {
      "title": "Entity Framework core: SQL Data Access with C# & .Net",
      "url": "https://www.udemy.com/course/entity-framework-core-csharp-data-access/",
      "bio": "Master Code & Db First Approach, Query API, Migrations & all Concepts of Entity Framework core with C# & .Net",
      "objectives": [
        "Fundamentals of Entity Framework Core",
        "Code First & Database First Approach",
        "Migrations with Entity Framework Core ( Create, Revert, Database update and more )",
        "Advanced topics like ChangeTracking, SQL Queries, Query Evaluation and Performance",
        "Bonus: SQL Basics, LINQ Basics, Docker Basics and VS Code"
      ],
      "course_content": {
        "What is Entity Framework Core and what do we need it for?": [
          "What is EF? What is an ORM?",
          "Benefits & Drawbacks of EF core explained",
          "First Impression of EF core with SQlite and Database first approach",
          "Learn the basic concpets of EF core",
          "Working with the course materials",
          "Update Uploaded Code for the chapters.",
          "Summary of the first chapter",
          "Basics of Ef Core"
        ],
        "Database first & Code first approach": [
          "Introduction to the example Application and its entites for the course.",
          "Add the EF Core Providers as Nuget Packages for SQlite, MariaDb and PostgreSQL",
          "Create a Database with SQlite",
          "Database inside a Docker Container: PostgreSQL",
          "Extract the DbContext and Entities from the existing Databases",
          "Code First I: Create POCOs (Model Entities)",
          "Code First II: Create the DatabaseContext",
          "Code First III: Use the InitialMigration and update the Database",
          "Code First IV: Conventions and Attributes",
          "Summary Code first and Db First",
          "Code First & Database First Quiz",
          "Assignment 1: Use the DbFirst and Code First approaches to create a ToDo App"
        ],
        "Utilize the Entity Framework Query API": [
          "Introduction to DbContext and Querying",
          "Create UseCases for the Application",
          "Seed Data: Add AddRange and SaveChanges",
          "Query Interface with DbContext I: ToList, First, Single, Last and Any",
          "Query Interface with DbContext II: Include & ThenInclude",
          "Improve read speed with AsNoTracking",
          "Evaluation of Queries",
          "Any Query and Insert into Linking Tables",
          "Update and Delete with Entity Framework Core",
          "Summary of the Query Api so far",
          "Query Data of your Todo Application with EF Core"
        ],
        "Alter the Database with Entity Framework Core Migrations": [
          "Introduction to Migrations",
          "Add a Property with Migrations",
          "Change a Migration manually",
          "Revert a failed Migration",
          "3 Ways to apply Migrations to the Database",
          "Apply Migrations from Code and as SQL Script",
          "Alter Entity Relationships with Migrations",
          "Learn what Shadow Properties are and what they are used for.",
          "How to use Shadow Properties",
          "Summary Migrations",
          "Add Migrations to the ToDo Application"
        ],
        "Reporting on the Example Application (Lean Production Trainer)": [
          "What do we want to find out about our data?",
          "Report 1: Product related time to produce",
          "Report 2: Which Station needs the most time to complete the work step?",
          "Report 3: Which step is the overall most costly one?"
        ],
        "Advanced Topics with Entity Framework Core": [
          "Intro to the advanced Topics of Entity Framework core section",
          "Understand the ChangeTracking Feature",
          "Look deeper into ChangeTracking and control it manually",
          "Utilize ChangeTracking Events to handle it manually",
          "Understand how Raw SQL and Querytypes work and what we need them for",
          "RawSql: Execute SQL Statements directly with Entity Framework Core",
          "Query Types: Query MariaDB Views without Table or Table Entities",
          "Mapping explained with Logging for EF core",
          "Sql Inheritance explained with postgreSql database",
          "Inheritance with Entity Framework Core",
          "Summary of advanced Ef Core Concepts"
        ],
        "Bonus: Things you might want to know for this course": [
          "LINQ Basics: Extension Methods",
          "LINQ Basics: Anonymous Types",
          "SQL Basics: Tables and Data Types",
          "SQL Basics: Relationships",
          "More Resources"
        ]
      },
      "requirements": [
        "Basic knowledge of .Net and C#",
        "Basic Knowledge of SQL are helpful but not needed (teached in the course)",
        "CLI proficiency might be helpful but general knowledge is appropriate"
      ],
      "description": "Entity Framework Core is the Default Technology in terms of SQL Database access with dotnet core.\nAlmost every project with dotnet core nowadays will use it, so to push your skills, career and future salary you ought to learn this technology.\nAs a dotnet core Developer you cannot move around this technology. This is why I made this course so you can profit from expertise of many years as a freelance developer.\nLearn in this course everything about the following topics:\nWhat is Entity Framework Core all about and why do we need it?\nWhat is an ORM (object relational mapper)?\nWhich basic building blocks does EF core consist of\nDbContext\nPOCOs\nMigrations\nChange Tracking\nand much more\nCreate a Database with the Code First Approach\nCreate the access code from an existing Database with the Database First Approach\nQueries and Commands with the EF core Query API\nMigrations: manage the database schema\nChangeTracking & Performance\nAlso this course offers lots and lots of source code, extra insights and downloadable contents. It also tests everything you learned in a section with a Quiz as well as an Assignment.\nAll topics are explained with a real world application which is in use to date (yet in a slightly simpliefied version).\nAs Database systems we use the following:\nSQlite (easier to deliver with downloadable code)\nPostgreSQL (probably the best open source SQL Database out there)\nMariaDB (As MySQL fork the probably most used Open Source Database)\nAdditionally there is a Bonus Section with Introduction and Refreshers to the following topics:\nDocker\nSQL\nLINQ\nVS Code\nENROLL NOW, make use of my experience and support and put your career on the next step of the ladder.\nAll the best\nYour Instructor\nTimo",
      "target_audience": [
        ".Net Developers",
        "Enterprise Developers or professional developers with Microsoft Stack"
      ]
    },
    {
      "title": "Boto3 Essentials – Automate AWS Cloud with Python Boto3",
      "url": "https://www.udemy.com/course/aws-cloud-automation-with-python-boto3/",
      "bio": "Learn Boto3 from scratch and automate AWS services like IAM, EC2, S3 and more using Python scripts",
      "objectives": [
        "Set up and configure Boto3 and AWS credentials securely",
        "Understand the difference between Boto3 clients and resources",
        "Handle pagination, collections, waiters, filters and exceptions in your scripts",
        "Write real-world automation projects with Python and Boto3"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to AWS Automation Is Required ?"
        ],
        "Environment Setup To Execute Python Boto3 Scripts": [
          "Introduction to Environment Setup to Execute Python Boto3 Scripts",
          "Creating IAM Users For Multiple AWS Accounts & Access Keys for them",
          "Installing Python, Boto3 and AWSCLI on Windows",
          "Executing Python Boto3 Scripts from Local Windows Machine",
          "Installing Python, Boto3 and AWSCLI on Linux",
          "Executing Python Boto3 Scripts From Local Linux Machine",
          "Installing Python, Boto3 and AWSCLI on Mac",
          "Executing Python Boto3 Scripts From Local MacOS",
          "Priority for Credentials when they define in multiple locations"
        ],
        "Boto3 Core Concepts | Session, Client, Resource Creation": [
          "Introduction to Boto3 Core Concepts",
          "Creation of a Session for Python Boto3 Scripts with Profiles (Access Keys)",
          "Creation of Client & Resource Objects from session",
          "Introduction to Meta of Boto3 ( client and resource objects )",
          "Boto3 Exceptions and General Exception Handling Framework or Script",
          "What are Identifiers & Attributes for AWS Resources"
        ],
        "Boto3 Read Operations for Single AWS Resources": [
          "Introduction to Boto3 Read Operations for Single AWS Resources",
          "First Python Boto3 Client Script to Get IAM User Details",
          "Adding Exception Handling for python boto3 client script",
          "Python Boto3 Resource Script to Get IAM User Details",
          "Help to get required Methods from client",
          "Python Boto3 Client & Resource Scripts to Get IAM Role Details",
          "Python Boto3 Client Script to Get AWS Account ID",
          "Python Boto3 Resource Script to Get EC2 Instance Details",
          "Python Boto3 Client Script to Get EC2 Instance Details"
        ],
        "Boto3 Read, Update and Delete Operations for Single AWS Resource & Waiters": [
          "Introduction to Boto3 Read, Update & Delete Operations for Single AWS Resource",
          "Introduction to Waiters : Modify or Update EC2 Instance Type",
          "Developing Custom Waiters for EC2 Instance Stopped State",
          "EC2 Instance Control Script using Boto3 Resource : state, start, stop, reboot...",
          "EC2 Instance Control Script using Boto3 Client",
          "Task For You: Modify or Update EC2 Instance Type using Boto3 Client"
        ],
        "Boto3 CRUD Operations and also Waiters for Single AWS Resource": [
          "Introduction to Boto3 CRUD Operations and Waiters for Single AWS Resource",
          "Launching EC2 Instance using Boto3 Client Concept and Also Retrieving Public_IP",
          "Launching EC2 Instance using Boto3 Resource Concept & Also Retrieving Public_IP",
          "Create an IAM User and Attach a Policy Using Resource & Client Concepts"
        ],
        "Boto3 CRUD Operations for Known Multiple AWS Resources": [
          "Introduction to Boto3 CRUD Operations for Multiple AWS Resources",
          "Get Known Multiple IAM Users Details using Client & Resource Concepts",
          "Get Known Multiple EC2 Instances Details using Client & Resource Concepts",
          "Alternative Way to Retrieve Information for Multiple Known EC2 Instances",
          "Resource & Client Control Script for Known Multiple EC2 Instances",
          "Task : Develop Boto3 Script to Create Multiple IAM Users & Attach a Policy"
        ],
        "Boto3 RUD for Unknow Multiple AWS Resources| Paginators | Collections | Filters": [
          "Introduction to Boto3 CRUD Operations for Unknown Multiple AWS Resources",
          "Issue To Get or List All IAM Users from a Given AWS Account using Client",
          "Introduction to Paginators - List All IAM Users using Client",
          "How to Identify if a Method Needs Paginator Logic to Read All Data or Not ?",
          "List All EC2 Instances Types from AWS for a given Region",
          "Tasks For You - Get All IAM Roles and All Tags for a given IAM User",
          "Get or List All IAM Users for a given IAM Group",
          "Get IAM User Details by reading its UserId",
          "Types of Boto3 Client Paginators - Custom & Built-In Paginators",
          "List All EC2 Instances from a given Region",
          "EC2 Instances Discovery Script Version-1 using Boto3 Client Concept",
          "Introduction to Boto3 Client Fitlers",
          "Filter IAM Users by Path or List IAM Users by Path",
          "Filters: Boto3 Client Script To Get EC2 Instances by Tag, State, AZ",
          "Identify and List Untagged EC2 Instances in AWS",
          "Introduction to Collections - List All IAM Users using Resource",
          "Resource Collection | Filters | List or Describe Instances",
          "Get IAM Users for a given Group Name",
          "Update & Delete Operations For Unknown Multiple Resources: EC2 Control Script",
          "Task: Develop EC2 Control Script for Unknown Multiple Resources using Resource"
        ],
        "Client DryRun & Response": [
          "What is DryRun Option or Parameters for Methods ?",
          "What is Boto3 Client Response ?"
        ],
        "Real Time Practice - Client & Resource (Paginators|Collection|Filters|Waiters)": [
          "List All S3 Buckets using Both Resource & Client Concepts",
          "List All S3 Objects for a given Bucket and Download or Delete given Object",
          "EC2 EBS Volumes Scripts using Client - List & Delete Unused and Untagged Volumes",
          "EC2 EBS Volumes Scripts using Resource- List & Delete Unused & Untagged Volumes"
        ]
      },
      "requirements": [
        "Basic Python knowledge (Operations on List & Dictionary, conditions - if, if-else, if-elif-elif.., loops , functions and exception handling with try and except blocks)",
        "AWS account (free-tier is sufficient)",
        "Practicing requires a system like Windows, Linux or an EC2 instance",
        "Curiosity to automate cloud infrastructure!"
      ],
      "description": "Boto3 Essentials – Automate AWS Cloud with Python Boto3\nAre you a cloud enthusiast, DevOps engineer  or Python developer looking to automate your AWS cloud operations? Look no further!\nThis Boto3 Essentials course is designed to help you master AWS automation using Python. Boto3 is the official AWS SDK for Python and in this course, you’ll learn how to write powerful scripts that manage AWS services like IAM,EC2, S3 and more—all from code.\nWhether you're a beginner or an experienced engineer, this course will walk you through from the basics of Boto3 to building real-world automation projects that save time, reduce manual errors, and boost your cloud productivity.\n\nWhat You’ll Learn:\nSet up and configure Boto3 and AWS credentials securely\nUnderstand the difference between Boto3 clients and resources\nHandle pagination, waiters, filters and exceptions in your scripts\nWrite real-world automation projects with Python and Boto3\n\nWho This Course Is For:\nPython Developers who want to integrate with AWS\nDevOps & Cloud Engineers seeking automation skills\nSystem Administrators managing AWS infrastructure\nAnyone preparing for AWS Certifications with hands-on scripting\n\nPrerequisites:\nBasic Python knowledge (Operations on List & Dictionary, conditions - if, if-else, if-elif-elif.., loops , functions and exception handling with try and except blocks)\nAWS account (free-tier is sufficient)\nPracticing requires a system like Windows, Linux or an EC2 instance\nCuriosity to automate cloud infrastructure!",
      "target_audience": [
        "DevOps and Cloud Engineers looking to simplify AWS Cloud tasks"
      ]
    },
    {
      "title": "Coding Interview Cram: Must Know Algorithms and Questions",
      "url": "https://www.udemy.com/course/coding-interview-cram-must-know-algorithms-and-questions/",
      "bio": "Ace your next Kotlin coding interview by mastering data structures and algorithms.",
      "objectives": [
        "Learn through hands-on coding examples and learn to solve problems quickly",
        "Learn how to recognize patterns for solutions to coding interview questions.",
        "Learn the most commonly asked questions by the likes of Facebook, Google, Amazon and Spotify for beginners.",
        "Refresh your Kotlin knowledge in the 10 most popular topics asked at the coding interview",
        "Learn not only concepts but also be able to articulate your thought process as you plan and execute a solution.",
        "Analyze the time complexity of various algorithms",
        "Learn the best way to answer an interview question",
        "Land a high paying role as a software developer/programmer."
      ],
      "course_content": {
        "Introduction and FizzBuzz": [
          "Kotlin Course Introduction",
          "FizzBuzz Kotlin",
          "SLIDES - Interview Questions Categories PDF Resource",
          "Source Code"
        ],
        "String and Array Interview Questions": [
          "Reverse Words in a String Kotlin",
          "Rotate Array Kotlin",
          "Kth Largest Element in an Array Kotlin",
          "Source Code"
        ],
        "Matrix Interview Questions": [
          "Set Matrix Zeros Kotlin",
          "Spiral Matrix Kotlin",
          "Source Code"
        ],
        "Linked List Interview Questions": [
          "Queue with a LinkedList Kotlin",
          "Source Code"
        ],
        "Binary Tree Interview Questions": [
          "Build a Binary Tree",
          "Delete Tree Node Kotlin",
          "Source Code"
        ],
        "Sorting and Time Complexity": [
          "Bubble Sort Algorithm Kotlin",
          "Selection Sort Algorithm Kotlin",
          "Insertion Sort Kotlin",
          "Merge Sort Algorithm Kotlin",
          "Time Complexity of Different Sorting Algorithms",
          "Source Code"
        ],
        "Graph Interview Questions": [
          "Build a Graph Kotlin",
          "Source Code"
        ],
        "Dynamic Programming Interview Questions": [
          "Coin Change Kotlin",
          "Maximum Sum Subarray Kotlin",
          "Edit Distance Kotlin",
          "Source Code"
        ],
        "Bit Manipulation Interview Questions": [
          "Single Number Kotlin",
          "Number of 1 Bits Kotlin",
          "Bitwise AND of a Range Kotlin",
          "Source Code"
        ],
        "Combinations and Permutations Interview Questions": [
          "Bitwise and Shift Operators",
          "Permutations Kotlin",
          "Combinations Kotlin",
          "Letter Combinations of a Phone Number Kotlin",
          "Source Code"
        ]
      },
      "requirements": [
        "No IDE necessary. We'll run Kotlin in the browser with free Kotlin playground.",
        "Experience with object-oriented programming fundamentals. If you need experience, enroll in Ultimate Python Beginner Course. Learn to code today! by Mammoth Interactive"
      ],
      "description": "Data Structures + Algorithms to Crack the Coding Interview\nOnly in Coding Interview Cram: Must Know Algorithms and Questions, learn the best way to answer an interview question, look at the most commonly asked questions, and analyze time complexity of various algorithms.\nInterview Question Solutions and Time Complexity\nLearn through hands-on coding examples and learn to solve problems quickly.\nRefresh your Kotlin knowledge and solve new problems with the most common beginner interview questions asked by FANG companies.\nAlgorithms & Data Structures - Ultimate Coding Interview Prep\nLearn the most commonly asked questions by the likes of Facebook, Google, Amazon and Spotify for beginners.\nPreparing for the Kotlin interview is hard. You need to understand not only concepts but also be able to articulate your thought process as you plan and execute a solution.\nCOURSE BREAKDOWN\nSection 0: Introduction to Interview Questions\n\nCourse Overview\nFizzBuzz: Print the numbers from 1 to 100 and for multiples of '3' print \"Fizz\" instead of the number and for the multiples of '5' print \"Buzz\".\nSection 1: String/Array Interview Questions\n\nReverse Words in a String: Given an input string, reverse the string word by word.\n\nRotate Array: Rotate an array of n elements to the left by k steps.\n\nKth Largest Element in an Array: Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.\nSection 2: Matrix Interview Questions\n\nSet Matrix Zeroes: Given a 2D matrix, if an element is 0, set its entire row and column to 0. Do it in place.\n\nSpiral Matrix: Given a 2D matrix, return all elements of the matrix in spiral order.\n\nSection 3: Linked List Interview Questions\n\nImplement a Queue Using a Linked List: Hit two data structures in one by implementing a queue and a linked list in one interview question.\n\nSection 4: Tree Interview Questions\n\nBuild a Binary Tree - Learn about binary trees and BST as you implement a highly asked about data structure, the binary tree.\nDelete a Tree Node\nSection 5: Graph Interview Questions\n\nBuild a Graph: Each node in the graph contains a label and a list of its neighbors.\nSection 6: Sorting and Time Complexity\n\nBubble Sort Algorithm: Sort a list with bubble sort.\n\nSelection Sort Algorithm: Sort a list with selection sort.\n\nInsertion Sort Algorithm: Sort a list with insertion sort.\n\nMerge Sort Algorithm: Sort a list with Merge Sort.\n\nTime Complexity of Different Sorting Algorithms: Learn the types of time complexity in Big-O Notation in order of horrible to good.\n\nSection 7 Dynamic Programming Interview Questions\n\nCoin Change: You are given coins of different denominations and a total amount of money amount. Write a function to compute the fewest number of coins that you need to make up that amount.\n\nEdit Distance: Find the edit distance between two strings.\n\nDistinct Subsequences: Given a string S and a string T, count the number of distinct subsequences of T in S.\nSection 8 Bit Manipulation Interview Questions\n\nBitwise and Shift Operators: Manipulate bits and shift bits to change values.\n\nSingle Number: Given an array of integers, every element appears twice except for one. Find that single one.\n\nNumber of 1 Bits: Take an unsigned integer and return the number of ’1' bits it has (also known as the Hamming weight.\nBitwise AND of a Range: Given two non-negative long integers, a and b and given a <= b, find the bitwise AND of all integers from a and b.\nSection 9 Combinations and Permutations Interview Questions\n\nPermutations: Print all permutations of a given string.\n\nCombinations: Print all combinations of a given string.\nLetter Combinations of a Phone Number: Given a digit string, return all possible letter combinations that the number could represent on a phone board.\nSection 10 Math Interview Questions\n\nReverse Integer: Reverse the digits of an integer n.\nPalindrome Number: Determine whether an integer is a palindrome. Do this without extra space.\nExcel Sheet Column Number: Given a column title from an Excel sheet, return its corresponding column number.\nA SCHOOL YOU CAN TRUST\nLifetime access that never expires\nProject-based curriculum to superboost your portfolio\nGraduation certificate for every course\nAbsolute beginner-friendly\nNew courses every month\nEfficient lectures with step by step explanations\nRelevant industry topics 8 years of award-winning course delivery\n900,000 students in 186 countries\nLearn with free tools and affordable courses\nREVIEWS OF MAMMOTH COURSES\nCaptivating voice, easy to follow at a rapid pace, get some paper and fasten your seat-belts. I'm enjoying every second of this.\n— PHILIP MURRAY\nI have completed many Udemy tutorials. This one is the most outstanding one that I have seen thus far. It is doubtful that it could be topped. This is a superior tutorial. Amazing.\n— JOSEPH APPLEGARTH\nCOURSE AUTHOR\nAlexandra Kropova, Software Developer at Mammoth Interactive INC.\nAlexandra Kropova is a software developer specializing in OOP and JavaScript, with extensive experience in full-stack web development and app development. She has helped produce courses for Mammoth Interactive INC. since 2016, including the Coding Interview series in Java, JavaScript, C++, C#, Python and Swift.",
      "target_audience": [
        "You have a Kotlin interview coming up and need to learn how to answer questions properly",
        "Anyone learning Kotlin",
        "You need to learn the most popular questions that you might be asked",
        "You need to learn the top 10 most common topics asked about and sample questions for each",
        "You haven't used Kotlin in a while and want to refresh your knowledge"
      ]
    },
    {
      "title": "ChatGPT Complete Guide: OpenAI API, AI Tools, ChatGPT 4",
      "url": "https://www.udemy.com/course/gpt-learnit/",
      "bio": "Learn ChatGPT from Scratch, best practices, build solutions & apps with AI, we create app for Jira, Slack, Confluence",
      "objectives": [
        "OpenAI API",
        "ChatGPT",
        "Best Practices of using ChatGPT",
        "Slack Messenger API",
        "Jira Software Cloud API",
        "ChatGPT, Slack, Jira Integration via Java Spring Boot Web App",
        "Create Web App via Spring Boot, ChatGPT, Jira, Slack for Project Management Operations Automation",
        "Project Management with ChatGPT",
        "Project Governance with ChatGPT",
        "Knowledge Base Management with ChatGPT",
        "Risk Management with ChatGPT",
        "Planning and Estimation with ChatGPT",
        "Requirements creation and requirements management with ChatGPT"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "ChatGPT Web Application": [
          "Introduction to ChatGPT Web Application"
        ],
        "OpenAI": [
          "Intro to the OpenAI Section",
          "OpenAI: Basic Concepts",
          "OpenAI API: Create & Manage Personal Account"
        ],
        "OpenAI API: ChatGPT Model": [
          "Important note about API Testing",
          "ChatGPT: Chat API",
          "Send First Request to GPT API & Parse Response",
          "First Web Application with ChatGPT",
          "Function calling in ChatGPT",
          "GPT Best Practices"
        ],
        "Web Hosting at Home": [
          "Web Hosting at Home: Port Forwarding"
        ],
        "GPT + Slack Integration": [
          "Create Slack Application, Configuration of Incoming & Outgoing Webhooks",
          "Connect GPT to the Slack",
          "Context Management in Web App to Integrate with GPT"
        ],
        "Jira": [
          "The Role of Jira in our Web Application | Why this section is needed?",
          "First Project in Jira Cloud",
          "Jira API"
        ],
        "GPT + Slack + Jira + Gmail Integration": [
          "GPT + Slack + Jira Integration: Work with Jira Datasource",
          "Generate Tickets in Jira & Send Email from Slack via Chat Interface"
        ],
        "Manage a Scrum Team with ChatGPT": [
          "Managing Scrum & Risk Management with Custom Bot, Slack & GPT"
        ],
        "Fine-tuning, Creation & Training of Custom GPT Model": [
          "Fine-tuning: Key Concepts & Overview of the Process",
          "Important note about updates in GPT fine-tuning",
          "Preparing Training Dataset: Key Principles, Use cases & Examples - PART 1",
          "Preparing Training Dataset: Key Principles, Use cases & Examples - PART 2",
          "Prepare Training Dataset",
          "Create your first fine-tuned model: Part 1",
          "Create your first fine-tuned model: Part 2",
          "=== EXAM: Create and Integrate Custom ChatBot for Confluence into the Slack ===",
          "Chat Bot for Knowledge Base and How to build iterative process of fine-tuning"
        ]
      },
      "requirements": [
        "For programming part of the course and for Web App development I use Spring Boot and Java language. You can create web app using your own tech stack, but understanding of Java will help you to understand the key concepts I want to teach"
      ],
      "description": "In this course, we are going to Learn ChatGPT in Depth.\nAdvantages of this course:\nHuge amount of source code examples: Even the first edition of this course already contains around 1000 files that can be used as examples. And this is just for one project that we develop with students. Not talking about examples that I share on the slides, or during the no-code development. This course is extremely oriented on practice and business use cases. And new examples are added to the course on a regular basis, because I update this course with new use cases, with new updates after new releases of OpenAI ChatGPT model. We are going to develop web application to manage project management operations using OpenAI API.\nConcentration of useful materials: Cut to the chase - No water. In this course you will not find 10 hours of lessons teaching you how to enter text in the chat GPT web application. We are going to learn a lot of things, and what is the most important, we are going to learn a lot of different things.\nVast experience in the subject: my company was one of the first on the market that started consulting clients about ChatGPT since GPT API was publicly exposed.\nQ&A Support and Close collaboration during the course: at the end of the day, you don't just get the video lessons, you also get support from me. We work in close collaboration, you ask your questions about topics discussed in the video, source code reviewed and other things. No matter what questions you have, I'm here to help.\nProfessional learning approach: I'm a tutor with 900 students from more than 200 countries around the world. I was an offline tutor for a long time, and then I founded Learn IT Online University. I have a lot of experience in communication and teaching students both: offline and online. And I can easily find the right approach to explain things, and make complex things easier to understand.\nNo drama money-back guarantee:  In case you didn't like the course, for any reason, you should explain nothing. You can easily get your money back within the 30 days after registration. I promise you. So, there is no risk at all for you. In case you don't like the course, you can quit anytime you want.\n\n\nTarget Audience of the Course:\nThis course is designed for everyone who wants to learn OpenAI API. I can say that this is the most detailed and most complete OpenAI API course available online based on today\nA significant part of the course will be dedicated to learning the OpenAI API. During the course we are going to create our own web application, and develop chat bot - that's why this course will be interesting for developers\nBut even despite the fact that I have lessons with coding examples, I still believe that this course will be interesting for Product Managers, Product Owners, and Project Managers. I know this because very often I receive requests from Product Managers asking me about capabilities of ChatGPT, business use cases, technical limitations, and similar questions. This course will help you to get a deep understanding of how ChatGPT works under the hood, and what its weak and strong sides are that you can take advantage of.",
      "target_audience": [
        "Everyone who wants to learn ChatGPT in depth",
        "Web Developers who want to create web applications using ChatGPT capabilities",
        "Product Managers who wants to explore and learn technical details and ChatGPT limitations to udnerstand how to build products using ChatGPT"
      ]
    },
    {
      "title": "S.O.L.I.D Principles and Design Patterns for C# Developers",
      "url": "https://www.udemy.com/course/solid-design-patterns-c-sharp-developers/",
      "bio": "Learn S.O.L.I.D. Principles and Design Patterns to Improve the Quality of your C# Code, with practical exercises.",
      "objectives": [
        "Understand and apply S.O.L.I.D principles in software development using C#",
        "Acquire skills in the use of design patterns in C#.",
        "Develop a deep understanding of how S.O.L.I.D principles and design patterns improve the maintainability, scalability, and reusability of code.",
        "Effectively apply S.O.L.I.D principles and design patterns in a C# project from start to finish."
      ],
      "course_content": {
        "CQS Software Principle": [
          "Do we really know what encapsulation is?",
          "Bad code and why to worry about it",
          "Example of non-empathic code",
          "What is CQS?",
          "Queries",
          "Commands",
          "Inputs",
          "Outputs",
          "Completed Project"
        ],
        "SOLID Principles - Single Responsability Principle": [
          "What are the SOLID principles?",
          "Coupling",
          "Cohesion",
          "SRP Principle",
          "Examining the sample project",
          "Applying the SRP principle"
        ],
        "SOLID Principles - Open Closed Principle": [
          "What is the Open Closed Principle?",
          "Implementing the Open Closed Principle"
        ],
        "SOLID Principles - Liskov's Substitution Principle": [
          "What is the Liskov Substitution Principle?",
          "Applying the Liskov Substitution Principle"
        ],
        "SOLID Principles - Interface Segregation Principle": [
          "What is the Interface Segregation Principle?",
          "Implementing the Interface Segregation Principle"
        ],
        "SOLID Principles - Dependency Inversion Principle": [
          "What is the Dependency Inversion Principle?",
          "Implementing the Dependency Inversion Principle"
        ],
        "Design Patterns - Introduction": [
          "What are design patterns?",
          "Classification of Design Patterns",
          "How a design pattern is composed"
        ],
        "Design Patterns - Factory Method": [
          "Factory Method - Intent",
          "Factory Method - Motivation",
          "The Simple Factory Pattern",
          "Factory Method - Structure",
          "Factory Method - Implementation"
        ],
        "Design Patterns - Abstract Factory": [
          "Abstract Factory - Intent",
          "Abstract Factory - Motivation",
          "Abstract Factory - Structure",
          "Abstract Factory - Implementation"
        ],
        "Design Patterns - Builder": [
          "Builder - Intent",
          "Builder - Motivation",
          "Builder - Structure",
          "Builder - Explanation of initial code",
          "Builder Implementation"
        ]
      },
      "requirements": [
        "Proficiency in C# programming language.",
        "Basic understanding of object-oriented programming (OOP).",
        "Understanding of basic coding principles like variables, control structures, and functions.",
        "Basic knowledge of UML (Unified Modeling Language) for designing."
      ],
      "description": "Welcome to \"Mastering SOLID Principles and Classic Design Patterns,\" a comprehensive course meticulously curated for C# developers. Guided by Microsoft MVP and veteran software developer Hector Perez, this course aims to instill the foundational understanding of SOLID principles and classic design patterns, thereby elevating your coding skills to new heights.\n\n\nSOLID Principles and Classic Design Patterns are key to producing clean, modular, and maintainable code, forming the bedrock of best software development practices. You'll gain a firm understanding of the five SOLID principles — Single Responsibility, Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion. We'll walk you through their applications, elucidating how to leverage these principles to foster code cleanliness and maintainability.\n\n\nThis course also provides an in-depth exploration of the 23 classic design patterns propounded by the Gang of Four, segmented into Creational, Structural, and Behavioral patterns. Each pattern is a solution to a unique design issue, enhancing code reusability and fostering software that is comprehensible, scalable, and maintainable.\n\n\nComplementing theoretical learning, this course features extensive coding demonstrations to help cement your understanding of SOLID principles and design patterns. These demos are readily available for download, facilitating hands-on learning at your preferred pace.\n\n\nBy the conclusion of this course, you will have mastered the SOLID principles and the Gang of Four's design patterns, empowering you to produce efficient, maintainable, and scalable code. The curriculum covers a wide range of topics, including introductions to SOLID principles and Gang of Four design patterns, and deep dives into Creational, Structural, and Behavioral patterns.\n\n\nTo ensure an optimal learning experience, a rudimentary knowledge of software development and object-oriented programming is recommended. Embark on this journey to become a proficient C# developer, adept at modern software development with SOLID principles and Gang of Four design patterns. We're eager to see you in the course!",
      "target_audience": [
        "Beginner C# developers looking to improve their coding practices.",
        "Experienced C# developers wanting to deepen their understanding of design patterns.",
        "Software engineering students learning C# and interested in mastering best practices.",
        "Tech leads and software architects seeking to enforce better coding standards in their teams.",
        ".NET developers wanting to gain a solid foundation in C# coding principles.",
        "Developers in other languages interested in learning C# and its best practices."
      ]
    },
    {
      "title": "The secrets to landing offers at top tech companies",
      "url": "https://www.udemy.com/course/how-to-effectively-structure-your-job-search-in-tech-2023/",
      "bio": "A comprehensive guide on how to effectively structure your job search and easily secure offers at top tech companies",
      "objectives": [
        "How to write a compelling resume",
        "How to organize your linkedin",
        "How to create a compelling cover letter",
        "How to effectively structure your job search",
        "Landing Tech Interviews",
        "The most effective job boards",
        "The best strategies for cold applying",
        "Boolean searching",
        "Cold Emailing",
        "How to expand your professional network",
        "Thinking Outside of the box",
        "The third door",
        "Automating the Job Search",
        "How to pass technical interviews",
        "How to learn data structures and algorithms",
        "How to leetcode effectively",
        "How to pass behavioral interviews",
        "How to negotiate your compensation"
      ],
      "course_content": {},
      "requirements": [
        "Have a Resume",
        "Have a Linkedin"
      ],
      "description": "The typical interview process consists of 4 steps:\n\nBuilding your portfolio\nLanding the interview\nPassing the interview\nNegotiating your offer\n\nIn this course, I will provide a high-level overview of the job-search process, guiding you on the best ways to study and prepare for each stage. I will share insightful tips, strategies, and mindsets to help you navigate and effectively structure your job search.\nFor building the portfolio, I will show you how to craft a compelling resume, cover letter, and LinkedIn profile to capture the attention of recruiters and hiring managers.\nWhen it comes to landing the interview, I will share the most effective strategies for cold applications. Additionally, I will introduce techniques like boolean searching, cold emailing, networking, and thinking outside of the box to help you stand out from the crowd. By adopting these strategies, you'll be able to skip the initial filtering stages of interviews, move ahead of candidates more qualified than you, and even create opportunities that might not exist yet.\nFor passing the interview, I will show you the best study plans for preparing for technical and behavioral interviews.\nAt the end of the course, I will delve into the significance of salary negotiation and how to negotiate your compensation effectively.\nThis course will teach you how to land and pass interviews, anywhere.\n\nWhat this course is not: This is not a guide on how to pass technical interviews. There are plenty of resources online, such as LeetCode, to help you with that.\n\nWhat this course is: This is a comprehensive guide on how to effectively structure your job search and easily secure interviews at top tech companies.",
      "target_audience": [
        "Job seekers looking to break into the tech industry",
        "New grad computer science majors looking to lander their first software engineer job or internship",
        "Software Engineers looking to land more offers",
        "Computer Science Majors looking to land their first role",
        "Software Engineering Interns looking to land their first full time software engineer job"
      ]
    },
    {
      "title": "Communicate efficiently with Software Architecture Diagrams",
      "url": "https://www.udemy.com/course/communicate-efficiently-with-software-architecture-diagrams/",
      "bio": "Become an expert in crafting clear, simple, and easy-to-understand diagrams.",
      "objectives": [
        "Communicate technical ideas with architecture diagrams to address specific audience needs.",
        "Master simple and efficient techniques to quickly create and maintain architecture diagrams.",
        "Design professional-quality diagrams effortlessly.",
        "Capture your audience's attention with clear, memorable visuals and compelling storytelling."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Communication": [
          "Communication and Pictorial Content",
          "Types of Diagrams to describe Software"
        ],
        "Guidelines": [
          "Principles for Effective Software Architecture Diagrams",
          "Guideline 1: Have a Title",
          "Guideline 2: Find the right Abstraction Layer",
          "Guideline 3: Only Show Structure",
          "Guideline 4: Left to Right Direction",
          "Guideline 5: Consistent Symbols",
          "Guideline 6: Have a Legend",
          "Guideline 7: Color Coding",
          "Guideline 8: Label Every Node",
          "Guideline 9: Fonts",
          "Guideline 10: Connections",
          "Guideline 11: Placement of Nodes",
          "Guideline 12. Design it!"
        ],
        "Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "No prior experience in creating diagrams is required—this course will guide you from the basics to advanced techniques.",
        "Basic familiarity with software development and architecture concepts is helpful but not mandatory."
      ],
      "description": "Have you ever struggled to convince your team or stakeholders about the right solution to a problem? Clear communication is critical in these moments, and that’s where software architecture diagrams come in.\nDiagrams aren’t just helpful for explaining technical solutions—they are essential tools for aligning development processes, fostering collaboration, and improving communication across teams. When done right, they can bridge gaps between technical and non-technical audiences, ensuring everyone is on the same page.\nMy name is Simon, and in this course, I’ll share my proven approach to creating software architecture diagrams that go beyond being merely functional. These diagrams will become powerful tools to communicate your ideas effectively, make decisions faster, and align your team. Through a series of videos, hands-on exercises, and additional resources, you’ll learn how to design diagrams that are clear, simple, and easy to understand.\nBy focusing on clarity, consistency, and design principles, this course will help you craft visuals that enable your audience to quickly grasp the story behind your architecture and leave a lasting impression.\nWhether you’re a developer, team lead, or architect, this course will give you the skills to transform your diagrams into compelling communication tools. Are you ready to elevate the way you present your ideas? Let’s get started!",
      "target_audience": [
        "Ambitious software developers looking to improve how they communicate technical ideas.",
        "Senior software engineers and architects who want to create clear and impactful diagrams and elevate their technical presentations.",
        "Team leads aiming to align their teams through better visual communication and ensure their teams are on the same page with clear visual communication."
      ]
    },
    {
      "title": "150 Unique DevOps Interview Questions with Answers",
      "url": "https://www.udemy.com/course/devops-150-unique-interview-questions-l/",
      "bio": "Real-World Scenarios, In-Depth DevOps Interview Questions with Answers and Explanations!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is an extensive collection of practice tests tailored to prepare you for DevOps interview challenges. Designed to reflect the real-world questions you might encounter, it spans from foundational DevOps principles to intricate scenarios requiring advanced problem-solving skills, covering every facet of the essential DevOps functions.\nRecognizing the multifaceted nature of DevOps roles, which require a blend of technical skills, system understanding, and operational excellence, this course is grounded in a comprehensive approach to learning. Whether you're new to the field or looking to solidify your expertise, our objective is to foster learning, growth, and success.\nThe questions within this course are meticulously curated to align with the types encountered in interviews conducted by leading tech companies, including FAANG (Facebook, Amazon, Apple, Netflix, Google) and beyond. Our goal is to arm you with a diverse question bank that prepares you for any DevOps interview situation.\nWe go beyond merely presenting answers. Each question is accompanied by detailed explanations, not just highlighting the correct responses but also dissecting why alternatives fall short. This method ensures a deep understanding of the principles and practices underpinning each answer, aiding in learning and retention, regardless of initial familiarity with the topic.\nThis course stands as an invaluable resource for anyone targeting success in DevOps interviews. It serves as a comprehensive guide for beginners and a refresher for seasoned professionals. Embark on this educational journey to enhance your DevOps knowledge and confidence, paving your way to interview success.\nWho will benefit from this course?\n\n\nAspiring DevOps Engineers: Kickstart your DevOps career armed with a well-rounded understanding of interview expectations, from basic concepts to advanced operational challenges.\nExperienced DevOps Professionals: Sharpen your skills and prepare for your next career move with a deep dive into complex scenarios that reflect the evolving landscape of DevOps practices.\nSREs Exploring DevOps: For Site Reliability Engineers interested in broadening their skill set into DevOps, this course offers insights into the overlapping areas and distinct practices of DevOps roles.\nSoftware Developers: Developers keen on extending their expertise into the operational domain or transitioning into DevOps roles will find this course bridges the gap between development and operations seamlessly.\nIT and Technical Support Specialists: Enhance your technical repertoire and prepare for a shift towards the dynamic field of DevOps, understanding the key roles and responsibilities that drive successful operations.\nComputer Science Students and Recent Graduates: Equip yourself with the practical knowledge and problem-solving skills required in DevOps, supplementing your academic learning with real-world applications and interview preparation.\nJoin us in this comprehensive journey to demystify DevOps interviews, unlocking your potential and setting the stage for a successful career in DevOps.",
      "target_audience": [
        "Aspiring Site Reliability Engineers",
        "Experienced Site Reliability Engineers",
        "DevOps Engineers",
        "Software Engineers",
        "IT Professionals",
        "Computer Science Students and Graduates",
        "DevOps Professionals",
        "System Administrator",
        "Linux Administrator"
      ]
    },
    {
      "title": "Amazon EKS in 60 Minutes: Hands-on with Kubernetes in AWS",
      "url": "https://www.udemy.com/course/how-to-use-amazon-eks/",
      "bio": "Learn from Releaseworks Cloud Engineers: How to build, manage and deploy Kubernetes clusters in AWS",
      "objectives": [
        "You will learn how to build and manage EKS clusters using the AWS console",
        "You will learn how to build and manage EKS clusters with Terraform (Infrastructure as Code)",
        "You will learn how to deploy applications into EKS using Helm",
        "You will learn how to use the command-line tool eksctl",
        "You will learn what are the benefits of using Amazon EKS",
        "You will understand the individual components of Amazon EKS",
        "You will get access to a library of code examples that you can use in your work or hobby projects"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to Amazon EKS Fundamentals",
          "Meet your instructor: Joe Poser, Cloud Engineer at Releaseworks",
          "What you will learn on this course"
        ],
        "Getting Started": [
          "Using the terminal",
          "Optional: How to install the Linux terminal on Windows 10 with WSL",
          "How to install Terraform",
          "How to create an AWS account",
          "Where to find the code examples"
        ],
        "Diving into EKS": [
          "What is EKS",
          "Benefits of EKS",
          "EKS vs. self-hosted Kubernetes",
          "Components of EKS",
          "Test Your Knowledge: EKS Basics Quiz"
        ],
        "Internals of EKS": [
          "EKS clusters",
          "Node Groups",
          "Security and Access Permissions",
          "ALB/ELB Ingress Controllers",
          "The different ways of managing EKS and Kubernetes",
          "Test Your Knowledge: EKS Components Quiz"
        ],
        "Hands-on with EKS in the AWS Console": [
          "Lab: Create IAM roles for an EC2-based EKS cluster",
          "Lab: Create an EC2-based EKS cluster",
          "Lab: Create a Managed Node Group",
          "Lab: Delete a Managed Node Group and EKS cluster"
        ],
        "Hands-on with EKS and eksctl": [
          "Lab: Install AWS CLI and eksctl",
          "Lab: Create an EKS cluster using Managed Node Groups with eksctl",
          "Lab: Create a serverless EKS cluster with Fargate",
          "Lab: Install Wordpress on EKS using Helm"
        ],
        "Hands-on with EKS and Terraform": [
          "Why use Terraform to manage EKS",
          "Lab: Build an EC2-based EKS cluster with Terraform",
          "Lab: Configure kubectl and deploy an application",
          "Lab: Remove EKS cluster created with Terraform"
        ],
        "Afterword & Next Steps": [
          "Five takeaways from this course",
          "Test Your Knowledge: Using EKS in Practice Quiz",
          "Further reading",
          "Congratulations",
          "Bonus: Recommended further learning"
        ]
      },
      "requirements": [
        "To complete the labs, you will need a PC running Windows 10, Mac or Linux",
        "Basic understanding of Kubernetes is helpful"
      ],
      "description": "Learn from industry-leading DevOps and Cloud Engineers at Releaseworks:\nIn the next 60 minutes, you will learn the key features of Amazon EKS, and how to use it in practice.\nKubernetes has exploded in popularity, and it has now become the de-facto standard container orchestrator for advanced container deployments. Kubernetes can be difficult to manage, and it almost always comes with increased maintenance overhead. This is why all leading cloud platforms offer managed Kubernetes solutions to help their customers run Kubernetes easier, faster, and more securely.\nAmazon EKS in 60 Minutes includes 11 labs to help you practice along with the instructor, and learn by doing.\nThis training course is designed to help you decide if Amazon EKS is the right choice for your team by demonstrating its benefits and differences to self-hosted Kubernetes solutions. If you do decide to build your container orchestration platform on Amazon EKS, this course will help you get started with it in practice.\n\n\nDid you know that DevOps is one of the most sought-after set of skills in the job market right now, with tens of thousands of open roles globally. According to PayScale, the median DevOps salary in the U.S. is $93,770 per year. The best DevOps specialists on the market can name their price, and often earn more than $200,000 in a year. The best time to start learning DevOps was 5 years ago - the second best time is now!\n\n\nReleaseworks is an upskilling-focussed DevOps and cloud engineering consultancy based in London. We help some of the largest digital organizations in the world to take full advantage of the cloud, and implement DevOps ways of working. Our mission is to help software development teams release better software, faster. Releaseworks Academy is the collection of learning resources that we use to upskill the software development teams of our clients, as well as our own cloud engineers.",
      "target_audience": [
        "Software developers and system administrators looking to start using Amazon Elastic Kubernetes Service"
      ]
    },
    {
      "title": "C_CPI_2404: SAP Integration Developer - Full",
      "url": "https://www.udemy.com/course/c_cpi_2404-sap-integration-developer-full/",
      "bio": "SAP Certified Associate - Integration Developer",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "After completing this practice test, you will have a better grasp of the key concepts and skills required for the SAP Certified Associate - Integration Developer certification exam. By testing your knowledge on various topics such as managing APIs, cloud integration, and iPaaS, you will be better prepared to tackle the actual exam with confidence. This practice test serves as a valuable tool for assessing your strengths and weaknesses in specific areas, allowing you to focus your studies on areas that require improvement before taking the certification exam.\n\n\nTopic Areas:\n1. Modeling Processes 41% - 50%\nExplain Cloud integration capability in SAP Integration Suite usage; troubleshoot content modifier, integration flows; explain XSLT mapping, HTTP calls (via XPATH), Payload access; configure SOAP adapter for asynchronous processing; scripting mapping.\nCLD900\nSAP Integration Suite LJ\n2. Managing APIs 21% - 30%\nCreate API providers; set up authentication policies; explain API target endpoints, the API management capability of SAP Integration Suite; explain message protocols, API business hub enterprise usage, onboarding.\nCLD900\nSAP Integration Suite LJ\n3. SAP Integration Suite Overview 11% - 20%\nDescribe key elements of SAP BTP, capabilities of SAP Integration Suite; explain API-related concepts such as API consumer, API proxy; explain REST; describe OData usage.\nCLD900\nSAP Integration Suite LJ\n4. Managing Cloud Integration 11% - 20%\nDescribe log levels; explain integration flows, SOAP adapters in integration flows, Apache Camel Data Model, Content modifier.\nCLD900\nSAP Integration Suite LJ\n5. Introducing iPaaS <= 10%\nDescribe holistic integration, SAP Business Accelerator Hub usage, (SAP) open integration, SAP Integration Solution Advisory Methodology (ISA-M), SAP Discovery Center.\nCLD900\nSAP Integration Suite LJ",
      "target_audience": [
        "This Course is for SAP Consultants. This certification exam validates that the candidate possesses the fundamental and core knowledge required of the SAP Integration Developer profile. It proves that the candidate has an overall understanding and in‐depth technical skills to participate as a member of a project team in a mentored role."
      ]
    },
    {
      "title": "Data Structures & Algorithms Interview Preparation Practice",
      "url": "https://www.udemy.com/course/data-structures-algorithm-interview/",
      "bio": "Arrays, Linked Lists, Stacks, Queues, Trees, Graphs, Sorting, Searching, Dynamic Programming, Recursion, Hashing, DSA",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is designed for students and professionals who want to land a job or get a raise by successfully passing top interviews that focus on data structures and algorithms.\nIn this course, you will learn the important concepts and techniques that interviewers often ask about. Whether you’re new to programming or have some experience, this course will help you strengthen your skills and boost your confidence.\nYou’ll engage with practical exercises and real interview questions to ensure you’re well-prepared.\nIn this comprehensive practice test series, you'll engage with five carefully crafted tests, each containing a variety of questions that cover key DSA topics and real-world scenarios. Our tests feature both multiple-choice questions (MCQ) and multiple-select questions (MSQ), with detailed explanations provided for every answer. This means you won’t just practice - you’ll learn and understand the concepts behind each question.\nCourse Outline:\nArrays & Strings\nArray Basics\nTwo-Pointer Technique\nSliding Window\nString Manipulation\nCommon Array Problems (e.g., Maximum Subarray, Rotate Array)\nCommon String Problems (e.g., Anagrams, Palindromes)\nLinked Lists & Stacks\nLinked List Fundamentals\nSingle vs. Doubly Linked Lists\nStack Operations\nApplications of Stacks (e.g., Expression Evaluation)\nCommon Linked List Problems (e.g., Reversal, Cycle Detection)\nStack Problems (e.g., Valid Parentheses, Next Greater Element)\nQueues & Trees\nQueue Fundamentals\nCircular Queue and Priority Queue\nTree Basics (Binary Trees, Binary Search Trees)\nTree Traversals (Inorder, Preorder, Postorder)\nCommon Tree Problems (e.g., Lowest Common Ancestor, Depth Calculation)\nGraphs & Hashing\nGraph Representation (Adjacency List, Matrix)\nGraph Traversal Algorithms (BFS, DFS)\nShortest Path Algorithms (Dijkstra’s, Bellman-Ford)\nHash Table Basics\nCommon Hashing Problems (e.g., Two Sum, Anagrams)\nSorting, Searching & Dynamic Programming\nSorting Algorithms (Quick Sort, Merge Sort, Bubble Sort)\nSearch Algorithms (Binary Search, Linear Search)\nBasics of Dynamic Programming\nCommon DP Problems (e.g., Fibonacci, Knapsack Problem)\nRecursion vs. Iteration",
      "target_audience": [
        "Students Preparing for Interviews: Individuals seeking internships or entry-level software development positions.",
        "Professionals Looking for Career Advancement: Those aiming to clear technical interviews for higher-paying job opportunities.",
        "Anyone Interested in DSA: Individuals wanting to improve their problem-solving skills and coding knowledge in data structures and algorithms."
      ]
    },
    {
      "title": "Quantum ATK Software Learning: From Atom to Device",
      "url": "https://www.udemy.com/course/quantum-atk-software-learning-from-atom-to-device/",
      "bio": "Quantum ATK Training",
      "objectives": [
        "How to simulate atomic structures.",
        "How to work with Quantum ATK tools and plugins.",
        "How to use coordinate and bulk tools.",
        "How to use crystal builder in Quantum ATK.",
        "How to do bandstructure and DOS analyses.",
        "How to do relax calculation with Quantum ATK.",
        "How to obtain current-voltage characteristics with Quantum ATK.",
        "How to build Nanoribbons and Nanotubes with Quantum ATK."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Quantum ATK Tools and Plugins": [
          "Introduction",
          "Introducing quantum ATK plugins",
          "Quantum ATK bulk tools",
          "Coordinate tools in Quantum ATK",
          "Crystal Builder with Quantum ATK",
          "Nanoribbons and Nanotubes in Quantum ATK"
        ],
        "Quantum ATK Examples": [
          "Introduction",
          "Graphene bandstructure",
          "Transport in Graphene Nanoribbons",
          "Simulation of P-N junction (Diode) by Quantum ATK",
          "Silicon bandstructure",
          "S3.L6-Silicon Nanowire(Si-NW) transistor simulation by Quantum ATK",
          "Tunnling Transistor Structure by Quantum ATK",
          "Simulation results of Tunneling Transistor",
          "Molecular device simulation"
        ]
      },
      "requirements": [
        "You need a computer.",
        "You need an internet connection to download and update the software."
      ],
      "description": "In this course, the Quantum ATK software is  taught. Simulation of quantum devices is necessary for the design and analysis of nano-electronic devices. Quantum ATK can do this task well. This software provides you with a set of unique tools to create and simulate atomic structures. This software has a very strong and comprehensive tools, plugins and database that has many molecules and crystals in it.  In this course,  we will train how to use these tools.\nThe quantum ATK software calculations are divided into two main parts. Bulk calculation and another device calculation. First, we describe the bulk calculations  and then we explain device calculation.\nWe do calculations such as bandstructure analysis, optimization, current-voltage characteristics, relaxation analysis, density of states, and transmission spectrum calculation. We use and explain different examples to learn about different tools and different calculations. Examples such as p-n junction diode, Silicon nanowire FET, tunneling transistor, and molecular device.\nAt the end of this course, you will have a complete understanding on quantum ATK calculations. Also, you can extract the electronic and physical properties of materials. This course is useful for quantum physics students, materials specialists, nano and micro electronic engineers, semiconductor companies, etc. You may use it for your studies, paper, thesis, and every day to day jobs.",
      "target_audience": [
        "Nano-electronic engineers",
        "Material scientists",
        "Quantum physics students"
      ]
    },
    {
      "title": "Agile Product Masterclass: UX, Scrum, Design & AI",
      "url": "https://www.udemy.com/course/mastering-design-thinking-lean-agile-for-great-products/",
      "bio": "Drive product success by integrating UX design, design thinking, Agile Scrum, and AI-powered techniques.",
      "objectives": [
        "Understand how design thinking, the lean movement, and agile software development can make a difference.",
        "Reflect on the Core Principles of User-Centered Design and their Importance.",
        "Apply User-Centered Design techniques to real-world projects.",
        "Apply different approaches to integrate UX design into Agile, with a focus on integrated sprints.",
        "Discover UX challenges in integrated Scrum teams and learn how to overcome them.",
        "Discover AI's role in product development workflows, enhancing user experiences, automating tasks, and optimizing decision-making.",
        "Apply AI, including ChatGPT, in product development workflows. Define problems, identify data, establish feedback, test models, and ensure ethical use.",
        "Enhance your leadership skills to drive team success."
      ],
      "course_content": {
        "Welcome to the Course!": [
          "Course Introduction",
          "Course Resources - for your convenience"
        ],
        "Integrating Design Thinking, Lean UX, and Agile": [
          "Exploring With Design Thinking",
          "How Design Thinking Helps Companies Explore the Problem",
          "Building the Right Things With Lean UX",
          "How Lean UX Helps Companies Build the Right Product",
          "Building the Thing Right With Agile",
          "How Agile Helps Companies Build the Product Right",
          "Recap: Differentiating Design Thinking, Lean UX, and Agile",
          "Tying It All Together: Integrating Design Thinking, Lean UX, and Agile",
          "Common Goals and Synergies",
          "Practical Integration",
          "Continuous Integration of All Three Methodologies",
          "How Google Combines Design Thinking, Lean UX, and Agile",
          "Quiz on Design Thinking, Lean UX, and Agile"
        ],
        "Design Thinking Essentials: Embracing User-Centered Design Principles": [
          "Why User-Centered Design Matters",
          "Understanding User Needs",
          "Effective User Interviews",
          "Steps for Effective Quantitive Surveys",
          "Usability Testing: Uncover & Improve",
          "User Empathy & Empathy Mapping",
          "Journey Mapping",
          "Wrapping Up",
          "User-Centered Design Quiz",
          "Empathy Mapping Exercise"
        ],
        "Practical UX Design Applications in Agile Scrum": [
          "Highlighting UX Challenges in Scrum",
          "What Is UX Design?",
          "Agile Often Lacks UX Expertise",
          "What Is a Scrum Team?",
          "UX Designer Within Scrum Team",
          "UX Design and Scrum Process",
          "Where Can Design Fit Into Scrum?",
          "UX Design in Scrum Quiz",
          "Iteration and Agile Sprint Simulation"
        ],
        "Scrum with Lean UX: Design Sprints and Rapid Prototyping": [
          "Zoom On 3 Practices",
          "Design Sprints",
          "Design Sprint Methodology",
          "Design Sprint Week",
          "Design Sprints in Scrum",
          "Design Studio",
          "Minimum Viable Product",
          "The UX Designer's Role in a Scrum Team",
          "Challenges Faced by UX Designers",
          "How to Meet These Challenges",
          "Final Insights and Takeaways",
          "Design Sprints and Rapid Prototyping Quiz",
          "User Testing and Feedback"
        ],
        "AI Integration: Enhancing Product Development with Data & Automation": [
          "Understanding AI in Product Development",
          "AI and Design Thinking",
          "User Experience Optimization",
          "Rapid Prototyping with AI",
          "AI-Driven Automation",
          "Enhancing Decision-Making",
          "Case Studies: Real-World Examples",
          "Optimizing ChatGPT for Product Development",
          "AI Ethics in Product Development",
          "A Journey of Possibilities",
          "Design Problem Solving for a Website with Chat GPT"
        ],
        "Strategic Learning in Action": [
          "Defining Actionable Strategy",
          "Acting to Learn",
          "Psychological Aspects",
          "Strategic Insights Quiz",
          "Problem Statement Refinement"
        ],
        "Leadership Mastery for Results": [
          "Leading Teams to Win",
          "Mission Command",
          "Visualizing and Acting Strategically",
          "Techniques for Prioritizing Value",
          "Measuring Success Across Dimensions",
          "Value-Based Prioritization",
          "Aligning Purpose and Action",
          "Success Leadership Quiz"
        ],
        "Wrapping Things Up": [
          "Wrapping Up",
          "Final Exam",
          "Your Turn!"
        ]
      },
      "requirements": [
        "No formal prerequisites, but having a background in product management is desirable."
      ],
      "description": "\"I highly recommend this course to any Product Manager, Designer or Developer looking to uplevel their skills in human-centered design and agile product development. I've been able to take the frameworks and techniques learned, compare with the strategies we’ve been using and apply them to my own project.\" — Elizabeth O. (Product Owner)\n\n\n\"I recently completed the Master Design Thinking, Lean UX, Scrum, and AI Integration course, and I couldn't be more impressed. The course does a fantastic job of simplifying complex concepts while offering a well-rounded approach to product development. I particularly appreciated the emphasis on not just building the right thing, but also ensuring that it's built the right way. Highly recommend this course to anyone looking to excel in product development!\" — Cathy M. (Delivery Manager)\n\n\n\"I thoroughly enjoyed this course! It was incredibly insightful and provided a fresh perspective on integrating UX principles into Scrum. The course shed light on how to seamlessly incorporate user experience strategies into agile workflows, making it easier to balance both development and user-centered design. The practical tips and real-world examples were particularly helpful. This course is a great resource for anyone looking to enhance their Scrum process with effective UX practices!\" — Tony E. (UX Designer)\n\n\n\"The course demystified Design Thinking for me. It’s not just about post-it notes and brainstorming; it’s a structured approach to innovation.\" — Martin S. (Scrum Master)\n\n\n\"This Udemy course was excellent! The instructor's clear teaching and practical exercises made learning Agile Product Management enjoyable and effective. Highly recommended!\" — Julia F. (Product Designer)\n\n\n\"I highly recommend it! The course provided clear and concise explanations of Design Thinking, Lean, and Agile methodologies. What I loved most was the practical focus—I learned how to apply these concepts in real-world scenarios. Will Jeffrey’s teaching style made the material engaging and actionable.\" — Florian L. (Agile Coach)\n\n\n\n\nReady to transform your product development process like Elizabeth, Cathy, Tony, Martin, Julia, and Florian? Let’s get started!\n\n\nLearn how Design Thinking and Lean Agile drive user-centric product creation. Through real-world examples and hands-on exercises, explore how to integrate AI, including ChatGPT, to automate tasks, optimize interactions, and improve decision-making. Build the skills to drive product success and deliver exceptional user experiences.\n\n\nCourse Highlights:\n\n\nMastering Core Methodologies: Explore Design Thinking to harness empathy, ideation, and prototyping for innovative solutions. Uncover Lean UX principles to streamline design, cut waste, and enhance value delivery. Gain proficiency in Agile methods like Scrum and sprints for flexible and efficient project management. Learn to integrate these approaches, blending Design Thinking, Lean, and Agile, to drive seamless and impactful product innovation.\nUser-Centered Design Principles: From Insight to Impact: Discover how to place users at the heart of your design thinking process. Learn techniques for understanding user needs through interviews, surveys, and journey mapping, and apply these insights to create products that truly resonate with users and deliver exceptional experiences.\nLean UX Design in Agile Scrum: Explore UX design within the Agile Scrum framework. Learn to navigate challenges, understand the UX role within a Scrum team, maintain effective communication, and influence success by focusing on Lean UX practical solutions and applicable concepts for Agile frameworks.\nAI Integration for Enhanced Product Development: Gain practical skills in defining problem statements, identifying relevant data sources, establishing feedback loops, testing and validating models, and ensuring ethical AI use. With a focus on application, you'll unlock the potential of AI in product development and drive transformative results.\nLeadership in Action: As a leader, you’ll orchestrate this symphony. We’ll equip you with strategies to foster collaboration, communicate effectively, and guide your team toward success. Whether you’re a product manager, entrepreneur, or aspiring change agent, this course has your back.\n\n\nWhy Take This Course?\n- Market Relevance: Organizations crave professionals who can bridge the gap between creativity and execution. By mastering Design Thinking, Lean UX, Scrum, and AI integration, you'll become that bridge, bringing invaluable skills to the table.\n- Practical Applications: Real-world examples from companies like Netflix, Amazon, Airbnb, and IBM are shared to illustrate the practical applications of AI in Design Thinking, Lean UX, Scrum areas.\n- Problem-Solving Prowess: Tackle real-world challenges head-on. Say goodbye to guesswork and embrace data-driven decisions, equipping yourself with the tools and techniques to solve complex problems effectively.\n- Team Empowerment: Lead with confidence and inspire your team to innovate fearlessly. By understanding the holistic product development process, you'll empower your team to collaborate, experiment, and drive remarkable outcomes.\n- Career Acceleration: Elevate your career trajectory. Employers actively seek professionals who possess a deep understanding of product development. By honing these skills, you'll position yourself for exciting opportunities and propel your career forward.\n\n\nCourse Audio:\nFor a smooth and easily understandable audio narration, this course uses Amazon Polly’s advanced text-to-speech technology. This ensures every lesson is clearly communicated, making it easier to follow along and absorb the material.\n\n\nProduct development: Challenge it. Master it.",
      "target_audience": [
        "Product Managers, Product Owners, and all individuals involved in product management.",
        "UX designers collaborating within a Scrum team.",
        "Developers and all individuals involved in software development.",
        "Anyone looking to enhance their skills and understanding in innovation, efficiency, and iterative development."
      ]
    },
    {
      "title": "AWS, AZURE, IBM, GCP With Serverless Framework.",
      "url": "https://www.udemy.com/course/multi-cloud-deployment-with-serverless-framework/",
      "bio": "A course where you can learn to build server-less applications on AWS, Azure, GCP & IBM cloud",
      "objectives": [
        "Architect large, scalable apps using a collection of serverless on 4 cloud providers!",
        "Have business and application logic separated so code can be reusable",
        "Build complex architectural designs best fitted for the project",
        "Learn real world examples",
        "Understand how enterprise companies design their infrastructure and which cloud strategy they use, for example multi-cloud fail over.",
        "Learn how to test code locally",
        "Learn how not to get locked into cloud vendors!"
      ],
      "course_content": {
        "This is Multicloud!": [
          "Your Instructor",
          "Course Overview",
          "Max Benifits",
          "Prerequisites",
          "What Is Serverless?",
          "The Serverless Framework",
          "What Is Multicloud?",
          "Development & Deployment Work Flow",
          "Career Path",
          "Career Path 2"
        ],
        "Cloud Setup!": [
          "Getting Started",
          "Setting up AWS",
          "Setting Up Azure",
          "Setting Up GCP"
        ],
        "First Multi-Cloud Deployments": [
          "Introduction to MCD",
          "Installing Serverless Framework",
          "Serverless Template Setup AWS",
          "Serverless.yml",
          "Lambda Function Deployment",
          "Exercise With AWS",
          "Error handling",
          "GCP functions enabling",
          "GCP Exercise",
          "GCP URL Structure",
          "Azure CLI Setup",
          "Stack Removal"
        ],
        "Upgrade!": [
          "Agent Smith"
        ],
        "First Gig - SMS Application": [
          "Introduction",
          "Twilio Setup",
          "Configure Serverless.yaml File In AWS",
          "AWS Local Test And Dev Deployment",
          "GCP Deployment",
          "Azure Local Test And Dev Deployment"
        ],
        "Second Gig - Business Logic Separation": [
          "Second Gig Intro",
          "NPM Registry",
          "Business Logic Package",
          "Implementation Of Logic With AWS",
          "Business Logic Implementation With Azure",
          "Error handling and Logic Implementation With GCP"
        ],
        "Third Gig - Multi-Cloud Failover": [
          "Introduction To Multi-cloud Failover",
          "CLI Installation Of MongoDB",
          "MongoDB cheat sheet",
          "Interactive GUI",
          "Fetching Data",
          "Create Data & Publishing",
          "GCP MongoDB Cluster",
          "AWS Dev Environment Setup",
          "Azure Development",
          "CORS and URL Structure",
          "Front-end App Installation & Process",
          "Fail Over Scenario",
          "Request Headers AWS",
          "Netlify!"
        ],
        "Fourth Gig - Shop!": [
          "Introduction to CI/CD",
          "CI/CD Pipeline Signup",
          "Stripe Package",
          "Adding Functions To serverless.yaml",
          "Get And Purchase Functions",
          "Fetch Items From DB",
          "First Purchase With Stripe!",
          "Adding Repository",
          "CI/CD Pipeline Deployment",
          "Stripe Front-end",
          "Exercise With Stripe"
        ],
        "Fifth Gig - Microservices": [
          "Introduction To Microservices",
          "JWT Token Generation",
          "Token Decoding With Lambda",
          "Azure Microservice deployment",
          "GCP Recipes",
          "IBM Cloud Into Action!"
        ],
        "The End Of Gigs!": [
          "Whats Next?"
        ]
      },
      "requirements": [
        "Basic of NodeJS and Javascript",
        "Basic understanding of what is cloud computing",
        "Even if you need pre-requisites, I will have a whole section dedicated on teaching you!"
      ],
      "description": "Requirements\nBasic knowledge of Javascript and Node.js is required\nKnowledge of react  (The code repository is there so you can just download the code and skip react completely)\nWorking Laptop\nInternet connection\nWhy Multi-cloud course?\nCloud computing is redefining how we build applications and businesses, reaping the benefits of economies of scale, leading to the death of traditional data centers.\nAccording to Gartner, 80% of enterprises will no longer use traditional data centers by 2025. Moreover, 68% of cloud services delivered today are being delivered by hyper-scale providers, such as Amazon Web Services, Microsoft Azure, and Google Cloud Platform.\nVisionaries such as Elon Musk, leading the transformation towards postmodern technology on the edge of a new industrial revolution perhaps one of the best examples.\nA vision as such requires a mountain of resources to execute, and that is where cloud computing shines, and that is how you have an opportunity to create an impact in the next industrial revolution!\n\nWant to get an unfair advantage in the Cloud industry?\nNo worries! This course has got you covered!\nServerless technology is being seen increasingly used in companies. A lot of them are transitioning from single cloud infrastructure to multi cloud infrastructure. and this is where this course comes in!\nThere are few resources online that shows how to code and deploy serverless applications on 4 different cloud environment and worst you won't find any videos showing how different type of architectural designs are used!\nMicro-service architecture? Multi cloud fail over architecture? CI/CD pipeline? Vendor lock-ins? THEY ARE ALL COVERED!\nAll challenges you will face in the real world are covered in this course.\nBeyond focusing on the basics of serverless technology, this course is a perfect introduction to the world of multicloud. You will work from all the way from writing the code, testing and deploying to all cloud providers and even have your own front-end!\nI try to cover every step with details and make sure everything is clear! This course makes sure you get your hands dirty fast and deploy your application in an easy manner instead of hours and hours of boring lectures!\n\n\nHow This Course Works\nThis course teaches you real life examples and makes sure what you are being taught is actually used in real life and not just a basic tutorial where later you will have to google and figure out how things are applied at work! We will be using third party frameworks, libraries and many more things and figure out clever solutions to solving the issues.\n\n\nWhat Technology You'll Use\nNode JS\nServerless Framework\nAWS Lambda\nAWS API gateway\nAWS cloud-formation\nGoogle cloud functions\nGCP development manager\nAzure functions\nIBM cloud functions\nTwillio\nNpm\nAsync/Await\nMongoDB\nReact JS\nGIT\nGITHUB\nRest API Design\nPostman\nPackage management\nStripe payment gateway\nMany more tools\nSo many technologies right? Even if your not familiar with one of them, don't worry I got everything covered that you need to learn with.\n\n\nWhat You'll Be Able to Do\nBy the time you complete this course, you will be able to:\nArchitect a multi-service application\nDetermine the correct architectural design for the application needed\nDeploy server-less applications quickly to 4 cloud providers\nCode in a organised manner so large teams can re use the code.\n\n\nWhat You'll Learn\nFirstly, we will go through an overview of the multi-cloud ecosystem and other necessary supporting topics, before we deep dive into being hands-on and get coding.\nWe will set up all necessary accounts such as AWS, Azure & GCP accounts, dependencies, installations and tools that are in order to smoothly get continue the course.\nWe will be learning how to deploy a serverless application to AWS, Google Cloud, Azure using a serverless framework. We will go through the basic set up needed to deploy our serverless functions and prepare a template that we will use in the future for all serverless functions for each cloud provider to make multi-cloud deployment smooth.\nWe will be building a sms application and deploy it using a serverless framework to AWS, GCP, and Azure. We will be using Twilio’s services and deep dive into the concept of the vendor - lock and see a real-life example on how we refrain from vendor locking to a specific ecosystem. Moreover, we will also start learning how to test codes locally before deploying them to the cloud providers and we will cover different error scenarios while testing to replicate real-life errors.\nWe will be learning about decoupling architecture design. This basically means that we will be decoupling our technical code from our business logic code by building an application that will showcase this architectural style.\nWe will be learning about fail-over architecture. what this means in practice is that we will have our code running on 2 cloud platforms and when one cloud provider is turned off the traffic will automatically be transferred to the other online cloud platform.\nWe will be building an app that allows users to purchase items from a store and also learn about continuous integration and continuous deployment pipeline.\nWe will be learning about micro-service architecture.\nMicroservice architecture - is an architectural style that structures an application as a collection of services that are highly maintainable and testable, loosely coupled , independently deployable,\norganized around business capabilities &\nowned by a small team.\nSo why wait?! Grab the course now!\n\n2025 Updates ->\nAlot of the versions are old and the UI might look a bit different, please try to add the same version in the video on package.json if you want to follow along the same way, if not just go ahead with the latest versions and ask chatgpt for help, if not i am always here!",
      "target_audience": [
        "Developers who are curious about cloud technology"
      ]
    },
    {
      "title": "Design Patterns in Python",
      "url": "https://www.udemy.com/course/design-patterns-ss/",
      "bio": "Learn the Design Patterns in a practical way using Python",
      "objectives": [
        "Design Patterns"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Singleton Design Pattern": [
          "Singleton Design Pattern",
          "Singleton Design Pattern - Lab"
        ],
        "Prototype Design Pattern": [
          "Prototype Design Pattern",
          "Deepcopy",
          "Prototype Design Pattern - Lab"
        ],
        "Factory Design Pattern": [
          "Factory Design Pattern",
          "Factory Design Pattern - Lab"
        ],
        "Builder Design Pattern": [
          "Builder Design Pattern",
          "Builder Design Pattern - Lab"
        ],
        "Adapter Design Pattern": [
          "Adapter Design Pattern",
          "Adapter Design Pattern - Lab"
        ],
        "Facade Design Pattern": [
          "Facade Design Pattern",
          "Facade Design Pattern - Lab"
        ],
        "Proxy Design Pattern": [
          "Proxy Design Pattern",
          "Proxy Design Pattern - Lab"
        ],
        "Chain of Responsibility Design Pattern": [
          "Chain of Responsibility Design Pattern",
          "Chain of Responsibility - Lab"
        ],
        "Command Design Pattern": [
          "Command",
          "Command - Lab - Part 1",
          "Command - Lab - Part 2",
          "Command - Lab - Part 3",
          "Command - Lab - Part 4"
        ]
      },
      "requirements": [
        "Basic Knowledge of Python Programming Language"
      ],
      "description": "Learning Design Pattern is a voracious learning, where we are learning from others mistakes and best practices. We learn how the best solutions to the repeating problems, which others have discovered. We learn how to identify these problems, which appear in different forms and how to solve them.\nDesign Patterns are the tools, which we can use to solve different problems in different situations.\nIn this course, you will learn what these tools are, when to use which tool, how to use it and what needs to be taken care of while using the tool. Understanding of different tools and their usage takes our work to the next level which directly gets converted in its quality, productivity and maintainability.\nIt also enables us seeing and recognizing the situation differently and in crafting the best solution(s) for it.\nDesign Patterns covers mainly cover three aspects of software design -- how to construct the required components, the structure or composition of these components and how these components should behave in different situations.\nOn these lines, we have three types of Design Patterns -\n* Creational Design Patterns\n* Structural Design Patterns\n* Behavioral Design Patterns\nThis course covers all these three type of design patterns with practical examples in Python. The examples provide a skeleton code which can be reused in other projects and adapted as per the requirements.\nThis course also covers the SOLID Design Principles, which are the backbone of the design patterns and the software development. These design principles are described in a separate section for your reference.\nThe course recommends to refer these design principles, as they get mentioned many a times in the Design Pattern description. If you are not familiar with the SOLID Design Principles, then it is highly recommended to go through these design principles first, before learning the design patterns.",
      "target_audience": [
        "Software Developers",
        "Python Developers",
        "Students",
        "Programmers",
        "Software Designers",
        "Software Architects"
      ]
    },
    {
      "title": "Extreme Programming (XP): Techniques for Agile Development",
      "url": "https://www.udemy.com/course/xp-programming-learnit/",
      "bio": "The Complete Guide to XP. Master XP techniques to write cleaner, faster, and more reliable code. From Theory to Practice",
      "objectives": [
        "Master the core principles of Extreme Programming (XP) and Agile development",
        "Apply Test-Driven Development (TDD) to write reliable, testable code",
        "Use Pair Programming to improve code quality and team collaboration",
        "Implement Continuous Integration and Continuous Deployment (CI/CD)",
        "Refactor code effectively to keep it clean, scalable, and maintainable",
        "Adopt incremental development for faster, high-quality software releases",
        "Improve team collaboration with Agile feedback loops and code reviews",
        "Automate testing with unit tests, integration tests, and test suites",
        "Enhance software design with XP practices like simple design and YAGNI",
        "Understand Agile planning, iterations, and adaptive software delivery",
        "Reduce technical debt by following XP’s best practices in real projects",
        "Increase productivity and software reliability with XP engineering tools",
        "Learn how to work effectively in cross-functional Agile development teams",
        "Master XP's approach to customer collaboration and requirement changes",
        "Gain hands-on experience with real-world XP coding exercises and projects"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Module 1: Introduction to Extreme Programming (XP)": [
          "Introduction to Extreme Programming (XP) - Part 1",
          "Introduction to Extreme Programming (XP) - Part 2"
        ],
        "Module 2: Fine-Scale Feedback": [
          "Pair Programming - Part 1",
          "Pair Programming - Part 2",
          "Planning Game - Part 1",
          "Planning Game - Part 2",
          "Test-Driven Development (TDD)",
          "BDD & ATTD",
          "TDD, BDD & ATTD - Practice",
          "Whole Team - Part 1",
          "Whole Team - Part 2"
        ],
        "Module 3: Continuous Process": [
          "Continuous Integration (CI) - Part 1",
          "Continuous Integration (CI) - Part 2",
          "Refactoring or Design Improvement - Part 1",
          "Refactoring or Design Improvement - Part 2",
          "Small Releases - Part 1",
          "Small Releases - Part 2"
        ],
        "Module 4: Shared Understanding": [
          "Coding Standards - Part 1",
          "Coding Standards - Part 2",
          "Collective Code Ownership - Part 1",
          "Collective Code Ownership - Part 2",
          "Simple Design - Part 1",
          "Simple Design - Part 2",
          "System Metaphor"
        ],
        "Module 5: Programmer Welfare": [
          "Sustainable Pace - Part 1",
          "Sustainable Pace - Part 2"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Familiarity with software development concepts and workflows",
        "Interest in Agile methodologies like Scrum, Kanban, or Lean development",
        "No prior experience with XP required – everything will be explained from scratch",
        "An open mind to learn new development techniques and improve team collaboration"
      ],
      "description": "Master Extreme Programming (XP) and Build High-Quality Software with Agile Techniques\nAre you a software developer, team lead, or Agile enthusiast looking to improve your development process and write cleaner, faster, and more reliable code? Do you want to reduce technical debt, improve team collaboration, and increase software delivery speed? If so, then this course is for you!\nExtreme Programming (XP) is one of the most powerful and efficient Agile software development methodologies, focusing on rapid iterations, collaboration, and quality-driven development. It is used by top development teams worldwide to streamline processes, minimize bugs, and build scalable, maintainable applications.\n\n\nWhat You'll Learn in This Course\nIn this comprehensive guide, you’ll gain a deep understanding of XP principles, techniques, and best practices to transform the way you develop software. By the end of this course, you will be able to:\nMaster XP Core Principles – Understand the values and principles that make XP successful in Agile environments.\nApply Test-Driven Development (TDD) – Write robust, testable, and maintainable code using unit tests, refactoring, and continuous testing.\nImplement Pair Programming – Work effectively with team members to reduce errors, improve code quality, and enhance collaboration.\nOptimize CI/CD Pipelines – Automate software delivery using Continuous Integration and Continuous Deployment (CI/CD) techniques.\nRefactor Code Like a Pro – Keep your codebase clean and flexible by applying refactoring strategies without breaking functionality.\nEnhance Collaboration with Agile Practices – Learn how to work in cross-functional teams, improve communication, and manage code effectively.\nDevelop Software with Incremental Design – Build scalable applications with iterative development and rapid releases.\nMaster Code Reviews & Feedback Loops – Ensure continuous improvement with regular code reviews and feedback cycles.\n\n\nWho is This Course For?\nThis course is designed for:\nSoftware Developers – Improve your coding skills and learn XP techniques to write better software.\nAgile Practitioners & Scrum Masters – Enhance your understanding of Agile methodologies and improve team collaboration.\nTeam Leads & Engineering Managers – Learn best practices to boost productivity, reduce technical debt, and improve code quality.\nQA Engineers & Testers – Understand how XP integrates testing into development and how to create more effective test cases.\nDevOps & CI/CD Engineers – Explore how XP aligns with DevOps culture and CI/CD automation to streamline software delivery.\n\n\nWhy Learn Extreme Programming (XP)?\nBoost Productivity – Work faster, deliver high-quality code, and avoid costly rewrites.\nReduce Bugs & Improve Code Quality – Write clean, maintainable, and testable code.\nEnhance Collaboration – Foster better teamwork with techniques like pair programming and code reviews.\nAdapt to Change – Learn how to build software that evolves with business and user needs.\n\n\nCourse Structure\nThis course is designed with real-world examples, coding exercises, and hands-on projects to help you apply what you learn immediately. The course includes:\nStep-by-step tutorials and practical exercises\nHands-on coding demonstrations\nCase studies from real-world XP implementations\nQuizzes & challenges to reinforce your learning\n\n\nWhat You’ll Need\nBasic knowledge of software development and programming\nAn interest in Agile and XP methodologies\nA willingness to practice and implement XP techniques\n\n\nGet Started Today!\nJoin thousands of developers who have transformed their coding practices with Extreme Programming. Whether you’re working on personal projects, enterprise applications, or Agile teams, these techniques will help you build better software faster.\nEnroll now and take your development skills to the next level with Extreme Programming (XP)!",
      "target_audience": [
        "Software Developers & Engineers – Learn XP techniques to write cleaner, testable, and scalable code",
        "Agile Practitioners & Scrum Masters – Improve Agile workflows with XP methodologies",
        "Team Leads & Engineering Managers – Optimize development processes and team collaboration",
        "QA Engineers & Testers – Understand how XP integrates testing into the development lifecycle",
        "DevOps & CI/CD Engineers – Align XP with DevOps culture and automation strategies",
        "Tech Leads & Architects – Improve system design with XP’s best engineering practices",
        "Junior Developers – Build strong foundational skills in XP, TDD, and Agile development",
        "Freelancers & Indie Developers – Enhance productivity and write more maintainable code",
        "Anyone Interested in Agile Development – Gain practical insights into XP and modern software practices"
      ]
    },
    {
      "title": "UML: The Most Complete Guide with Real-Life Examples",
      "url": "https://www.udemy.com/course/uml-learnit/",
      "bio": "Unlock the Power of UML: The Most Complete Guide with Real-Life Examples for Mastering Visual Software Design Skills.",
      "objectives": [
        "Mastering All 14 UML Diagrams: Gain in-depth knowledge and proficiency in creating and interpreting each of the 14 UML diagrams.",
        "Real-Life Application of UML: Apply UML concepts to real-world scenarios, ensuring a practical understanding of software design.",
        "Comprehensive System Analysis: Learn to analyze complex systems using UML to identify relationships, interactions, and potential improvements.",
        "Visualizing Software Architecture: Acquire skills to visually represent and communicate intricate software architectures through UML diagrams.",
        "Model-Based Testing Strategies: Develop and implement model-based testing strategies derived directly from UML diagrams.",
        "Enhancing Code Clarity: Improve code clarity by translating UML diagrams into effective and efficient code structures.",
        "Behavioral and Structural UML diagrams",
        "Documentation Excellence: Elevate your documentation skills by creating clear and detailed UML-based documentation.",
        "Optimizing System Structure: Learn to optimize system structures by creating UML package diagrams.",
        "Designing Robust Interaction: Design robust and efficient interactions between system elements with UML interaction diagrams.",
        "Effective Communication with Stakeholders: Develop skills to communicate complex technical details with stakeholders through UML communication diagrams."
      ],
      "course_content": {
        "Introduction": [
          "Communication Plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "UML Introduction": [
          "Introduction to UML"
        ],
        "Behavioral Diagrams": [
          "Use Case Diagram",
          "Sequence Diagram",
          "Activity Diagram",
          "State Machine Diagram",
          "Communication Diagram (formerly known as Collaboration Diagram)",
          "Timing Diagram",
          "Interaction Overview Diagram"
        ],
        "Structural Diagrams": [
          "Class Diagram",
          "Object Diagram",
          "Component Diagram",
          "Package Diagram",
          "Deployment Diagram",
          "Composite Structure Diagram",
          "Profile Diagram"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "No Prior UML Knowledge Required: This course is suitable for beginners with no prior UML knowledge. We start from the basics and progressively build up to advanced topics.",
        "Commitment to Learning: Dedication to the learning process is key. The course is designed for individuals committed to mastering UML through active participation in exercises, assignments, and real-life examples.",
        "Nice to have - Basic Understanding of Software Development: A foundational knowledge of software development concepts and processes will ensure you can grasp the UML principles more effectively."
      ],
      "description": "Welcome to \"UML: The Most Complete Guide with Real-Life Examples\" the most complete and detailed course that takes you on an immersive journey through the latest version of UML. Unlock the power of UML as we delve into all 14 diagrams, equipping you with the skills to excel in software design.\n\n\nKey Advantages:\nReal-Life Examples: Learn through practical, real-world scenarios, ensuring that every concept is grounded in actual application.\nComprehensive Coverage: Master all 14 UML diagrams, gaining a holistic understanding of visual software design for diverse projects.\nLatest UML Version: Stay ahead of the curve by learning the most up-to-date version of UML, empowering you with the latest industry standards.\nWho Should Enroll?\nSoftware Developers: Enhance your coding prowess by mastering UML for seamless collaboration and design clarity.\nQA Engineers: Elevate your testing strategies with a deep understanding of UML, ensuring comprehensive test coverage.\nProject Managers: Streamline communication with developers and stakeholders through visual representations of software architecture.\nSystem Analysts: Gain a comprehensive toolkit for analyzing, designing, and documenting complex systems.\nArchitects: Deepen your architectural skills by incorporating UML for precise system visualization and design planning.\nBusiness Analysts: Leverage UML to analyze and model business processes, improving communication between stakeholders.\nDocumentation Specialists: Equip yourself with advanced documentation skills, translating complex concepts into clear, visual representations.\nAnyone Working with Documentation: Whether you're in technical writing or project documentation, this course enhances your ability to create detailed, effective\nWhy Choose Our Course?\nIn-Depth Learning: This course goes beyond the basics, providing in-depth knowledge and practical skills for real-world application.\nExpert Instruction: Learn from industry experts with a proven track record in software design and UML application.\nLifetime Access: Enjoy lifetime access to course materials, updates, and a supportive community for ongoing learning and networking.\nMoney-Back Guarantee: We are confident in the value our course provides. If within 30 days you feel it doesn't meet your expectations, we offer a no-questions-asked refund.\nReal-Life Details: Immerse yourself in the intricacies of UML through real-life scenarios and examples, ensuring practical application and industry relevance.\nPractical Exercises: Reinforce your learning with hands-on exercises that bridge the gap between theory and real-world implementation.\nHomework Assignments: Apply your knowledge through carefully crafted homework assignments, solidifying your understanding of each UML concept.\nReview of Homework Solutions: Receive personalized feedback as we review and discuss homework solutions, providing invaluable insights and fostering continuous improvement.\nThe Most Complete Course Available Online: Our course stands out as the most comprehensive and detailed UML learning experience online, covering all 14 diagrams with depth and clarity.\nReady to Transform Your Coding Journey? Enroll now and embark on a learning adventure that transcends traditional UML courses. Join \"UML Unleashed\" to master visual software design, apply skills to real-world examples, and position yourself at the forefront of software development. Don't miss out — seize this opportunity to advance your career and coding proficiency!",
      "target_audience": [
        "Software Developers: Enhance your coding prowess by mastering UML for seamless collaboration and design clarity.",
        "QA Engineers: Elevate your testing strategies with a deep understanding of UML, ensuring comprehensive test coverage.",
        "Project Managers: Streamline communication with developers and stakeholders through visual representations of software architecture.",
        "System Analysts: Gain a comprehensive toolkit for analyzing, designing, and documenting complex systems.",
        "Architects: Deepen your architectural skills by incorporating UML for precise system visualization and design planning.",
        "Business Analysts: Leverage UML to analyze and model business processes, improving communication between stakeholders.",
        "Documentation Specialists: Equip yourself with advanced documentation skills, translating complex concepts into clear, visual representations.",
        "Anyone Working with Documentation: Whether you're in technical writing or project documentation, this course enhances your ability to create detailed, effective documentation through UML."
      ]
    },
    {
      "title": "Recursion Masterclass from Beginner to Advance level in C++",
      "url": "https://www.udemy.com/course/master-the-recursion-from-beginner-to-advance-level/",
      "bio": "Learn step by step process to solve any recursion problem, learn recursion tree, solve leetcode interview questions",
      "objectives": [
        "Understand recursion process in depth",
        "Algorithmic techniques based on recursion (backtracking)",
        "Solve 23+ Leetcode recursion problems",
        "Learn stack space, base condition, recursion call etc",
        "Learn various techniques to solve any recursion problems",
        "Learn how recursion works in internal memory",
        "Improve your problem solving skills and become very good in Data Structures and Algorithms",
        "Solve any recursion problem in two steps"
      ],
      "course_content": {
        "Introduction": [
          "Recursion Introduction",
          "How recursion works in memory",
          "Recursion Tree",
          "Printing 1 to N using recursion (Dry Run & Stack space)",
          "Print N to 1 using recursion (Recursion tree & Code Execution)",
          "Using one parameter",
          "Recursion Quiz"
        ],
        "Functional way and parameterised way": [
          "Parameterised recursion",
          "Functional recursion",
          "Array sum using recursion"
        ],
        "Searching Algorithms": [
          "Linear search using recursion",
          "Binary Search using recursion",
          "Code and Execution"
        ],
        "Recursion on Stack Data Structure and Array Data Structure": [
          "Sort the array using recursion (Part 1)",
          "Sort the array using recursion (Part 2)",
          "Sort the stack using recursion",
          "Delete middle element of a stack using recursion"
        ],
        "Multiple Recursion Call": [
          "Fibonacci sequence",
          "Code and Dry Run",
          "Drawing Recursion tree and Code",
          "How to Identify a Recursion Problem",
          "What to do after Identification",
          "Writing Code Using Recursion Tree",
          "Print subset of a array (coming soon)",
          "Print unique subset (coming soon)"
        ],
        "Advance Recursion Problems": [
          "Generate all balanced parantheses (coming soon)",
          "Permutation with spaces (coming soon)",
          "Permutation with case change (coming soon)",
          "Josephus problem (Game of Death in a circle) (coming soon)",
          "Generate all binary strings without consecutive 1’s (coming soon)",
          "Subset sum problem (coming soon)",
          "Combination sum I (coming soon)",
          "Combination sum II (coming soon)",
          "Print all permutations of array (coming soon)",
          "Generate all possible strings of length k (coming soon)"
        ]
      },
      "requirements": [
        "Basics of anyone programming language"
      ],
      "description": "Do you find yourself feeling like you get \"stuck\" while learning recursion?\n\n\nThis is a complete beginner-friendly recursion masterclass that will take you from beginner to advance level.\nRecursion is one of the most important techniques in Data Structure and algorithms, recursion problems are also very commonly asked in coding interviews. If you don't learn recursion properly you will face many difficulties while learning Dynamic Programming, Trees, Graph, Backtracking etc because recursion is used in all of these topics.\nIn this course we are going to start with the basics first we will build the recursion foundation by solving various problems like array sum, linear search, binary search etc.\nAfter building the recursion foundation we will move to intermediate level problems like sorting an array using recursion, reversing a stack using recursion etc.\nThen we will move to the advanced level problem which uses multiple recursion calls like a print subset of an array, subset sum problem, permutation of an array, combination sum and so on.\n\n\nThis is what you will learn\nWhat is recursion?\nWorking of recursion\nHow does recursion work in memory\nVariables scoped in recursive functions\nDry run of recursion function\nMultiple recursion call\nHow to think recursively to solve any recursion problem\nTime and space complexity of a recursion function\nHow to design base case\nHow recursive functions return values\nThe Stack and Stack Frames\nDebugging recursive functions\nStack Overflow, and how to avoid it\nInfinite Recursion, and how to avoid it\nHow to draw a recursion tree\nCode samples are provided in C++\n\n\nList of coding problems that we are going to solve in this masterclass\nAll Problems we are going to solve using recursion\nArray Sum\nPrint 1 to N number\nPrint N to 1 number\n1 to N Sum\nBinary search\nSort an array\nSort a stack\nReverse an array using recursion\nReverse a stack\nDelete the middle element of a stack using recursion\nFibonacci sequence\nPrint Subset of an array using recursion.\nPrint unique subset\nSubset sums\nCombination sum\nCombination Sum ||\nPrint all permutations of the array using recursion\nGenerate all possible strings of length k\nGenerate all binary strings without consecutive 1’s\nPermutation with spaces\nGenerate all balanced parentheses\nPermutation with case change\nJosephus problem (Game of Death in a circle)\nThis course is constantly expanding, so you'll get free updates as the course expands. This course will be of 10 hours long.\nAfter completing this course you will become a master in recursion and you can solve any recursion problem so enroll now and I will meet you in the first lecture.",
      "target_audience": [
        "Anyone who want to learn recursion in depth and able to solve any recursion problem",
        "Anyone who are preparing for technical interviews or interested in improving their problem solving skills",
        "Anyone who wants to become very good at recursion"
      ]
    },
    {
      "title": "DevSecOps with Azure, GitHub Action, GitOps and AKS",
      "url": "https://www.udemy.com/course/devsecops-with-gitops-azure-cloud-and-github-actions/",
      "bio": "DevSecOps for a Gaming Project using GitOps (ArgoCD), Azure Cloud (AKS) and GitHub Actions with Trivy, SonarQube",
      "objectives": [
        "Learn to Deploy a Game on Azure Kubernetes Service",
        "Learn to use GitOps principles while implementing DevSecOps pipeline",
        "Learn to implement DevSecOps pipeline for a popular Game using GitHub Actions",
        "Learn to integrate SonarQube deployed on EC2 instance in the DevSecOps pipeline",
        "Learn to implement Container Security for Game using GitHub Actions",
        "Learn to Dockerize Game and build the project"
      ],
      "course_content": {},
      "requirements": [
        "Basic Git Commands",
        "Basic Cloud Knowledge",
        "Interest to learn about DevSecOps and GitOps"
      ],
      "description": "Course Updates:\nv 1.0 - May 2024\nAdded DevSecOps Handbook document in Section 9\n\n\nCourse Description:\nEmbark on a transformative journey to master the seamless integration of Development, Security, and Operations in the world of cloud computing. Welcome to \"DevSecOps with Azure Cloud, GitOps, and GitHub Actions with deployment on AKS,\" an intensive and hands-on course designed to empower you with the essential skills needed to thrive in the rapidly evolving landscape of modern software development.\nKey Highlights:\nGitOps Principles:\nDiscover the revolutionary paradigm of GitOps, where version control systems, particularly Git, become the backbone of your operations. Explore the benefits of declarative configuration and collaborative workflows.\nGitHub Actions Unleashed:\nUnleash the potential of GitHub Actions to automate your workflows. Learn to build, test, and deploy applications seamlessly, reducing manual intervention and accelerating your development lifecycle.\nDevSecOps Best Practices:\nElevate your security posture by integrating security practices into every stage of your development pipeline. Understand and implement DevSecOps best practices to safeguard your applications from the ground up.\nReal-world Scenarios and Case Studies:\nApply your knowledge to real-world scenarios and industry-relevant case studies. Gain insights into successful DevSecOps implementations and learn from the experiences of leading organizations.\nCollaborative Learning Environment:\nEngage in collaborative and interactive learning environments. Participate in discussions, and hands-on labs that simulate real-world challenges faced by DevSecOps professionals.\nWho Should Attend:\nDevelopers keen on enhancing their understanding of secure development practices.\nOperations professionals looking to streamline and automate deployment processes.\nSecurity enthusiasts aiming to integrate security seamlessly into the development lifecycle.\nPrerequisites:\nBasic understanding of Azure Cloud and Git.\nFamiliarity with software development and deployment processes.\nTransform your career by enrolling in \"DevSecOps with Azure Cloud, GitOps, and GitHub Actions.\" Equip yourself with the skills that leading organizations demand in the era of secure and collaborative software development. Join us on this exciting journey to become a DevSecOps champion!",
      "target_audience": [
        "Developers",
        "Security Engineers",
        "DevOps Engineers",
        "DevSecOps Engineers"
      ]
    },
    {
      "title": "Data structure and algorithms for interviews",
      "url": "https://www.udemy.com/course/data-structure-and-algorithms-for-interviews/",
      "bio": "Ace your Tech Interviews",
      "objectives": [
        "Understand patterns behind common coding interview question",
        "Time and Space Complexity of Data Structures and Algorithms",
        "Solutions to problem discussed",
        "Code for solutions in Python"
      ],
      "course_content": {
        "Identifying Patterns in a Coding Interview": [
          "6 common Coding Patterns for Interviews",
          "10 Golden Rules for Solving a Coding Question in an Interview"
        ],
        "Merge Intervals": [
          "Idea of Merge Intervals",
          "Merge Interval Code"
        ],
        "Two Pointers": [
          "Idea of Two pointers and types of two pointers solutions",
          "Two Sum",
          "Remove Duplicates from Sorted Array",
          "3 Sum"
        ],
        "Fast Slow Pointers": [
          "Linked List Cycle using Floyd's Cycle Detection Algorithm",
          "Happy Numbers"
        ],
        "Bitwise Manipulation": [
          "Single Number",
          "Flipping an Image"
        ],
        "Greedy": [
          "What are Greedy Algorithms ?",
          "Bulbs",
          "Highest Product",
          "Disjoint Sets"
        ],
        "Island Patterns": [
          "Intro to Matrix",
          "Number of Islands Explantion",
          "Number of Islands Code",
          "Number of distinct Islands Explanation",
          "Number of distinct island coding",
          "Count sub islands Explanation",
          "Count sub islands coding"
        ],
        "Topological Sort": [
          "Introduction to Graph Problems",
          "What is Topological Sort?",
          "Kahn's Algorithm",
          "Coding Topological Sort",
          "Course Schedule (problem statement explanation)",
          "Course Schedule ( code extended from Coding Topological Sort)",
          "Course Schedule 2",
          "Graphs"
        ],
        "Depth First Search (DFS)": [
          "Intro to DFS",
          "LC 112 Target Sum"
        ],
        "Bonus Section": [
          "Bonus Section"
        ]
      },
      "requirements": [
        "python",
        "basic idea of Data Structures and Algorithms",
        "Leetcode account"
      ],
      "description": "Covers around 20+ most popular coding interview problems ranging from a variety of topics   ( will have 200+ problems as 4 problems are being added every week)\nMerge Intervals\nIdea of Merge Intervals\nMerge Intervals\nIntervals Intersection (coming soon)\nConflicting Appointments (coming soon)\nTwo Pointers\nIdea of Two pointers and types of two pointers solutions\nTwo Sum\nRemove Duplicates from Sorted Array\n3 Sum\nPair with Target Sum  (coming soon)\nSquaring a Sorted Array  (coming soon)\nTriplet Sum to Zero   (coming soon)\nTriplet Sum Close to Target   (coming soon)\nTriplets with Smaller Sum   (coming soon)\nSubarrays with Product Less than a Target  (coming soon)\nDutch National Flag Problem  (coming soon)\n\n\nFast & Slow Pointers\nLinked List Cycle using Floyd's Cycle Detection Algorithm\nHappy Numbers\nUgly number  (coming soon)\nMiddle of the LinkedList (coming soon)\nLinkedList Cycle  (coming soon)\nStart of LinkedList Cycle (coming soon)\n\n\nBitwise Manipulation\nSingle Numbers\nFlipping an Image\nSingle Number II ( coming soon)\nSingle Number III ( coming soon)\n\n\nGreedy Technique\nWhat are Greedy Algorithms ?\nBulbs\nHighest Product\nDisjoint Sets\nLargest Permutation ( coming soon)\nMeeting rooms ( coming soon)\nDistribute Candy ( coming soon)\nSeats ( coming soon)\nAssign Mice to Holes ( coming soon)\nMajority Element ( coming soon)\nGas Station ( coming soon)\nIsland Patterns\nIntro to Matrix\nNumber of Islands Explanation\nNumber of Islands Code\nNumber of distinct Islands Explanation\nNumber of distinct island coding\nCount sub islands\nMax Area of an island   (coming soon)\nIsland Perimeter  (coming soon)\nFlood fill  (coming soon)\nWall and Fates   (coming soon)\nMinesweeper   (coming soon)\nSurrounded Regions   (coming soon)\nFind all groups of a farm land   (coming soon)\nTopological Sort\nIntroduction to Graph Problems\nTopological Sort\nKahn's Algorithm\nImplementing Topological Sort\nCourse Schedule\nAlien Dictionary\nMinimum Height Trees  (coming soon)\nAll Ancestors of a Node in a Directed Acyclic Graph  (coming soon)\nBuild a Matrix With Conditions  (coming soon)\nFind All Possible Recipes from Given Supplies  (coming soon)\nDepth First Search\nPath Sum\nUpcoming Additions  (3-4 problems are added every week)\nSliding Window\nEasy\nMaximum Sum Subarray of Size K\nSmallest Subarray With a Greater Sum\nMedium\nLongest Substring with maximum K Distinct Characters\nFruits into Baskets\nHard\nLongest Substring with Distinct Characters\nLongest Substring with Same Letters after Replacement\nLongest Subarray with Ones after Replacement\nArrays\nMedium\nGroup Anagrams\nHard\nTrapping Rain Water\nMerge Intervals\nMedium\nIntervals Intersection\nConflicting Appointments\nLinked List\nEasy\nReverse a Linked List\nMedium\nReverse a sub list\nReverse a k-element sub list\nTwo Heaps\nMedium\nFind the median of a number stream\nHard\nMaximum Capital\nSliding Window Median\nTop k elements\nEasy\nTop 'K' Numbers\nKth Smallest Number\n'K' Closest Points to the Origin\nConnect Ropes\nMedium\nTop 'K' Frequent Numbers\nFrequency Sort\nKth Largest Number in a Stream\n'K' Closest Numbers\nMaximum Distinct Elements\nSum of Elements\nHard\nRearrange String\nK-way merge\nBinary Search\nBacktracking\n1D Dynamic programing\n2D Dynamic programing\nCyclic Sort\nTopological Sort\nStacks\nQueues\nDepth First Search\nBreadth First Search\nTrie\nHash Maps\nMath Tricks\nMiscellaneous",
      "target_audience": [
        "Software Engineers who want to ace coding interviews in top tech firms"
      ]
    },
    {
      "title": "How to Build the Right Software (and Choose the Right Stack)",
      "url": "https://www.udemy.com/course/right-software-and-right-stack/",
      "bio": "Master an AI-PROOF dev and PM skill! Reduce scope creep and technical debt, architecture that solves the right problems.",
      "objectives": [
        "Learn the AI-proof dev skill of choosing what to build and in what tech stack",
        "Learn how to define clear requirements by asking \"why\" to dig deep into the real needs behind every request, moving from solution to the underlying problem..",
        "Gain skills to prevent and control scope creep while encouraging creative solutions by embracing constraints.",
        "Learn to choose a tech stack, from JavaScript frameworks to Low Code solutions, and understand the strengths of each approach to make smart technology choices.",
        "Harness the power of user research to uncover real user needs, test usability, and express requirements as problem statements that guide development.",
        "Approach feature requests as clues to underlying problems, not requirements. Learn techniques to uncover the real issues and make impactful additions.",
        "Make the most of legacy software, recognize missed opportunities in direct rewrites, and practice building lean, purposeful solutions."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Requirements and Solving the Right Problem": [
          "Requirements and Solving the Right Problem",
          "Clients and Users are Not Software Designers",
          "The Why Down",
          "The Why Down (Practice)",
          "Why Down Quiz #1",
          "Control Scope Creep with Alternative Solutions",
          "Constraints Produce Creative Solutions",
          "Silos Are the Enemy",
          "MSP not MVP"
        ],
        "Choosing a Stack": [
          "About This Section",
          "Choosing a Stack",
          "The Interactivity Question",
          "JavaScript Frameworks (NextJS, Remix, Vue, Angular, Solid, Qwik, and More)",
          "Static Sites",
          "A Mix Of Things",
          "Vanilla JS, Lightweight Libraries, and Server Frameworks",
          "PHP, Laravel, and Toolboxes",
          "Low-Code and No-Code Solutions",
          "Content Management Systems",
          "Use Design Systems and Templates",
          "SQL vs NoSQL",
          "Fundamentals Beats Tribalism"
        ],
        "The Power of User Research": [
          "The Power of User Research",
          "Existing Software and User Observation",
          "Discount Usability Testing",
          "Control Requirements with User Research",
          "Express Results as Problems"
        ],
        "Handling Feature Requests (the Right Way)": [
          "Handling Feature Requests (the Right Way)",
          "Feature Requests Are Not Requirements",
          "Why Down Feature Requests",
          "The Why Down (Practice)",
          "Why Down Quiz #2",
          "Reduce Technical Debt: Make the Smallest Addition Possible"
        ],
        "Software Rewrites": [
          "Software Rewrites",
          "Existing Software is a Research Goldmine",
          "1-to-1 Rewrites Are a Wasted Opportunity",
          "Build Less Software"
        ],
        "AI Practice with Role Play - Time to Try Yourself (Type or Talk to the AI!)": [
          "AI Practice with Role Play - Time to Try Yourself!",
          "Word Doc Export Feature Request",
          "Task Assignment Push Notifications Request",
          "PDF Invoice Download Feature Request",
          "Mobile App Development Request",
          "Complex Search Feature Request",
          "In-App Chatbot Integration Request",
          "Real-Time Collaboration Feature Request",
          "From Role Play to Reality"
        ],
        "Conclusion": [
          "Why Down Worksheet (Free Download!)",
          "Conclusion - How To Build The Right Software",
          "Bonus"
        ]
      },
      "requirements": [
        "No programming or design experience needed."
      ],
      "description": "Master an AI-Proof Developer Skill!\nUPDATE: Practice this skill with live AI conversations using Udemy's new Role Play feature in 7 investigative scenarios with AI stakeholders!\nIt's one challenge to build software, it's another to know what software to build and what stack to build it in.\nAI is letting us build the WRONG software FASTER. With this course, learn how to build the RIGHT software in the RIGHT technical stack.\nHow can you solve the real problems of your users, stakeholders and clients? How can you prevent and control scope creep while deciding what to build? How can you arrive at the most effective MVP? How can you decide on the most effective technology stack for your project? How can you manage feature requests properly? Where do you begin when rewriting legacy software?\nAll these questions and more are answered in this course. I bring to this course 25 years as a software developer, manager, and user experience designer in small, medium, and large organizations, and I'll cover real world examples, let you practice with quizzes, and provide a PDF worksheet to use in your work.\nWho is this course for?\nDevelopers, designers, team leads, project managers, and requirements engineers. Anyone who has anything to do with deciding what software will actually be built and deployed.\nWhat we will I learn?\nTechniques to reverse engineer requirements, feature requests, and existing software into problem statements that can be used to determine the best software solutions to actually create.\nHow to overcome the weaknesses of the concept of Minimum Viable Products (MVPs) to make the best decisions on what features are truly needed for the software to be successful.\nDecide on your software stack, looking at JavaScript frameworks, static site generators, content-driven frameworks, Low-Code and No-Code solutions, content management systems and more, analyzing the purpose of each kind of tool to determine which is best for your project.\nBuild the best software by embracing user research (user interviews, user observation, usability testing, and more) as a fundamental aspect of your software development process.\nHandle feature requests the proper way, viewing them as clues to problems yet to be solved rather than requirements to be estimated.\nLearn how to view legacy software as a treasure trove of existing user research, and avoid making the mistake of rewriting software screen for screen.\nThis course will give you concrete tools to immediately implement in your software development process. Save time, money, and stress by learning to build the right software in the right stack.",
      "target_audience": [
        "Developers, designers, team leads, project managers, and requirements engineers."
      ]
    },
    {
      "title": "Learn Python Face Detection",
      "url": "https://www.udemy.com/course/learn-python-face-detection/",
      "bio": "Learn the basics of Python programming, and learn how to program a face-detection application using Python.",
      "objectives": [
        "Program basic Python applications",
        "Understand the concept of Face-Recognition",
        "Program a Face-Recognition application in Python",
        "Understand the basic concepts of Object-Oriented Programming"
      ],
      "course_content": {
        "Learning the basics of Python": [
          "Introduction",
          "Downloading and Installing Python",
          "Python: Variables",
          "Python: For and While Loops",
          "Python: if, else and elif statements",
          "Python: Functions",
          "Python: Classes and Program Structure"
        ],
        "Let the Scripting begin!": [
          "Downloading and Installing OpenCV and dependencies",
          "Getting Started with OpenCV",
          "Image Processing and Face Detection Concepts",
          "Scripting! Pt. 1",
          "Scripting! Pt. 2",
          "Scripting! Pt. 3",
          "Course Overview"
        ],
        "Extras": [
          "Python and OpenCV with Raspberry Pi"
        ]
      },
      "requirements": [
        "You will need a computer with a webcam",
        "Windows, OS, or Linux operating System",
        "At least 2gb of memory and a dual-core processor"
      ],
      "description": "This course covers the fundamentals of Python programming, as well as an introduction to using image-processing techniques to identify a human face in live video recordings. It will be taught by myself through my desktop, and I will be coding from scratch, and step by step to insure that no ambiguity is present.\nThis course will start out with a brief overview of Python basics such as variables, for and while loops, boolean statements, functions and more. After becoming familiar with Python, we will dive into some image-processing concepts and start on our Python script to detect human faces!\nThis course is intended for anyone who wants to quickly pick up Python and start working on an interesting, applicable project instead of drudging along a twenty-hour tutorial. My videos are short, hands-on, interactive and engaging, so you'll come out happy and enthusiastic with a large amount of gained knowledge.",
      "target_audience": [
        "Anyone interested in high-level programming",
        "Anyone interested in Image Processing and Artificial Intelligence",
        "Anyone interested in the Python programming language"
      ]
    },
    {
      "title": "Algorithms in C : Concepts, Examples, Code + Time Complexity",
      "url": "https://www.udemy.com/course/algorithms-c-concepts-examples-code/",
      "bio": "Learn algorithms in C language. Understand Logic with examples, practice code and crack those programming interviews!",
      "objectives": [
        "Learn the concepts behind Most Popular Algorithms used in Computer Science",
        "Understand how algorithms work with the help of diagrams, examples and pseudocode",
        "Practise Algorithm Implementation with the help of included Programs in C language",
        "Understand how to use algorithms to implement most important logics in any programming."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction and Author Bio",
          "Course Curriculum & Upcoming lectures"
        ],
        "Brute Force Approach": [
          "Selection Sort Algorithm",
          "Bubble Sort Algorithm",
          "Sequential Search Algorithm",
          "Brute Force String Matching Algorithm",
          "Brute Force Quiz"
        ],
        "Divide and Conquer Approach": [
          "Merge Sort Algorithm",
          "Quick Sort Algorithm",
          "Divide and Conquer Quiz"
        ],
        "Decrease and Conquer Approach": [
          "Binary Search Algorithm",
          "Insertion Sort Algorithm",
          "Depth First Search Algorithm",
          "Breadth First Search Algorithm",
          "Decrease and Conquer Quiz"
        ],
        "Transform and Conquer Approach": [
          "Heaps",
          "Heap Construction [bottom-up approach]",
          "Heap Sort Algorithm"
        ],
        "Dynamic Programming": [
          "Warshall's Algorithm",
          "Floyd's Algorithm",
          "Dynamic Programming Quiz"
        ],
        "Greedy Technique": [
          "Prim's Algorithm",
          "Kruskal's Algorithm",
          "Greedy Technique Quiz"
        ],
        "Bonus Section : Time Complexity": [
          "Introduction to Analysis of Algorithms",
          "Asymptotic Notations",
          "Time Complexity - Selection Sort Algorithm",
          "Time Complexity - Bubble Sort Algorithm",
          "Time Complexity - Sequential Search Algorithm",
          "Time Complexity - String Matching Algorithm",
          "Time Complexity - Insertion Sort Algorithm",
          "Time Complexity - Warshall's Algorithm",
          "Time Complexity - Floyd's Algorithm",
          "Master Theorem",
          "Time Complexity - Merge Sort Algorithm",
          "Time Complexity Quiz"
        ],
        "Number Theoretic Algorithms": [
          "Euclid's Algorithm [GCD of two numbers]",
          "C Program on Euclid's Algorithm",
          "Extended Euclidean Algorithm",
          "RSA Algorithm",
          "Number Theory Quiz"
        ]
      },
      "requirements": [
        "Basic Knowledge of any programming language, preferably 'C'",
        "A C compiler and Editor to practise the algorithm programs",
        "Interest in Algorithms and programming",
        "No additional knowledge is required",
        "You will need a computer with internet to access lectures and resources"
      ],
      "description": "Algorithms in C : Concepts, Examples, Code + Time Complexity (Recently updated : January 14, 2017!)\nWhat's New: Time Complexity of Merge Sort, Extended Euclidean Algorithm in Number Theory section, New section on Transform and Conquer algorithms\n\nAlgorithms are very important for programmers to develop efficient software designing and programming skills. This Course introduces you to most important algorithms in computer science. Each video explains the concept/logic behind the algorithm, provides an example and explains pseudo-code. Each video also has working C programs of algorithm implementations with sample input & output. This course will help you crack those programming interviews on algorithms.\n\nWhy Take this Course?\nMost of the companies in today's world depend on software for their daily operations. How do these software take right decisions and keep these companies running in the right direction? Well, it's all in their programming. Programmers over the decades have been writing code which perform right operations in right conditions. This is done using Algorithms.\nTaking this algorithms course will help you to understand how to implement logic in the form of a code in an optimal way and also enables you to write the programs efficiently. In this course you will learn how the most important and most common algorithms used in programming are designed and implemented. This course will kick start your journey in the world of programming with algorithms.\n\nHow is this course designed?\nThis Course is structured into following sections:\nOverview: This section introduces you to the course, provides information about the author, course structure and gives you answers to some of the frequently asked questions by students.\nBrute Force: This section explains the brute force approach to problem solving. You will understand the how the algorithms selection sort, bubble sort, sequential search and string matching work.\nDivide and Conquer: This section deals with algorithms based on Divide and Conquer technique. Two sorting algorithms - quick sort and merge sort are explained.\nDecrease and Conquer: In this section decrease and conquer approach and its variants are explained. Binary search and insertion sort algorithms are explained with an example.\nTransform and Conquer: Significance of transform-and-conquer technique and algorithms like heap-sort will be explained here. Lectures on Heaps, heap construction and heapsort algorithm are added. Each algorithm is explained with an example in a lucid way.\nDynamic Programming: This section explains how to solve problems with overlapping sub-problems. Warshall's algorithm and Floyd's algorithm are explained.\nGreedy Technique: This section explains algorithms based on Greedy technique. Section begins with explanation on minimum spanning tree concept. Two algorithms (Prim's and Kruskal's) to construct a minimum spanning tree of a given graph are explained step-by-step.\nNumber Theory : This section deals with the algorithms involving numerical computations. Euclid's Algorithm, Extended-Euclidean Algorithm and RSA algorithm are explained with example.\nTime Complexity : This section explains the importance of time complexity analysis, the asymptotic notations to denote the time complexity of algorithms.\nAlso, each algorithm's time complexity is explained in separate video lectures.\nStudents can benefit by learning about designing and implementing algorithms in C. Job Seekers can also benefit by using the information in preparing for their programming interviews.\n\nOnce you are enrolled, you get a life time access to all the resources and lectures in this course. This course is always evolving with new lectures, resources and quizzes to keep you up-to-date. So take this course now and learn how to design and implement algorithms.",
      "target_audience": [
        "Computer Science Students who are taking Algorithms as an Academic Course",
        "IT students and Developers who want to learn how to design and implement logic for any programs",
        "Job aspirants who want to want to be successful at Developer Interviews",
        "Non IT Students who wish to understand logic for writing efficient code",
        "Anyone interested in learning most popular algorithms"
      ]
    },
    {
      "title": "Docker - Containerisation for Modern Development",
      "url": "https://www.udemy.com/course/docker-mastery-course/",
      "bio": "Master the Docker Containerisation",
      "objectives": [
        "Fundamentals of Docker Containers and Images",
        "Master Docker Networking",
        "Dockerfile Configurations",
        "Container Orchestration with ECS and ECR",
        "Docker Compose for development environments"
      ],
      "course_content": {
        "Getting Started with Docker for Developers:": [
          "Course Overview and What to Expect from the Docker Module",
          "Challenges with Setting Up Multiple Development Environments",
          "Docker vs Traditional Virtualization: Key Differences Explained",
          "Installation of Docker",
          "Understanding Containers and Images in Docker Simplified"
        ],
        "Mastering the Docker Command Line Interface (CLI) for Image and Container Manage": [
          "Getting Started with Docker Engine and Core CLI Utilities",
          "Running Containers with the Docker RUN Command",
          "Managing Docker Images Through CLI Commands",
          "Working with Containers Using Docker CLI Tools"
        ],
        "Building, Optimizing, and Publishing Custom Docker Images for Node.js Projects": [
          "Creating a Dockerized Environment for a Node.js Server",
          "Improving Docker Builds with Layer Caching Techniques",
          "Understanding and Configuring Port Mapping in Docker",
          "Using Advanced CLI Flags for Custom Image Builds",
          "Publishing Docker Images to Docker Hub for Distribution",
          "Building Efficient Images Using Multi-Stage Builds",
          "Implementing Secure User and Permission Management in Docker"
        ],
        "Understanding Docker Networking: Bridge Mode, Custom Networks, and Advanced Mode": [
          "Networking in Docker: Deep Dive into Bridge Mode Explained",
          "Creating and Using Custom Bridge Networks in Docker",
          "Exploring Host, and Other Docker Networking Modes"
        ],
        "Managing Data in Docker: Host Bind Mounts and Named Volumes Explained": [
          "Mounting Host Machine Volumes into Docker Containers",
          "Creating and Managing Named Docker Volumes for Persistence"
        ],
        "Docker Compose: Managing Multi-Container Applications": [
          "Getting Started with Docker Compose: YAML Syntax and Usage",
          "Configuring Networking Between Services in Docker Compose",
          "Persisting Data with Volumes in Docker Compose",
          "Building Custom Docker Images in Docker Compose"
        ],
        "Docker Orchestration with AWS ECS: From Setup to Deployment": [
          "What Is Docker Orchestration and Why Does It Matter?",
          "Creating and Configuring Your AWS Account for ECS",
          "Pushing Docker Images to Elastic Container Registry (ECR)",
          "Creating and Managing ECS Clusters on AWS",
          "Defining ECS Tasks: Configuration and Best Practices",
          "Setting Up ECS Services with Load Balancer Integration",
          "Cleaning Up AWS ECS Resources to Avoid Extra Costs",
          "Fixing ECS Health Check Issues in Service Setup"
        ]
      },
      "requirements": [
        "Basics knowledge of Computer Programming"
      ],
      "description": "In this comprehensive course, you'll learn how to build, ship, and run applications using containers, focusing on real-world practices and hands-on experience. Whether you're a developer, IT professional, or part of a DevOps team, this course is designed to help you simplify workflows and enhance scalability with Docker.\nWe begin by introducing the fundamentals of containerization—what containers are, how they differ from virtual machines, and why they're revolutionizing modern software development. You'll dive into Docker basics, including creating and managing containers, building Docker images, and writing efficient Docker files.\nNext, you'll explore advanced concepts like Docker networking and volumes, giving your applications flexibility and persistence. We'll also cover Docker Compose to manage multi-container applications with ease. Once you're confident locally, we move to the cloud: you'll learn how to deploy containers using AWS ECS (Elastic Container Service) and store images securely on AWS ECR (Elastic Container Registry). We'll also cover auto-scaling to ensure your apps perform reliably under load.\nThroughout the course, you'll work on hands-on projects and practical examples to apply your knowledge. By the end, you'll have the skills to containerize applications, streamline deployment pipelines, and scale efficiently in production environments using modern container technologies.\n\nHighlights\nHands-on Projects: Practical, real-world projects to reinforce your learning.\nAWS Integration: Deploy containers on AWS using ECS and ECR.\nAuto-scaling Techniques with AWS Auto Scaling Groups\nContainer Load balancing and Deployment strategies",
      "target_audience": [
        "Software Developers who want to streamline their development and deployment workflows using Docker and AWS.",
        "DevOps Engineers aiming to master containerization, orchestration, and scalable infrastructure with Docker and ECS.",
        "IT Professionals looking to modernize application deployment and improve system efficiency through container-based architecture.",
        "Students or Tech Enthusiasts with basic programming knowledge who want hands-on experience with real-world Docker projects and modern deployment strategies."
      ]
    },
    {
      "title": "Software Development Master Class for Absolute Beginners",
      "url": "https://www.udemy.com/course/software-development-master-class-for-absolute-beginners-1/",
      "bio": "Basic Programming Concepts with .Net Core and C#",
      "objectives": [
        "Basic introduction to programming with Microsoft .Net and C#.",
        "Insight into how to think like a developer by understanding a broad range of topics around software development.",
        "Develop a plan to convert your learning and practice into a real job in the software development industry.",
        "Introduction to the Software Development Master Class For Absolute Beginners program, of which this is part 1."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Overview",
          "Assignments & Code Examples"
        ],
        "Create Your First Program": [
          "Every Programmer's First Program",
          "Load Development Environment",
          "Create Hello World program",
          "Visual Studio Overview",
          "Assignment 1: Create Hello World"
        ],
        "Can I really become a software professional?": [
          "Every Professional Developer Started Somewhere",
          "What is Software Development?",
          "Can a Beginner Become a Pro?"
        ],
        "How are you? I'm fine, how are you?": [
          "Let's Get to Coding!",
          "Console Based Input/Output",
          "Assignment 2: Interact with user"
        ],
        "Computer Architecture for Beginners": [
          "What are the basics and why do you need to know about them?",
          "How Does a Computer Work?",
          "Introducing the Microsoft .Net Framework"
        ],
        "A Place to Put Your Stuff": [
          "Storing Data For Your Application",
          "Program Variables",
          "Program Variables (Numbers)",
          "Program Variables (Strings)",
          "Program Variables (Booleans and Comparison)",
          "Assignment 3: Variable Manipulation",
          "Thought questions about Assignment 3"
        ],
        "Decisions, Decisions": [
          "Program Logic Flow",
          "Branching - If/Then/Else",
          "Assignment 4: Buy a Car",
          "Looping - For/While/Do",
          "Assignment 5: Make a triangle"
        ],
        "Bringing it All Together": [
          "Welcome to the Kiosk Project",
          "Kiosk Project Kickoff",
          "Kiosk Project User Interface Design Session",
          "Kiosk Project Development Session 1",
          "Kiosk Project Development Session 2",
          "Kiosk Project Development Session 3",
          "Using the Visual Studio Debugger"
        ],
        "Wrap-up": [
          "You Made It!",
          "Developer Best Practices",
          "What Have We Learned?",
          "Thank You!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You should have an interest in becoming a professional software developer.",
        "You should have an inquisitive mind and enjoy problem solving.",
        "Microsoft Visual Studio 2019 Community Edition (free) or other (paid) editions. (Instructions to download and install are included in this course.)"
      ],
      "description": "In this course I will set you on a path that can take you from absolute beginner to professional software developer. This is not something that you can do in an afternoon, but this introductory course is a start. My name is Mike Witt and I'm developing this course as the first step in a program that is intended to provide all the information that you will need to become a programmer with skills in a particular area: Developing web applications built around a .Net server, SQL Server database, and an Angular based UI. This first course will only be the first step, but if you stick with it you can turn your learning and hard work into a career.\nIf you've glanced at my bio, you will note that I've been developing software for over 35 years. When I started, I had no idea what programming was. You may have no idea or you may have some idea, but programming (unlike rocket science) is more of a skill and a craft than a theoretical science (like rocket science)! Because of this and because of a shortage of workers, many companies are willing to hire someone even if they don't meet their educational requirements. To be sure, most companies want a degree in computer science or at least some degree in a science or related field, but when it comes right down to it they want and need someone who can do the work.\nThis program will help you leap over the education gap by, not only understanding the technical nuts and bolts, but also by projecting your thinking and personality as someone who can do and understand software development. Here are some of the very important first topics you will learn as part of this course:\n- Setup a development environment using free Microsoft tools.\n- Create your first C# program.\n- Get a basic understanding of what software development is an how it fits into an organization.\n- Learn some very practical steps on how you can turn the knowledge you gain into a real job.\n- Find out some very basic information about how a computer works. If you're going to program a computer, you should understand what it is doing.\n- Understand some historical perspective about computers and software development. Again, if you're going to be a programmer, you should understand how the field started and how it got to where it is.\n- Develop applications that read user input and write information for a user to read.\n- Understand how variables work and the different types of variables used in an application.\n- Find out how to use the two most basic techniques in programming: branching and looping in order to create an application that will do some real work.\n- Finally, we'll develop a real-world application that will put all these skills to use all in the context of a read-world software development project.\nI am truly excited to share my knowledge and my enthusiasm for developing software with you. Come on this journey and I will do my best to help you learn, enjoy, and finally become part of a community of developers who make this world go round!\nThis course comes with detailed explanations of each concept along with working examples for each programming assignment and a Verifiable Certificate of Completion.",
      "target_audience": [
        "Beginners who are interesting in becoming professional software developers."
      ]
    },
    {
      "title": "HVAC Control Drawings",
      "url": "https://www.udemy.com/course/hvac-control-drawings/",
      "bio": "Let's find out what the HVAC control drawings and how to understand/make them.",
      "objectives": [
        "Kinds of HVAC Control Drawings",
        "How to understand HVAC Control Drawings",
        "How to draw HVAC Control Drawings",
        "Important words and symbols for HVAC Control Drawings",
        "How to calculate the required cables, cable trays and conduit pipes",
        "How to figure out actual input and output control points for HVAC control system",
        "What are critical features for Instrument schedule",
        "What kinds of information shall be included in the each control drawing"
      ],
      "course_content": {
        "소개": [
          "Introduction",
          "Legend & P&ID",
          "Control Diagram",
          "IO Schedule",
          "Instrument Schedule",
          "Cable Schedule",
          "Operation Explanation",
          "Control Wiring Plan"
        ]
      },
      "requirements": [
        "Basic understand of the HVAC system"
      ],
      "description": "It was really difficult for me when I started my career in the automation field. There was not much information for the technologies. And I didn't even know where to find it. I want to share my know-how about the HVAC control drawings in this course. I hope it would be helpful for you who want to enhance his or her capability.\n\n\nEnjoy this course and please let me know if you have any question. I will reply it as soon as possible. Let's be better engineer together.\n\n\nBest regards,\nHS Yun",
      "target_audience": [
        "The beginner level of HVAC engineer",
        "Engineers who want to know about HVAC control system further",
        "Students who want to know about the HVAC control system"
      ]
    },
    {
      "title": "Jenkins 2 Introduction for Beginners on Mac OS",
      "url": "https://www.udemy.com/course/jenkins2-mac/",
      "bio": "Novice guide to Jenkins 2 Continuous Integration with a step-by-step guide to DevOps on a MacOS System",
      "objectives": [
        "Install Jenkins CI server on MacOS",
        "Install and configure several tools commonly used with Jenkins",
        "Understand the basics of continuous inspection, continuous integration, and continuous deployment",
        "Use Jenkins effectively to build, test, and analyze Java projects",
        "Apply the techniques and experience to implement Jenkins and/or a continuous integration system"
      ],
      "course_content": {
        "Introduction": [
          "Course Welcome and Introduction",
          "Course Focus and Approach",
          "What and Why of Jenkins",
          "Jenkins Architecture"
        ],
        "Quick Install": [
          "Quick Install Overview",
          "Jenkins Quick Install",
          "Jenkins Services on Mac OS",
          "Quick Install Notes"
        ],
        "Jenkins Basics": [
          "Jenkins Basics Overview",
          "Login",
          "Jenkins Dashboard",
          "Create First Job",
          "Project Configuration",
          "First Build",
          "Project Homepage",
          "Enable and Disable Projects",
          "Build History",
          "Build Page",
          "Script Project",
          "Failing on Purpose",
          "Dashboard Revisited",
          "Deleting a Project",
          "Cleaning Up / Fix Broken Project",
          "Copy a Project"
        ],
        "Manage Jenkins": [
          "Manage Jenkins Overview",
          "Manage Jenkins Page",
          "Update Jenkins",
          "Update Plugins",
          "Plugin Research",
          "Add New Plugin",
          "Uninstall Plugins",
          "Enable/Disable Plugins",
          "Maven Integration Plugin",
          "Configure Jenkins",
          "Global Tools"
        ],
        "Maven Projects": [
          "Maven Projects Overview",
          "Build Locally First",
          "Maven Project",
          "Maven Build and Workspace",
          "Maven Modules and Build Pages",
          "Troubleshooting Maven Projects - Code Update",
          "Troubleshooting Maven Projects - Within Jenkins",
          "Troubleshooting Maven Projects - Replicate Locally",
          "Troubleshooting Maven Projects - Project Workspace",
          "Troubleshooting Maven Projects -Resolve Failure"
        ],
        "Scheduled Projects": [
          "Scheduled Projects Overview",
          "Building on a Schedule - Part 1 - Setup and Configuration",
          "Building on a Schedule - Part 2 - Builds",
          "Building on a Schedule - Part 3 - Revise Schedule"
        ],
        "Source Code Polling": [
          "Polling Overview",
          "Polling 1 - Welcome / Config",
          "Polling 2 - Initial Builds",
          "Polling 3 - Code Updates",
          "Polling 4 - Revise Schedule"
        ],
        "Linked Projects": [
          "Linked Projects Overview",
          "Upstream Project Configuration",
          "Upstream Project Build and Review",
          "Downstream Project Configuration",
          "Downstream Project Build and Review"
        ],
        "Views": [
          "Views Overview",
          "Creating New Views",
          "Regular Expression Views",
          "Deleting a View",
          "View Descriptions",
          "Navigation with Views and Default View",
          "View Build History"
        ],
        "Conclusion": [
          "Review and Final Words"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "Ability and access to install software (admin rights required)",
        "Desire to learn something new"
      ],
      "description": "This is a beginner's course designed to show how to setup and run a Jenkins CI server starting with continuous inspection (build, test and analysis) for users of MacOS-based systems. This course provides a strong foundation for implementing continuous inspection and integration at your company or studio. In order to keep the course short and to-the-point, several decisions were made in order to provide a complete path to continuous integration.\nThe pipeline created in this course consists of the following:\nJenkins CI server installed and configured on Windows\nGit as the source control system\nJava as the main programming language of build projects\nMaven as the build tool\nThis set of tools provides a comprehensive, end-to-end implementation continuous integration pipeline. Jenkins can be installed on many operating systems and supports a myriad of tools and technologies -- which means, this course provides tremendous value to those comfortable or interested in other operating systems and/or technologies.\nCourse Outline\nIntroduction provides an overview for the course, which leas to the Core Concepts for Jenkins. This provides a foundation for the remainder of the course.\nQuick Installation provides an abbreviated step-by-step instructions on how to setup Jenkins and all the related tools specifically on Windows. Full Installation details is covered in the bonus section of the course.\nJenkins Basics provides a first look at Jenkins at work with a very simple \"freestyle\" project. This allows us to learn the Jenkins interface and the key features it provides.\nAfter our initial introduction to Jenkins, we Manage Jenkins plugins and global configuration.\nThen, we dive into Maven Projects specifically -- since Jenkins can understand Maven and thus provides special features for Maven projects -- with the right plugins installed.\nWe venture beyond the basics with Scheduled Projects and periodically Polling Source Control, which are closely related. Then we look at how to Link Projects together by calling upstream and downstream projects. Finally, we organize our projects with Views.\nCourse Features\nPresentations provide audio/video training of conceptual ideas in each major area or introduction of new concepts.\nScreencasts provide a video of the instructor's computer system with any actions, commands, or screens displayed and narrated. There are several hours of screencat video content -- it makes up the vast majority of the course. Any command line based screencast will include a command listing in the lecture downloads.",
      "target_audience": [
        "Developers, software engineers, and programmers wanting to avoid \"it works on my machine\" syndrome",
        "IT professions looking to implement continuous inspection through continuous deployment at their company",
        "IT management that wants to have a deeper understanding of Jenkins and other DevOps concepts",
        "DevOps (Development/Operations) professional looking at Jenkins as a build tool or as part of a larger software delivery pipeline",
        "Software Engineers, Developers, and DevOps staff working on a MacOS system"
      ]
    },
    {
      "title": "Secure Code in Java and Spring Boot: Build Resilient Apps",
      "url": "https://www.udemy.com/course/secure-code-java-spring-boot-learnit/",
      "bio": "Learn to write secure, robust Java and Spring Boot code by applying real-world security best practices and patterns",
      "objectives": [
        "Understand the fundamentals of secure coding in Java",
        "Protect REST APIs using Spring Boot best practices",
        "Implement authentication and authorization with JWT and OAuth2",
        "Use Spring Security for access control and protection",
        "Prevent SQL Injection using JPA and Hibernate",
        "Mitigate Cross-Site Scripting (XSS) attacks",
        "Understand and defend against Cross-Site Request Forgery (CSRF)",
        "Manage sessions and cookies securely",
        "Apply encryption and hashing (e.g., AES, bcrypt)",
        "Store secrets and configuration data securely",
        "Implement role-based and permission-based access control",
        "Configure and enforce proper CORS policies",
        "Validate and sanitize user input effectively",
        "Detect and fix common security vulnerabilities in code",
        "OWASP Top 10",
        "Resilience4j + Spring Boot",
        "How to write resilient code",
        "Load Balancing",
        "Microservices patterns",
        "Apply secure development lifecycle (Secure SDLC) principles"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice",
          "Course Structure & How to Navigate This Course"
        ],
        "OWASP Top 10 2021": [
          "OWASP Top 10: Overview",
          "Broken Access Control",
          "Cryptography Failures (Theory, Sensitive Data, Data Breach, Types of Failures)",
          "Cryptography Failures (Practical Examples, SQL Injections, TLS/SSL, HTTPS)",
          "Cryptography Failures (Examples, Password Encryption, Hashing, Salting)",
          "Injection (Overview, Fuzzing, CWEs, Impact, Injection Types, Command Injection)",
          "Injection (Cross Site Scripting, Types of XSS, SQL, JPA, NoSQL Injections)",
          "Injection (XPath Injection, Log Injection, Input Validation)",
          "Insecure Design (Overivew, CWEs, Shift Left Security, Threat Modeling Manifesto)",
          "Insecure Design (Secure Design Process, Security Controls, Metrics, Examples)",
          "Security Misconfiguration (Overview, CWEs, Types, Real-life attacks)",
          "Security Misconfiguration (Hardening, Zero Trust, Defense in Depth, Practice)",
          "Vulnerable & Outdated Components",
          "Identification & Authentication Failures",
          "Software & Data Integrity Failures",
          "Security Logging & Monitoring Failures",
          "Server-Side Request Forgery (SSRF)"
        ],
        "OWASP API Security Top 10 2023": [
          "OWASP API Security Project & OWASP API Security Top 10 2023",
          "API1:2023 Broken Object Level Authorization - Part 1",
          "API1:2023 Broken Object Level Authorization - Part 2 (Practice)",
          "API1:2023 Broken Object Level Authorization - Part 3 (Zero-Trust, UUIDs)",
          "API2:2023 Broken Authentication - Part 1 (Basics, Impact, Types of Attacks)",
          "API2:2023 Broken Authentication - Part 2 (Case Studies, OAuth, OpenID)",
          "API2:2023 Broken Authentication - P.3 - (Practice, JWT Tokens, Timing Attacks)",
          "API3:2023 Broken Object Property Level Authorization - Part 1",
          "API3:2023 Broken Object Property Level Authorization - Part 2 (Practice)",
          "API4:2023 Unrestricted Resource Consumption - Part 1",
          "API4:2023 Unrestricted Resource Consumption - Part 2 (Practice)",
          "API5:2023 Broken Function Level Authorization - Part 1",
          "API5:2023 Broken Function Level Authorization - Part 2 (Practice)",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 1",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 2",
          "API6:2023 Unrestricted Access to Sensitive Business Flows - Part 3 (Practice)",
          "API7:2023 - Server Side Request Forgery",
          "API8:2023 - Security Misconfiguration",
          "API9:2023 Improper Inventory Management - Part 1",
          "API9:2023 Improper Inventory Management - Part 2 (Practice)",
          "API10:2023 Unsafe Consumption of APIs - Part 1",
          "API10:2023 Unsafe Consumption of APIs - Part 2 (Practice)"
        ],
        "OWASP Top 10 2025: LLM": [
          "Introduction to OWASP Top 10 2025: LLM",
          "LLM01:2025 Prompt Injection",
          "LLM02:2025 Sensitive Information Disclosure",
          "LLM03:2025 Supply Chain",
          "LLM04:2025 Data and Model Poisoning",
          "LLM05:2025 Improper Output Handling",
          "LLM06:2025 Excessive Agency",
          "LLM07:2025 System Prompt Leakage",
          "LLM08:2025 Vector and Embedding Weaknesses",
          "LLM09:2025 Misinformation",
          "LLM10:2025 Unbounded Consumption"
        ],
        "Spring Security": [
          "Using the Latest Spring Versions in This Course",
          "Spring Security Introduction",
          "First Login Form & First Security Filter Configuration",
          "Spring Security: The Updated Way to Define the Security Filter Chain",
          "Login with Database Users, Roles & Privileges",
          "Remember Me & Methods Security",
          "Spring Security Architecture & Authentication Provider",
          "EXAM: Spring Security - Online Shop"
        ],
        "Spring Boot": [
          "Spring Boot: Introduction",
          "The First Spring Boot Project",
          "Spring Boot Starters",
          "Spring Boot Configurations & Application Properties",
          "Spring Boot Actuator - Monitoring Tools"
        ],
        "Resilient, Scalable & Secure Systems with Spring Boot": [
          "OAuth, OAuth 2.0, JWT & OpenID Connect, Identity Provider",
          "Practice: Auth0 - Configuration of Identity Provider",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 1",
          "OAuth & Open ID Connect Configuration in Spring Boot - Part 2",
          "Testing Security: Testing of Spring Boot Endpoints - Part 1",
          "Testing Security: Testing of Spring Boot Endpoints - Part 2",
          "Protecting APIs with Rate Limiting",
          "Rate Limiting Practical Guide: Bucket4j",
          "Building Resilient Services with Resilience4j in Spring Boot. Circuit Breaker",
          "Circuit Breaker - Practice",
          "Spring Boot + Resilience4j: Retry Pattern",
          "Spring Boot + Resilience4j: Time Limiter Pattern",
          "Spring Boot + Resilience4j: Rate Limitter Pattern",
          "Spring Boot + Resilience4j: Bulkhead Pattern",
          "Microservices Patterns in Practice: Exploring API Gateway",
          "Spring Cloud Gateway: Practice",
          "Understanding Load Balancing: Concepts, Strategies, and Use Cases",
          "Implementing Load Balancing with Spring Cloud LoadBalancer"
        ],
        "Cybersecurity: Comprehensive Security Practices for Developers": [
          "Introduction to Cybersecurity p.1 - Overview of current cyber threat landscape",
          "Introduction to Cybersecurity p.2 - Case Studies, Threat Analysis Models & More",
          "Introduction to Cybersecurity p.3 - Security Controls, SDD, SOC",
          "General Security Tips: Writing Code with Safety in Mind",
          "Securing Inputs: How to Validate and Sanitize Input Data",
          "Safeguarding Outputs: Effective Encoding for Secure Systems",
          "Mastering Authentication: Best Practices for Managing User Credentials",
          "Securing Sessions: Preventing Hijacking and Improving Stability",
          "Locking Down Access: Implementing Robust Authorization Mechanisms",
          "Zero Trust Architecture and Modern Authentication",
          "Encryption Essentials: Protecting Data with Cryptography - Part 1",
          "Encryption Essentials: Protecting Data with Cryptography - Part 2",
          "Defending Data: Strategies for Protecting Sensitive Information",
          "Securing Databases: Best Practices for Preventing SQL Injection",
          "Safe File Handling: Preventing File-Based Vulnerabilities",
          "Protecting Communication Channels: Ensuring Secure Transmission of Data",
          "Hardening System Configurations: Reducing Attack Surface",
          "Cloud Security Best Practices",
          "Mobile Application Security"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Solid understanding of Java (Java 8 or higher)",
        "Basic experience with Spring Boot",
        "Familiarity with REST APIs",
        "Knowledge of Maven or Gradle",
        "Basic understanding of web application architecture",
        "Comfort with using Git and version control",
        "Basic knowledge of HTTP, JSON, and XML",
        "Willingness to learn secure coding best practices"
      ],
      "description": "Secure Code in Java and Spring Boot is the ultimate guide for developers who want to write production-ready, secure applications using industry-standard tools and best practices. Security is no longer optional - it's a critical part of every developer's skill set. This course gives you the deep, practical knowledge you need to write code that defends itself.\nYou’ll learn how to protect your Java and Spring Boot applications from the most dangerous vulnerabilities: SQL injection, XSS, CSRF, insecure deserialization, misconfigured authentication, broken access control, and more. You'll go far beyond theory—each topic is backed by hands-on examples and real-world scenarios.\nWhat makes this course different?\nThis course is designed by Andrii Piatakha, a best-selling instructor on Udemy with over 1,000,000 students worldwide. Andrii is known for his unique and proven methodology that perfectly blends clear theoretical explanations with deep practical exercises. His teaching style helps students internalize complex security concepts through action, not just memorization.\nYou won’t just learn how to avoid insecure code - you’ll learn how to write secure, efficient, and maintainable Java and Spring Boot applications that are ready for production and compliant with modern security standards like OWASP Top 10.\nYou will learn how to:\nImplement strong authentication and role-based access control with Spring Security\nProtect APIs with JWT, OAuth2, and secure token handling\nPrevent SQL injection using JPA, Hibernate, and parameterized queries\nAvoid Cross-Site Scripting (XSS) and Cross-Site Request Forgery (CSRF)\nUse encryption and hashing (e.g. AES, bcrypt) the right way\nSecure microservices communication and configuration\nValidate and sanitize user input effectively\nHandle secure file uploads and prevent injection attacks\nStore credentials and secrets safely\nApply Secure Development Lifecycle (SDLC) practices\nUse automated tools to detect vulnerabilities in your code and dependencies\nWho is this course for?\nWhether you're a backend developer, tech lead, software engineer, or DevSecOps professional - if you’re working with Java and Spring Boot, this course is for you. You’ll gain immediately applicable skills to level up your security posture and reduce risk in your applications.\nBy the end of this course, you'll not only understand how to prevent the most critical security issues in Java and Spring Boot - you’ll also be confident in building secure applications from day one.\nJoin over 1 million developers who’ve already leveled up with Andrii Piatakha’s courses. Start writing secure code today.",
      "target_audience": [
        "Java developers who want to write secure code",
        "Spring Boot developers looking to enhance application security",
        "Backend engineers responsible for API protection",
        "Software engineers working on enterprise Java applications",
        "Developers preparing for security-focused roles",
        "Teams adopting secure development lifecycle practices",
        "Tech leads enforcing coding standards and security guidelines",
        "DevOps engineers interested in secure deployment practices",
        "QA engineers testing for security vulnerabilities",
        "Anyone aiming to prevent common security issues in Java and Spring Boot projects"
      ]
    },
    {
      "title": "[AI] Build a Object Recognition App with Python & Angular",
      "url": "https://www.udemy.com/course/ai-python-angular-object-recognition-app/",
      "bio": "Develop AI-driven web apps using FastAPI and Angular. Learn Machine Learning with Python for developers.",
      "objectives": [
        "AI and Machine Learning Fundamentals with hands on",
        "Basic Programming in Python and Typescript",
        "Handle frameworks like FastAPI and Angular",
        "Build real world modern object recognition application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "AI, Machine Learning and Deep Learning",
          "Convulent Neural Networks (CNNs)",
          "Installing VSCode",
          "VSCode Extensions",
          "Best way to take advantage of this course",
          "AI, Machine Learning and Deep Learning Quiz"
        ],
        "FastAPI and Python Setup": [
          "What is Python and FastAPI?",
          "Installing Python for MacOS",
          "Installing Python for Windows",
          "Installing and running FastAPI",
          "Another Example Route",
          "Running the server with Uvicorn",
          "Installing packages using requirements.txt"
        ],
        "Angular Application Setup": [
          "What is Angular and Typescript?",
          "Installing NodeJS",
          "Angular CLI and creating first app",
          "Creating ImageControl Component",
          "First Template and Conditions",
          "Inputs and Continuing Template"
        ],
        "Creating and Setting Prediction Model": [
          "Explaining TensorFlow, SSDMobileNet V2 and Coco Dataset",
          "Adding MobileNetV2 SSD and COCO Model DataSet",
          "Loading PreTrained Model Into App",
          "Run Inference Function",
          "Predict Route",
          "Label_Map",
          "Returning Results from Predict Route",
          "Testing our Route"
        ],
        "Adding Server Data to Frontend": [
          "Creating Angular Service",
          "Prediction Type",
          "Upload Image Function in Service",
          "Importing Service into Component",
          "Finalizing Template",
          "Provide HTTPClient",
          "OnFile Selected",
          "UploadImage Function",
          "API Key",
          "Handling Image Upload and Errors",
          "Adding UploadImage to Template and NetworkError",
          "Allow CORS",
          "Testing the Results"
        ],
        "Additional Lectures": [
          "Splitting into smaller components",
          "Angular Inputs",
          "Prediction Errors and Mistakes",
          "Use cases and Limitations"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "No programming experience required. Only computer and access to internet"
      ],
      "description": "[AI] Create a Object Recognition Web App with Python & Angular\nBuild AI-driven web apps with FastAPI and Angular. Discover Machine Learning with Python for developers.\nThis comprehensive course, \"[AI] Create a Object Recognition Web App with Python & Angular,\" is designed to empower developers with the skills to build cutting-edge AI-powered applications. By combining the power of FastAPI, TensorFlow, and Angular, students will learn to create a full-stack object recognition web app that showcases the potential of machine learning in modern web development.\nThroughout this hands-on course, participants will dive deep into both backend and frontend technologies, with a primary focus on Python for AI and backend development, and TypeScript for frontend implementation. The course begins by introducing students to the fundamentals of machine learning and computer vision, providing a solid foundation in AI concepts essential for object recognition tasks.\n\n\n***DISCLAIMER*** This course is part of a 2 applications series where we build the same app with different technologies including Angular, and React. Please choose the frontend framework that fits you best.\n\n\nStudents will then explore the FastAPI framework, learning how to create efficient and scalable REST APIs that serve as the backbone of the application. This section will cover topics such as request handling, data validation, and asynchronous programming in Python, ensuring that the backend can handle the demands of real-time object recognition processing.\nThe heart of the course lies in its machine learning component, where students will work extensively with TensorFlow to build and train custom object recognition models. Participants will learn how to prepare datasets, design neural network architectures, and fine-tune pre-trained models for optimal performance. The course will also cover essential topics such as data augmentation, transfer learning, and model evaluation techniques.\nOn the frontend, students will utilize Angular and TypeScript to create a dynamic and responsive user interface. This section will focus on building reusable components, managing application state with services and observables, and implementing real-time updates to display object recognition results. Participants will also learn how to leverage Angular's powerful features such as dependency injection, routing, and reactive forms to create a robust and scalable frontend application.\nThroughout the course, emphasis will be placed on best practices in software development, including code organization and project structure. Students will explore Angular's modular architecture and learn how to effectively organize their application into feature modules and shared modules. They will also gain insights into deploying AI-powered web applications, considering factors such as model serving, scalability, and performance optimization.\nBy the end of the course, participants will have created a fully functional object recognition web app, gaining practical experience in combining AI technologies with modern web development frameworks. This project-based approach ensures that students not only understand the theoretical concepts but also acquire the hands-on skills necessary to build sophisticated AI-driven applications in real-world scenarios.\nWhether you're a seasoned developer looking to expand your skill set or an AI enthusiast eager to bring machine learning models to life on the web, this course provides the perfect blend of theory and practice to help you achieve your goals in the exciting field of AI-powered web development using Angular and Python.\n\n\n\n\n\n\nCover designed by FreePik",
      "target_audience": [
        "Beginner Python, Frontend and AI developers. Students with interest in how AI works"
      ]
    },
    {
      "title": "Java TTS and STT - text to speech and speech to text course",
      "url": "https://www.udemy.com/course/java-tts-and-stt-text-to-speech-and-speech-to-text-course/",
      "bio": "Working on projects regarding TTS and STT and also programming your multi-threaded mp3 player",
      "objectives": [
        "write own programs for TTS and STT conversion. Beside knowing of how to use FreeTTS and Sphinx, you'll be able to use Google translate service for TTS and also write your own sound (music) player. Know differences between various speech to text and text to speech libraries."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting up environment"
        ],
        "Text to speech with FreeTTS": [
          "Creating and setting our project",
          "Writing our first program; getting all voices and printing them",
          "Reproducing sound from input",
          "Setting pitch, range and pitch shift",
          "Loading TTS with System properties programatically"
        ],
        "Java TTS with Google Translate service": [
          "Creating our project and wiriting method for getting the audio from Google",
          "Using method for getting the multilanguage speech output with Google service",
          "Getting the multilanguage speech output through textual input file"
        ],
        "Programming sound player": [
          "Creating our project and playing music from file on disc",
          "Starting to write sound player program with threads",
          "Writing two threads: thread for playing sound and thread for sound duration info",
          "Writing third thread: for file size info and spent computer processor storage",
          "Writing method for file size info and spent computer processor storage"
        ],
        "Sphinx voice recognition": [
          "Creating our project and writing microphone recognizer",
          "Implementing recognition logic, defining grammar file and testing recognition",
          "Writing new example for voice recognition, writing microphone recognizer",
          "Writing program that will open and close various programs on voice recognition",
          "Implementation of method for opening and closing programs with voice recognition"
        ],
        "Source code": [
          "Source code (new link is only in the text description)"
        ]
      },
      "requirements": [
        "Students will need to know java programming for beginners (if statements, while and for loops, concepts of functions, methods and classes). They will also need to know how to install JDK and Maven on their machine, and basic knowledge of using Eclipse IDE"
      ],
      "description": "What is text to speech (TTS) and speech to text (STT)\nText to speech, abbreviated as TTS, is a form of speech synthesis that converts text into spoken voice output. Text to speech systems were first developed to aid the visually impaired by offering a computer-generated spoken voice that would \"read\" text to the user.\nSpeech synthesis is the artificial production of human speech. A computer system used for this purpose is called a speech computer or speech synthesizer, and can be implemented in software or hardware products. A text-to-speech (TTS) system converts normal language text into speech; other systems render symbolic linguistic representations like phonetic transcriptions into speech.\nSpeech to text - Speech recognition (SR) is the inter-disciplinary sub-field of computational linguistics that develops methodologies and technologies that enables the recognition and translation of spoken language into text by computers. It is also known as \"automatic speech recognition\" (ASR), \"computer speech recognition\", or just \"speech to text\" (STT). It incorporates knowledge and research in the linguistics, computer science, and electrical engineering fields.\nSpeech-to-text software is a type of software that effectively takes audio content and transcribes it into written words in a word processor or other display destination. This type of speech recognition software is extremely valuable to anyone who needs to generate a lot of written content without a lot of manual typing. It is also useful for people with disabilities that make it difficult for them to use a keyboard.\nSpeech-to-text software may also be known as voice recognition software.\nLearn text to speech and speech to text recognition in Java\nThis course is for You - even if you are newbie, or enthusiastic programmer/developer who is interested in text to speech and speech to text recognition, you can benefit from this course. If you already know Java, and want to look deeper in Java in many directions, and if you also want to get knowledge about Java programming in field of text to speech and speech to text recognition, this course can help you and inform you about many things in that field, guiding you through four projects, step by step, with clear examples and writing code from scratch to the end. Java follows technology world in many directions, and TTS and STT is just one of them. In this course you will be able to find all in one place in this field which is used so much today.\nLearn Java and Java API's\nEven if you are new in programming, you will be able to understand the concepts and you will be shown how to write every single method, writing line by line - to finish successfully your projects. Course includes writing of four projects from scratch until finish. Link to source code included!\nContents and Overview\n\n3 hours of Java programming with clear examples, explanations and solutions, including these topics:\nText to speech with FreeTTS\nJava TTS with Google Translate service\nProgramming sound player\nSphinx voice recognition (STT)",
      "target_audience": [
        "Target students are intermediate and advanced programmers/developers who want to get more on TTS and STT. Also, course is made with clear and simple explanations so even beginners should make successful projects if they follow the instructions."
      ]
    },
    {
      "title": "Build a portfolio with React.JS",
      "url": "https://www.udemy.com/course/build-a-portfolio-with-reactjs/",
      "bio": "learn dry code!",
      "objectives": [
        "React JS",
        "Bootstrap 5",
        "Functional code",
        "DRY code",
        "React hooks (useState)"
      ],
      "course_content": {
        "Installation and setup": [
          "Intro",
          "installing Node.js",
          "Installing VScode",
          "Installing Git Bash",
          "creating a react app",
          "Creating a react app alternative (Yarn)",
          "creating another profile in your PC",
          "creating another profile (pdf)",
          "Heads up",
          "Source code",
          "npm installations: deprication"
        ],
        "Navigation bar": [
          "Adding bootstrap",
          "Adding links to the navbar",
          "Css variables",
          "Overwrite bootstrap with css classes",
          "Overwrite bootstrap with inline css style",
          "Push your code!"
        ],
        "Particle animation": [
          "Particle animations (updated)",
          "source code for \"react-tsparticles\" package",
          "Adding particles effect (original)",
          "Particles animation alternative (Manual/Custom) (MAC fix)",
          "particle animation deprication fix",
          "Colorful animation file (contributed by Jose Manuel)"
        ],
        "Typed animation": [
          "Adding type animation",
          "Adding css, importing external font",
          "Fixing navbar dropdown"
        ],
        "About me": [
          "set up and image import",
          "Adding css",
          "Media queries"
        ],
        "Technologies": [
          "Adding icons for the cards",
          "Generating cards and adding CSS styling"
        ],
        "CSS variables": [
          "Advantages of using variables"
        ],
        "Portfolio": [
          "Setup",
          "React useState and card generator set up",
          "Why are we using tempData?",
          "Finishing modal card generator",
          "CSS",
          "portfolio.jsx",
          "portfolio.css"
        ],
        "Contact footer": [
          "Generate Links dynamically",
          "CSS"
        ],
        "Upload project to Netlify": [
          "Rename tab and add an icon",
          "Upload project to Netlify and THANK YOU!",
          "Drop the link to your portfolio in the comment sections!"
        ]
      },
      "requirements": [
        "yes",
        "Basic understanding of HTML",
        "Basic understanding of CSS",
        "Basic understanding of JS",
        "Basic understanding of ReactJs"
      ],
      "description": "In this beginners tutorial, you will learn how to use React.js to build a dynamic portfolio that can be updated whenever you want to show more projects! This beginners tutorial will be using dry code and functional components. We will also learn how to edit bootstrap default styling, along with some web animations to make it look more interactive than a static page.\nWe will also be going through the installation process and how to handle some of the issues that might come up when installing some of the programs/software that will be used for the course, such as node.js, VScode, and Git Bash.\nWhat is react?\n\"React is a free and open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications\" -Wikipedia\nWhat is dry code?\n\"Don't repeat yourself is a principle of software development aimed at reducing repetition of software patterns, replacing it with abstractions or using data normalization to avoid redundancy -Wikipedia\nWhy this course/tutorial?\nThis course will be detailed on each step and logic used for each component.\nYes...you will be building a personal portfolio, but you will also learn skills that will help you in your personal and job-related projects! It will teach you how code can be reused for different purposes and make it more dynamic.",
      "target_audience": [
        "Beginner"
      ]
    },
    {
      "title": "ROS 2 Moveit 2 - Control a Robotic Arm",
      "url": "https://www.udemy.com/course/ros2-moveit2/",
      "bio": "Create your own 6 axis robotic arm and control it with ROS 2 and MoveIt 2 - Step by step, from URDF to Hardware",
      "objectives": [
        "Create a URDF for a 6 axis robotic arm",
        "Configure a robot for MoveIt 2 with the MoveIt Setup Assistant",
        "Control the robot with the MoveIt C++ and Python API",
        "Add a Gripper to the robot and configure it with MoveIt",
        "Create a launch file to start your entire application",
        "Make the bridge between MoveIt and your hardware, using ros2_control",
        "Practice with extra activities and challenges"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!",
          "What is MoveIt 2, and Why Do We Need It?",
          "How to get the most out of this course"
        ],
        "Setup and Installation for ROS2 and Moveit2": [
          "Intro",
          "Install and Setup ROS 2 on Ubuntu 24.04",
          "Install MoveIt 2",
          "Tools for the Course"
        ],
        "Create a URDF for a 6-axis Robotic Arm": [
          "Intro",
          "Create a Description Package",
          "First Link - Create and Set Up the URDF",
          "Second link - Recap of the Process to Add Links Together",
          "Activity 01 - Finish the URDF for the Arm",
          "Activity 01 - Solution",
          "Improve the URDF with Xacro",
          "Create a Launch File to Display the Robot"
        ],
        "Set Up Your Robot for MoveIt": [
          "Intro",
          "Activity 02 - Add Collision Tags",
          "Activity 02 - Solution",
          "Run the MoveIt Setup Assistant",
          "Files Overview",
          "Start the MoveIt Demo Launch File"
        ],
        "Add a Gripper to the Arm": [
          "Intro",
          "Create a URDF for a Gripper",
          "Connect the Gripper to the Arm",
          "Activity 03 - Add the Gripper to the MoveIt Config",
          "Activity 03 - Solution"
        ],
        "Bringup Package": [
          "Intro",
          "Create and Set Up the Bringup Package",
          "Start Everything From the Terminal",
          "Activity 04 - Write the Launch File",
          "Activity 04 - Solution"
        ],
        "Interact with Moveit using the C++ API": [
          "Intro",
          "Make the Arm Move with the MoveIt C++ API",
          "Joint and Pose Goal - C++",
          "Cartesian Path",
          "Integrate the C++ API inside an OOP node - Setup",
          "Integrate the C++ API inside an OOP node - Methods",
          "Add a Topic Subscriber",
          "Activity 05 - Add Subscribers for Joint and Pose Commands",
          "Activity 05 - Solution [1/2]",
          "Activity 05 - Solution [2/2]"
        ],
        "Interact with Moveit using the Python API": [
          "Intro",
          "Make the Arm Move with the MoveIt Python API",
          "Joint and Pose Goal - Python",
          "Integrate the Python API inside an OOP Node",
          "Add Topic Subscribers"
        ],
        "Connect MoveIt to the Hardware": [
          "Intro",
          "ros2_control Quick Recap and the Hardware I Will Use",
          "my_robot_hardware Package Overview",
          "Use the Hardware Interface in the URDF",
          "Switch Between Real Robot and Mock Component"
        ],
        "Conclusion": [
          "What to do next",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Ubuntu 24.04 installed on your computer.",
        "Some knowledge of ROS 2: nodes, topics, command line, URDF, etc.",
        "If you are just getting started with ROS 2, better to start with the ROS 2 for beginners series.",
        "No hardware required - you can follow the entire course with a simulation."
      ],
      "description": "You have learned ROS 2 basics and want to work on robotic arms, using MoveIt 2?\nAnd maybe you’ve already started but you feel completely lost?\nIn this course you will understand all the required steps to properly configure a robotic arm for MoveIt 2, by building a project by yourself, from scratch. At the end of the course you will be able to adapt this knowledge to your own projects.\n\n\n— Why this course?\n\n\nI know that learning MoveIt 2 can be a real nightmare. It’s hard to know where to start, how to do the configuration properly, and how to integrate it into your own ROS 2 application.\nThere are so many steps and details to pay attention to, and online documentation usually assumes you have way more knowledge and teaches you like you’re an expert already, which can be discouraging.\nI’ve been there myself and I learned how to use MoveIt to control a 6 axis robotic arm, for the startup I co-funded in the past. So, I’m here to share with you this practical experience, used for a real robot that was sold in the real world.\nMy goal is to provide you with a full step by step guide on how to set up and control a robotic arm with MoveIt.\nAlso, I’m not just going to show you an existing robot and tell you “here is how it’s done”. We will start from scratch, and build our own custom 6 axis robotic arm, so you can learn how to replicate the steps for your own projects.\n\n\n— How do I teach?\n\n\nIf you’ve taken other ROS 2 courses from me you know that I’m not here to waste your time.\nMy teaching method is quite simple:\nStep by step\nGoing to the point\nLearn while doing\nAlso I strongly focus on the “why” behind what you learn. The goal is not just to make you blindly repeat some steps, but to understand why those steps matter.\nAnd don’t take my word for it - here are some reviews from fellow students/researchers/engineers/teachers who took my ROS 2 courses on Udemy:\n“Best course on ROS2 I’ve taken! Other courses (different sites/platforms) made it confusing but this course makes it so clear and easy to understand while letting you try on your own. I am definitely learning a lot in a painless and simple way. I should have gotten this course from the beginning.” - Miguel Martinez G.\n“Overall very satisfied. I’ve a strong background in programming, but at a higher level (web mostly) and the elegant, fluent and clean approach of this course has leveraged my introduction to the ROS environment in a short amount of time, without the struggle of going through a lot of documentation” - Devis D.\n“This is the best course in ROS2 I’ve ever seen” - Aleksandar K.\n“Great course content, straight to the point and very easy to follow” - Kevin M.\n\n\n— What will you do and learn in the course?\n\n\nThis course is 100% project based. We will start from an empty project and build everything step by step, together.\nYou will:\nInstall ROS 2 and MoveIt 2\nCreate a URDF for a 6 axis robotic arm\nConfigure this robot for MoveIt 2, using the MoveIt Setup Assistant\nAdd a gripper to the arm\nCreate a bringup package with a launch file, to start your application\nControl the arm and gripper with the MoveIt API (C++ and Python)\nGet the steps on how to connect MoveIt with your own hardware, using ros2_control\nEach section is built on top of the previous ones, and you will reinforce what you’ve learned with extra challenges to practice more.\nYou will learn by doing, and you will be able to download the code at the end of each section, so you can use it as a template for your own projects.\nSo, to learn how to control a robotic arm with MoveIt 2 and ROS 2, wait no more and enroll in the course today!\nYou don’t take any risk as you get a 30-day money back guarantee if you’re not fully satisfied - no questions asked.\nSee you in the course!\n\n\nNote - this course is not for you if:\nYou have never worked with ROS 2 before. You will need ROS 2 basics to understand this course.",
      "target_audience": [
        "ROS developers who want to learn how to use MoveIt2",
        "Anyone lost in the ROS 2 MoveIt documentation",
        "Engineers/Teachers/Researchers/Teachers interested in controlling robotic arms with ROS 2"
      ]
    },
    {
      "title": "Gemini: Beginner to Advanced GenAI Masterclass - 2025",
      "url": "https://www.udemy.com/course/gemini-generative-ai-beginner-to-advanced-masterclass/",
      "bio": "Learn to use Gemini from scratch: A Beginner-Friendly Guide.",
      "objectives": [
        "Foundational Concepts of Gemini including modes, capabilities, benefits and limitations",
        "Mastering the Interface including features, prompting techniques and best practices",
        "Advanced Techniques such as generating AI model codes, text to image prompts, and creative tasks such as writing short stories",
        "Real-World Applications such as finding content creation ideas, creating business plans, document summarization and crafting engaging emails."
      ],
      "course_content": {},
      "requirements": [
        "No prior experience required"
      ],
      "description": "Unleash the power of Gemini, Google's cutting-edge large language model, and take your skills to the next level in this comprehensive course. Whether you're a complete beginner or have some experience, this course will equip you with everything you need to master Gemini's functionalities.\nWhat You'll Learn:\nFoundational Concepts: We'll begin with a solid understanding of large language models, their capabilities, and how Gemini fits into the big picture.\nMastering the Interface: Learn to navigate Gemini's interface with ease, exploring its functionalities for text generation, coding, question answering, and more.\nAdvanced Techniques: Dive deeper into advanced techniques like fine-tuning, prompting strategies, and leveraging Gemini for creative tasks.\nReal-World Applications: Discover how to apply your newfound skills to real-world scenarios, from boosting your productivity to enhancing your writing and research.\nThis Course is Perfect For:\nComplete Beginners: With no prior experience required, this course is designed to guide you through the basics step-by-step.\nCurious Learners: If you're intrigued by large language models and their potential, this course will provide a clear and engaging introduction.\nWriters, Researchers, and Students: Learn how Gemini can elevate your work by streamlining research, enhancing writing, and sparking creative ideas.\nProfessionals: Discover how to leverage Gemini's capabilities for tasks like generating reports, summarizing data, and automating workflows.\nJoin this comprehensive course and unlock the full potential of Gemini!\nBonus: Throughout the course, you'll receive ongoing support to ensure your success with Gemini.",
      "target_audience": [
        "Complete Beginners looking to become more experienced with using Gemini",
        "Curious Learners looking to learn more advanced concepts",
        "Writers, Researchers, and Students looking to improve their writing and learning",
        "Professionals looking to improve their productivity and save time using Gemini",
        "Business Owners and Entrepeneurs looking to scale and grow their businesses using Gemini",
        "Developers and AI learners looking to use Gemini for coding projects and building AI applications"
      ]
    },
    {
      "title": "How to Become a Software Developer From Scratch",
      "url": "https://www.udemy.com/course/how-to-become-a-software-developer-from-scratch/",
      "bio": "Prepare yourself to excel as a professional developer of enterprise web applications!",
      "objectives": [
        "Basics of the most relevant languages and frameworks for Java enterprise software: Java, Spring, JavaScript, Angular.",
        "Technologies that every software developer needs to know: version control systems, databases, networks and infrastructure.",
        "Most relevant concepts and methodologies for our daily work: Scrum, Extreme Programming, teamwork.",
        "What you need to further study to become a professional software developer: learning tips, books recommendations.",
        "Advanced techniques and practices: Clean Code, SOLID principles, Extreme Programming and more.",
        "A sample enterprise-class web application with a complete source code and business case explanation."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "References",
          "Slides"
        ],
        "(Module 1) IT Industry": [
          "Passion",
          "Types of Companies",
          "How It Works"
        ],
        "(Module 2) Daily Work": [
          "First Days",
          "Scrum",
          "A Bug in Production!",
          "Teamwork"
        ],
        "(Module 3) The Project": [
          "A Business Case",
          "Installation",
          "Demo"
        ],
        "(Module 4) Basics of Software Development": [
          "Text-based Data Formats",
          "Java Programming Part 1 - JVM, JDK and JRE, Memory, Maven",
          "Java Programming Part 2 - Programming Tasks",
          "Java Programming Part 3 - Unit Testing, Debugging, Tips on Learning Programming",
          "Spring Framework",
          "Frontend Development",
          "Version Control System: Git",
          "Databases",
          "Networks and Infrastructure"
        ],
        "(Module 5) Advanced Software Development": [
          "Introduction",
          "From a Bad, Bad Code to the Clean Code",
          "Disciplines",
          "Complex Domains",
          "Programming Task",
          "More Fun with Refactoring, IDE and Testing"
        ],
        "(Module 6) Practicalities": [
          "Job Interview",
          "Sample Tasks",
          "Learning Tips"
        ]
      },
      "requirements": [
        "Be eager to learn about software development!",
        "You will benefit from the course if you haven't started learning yet - and you want get the feeling what this is all about.",
        "You will also benefit from the course if you have already started learning Java - and you would like to know how it is actually used in real projects."
      ],
      "description": "Watch two parts of the course for free! Spring framework and databases. Click on the \"Expand all sections\" link and browse through the lessons. You will find two lessons, over 2 hours in total, that do not require buying the course. Enjoy!\n\n\nStructure of the Course\n1. In the first module we will start with talking about IT industry in general.\n2. In the second module we will talk about our daily work - how we work in teams and how important teamwork is.\n3. In the third module we will together set up a complete local development environment, and demo a sample enterprise-class web application - all to give you the impression of how it actually looks like.\n4. In the fourth module we will have an introduction to the most essential technologies: programming in Java, Spring enterprise framework, frontend development (JavaScript and Angular), version control systems, databases, networks and infrastructure.\n5. In the fifth module we will go through couple of more advanced topics, to inspire you and to give you strong foundation to further developing your skills.\n6. We will finish this course with couple of practical tips about job interviews, sample tasks that you might expect on your first days at a new job, and couple of learning tips.\n\n\nWhat You Should Expect\n✔ Nearly 13 hours of video content split into 6 modules\n✔ Holistic view of IT industry and enterprise software development\n✔ Exercises, coding tasks and coding screencasts that demonstrate many of the technical concepts in practice\n✔ Straightforward explanations of many of the fundamental techniques and principles illustrated with animated slides\n✔ Technologies: Java, Spring, JavaScript, Angular, Git, PostgreSQL, Docker\n\n\nWhat You Should Not Expect\n✔ This is not a strictly programming course.\nIn case you want to learn programming A to Z, for example in Java, this is not the course for you. However, this course will explain many of the fundamental techniques and will teach you how you can further study the technologies that we are covering in this course to become a professional software developer.\n✔ This course is not for Mac users.\nI assume that you have a PC with Windows operating system. In case you own a Mac, you will still benefit from most of the explanations and most of the exercises and all of the coding tasks. However you will not be able to directly repeat all the steps of local development environment setup. Also running a sample system will be even more challenging. Unfortunately I will not help you in case of a Mac.",
      "target_audience": [
        "Aspiring software developers who want to plan their career and understand IT industry landscape - with the focus on web applications developed for enterprises.",
        "Students of programming languages before their first IT job. In this course we focus on Java + Spring for the backend and JavaScript + Angular for the frontend.",
        "Junior software developers who want to understand what skills are required to become senior, professional software developers."
      ]
    },
    {
      "title": "Kubernetes on AWS EKS: Hands-on Get Started for Dev & DevOps",
      "url": "https://www.udemy.com/course/kubernetes-on-aws-eks-hands-on-guide-for-devs-devops/",
      "bio": "AWS, Kubernetes, EKS, Docker, Microservices on K8S | Infrastructure as Code with Terraform | DevOps | Cloud Engineering",
      "objectives": [
        "You'll learn creating deploying multiple docker applications on Kubernetes",
        "You'll learn how to create Kubernetes cluster on AWS EKS by coding in Terraform",
        "You'll learn configuring and managing request routing of Microservices in Kubernetes using AWS Load Balancer",
        "You'll learn creating RDS MySQL database using Terraform for a docker API application",
        "You'll learn creating necessary infrastructure such as VPC on AWS using Terraform",
        "You'll learn how to use Command Line Interface and Infrastructure Code instead of using AWS Management Console",
        "You'll learn basic security best practices of deploying applications on Kubernetes"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What you need to know",
          "Local Workstation Setup - Options",
          "Course Materials and Source Code Usage"
        ],
        "AWS Infrastructure for Kubernetes": [
          "VPC - High Level Overview",
          "Configure AWS Command Line Interface (CLI)",
          "Create Amazon VPC using Terraform Code",
          "VPC Simplified for EKS Kubernetes Setup",
          "Create EKS Kubernetes Cluster using Terraform"
        ],
        "Microservices Deployments on Kubernetes": [
          "Overview of Demo Project - Microservices Product",
          "High Level Kubernetes Concepts",
          "Run a Static Website with Docker on Local Setup",
          "Deploy Static Website to Kubernetes",
          "Run an API application with Database using Docker Compose",
          "Create MySQL on AWS RDS using Terraform",
          "Deploy API application to Kubernetes"
        ],
        "AWS LoadBalancer and Routing in Kubernetes": [
          "Kubernetes Ingress & AWS LoadBalancer - Overview",
          "Install Kubernetes Ingress Controller",
          "Configure Route for the Website Service",
          "Configure Route for API service",
          "Deploy Single Page App to Kubernetes with a new Route"
        ],
        "Application Configs and Secrets Configs in Kubernetes": [
          "Use K8S ConfigMaps for API's Configurations",
          "Use K8S Secrets for API's Secret Configs",
          "Use Private Docker Registry with Kubernetes"
        ],
        "Wrapping Up": [
          "Summary",
          "References"
        ]
      },
      "requirements": [
        "You are web developer (or DevOps / Cloud Engineer) and understand the concepts of web programing",
        "You have basic knowledge of Docker. If you have the experience building images, even for local development, that is a plus",
        "You have or you will create AWS account and aware of the pricing beyond AWS free tier",
        "You are looking to get your hands dirty and start building Kubernetes infra on AWS and start deploying containers"
      ],
      "description": "This course is designed for developers, DevOps engineers, and cloud professionals who want to quickly gain practical Kubernetes skills. We'll take a streamlined, hands-on approach to mastering essential infrastructure and Kubernetes concepts, coding your infrastructure with Terraform, and deploying real-world applications on Amazon EKS, the leading managed Kubernetes service.\n\n\nConcise Course Overview:\n\n\nAWS EKS Fundamentals & Terraform: Understand the core components of AWS infrastructure needed for Kubernetes and learn to define and manage it with Terraform. We'll also introduce the microservices-based project you'll be building throughout the course.\nInfrastructure as Code with Terraform: Learn how to use Terraform to create and manage your AWS Virtual Private Cloud (VPC), the foundation for your EKS cluster.\nEKS Cluster Deployment with Terraform: Provision and configure your Kubernetes cluster on EKS, using Terraform to automate the process.\nContainerize and Deploy a Static Website: Package a basic website into a Docker container, test it, and deploy it to your Kubernetes cluster.\nDatabase Integration with RDS and Terraform: Use Terraform to set up an RDS MySQL database and connect it to your application running in Kubernetes.\nDeploy an API Application: Containerize and deploy a more complex API application that interacts with your RDS database.\nTraffic Management: Learn to control and direct traffic to your applications using Amazon Load Balancer and Kubernetes Ingress.\nKubernetes Configuration: Explore ConfigMaps and Secrets for managing application configurations and sensitive data.\nPrivate Container Registries: Securely store and manage your Docker images in private registries, such as AWS ECR.\nBy the end of this course, you'll be equipped to build, deploy, and manage containerized applications on Kubernetes using AWS EKS, while also gaining valuable skills in cloud infrastructure automation with Terraform.",
      "target_audience": [
        "DevOps Professionals: If you're a DevOps Professional with experience in creating CI/CD pipelines and have a good understanding of high level Cloud Infrastructure and setup, this course will help you gain expertise in Kubernetes and Infrastructure Coding with Terraform on AWS.",
        "Engineering Leaders: If you're an Engineering Leader seeking to enhance your knowledge of Cloud Engineering, Cloud Native and DevOps practices, particularly in the area of Kubernetes infrastructure for Microservices, this course is perfect for you.",
        "Cloud Engineers: If you're a Cloud Engineer with experience in Cloud Infrastructure & Networking, and looking to learn Kubernetes from both an Infrastructure Coding and Deployment perspective, this course is for you.",
        "Application Developers: If you're an Application Engineer with experience in engineering web applications and APIs, this course is tailored for you.",
        "Platform Engineers: If you're a Platform Engineer with experience building and provisioning tools on the cloud, and ready to explore Kubernetes on Cloud"
      ]
    },
    {
      "title": "Ultimate Microsoft Office Bundle: Excel, Word, PowerPoint",
      "url": "https://www.udemy.com/course/ultimate-microsoft-office-bundle-excel-word-powerpoint/",
      "bio": "The Ultimate Microsoft Office Course Which Covers Microsoft Excel, Word, PowerPoint from Scratch to Advanced Level!",
      "objectives": [
        "Learn Microsoft Excel, Word, PowerPoint from Scratch to Advanced Level",
        "Master everything with real world case studies",
        "Master Microsoft Office from basics to Pro",
        "Have a deep understanding of Microsoft Excel, Word and PowerPoint skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Data Cleaning": [
          "Intro to Data Cleaning in Excel",
          "Left and Right and Flash Fill",
          "Find and Replace Color Replace Trick",
          "Text to Columns Tool",
          "IFERROR Function",
          "Remove Duplicates",
          "Randomize Cells",
          "Delete Blanks",
          "SORT & UNIQUE Functions",
          "TRANSPOSE Function",
          "Rounding"
        ]
      },
      "requirements": [
        "No prior Word experience necessary - You will learn from very basics"
      ],
      "description": "This Microsoft Office bundle is for those who want to master the 3 Microsoft Office programs you need to know for almost any corporate job! You will learn Microsoft Excel, Microsoft Word and Microsoft PowerPoint from basics to Advanced. The Microsoft Office Bundle: Excel, Word, and PowerPoint course is a comprehensive training program designed to equip learners with essential digital skills required in today’s professional and academic environments. This all-in-one course provides in-depth knowledge and hands-on experience with Microsoft Excel, Word, and PowerPoint—three of the most widely used productivity tools worldwide. Whether you're a student, job seeker, working professional, or entrepreneur, mastering these applications is crucial for improving efficiency, communication, and data management across various industries.\nThe course begins with Microsoft Word, the powerful word processing software used to create, edit, and format documents. You will explore everything from basic text editing and formatting to advanced features like styles, templates, headers and footers, mail merge, and collaboration tools. By the end of this module, participants will be able to create professional-looking documents such as reports, resumes, letters, and brochures with confidence and polish.\nThe next module focuses on Microsoft Excel, a powerful tool for data organization, analysis, and visualization. Starting with spreadsheet basics, learners will progress to more advanced skills such as formulas and functions, conditional formatting, charts and graphs, data validation, pivot tables, and data analysis tools. This section is ideal for those looking to manage budgets, track performance, or analyze large sets of data efficiently and accurately.\nFinally, the course covers Microsoft PowerPoint, the go-to software for creating impactful presentations. You will be guided through slide design principles, text and image insertion, transitions and animations, and best practices for delivering engaging presentations. You will also explore advanced features like SmartArt, charts, multimedia integration, and presenter tools. This module ensures learners can create compelling and visually appealing slideshows that effectively communicate ideas in meetings, classrooms, or public speaking settings.\nThe Microsoft Office Bundle course is an essential program for anyone aiming to improve their digital proficiency. With a balanced blend of foundational knowledge and practical application, this course empowers learners to become more productive, organized, and effective in their professional and personal lives.",
      "target_audience": [
        "If you want to learn the complete Microsoft Excel, Word and PowerPoint from basics to Advanced level , This course is perfect for you!"
      ]
    },
    {
      "title": "Automate Excel using Python - Xlwings | Series 1",
      "url": "https://www.udemy.com/course/automate-excel-using-python-xlwings-series-1/",
      "bio": "Master yourself to automate Industry-level datasets in Excel with hands-on experience on \"2 Case Studies\" using Python",
      "objectives": [
        "Writing macros (in python) for their Excel sheets",
        "Automate Excel without any VBA code (installed by default)",
        "Build your own Formulas by coding User-defined Functions (UDFs) in Python",
        "Practical hands-on experience with Industry level datasets",
        "Automate, streamline and completely revolutionize your Excel workflow with Python macros",
        "Master unique concepts, tools and case studies, which you won't find ANY other course, guaranteed",
        "Get LIFETIME access to course materials and a 1-on-1 expert support",
        "Continuous course updation when python packages updated with new features"
      ],
      "course_content": {
        "Introduction": [
          "About Instructor",
          "Academy's Courses (All)",
          "Course Outline",
          "Announcement: Series-2 Course launched!!!",
          "Communication: Doubts, Request feature"
        ],
        "Chapter 0: Basics": [
          "Tools",
          "Tools part 2",
          "Python",
          "Pandas",
          "Xlwings"
        ],
        "Chapter-1 - Case study I": [
          "Infographic",
          "View Data",
          "Prepare Code",
          "Define Sheets",
          "View Code History",
          "Sheet_1 to DataFrame to Sheet_2",
          "Figure, Axes",
          "Show Plot",
          "Add Legends"
        ],
        "Chapter-2 - Case Study II": [
          "Infographic",
          "View Data",
          "Prepare Code",
          "Define Sheets",
          "Sheet_1 to DataFrame to Sheet_2",
          "Ch-A Plot",
          "Ch-B Plot",
          "Ch-B Plot Pt2"
        ],
        "Conclusion": [
          "Summary"
        ]
      },
      "requirements": [
        "Python Fundamentals",
        "Excel (version 2007 or later)"
      ],
      "description": "This course teaches how to automate Industry-level datasets maintained in Excel sheets using Python programming language.\nMS Excel is a very helpful tool for record-keeping. But the language that comes by default for macro is VBA, which is dated. And in the field of Data Analysis, Python has a lot of interesting packages which makes a job easy. Package like xlwings links any Excel with Python macros. Packages like Pandas, takes data into tabular format and also has customized filtering of rows or columns for complex data analysis. Packages like Matplotlib, Plotly enables to create different plots - line plot, Scatter plot, Heat map for finding the correlation b/w different parameters.\nIn the Series, 2 Case studies has been picked from Industry process line. And correspondingly, Python macros are created to:\nreduce time in analysis\nenable customization using python packages\nreduce macros code lines in VBA codebase.\ncreate customized User-defined modules by python functions.\nThe Series-2 is also available now in the Instructor's profile.",
      "target_audience": [
        "Beginner developers who want to make their career on Data Science",
        "People working as an Analyst, using Excel mostly"
      ]
    },
    {
      "title": "OOPs Mastery 2025: Ultimate Practice Test Series",
      "url": "https://www.udemy.com/course/oops-mastery-best-practice-tests/",
      "bio": "Boost Your Coding Expertise: Master Classes, Inheritance, Polymorphism, and Design Patterns",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Dive into the essential world of Object-Oriented Programming (OOP) with \"OOPs Mastery 2024: Ultimate Practice Test Series.\" This expertly crafted course and practice test bundle marks your pathway to mastering OOP, providing a deep and structured understanding necessary for developers at all levels aiming to boost their career trajectory.\n\n\nEmploying a blend of theory-packed questions and abundant practice challenges alongside project-based learning, we offer in-depth explanations across fundamental and advanced OOP concepts. Our curriculum is tailor-made to unravel the complexities and power of OOP, a critical paradigm for efficient and scalable software development, ensuring you grasp the skills to architect and maintain sophisticated software systems.\n\n\nThe curriculum carefully unfolds to highlight all vital aspects of Object-Oriented Programming:\n\n\nObject-Oriented Foundations: Embark on your journey with 30 foundational principles of OOP, mastering classes, objects, encapsulation, and inheritance from the ground up.\nIntermediate OOP Concepts: Elevate your understanding through 30 meticulously crafted challenges, deepening your knowledge of polymorphism, abstraction, and the key concepts defining OOP's versatility.\nAdvancing in OOP: Venture deeper into 30 complex scenarios addressing advanced topics such as design patterns and SOLID principles, critical for sophisticated software design and development.\nMasterclass in Object-Oriented Programming: Conquer the zenith of OOP with 30 advanced tasks focusing on meta-programming, concurrency, and working with legacy code, preparing you for high-level software engineering challenges.\n\n\nGoals:\nMaster the application of OOP principles in real-world scenarios, harnessing classes, inheritance, and polymorphism to craft maintainable and scalable software.\nDevelop a solid understanding of advanced OOP concepts including design patterns, SOLID principles, and more, enhancing your ability to solve complex software engineering problems.\nGain proficiency in working with legacy code, understanding concurrency, and applying meta-programming techniques, rounding off your skills as a seasoned software developer.\n\n\nEnroll now to revolutionize your programming skill set, preparing you for success in developing advanced software solutions and excelling in challenging technical interviews.",
      "target_audience": [
        "Beginner programmers seeking a structured introduction to Object-Oriented Programming.",
        "Intermediate developers aiming to solidify and expand their understanding of OOP principles.",
        "Advanced software engineers looking to master complex OOP concepts and design patterns.",
        "IT professionals or computer science students who wish to bridge theoretical knowledge with practical OOP skills.",
        "Career changers entering the tech industry, desiring a foundational knowledge in software development practices."
      ]
    },
    {
      "title": "Build a Salesforce Agent to Chat with Unstructured PDF Data",
      "url": "https://www.udemy.com/course/salesforce-agentforce-power-agents-with-unstructured-data/",
      "bio": "Master RAG, Einstein Data Library, Data Cloud, Prompt Builder, and AWS to Create Powerful Salesforce Agents",
      "objectives": [
        "Understanding Einstein Data Library",
        "Grounding AI Responses",
        "How RAG Works",
        "How Prompt builder and Agent works",
        "Building and Deploying AI Agents",
        "Real Time Projects",
        "Working with Unstructured Data"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Disclaimer",
          "Salesforce Org Setup",
          "Important Note",
          "Enable Einstein",
          "New way to enabling the Agents",
          "Data Cloud Setup"
        ],
        "Project 1 - LG Support Agent - Unstructured Data from Amazon S3": [
          "AWS Signup",
          "S3 bucket Setup",
          "Setup AWS Security (IAM)",
          "Upload Pdf To S3",
          "Connect Data cloud to s3 bucket",
          "Quick Note --> How to view Connected App in New orgs",
          "Connected App",
          "What is RAG and How it works?",
          "Configure unstructured data lake object",
          "Send File Notifications from Amazon S3 to Data Cloud",
          "Confirm Search index Status and DMOs Chunk",
          "If DMO chunk records are empty",
          "Create prompt Template",
          "Create an Agent and Agent Action",
          "Create a Digital Experience Site",
          "Route to Service Agent",
          "Embed Agent To the Site",
          "Delete your S3 Bucket"
        ],
        "Project 2: Agent for Release Notes with Einstein Data Library": [
          "Demo",
          "Einstein Data Library and How it works",
          "Einstein Data Library Setup",
          "Confirm Search index Status and DMOs Chunk",
          "Prompt Template",
          "Einstein Copilot Agent",
          "Publish Project 2"
        ],
        "Retrieve Code in VS Code": [
          "Retrieve Code in VS Code"
        ]
      },
      "requirements": [
        "Internet connection is needed to go through this course",
        "Basic understanding of Salesforce is required before taking this course.",
        "Trailhead Account"
      ],
      "description": "Welcome to \"Build a Salesforce Agent to Chat with Unstructured PDF Data\", a project-driven course designed to equip you with the skills to create intelligent Salesforce agents that can effectively leverage unstructured data.\nIn this course, you’ll learn how to integrate technologies like AWS, Data Cloud, Einstein Data Library, and Prompt Builder to build agents capable of providing accurate, context-driven responses. We'll guide you through key concepts such as uploading data to AWS S3, injecting it into Salesforce Data Cloud, and structuring it into Data Lake and Data Model Objects for seamless data processing.\nUsing Prompt Builder, you’ll configure agents to fetch relevant information from Data Cloud based on user inputs and generate real-time, context-aware responses. You’ll also explore how the Einstein Data Library enables agents to process unstructured data for tasks like question-and-answer interactions.\nThis course emphasizes hands-on learning, with two exciting projects:\nProject 1: Ingest unstructured data from AWS S3 into Salesforce Data Cloud, create a dynamic agent using this data, and expose it on an Experience Site for user access.\nProject 2: Leverage Einstein Data Library to process and ground unstructured data, enabling agents to deliver precise and personalized responses.\nYou’ll gain practical experience integrating AWS S3 with Salesforce Data Cloud, managing Data Lake and Data Model Objects, and using advanced tools like Prompt Builder to enhance workflow automation.\nBy the end of the course, you’ll have the expertise to create intelligent agents that can transform unstructured data into actionable insights, improving efficiency, customer interactions, and overall productivity.\nThis course is perfect for developers, AI enthusiasts, and teams looking to integrate cloud solutions with Salesforce to tackle complex data challenges. Let’s dive in and unlock the potential of unstructured data!",
      "target_audience": [
        "Individuals Eager to Explore AI Agents",
        "Developers Enhancing Expertise",
        "Teams Managing Unstructured Data",
        "Professionals Using Data Cloud Objects",
        "For those eager to delve into AI agents and cloud technology to unlock new possibilities.",
        "Ideal for developers aiming to upskill in handling unstructured data and automating processes efficiently."
      ]
    },
    {
      "title": "Byte-Sized-Chunks: Bit Manipulation Problems",
      "url": "https://www.udemy.com/course/bit-manipulation-problems/",
      "bio": "Learn how to set, test or reverse bits - interview favorites, made easy with a visual approach that you will love",
      "objectives": [
        "Crack bit manipulation problems, whether in interviews or at work"
      ],
      "course_content": {
        "Bit Manipulation Problems": [
          "You, This Course, and Us!",
          "Bit Manipulation - I",
          "Bit Manipulation - II",
          "Useful Bit Manipulation Techniques",
          "Get And Set The Nth Bit",
          "Print And Count Bits",
          "Reverse The Bits In An Integer"
        ]
      },
      "requirements": [
        "This course requires some basic understanding of a programming language, preferably C, C++, C# or Java. Bit manipulation algorithms and syntax are virtually identical all of these languages (of course the syntax is hardest in C:-))"
      ],
      "description": "Note: This course is a subset of our 20+ hour course 'Break Away: Programming Interviews' so please don't sign up for both:-)\n\nProgramming interviews are like standard plays in professional sport - and bit manipulation questions are very common in certain types of interviews!\nThis course has been drawn by a team that has conducted hundreds of technical interviews at Google and Flipkart\nBit manipulation problems are an interview favorite, and they also pop up in some real-word programming cases, particularly low-level or very computationally intensive tasks.\n\nWhat's covered:\nThe bitwise AND, OR, NOT operators: Visually understand exactly how the bitwise AND, OR and NOT operators work\nBitwise Shifting - Overflow and Fill: The bitwise shift operators can be quite tricky - we cover these in some detail\nBit Manipulation - get and set a specific bit\nCounting Set Bits with a nifty trick to do so in time complexity O(# of 1s)\nReverse Bits in a number",
      "target_audience": [
        "Nope! Please don't enroll for this class if you have already enrolled for our 21-hour course 'Break Away: Programming and Coding Interviews'",
        "YEP! New engineering graduate students who are interviewing for software engineering jobs",
        "YEP! Professionals from other fields with some programming knowledge looking to change to a software role",
        "YEP! Software professionals with several years of experience who want to brush up on core concepts"
      ]
    },
    {
      "title": "Learn Flowchart and Pseudocode Programming from Scratch",
      "url": "https://www.udemy.com/course/learn-flowcharts-and-pseudocode-from-scratch/",
      "bio": "In this course You will learn how to draw a flowchart and how to write pseudocode effectively.",
      "objectives": [
        "Know Algorithm, Flowchart and Pseudocode",
        "Draw Flowchart",
        "Write Pseudocode",
        "Understand Programming Language Logic"
      ],
      "course_content": {
        "Input Process and Output": [
          "Input Process and Output",
          "Input Process and Output Quiz"
        ],
        "Tools Used in Problem Solving": [
          "What is Algorithm?",
          "Algorithm Quiz",
          "What is Flowchart?",
          "Flowchart Continued",
          "Flowchart Quiz",
          "Conditional Execution in Flowchart",
          "Conditional Execution in Flowchart Quiz",
          "Repetitive Process in Flowchart",
          "Repetitive Process in Flowchart Quiz",
          "What is Pseudocode?",
          "Pseudocode Quiz",
          "Conditional Constructs in Pseudocode",
          "Conditional Constructs in Pseudocode Quiz",
          "Data Types in Pseudocode",
          "Data Types in Pseudocode Quiz",
          "Variables and Constant in Pseudocode",
          "Variables and Constant in Pseudocode Quiz",
          "Operators",
          "Operators Quiz",
          "Iterations",
          "Iterations Quiz",
          "What's Next?",
          "Flowchart Example with Explanation"
        ]
      },
      "requirements": [
        "Should Know the basic difference between hardware and software"
      ],
      "description": "Why you should take this course?\n-You will learn how to draw flowcharts and how to write pseudocode .\n-You will learn Various symbols in flowchart and you will how to use it in flowchart efficiently.\n-You will know what is repetitive process in flowchart?\n-You will know what is conditional execution in flowchart?\n-You will learn how to use data types in Pseudocode?\n-You will about Variables and Constants in Pseudocode?\nEach lecture has been explained with real life examples and this course requires no prerequisite knowledge. Everything is explained in simple, easy to follow steps. In a very short time, you will be able to take a programming situation and reduce it to a series of steps that can be transferred to any programming language.\nAfter learning flowchart and pseudocode you can convert flowchart or pseudocode into any programming language.\nIf you found any difficulty in understanding my lectures then please don't hesitate to ask me i will try to solve your query for(if required) 100 times.\nStart Learning Now",
      "target_audience": [
        "Anyone who wants to make there programming language basics strong"
      ]
    },
    {
      "title": "Python GUI Master Class with Tkinter: Create 25 Python GUIs",
      "url": "https://www.udemy.com/course/python-gui-master-class-with-tkinter-create-25-python-guis/",
      "bio": "Learn how to make GUIs in Python with Tkinter library and start making your own Python GUI applications Today!",
      "objectives": [
        "Learn GUI from the basics",
        "Be familiar with Tkinter widgets",
        "How to translator text in multi-language",
        "Handle Keyboard and Mouse Events",
        "Learn how to draw different shapes on canvas",
        "Add tabs and a Menu in your Tkinter application",
        "Create 2D animation",
        "Buld Audio/Video Player",
        "Learn Text Reader/PDF Reader, QR Code Generator and Reader",
        "Learn how to use pygame, vlc, qrcode, ect.. python packages",
        "How to read data from CSV & Text files",
        "How to get live data from Internet( Web Scrapping)",
        "20+ GUI Applications",
        "5+ GUI Games"
      ],
      "course_content": {},
      "requirements": [
        "You should have a basic understanding of the Python Programming Language.",
        "A computer system with an internet connection"
      ],
      "description": "Welcome to the \"Python GUI Master Class with Tkinter: Create 25 Python GUIs\"  course, a course that will give you enough confidence to make GUI Applications and games in python.\n\n\nTill now you were just aware of running python script on a boring command prompt/terminal, now let's make GUI Applications with python, let's utilize your python coding skill to make awesome GUI Applications.\n\n\nI will give you step-by-step guidance to make sure you are able to make any GUI Applications on completing this course. I will start by helping you to get your setup done, which includes Python, pip, and, PyCharm IDE installation, we will install the required python packages as and when needed.\n\n\nWe will go through all the GUI widgets :\n\n\nMainWindow\nPhotoImage\nLabel\nEntry\nButton\nmessagebox\nCheckbutton\nRadiobutton\nScale\nListbox\ncolorchooser\nText\nfiledialog\nMenu\nFrame\nToplevel\nProgressbar\nCanvas\nScrollbar\nScrolledText\nComboBox\nTreeView\nSpinbox\nLabelFrame\nMenubutton\nSeparator\nSizegrip\ntkcalendar\ntkPDFViewer\nCheckboxTreeview\nAnd many more...\n\n\nThen we are going to learn how to catch events.\nKey Events from the Keyboard\nMouse events\n\n\nNot only that but we are going to learn how to use many Python packages.\nvlc to play video files\npygame to play audio files\ntimedelta to convert time in hh:mm:ss format\npackage to work with pdf files\npackage to do zip/unzip\npackage to resize any image\ntranslate for multi-language translation\nBeautifulSoup for web scraping\nqrcode to with QR Code\ngTTS for Text-to-speech\nrandom to generate a number randomly\n\n\nand many more\n\n\nAlong the course, we will many applications and games.\nApplications :\nApp - 01: Digital Clock & Calendar\nApp - 02: Color Picker\nApp - 03: Image Viewer/Resizer\nApp - 04: Multi-Language Translator\nApp - 05: Morse Code Translator\nApp - 06: Calculator\nApp - 07: To-Do List\nApp - 08: Make Your Dictionary From The Internet\nApp - 09: Sensex Nifty Live Data From Internet\nApp - 10: QR Code Generator\nApp - 11: QR Code Reader\nApp - 12: PDF Viewer\nApp - 13: TextReader With Font Customization\nApp - 14: Text To Speech Converter\nApp - 15: AudioPlayer\nApp - 16: Video Player\nApp - 17: Zip/Unzip Files & Folders\nApp - 18:  Alarm Clock\nApp - 19: Wish a Special Day to a Special One without a Fail\nApp - 20: Quiz App\n\n\nGames:\nGame - 01: Rock paper scissors\nGame - 02: tic tac toe\nGame - 03: Color Ball Finder\nGame - 04: Make an image from the image part\nGame - 05: Flip a Card ( Card pair)\n\n\nYou will get lifetime access to all the lectures.\nBest of all, we will learn by actually DOING IT! As the course name suggests you will master making GUI applications in Tkinter with Python by making 20+ applications, and we will also make 5+ GUI games.\n\n\nEnroll Now and let's start making creative and useful Python GUI Applications.\n\n\nI will see you on the course!",
      "target_audience": [
        "All level Python GUI Developer",
        "Beginner Python Developers who want to build Awesome GUI Applications & Games",
        "Python Developer who wants to use interactive UI instead of terminal",
        "Students who want to build portfolio of 25+ Python GUI Application/Games"
      ]
    },
    {
      "title": "Data Structures and Algorithms",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-all/",
      "bio": "A guide for learning Data Structures operations & Analyze the Algorithms by implementing the practical Data Structures.",
      "objectives": [
        "The students will be able to understand the concepts in the organization of data efficiently.",
        "The students will be able to understand the concepts of data structures.",
        "The students will be able to use an algorithm by applying the concepts of data structures.",
        "The students will be able to develop different algorithms and use their learnt techniques."
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Science Knowledge."
      ],
      "description": "Welcome to the DATA STRUCTURES and ALGORITHMS course!!\nAre you interested in learning the Data Structures and implementing its Algorithms?\nThe goal of the entire course is to give you capability for writing the code like a professional programmer by understanding the concepts of Data Structures and Algorithms.\nHere, each section is having theory and examples with its implementation of Data Structures and Algorithms.\nThere are many people who don't understand the concepts of Data Structures but try to write the code which will result in errors.\nThis course has the concepts of Algorithm & implementation of the Data Structure concepts with examples but not coding. But by learning the concepts of Data Structures and its Algorithms you can write the code in any programming language.\nThere might be free lessons available in the YouTube but you cannot get all the content available at once and it wont be interactive also.\nHere, you will Learn the following:\nBasics of Data Structures and Algorithms\nArrays Concepts\nStacks and Queues\nLinked Lists Concepts\nTree Data Structures\nGraph Data Structures\nSearching and Sorting Algorithms.\nBy learning this course of Data Structures and Algorithms you can gain the knowledge of Data Structures and implement the Algorithms. Finally you can perform well in exams and crack the interviews.\nI hope you will learn all these topics and I want everyone to get benefit from my course of Data Structures and Algorithms.",
      "target_audience": [
        "The intended people who want to learn the Data Structures and Algorithms to structure the data."
      ]
    },
    {
      "title": "Develop Agentic .NET Applications Using Semantic Kernel",
      "url": "https://www.udemy.com/course/building-smarter-ai-apps-with-semantic-kernel/",
      "bio": "Master AI-Powered Application Development with Custom Tool Calls, RAG, MCP Integration and Single Agent Orchestration",
      "objectives": [
        "Master AI Application development for C# developers",
        "Understand the core concepts of the Semantic Kernel Framework",
        "Learn how to use Semantic Kernel to connect to many different models and model providers including Azure OpenAI, OpenAI, Inferencing API",
        "Learn how to implement Retrieval-Augmented Generation (RAG) plugins",
        "Understand the power of integrating Model Context Protocol (MCP) servers into Semantic Kernel",
        "Learn the basics of AI and Large Language Models (LLMs)",
        "Master multimodal data (text, images, video ext.) into Generative AI Application",
        "Gain Proficiency with Azure AI Foundry and deploying OpenAI Models",
        "Learn how to use Semantic Kernel to connect to local models using ONNX, Ollama and Hugging Face",
        "Gain proficiency by learning how to use Semantic Kernel with ASP.NET",
        "Attain expert proficiency in creating Semantic Kernel plugins and function calling, adhering to industry best practices",
        "Learn to quickly create Plugins using existing API Endpoints"
      ],
      "course_content": {},
      "requirements": [
        "Basic .NET, C# and ASP.NET experience helpful by not necessary",
        "Visual Studio, VS Code or other .NET IDE",
        "Azure Subscription helpful but not required"
      ],
      "description": "Master AI Application Development with Semantic Kernel: The Comprehensive Developer's Journey\nTransform your development skills and applications with cutting-edge AI capabilities! This immersive course takes you on a comprehensive journey from fundamental AI concepts to building sophisticated, intelligent applications using Microsoft's powerful Semantic Kernel framework.\nIn today's rapidly evolving technological landscape, AI integration has moved from a luxury to a necessity for modern applications. This course equips you with the practical skills and theoretical knowledge to stay ahead of the curve, making you an invaluable asset to any development team or organization looking to leverage AI's transformative potential.\nBegin your AI mastery journey with a solid foundation in Large Language Models (LLMs) before diving into the robust capabilities of Azure AI Foundry, where you'll learn to deploy, customize, and optimize OpenAI models for your specific needs. You'll explore model deployment strategies, create effective user prompts, manage chat history, and craft system prompts that yield optimal results.\nThe core of the course focuses on Semantic Kernel's single Agent orchestration framework, teaching you to seamlessly connect with multiple model providers including Azure OpenAI, standard OpenAI endpoints, and various Inferencing APIs. You'll also master working with local models through ONNX, Ollama, and Hugging Face integrations, giving you ultimate flexibility in your AI implementation approach.\nTake your applications to new heights by learning to create intelligent plugins through multiple approaches:\nBuilding native plugins that integrate directly with your application's functionality\nCreating OpenAPI plugins that leverage existing API endpoints to extend AI capabilities\nIntegrating cutting-edge Model Context Protocol (MCP) servers for enhanced model interactions\nImplementing Retrieval-Augmented Generation (RAG) plugins for private data\nPractical implementation is emphasized throughout, with dedicated sections on integrating Semantic Kernel into ASP.NET applications and working with multimodal models to handle various data types including text, images, and more.\nWhether you're a seasoned developer looking to add AI capabilities to your toolkit, or a business analyst seeking to leverage AI for data-driven insights, this course provides the perfect balance of theoretical understanding and hands-on application development.\nNo extensive AI background required—just bring your basic .NET knowledge and prepare to build the next generation of intelligent applications that will transform user experiences, streamline operations, and unlock new business opportunities!",
      "target_audience": [
        "Developers and Software Engineers looking to improve their AI skills by leveraging Semantic Kernel to create AI Infused Applications",
        "Business Analysts and Project Managers interested in leveraging AI for Converting Data into Actionable Insights and Optimizing Business Processes"
      ]
    },
    {
      "title": "Introduction to Microservices with Python (with Next.JS)",
      "url": "https://www.udemy.com/course/introduction-to-microservices-with-python-and-nextjs/",
      "bio": "Master the fundamentals of microservices with Python, from API design to deployment, with real-world applications.",
      "objectives": [
        "Learn and Understand how to decompose applications into small, autonomous services, each performing a single business function.",
        "Create and deploy highly responsive scalable solutions using Microservices Architecture.",
        "Complete a case study for a shopping application with multiple management end-points.",
        "Master API design by learning the proper workflow for creating, documenting, and testing you API end-points",
        "Learn about communication protocols such as HTTP and RPC for API design.",
        "Containerize Microservices with Docker for portable and scalable solutions.",
        "Implement Basic Monitoring, Logging, and Error Tracking tools to observe the behavior and health of their microservices in real-time.",
        "Practice Deployment Strategies including deploying services to cloud platforms and understanding scaling strategies.",
        "Master synchronous (REST, HTTP) and asynchronous (Kafka, RabbitMQ) approaches for inter-service communication.",
        "Design and Implement RESTful APIs",
        "Implement and Use Remote Procedure Calls (RPC)",
        "Use Next.JS and reactive UI to utilize your API."
      ],
      "course_content": {},
      "requirements": [
        "Students will need to have a working knowledge of Python and some knowledge of OOP.",
        "It would be helpful (but not required) to have good understanding of Design Patterns.",
        "For UI examples we use Next.JS - no previous knowledge is needed as we offer in-course tutorial and solution explainers."
      ],
      "description": "In today’s fast-paced tech world, businesses demand applications that are agile, scalable, and resilient to change.\n\nMicroservices architecture has emerged as the gold standard for building such applications, allowing organizations to break down complex systems into manageable, independent services. This course, Introduction to Microservices with Python, is your gateway to understanding, designing, and implementing microservices architecture, all while gaining hands-on experience with real-world use cases.\n\nWhether you’re a software developer, a systems architect, or simply someone curious about modern software design patterns, this course is crafted to provide you with practical knowledge and the confidence to build modular, scalable, and robust applications.\n\nOn top of all that, we offer an in-course Next.JS tutorial as examples of real life of API utilization for web applications.\n\nWhat You'll Learn:\nMicroservices Fundamentals: Understand the core principles of microservices, their advantages over monolithic architectures, and how to decide when microservices are the right choice.\nDesigning APIs: Learn how to create RESTful APIs that are intuitive, secure, and well-documented, enabling seamless communication between services.\nInter-Service Communication: Delve into both synchronous and asynchronous communication methods, including Remote Procedure Calls (RPC) and message queues, and understand their trade-offs in real-world scenarios.\nContainerization with Docker: Discover how Docker simplifies microservices development and deployment by containerizing services for portability and scalability.\nReal-World Integration: Learn how microservices work in real-world applications, integrating features such as user management, order processing, and inventory tracking.\nDeployment Strategies: Explore strategies to deploy microservices to the cloud, ensure high availability, and scale your services effectively as demand grows.\nMonitoring and Logging: Master the basics of monitoring and logging to track service performance, diagnose issues, and maintain system reliability.\nWe use Next.JS as a client-side real life examples of API utilization. We offer an in-course comprehensive tutorial for those who do not know Next.JS and reactive UI.\n\nWhy Learn Microservices?\nMicroservices architecture isn’t just a trend; it’s a transformative approach that powers some of the world’s most complex systems, from e-commerce platforms to financial services and beyond. By learning microservices with Python, you’ll gain skills that are not only in high demand but also foundational for building modern, distributed systems.\nThis course emphasizes practical, real-world experience. Instead of focusing solely on theory, we walk you through hands-on projects where you’ll design and implement services like user authentication systems, order processing workflows, and inventory management modules. Through these projects, you’ll encounter real challenges—like scaling, error handling, and service-to-service communication—and learn how to solve them using proven industry techniques.\n\nReal-World Experience:\nThroughout the course, we simulate the kinds of problems faced in real-world microservices development. You’ll learn how to:\nHandle service failures gracefully: Ensure your application remains operational even when individual services fail.\nImplement scalability: Design systems that can handle increased traffic without degradation in performance.\nMaintain modularity: Build services that are independently deployable, testable, and replaceable without disrupting the entire system.\nOptimize performance: Choose the right communication method (e.g., REST vs. RPC vs. message queues) for your specific use case.\nSecure your services: Understand authentication and authorization mechanisms in a microservices context.\n\nWhether you’re building your first microservices application or looking to deepen your understanding of distributed systems, this course offers a blend of foundational knowledge and practical application that sets you up for success.",
      "target_audience": [
        "Python developers who want to learn how to architect and deploy scalable solutions using Microservices Architecture.",
        "Developers and engineers looking to transition from monolithic to microservices architecture.",
        "Software architects eager to design modular, scalable systems.",
        "Python enthusiasts who want to apply their skills to cutting-edge architectural patterns.",
        "Tech professionals aiming to stay competitive in a rapidly evolving industry."
      ]
    },
    {
      "title": "DeepSeek R1: Run locally, GenAI, Prompts, Development",
      "url": "https://www.udemy.com/course/deepseek-r1/",
      "bio": "In this course: Full DeepSeek-R1 Guide, DeepSeek-V3, Self-Hosting AI on macOS/PC/Linux, Local Install, Ollama, LM Studio",
      "objectives": [
        "Understand the fundamental workings of DeepSeek-R1 and explore its various use cases.",
        "Create effective prompts to generate precise and relevant responses from DeepSeek-R1.",
        "Run DeepSeek-R1 locally on your own PC/macOS/Linux system or on a VPS - with a visual interface.",
        "Apply advanced techniques such as context-aware queries, multi-step prompting, and style control.",
        "Utilize DeepSeek-R1 for task automation, research support, and high-quality content creation."
      ],
      "course_content": {
        "Getting Started": [
          "Introduction"
        ],
        "DeepSeek-R1: Overview": [
          "What is DeepSeek-R1: How does it work?",
          "How to use DeepSeek-R1: DeepSeek Account Setup, Browser Interface, DeepThink"
        ],
        "Self-Host DeepSeek-R1": [
          "Self-Hosting: Run DeepSeek-R1 locally using Ollama | Linux/macOS/Windows",
          "Self-Hosting: Run DeepSeek-R1 locally on your own PC using LM Studio"
        ],
        "DeepSeek-R1: Use Cases": [
          "DeepSeek for Programming",
          "DeepSeek for Marketing",
          "DeepSeek for Project Management",
          "DeepSeek for Office Work"
        ],
        "DeepSeek Prompt Templates": [
          "DeepSeek Prompt Templates"
        ]
      },
      "requirements": [
        "No prior knowledge required. The course is suitable for beginners and advanced users alike.",
        "A computer or smartphone with internet access is needed."
      ],
      "description": "Welcome to an in-depth exploration of DeepSeek R1, the groundbreaking AI model that’s redefining what’s possible with large language models. I’m Ole, an IT instructor from Berlin, Germany, and in this course, I’ll guide you through everything you need to know to master DeepSeek. You’ll discover what makes this model unique, how to optimize your workflow with it, and how to unlock its full potential for various real-world applications. Whether you're a developer, researcher, or AI enthusiast, this course will equip you with the skills to effectively integrate DeepSeek into your projects.\nBut that’s not all—I'll also show you how to install DeepSeek locally on your system for offline use, ensuring full control over your AI environment. Plus, you’ll learn how to build a user-friendly visual interface that allows you to interact with the model just like ChatGPT. By the end of this course, you’ll have hands-on experience and the confidence to work with DeepSeek R1 efficiently, making it a powerful tool in your AI toolkit. Get ready to take your AI skills to the next level!\n\n\nTLDR:\nGain a deep understanding of DeepSeek R1 and its unique capabilities.\nLearn how to install and run DeepSeek locally for offline use.\nMaster effective workflows to maximize the model’s potential.\nBuild a visual interface for seamless interaction",
      "target_audience": [
        "Professionals looking to enhance productivity with DeepSeek-R1 (e.g., marketing, customer service, IT, education).",
        "Students and researchers who want to leverage DeepSeek-R1 for information retrieval and writing.",
        "Content creators, writers, and editors seeking inspiration and AI-assisted text generation.",
        "Tech enthusiasts who want to deepen their understanding of AI-driven language models."
      ]
    },
    {
      "title": "SAP RISE",
      "url": "https://www.udemy.com/course/sap-rise/",
      "bio": "RISE with SAP – Transforming Enterprises to the Cloud",
      "objectives": [
        "Understand the structure, scope, and strategic vision behind RISE with SAP",
        "Explain the four key pillars: Realize, Innovate, Sustain, and Enhance",
        "Distinguish between SAP S/4HANA Cloud Public and Private Editions",
        "Explore the role of SAP Business Technology Platform (BTP) in extensibility and integration",
        "Apply SAP Signavio and Business Process Intelligence (BPI) for process transformation",
        "Utilize embedded AI, machine learning, and RPA within RISE architectures",
        "Compare RISE with GROW with SAP for SMEs and understand their use cases",
        "Plan migrations using the three supported paths: New Implementation, System Conversion, Selective Data Transition",
        "Understand deployment decision factors and industry-specific implementation scenarios",
        "Leverage the Digital Discovery Assessment (DDA) tool to prepare for cloud adoption",
        "Interpret the shared responsibility model for security and compliance",
        "Review 24/7 surveillance, patching, and vulnerability management mechanisms",
        "Align with key compliance frameworks: GDPR, DORA, and NIST-CSF",
        "Explore AI-driven threat detection and automated response capabilities",
        "Navigate SAP Activate methodology across Prepare, Explore, Realize, and Deploy phases",
        "Implement quality assurance using Q-Gates and SAP Cloud ALM",
        "Evaluate partner-delivered services: advisory, implementation, AMS",
        "Understand licensing, consumption credits, and cost optimization within RISE",
        "Identify key roles of hyperscalers (AWS, Azure, GCP, Alibaba) in cloud delivery",
        "Integrate with third-party systems and build extensibility via Steampunk and BTP"
      ],
      "course_content": {
        "Introduction to RISE with SAP": [
          "What is RISE with SAP?",
          "Key pillars: Realize, Innovate, Sustain, Enhance",
          "History and motivation behind RISE (2021 launch)",
          "Market trends and strategic positioning",
          "Comparison with \"GROW with SAP\" for SMEs"
        ],
        "Core Components of RISE with SAP": [
          "SAP S/4HANA Cloud (Public and Private Edition)",
          "SAP Business Technology Platform (BTP)",
          "Why SAP launched RISE – market gap and vision.",
          "Business Process Intelligence (BPI)",
          "SAP Business Network (Ariba, Asset Intelligence, Logistics)",
          "Embedded AI, RPA, and machine learning capabilities"
        ],
        "Public vs Private Cloud Editions": [
          "Key differences in functionality, flexibility, and scope",
          "Deployment decision factors",
          "Industry use-cases",
          "Digital Discovery Assessment (DDA) Tool usage"
        ],
        "Security and Compliance in RISE": [
          "Shared responsibility model: What SAP manages vs customer",
          "24/7 surveillance, patching, and vulnerability management",
          "Compliance frameworks (e.g., GDPR, DORA, NIST-CSF)",
          "AI and automation in SAP’s detection and response process"
        ],
        "Business Process Transformation Journey": [
          "Starting points: ECC, S/4HANA, non-SAP",
          "Three migration paths: New implementation, System Conversion, Selective Data",
          "Clean Core principle and extensibility options",
          "Usage of Signavio and SAP BPI for process intelligence"
        ],
        "Contracting, Partners, and Infrastructure": [
          "One contract model (software + infra + services)",
          "Role of hyperscalers (AWS, Azure, GCP, Alibaba)",
          "Role of SAP partners: Implementation, AMS, advisory",
          "Licensing, consumption credits, and costing insights"
        ],
        "SAP Business Technology Platform (BTP) in Action": [
          "Key use cases: Application development, analytics, AI/ML",
          "Embedded ABAP (Steampunk) vs side-by-side extensibility",
          "Integration with third-party systems"
        ],
        "Application Lifecycle Management (ALM)": [
          "SAP Cloud ALM vs traditional ALM",
          "Role in project delivery and cloud operations",
          "Monitoring, testing, and change request workflows",
          "Integration with SAP Launchpad and Enable Now"
        ],
        "RISE Implementation Methodologies": [
          "SAP Activate Methodology for RISE",
          "SAP Active implementation phases (Prepare, Explore, Realize, Deploy)",
          "Partner-delivered transformation services",
          "Q-Gates and quality assurance"
        ]
      },
      "requirements": [
        "Basic understanding of SAP"
      ],
      "description": "RISE with SAP represents a revolutionary shift in how enterprises approach digital transformation, cloud adoption, and business innovation. This comprehensive course provides an expert-level journey into the strategic, technical, and operational dimensions of RISE, SAP’s bundled transformation-as-a-service offering. Starting with a deep dive into “What is RISE with SAP,” the course outlines its four key pillars—Realize, Innovate, Sustain, and Enhance—and explores the history and market forces that led to its 2021 launch. Learners will analyze SAP’s vision for addressing cloud transformation gaps and compare RISE with “GROW with SAP” to distinguish enterprise and SME positioning.\nThrough in-depth sessions, participants will explore the architecture of SAP S/4HANA Cloud in both Public and Private Editions, the foundational role of the Business Technology Platform (BTP), and the power of Business Process Intelligence (BPI) and SAP Business Network components like Ariba, Asset Intelligence, and Logistics. Embedded AI, machine learning, and RPA are dissected to show how automation enhances ERP operations. Critical comparisons are made between functionality, flexibility, and extensibility models, including Steampunk and side-by-side development. The course explains deployment decision factors, real-world industry use cases, and SAP’s migration strategy from ECC or non-SAP systems using new implementation, system conversion, or selective data transition paths.\nLearners will gain clarity on security and compliance via the shared responsibility model, 24/7 monitoring, patching, and adherence to GDPR, DORA, and NIST-CSF standards. Tool-based execution with the Digital Discovery Assessment (DDA), Signavio, SAP ALM, and Launchpad are demonstrated alongside governance mechanisms like Q-Gates. Emphasis is also placed on partner-led services, hyperscaler collaboration, licensing, and the Activate methodology phases—Prepare, Explore, Realize, and Deploy—guiding transformation with clean core principles. This course empowers professionals to master RISE with SAP from architecture to adoption.",
      "target_audience": [
        "SAP Functional Consultants – those working in Finance, Logistics, Procurement, or Production who want to transition to cloud-enabled transformation models.",
        "SAP Technical Consultants and Developers – seeking to understand how extensibility (e.g., Steampunk, BTP) and cloud integration work within the RISE framework.",
        "Enterprise Architects – responsible for system landscape modernization and aligning business architecture with SAP S/4HANA and BTP platforms.",
        "IT and Program Managers – overseeing digital transformation, system conversion, and end-to-end project execution within SAP ecosystems.",
        "CIOs, CTOs, and SAP Practice Heads – making strategic decisions on ERP modernization, hyperscaler partnerships, licensing models, and long-term TCO.",
        "Business Process Owners and Analysts – involved in process reengineering and optimization using tools like SAP Signavio and Business Process Intelligence.",
        "SAP Delivery and Project Teams at Partner Organizations – including those from GSIs or boutique consulting firms delivering SAP implementation and AMS services.",
        "Solution Advisors and Pre-Sales Professionals – who must articulate the value of RISE, demonstrate tools like DDA, and build business cases.",
        "Compliance and Security Officers – looking to understand how RISE aligns with frameworks like GDPR, DORA, and NIST-CSF.",
        "Professionals Preparing for S/4HANA Migration – especially those transitioning from ECC, hybrid, or non-SAP ERP systems."
      ]
    },
    {
      "title": "Algorithms & Big O - 101 Basics Course: CRUSH The Interview!",
      "url": "https://www.udemy.com/course/technical-interview-review/",
      "bio": "A review of important key computer science concepts. This course will help you prepare for any Technical Interview!",
      "objectives": [
        "By the end of this course, students will have a better understanding of the basic concepts in software and will be better prepared for their current job roles, school or the most likely case => AN UPCOMING technical interview!!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basics, Arrays, Graphs and Stacks": [
          "Lesson 1: Basics Review",
          "Lesson 2: Arrays, ArrayLists, Hash Tables and Stacks/Queues",
          "Lesson 3: Graphs, Trees and Heaps"
        ],
        "Sort, Search and Big O": [
          "Lesson 4: Merge Sort, Bubble Sort, Quick Sort",
          "Lesson 5: Breadth First, Depth First and Binary Search",
          "Lesson 6: Big O, Big O Time and Big O Space"
        ],
        "Recursion, Dynamic Programming and Interview Tips and Tricks": [
          "Lesson 7: Recursion and Dynamic Programming",
          "Lesson 8: Basic Interview Overview",
          "Lesson 9: Tips and Advice for Whiteboard Coding"
        ],
        "Conclusion": [
          "Conclusion",
          "ALL DOWNLOADS FOR COURSE"
        ]
      },
      "requirements": [
        "Knowledge of programming and software development"
      ],
      "description": "CRUSH YOUR NEXT TECHNICAL INTERVIEW with the tips and tricks you learn in this incredible course!\nWHY SHOULD YOU TAKE THIS COURSE?\nIf you've not had a technical interview for a while or at all, then this course will help you prepare by brushing you up on the basic concepts again.  This course is great for those who are actively looking for work again in the TECH INDUSTRY or for those who are new students looking to get into a software engineering position.\n\n1. Go over the basics FAST rather than spending days, you can learn the basics in a short period of time\n\n2. Focus your time on applying the information learned here to any upcoming technical interviews\n\n3. Gain MASSIVE confidence going into those next technical interviews and have a better chance at getting the job!\n\nIf you've got a technical interview coming up and need all the help you can get to CRUSH THE INTERVIEW, then THIS COURSE IS FOR YOU!\n\nI was once like you, FRUSTRATED with having to relearn everything just so I could get into the highly competitive tech industry again.  I had not been back in school for a while after working for years!  I didn't know where to start and I wish I had a course like this that would just give me all the basics in a short period of time so I could focus more on learning what I needed to GET THE JOB!! Now I'm here to share with you the basics including some amazing tips and advice so you can go into these technical interviews and CRUSH THE INTERVIEW!\n\nHere you will learn some of the BASICS from variables to loops to even advanced items like Big O and Recursion!  Finally you'll learn tips and tricks that have helped me get job offers due to my confidence in these various technical interviews!\n\nINSTRUCTOR INVOLVEMENT:  Due to the busy schedule Nav has as he is developing new games and apps, speaking at seminars around the world, running his various companies,  building new programs and courses, and ofcourse spending time with his  family, fans and other students, etc. it will naturally be a challenge  for Nav to be available all the time.  Note: Please  make sure your questions are related to this course when asking  questions as Nav has several courses on various topics. If you have a  question on another course or topic that Nav teaches that is  outside the scope of this course, please ask it in that specific webinar  or discussion section.\nWHO SHOULD TAKE THIS COURSE?\nThis course is aimed at software professionals who are actively searching for employment in the tech industry OR are students in university who are looking to get a job. The assumption is that you already know most of this stuff and that you simply are reviewing the concepts in this course. The GOAL is not to teach you these concepts as you would learn in school but to simply brush up your skills and help you to do better in your technical interviews and hopefully even LAND A JOB! (If you do, please let me know! I love hearing success stories from my students!)\nWHY TAKE THIS COURSE?\n1. You're actively job searching and anticipate you will have a technical interview coming up\n2. You're looking to save time and money rather than doing searches and reading books on the topics, you just want the fastest way to get the information you need so you can focus on the upcoming interviews\n3. You want to increase your CHANCES of getting a job by learning methods and tips to give you an ADDED EDGE over your competition.\n\nCRUSH THAT INTERVIEW NOW - TAKE ACTION TODAY!\nImportant information before you enroll:\nIn case you are not fully satisfied with the course, don't forget you are covered by a 30 day money back guarantee, full refund, no questsions asked!\nOnce enrolled, you have unlimited, lifetime access to the course!\nYou will have instant and free access to any updates I may add to the course over time.",
      "target_audience": [
        "Software Developers who are looking to brush up on their basics and prepare to apply for a technical interview."
      ]
    },
    {
      "title": "JavaScript Best Practices - A Hands-On Professional Approach",
      "url": "https://www.udemy.com/course/javascript-best-practices-a-hands-on-approach/",
      "bio": "Write cleaner, faster, more secure and performance Optimized JavaScript with real-world hands-on coding",
      "objectives": [
        "Mastery of JavaScript Development Tools and Environments",
        "Enhanced Code Quality and Testing Skills",
        "Implementing Quality Assurance Techniques",
        "Advanced JavaScript Features and Ecosystem Knowledge",
        "Understanding JavaScript Security Best Practice",
        "Implementing Effective Debugging Techniques",
        "Managing Project Dependencies",
        "Utilizing Modern JavaScript Syntax and Features"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Course Overview and Objectives",
          "Downloadable Code Files (Sections 2–12)",
          "Word Of Advise On Gen AI Usage For Assignments",
          "Quiz on Introduction",
          "What is the future of JavaScript ?",
          "Importance of JavaScript Best Practices",
          "Best Practices Importance",
          "Exploring the JavaScript Ecosystem",
          "Introductory Role Play",
          "Ecosystem Quiz"
        ],
        "Setting Up Your Development Environment": [
          "Setup and Customize Visual Studio Code for Development",
          "Setting Up the JavaScript Development Environment",
          "Familiarize yourself with Visual Studio Code (VS Code) as a primary code editor",
          "Assignment 1: Test Your Familiarity With VS Code Editor",
          "Explore the key features and functionalities of VS Code - Overview",
          "IntelliSense Overview",
          "Debugging Features and Tools (JavaScript Emphasis)",
          "Debugging Features",
          "Git Integration",
          "Git Integration Quiz",
          "Install Node.js and npm on Your Dev Environment",
          "Understand the role of Node.js in JavaScript development",
          "Set up a basic Node.js project and run scripts",
          "Node and npm Practice Test",
          "Customizable Keybindings",
          "Identify and Install Essential VS Code Extensions",
          "Setting Up the Dev Environment"
        ],
        "Introduction to Version Control Systems": [
          "Understand the Basics of Git for Version Control",
          "How to Setup Git Repositories, Manage Branches and Create Pull Requests",
          "Git Repositories",
          "Implement Best Practices for Clear and Concise Commit Messages",
          "Learn How to Effectively Use Pull Requests for Collaboration",
          "Pull Request Quiz",
          "Importance of Code Reviews in Maintaining Code Quality",
          "Best Practices for Handling Merge Conflicts and Maintaining a Clean History",
          "Version Control Kickoff: Aligning on Git Best Practices for Team Collaboration"
        ],
        "Code Organization and Structure": [
          "Learn the benefits of organizing code into modules",
          "How Modules Make Your JavaScript Code Easy to Maintain and Reuse?",
          "Modules Assignment",
          "Create and Structure JavaScript Modules Effectively",
          "Immediately Invoked Function Expression - Detailed",
          "Revealing Module Pattern in Details",
          "Asynchronous Module Definitions",
          "Async Module Coding Exercise",
          "CommonJS Explained in Detail",
          "ES6 Modules Detailed",
          "Build a Task Management App Using ES6 Modules",
          "ES6 Quiz",
          "Real World Weather API Integration Application",
          "Debugging the Real-World Weather App",
          "JavaScript Module Patterns and Syntax",
          "Learn How to Use npm for Managing Project Dependencies",
          "Implementing Best Practices in Dependency Management",
          "Automated Dependency Management Using Dependabot with GitHub Actions",
          "Best Practices in Dependency Management",
          "Code Organization and Structure"
        ],
        "Coding Style and Conventions": [
          "Understand the importance of maintaining a consistent coding style",
          "Learn Key Coding Conventions That Enhance Readability and Maintainability",
          "Install and Configure ESLint to Enforce Coding Standards",
          "Configuring ESLint for JavaScript Code Quality",
          "Set Up Prettier for Automated Code Formatting",
          "Integrating ESLint with Prettier",
          "Setting Up Husky for Pre-commit Hooks",
          "Style Guide Discussion: Enforcing Consistent Coding Standards",
          "End Of Section Quiz"
        ],
        "Variable Declaration and Scope": [
          "Understanding var, let, and const",
          "Best Practices in Using let and Const and Avoid Common Pitfalls",
          "Best Practices for let and const",
          "Avoid Unintended Mutation of Data in Const",
          "Scope Strategy Roundtable: Writing Predictable JavaScript"
        ],
        "Error Handling and Debugging": [
          "Understand the Importance of Error Handling in JavaScript",
          "Learn How to Implement Error Handling Using Try-Catch",
          "Error Handling Quiz",
          "Best Practices for Writing Robust and Resilient JavaScript Code",
          "Resilience Workshop: Writing Robust JavaScript"
        ],
        "Asynchronous JavaScript": [
          "Understanding Asynchronous Programming in JavaScript",
          "Learn how to use async/await to handle asynchronous operations cleanly ?",
          "Async/Await Assignment",
          "Async Await Example (Walkthrough with VS Code)",
          "Async Await Syntax (Walkthrough with VS Code)",
          "Async-Await Coding Step By Step",
          "Simplifying Async Flows (Walkthrough with VS Code)",
          "Error Handling in Async Code (Walkthrough with VS Code)",
          "Retry Mechanism in Async Code (Walkthrough with VS Code)",
          "Parallel Execution in Async Programming",
          "Timeout Pattern with Async Programming",
          "Async Patterns Sync: Clean and Efficient JavaScript Workflows"
        ],
        "Testing & QA": [
          "Understand the Basics of Unit Testing",
          "Learn How to Write Unit Tests Using Jest",
          "Advanced Testing Techniques with Jest",
          "Best Practices in Unit Testing",
          "Testing and Quality Assurance",
          "Test Strategy Briefing: Building Confidence with Unit Tests"
        ],
        "Security Best Practices": [
          "Understand common security threats in JavaScript applications",
          "How Cross Site Scripting Works ?",
          "Understanding Insecure Deserialization",
          "How to Prevent Insecure Deserialization?",
          "Prevent Insecure Deserialization by Validating Input",
          "Use Signed Data (JWT) to Prevent Insecure Deserialization",
          "Prevent Insecure Deserialization by Using Secure Libraries",
          "Restricting Object Creation to Prevent Insecure Deserialization",
          "XSS Attacks and Preventing Insecure Deserialization",
          "Server Side Injection - SQL Injection",
          "Server Side Injection - Command Execution Attack",
          "Cross Site Request Forgery (CSRF)",
          "Understanding and Mitigating CSRF Attacks and Server-Side Injection",
          "Security Standup: Fortifying Our JavaScript Stack"
        ]
      },
      "requirements": [
        "Skills and Experience: Basic Knowledge of JavaScript: Understanding of fundamental JavaScript concepts such as variables, loops, functions, and objects. Experience with basic JavaScript coding and syntax.",
        "Familiarity with HTML and CSS: Basic knowledge of HTML and CSS, as JavaScript is often used in conjunction with these technologies.",
        "Experience with a Code Editor: Some familiarity with using a code editor, preferably Visual Studio Code, as it will be used extensively throughout the course.",
        "Basic Command Line Skills: Basic understanding of navigating and executing commands in a command-line interface (CLI).",
        "Tools and Equipment: Computer with Internet Access: A reliable computer (Windows, macOS, or Linux) with internet access for downloading tools and accessing course materials.",
        "Visual Studio Code: Installation of Visual Studio Code (VS Code), which will be used for coding exercises and examples. Instructions for downloading and setting up VS Code will be provided in the course.",
        "Nodejs and npm: Installation of Nodejs and npm (Node Package Manager), which are required for managing dependencies and running JavaScript outside the browser. Instructions for downloading and setting up Nodejs and npm will be provided in the course.",
        "Git: Installation of Git for version control. Instructions for downloading and setting up Git will be provided in the course.",
        "Lowering the Barrier for Beginners: This course is designed to be accessible for developers with basic JavaScript knowledge. If you are new to JavaScript or need a refresher, there are numerous free resources and introductory courses available online that can help you get up to speed before starting this course. Our aim is to make JavaScript best practices approachable and understandable, even if you are relatively new to programming. We will provide step-by-step guidance and practical examples to help you grasp each concept effectively. We encourage learners to ask questions and seek clarification on any topics they find challenging. Our goal is to ensure you feel confident and supported throughout your learning journey. By ensuring you meet these prerequisites, you will be well-prepared to fully engage with the course content and achieve the learning outcomes successfully."
      ],
      "description": "Are you ready to elevate your JavaScript skills to a professional level? This course, JavaScript Best Practices - A Hands-On Approach, is designed to take you beyond syntax and fundamentals. Dive deep into the techniques, principles, and real-world applications that will make your JavaScript code clean, maintainable, and resilient. Whether you're a developer, architect, or QA engineer, this course delivers essential knowledge for crafting reliable, high-quality JavaScript.\nWhat Makes This Course Stand Out?\nComprehensive Coverage of Best Practices: Learn how to organize your code, handle errors effectively, manage asynchronous operations, and write secure JavaScript applications. This course covers the critical areas that matter most in professional-grade JavaScript development.\nReal-World Application: Not just theory—this course includes hands-on projects and examples, including a weather app integration, to demonstrate best practices in action. You’ll not only learn the \"how\" but also understand the \"why\" behind these practices.\nEngaging Exercises and Assessments: Reinforce your learning with quizzes, assignments, and practice tests after each section. Test your understanding and apply what you’ve learned in realistic scenarios, ensuring that you’re not just watching but actively building your skills.\nPractical Code Resources: With each lesson, download code snippets and example files to help you solidify key concepts. These resources are there for you to reference, explore, and integrate into your own projects as you go.\nExpert Guidance on Tooling: Master the tools every modern JavaScript developer needs, from VS Code customizations to Git, ESLint, Prettier, Jest, and Node.js setup. Learn to maximize your development environment for efficiency and productivity.\nSecure Coding Techniques: Go beyond the basics with dedicated modules on security best practices, covering cross-site scripting (XSS), cross-site request forgery (CSRF), deserialization vulnerabilities, and more. Security isn’t an afterthought—it’s built into the code you’ll write.\nCourse Highlights\nThis course includes:\nDetailed Modules: Each module is dedicated to a specific area, from coding style and conventions to asynchronous programming, version control, and testing.\nStep-by-Step Guidance: Follow along with in-depth explanations of concepts like error handling, dependency management, and the latest ES6+ features.\nInteractive Learning Environment: Access our Discord server, where you can interact with fellow students and get guidance directly from the instructor. Join a community focused on continuous learning and improvement.\nCourse Contents Overview\nIntroduction to JavaScript Best Practices: Understanding why best practices matter and how to stay current in the fast-evolving JavaScript landscape.\nSetting Up Your Development Environment: Complete setup guidance to maximize VS Code’s capabilities for JavaScript development.\nVersion Control and Git: Practical skills for managing code changes, using branches, and collaborating effectively.\nCode Organization and Modularity: Essential techniques for structuring JavaScript applications using ES6 modules and modern patterns.\nCoding Style and Conventions: Write clean, consistent code with ESLint, Prettier, and pre-commit hooks for quality control.\nError Handling and Debugging: Robust error-handling techniques and debugging tools that simplify maintenance and reduce errors.\nAsynchronous JavaScript: Grasp async/await, error handling in async flows, and advanced async patterns.\nTesting and Quality Assurance: Discover unit testing with Jest and how to ensure high-quality code.\nSecurity Best Practices: In-depth training on handling common JavaScript security issues and coding defensively.\nJavaScript Performance Optimization: Optimizing JavaScript performance is critical for building fast, efficient, and scalable web applications. Poorly optimized code can lead to slow execution, excessive memory usage.\nJoin the Course Today\nEnroll now to transform your JavaScript skills. By the end of this course, you’ll be ready to build applications that not only work but are maintainable, secure, and scalable. Ready to write JavaScript that makes a difference? Join us and begin your journey to JavaScript mastery!",
      "target_audience": [
        "JavaScript Developers at all level curious about the best practices for JavaScript.",
        "This course is for developers, architects and QA engineers wishing to refresh the best practices in the language.",
        "Anyone having basic programming knowledge with an intent to delve deeper into the best practices of JavaScript development."
      ]
    },
    {
      "title": "Learn PagerDuty",
      "url": "https://www.udemy.com/course/get-alerted-by-pagerduty/",
      "bio": "Ready yourself! Graduate with real skills in PagerDuty Monitoring!",
      "objectives": [
        "Learn the architecture of PagerDuty along with concepts like Digital Operations Management",
        "Create Schedules and Escalation Policies to manage your work and teams",
        "Add and Configure User Roles and Permissions",
        "Work with multiple Integrations and Extensions like Slack and DataDog",
        "Develop your own custom incidents"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course",
          "Why PagerDuty",
          "PagerDuty Costing",
          "PagerDuty Architecture",
          "Oh oh, something broke!",
          "Course Docs",
          "Your First Steps into Pagerduty!"
        ],
        "A Sample WorkFlow with PagerDuty": [
          "Overview",
          "What is Digital Operations Management",
          "What is DataDog",
          "Setup the Project",
          "Adding Users",
          "What in a Workflow and how we use them",
          "Create a schedule in PagerDuty",
          "Adding Teams",
          "Adding Escalation Policies",
          "Incidents",
          "Creating Basic Services",
          "Response Plays",
          "Time based and intelligent alerts",
          "Quiz 2",
          "Building the Status Page"
        ],
        "PagerDuty Skills": [
          "Overview",
          "User Settings",
          "Running Ruby",
          "Adding many users from a CSV File",
          "Extensions (with Slack)",
          "Users and Extensions Test",
          "Custom Actions",
          "Maintenance Windows",
          "Dynamic Notifications",
          "RuleSets",
          "PostMortem Reports",
          "Email Filtering",
          "Jira Integration",
          "Advanced Skills in PagerDuty",
          "Final Notes"
        ],
        "Farewell": [
          "GoodBye?"
        ]
      },
      "requirements": [
        "An Internet connection",
        "A working Computer where you are admin",
        "A desire to learn and Crush It!",
        "Optional: Basic usage for Terminal/Command Prompt"
      ],
      "description": "Trouble managing your support teams? Delays causing you to loose customers? In 2020 you can't have customers telling you about issues.\nYou need to be pro-active. So what is this course about? (In very few words)\nCreate Schedules and Escalation Policies\nLearn Concepts that should be applied along with a tool like PagerDuty\nMaster Cool Street Tricks like uploading multiple users via CSV and Ruby\n\n\nWe will learn how to Integrate with different apps in different ways. Work with different incidents, services and strategize your response plays. Group alerts using algorithms to reduce spam and setup users to take advantage of all this.\nWe are not going to claim you will know everything about PagerDuty, but you will know enough to get work done and know where to look for the next bit of knowledge.  Did I mention quizzes and assignments? Well they will be used for you to try out some concepts yourself in practice.\nReally there are no prerequisites, even if we use another technology it will be explained. This is a foundation course and does not expect you to know anything about PagerDuty.\nLet's get started on this adventure  together. Reach out to us the moment you have any issue!",
      "target_audience": [
        "Students trying to get a quick grasp of PagerDuty",
        "Developers looking to setup a rotating schedule to manage support",
        "Support teams who have used another tool and are now looking to switch to PagerDuty",
        "Those who like to have support equally distributed"
      ]
    },
    {
      "title": "A.I. Video To Text Transcriber App with Python and Tkinter",
      "url": "https://www.udemy.com/course/create-an-openai-video-to-text-transcriber-app-with-tkinter/",
      "bio": "Learn to Connect Your Python Apps To OpenAI For Artificial Intelligence The Fast And Easy Way!",
      "objectives": [
        "Intro To the OpenAI Speech To Text Transcriber Whisper-1 Model API",
        "Intro Use of Python",
        "Intro Use of Intermediate Tkinter",
        "Intro Use of TTKBootstrap Tkinter Library"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Install Python",
          "Install Sublime Text and Git Bash Terminal",
          "Create a Virtual Environment",
          "Install Libraries",
          "Create App Framework"
        ],
        "Build Out The Tkinter GUI": [
          "Create The Main Text Box Widget",
          "Add a Frame and Buttons",
          "Open File Dialog Box",
          "Get The Video Info",
          "Save AS Dialog Box",
          "Convert Video to Audio MP3 File",
          "Check For Less Than 25mb File Size",
          "Clear The Screen"
        ],
        "OpenAI Artificial Intelligence API": [
          "Introduction to OpenAI",
          "Transcribe Video/Audio File Using OpenAI",
          "Copy Text To Clipboard",
          "Save Transcribed Text A To Text File"
        ],
        "Upload Code To Github": [
          "Create An SSH Key",
          "Add SSH Key To Github Account",
          "Push Code To Github"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No special tools are necessary to take this course",
        "A Basic Understanding of Python and TKinter Is Helpful"
      ],
      "description": "In this course we'll build a cool GUI app using Python and Tkinter (and ttkbootstrap the modern looking Tkinter library) that connects to the OpenAI Whisper-1 Model to convert video to text.\n\n\nYou'll be surprised just how quickly you can create some pretty cool looking apps that are powered by state of the art Artificial Intelligence!!\n\n\nOpenAI is the maker of ChatGPT, and their Whisper-1 model allows you to upload video or audio files to their artificial intelligence model, and have it convert those files to text transcriptions!\n\n\nWe'll discuss how to connect to OpenAI with an API Key, query the engine, and parse the responses in the correct way.\n\n\nWe'll use the TTKBootstrap library for Python and Tkinter that will allow our app to look very cool and modern (compared to stodgy old looking Tkinter).  You don't need any experience with Tkinter or TTKBootstrap to take this course, I'll walk you through it all very easily.\n\n\nWe won't dive into TTKBootstrap in great detail in this course, we'll just use bits of it here and there to make our app look more modern.  So if you have no experience with TTKBootstrap (or Tkinter at all), you won't have any trouble following along; I'll walk you through it step by step!\n\n\nWhy would you want to build an app that transcribes video?  TONS of reasons!  Maybe you want to convert your video to text and make blog posts out of them, or social media posts, or just offer better closed captioning text on the videos you post online.  There's a ton of reason to use this, and it's also just really fun to learn!",
      "target_audience": [
        "This course is geared towards anyone who's interested in programming API's from Open AI.",
        "This course is aimed towards beginers through intermediate Coders who want to learn the to build Apps With TKinter and Python"
      ]
    },
    {
      "title": "Complete MCP Developer Guide: Agents, Servers & Tools",
      "url": "https://www.udemy.com/course/complete-mcp-developer-guide-ai-agents-servers-tools/",
      "bio": "Step-by-step guide to AI agents with MCP: build servers, integrate APIs, and unlock real AI applications",
      "objectives": [
        "Understand the Model Context Protocol (MCP) ecosystem",
        "Build and deploy custom MCP servers",
        "Integrate authentication and security with MCP",
        "Connect MCP servers with real-world APIs and databases"
      ],
      "course_content": {
        "Get Started with the course: AI Agents & MCP": [
          "Introduction",
          "What You Will Learn",
          "Requirements",
          "Course Structure"
        ],
        "Building AI Agents Step by Step": [
          "Introduction to Agents",
          "What is an Agent?",
          "ReAct Prompting",
          "Tool Calling",
          "Agent Demo"
        ],
        "Mastering Model Context Protocol (MCP)": [
          "Introduction to MCP",
          "Resources",
          "MCP Overview",
          "Common MCP Clients",
          "Common MCP Servers",
          "[IMPORTANT] Fix MCP Support on VS Code",
          "Install MCP Servers",
          "Environment Setup",
          "Create a simple MCP Server",
          "Debug Your MCP Server",
          "Install Your MCP Server"
        ],
        "APIs for AI Developers — Foundations & Hands-On": [
          "Introduction",
          "Resources",
          "What is an API?",
          "Awesome APIs",
          "Bruno: API Clients",
          "HTTP Methods",
          "Notebook: Experiment with an API",
          "Conclusion",
          "Challenge"
        ],
        "Create a News MCP Server": [
          "Introduction",
          "Resources",
          "Materials We Will Use",
          "Environment Setup",
          "Create Your MCP Server With LLMs",
          "Code Review",
          "Debug with MCP Inspector",
          "Try It Out",
          "Challenge"
        ],
        "MCP Transports — How Agents Communicate": [
          "Introduction to Transports",
          "Client-Server Architecture",
          "JSON-RPC Messages",
          "Transports in MCP"
        ],
        "MCP Security — Protecting Your AI Systems": [
          "Introduction",
          "Resources",
          "Malicious MCP Servers",
          "Create a Malicious MCP Server"
        ],
        "Remote MCP Servers — Scaling AI Beyond Local": [
          "Introduction to Remote MCP",
          "Resources",
          "Streamable HTTP",
          "Create a Remote MCP Server",
          "Connect to a Remote MCP Server",
          "MCP on FastAPI",
          "Multiple MCP Servers on a Single App"
        ],
        "MCP Authentication — Securing Access": [
          "Introduction to Authentication",
          "Resources",
          "The Need for Auth in MCP",
          "Why not Local Auth in MCP?",
          "Shift to Remote MCP",
          "What is OAuth",
          "OAuth 2.1 Workflow",
          "Starting point: MCP Without Auth",
          "ScaleKit Auth Stack",
          "Endpoint Discovery",
          "Create Auth Middleware",
          "Token Validation",
          "Auth In Action"
        ],
        "Final Project: Deploy Your MCP Server": [
          "Introduction",
          "Resources",
          "Render",
          "Turn MCP Server into Remote MCP Server",
          "Add Auth to MCP Server",
          "Register on Scalekit",
          "Push to GitHub",
          "Deploy to Render",
          "Update ScaleKit Prod Config",
          "Demo of Deployment"
        ]
      },
      "requirements": [
        "Basic programming experience — familiarity with Python (variables, functions, and packages) is helpful, but not strictly required",
        "General understanding of APIs and web applications — knowing what an API is and how applications exchange data will make concepts easier to follow.",
        "Tools & setup — a computer with internet access, a code editor (such as VS Code), and Python installed. We’ll walk through environment setup step by step."
      ],
      "description": "Be ahead of the curve and build Real AI Agents with Model Context Protocol (MCP)\nAI is powerful — but on its own, it’s limited. Without access to tools, APIs, and real-world data, AI agents can’t do much beyond generating text.\nThat’s where Model Context Protocol (MCP) comes in. MCP is the new standard for giving AI real capabilities: connecting models to APIs, databases, and even your own computer.\nIn this hands-on course, you’ll learn step by step how to build, deploy, and integrate your own MCP servers — turning AI into something that actually does things.\n\n\nWhy This Course Over Others?\nMost resources on MCP are either incomplete or highly technical without context.\nThis course is different because it is:\n\n\nProject-based — you’ll build real servers, not just read theory\nUp-to-date — covering the latest MCP standard as it evolves\nPractical — you’ll connect MCP to tools you already use (APIs, email, calendar, databases)\nProven teaching style — trusted by over 500,000 learners worldwide\nSupported — with Q&A help and future updates as MCP grows\nIf you want the most practical, hands-on, and beginner-friendly path into MCP, this is the course.\n\n\nWhy Learn MCP?\nMCP is quickly becoming the backbone of next-generation AI. Early adopters are already using it to:\nAutomate workflows with custom AI assistants\nConnect AI to APIs, calendars, and emails\nFetch and process real-world data in real time\nBuild integrations that save time and money\nBy learning MCP now, you’ll be ahead of the curve — with skills companies and clients are actively searching for.\n\n\nWhat You’ll Learn\nBy the end of this course, you’ll:\nUnderstand MCP servers deeply — from core concepts to deployment\nBuild your own server with guided, hands-on projects\nIntegrate AI with APIs, databases, and external tools\nUnlock real-world AI applications that go beyond simple chat\n\n\nHow You’ll Learn\nThis course is fully project-based. You’ll:\nFollow along with real, working examples\nGet downloadable code and templates\nReinforce your skills through guided exercises\nBuild tools you can actually use in your own work\n\n\nWho This Course Is For\nDevelopers who want to add cutting-edge AI skills\nTech professionals who need to connect AI to real-world systems\nFreelancers and entrepreneurs who want to automate and scale tasks\nAnyone who wants to stay ahead as AI reshapes every industry\n\n\nYou’ll Get\nLifetime access to all lessons and future updates\nStep-by-step video tutorials (no fluff, just real projects)\nDownloadable resources and code\nFull Q&A support\n30-day money-back guarantee\n\n\nReady to Build AI That Actually Works?\n\n\nDon’t just watch AI happen — be the one building it.\nClick Enroll Now and start creating AI agents that go beyond text.\n\n\nSee you inside the course.",
      "target_audience": [
        "AI engineers and developers who want to extend the capabilities of AI agents by connecting them to real-world tools, APIs, and databases.",
        "Software engineers interested in learning how to build secure, production-ready integrations between AI models and external systems.",
        "Educators, researchers, and hobbyists who want to experiment with MCP and create custom tools for their own projects.",
        "Anyone curious about AI infrastructure — whether you’re a beginner exploring how AI connects to applications or a professional looking to deepen your technical skill set."
      ]
    },
    {
      "title": "Apache Kafka For Absolute Beginners",
      "url": "https://www.udemy.com/course/apache-kafka-for-absolute-beginners/",
      "bio": "The Complete Guide To Apache Kafka Using Real World Examples",
      "objectives": [
        "Learn Kafka from Groundup",
        "Learn to work with Zookeeper",
        "Master core components and Architecture of Kafka",
        "Learn with real world examples"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Kafka",
          "Kafka Architecture",
          "Kafka Architecture contd"
        ],
        "Kafka Core Concepts": [
          "Kafka Installation",
          "Kafka Installation Continued"
        ],
        "Real World Kafka": [
          "Kafka Hands On Cli",
          "Kafka Hands On JavaAPI",
          "Kafka Cluster Setup",
          "Kafka Cluster - Making Fault Tolerant",
          "Kafka Connect",
          "Kafka Q&A",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of Unix/Linux and Java is assumed for the course"
      ],
      "description": "Welcome to our no-nonsense easy to learn Kafka Beginner Course!\nThe world has progressed from big data to smart data, requiring data in real-time to make altering decisions for people and the company. This has prompted more real-time data analytic software to take center stage. The importance of data has made it crucial that data needs to be streamed faster and better. This is where Kafka can help.\nApache Kafka was introduced by Linkedin where it was originally used as a means to solve the low-latency ingestion of large amounts of event data from the LinkedIn website and infrastructure into a lambda architecture that harnessed Hadoop and real-time event processing systems. From there, it has now become a full time product that is used by many prominent companies such as Airbnb, Netflix and Uber to handle their large amounts of data.\nKafka stands apart from other streaming platforms because it offers benefits such as real time data, easy scalability and also easy to distribute. Now, you can add this amazing technology to our list of accomplishments with our course!\nOur easy to learn and no-nonsense course can help you become a Kafka expert in a no time. We can help you break down the essentials of Kafka, making it simple to learn. Since it has a steep learning curve, Kafka is a little complicated to grasp. This is why we have built a course with expert instructors to help simplify Kafka’s complex concepts and fundamental principles.\nThe course will start with a detailed introduction into Kafka and Zookeeper, following with helping you learn how to install both the platforms and set up the environments. From there, we will cover the core components and architecture of Kafka, also learning how to manipulate and replicate data. You will also learn about Kafka’s CLI and get hands-on with Producer & Consumer API, as well as the Streaming API. All of this and so much more awaits you in this course.\nIf you want to master Kafka, then this is the course you need! Enroll now and transform yourself into the expert of your dreams!",
      "target_audience": [
        "Anyone who want to start using Apache Kafka for Data management"
      ]
    },
    {
      "title": "Practical Cloud Native - Docker and Docker Compose",
      "url": "https://www.udemy.com/course/cloud-native-docker/",
      "bio": "Containerize your apps comfortably with docker and docker-compose - 5 years of prod experience in docker on your hands",
      "objectives": [
        "Easy & quick Cloud native adoption & transformation",
        "Use Docker and Docker Compose as a BOSS",
        "Learn how to containerize any application whatever its programming language",
        "Be familiar with operating docker containers",
        "Get professional tips which helps to do the work at enterprise grade",
        "Be able to secure container images",
        "Be able to deliver High Performance Progressive Web App (PWA)"
      ],
      "course_content": {},
      "requirements": [
        "No"
      ],
      "description": "Become a Cloud Native Expert is the one of the most requested DevOps skills!\nWith ~10 projects\nWith ~5 different technologies\nWith ~90% of Hands-on lectures\n\n\nAfter 5+ years of production experience in  Cloud native thru Docker, this course ships my experience thru 10+ projects.\n\n\nWhether you have never learn about Docker, or want to learn about the advanced features of Containerization, this course is for you !!\nWhether you want to get  theories of Docker only, or love Hands-on & getting your hands dirty, this course is for you as well !!\n\n\nWith more than 100 lectures of video comprehensive , the course includes also :\n-  assignments\n- and Graduation Project.\n\n\nIn this course you will learn everything you need to become a Cloud native/Docker/Docker Compose Pro! Including:\nKnow the difference between Cloud  vs Cloud Native & its relationship with Docker\nHow to prepare a Lab Environment to play with containers\nLearn the strategy of containerization regardless the technology.\nPractice multi-container design patterns: ambassador, sidecars, routers,.. so on.\nSmoothly operating docker containers.\nSwitch from Docker to Docker Compose.\nContainer As Code : Apply coding best practices when considering Dockerfile/docker-compose.yaml is another file in the source code.\nSecure container images\nOptimizing Container build , runtime and container image footprint.\nTransform Static websites to Cloud Native App.\nTransform Single Page App ( React) to Cloud Native App.\nTransform Backend App (Java) to Cloud Native App.\nTransform Backend App (Go) to Cloud Native App.\nTransform Backend app (Python) to Cloud Native App.\nApplying some 12factors for a real cloud native implemenation\n\n\nGraduation PROJECT------\nIn the Graduation Project section, you will be assigned to transform a three tier application ( React, Go, MongoDB) into a cloud native app using Docker, docker-compose.\nIn this project, you will get your hands dirty by tackling all topics that you learnt in the previous sections and more.\n\n\nThis course comes with a 30 day money back guarantee! If you are not satisfied in any way, you'll get your money back.\n\n\nSo what are you waiting for? Take advantage of this time to upgrade your skills and put Cloud Native on your resume with CONFIDENCE!",
      "target_audience": [
        "Software developer",
        "DevOps engineer",
        "SysOps admin",
        "Modern application developer",
        "Cloud native engineer"
      ]
    },
    {
      "title": "Azure Functions for Java Developers",
      "url": "https://www.udemy.com/course/azure-functions-for-java-developers-foundations/",
      "bio": "Learn the basics of designing and developing your Java and Spring applications with Azure Functions",
      "objectives": [
        "Design a solution using Azure serverless platform",
        "Implement Azure Functions with triggers and bindings using Azure libraries",
        "Deploy, monitor and debug functions",
        "Implement Azure Functions using Spring Cloud Function"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Overview",
          "Learning Materials"
        ],
        "Serverless Computing": [
          "Section Introduction",
          "Defining Serverless Computing",
          "Understanding Serverless Computing Features",
          "Introduction to Architecture Styles",
          "Architectural Styles for Serverless Computing",
          "Microservices",
          "Event-driven Architecture",
          "Pipes and Filters",
          "Architectural Styles not suited for Serverless Computing",
          "Modular Monolith",
          "Hexagonal Architecture",
          "Going Serverless",
          "Summary"
        ],
        "Introduction to Azure Functions": [
          "Introduction",
          "Local Development Environment Setup",
          "Functions",
          "Implementing the First Function",
          "Triggers",
          "Function Invocation with a Trigger",
          "Bindings",
          "Installing Azurite and Azure Storage Explorer",
          "Adding a Binding to the Function",
          "Summary"
        ],
        "Azure Functions App": [
          "Introduction",
          "Function Pipeline",
          "Implementing API Endpoint with a Function",
          "Hosting Plans and Pricing",
          "Deploying to Azure",
          "Azure Storage Queue",
          "Summary"
        ],
        "Monitoring and Debugging": [
          "Introduction",
          "Implementing the Second Filter",
          "Application Insights",
          "Querying Built-in Logs",
          "Implementing Custom Logging",
          "Application Dashboard",
          "Application Map",
          "Summary"
        ],
        "Spring Cloud Function": [
          "Introduction",
          "Introduction to the Spring Cloud Function",
          "Spring Cloud Function Features",
          "Spring Cloud Function Programming Framework",
          "Implementing the Third Filter",
          "Summary"
        ],
        "Course Summary": [
          "Course Wrap Up",
          "Environment Clean Up",
          "What’s Next?"
        ]
      },
      "requirements": [
        "Basic Java (or other JVM language) knowledge",
        "Basic Spring skills will be handy",
        "No Azure or other cloud experience is required"
      ],
      "description": "Welcome to this comprehensive course tailored for Java developers, focusing on serverless computing with Azure Functions! Throughout this journey, we'll delve deep into serverless architecture, Azure Functions, Spring Cloud Function, and more, all from a Java-centric perspective.\nTo kick things off, we'll establish a solid understanding of serverless computing principles, exploring various architectural styles and their relevance in serverless environments, especially in Java-based projects.\nMoving forward, we'll immerse ourselves in Azure Functions, emphasising hands-on experience to configure your development environment seamlessly. You'll become proficient in essential concepts like triggers and bindings, laying the groundwork to create and integrate functions effortlessly, with a special focus on Java implementations.\nMidway through the course, you'll navigate through Azure Functions App intricacies, gaining insights into hosting options, pricing models, and effective deployment strategies, all with Java at the forefront. Additionally, you'll engineer function pipelines on Azure, leveraging Azure Storage Queue functionalities for streamlined performance.\nAn integral part of our journey will be mastering monitoring and debugging techniques. You'll learn to troubleshoot with precision, utilising advanced logging features such as Application Insights to optimise function performance effectively, ensuring smooth operations in the cloud environment.\nIn the final leg of our exploration, we'll introduce Spring Cloud Function, a dynamic addition to the Spring Framework. Discover its potential and harness its programming model to craft vendor-independent function logic, primed for deployment and testing within Azure's ecosystem, all while leveraging the power of Java.\nEmbark on this exhilarating adventure with me as we unlock the full spectrum of serverless computing possibilities with Azure Functions, tailored specifically for Java enthusiasts!",
      "target_audience": [
        "Java developers of any level",
        "Engineers keen on learning how to program with Azure Functions",
        "Kotlin/Scala developers of any level"
      ]
    },
    {
      "title": "Collaborative Artificial Intelligence - A Foundation Course",
      "url": "https://www.udemy.com/course/collaborative-artificial-intelligence-a-foundation-course/",
      "bio": "Understand and Implement Collaborative AI - The future of Artificial Intelligence",
      "objectives": [
        "The concept of Collaborative Intelligence",
        "Motivation and benefits of Collaborative AI",
        "Implementation and its challenges",
        "Real World applications and more"
      ],
      "course_content": {
        "Introduction": [
          "Introduction - What is Collaborative AI",
          "AI vs Human Intelligence",
          "Core, Secure and Collaborative AI"
        ],
        "Understanding Collaborative AI in detail": [
          "Understanding Collaborative Intelligence",
          "Motivation behind Collaborative AI",
          "Collaborative AI Benefits"
        ],
        "Collaborative AI in Organizations": [
          "Collaborative AI in Organizations",
          "How to Reimagine Your Business to use collaborative AI",
          "Challenges of Implementation",
          "Need for new Talent",
          "Real-World Applications of Collaborative AI"
        ],
        "Closing Notes": [
          "Pros and Cons of Collaborative AI",
          "FAQs on Collaborative AI",
          "Conclusion"
        ]
      },
      "requirements": [
        "No experience needed, we will learn everything from the scratch !"
      ],
      "description": "Welcome to our groundbreaking Udemy course on Collaborative Artificial Intelligence! Whether you're a tech enthusiast, a seasoned professional, or someone curious about the future of AI, this course will immerse you in the dynamic world of collaborative AI, where machines and humans work together to achieve extraordinary outcomes.\nIn this course, you will explore the fascinating concept of collaborative AI, a paradigm shift that emphasizes synergy between human intelligence and machine capabilities. Unlike traditional AI that operates independently, collaborative AI integrates human input at various stages, enhancing decision-making, creativity, and problem-solving across diverse domains. From healthcare to finance, education to entertainment, the applications are limitless and immensely impactful.\nThroughout the course, we'll go through actual case studies that demonstrate the power of collaborative AI. We'll cover ethical considerations, best practices, and the latest trends in the industry, equipping you with the knowledge and skills to leverage AI in a way that complements and amplifies human capabilities.\nUpon completing this course, you'll receive a certificate of completion, showcasing your expertise in collaborative AI – a valuable credential in today's AI-driven world. Additionally, as a special learning, we've included an exclusive lesson on the implementation of collaborative AI, where we'll delve into the challenges and visionary insights that will inspire you to become a problem solver in this exciting field.\nJoin us now and embark on a transformative journey into the future of collaborative intelligence. Enroll today and be at the forefront of the AI revolution, where human and machine collaboration is the key to unlocking unprecedented potential!",
      "target_audience": [
        "Professionals interested in Artificial Intelligence",
        "AI / ML / Data Science Practitioners looking to develop the skills further in the same field",
        "AI Enthusiasts, developers, professionals, and management team",
        "Organizations using AI in some or the other way in their team"
      ]
    },
    {
      "title": "Model-Based Development in Automotive with MATLAB & Simulink",
      "url": "https://www.udemy.com/course/model-based-development-in-automotive-with-matlab-simulink/",
      "bio": "A practical introduction to Model-Based Design with Simulink for real-world automotive projects",
      "objectives": [
        "Basics of Model-Based Design (MBD). How it is applied in the automotive industry for system modeling, simulation, and co",
        "Navigating the Simulink Environment. How to use the Simulink interface, build simple models using common blocks, and simulate system behavior step by step",
        "Creating and Managing Subsystems. How to structure models using Subsystems, including Enable and Triggered Subsystems, to improve readability and functionality.",
        "Signal Routing and Logical Operations. Students will work with essential blocks like Switch, Multiport Switch, Logical Operators, and Relational Operators to m"
      ],
      "course_content": {
        "Intro": [
          "Welcome to the Course Model-Based Design in Automotive"
        ],
        "Simulink Basics": [
          "What is Simulink and how to create a simple model",
          "The difference between continuous signal vs discrete signal",
          "How to set the simulation time and solver",
          "Simulink Basics"
        ],
        "Signals, timing and feedback": [
          "Constant, Step, Pulse Generator and Signal Builder",
          "Gain, Sum, Product, ABS and Math Function Blocks",
          "Unit Delay, Delay and Memory Blocks",
          "Data Type Conversion Block",
          "Signal Conversion Block",
          "Signals, timing and feedback"
        ],
        "View and Debug": [
          "Scope, Display and To Workspace Blocks",
          "View and Debug"
        ],
        "Logical and Conditional blocks": [
          "Switch Block",
          "Multiport Switch",
          "AND Block",
          "OR Block",
          "NOT Block",
          "XOR Block",
          "NAND Block",
          "NXOR Block",
          "Relational Operator Block",
          "If and If-else subsystems Blocks",
          "Logical and Conditional blocks"
        ],
        "Execution/ Flow control": [
          "Enable Subsystem Block",
          "Trigger and Triggered Subsystem Blocks",
          "Trigger - Rising Edge",
          "Trigger - Falling Edge",
          "Trigger - Either Edge",
          "Enabled and Triggered Subsystem",
          "Switch Case Block and Switch Case Action Subsystem Block",
          "Execution/ Flow control"
        ],
        "Functions MBD": [
          "Mux and Demux Blocks",
          "Bus Creator and Selector Blocks",
          "1-D Lookup Table and 2-D Lookup Table Blocks",
          "Matlab Function Block",
          "Functions MBD"
        ],
        "Subsystems and Reuse": [
          "Atomic and Virtual Subsystems",
          "Referenced Subsystem",
          "Reference Model",
          "Subsystems and Reuse"
        ],
        "Practical example - HVAC Functional Model Project": [
          "Intro about V-Cycle in Automotive Software Development using Model-Based Design",
          "Requirements file",
          "Signal Dictionary file",
          "Requirements and Signal Dictionary Review",
          "How to create an Enumeration in matlab/simulink",
          "How to create a Bus in matlab/simulink",
          "Implementation of requirements part I",
          "Implementation of requirements part II",
          "Implementation of requirements part III",
          "Implementation of requirements part IV",
          "Implementation of requirements part V",
          "Implementation of requirements part VI",
          "Implementation of requirements part VII",
          "How to test implemented requirements",
          "How to create a Library in Simulink",
          "Model Optimization",
          "RAM and Init files",
          "How to generate simulink model in Code",
          "Project"
        ],
        "Outro": [
          "Congrats! Let’s recap what you’ve learned"
        ]
      },
      "requirements": [
        "Access to MATLAB/Simulink. Learners need access to a computer with MATLAB and Simulink installed. A student or trial license is sufficient for the course exercises.",
        "Interest in Automotive. Since the course focuses on practical examples from the automotive industry, it is ideal for students or junior engineers interested in this field."
      ],
      "description": "Simulink for Automotive Beginners\nThe course I wish I had when I started as a Model-Based Developer\nThis isn’t just another Simulink tutorial.\nThis course simulates the experience of working on a real automotive project — from requirements to model implementation and testing. Every section is built to reflect what happens in the industry.\nYou won’t just learn how blocks work — you’ll learn how engineers think, solve problems, and deliver real software features using Model-Based Design.\nIt’s the course I created based on everything I wished I had known at the beginning of my career in automotive.\nIn this course, you will:\nBuild and simulate clear, structured Simulink models\nLearn how to connect models to real requirements\nUnderstand how your work fits into the full automotive development flow\nPractice solving problems the way they’re done in real engineering teams\nGain the confidence to contribute to real projects from day one\nWho is this for?\nStudents and junior engineers new to the automotive industry\nAnyone looking to understand what Model-Based Design looks like in practice\nNo prior Simulink experience required — just curiosity and a willingness to learn\nIf you're serious about joining the automotive world and want more than just theory, this is the course for you.",
      "target_audience": [
        "Engineering Students. Especially those studying automotive, electrical, electronics, control, or mechatronics engineering who want to gain hands-on experience with Model-Based Design.",
        "Junior Engineers and Interns. Entry-level professionals in the automotive or embedded systems industries who need to learn MATLAB/Simulink for daily engineering tasks.",
        "Career Changers and Aspiring Automotive Engineers."
      ]
    },
    {
      "title": "Algorithms and Data Structures Easy Way Java - job interview",
      "url": "https://www.udemy.com/course/algorithms-and-data-structures-made-easy-for-interview/",
      "bio": "Become the star that you can be!",
      "objectives": [
        "Be able to read code logic differently",
        "Think out of the box when solving daily problems efficiently",
        "Learn the most popular Algorithms and Data Structures",
        "Understand the importance of unit testing your application",
        "Get a basic understanding of Maven",
        "Learn how recursion works",
        "Practice with some interview coding questions",
        "Code a Sudoku solver"
      ],
      "course_content": {
        "Get Started": [
          "Installing Eclipse",
          "Creating Maven project with JUNIT dependency",
          "Learning unit test JUNIT",
          "Euclid's algorithm with Recursion"
        ],
        "Algorithms": [
          "Linear Search Introduction",
          "Linear Search Coding",
          "Unit Testing Linear Search with JUNIT",
          "Insert Sort Introduction",
          "Insert Sort Coding",
          "Unit Testing Insert Sort with JUNIT",
          "Binary Search Introduction",
          "Binary Search Coding",
          "Unit Testing Binary Search with JUNIT",
          "Binary Search using recursion - reviewed",
          "Unit Testing Binary Search using recursion - reviewed",
          "Quick Sort Introduction",
          "Quick Sort Coding",
          "Unit Testing Quick Sort with JUNIT"
        ],
        "Data Structures": [
          "Binary Tree Introduction",
          "Binary Tree Coding - reviewed",
          "Unit Testing Binary Tree with JUNIT - reviewed",
          "Linked List Introduction",
          "Linked List Coding",
          "Unit Testing Linked List with JUNIT",
          "Doubly Linked List Introduction",
          "Doubly Linked List Coding part 1 of 2",
          "Doubly Linked List Coding part 2 of 2 - reviewed",
          "Unit Testing Doubly Linked List with JUNIT - reviewed",
          "Prefix Tree Introduction",
          "Prefix Tree Coding part 1 of 2",
          "Prefix Tree Coding part 2 of 2",
          "Unit Testing Prefix Tree with JUNIT part 1 of 2",
          "Unit Testing Prefix Tree with JUNIT part 2 of 2",
          "Stack Introduction",
          "Stack Coding",
          "Unit Testing Stack with JUNIT",
          "Stack Coding with Generics",
          "Unit Testing Stack Generics with JUNIT"
        ],
        "Interview Coding questions": [
          "Print odd numbers",
          "Unit testing Print odd Number with JUNIT",
          "Longest substring without repeating character Introduction (Amazon question)",
          "Longest Substring without repeating character Coding 1 of 2",
          "Longest Substring without repeating character Coding 2 of 2",
          "Unit testing Longest substring without repeating character with JUNIT",
          "Sudoku Introduction (Amazon Question)",
          "Sudoku coding part 1 of 3",
          "Sudoku coding part 2 of 3",
          "Sudoku coding part 3 of 3 Unit Testing methods",
          "Unit Testing Sudoku with JUNIT"
        ]
      },
      "requirements": [
        "Knowledge of development in any language"
      ],
      "description": "Here you will learn the most common algorithms and data structures and also prepare for some interview questions.\nThis is not an ordinary course. We will write line by line of code together and explain what is is doing. Each algorithm and data structures will be introduced to you in a easy and friendly way to understand.\n\nIt will definitely help you to get to the next level in your career. It will help you on your daily coding as well.\nOn this course Algorithms and Data Structures you will learn and code Euclid, Linear Search, Insert Sort, Binary Search, Quick Sort\nalso Binary Tree, Linked List, Doubly Linked List, Prefix Tree or Trie Tree, Stack\nand finally some coding interview questions Print Odd Numbers, Longest Substring Without Repeating Character (Amazon Question), Sudoku (Amazon Question)\nAlgorithms and Data Structures are very important topics since your choice of algorithm and datastructure will affect memory and CPU time differently.\nBe ready to code and be eager to learn more.\nIt is priceless to have the confidence to show off your skills without fear. You will be able to prove in a whiteboard interview that you are not just good but you are awesome.\n\nEnjoy!",
      "target_audience": [
        "Developers that want to reach the next level on their career",
        "Preparing for a though interview",
        "Get noticed at your company"
      ]
    },
    {
      "title": "Coding Interview Bootcamp: Algorithms (Java, Python, C++)",
      "url": "https://www.udemy.com/course/ace-tech-companies-coding-interview-in-a-month/",
      "bio": "Get ready in a Month + Help from Google/Facebook Interviewer with 1000+ coding questions experience",
      "objectives": [
        "Systematically prepare coding interview",
        "Proficient in important data structures/algorithms",
        "Be ready for majority of tech companies interview"
      ],
      "course_content": {
        "Chap 01 Introduction to Coding Interviews": [
          "Read Me",
          "Introduction to coding interviews",
          "【Code】 Longest Palindromic Substring Solution",
          "【Code】 strStr Solution"
        ],
        "Chap 02 Binary Search and O(logn) Algorithms": [
          "Prior knowledge about Binary Search",
          "Binary Search Template",
          "【Code】 Binary Search Template",
          "Related Problems",
          "【Code】 First Position of Target Solution",
          "【Code】 Last Position of Target Solution",
          "Binary Search on Index AABB Model",
          "【Code】 First Bad Version Solution",
          "【Code】 Find K Closest Elements Solution",
          "Exponential backoff",
          "【Code】 Search in a Big Sorted Array Solution",
          "More AABB Related Questions",
          "【Code】 Find Minimum in Rotated Sorted Array Solution",
          "【Code】 Max Number in Mountain Sequence Solution",
          "【Code】 Search 2D Matrix Solution",
          "【Code】 Search 2D Matrix II Solution",
          "【Code】 Smallest Rectangle Enclosing Black Pixels Solution",
          "Half-half Model",
          "【Code】 Find Peak Element Solution",
          "【Code】 Search in Rotated Sorted Array Solution",
          "More O(logN) questions",
          "【Code】 Fast Power/Pow(x, n) Solution",
          "【Code】 Minimize Max Distance to Gas Station Solution",
          "Some Suggestions",
          "Three Step Flip"
        ],
        "Chap 03 Two Pointers": [
          "Preparation for this Chapter",
          "【Code】 Intersection of Two Linked Lists Solution",
          "【Code】 Linked List Cycle Solution",
          "【Code】 Linked List Cycle II Solution",
          "【Code】 Two Sum Solution",
          "【Code】 Quick Sort and Merge Sort",
          "Move Zeros",
          "【Code】 Move Zeroes Solution",
          "Minimum Window Substring",
          "【Code】 Minimum Window Substring Solution",
          "Valid Palindrome",
          "【Code】 Valid Palindrome Solution",
          "Two Sum and Related Questions",
          "【Code】 Two Sum Data structure design Solution",
          "【Code】 Two Sum Input Array is Sorted Solution",
          "【Code】 3 Sum - Solution",
          "【Code】 Two Sum Less Than K Solution",
          "【Code】 Valid Triangle Number Solution",
          "【Code】 3Sum Smaller Solution",
          "【Code】 3 Sum Closest Solution",
          "【Code】 4Sum Solution",
          "Two Pointers Partition",
          "【Code】 Partition Array into Disjoint Intervals Solution",
          "【Code】 Quick Select Solution",
          "【Code】 Sort Array by Parity Solution",
          "【Code】 Sort Colors Solution"
        ],
        "Chap 04 BFS and Topological Sorting": [
          "Introduction to BFS and Topological Sorting",
          "Level Order Traversal",
          "【Code】 Binary Tree Level Order Traversal Solutions",
          "Serialization and Deserialization",
          "【Code】 Serialize and Deserialize Binary Tree Solutions",
          "Other Binary Tree BFS Questions",
          "【Code】 Binary Tree Level Order Traversal II Solution",
          "【Code】 Binary Tree Zigzag Level Order Traversal Solution",
          "【Code】 Binary Tree Vertical Order Traversal Solution",
          "BFS in Graph",
          "【Code】 Clone Graph Solution",
          "【Code】 Word Ladder Solution",
          "BFS in Matrix",
          "【Code】 Number of Islands Solution",
          "【Code】 Minimum Knight Moves Solution",
          "Topological Sorting",
          "【Code】 Course Schedule II Solution",
          "【Code】 Alien Dictionary Solution",
          "【Code】 Graph Valid Tree Solution",
          "【Code】 Number of Connected Components in an Undirected Graph Solution",
          "【Code】 Sequence Reconstruction Solution",
          "【Code】 Rotting Oranges Solution",
          "【Code】 Shortest Distance from All Buildings Solution",
          "Conclusion"
        ],
        "Chap 05 Binary Tree based DFS": [
          "Preparation for This Chapter",
          "【Code】 Maximum Average Subtree Solution",
          "【Code】 Invert Binary Tree Solution",
          "【Code】 Validate Binary Search Tree Solution",
          "【Code】Minimum Sum Subtree Solution",
          "Introduction to Binary Tree based DFS",
          "Minimum Sum Subtree",
          "【Code】Minimum Sun Subtree Solution",
          "Binary Tree Paths and LCA",
          "【Code】Binary Tree Paths Solution",
          "【Code】LCA & LCA II Solutions",
          "Flatten Binary Tree to Linked List",
          "【Code】Flatten Binary Tree to Linked List Solution",
          "BST intro",
          "Kth Smallest Element in a BST",
          "【Code】Kth Smallest Element in a BST Solution",
          "Binary Tree In-order, Pre-order, Post-order Traversal",
          "【Code】Inorder, Preorder, Postorder Traversal Solutions",
          "BST Iterator and BST Successor",
          "【Code】Binary Search Tree Iterator Solution",
          "【Code】Inorder Successor in BST Solution",
          "Closest Binary Search Tree Value",
          "【Code】Closest Binary Search Tree Value Solution",
          "【Code】Closest Binary Search Tree Value II Solution",
          "【Code】Insert into a Binary Search Tree Solution",
          "【Code】Delete Node in a BST Solution"
        ],
        "Chap 06 Combination based DFS": [
          "Preparation for This Chapter",
          "Introduction to Combination based DFS",
          "Combination Sum",
          "【Code】Combination Sum Solution",
          "【Code】Combination Sum II Solution",
          "【Code】Combination Sum III Solution",
          "Palindrome Partitioning",
          "【Code】Palindrome Partitioning Solution",
          "Wildcard Matching/Regular Expression Matching",
          "【Code】Wildcard Matching/Regular Expression Matching Solution",
          "Word Break II",
          "【Code】Word Break II Solution"
        ],
        "Chap 07 Permutation based DFS": [
          "Preparation for This Chapter",
          "Introduction to Permutation based DFS",
          "Permutations & Permutations II",
          "N Queens",
          "【Code】N Queens Solution",
          "Letter Combinations of a Phone Number",
          "【Code】Letter Combinations of a Phone Number Solution",
          "Word Pattern II",
          "【Code】Word Pattern II Solution",
          "Word Ladder II",
          "【Code】Word Ladder II Solution",
          "Word Search II",
          "【Code】Word Search II Solution"
        ],
        "Chap 08 Data Structure 1": [
          "Preparation for This Chapter",
          "Introduction to Data Structure 1",
          "Queue & Stack",
          "【Code】Moving Average from Data Stream Solution",
          "Hash & LRU Cache",
          "【Code】LRU Cache Solution",
          "Insert Delete GetRandom O(1)",
          "【Code】Insert Delete GetRandom O(1) Solution",
          "First Unique Character - Data Stream",
          "【Code】First Unique Character in a String Solution",
          "【Code】Group Anagrams Solution",
          "【Code】Copy List with Random Pointer Solution",
          "【Code】Subarray Sum Equals K Solution",
          "【Code】Longest Consecutive Sequence Solution",
          "Ugly NumberII",
          "【Code】Ugly Number II Solution",
          "【Code】Merge k Sorted Lists Solution",
          "Merge K Sorted Lists",
          "Kth Largest Element II",
          "【Code】Kth Largest Element II Solution",
          "【Code】Top K Frequent Elements Solution",
          "【Code】Find Median from Data Stream Solution",
          "【Code】Kth Smallest Element in a Sorted Matrix Solution"
        ],
        "Chap 09 Data Structure 2": [
          "Preparation for This Chapter",
          "Introduction to Data Structure 2",
          "Merge Sorted Arrays/Intervals",
          "【Code】Merge Sorted Array Solution",
          "【Code】Merge Intervals Solution",
          "【Code】Merge K Sorted Interval Lists Solution",
          "Intersection of Arrays",
          "【Code】Intersection of Two Arrays Solutions",
          "【Code】Intersection of K Arrays Solution",
          "Sparse Matrix and Best Time to Sell Stock",
          "【Code】Sparse Matrix Multiplication Solution",
          "【Code】Best Time to Buy and Sell Stock Solution",
          "Prefix Sum/Matrix related questions",
          "【Code】Number of Submatrices That Sum to Target Solution",
          "【Code】Max Sum of Rectangle No Larger Than K",
          "Median of Two Sorted Arrays",
          "【Code】Median of Two Sorted Arrays Solution",
          "Union Find",
          "【Code】Number of Islands II Solution",
          "【Code】Graph Valid Tree Solution"
        ],
        "Bonus Chapter": [
          "Bonus"
        ]
      },
      "requirements": [
        "Any one of programming languages"
      ],
      "description": "-- This course will help you systematically prepare for a coding interview in a short amount of time(Questions Classification + Solution Templates + Coding Style)\n-- The price for this course is relatively low. Because this course is aimed to help people get an offer during the pandemic\n-- You will know the key algorithms/date structures for most tech companies coding interview\n-- You will know what kind of questions you must practice and what questions you can ignore.\n-- You will know how will your interviewer rate your performance (I have interviewed more than 100 candidates).\n-- In each chapter, we will cover 10 - 15 questions in our videos. During our class, I will pick one of the most popular languages Java as our sample solution to the questions. In addition, I will also share all solutions to those questions in Python and C++. Language is not important, our logic and our algorithms are more critical.\n-- I will also share the link to questions on LeetCode so that you can practice by yourself.\n-- At the end of each chapter, there are some reading materials. Please read them carefully, they will help you build a deeper understanding of our coding questions.",
      "target_audience": [
        "College Student, Junior or Senior Software Engineers who want to find a new job in a short amount of time"
      ]
    },
    {
      "title": "Learn DevSecOps with Practice",
      "url": "https://www.udemy.com/course/learn-devsecops-with-practice/",
      "bio": "In this course you will learn all the DevOps technologies and methods needed for your career",
      "objectives": [
        "What is DevOps vs DevSecOps",
        "Linux/Unix For DevOps and Developers",
        "Learn Python From the Scratch",
        "Make your own Ethical Hacking Tools In Python",
        "Learn Cloud Services - AWS (Amazon Web Services)",
        "Learn Continuous Integration And Continuous Delivery CI/CD - Jenkins",
        "Learn Containerization Technology - Docker",
        "Learn Containerization Technology - Kubernetes",
        "Learn IAC (Infrastructure As Code) - AWS Cloud Formation",
        "Learn IAC (Infrastructure As Code) - Terraform",
        "Learn Continuous Monitoring - AWS CloudWatch",
        "Learn Cyber Security Threats and the Best Practices",
        "Learn Soft Skills for DevOps",
        "Real Life Scenarios with Practice Step-By-Step"
      ],
      "course_content": {
        "Introduction": [
          "What Is DevOps Vs DevSecOps"
        ],
        "Linux/Unix For DevOps and Developers": [
          "Slides",
          "Linux from the beginning – History and Evolution",
          "Linux vs Unix",
          "Unix Architecture",
          "Linux Directory Structure",
          "Basic Linux Commands",
          "Basic Linux Commands Hands-On",
          "Working with Directories",
          "Working with Directories Hands-On",
          "Listing Files and Understanding ls Output",
          "Listing Files and Understanding ls Output Hands-On",
          "Links and Shortcuts in Linux",
          "Links and Shortcuts in Linux Hands-On",
          "File and Directory Permissions",
          "File and Directory Permissions Hands-On",
          "Finding Files and Directories Hands-On",
          "Viewing Files and the Nano Editor",
          "Viewing Files and the Nano Editor Hands-On",
          "Editing Files in Vi/Vim",
          "Editing Files in Vi/Vim Hands-On",
          "Linux copy move commands Hands-On",
          "Input Output and Redirection",
          "Input Output and Redirection Hands-On",
          "Linux Comparing Files Hands-On",
          "Linux Transfer Files Over Network",
          "Shell Aliases Hands-On",
          "Linux Environment Variable Hands-On",
          "Processes and Job Control",
          "Processes and Job Control Hands-On",
          "Scheduling Repeated Jobs with Cron",
          "Scheduling Repeated Jobs with Cron Hands-On",
          "Linux History Hands-On",
          "Linux Sudo Another Users Hands-On",
          "Linux Users Management Hands-On",
          "The Linux Boot Process",
          "Linux File System Hands-On",
          "What is Shell Scripting",
          "Linux Operators",
          "Linux Loops",
          "Linux Var Special",
          "Linux Functions",
          "Linux if else Case",
          "Linux Interview Preparation Part 1",
          "Linux Interview Preparation Part 2",
          "Linux Interview Preparation Part 3"
        ],
        "Python For Ethical Hackers": [
          "Install Python",
          "Hello World",
          "Data Types",
          "Numbers",
          "Math functions",
          "Operator Precedence",
          "Variables",
          "Strings",
          "Escape Sequence",
          "Types Conversion",
          "Formatted Strings",
          "Strings Indexes",
          "Boolean",
          "Lists",
          "List Methods",
          "Matrix",
          "None",
          "Dictionary",
          "Dictionary Methods",
          "Tuple",
          "Conditional If Else",
          "For Loop",
          "Range",
          "While",
          "Break Continue Pass",
          "Functions",
          "Args Kwargs",
          "Packages in Python",
          "Error Handling",
          "Input / Output (IO)",
          "Input/Output (IO) Error Handling",
          "What is Port Scanner and how it works",
          "Building our first Port Scanner from the scratch",
          "Web Application Directory Discovery",
          "Building our first Directory Discovery from the scratch",
          "What is Brute Force Attack",
          "Types of Brute Force Attacks",
          "Building our first Brute Login from the scratch"
        ],
        "AWS (Amazon Web Services) For DevOps": [
          "What is AWS and Why",
          "IAM Introduction",
          "IAM How Can Users Access",
          "IAM Users Groups",
          "IAM Password Policy",
          "IAM Policy",
          "IAM MFA",
          "IAM CLI (Command Line)",
          "IAM Cloud Shell",
          "IAM Role",
          "IAM Security Tools",
          "EC2 Introduction",
          "EC2 Launch Your First",
          "EC2 Instance Connect",
          "EC2 Roles (Instance Profile)",
          "EC2 Placement Group Overview",
          "EC2 Placement Group Hands On",
          "EC2 Hibernate",
          "EC2 ENI (Elastic Network Interface)",
          "EC2 Spot Instances",
          "EBS Overview (Elastic Block Storage)",
          "EBS Hands On (Elastic Block Storage)",
          "AMI Overview (Amazon Machine Images)",
          "AMI Hands On (Amazon Machine Images)",
          "EFS Overview (Elastic File System)",
          "EFS Hands On (Elastic File System)",
          "ASG Overview",
          "ASG Launch configuration",
          "ASG Create ASG Groups",
          "ELB Overview",
          "ELB Classic",
          "ELB Target groups",
          "ELB Network LB",
          "ELB Application LB",
          "VPC overview",
          "Create your first VPC",
          "VPC Subnets",
          "Elastic IP",
          "VPC Route Tables",
          "VPC NAT",
          "VPC Egress Only",
          "VPC ACL",
          "VPC Peering",
          "VPC Internet Gateway",
          "Route53 Overview",
          "Route53 Register Domain",
          "Route53 HostedZones",
          "Route53 HealthCheck",
          "AWS Interview Preparation Part 1",
          "AWS Interview Preparation Part 2",
          "AWS Interview Preparation Part 3",
          "AWS Interview Preparation Part 4",
          "AWS Interview Preparation Part 5",
          "AWS Interview Preparation Part 6"
        ],
        "Jenkins CI/CD": [
          "What is CI/CD?",
          "What is Jenkins and why",
          "Install Jenkins",
          "Create Jenkins job",
          "Job General",
          "Job SCM",
          "Job Triggers",
          "Job Environment",
          "Job Build",
          "Job Post Build",
          "Job Views",
          "Managements System Information",
          "Managements Global Tool",
          "Managements System Logs",
          "Managements Configure System",
          "Managements Plugin",
          "Managements Users",
          "Managements Security",
          "Managements Credentials",
          "Managements Nodes"
        ],
        "Containerization Technology - Docker": [
          "What is Docker and why",
          "How Docker works Architecture",
          "VM vs Containers",
          "Install Docker On Linux",
          "Install Docker On MAC",
          "Docker Overview",
          "Docker Engine",
          "Docker Images",
          "Docker Containers",
          "Docker Storage",
          "Docker Networking",
          "Docker Commands Overview",
          "Dockerfile Basics",
          "Compose Basics",
          "Hello World Container",
          "Ubuntu Container",
          "Containers Management",
          "Images Management",
          "Our first Nginx Container",
          "Nginx Custom",
          "Dockerfile part1",
          "Dockerfile part2",
          "compose INTRO",
          "compose YAML Syntax",
          "compose app py file",
          "compose Dockerfile",
          "compose docker app py",
          "compose up",
          "compose bind mount",
          "compose more option",
          "Docker Interview Preparation Part 1",
          "Docker Interview Preparation Part 2",
          "Docker Interview Preparation Part 3",
          "Docker Interview Preparation Part 4"
        ],
        "Containerization Technology - Kubernetes": [
          "Concepts Overview",
          "Kubernetes Components",
          "Create a Kubernetes cluster",
          "Deploy an app",
          "Explore your app",
          "Expose your app publicly",
          "Scale up your app",
          "Curriculum of the CKAD exam",
          "Core Concepts (13%)",
          "Multi-Container Pods (10%)",
          "Pod Design (20%)",
          "State Persistence (8%)",
          "Configuration (18%)",
          "Observability (18%)",
          "Services and Networking (13%)"
        ]
      },
      "requirements": [
        "Eager to learn and Patience !!!"
      ],
      "description": "DevOps is a set of practices that combines software development and IT operations. It aims to shorten the systems development life cycle and provide continuous delivery with high software quality.\nDevSecOps is a culture shift in the software industry that aims to bake security into the rapid-release cycles that are typical of modern application development and deployment.\nThe roles of the DevOps that have the highest demand among respondents are: DevOps engineer- 39% Software engineer- 29% DevOps consultant- 22%\nOrganizations need DevOps engineers so badly, because now as never before they are pressed to build high-quality applications as fast as possible to keep up with the competition and create innovative solutions to address business challenges in a quick and continuous manner.\nIn this Course you will learn all the needed DevOps/DevSecOps Skills and Tools needed for your Career.\nYou will learn all of the below in one course inly (This Ultimate Course):\nWhat is DevOps Vs DevSecOps\nLinux/Unix For DevOps and Developers\nLearn Python From the Scratch\nMake your own Ethical Hacking Tools In Python\nLearn Cloud Services - AWS (Amazon Web Services)\nLearn Continuous Integration And Continuous Delivery CI/CD - Jenkins\nLearn Containerization Technology - Docker\nLearn IAC (Infrastructure As Code) - AWS Cloud Formation\nLearn IAC (Infrastructure As Code) - Terraform\nLearn Continuous Monitoring - AWS CloudWatch\nLearn Cyber Security Threats and the Best Practices\nLearn Soft Skills for DevOps\nReal Life Scenarios with Practice Step-By-Step",
      "target_audience": [
        "Anyone interested in developing DevOps and DevSecOps skills",
        "DevOps Engineers",
        "DevSecOps Engineers",
        "Cyber Security Engineers",
        "Developers",
        "Software Engineers",
        "System Adminstartors",
        "Cloud Architect"
      ]
    },
    {
      "title": "Automation with Ansible - Hands-on DevOps",
      "url": "https://www.udemy.com/course/automation-with-ansible-hands-on-devops/",
      "bio": "Learn Automating regular tasks using Ansible with lectures, hands-on demos, quizzes and hands-on coding exercises",
      "objectives": [
        "Introduction to Automation with Ansible",
        "Deploy and Configure Ansible Controller and Managed Nodes",
        "Developing and Managing Ansible Inventory files",
        "Develop Ansible code using Ansible Playbooks",
        "Ansible Roles and Collections",
        "Ansible Galaxy and Vault",
        "Insights to Concepts like Ansible Ad-hoc tasks, Variables, Facts, Conditionals, Loops and Handlers",
        "Ansible AWX - Web Based User Interface for Ansible",
        "Ansible for Windows",
        "Troubleshooting Cases"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "GitHub Repository Link",
          "Course Material - Automation with Ansible - Hands-On DevOps"
        ],
        "Introduction to Automation with Ansible": [
          "Topic Introduction - Introduction to Ansible Automation",
          "Getting Started with Ansible",
          "Why Ansible?",
          "Use Cases of Ansible",
          "Prerequisite Concepts",
          "How Ansible Works?",
          "Essential Ansible Terminologies",
          "Ansible Packages and Releases",
          "Demonstration - Ansible Documentation",
          "Summary",
          "Checkout - Podman for the Absolute Beginners - Hands-On DevOps"
        ],
        "Ansible Installation and Configuration": [
          "Topic Introduction - Ansible Setup",
          "Getting Started with Ansible Installation and Configuration",
          "Introduction to the Environment",
          "Demonstration - Preparing the Controller Node",
          "Demonstration - Setting Password Less Authentication",
          "Demonstration - Installing Ansible on the Controller Node",
          "Demonstration - Validating the Ansible Installation",
          "Demonstration - Ansible on localhost",
          "Summary",
          "Checkout - The Ultimate Linux Bootcamp for DevOps SRE & Cloud Engineers"
        ],
        "Ansible Inventory": [
          "Topic Introduction - Ansible Inventory",
          "Overview of Ansible Inventory",
          "Inventory Types",
          "Inventory File Formats",
          "Hosts & Groups",
          "Using & Managing Inventory files",
          "Demonstration - Default Inventory File",
          "Demonstration - ansible-inventory Command Line Utility",
          "Variables in Inventory",
          "Demonstration - Variables in Inventory",
          "Summary",
          "Checkout - Practical Kubernetes - Beyond CKA and CKAD | Hands-on"
        ],
        "Ansible Modules & Adhoc Tasks": [
          "Topic Introduction - Ansible Modules and Adhoc Tasks",
          "Getting Started with Ansible Modules",
          "Ansible Core Modules",
          "Ansible Custom Modules",
          "Ansible Plugins",
          "Demonstration - Accessing Modules through Ansible Documentation",
          "Understanding Ansible Adhoc Mode",
          "Ansible Adhoc Execution Syntax",
          "Demonstration - How to Write Ansible Adhoc Commands",
          "Demonstration - Ten Practical Adhoc Use Cases",
          "Summary"
        ],
        "Ansible Playbooks": [
          "Topic Introduction - Ansible Playbooks",
          "Getting Started with Playbooks",
          "YAML Overview",
          "Playbooks Structure",
          "A 4-Step Process for Working with Playbooks",
          "Command Line Utility - ansible-playbook",
          "Demonstration - Developing Ansible Playbooks",
          "Demonstration - More Playbooks",
          "Demonstration - Writing a Multi-task Playbook (Docker Setup)",
          "Demonstration - Writing a Multi-task Playbook (mysql Setup)",
          "Summary"
        ],
        "Ansible for Windows": [
          "Topic Introduction - Ansible for Windows OS",
          "Getting Started with Windows Managed Nodes",
          "Demonstration - Setting up Windows Managed Node",
          "Demonstration - Running Adhoc Tasks on Windows",
          "Demonstration - Playbooks for Windows",
          "Summary",
          "Checkout - Argo CD for the Absolute Beginners - Hands-On DevOps"
        ],
        "Variables, Magic Variables and Facts in Ansible": [
          "Topic Introduction - Ansible Variables and Facts",
          "Understanding Variables in Ansible",
          "Variable Definition and Declaration in Ansible",
          "Demonstration - Variables in Playbook",
          "Magic Variables",
          "Getting Started with Ansible Facts",
          "Demonstation - Ansible Facts (Retrieve and Use)",
          "Demonstration - Disabling Ansible Facts",
          "Summary"
        ],
        "Conditionals, Loops and Handlers": [
          "Topic Introduction - Conditionals, Loops and Handlers",
          "Conditionals in Ansible",
          "Loops in Ansible",
          "Demonstration - Docker Setup using loops and conditionals",
          "Handlers in Ansible",
          "Demonstration - Conditionals, Loops and Handlers together",
          "Summary"
        ],
        "Ansible Roles": [
          "Topic Introduction - Ansible Roles",
          "Introduction to Ansible Roles",
          "Directory Structure of Roles",
          "Understanding Roles Creation Process",
          "Demonstration - Developing Ansible Roles",
          "Demonstration - include_role and import_role",
          "Role Dependencies",
          "Demonstration - Role Dependencies",
          "Demonstration - Role Variables and Defaults",
          "Summary",
          "Checkout - Kubernetes and Cloud Native Associate (KCNA) + Practice Exam"
        ]
      },
      "requirements": [
        "Basic Unix/Linux Knowledge",
        "AWS Free Tier Account (Optional)"
      ],
      "description": "What’s in this course?\nThis Automation with Ansible course, designed for absolute beginners, introduces the basic fundamental blocks needed to get started with Ansible. The course begins with an introduction to Ansible and Ansible's key terminologies followed by real time Ansible setup, In-depth Architecture, Ansible Modules. This course also covers some of the core critical concepts such as Playbooks, Roles, Collections, important Ansible configuration files, Facts, Ansible Vault, Jinja Templates, Ansible for Windows, Troubleshooting scenarios and much more. Don’t worry if you are new to Ansible, we are going to get started with the absolute basics. Each lecture in this course is accompanied by real hands-on demos.\n\n\nThis course also covers Ansible AWX an upstream project of Red hat Automation Platform (previously known as Ansible tower).\n\n\nWhat is Ansible?\nIn today's complex IT landscape, managing numerous servers and ensuring consistent configurations across them can be a daunting task. This is where Ansible steps in, offering a powerful open-source platform to simplify and automate infrastructure management including the provisioning, patching, configuration, and management of operating systems and application components across enterprise data centers, cloud environments or Virtual infrastructures like VMware.\n\n\nCourse Structure:\nLectures\nDemos\nQuizzes\nAssignments\nCourse Contents:\nIntroduction to Ansible\nUnderstanding Ansible Framework and Terminologies\nSetting up Ansible Environment\nAnsible Indepth Architecture\nInventory types and Management\nModules - The Basic Building Blocks\nAdhoc Tasks\nAnsible Code Creation Process (Playbooks)\nAnsible for automating Windows tasks\nVariables, Magic Variables and Facts\nConditionals and Loops\nHandlers System\nAnsible Roles and Collections for Bigger Environments\nAnsible Galaxy for pre-built Roles and Collections\nAnsible Vault\nTroubleshooting Tips\nAnsible AWS - a web based UI\nAll sections in this course are demonstrated Live. The intention for enrolled users is to setup their own Ansible environment, perform the exercises and learn by doing!",
      "target_audience": [
        "System Administrators or System Engineers",
        "DevOps Administrators or DevOps Engineers",
        "Automation Engineers",
        "Cloud Administrators or Cloud Engineers",
        "No Scripting Knowledge"
      ]
    },
    {
      "title": "BackEnd Performance Optimization",
      "url": "https://www.udemy.com/course/backend-performance-optimization/",
      "bio": "Application Performance Optimization, DataBase Performance, Code Performance, Cache,Performance KPIs,Performance Testing",
      "objectives": [
        "Learn to optimize performance in existing codebase",
        "Learn to write high performance code",
        "Learn to Measure performance KPI of your application",
        "Backend performance Optimization"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "System Hardware Performance - Network & IO": [
          "Introduction",
          "CPU",
          "Cache",
          "Memory Usage or RAM Capacity",
          "Disk Capacity and Disk IO",
          "NetworkIO",
          "System Performance Monitoring - OS tools",
          "Summary"
        ],
        "Application Performance Key Metrics": [
          "Introduction",
          "KPIs",
          "Availability / UpTime",
          "Conceptually measuring Availability/Uptime",
          "Response Time or Latency",
          "Conceptually Measuring Response Time",
          "Throughput",
          "Conceptually Measuring Throughput",
          "Error Rate",
          "Conceptually Measuring Error Rate",
          "Summary"
        ],
        "Application Performance Testing": [
          "Introduction",
          "Performance Testing and Its purpose",
          "Measuring Application Performance",
          "Performance Testing Types",
          "Performance Testing with Jmeter -Demo",
          "Summary"
        ],
        "Monitoring and Profiling": [
          "Introduction",
          "Profiling Techniques and Profilers",
          "Profiling and Monitoring Demo -Newrelic",
          "Summary",
          "Profiling Demo"
        ],
        "Database Performance Optimisation": [
          "Introduction",
          "ACID and BASE",
          "Choosing the right data store",
          "Connection Pooling",
          "Query Optimization",
          "Indexing",
          "Summary"
        ],
        "Code and Memory Optimization": [
          "Introduction",
          "Using the right Data Structures",
          "Save Memory",
          "Optimize Concurrent Code",
          "Leveraging Async",
          "Using right IO mechanism",
          "Summary"
        ],
        "Caching and Caching Strategies": [
          "Introduction",
          "Client Side Caching",
          "Client Side Caching strategies",
          "Server Side Caching",
          "Server Side Caching stratagies",
          "CND",
          "Other Hacks",
          "Summary"
        ],
        "Bonus - Algo Complexity analysis": [
          "Introduction",
          "Complexity Analysis - 1",
          "Complexity Analysis - 2",
          "Summary"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "In today's digital landscape, where user expectations are higher than ever, achieving optimal performance of your backend systems is crucial. Whether it's about ensuring fast response times, handling large volumes of data efficiently, or supporting concurrent users seamlessly, back-end performance optimization is a cornerstone of successful application development.\nIn this course, we'll delve into the intricacies of back-end performance optimization, focusing on maximizing the efficiency of your existing resources without the need for additional hardware or infrastructure.\nWe'll explore two fundamental approaches to achieving back-end performance: optimization and scaling. Optimization involves fine-tuning your current setup - tweaking databases, optimizing code, and implementing advanced techniques like caching to squeeze out every bit of performance. On the other hand, scaling involves throwing more resources at the problem, such as adding databases, hardware, RAM, and CPUs to meet growing demands.\nOur emphasis will be on optimization - harnessing the full potential of your existing resources to deliver superior performance.\nBefore diving into the techniques of database and code optimization, we'll lay the foundation by understanding how to measure performance and identify key performance indicators (KPIs). Without proper metrics, it's impossible to gauge whether your application is meeting performance standards.\nNext, we'll explore application performance testing, equipping you with the tools to accurately measure and evaluate performance.\nMonitoring and profiling will be our next focus. Understanding how to monitor and profile your application is essential for maintaining peak performance over time.\nOnce we've covered the fundamentals, we'll delve into the core content. We'll start with optimizing database performance, addressing common bottlenecks and critical considerations.\nThen, we'll shift our focus to code optimization, exploring best practices for writing efficient code that maximizes performance.\nFinally, we'll explore caching strategies to alleviate the load on your application, boosting performance and scalability.\nBy the end of this course, you'll gain a comprehensive understanding of performance considerations and be equipped with the tools and techniques to optimize your application's performance effectively.\nTo reiterate, this course is not about scaling; it's about making the most of your existing resources.\nWe're confident that this course will add significant value to your career, empowering you to tackle performance challenges head-on.\nWe're thrilled to have you on board and look forward to embarking on this journey together. Remember, if you're not satisfied, we offer a 30-day, no-questions-asked money-back guarantee.\nWelcome to the course, and let's dive into the world of back-end performance optimization!\nSee you in the Course!",
      "target_audience": [
        "Developers, Architect, Engineering Managers, Software Engineers"
      ]
    },
    {
      "title": "Complete Guide: Making a hardware interface for MoveIt",
      "url": "https://www.udemy.com/course/complete-guide-to-using-ros-with-moveit/",
      "bio": "Bring a robot arm to life with MoveIt and ROS Control!",
      "objectives": [
        "High-Level Overview of Moveit",
        "MoveIt Setup Assistant",
        "Understanding ROS Control",
        "Create your own Hardware Interface"
      ],
      "course_content": {
        "Introduction and Setup": [
          "Introduction",
          "Using the MoveIt Setup Assistant"
        ],
        "Creating a hardware interface": [
          "ROS Control and Hardware Interface Overview",
          "Hardware Interface Installation and Overview",
          "Creating your custom H.W. Interface package",
          "Creating the Hardware Interface Class",
          "Creating Main and Compiling",
          "Adding Custom Messages for Robot Hardware Control",
          "Creating the Read and Write Functions to the H.w. Interface",
          "Configuration and Launch Files",
          "Setting up RVIZ for MoveIt"
        ],
        "Modifying the H.W Interface for the Real Robot": [
          "Hardware Interface Robot Demo",
          "Buffering for Communication Stability",
          "Configuring Velocities for Real Robot Deployment"
        ]
      },
      "requirements": [
        "ROS basics",
        "C++"
      ],
      "description": "This course is designed for students with some ROS experience and who are wanting to use ROS to control a robotic arm. This course teaches how to actually use MoveIt - from start to finish- with a real robot arm. This is the most comprehensive course on creating a hardware interface to enable real robots to work seamlessly with MoveIt.\n\nI begin with the basics of the MoveIt Setup Assistant, which is a simple wizard application for describing the physical characteristics of your actual robot to the MoveIt software. I then use a templated approach to creating a custom hardware interface built with ROS Control.  This hardware interface provides the direct link between ROS and the real robot by leveraging ROS Control’s ability to transform MoveIt path planning into real-time joint commands.\n\nThis course has been developed using a industrial Aubo robot which is directly interfaced to and Arduino type microcontroller. Because of the Arduino interface, this course is directly applicable to any robot - wether it is industrial or DIY - that can be controlled using a series joint commands.\n\n\nI have created this course because when I was working through the process of using MoveIt with an actual robot, I was surprised that there is almost no documentation that walks you through the entire process. This course is my attempt to fill this need.",
      "target_audience": [
        "Robot enthusiast",
        "Robot developer",
        "Robotics Engineer",
        "College Students studying robotics"
      ]
    },
    {
      "title": "Getting Started with Windows 10 IoT Core Development",
      "url": "https://www.udemy.com/course/getting-started-with-windows-10-iot-core-development/",
      "bio": "A Kickstart for the Windows 10 IoT Core Beginner",
      "objectives": [
        "Setting up a complete toolchain for developing own Windows 10 IoT Core applications",
        "Developing basic foreground and background applications with web access",
        "Accessing hardware interfaces like the GPIO pins from within a Windows 10 IoT Core application in C++",
        "Setting up a basic prototype electronic circuit",
        "Handling user inputs from physical push buttons",
        "Designing basic user-interfaces",
        "Using development tools like SSH or FTP that help in typical development situations."
      ],
      "course_content": {
        "Introduction": [
          "Welcome!"
        ],
        "Installing Tools and Configuration": [
          "Introduction: Tools Overview",
          "Windows 10",
          "Visual Studio",
          "Windows 10 IoT Core Dashboard",
          "Conclusion"
        ],
        "Setting up a Device": [
          "Introduction: The Device Site",
          "Get a Device",
          "Install Windows 10 IoT Core",
          "Configure the Development Board",
          "Add a button and an LED",
          "Conclusion"
        ],
        "Programming: Hello Windows IoT World!": [
          "Introduction",
          "Use the GPIO pins: Hello IoT World!",
          "Signal the international Morse code distress signal \"SOS\".",
          "Get User Input with the Push Button (1/2)",
          "Get User Input with the Push Button (2/2)",
          "Hello Headed IoT World, GUI",
          "Hello Headed IoT World, Asynchronous Method Calls",
          "Hello Headed IoT World, Device Interaction",
          "Packaging Applications",
          "Conclusion"
        ],
        "Helpful Development Tools": [
          "Introduction",
          "Device Portal: A Web Interface",
          "Terminal Access with SSH",
          "File Transfer via FTP",
          "Conclusion"
        ],
        "Conclusion": [
          "Recap: What did you learn and where to go from here?"
        ]
      },
      "requirements": [
        "A Windows 10 PC",
        "Basic knowledge of C++ can be helpful, but is not mandatory.",
        "To run the applications on the target IoT device, a Raspberry Pi is used in this course as well as an LED, a push button, some jumper wires, and a breadboard for prototyping."
      ],
      "description": "This course gives an introduction to all needed topics for getting started with the application development for Windows 10 IoT Core devices. It is the course that I would like to have had when I started to get interest in Windows 10 IoT Core application development. Throughout the course you learn\nhow to set up all needed tools like on your developer PC,\nhow to set up a target device, which is a Raspberry Pi in this course.\nFurthermore, you learn\nthe basics of programming foreground and background applications in C++,\nand how to package your application for distribution.\nThe final section of the course explains the usage of typical developer tools like SSH or FTP that will be helpful throughout your development activities.\nThe whole course is organized into individual sections that have a dedicated focus on one of the topics learning topics mentioned above. Each lecture within the section starts with a clear description of the lecture goal and is followed by a compact video presentation and description. All the videos are prepared such that they could be followed with you sitting in front of your developer machine and replicating the presented content. Each lecture closes with a brief summary.\nSince Windows 10 IoT Core is targeted to embedded devices, part of the course makes use of some electronic components and circuitry. These are\na Raspberry Pi, SD card, power supply, network access,\na breadboard, an LED, a push button, some jumper wires.\nTo learn the basics about Windows 10 IoT Core application development it is not absolutely necessary to have these components at hand. However, to get most out of this course I recommend to have these components at hand.\n\n\nThanks a lot for your interest in this course. Let me know if you have any questions and hope to see you in the course then!\nFlorian",
      "target_audience": [
        "Novices in the field of Windows 10 IoT development, who want to get an introduction and kick start for own software projects using C++.",
        "This course is not for expert Windows IoT Core developers."
      ]
    },
    {
      "title": "Electrical Design Bootcamp - LV Power Calculations",
      "url": "https://www.udemy.com/course/simaris_design/",
      "bio": "Learn how to plan and dimension your power distribution using this powerful (and free of charge) software from Siemens",
      "objectives": [
        "To download, install and register Simaris Design and Simaris Curves with tips on what to pay attention to",
        "About the interface, workspace, all the sections, various settings etc.",
        "To create a basic single line diagram and prepare the project documentation (various lists (cables, consumers, device settings, short ciruit current) etc.",
        "To create an advanced single line diagram and perform power calculations",
        "To dimension cables correctly - with important things to take into consideration",
        "To dimension cable correctly when incorporating variable frequency drives (harmonic content)",
        "Various tips to prepare the single line diagram for the delivery to the customer",
        "Save time by immediately start to learn the best program, not like me to spend years in the research"
      ],
      "course_content": {
        "Download, install and register Simaris Design and Simaris Curves": [
          "Let's find Simaris and download the Simaris Suite installer",
          "Register Simaris Suite (get a registration link per email)",
          "Which programs from Simaris Suite to install",
          "Download and install necessary programs",
          "First open of the Simaris Design/Curves program"
        ],
        "First steps in Simaris - workspace, sections, settings": [
          "First steps in Simaris"
        ],
        "Basic and advanced single line diagrams": [
          "Basic single line diagram",
          "Advanced single line diagram (including dimensioning of the whole power system)"
        ],
        "Dimensioning power cables (including special topic - harmonic content)": [
          "Dimensioning cables - what to pay attention to",
          "Dimensioning cables - special topic - harmonic content"
        ],
        "Last Tips&Tricks on Simaris Design and Simaris Curves and recapitulation": [
          "Last Tips in Simaris Design and Simaris Curves",
          "Recapitulation - what we've learned so far working our way through Simaris"
        ]
      },
      "requirements": [
        "Student needs to be understand the basics of power calculations, but it's not critical"
      ],
      "description": "*** UPDATES ***\n- September 23, 2019 - Captions in English (EDITED, not auto-generated).\n\n\nDear Student,\n\n\nI welcome you to my tutorial about low voltage power calculations using Simaris Design and Simaris Curves from Siemens.\n\n\nPlanning of an automation project and the electrical wiring on that project starts with power calculations. This is one of the first steps I take when I start to work on a new automation system - I plan and dimension my low voltage power system.\n\n\nI've tried years ago different software from all the biggest manufacturers and concluded that Simaris Design is, according to my experience, by far the best one out there to quickly setup a project, create single line diagrams and output all the possible documents that one needs when performing power calculations (project documentation, different list in Excel, e.g. busbar, cable, device settings, selectivity documentation etc., single line diagrams in PDF and i DWG/DXF).\n\n\nLanguage support is great, meaning that you can set your workspace and the single line diagram to the language of your choice. The same goes for the output documentation.\n\n\nWhen creating single line diagrams in Simaris Design the devices you use are grouped into three categories:\n· System infeed: (transformer with primary and secondary side, transformer only with secondary side, coupling to use when you have also emergency power supply, like a diesel aggregate (generator) etc.)\n· Distribution boards: (with busbars, without busbar, sub-distribution boards etc.)\n· Final circuits: (electrical consumers) ranging from general devices,  motors (including DOL, softstarter, reverse-duty and frequency converter), power outlets up to special dummy loads. You even have a possibility to insert a charging unit for electric cars. Talking about awesomeness :)\n\n\nI definitely highly recommend this software to all of you who work in the electrical engineering field. Even if you don't enroll in my course, I recommend that you invest some time to get to know this program. It's worth it.\n\n\nI've been using Simaris for years now on many different project across industries and it has always served me well.\n\n\nOne of the last project where I had to do some serious dimensioning of my protection devices and cables was a one from the refrigeration industry.\nWe had about 715 A of current consumption in our cabinet. Total of 3 power enclosures and 1 PLC enclosure.\nIn one of the cabinets I had to design a power distribution system for two softstarters to power two screw compressors. One of them 160kW and the other 132 kW. Not to mention that in the area where we had to install our cabinets and pull all the cables the temperature goes up to 38 °C in summer. So I had to be very careful when dimensioning the cables. And we did it! We commissioned the system this summer in July and everything went in perfect order (talking about the worst case scenario - summertime).\nSimaris Design has been a great companion during the dimensioning and in general electrical design on this project.\n\n\nI hope you will enjoy working your way through my course on Simaris Design and I hope you will learn a lot.\nDon't forget to have fun on the way!\n\n\nYour Instructor for Electrical Design,\nIvan",
      "target_audience": [
        "Students of electrical engineering",
        "Electricians, Engineers, Technicians",
        "Maintenance department in factories when planning new investments in production",
        "Construction site engineers to quickly plan and dimension their low voltage installation",
        "Engineering offices when desinging new electrical and automation systems",
        "Anyone who needs ocasional dimensioning of their low voltage installations"
      ]
    },
    {
      "title": "SOTIF - Safety Of the Intended Functionality - ISO 21448",
      "url": "https://www.udemy.com/course/sotif-safety-of-the-intended-functionality-iso-21448/",
      "bio": "Mastering SOTIF: Principles, Risk Mitigation, Validation Strategies, and Lifecycle Integration for Vehicle Safety",
      "objectives": [
        "Understand the Principles of SOTIF",
        "Identify and Mitigate SOTIF-Related Risks",
        "Develop and Apply Verification and Validation Strategies",
        "Implement a Lifecycle Approach to SOTIF"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge on Functional Safety"
      ],
      "description": "This course provides a comprehensive understanding of the Safety of the Intended Functionality (SOTIF) framework as defined in ISO 21448. Designed for professionals in the automotive and mobility sectors, the course addresses the increasing complexity of automated systems and the importance of ensuring their safety in real-world conditions.\nParticipants will explore the principles of SOTIF and how it complements ISO 26262 by focusing on risks that arise not from system malfunctions but from functional insufficiencies and environmental conditions. The course emphasizes identifying and mitigating these risks to prevent hazardous scenarios and ensure vehicle safety.\nKey areas of focus include the identification of functional insufficiencies, the evaluation of known and unknown hazardous scenarios, and the development of robust mitigation strategies. Participants will learn to implement verification and validation (V&V) processes that provide evidence of system safety and ensure compliance with the SOTIF standard.\nThe course adopts a lifecycle perspective, covering the integration of SOTIF activities into every stage of system development—from specification and design to testing, deployment, and monitoring during the operational phase. Practical examples, case studies, and interactive exercises are included to enhance understanding and application.\nBy the end of the course, participants will have the tools and knowledge to effectively manage SOTIF-related activities, improve system safety, and support innovation in the development of automated driving technologies. This course is ideal for engineers, developers, project managers, and safety professionals seeking to master SOTIF concepts and practices.",
      "target_audience": [
        "Functional Safety Engineer",
        "Automotive Engineer",
        "Project Manager",
        "Safety Manager",
        "Program Manager"
      ]
    },
    {
      "title": "Beyond Programming: The Engineer Every Tech Company Needs",
      "url": "https://www.udemy.com/course/software-engineering-how-to-become-a-pro-software-engineer/",
      "bio": "Software Engineering: Master Agile, SCRUM, UML, System Design, and Clean Code for Professional Software Development",
      "objectives": [
        "Create UML diagrams for structure and behavior.",
        "Write clear software requirements.",
        "Navigate the SDLC with confidence.",
        "Design systems and high-level architectures.",
        "Master team roles and tech organizational structures.",
        "Write clean, maintainable code with best practices.",
        "Manage deployment and post-release maintenance.",
        "Implement Agile (Scrum/Kanban) effectively.",
        "Apply testing techniques to find and prevent issues."
      ],
      "course_content": {
        "Introduction: The Bigger Picture": [
          "Your Learning Adventure: What's Inside the Course",
          "Introduction to Software Engineering"
        ],
        "Software Team Roles: Who Builds What": [
          "Organizational Structure",
          "Management Levels: Top Management",
          "Management Levels: Middle and Junior Management",
          "Operational Staff and Other Roles",
          "A Day in the Life of a Software Engineer",
          "The Bigger Picture of Software Engineering | Quick Assessment",
          "The Bigger Picture of Software Engineering | Quick Summary"
        ],
        "Mastering the Software Development Life Cycle (SDLC)": [
          "Introduction to Software Development Life Cycle",
          "Essential SDLC Phases for Building Reliable Software",
          "Why Software Engineering Is Important",
          "From Personal Programming to Professional Development",
          "A Comprehensive Journey Through SDLC Phases",
          "Software Development Life Cycle | Quick Assessment",
          "Software Development Life Cycle | Quick Summary"
        ],
        "================== SDLC | Phase 1 ==================": [
          "SDLC Phase 1: Requirements Engineering"
        ],
        "From Ideas to Requirements: Building the Foundation": [
          "Introduction To Requirements Engineering",
          "Importance of Well-Defined Requirements",
          "User Requirements and System Requirements",
          "Functional and Non-functional Requirements",
          "Overlapping Requirements",
          "Requirements Engineering | Quick Assessment",
          "Requirements Engineering | Quick Summary"
        ],
        "From Chaos to Clarity: Mastering Requirements Engineering": [
          "Introduction To Requirements Engineering Process",
          "Requirements Gathering",
          "Difference Between Gathering and Elicitation",
          "Requirements Analysis",
          "Requirements Specification",
          "Requirements Validation",
          "Requirements Engineering | Quick Assessment",
          "Requirements Engineering | Quick Summary",
          "Gathering Requirements with Customer"
        ],
        "================ SDLC | Phase 2 (Pt.1) ================": [
          "SDLC Phase 2 (Pt.1): Design Phase"
        ],
        "System Design: Building What Works": [
          "Introduction to System Modelling",
          "The Hidden Benefits of System Modeling",
          "Different Perspectives of System Modeling"
        ],
        "External System Modelling: Seeing from Outside": [
          "External Perspective For System Modelling",
          "Introduction To Use Case Diagram",
          "PMS Example: Defining System Actors",
          "PMS Example: Defining System Use Cases",
          "PMS Example: Visualizing Interactions",
          "PMS Example: Include Relationship",
          "PMS Example: Extend Relationship",
          "PMS Example: Generalization Relationship"
        ],
        "Interaction System Modelling: How Components Communicate": [
          "Interaction Perspective For System Modelling",
          "PMS Example: Initializing Sequence Diagram",
          "PMS Example: Messages Flow",
          "PMS Example: Alternative Frames",
          "PMS Example: Activation Boxes"
        ]
      },
      "requirements": [
        "No experience needed—just curiosity and a willingness to learn!"
      ],
      "description": "Do you dream of becoming a skilled, professional software engineer who can confidently tackle complex projects and make a meaningful impact in the tech industry? If so, Beyond Programming: How To Build Software That Truly Matters is designed with you in mind. This comprehensive course provides an in-depth exploration of the essential principles, skills, and tools that every software engineer must master to succeed. With a blend of theory and hands-on practice, you'll not only learn the core technical concepts but also gain a problem-solving mindset and practical design skills that separate professionals from beginners. This course is your gateway to a rewarding and successful career in software engineering, equipping you with the tools to build reliable, efficient, and high-quality software.\n\n\nBuild a Deep Understanding of Core Software Engineering Concepts:\nThis course aims to give you a thorough understanding of the foundational principles and concepts that drive successful software engineering. Each module is crafted to provide you with real-world skills that are both relevant and applicable, whether you're working with data structures, algorithms, or tackling complex design challenges. By the end of this course, you’ll be able to manage complex projects, collaborate effectively within development teams, and create scalable, robust solutions that meet industry standards. With a focus on the entire software lifecycle, you’ll walk away with a comprehensive toolkit that will set you apart as a professional software engineer.\nMaster the Key Principles of Software Development and Design\nDevelop Skills to Write Clean, Maintainable, and Efficient Code\nLearn How to Ensure Quality through Testing and Debugging\nGain Hands-On Experience with Industry-Standard Practices and Methodologies\nWork on Real-World Projects to Build Practical and Marketable Skills\n\n\nGain Real-World Skills for a Rewarding Career in Software Engineering:\nSoftware engineering is much more than just writing code; it's about identifying problems, designing solutions, and building systems that make a difference in people’s lives. In this course, you’ll explore the full software development lifecycle, from initial planning and design to deployment and maintenance, learning how to make each stage efficient and effective. You’ll delve into software quality, testing, debugging, and security practices, and discover how to ensure every piece of software you build is reliable, secure, and performs to the highest standards.\nThese skills are crucial in today's fast-paced technology landscape, where engineers must be adaptable, versatile, and ready to handle a variety of challenges. Whether you’re aiming to work for a top tech company, contribute to impactful open-source projects, or start your own software business, this course will prepare you with the foundational skills and practical experience needed to succeed. You’ll gain the confidence and competence required to excel in software engineering roles across diverse industries and sectors.\n\n\nWhat You’ll Learn in This Course:\nIn this course, you’ll explore an extensive array of topics essential to becoming a professional software engineer. Each topic is designed to deepen your understanding and equip you with practical skills that will directly benefit your career.\nSoftware Development Lifecycle: Master each phase of the software development lifecycle, including planning, design, development, testing, deployment, and maintenance. Understand how to apply these stages to real-world projects, ensuring you can manage the full lifecycle of software products effectively and efficiently.\nSystem Design and Architecture: Dive into the world of system design and architecture, exploring architectural patterns and principles that will allow you to create solutions that are robust, scalable, and maintainable. You’ll learn about commonly used patterns, including MVC, Microservices, and Client-Server, and how to choose the best architecture for different types of projects.\nCoding Best Practices: Writing code is easy; writing clean, readable, and efficient code is a skill that requires practice and guidance. This course will teach you techniques for improving code quality, such as meaningful naming conventions, modularization, and refactoring. You'll learn how to write code that is both efficient and easy to understand, making collaboration and future modifications simpler.\nQuality Assurance and Testing: Discover the importance of quality assurance in software engineering, from unit testing and integration testing to system and acceptance testing. Learn how to implement these testing methods to ensure your software functions as expected, is free from bugs, and meets industry standards for performance and reliability.\nDebugging and Problem Solving: Equip yourself with critical debugging and problem-solving skills. You’ll learn how to identify, analyze, and resolve errors efficiently, using effective troubleshooting techniques that will save you time and reduce frustration. Mastering these skills will make you a more resourceful and self-sufficient engineer.\nAgile Methodologies and Project Management: Get hands-on with Agile principles and frameworks, including Scrum and Kanban. You’ll discover how these methodologies improve project flow, encourage collaboration, and enhance flexibility, making you adaptable in fast-changing development environments. Learn to work efficiently as part of a team and understand how to keep projects on track.\nSoftware Security Essentials: In today’s connected world, software security is more critical than ever. This course introduces you to the basics of secure coding practices and explains how to safeguard software against common vulnerabilities. You’ll learn techniques to protect your applications and users, ensuring that your software is resilient and trustworthy.\n\n\nHow You’ll Learn:\nThe course structure is designed to be engaging, accessible, and suited for learners at all levels. We break down complex topics into clear, digestible lessons that are easy to follow and apply. You’ll learn through a combination of video lectures, practical examples, quizzes, and hands-on coding exercises that reinforce each concept. The variety of learning tools and methods will keep you engaged, motivated, and on track toward mastering software engineering.\nStep-by-Step Lessons: Each concept is introduced with simple, step-by-step explanations, followed by practical demonstrations that show you how to apply the concepts in real-world scenarios. This approach helps build a deep, practical understanding of each topic.\nReal-World Projects and Exercises: Throughout the course, you’ll work on projects that simulate real-world challenges software engineers face, providing you with hands-on experience that is invaluable in a professional setting. These projects will not only reinforce your learning but also allow you to build a portfolio that showcases your skills.\nInteractive Coding Exercises and Quizzes: Test your knowledge with coding exercises and quizzes, designed to ensure that you’re retaining and understanding key concepts. These exercises provide instant feedback, helping you identify areas where you may need further practice.\nDynamic, Supportive Learning Environment: The course is structured to keep you engaged, with lessons that vary in length and format, interactive components, and a focus on skill-building. You’ll also have access to a community of learners, where you can ask questions, share insights, and collaborate with peers.\n\n\nWhat You’ll Walk Away With:\nBy the end of this course, you’ll possess a solid grasp of the core principles, skills, and practices that define a professional software engineer. You’ll be able to confidently tackle complex projects, write clean and efficient code, and understand the best practices that guide top engineers. Here’s what you’ll gain:\nComprehensive Software Engineering Skill Set: Master the essential skills that define a professional software engineer, from system design to quality assurance, coding best practices, and debugging techniques.\nProblem-Solving Mindset and Analytical Skills: Learn to think like an engineer, approaching problems strategically and creatively. Develop critical thinking skills that allow you to analyze challenges and devise effective, efficient solutions.\nReal-World Experience and Practical Portfolio: With hands-on projects and exercises, you’ll build a portfolio that demonstrates your ability to manage the complete software lifecycle. This practical experience will prepare you for professional roles and help you stand out in job applications.\nCareer-Ready Knowledge and Confidence: This course provides a strong foundation for a successful career in software engineering, whether you’re aiming for a job at a top tech company, freelancing, or starting your own projects. You’ll feel ready to tackle professional challenges and make an impact in the industry.\nA Pathway to Lifelong Learning: Software engineering is a field that constantly evolves, and this course equips you with the mindset and tools to continue learning and adapting to new technologies and methodologies, ensuring that your skills stay relevant and valuable.\n\n\nThis course is more than just an introduction; it’s a complete, structured pathway toward becoming a professional software engineer. You’ll gain not only the knowledge you need but also the skills, experience, and confidence to succeed. Enroll today, and start building a fulfilling career in software engineering. With this course, you’re not just learning; you’re transforming yourself into a highly skilled, adaptable, and capable engineer ready to make a difference.",
      "target_audience": [
        "Aspiring Software Engineers: Beginners who have basic programming knowledge and want to pursue a career in professional software industry.",
        "Computer Science Students: Undergraduate or graduate students looking to complement their studies with practical software engineering skills.",
        "Enthusiastic Learners: Anyone passionate about software development and interested in how complex software systems are designed, built, and maintained.",
        "Professional Developers: Programmers seeking to enhance their understanding of software development methodologies and best practices.",
        "Hobbyist Programmers: Individuals who enjoy programming as a hobby and want to understand how software is professionally engineered.",
        "Quality Assurance (QA) Professionals: Those in testing roles who want to deepen their understanding of the software development process to enhance their testing strategies.",
        "Product Managers and Business Analysts: Professionals who work closely with development teams and seek to understand the technical aspects to improve communication and project outcomes."
      ]
    },
    {
      "title": "The Git, Github & GitLab Bootcamp",
      "url": "https://www.udemy.com/course/the-git-github-gitlab-bootcamp/",
      "bio": "Master the essentials and the tricky bits: rebasing, squashing, stashing, reflogs, blobs, trees, & more!",
      "objectives": [
        "Students will learn how to effectively add, commit, and manage changes within Git repositories, ensuring smooth and efficient version control.",
        "Gain proficiency in setting up, configuring, and synchronizing local and remote repositories, enabling seamless collaboration and code sharing.",
        "Understand and execute Git merges, along with techniques for resolving merge conflicts, ensuring a cohesive and conflict-free codebase.",
        "Discover and apply advanced Git functionalities such as stashing, rebasing, custom aliases.",
        "Master the use of GitHub and GitLab for version control, including creating pull requests, conducting code reviews."
      ],
      "course_content": {
        "Introduction to Version Control": [
          "Understanding Version Control",
          "Introduction to Git",
          "Installation and Configuration",
          "Module1-Quiz"
        ],
        "Git Basics": [
          "Git Basics",
          "Git Workflow",
          "Git Basics Lab -Session",
          "Git Basics Lab Session Part-2",
          "Git Basics Lab Session Part-3",
          "Module-2 Quiz",
          "Assignment 1",
          "Assignment Solution 1",
          "Assignment 2",
          "Assignment Solution 2"
        ],
        "Advanced Git Concepts": [
          "Gitlog, Reflog",
          "Git Hooks",
          "Git Interactive Rebase",
          "Git Aliases",
          "Submodules and Subtrees",
          "Module3-Quiz",
          "Assignment 3",
          "Assignment 4",
          "Assignment Solution 3",
          "Assignment Solution 4"
        ],
        "Introduction to GitHub": [
          "Introduction to GitHub",
          "Collaboration on GitHub",
          "Adding local repo to remote repository"
        ],
        "GitHub Branching and Workflows": [
          "GitHub Branching Strategies",
          "GitHub Actions",
          "GitHub Pages",
          "Module 5-Quiz",
          "Assignment 5",
          "Assignment 6"
        ],
        "Introduction to GitLab": [
          "Introduction to GitLab",
          "Exploring Git Lab",
          "GitLab CI CD",
          "GitLab Merge Request"
        ],
        "GitLab Advanced Features": [
          "GitLab Advanced Features - GitLab Groups and Sub-groups",
          "GitLab Advanced Features - GitLab Container Registry",
          "GitLab Advanced Features GitLab Container Registry Lab Session",
          "GitLab Advance Features - GitLab Pages",
          "Quiz Module 6&7",
          "Assignment-7"
        ],
        "Git Best Practices and Tips": [
          "Effective Git Usage",
          "Git Security Best Practices",
          "Git Tips and Tricks"
        ]
      },
      "requirements": [
        "Familiarity with basic computer operations, such as navigating the file system, using the command line, and basic text editing.",
        "A computer with internet access is required to install Git, access GitHub and GitLab, and participate in hands-on lab sessions.",
        "A text editor or Integrated Development Environment (IDE) of your choice, such as Visual Studio Code, Sublime Text, or Atom, for writing and editing code.",
        "Some experience with any programming language will be helpful but not mandatory. The course will focus on version control concepts that are applicable across various languages and development environments."
      ],
      "description": "Unlock the full potential of version control and collaborative development with our comprehensive course on Git and GitHub. Designed for beginners and advanced users alike, this course will guide you through essential concepts, practical workflows, and advanced techniques to boost your productivity and streamline your development process.\n\nWhat You Will Learn:\n\nModule 1: Introduction to Version Control\nUnderstanding Version Control: Learn the importance of version control in software development.\nIntroduction to Git: Discover the basics of Git, the most popular version control system.\nInstallation and Configuration: Get Git up and running on any platform and configure essential settings.\nModule 2: Git Basics\nCreating a Repository: Initialize and clone Git repositories.\nGit Workflow: Master the basic Git workflow, including staging and committing changes.\nCommitting Changes: Learn how to make and commit changes effectively.\nBranching and Merging: Explore branching strategies and merge branches seamlessly.\nResolving Conflicts: Understand and resolve merge conflicts with ease.\nUndoing Changes: Revert commits and discard unwanted changes.\nModule 3: Advanced Git Concepts\nGit Log and Reflog: Analyze repository history with powerful Git commands.\nGit Hooks: Automate tasks with Git Hooks.\nInteractive Rebase: Rewrite commit history like a pro.\nGit Aliases: Create custom Git commands for efficiency.\nSubmodules and Subtrees: Manage complex projects with submodules and subtrees.\nModule 4: Introduction to GitHub\nGetting Started with GitHub: Set up your GitHub account and profile.\nGitHub Repositories: Create, fork, and clone repositories on GitHub.\nCollaboration on GitHub: Master pull requests and code reviews.\nModule 5: GitHub Branching and Workflows\nGitHub Branching Strategies: Implement effective branching strategies.\nGitHub Actions: Automate workflows with GitHub Actions for CI/CD.\nGitHub Pages: Host static websites using GitHub Pages.\nModule 6: Introduction to GitLab\nGetting Started with GitLab: Create and navigate your GitLab account.\nGitLab Repositories: Manage repositories and import projects on GitLab.\nGitLab CI/CD: Configure CI/CD pipelines for automated testing and deployment.\nGitLab Merge Requests: Streamline code reviews with merge requests.\nModule 7: GitLab Advanced Features\nGitLab Groups and Subgroups: Organize code with groups and subgroups.\nGitLab Container Registry: Manage Docker images with GitLab’s Container Registry.\nGitLab Pages: Host static websites with GitLab Pages.\nModule 8: Git Best Practices and Tips\nEffective Git Usage: Follow best practices for commits, branching, and collaboration.\nGit Security Best Practices: Secure your Git repositories and workflows.\nGit Tips and Tricks: Boost your productivity with advanced Git commands and tips.\n\n\n\n\nAdditional Key Skills You Will Master:\n\n\nUnderstanding Git Internals: Understand how Git works behind the scenes.\nGit Objects: Explain the difference between Git objects: trees, blobs, commits, and annotated tags.\nEssential Git Workflow: Master the essential Git workflow: adding & committing.\nWorking with Git Branches: Create and manage branches effectively.\nMerging and Conflict Resolution: Perform Git merges and resolve merge conflicts.\nUsing Git Diff: Use Git Diff to reveal changes over time.\nGit Stashing: Master Git stashing for temporary work storage.\nUndoing Changes: Undo changes using git restore, git revert, and git reset.\nLocal and Remote Repositories: Work with local and remote repositories.\nCollaboration Workflows: Master collaboration workflows such as pull requests and \"fork & clone\".\nInteractive Rebase: Squash, clean up, and rewrite history using interactive rebase.\nRetrieving Lost Work: Retrieve \"lost\" work using git reflogs.\nCustom Git Aliases: Write custom and powerful Git aliases.\nGit Tags: Mark releases and versions using Git tags.\nHosting with GitHub Pages: Host static websites using GitHub Pages.\nMarkdown READMEs: Create comprehensive markdown READMEs.\nGitHub Gists: Share code and snippets using GitHub Gists.\n\n\nWhy Enroll in This Course?\n\n\nComprehensive Curriculum: Covers everything from basic Git commands to advanced GitHub and GitLab features.\nHands-On Labs: Practical sessions to reinforce your learning.\nAssignments and Quizzes: Test your knowledge and skills.\nExpert Guidance: Learn from experienced instructors with real-world insights.\nCareer Advancement: Equip yourself with skills in high demand by employers.\n\n\nEnrol now and become a Git and GitHub expert, capable of managing complex projects and collaborating seamlessly with your team. Whether you're a beginner or looking to enhance your existing skills, this course is your pathway to mastering version control and collaborative development.",
      "target_audience": [
        "Individuals who are new to programming and want to learn the essential skills of version control to manage their code efficiently.",
        "Students and hobbyists looking to build a strong foundation in Git and GitHub to enhance their coding projects and prepare for future professional opportunities.",
        "Experienced developers seeking to deepen their knowledge of advanced Git features, improve their workflow, and master collaboration techniques using GitHub and GitLab.",
        "Professionals responsible for overseeing software development projects, who need to understand version control systems to ensure smooth team collaboration and project management.",
        "Individuals interested in contributing to open source projects, who need to understand the workflow and best practices for using Git and GitHub.",
        "Academics and educators who want to incorporate version control into their curriculum or personal learning to stay current with industry standards."
      ]
    },
    {
      "title": "Object-Oriented Programming Using Java",
      "url": "https://www.udemy.com/course/object-oriented-programming-using-java/",
      "bio": "Solid foundation to build scalable Java applications",
      "objectives": [
        "Object Oriented Programming",
        "Java programming fundamentals.",
        "Plain text java programming.",
        "NetBeans IDE 8.2",
        "Database Programming",
        "Graphical User Interface"
      ],
      "course_content": {
        "Class, Method and Attribute": [
          "Create your first programs",
          "Adding methods to class",
          "Class Attribute",
          "Create method example",
          "Parameter methods"
        ],
        "Type Casting": [
          "Creating a class",
          "Standardize code",
          "Casting integer to double",
          "Casting integer to string"
        ],
        "Control program flow": [
          "Generate random number",
          "Testing the random number using IF",
          "Create method to calculate taxes",
          "Handle multiple conditions.",
          "Creating Java Application",
          "Processing user inputs.",
          "Switch Case",
          "Score Evaluation method"
        ],
        "Iteration": [
          "Loop Algorithm.",
          "While Loop",
          "For Loop"
        ],
        "Arrays": [
          "Arrays Declaration",
          "Change an array Item",
          "Array Length",
          "Loop through arrays"
        ],
        "Inheritance": [
          "Implementing class inheritance",
          "Consume a class"
        ],
        "Encapsulation": [
          "Create sample class",
          "Implementing Encapsulation",
          "Access private attribute",
          "Create attribute' s set and get methods",
          "Working with set and get methods"
        ],
        "Special Objects": [
          "Abstract Classes",
          "Abstract methods",
          "Enum",
          "Method Overloading",
          "Create Interface",
          "Implementing Class Interface",
          "Abstraction"
        ],
        "Database programming": [
          "Entity relationship diagram - ERD",
          "Invoke JDBC Driver",
          "Database connection required classes",
          "Create a connection to database",
          "Execute Database Query",
          "Web Application Architecture"
        ]
      },
      "requirements": [
        "English A2",
        "Basic arithmetic operations"
      ],
      "description": "Welcome to \"Object-Oriented Programming Using Java\" – the comprehensive course designed to guide you through the fascinating world of Object-Oriented Programming (OOP) using the powerful Java language. Whether you're a beginner eager to embark on your programming journey or an experienced developer looking to enhance your skills, this course is your gateway to mastering the principles and practices of OOP in Java.\nIn this course, we will unravel the core concepts of Object-Oriented Programming, providing you with a solid foundation to build robust and scalable Java applications. From understanding the fundamentals of classes and objects to exploring advanced topics such as inheritance, polymorphism, encapsulation, and abstraction, each module is crafted to incrementally deepen your knowledge and proficiency.\nThrough a combination of engaging lectures, hands-on coding exercises, and real-world examples, you will not only grasp theoretical concepts but also gain practical experience applying them. Our goal is to empower you to write clean, modular, and efficient code, laying the groundwork for developing sophisticated software solutions.\nNo matter your background, our user-friendly approach ensures that you can follow along seamlessly. By the end of this course, you will have the confidence to design and implement Java applications using the Object-Oriented Programming paradigm. Get ready to unlock the potential of Java and take your programming skills to new heights. Let's embark on this exciting journey together!",
      "target_audience": [
        "Programmers",
        "Computer Science Students",
        "Beginners to programming."
      ]
    },
    {
      "title": "Mastering Presto: Hands-On Learning",
      "url": "https://www.udemy.com/course/mastering-presto/",
      "bio": "Learn Presto - distributed SQL Query Engine for Big Data! Query parquet files in AWS S3! Join them with PostgreSQL data.",
      "objectives": [
        "Query parquet files in AWS S3",
        "Deploy to Kubernetes cluster in AWS",
        "Join parquet files in S3 with data from PostgreSQL table",
        "Deep knowledge about Presto's internal architecture",
        "Learn more about Cassandra, Kafka, Redshift, Hive and PostgreSQL",
        "Run development environment in local Kubernetes cluster using minikube",
        "Understand Presto configurations",
        "Presto service providers",
        "Build Docker images for Presto and Hive",
        "Create a Presto Helm chart"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Presto in 5 minutes",
          "Presto use cases"
        ],
        "Presto Theory - Architecture": [
          "Presto CLI",
          "Presto Coordinator",
          "Presto Worker",
          "Presto Connector",
          "Hive Metastore",
          "Presto Query Execution Model",
          "Presto SQL - Data Types and Reserved Keywords",
          "Quiz"
        ],
        "Presto Theory - Connectors": [
          "Hive connector",
          "Cassandra connector",
          "PostgreSQL connector",
          "Redshift connector",
          "Kafka connector",
          "Quiz"
        ],
        "Presto Theory - Configuration": [
          "Node configuration",
          "JVM configuration",
          "Log configuration",
          "Coordinator/Worker configuration",
          "Catalog configuration",
          "Quiz"
        ],
        "Build Docker images": [
          "Install Docker",
          "Build Docker image - Presto",
          "Build Docker image - Hive",
          "Quiz"
        ],
        "Build local development environment in Kubernetes": [
          "Theory - Introduction to Kubernetes",
          "Theory - Introduction to Helm",
          "Run local Kubernetes cluster",
          "Create a helm chart - PostgreSQL",
          "Create a helm chart - Presto Coordinator",
          "Create a helm chart - Presto Worker",
          "Create a helm chart - Hive metastore",
          "Deploy to local Kubernetes cluster",
          "Quiz"
        ],
        "Query parquet files in AWS S3": [
          "Install AWS client",
          "Create IAM user in AWS",
          "Attach AWS permissions",
          "Theory - What is the parquet file format and why is so popular?",
          "Create S3 bucket and upload parquet files",
          "Analyse parquet files in AWS S3",
          "Quiz"
        ],
        "Join parquet files in AWS S3 with PostgreSQL data": [
          "Add PostgreSQL catalog",
          "Join parquet files in S3 with PostgreSQL data",
          "Presto Web Interface",
          "Quiz"
        ],
        "Deploy to AWS Kubernetes cluster": [
          "Create ECR Repositories and push Docker images",
          "Create Kubernetes cluster in AWS",
          "Deploy to AWS Kubernetes cluster",
          "Quiz"
        ],
        "Presto services": [
          "Vanilla Presto",
          "Presto on EMR",
          "AWS Athena",
          "Starburst Presto"
        ]
      },
      "requirements": [
        "An Internet connection",
        "Computer with either MacOS or Linux",
        "Basic comprehension in SQL and any database",
        "Basic knowledge about Docker, Kubernetes and Helm",
        "A desire to learn"
      ],
      "description": "Presto is an open source distributed SQL query engine for running interactive analytic queries against data sources of all sizes ranging from gigabytes to petabytes. Presto was designed and written from the ground up for interactive analytics and approaches the speed of commercial data warehouses while scaling to the size of organisations like Facebook.\nIn the first part of the course I will talk about Presto's theory including Presto's architecture and components - coordinator, worker, connector, query execution model, etc. Additionally, I will explain to you how Kafka, Cassandra, Hive, PostgreSQL and Redshift work before I mention the specifics to their connectors.\nIn the second part of the course, you are going to have many practical lectures where I will help you to build a development environment including Docker images for Hive and Presto, Helm chart for the whole Presto infrastructure and then deploy the chart to a local Kubernetes cluster.\nLater, you will learn how to run a real world example by joining parquet files in S3 with PostgreSQL data in a single SQL query. When you learn how to run and use Presto's features locally, I will show you how to setup your AWS account and how to deploy your Presto cluster to a managed Kubernetes (EKS) cluster in Amazon where you will be able to analyse terabytes or even petabytes of data at scale.\nFinally, I am going to talk about all available managed and non-managed Presto services on the market, describing pros and cons for each of them.",
      "target_audience": [
        "Software Engineers curious about Presto",
        "Software Engineers looking for distributed SQL query engine",
        "Data Engineers looking for a way to optimize their queries over a huge data lake",
        "Data Engineers looking to improve their Data Platforms"
      ]
    },
    {
      "title": "Industry Level Code Quality Uplift",
      "url": "https://www.udemy.com/course/industry-level-code-quality-uplift/",
      "bio": "Hands-on Code Quality Processes & Implementations in Financial Institutions",
      "objectives": [
        "Minimize code vulnerability",
        "Test coverage improvement",
        "Comprehensive coding Inspection and fix",
        "Standardize code style",
        "Heads-up and mindset on Code Quality as a practise"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Coding Style Standardization": [
          "Standardize Coding Style",
          "Meet Checkstyle",
          "Tailor your own template",
          "Enable scan in development environment - Install plugin for IDE",
          "Fix checkstyle issues",
          "Enforce the scan in building phase - Install maven plugin"
        ],
        "Code Coverage Improvement": [
          "It's all about confidence",
          "Hands-on view of Industry practices 1",
          "Hands-on view of Industry practices 2"
        ],
        "Comprehensive Code Inspection": [
          "Why Comprehensive Code Inspection",
          "Install Sonarqube Server",
          "Test Coverage & Matrix",
          "Install IDE plugin",
          "Fix Code Smell",
          "Sonarqube Server Dashboard"
        ],
        "Security Vulnerability Enhancement": [
          "Why Vulnerability Scan?",
          "Meet Sonatype Nexus IQ",
          "Nexus IQ Installation",
          "IDE plugin install & Vulnerability Dependency Fix"
        ],
        "Review & Two cents on Code Quality as a practice": [
          "Review & Insight"
        ]
      },
      "requirements": [
        "Basic programming, Java or any other language, unit test"
      ],
      "description": "The course streamlined most common industry level good practices in Financial Institutions for code quality improvement during development and CICD phases.\n\n\nThere are four main sections.\n\n\nCoding Style Standardization. Explain why it's important to consent the coding style within your team. We will tailor our own style template, and then use this template to enforce the format and style of our code. The tool used in the demo is Checkstyle.\n\n\nTest Coverage Improvement. Explain what high code coverage means to the team and to the product. we will go through the most popular way of writing unit test and a bit of behaviour test style in action. The tool used in the demo is junit5, mokito, and pact.\n\n\nComprehensive Coding Inspection. Explain aspects in coding inspection, the matrix, the process, and tips to fix code smell and other issues to make the code base healthier. The tool used in the demo is Sonarqube server, IntelliJ Sonarlint plugin.\n\n\nVulnerability Enhancement. Explain why vulnerability scan is important in Financial Institutions. Start from installing Sonatype Nexus IQ server, to enable IntelliJ plugin to assist rectifying the vulnerability issues. The tool used in the demo is Sonatype Nexus IQ, IntelliJ Nexus IQ plugin.\n\n\nJava and Maven have been used throughout the demonstration. However, all processes and most of the tools supports other languages and ways of configuration.",
      "target_audience": [
        "Industry best practice for code quality uplift in Financial Institutions"
      ]
    },
    {
      "title": "Live Streaming on AWS",
      "url": "https://www.udemy.com/course/live-streaming-on-aws/",
      "bio": "A Developer's Guide",
      "objectives": [
        "Understand what a Live Streaming Video Pipeline is",
        "Learn the Amazon Web Services components in a video pipeline",
        "Build a video pipeline in AWS console and live stream on it",
        "Write code to build and destroy a video pipeline on demand"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Live Streaming Video Pipeline",
          "AWS Media Services",
          "AWS Media Services Quiz",
          "MediaPackage in the Console",
          "MediaLive in the Console",
          "Cloudfront in the Console",
          "Testing",
          "AWS Console",
          "AWS APIs",
          "Code Framework",
          "Coding MediaPackage Channel",
          "Coding MediaPackage Endpoint",
          "Coding Cloudfront",
          "Coding Cloudfront Delete",
          "Coding MediaLive Input",
          "Coding MediaLive Channel",
          "Coding MediaLive Channel Start",
          "Wrap Up"
        ]
      },
      "requirements": [
        "Basic familiarity with writing code (we'll be using Python)",
        "An interest in live streaming software or AWS APIs.",
        "A free tier account on Amazon Web Services"
      ],
      "description": "Amazon Web Services has many components. AWS Media Services is the collection of components that provide video streaming functionality. Using these components you can quickly add streaming functionality to any software project and quickly expand your capabilities.\nIn this course you will\nLearn about Live Streaming Video Pipelines and how they are used\nLearn about AWS Media Services like MediaLive, MediaPackage, Cloudfront and how they can be used for live streaming\nGet hands-on and create components using the AWS Console\nLearn the items you need to focus on and what you can ignore when using AWS components\nStart coding in Python and create a Live Streaming Video Pipeline using AWS APIs\nBuild code to allow creating and destroying a Live Streaming Video Pipeline with the click of a button\nThis course is recommended for people who\nHave an interest in working with AWS Media Services\nHave some basic programming knowledge, familiarity with python preferred\nWant to develop a fully functional live stream\nThis course is taught by Jeremy Ramer, a software engineer with 20 years of development experience and many video projects under his belt. Mentoring has always been a passion; in this course Jeremy will guide you through the process of working with AWS components from the ground up.",
      "target_audience": [
        "Beginner developers interested in learning about video and AWS"
      ]
    },
    {
      "title": "[Enterprise] Infrastructure Automation with Terraform Cloud",
      "url": "https://www.udemy.com/course/enterprise-infrastructure-automation-with-terraform-cloud/",
      "bio": "Terraform Cloud - HashiCorp's managed service offering enabling infrastructure automation for provisioning resources.",
      "objectives": [
        "Create self-service infrastructure with a private registry",
        "Build infrastructure remotely with your team",
        "Define infrastructure deployment",
        "Gain productivity by defining a repeatable process",
        "Version control (VCS) integration",
        "Collaborate on infrastructure changes",
        "Workflow management Servicenow",
        "Team Management",
        "Cost Estimation",
        "Azure DevOps Integration",
        "Terraform SAAS",
        "Terraform Could Remote State Management",
        "Terraform Enterprise",
        "Infrastructure Automation with Terraform Cloud",
        "Slack / Message notification on infrastructure failure",
        "API Driven workflow",
        "Sentinel Policy",
        "Gitlab Integration",
        "Managing Secrets in Terraform Cloud",
        "Terraform Cloud + Github VCS",
        "Infrastructure Pipeline with Terraform Cloud",
        "Enterprise Tier for Terraform"
      ],
      "course_content": {
        "Introduction to Terraform Cloud": [
          "Overview",
          "Course Intro",
          "Module Introduction",
          "Terraform CLI vs Terraform Cloud",
          "Terraform - SAAS Platform",
          "Licensing in Terraform Cloud",
          "CLI vs Cloud vs Enterprise"
        ],
        "Implementing Terraform Cloud": [
          "Module Introduction",
          "Introduction to Workspace",
          "Account & Workspace Creation",
          "VCS - Github Integration",
          "VCS - Gitlab Integration",
          "Variable in Terraform Cloud",
          "Variable & variable Sets",
          "Terraform Cloud Destroy/Destruction",
          "Cost Estimation in Terraform Cloud",
          "State Management in Terraform Cloud",
          "Integration with slack",
          "Workspace locking & remote execution",
          "Team-Based Permissions System"
        ],
        "API driven integration": [
          "Module Introduction",
          "API Driven Workflow Introduction",
          "Setting up Variable for API",
          "Create workspace via API without VCS",
          "Create workspace via API with VCS",
          "API driven variables",
          "Get the list of resources via API"
        ],
        "Sentinel - Policy as a Code": [
          "Module Introduction",
          "Sentinel policy & policy sets",
          "Sentinel Playground - Create your first sentinel policy",
          "Sentinel Policy Introduction"
        ]
      },
      "requirements": [
        "Terraform",
        "Basic knowledge of Terraform",
        "Azure Trial Account",
        "Code Editor (VS Code/ IntelliJ)",
        "Terraform cloud free trial"
      ],
      "description": "Terraform Cloud is HashiCorp’s managed service offering. It eliminates the need for unnecessary tooling and documentation for practitioners, teams, and organisations to use Terraform in production.\nProvision infrastructure in a remote environment that is optimized for the Terraform workflow.\nTerraform Cloud enables infrastructure automation for provisioning, compliance, and management of any cloud, data center, and service.\n\n\nFew of the top feature we will cover in the course:\n\n\nRun infrastructure as code remotely\nStore and dynamically update your Terraform state file securely with encryption at rest.\nReview and comment on plans prior to executing any change to infrastructure.\nAutomate Terraform Cloud functionality into the workflows your team uses everyday.\nConcurrent runs by increasing your team’s velocity by adding concurrent runs to your plan.\nSend notifications about runs via email, Slack, or via webhooks.\nAchieve CI/CD integration by running Terraform into your existing toolchain for improved automation.\nIntegrate hundreds of third party tools into your Terraform workflow.\nBuild Terraform Cloud into existing and/or automated workflows\nCalculate costs before applying infrastructure changes, and control them using policy as code.\nExport audit logs to external systems via an API, or connect directly into Splunk for better visualization.\nCreate security and compliance guardrails for any Terraform run with Sentinel or third-party tools.\nOnboard and decommission new users from your organization in minutes.\nManually approve changes or automate a run as soon as a pull request is merged into a main branch.\n\n\nWhat are we going to learn in this session?\n\n\nTerraform CLI vs Terraform Cloud\nTerraform - SAAS Platform\nLicensing in Terraform Cloud\nCLI vs CLoud vs Enterprise\nIntroduction to Workspace\nAccount & Workspaces creation\nVersion Control System integration\nvariable & variable set\nTerraform Cloud Destruction\nCost Estimation\nCreating resources in Terraform Cloud via API\nWorkspace Locking & Remote execution\nSentinel Policy",
      "target_audience": [
        "DevOps Engineer",
        "Platform Engineer",
        "Infrastructure Consultants",
        "Business Analysts"
      ]
    },
    {
      "title": "Model Based Development -MBD- Using Simulink Stateflow",
      "url": "https://www.udemy.com/course/model-based-development-mbd-using-stateflow/",
      "bio": "To Be Expert Model Based Design Engineer",
      "objectives": [
        "Understanding Finite State Machines (FSMs)",
        "Stateflow Basics",
        "Designing States and Transitions",
        "Functions in Stateflow",
        "Final Project – Automotive Wiper System"
      ],
      "course_content": {
        "Course Introduction": [
          "What you will Learn ?"
        ],
        "Finite State Machine": [
          "Finite State Machine"
        ],
        "Stateflow Introduction": [
          "Stateflow Introduction",
          "Stateflow Data Scope",
          "Stateflow Vs Generated Code"
        ],
        "Stateflow Conditions": [
          "Stateflow Conditions",
          "Special Operators"
        ],
        "Stateflow Transitions": [
          "Transitions"
        ],
        "Stateflow States": [
          "States",
          "State Actions",
          "Action Execution Order",
          "State Hierarchy"
        ],
        "Stateflow Example - Debouncing and Healing": [
          "Debounce and Healing - Requirements",
          "Debounce and Healing - Implementation",
          "Debounce and Healing - Verification"
        ],
        "Flow Charts": [
          "Flow Charts",
          "Pattern Generator - IF Statements",
          "Pattern Generator - Switch Case",
          "Pattern Generator - For Loop",
          "Pattern Generator - While Loop"
        ],
        "Stateflow Functions": [
          "Simulink Function",
          "MATLAB Function",
          "Graphical Function"
        ],
        "Project - Wiper system using Sateflow": [
          "Project - Introduction",
          "Project - Interfaces",
          "Project - Implementation - Part 1",
          "Project - Implementation - Part 2",
          "Project - Testing - Part 1",
          "Project - Testing - Part 2",
          "Project - Testing - Part 3"
        ]
      },
      "requirements": [
        "Matlab",
        "Simulink"
      ],
      "description": "Master Model-Based Development with Simulink Stateflow for Automotive Applications\nAre you ready to take your engineering skills to the next level? Imagine designing automotive systems that are not only efficient but also robust and reliable.\nThis course offers a deep dive into Stateflow, empowering you to develop complex logic-driven systems with ease.\nWith Model-Based Development (MBD) at the heart of modern automotive engineering, this course is your gateway to mastering this essential skill.\nWhy Learn Stateflow and Model-Based Development?\nThe automotive industry is rapidly evolving, with increasing demands for smarter, safer, and more reliable systems.\nStateflow, integrated with MATLAB/Simulink, is a powerful tool for modeling finite state machines and complex logic.\nBy mastering this skill, you’ll be at the forefront of the industry, ready to tackle challenges in autonomous vehicles, electric systems, and beyond.\n\n\nWhat You'll Learn in This Course\nModule 1: Understanding Finite State Machines (FSMs)\nExplore the fundamentals of FSMs and their applications.\nLearn about states, transitions, inputs, and outputs in FSMs.\nModule 2: Stateflow Basics\nGet familiar with the Stateflow interface and environment.\nCreate Stateflow charts and define input/output data.\nUnderstand the scope of data types, including fixed-point and enumerated types.\nModule 3: Designing States and Transitions\nModel exclusive (OR) and parallel (AND) states.\nImplement conditions, transitions, and actions effectively.\nLearn about state actions like entry, during, and exit.\nModule 4: Advanced Techniques\nUtilize operators such as timing (before, after) and change detection.\nDesign robust flowcharts and logic patterns for decision-making systems.\nImplement debounce and healing mechanisms for error recovery.\nModule 5: Functions in Stateflow\nCreate Simulink and MATLAB functions to enhance model capabilities.\nDesign graphical functions for custom logic and computation.\nModule 6: Final Project – Automotive Wiper System\nDevelop a complete wiper control system using Stateflow.\nImplement PWM control for different speed modes.\nIntegrate error-handling mechanisms to ensure system reliability.\nWhy This Course Stands Out\nUnlike other courses, this one provides:\nA project-based learning approach, ensuring practical hands-on experience.\nDetailed examples and exercises designed to mimic real-world automotive challenges.\nExpert guidance and insights from a seasoned instructor with industry experience.\nWho Should Take This Course?\nThis course is ideal for:\nAutomotive engineers aiming to enhance their skills in Model-Based Development.\nSoftware developers transitioning into the automotive domain.\nEngineering students and professionals seeking to master Stateflow and Simulink.\nWhat You’ll Achieve\nBy the end of this course, you will:\nUnderstand how to model complex systems using Stateflow.\nGain the confidence to tackle real-world automotive challenges.\nHave a portfolio-ready project showcasing your expertise in MBD and Stateflow.\nEnroll today and unlock your potential in automotive software engineering!",
      "target_audience": [
        "Engineering want to work on control projects",
        "Engineers want to work in Model based development",
        "Engineers want to excel their knowledge in Stateflow"
      ]
    },
    {
      "title": "Design Patterns in Python Demystified: Creational",
      "url": "https://www.udemy.com/course/design-patterns-in-python-demystified-creational/",
      "bio": "A beginner-friendly creational design patterns masterclass",
      "objectives": [
        "Exactly how to code all of the creational design patterns",
        "How to create objects the SOLID way",
        "How to write cleaner and more maintainable Python code",
        "Recognizing and understanding when to apply which creational design pattern",
        "Writing code that allows for the easy addition of new object types without modifying existing code",
        "How to write modular, loosely coupled code that is easy to extend"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Introduction to Design Patterns",
          "Prerequisites and Code Exercise Files"
        ],
        "Factory Method": [
          "What is the Factory Method Pattern?",
          "The Factory Method Pattern Class Diagram",
          "Coding the Factory Method Pattern",
          "Creating a Dynamic Factory",
          "Coding Exercise: Factory Method"
        ],
        "Abstract Factory": [
          "What is the Abstract Factory Pattern?",
          "The Abstract Factory Class Diagram",
          "Coding the Abstract Factory Pattern",
          "Coding Exercise: Abstract Factory"
        ],
        "Builder": [
          "What is the Builder Pattern?",
          "The Builder Pattern Class Diagram",
          "Coding the Builder Pattern",
          "Coding Exercise: Builder"
        ],
        "Singleton": [
          "What is the Singleton Pattern?",
          "The Singleton Class Diagram",
          "Coding the Singleton Pattern",
          "Coding Exercise: Singleton"
        ],
        "Prototype": [
          "What is the Prototype Pattern?",
          "The Prototype Pattern Class Diagram",
          "Coding the Prototype Pattern",
          "Coding Exercise: Prototype"
        ],
        "Conclusion": [
          "Course Summary"
        ]
      },
      "requirements": [
        "Basic proficiency in Python",
        "Basic understanding of object-oriented design principles"
      ],
      "description": "Are you eager to enhance your Python programming skills and create robust, flexible, and maintainable software? Welcome to \"Design Patterns in Python Demystified: Creational\" where we'll delve into the world of creational design patterns and demystify the process of creating powerful and efficient software architectures.\nYou'll explore a range of creational design patterns, including the Factory Method, Abstract Factory, Builder, Singleton, and Prototype patterns.\nBy the end of this course, you will have a solid foundation in the creational design patterns and their applications. You'll understand how to choose the appropriate pattern for a given scenario, and you'll be equipped with the skills to implement these patterns effectively in your Python projects.\nWhat sets this course apart is our unique teaching approach. We blend theory and practical implementation, guiding you through detailed explanations, code demonstrations, and hands-on exercises.\nHere's what you'll gain from enrolling in this course:\nMaster the fundamental concepts of creational design patterns in Python.\nLearn how to apply creational design patterns to solve real-world software engineering challenges.\nAcquire valuable problem-solving skills that will enhance your software development career.\nBuild confidence in writing cleaner, more maintainable, and scalable Python code.\nDon't miss this opportunity to unlock the secrets of creational design patterns in Python. Enroll now and become a proficient Python developer capable of building robust and flexible software architectures!",
      "target_audience": [
        "Software Engineers",
        "Software Developers",
        "Software Architects",
        "Data Scientists",
        "Data Engineers",
        "ML Engineers"
      ]
    },
    {
      "title": "Agile: User Story and Story Points",
      "url": "https://www.udemy.com/course/agile-user-story-story-points/",
      "bio": "Lean way of Requirements management",
      "objectives": [
        "About the hierarchy of Agile requirement items likes- Theme, Epic, User story, Task etc. How to develop the Product Backlog items, like - Epic, User Stories, Ta",
        "An overview on how to create requirement items using the Atlassian Jira.",
        "The crisp and complete explanations about User Story and Story Points",
        "You will learn how to create- an Epic, User Story, Task, Sprint and how to assign these items to Sprint in Jira.",
        "You will learn how to define user story, splitting of larger user stories and prioritizing and sizing of user stories."
      ],
      "course_content": {
        "Introduction": [
          "Waterfall vs. Agile",
          "Project Developmental areas | How they differ in Water-fall Vs. Agile"
        ],
        "User Story (US)": [
          "Introduction & Course Description",
          "Hierarchy of Requirements - part1",
          "Hierarchy of Requirements -part 2",
          "User Story | Definition and its Template",
          "User Story | Acceptance criteria",
          "The Key Components of User story & 3C model",
          "How do you create a successful User story ?",
          "How to split a Large story in smaller user stories - practical Example",
          "How to split large story | factors to be considered",
          "Development History | How user story is evolved over a period",
          "Definition of Ready & Definition of Done"
        ],
        "Story Points (SP)": [
          "Inaccurate Estimations",
          "What is Story point ?",
          "Story points are not Estimation",
          "Why story points are relevant ?",
          "3.5 About Story mapping & right time of assigning story points",
          "3.2 Fibonacci series",
          "Planning Poker"
        ],
        "Atlasian JIRA : a Tool walk-through": [
          "6.1 walk-through| Jira Login & basics",
          "6.2 walk-through | Jira Sample Project-Document",
          "6.3 walk-through| Create an Epic-1",
          "6.3 walk-through| Create an Epic-2",
          "6.4 walk-through| Create an User Story",
          "6.5 walk-through| Create Task",
          "6.6 walk-through| Create Sprint"
        ],
        "Course Literatures": [
          "epics",
          "features"
        ],
        "SIZING, ESTIMATION , PRIORITIZATION & OTHERS": [
          "Sizing in Agile",
          "Levels of Agile Estimation",
          "Prioritization process",
          "Prioritization Techniques",
          "Estimation methods",
          "T shirt sizing technique"
        ],
        "Additional Lectures": [
          "Hierarchy of requirements"
        ]
      },
      "requirements": [
        "No Prerequisites"
      ],
      "description": "Understanding the needs of users is one of the key activities for successful development of any project or product. Earlier practices of understanding and documenting the complete User needs as big one time activity is a major limitation in traditional project development models. User stories provide an opportunity to represent up to date inputs from the users at all stages of the project development.\nAn User Story is a requirement item with simple and short description that provides a small business value to end user. It is a pointer of a small requirement where the details can be added at any point of the project development.\nThis course is best described the areas like, User Story, User Story template, developing Acceptance Criteria, splitting User Stories, Prioritizing and User Story mapping etc. This course also makes you to understand about Story Points, Fibonacci series, Estimation Techniques and much more.\nThis course makes you familiar to the tool- Atlasian Jira. Jira is most commonly used project management Tool, that is primarily used in Agile development projects. The tool walk-through on how to create Sprints, how to create and assign various product backlog items like- User stories, #Tasks assigned to a Sprint  and also Epics will help the learners immensely.",
      "target_audience": [
        "Anyone who wants to understand and get practical usage of User Story and Story Points",
        "Those interested in working Agile teams - such as aspiring Business Analysts, Project Managers, Product Owners, Developers etc.",
        "the current Agile team members who want to deepen their understanding about User Story and Story points",
        "non-Agile team members who work in activities like- business requirements, product development, estimation and so on"
      ]
    },
    {
      "title": "Complete Modern Python 3 and PostgreSQL Essentials",
      "url": "https://www.udemy.com/course/complete-modern-python-3-and-postgresql-essentials/",
      "bio": "Develop Your Skills in Python, PostgreSQL, and Database Management with Hands-On Projects",
      "objectives": [
        "Master the fundamentals of Python programming for data handling and automation.",
        "Learn to write SQL queries to create, manipulate, and optimize databases.",
        "Design and optimize SQL databases for performance, using advanced SQL queries such as joins, subqueries, and indexing.",
        "Integrate Python with SQL to build dynamic, database-driven applications.",
        "Develop real-world projects that demonstrate the practical use of Python and PostgreSQL.."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "A little about the instructor",
          "Welcome to Python!"
        ],
        "Installing Python and setting up your developer environment": [
          "Installing python (Windows)",
          "Installing python (Mac)",
          "Developer environment setup",
          "(Optional) Command line basics"
        ],
        "Introduction to programming in Python": [
          "About this section and coding exercises.",
          "Writing your first Python program!",
          "Print your name.",
          "Variables and Basic Data Types",
          "Working with Strings",
          "Working with Strings",
          "Basic Arithmetic (number) Operations",
          "Handling User Input",
          "Handling user input",
          "Control Structures and Boolean Operators",
          "Working with booleans",
          "Lists in Python",
          "Tuples in Python",
          "Dictionaries in Python",
          "While loops",
          "For Loops"
        ],
        "Functions in Python": [
          "Introduction to Functions",
          "Advanced Functions in Python",
          "Error Handling",
          "Lambdas (anonymous functions)"
        ],
        "Object Oriented Programming with Python": [
          "Introduction to Object Oriented Programming",
          "Object Oriented Programming in Python",
          "Advanced Concepts in Object Oriented Programming",
          "Object Oriented Programming in Python (Part 2)",
          "Abstraction and Interfaces in Python"
        ],
        "Introduction to SQL Databases": [
          "Welcome to SQL!",
          "Installing PostgreSQL",
          "Creating your First Database and Table",
          "The Select Statement",
          "The Insert Statement",
          "The Update Statement",
          "The Delete Statement"
        ],
        "Working with Multiple Tables": [
          "Creating tables with foreing keys",
          "Joins in PostgreSQL",
          "Using the UNION Operator in PostgreSQL",
          "Aggregating Data and Grouping in PostgreSQL"
        ]
      },
      "requirements": [
        "No previous experience is required. However, having some basic knowledge of Python and SQL can be helpful."
      ],
      "description": "Complete Modern Python 3 and PostgreSQL Essentials 2025: Create Powerful Database-Driven Applications\nReady to build real-world, data-driven applications? This comprehensive course will take you from zero to creating powerful database applications using Python and PostgreSQL. Whether you’re a beginner or looking to sharpen your skills, this course is designed to help you confidently integrate Python and PostgreSQL to build dynamic, database-driven tools.\nWhat You’ll Learn:\nPython Fundamentals: Master Python, the go-to language for automation, scripting, and backend development.\nPostgreSQL Mastery: Learn to design, query, and optimize PostgreSQL databases for real-world applications.\nDatabase Integration: Connect Python to PostgreSQL databases to perform operations like creating, reading, updating, and deleting data.\nReal-World Projects: Build practical projects that demonstrate how Python and PostgreSQL work together to handle data efficiently.\nWhy Choose This Course?\nHands-On Projects: Apply what you learn through real-world, project-based learning.\nPractical Focus: Learn to build applications that interact with PostgreSQL databases—skills that are essential for web development, data analysis, and automation.\nStep-by-Step Guidance: Whether you’re a beginner or have some experience, the course breaks down complex concepts into easy-to-follow steps.\nIndustry-Relevant Skills: By the end of the course, you’ll have built your own database-driven applications, ready for real-world use.\nKey Highlights:\nUnderstand Python fundamentals and how to manipulate data\nMaster SQL queries and PostgreSQL relational database design\nIntegrate Python and PostgreSQL to build powerful data-driven applications\nBuild and deploy projects that handle data efficiently\nJoin today and start mastering the integration of Python and PostgreSQL to create dynamic, powerful applications that can solve real-world data challenges!",
      "target_audience": [
        "Beginners who want to learn Python and PostgreSQL from scratch.",
        "Developers looking to integrate database functionality into their Python applications.",
        "Those interested in working on data-driven projects or with relational databases.",
        "Aspiring data analysts, backend developers, or web developers aiming to expand their skills.",
        "Anyone looking to master the integration of Python and SQL to build dynamic, scalable applications."
      ]
    },
    {
      "title": "C# data access: from ADO.NET to EF and Dapper",
      "url": "https://www.udemy.com/course/dotnet-core-data-access-sql-and-nosql/",
      "bio": "Learn basics of SQL Access with ADO.NET, Dapper, Entity Framework. NoSQL with Mongo and Redis. Also: DAL patterns",
      "objectives": [
        "SQL Database access with Ado Net",
        "SQL Database access with Entitiy Framework",
        "SQL Database access with Dapper",
        "MongoDb access with MongoDb .Net Driver",
        "Redis access with ServiceStack Redis"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge in any .Net Language is required to understand the examples, C# would be the most easiest",
        "The desire to learn the fundamentals of Data Access to go from there",
        "Some SQL or NoSQL knowledge might help, yet is not a must"
      ],
      "description": "One of the most important aspects of working effectively with any application is accessing and storing the persistent data.\nThere is no application without data, be it SQL, NoSQL or any other form of a persistent data store.\nFor all of them the fundamental concepts are similar.\nIn this course we are going to explore the CRUD operations for different styles and with different technologies.\n\nYou will get an insight into all of the following data access technologies and how they are structured:\nSQL Databases with Sqlite and PostgreSQL\nADO.NET\nEntity Framework\nDapper\nNoSQL\nMongoDb withMongoDb Driver\nRedis StackExchangeRedis\nAlso:\nRefresh basic Knowledge on SQL\nSetup postgres and redis in docker containers\nlearn how to store data in MongoDb works essentially\nSQL vs NoSQL, when is which appropriate?\n\n\nEnrolling in this course will boost your productivity and the understanding of how to access any data storage you might encounter. In the end it is all about the information you can store and retrieve.\n\nYou should be familiar with .NET in general and C# in particular. You need not to be an expert, but you should be somewhat comfortable with reading code written in dotnet core.\n\nNow have fun and enjoy the course!",
      "target_audience": [
        ".Net Developers",
        "C# Developers in particular",
        "Professional developers in the Microsoft stack in general"
      ]
    },
    {
      "title": "Writing Technical Design Document (Real Time Project Based)",
      "url": "https://www.udemy.com/course/writing-technical-design-document-real-time-project-based/",
      "bio": "Writing Effective Technical Specification Document(TSD)/TD in Information Technology Based on Real Time Project Example",
      "objectives": [
        "Writing Effective Technical Design Document/Technical Specification Document in Information Technology",
        "Understanding Contents of Technical Design Document/Technical Specification Document in Information Technology",
        "Building Interface Between SAP and Trendset Based on Real Time Project Insights",
        "End to End Project Life Cycle Based on Real Time Project Insights",
        "What is Technical Design Document/Technical Specification Document",
        "Typical Contents of Technical Design Document/Technical Specification Document",
        "Purpose of Technical Design Document/Technical Specification Document",
        "Audience of Technical Design Document/Technical Specification Document",
        "Features of Technical Design Document/Technical Specification Document",
        "Types of Technical Design Document/Technical Specification Document",
        "Who Writes Technical Design Document/Technical Specification Document",
        "What is Functional Design Document/Functional Specification Document",
        "Types of Functional Design Document/Functional Specification Document",
        "Who Writes Functional Design Document/Functional Specification Document"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Agenda"
        ],
        "Technical Specification Document/Functional Design Document Brief Introduction": [
          "What is Technical Specification Document(TSD)",
          "Purpose of Writing Technical Specification Document(TSD)",
          "Key Features of Technical Specification Document(TSD)",
          "Audience of Technical Specification Document(TSD)",
          "Technical Specification Document (TSD) Types",
          "Who Writes Technical Specification Document (TSD)"
        ],
        "What's Before": [
          "What's Before",
          "Functional Specification Document (FSD) Walk Through",
          "Functional Specification Document (FSD) Draft to Approved Cycle",
          "Development Process",
          "Testing Process"
        ],
        "Writing Technical Design Document (TSD) Based on Real Time Project": [
          "Writing Technical Specification Document Part-I",
          "Writing Technical Specification Document Part-II",
          "Writing Technical Specification Document Part-III",
          "Writing Technical Specification Document Part-IV"
        ],
        "What's Next": [
          "What's Next",
          "Making Changes to Technical Specification Document (TSD)"
        ],
        "Project - Oracle Transportation Management Invoices to SAP Via IDoc": [
          "Interface - Oracle Transportation Management Invoices to SAP Via IDoc Part-I",
          "Interface - Oracle Transportation Management Invoices to SAP Via IDoc Part-II"
        ],
        "Bonus Topics (Include Templates,Project Based FSD's & TSD's-Contentious Update)": [
          "Bonus Lecture (Include Templates,Project Based FSD's & TSD's-Contentious Update)"
        ]
      },
      "requirements": [
        "Only Passion to Learn is Required"
      ],
      "description": "This is Step-by-Step Course that will Take you into Incredible World of Writing Effective Technical Specification Document/Technical Design Document in Information Technology.\nIn this Course I will walk you through Writing a Technical Specification Document/Technical Design Document Based on Real Time Project of Building Interface Between SAP and Trendset.\nThis Course is Designed Based on Real Time Project Insights, This Course Contains Complete Information About Project Life Cycle Including Pre-Requisites/Pre-Phases Before Writing Technical Specification Document Including Functional Specification Document Walk through, Development Process, Unit Testing, QA Testing, End User Testing and Post Phases After Writing Technical Specification Document Including Cut over Activities, Project Go Live, Hyper Care Period Support and Post Go Live Support.\n\nThis Course is a Must for People who wanted to Learn End to End Project Cycle in Information Technology and Wanted to Primarily Become Efficient Writing Technical Specification Document/Technical Design Document in Information Technology.\nYou will Get Sample Technical Specification Documents (TSD's) Templates for Designing Processes, Custom Programs, Interfaces and Reports Developments along with Complete Details of What is Technical Specification Document, Propose of Writing Technical Specification Document, Audience of Technical Specification Document, Key Features of Technical Specification Document and Who Writes Technical Specification Document.\n\nIn This Course We Will Cover Very Important Bonus Topic of Functional Specification Documents(FSD)/Functional Design Document Including What is Functional Specification Documents, Types of Functional Specification Documents, Who Writes Functional Specification Documents along with Sample Functional Specification Documents (FSD) Templates for Designing Processes, Custom Programs, Interfaces and Reports Developments.\nAfter this Course you would have Deep Understanding of Writing Technical Specification Document/Technical Design Document Along with End to End Project Cycle in Real Time Environment and Good Understanding of Functional Specification Document/Functional Design Document.\nAt the End of this Course you can Confidently Add Technical Designing Processes, Writing Technical Specification Documents/Technical Design Documents in Information Technology on your Resume/CV.\nLearn by Doing!",
      "target_audience": [
        "All IT Professionals",
        "All Professionals Interacts with Technology and Systems",
        "All IT Students Who Are Ready to Learn and Enter into Corporate World",
        "All Students Who Are Ready to Learn and Enter into Corporate World"
      ]
    },
    {
      "title": "Coding Interview Masterclass - C# and JavaScript",
      "url": "https://www.udemy.com/course/c-coding-interview-problems-masterclass/",
      "bio": "Master solving coding questions in C# and JavaScript! Complete Beginner to Expert Coding Interview Masterclass",
      "objectives": [
        "Features my former professor and good friend, Eric Nersesian, who brings 12 years of industry and 6 years of teaching experience and expertise in software engineering",
        "Be able to answer coding interview questions with confidence and take the guesswork out of programming",
        "Understand how to approach a problem, plan the solution, implement it, refactor it, and test it and how to discuss Big-O notation with the interviewer",
        "Obtain mastery over data structures and algorithms and understand the ideal time to use each different one in a coding interview",
        "Learn techniques to optimize your code, write clean code, and make the code you write more readable",
        "Build a debugging skillset you can use when you stumble in an interview, and understand how to recover with confidence to impress the interviewer",
        "Get comfortable programming with HackerRank, LeetCode, and CoderPad the three main platforms used by companies for coding interviews",
        "Understand the “never give up” mentality and how to tackle coding interview questions that are complex, and how to maximize your chances at landing a job",
        "Understand how to work with Linked Lists, Trees, and Graphs, the three most common advanced data structures asked about on coding interviews and understand how they work and when to use each",
        "Learn how to solve problems with recursion, and understand when to use recursion and when to use iterative coding in an interview",
        "Learn the process for breaking hard questions down into easier sub problems",
        "Be able to implement Depth First Search and Breadth First Search algorithms",
        "Master solving tree questions with generic trees, binary trees, and binary search trees",
        "Learn to think like a computer programmer",
        "Understand how to do pre-order, in-order, and post-order traversal on trees",
        "Get experience solving coding questions with matrices and multi-dimensional arrays"
      ],
      "course_content": {},
      "requirements": [
        "Working knowledge of C#",
        "Desire to learn how to approach coding interview problems and competitive programming challenge questions"
      ],
      "description": "This course has one goal: teach you how to ace coding interviews and challenging coding questions confidently and effectively to maximize your chances at landing your dream job. This course focuses on the C# and JavaScript programming languages, two of the most popular programming languages in the world.\n\n\nWhat types of questions do you find challenging on interviews? Maybe you dread the infamous binary search tree questions. Or perhaps linked lists are the bane of your existence. Balanced braces, anyone?\n\n\nYou’ll hear two voices in this course, one is mine and the other is that of a good friend, Eric Nersesian. Eric has a PhD in Informatics and specializes in software engineering and 3D graphics. With 12 years industry experience and 6 years as a professor at NJIT, he brings a myriad of knowledge and experience to this course. After doing the exercises demonstrated in this course, Eric aced the coding interview for Snapchat and landed a Level 4 Software Engineering position there.\n\n\nOn Udemy, you will find plenty of courses that teach you how to code. However, finding a course that teaches you how to ace interview problems for programming and teaches you how to approach each question is rare, and that is what this course is. There is no one, two, or three step approach to acing a coding interview. Don’t believe the books and videos that tell you they will land you a dream job in a specific number of steps. Coding is hard, and it takes a lot of practice to get good at it. Moreover, interviews usually put a time limit on a question, so you might have 30 minutes to solve a question that would take most people a few hours at best.\n\n\nIn this course, Eric and I don’t jump right to the keyboard after reading a question. We break down the problem and plan an approach – usually more than one approach – and then talk out our logic step-by-step. Some of these questions we’ve never seen before this, we actually solve them for the first time right before your eyes. This means that we don’t always get the solution on the first try of running our code. This is good, because you see how to push forward and debug, refactor, and keep a level head under pressure by watching how we do it. At the end of the day, we are two industry professionals that love to code.\n\n\nHave you ever had a coding interview that didn’t go so well? Are you nervous for your next coding test? If you want to approach your next programming interview with confidence, then enroll now!",
      "target_audience": [
        "Anyone that wants to improve their knowledge of data structures and algorithms",
        "Anyone that wants to learn how to ace coding tests and interviews",
        "Professional programmers that want to improve their coding interview skills",
        "Students interested in competitive programming or preparing for a coding test",
        "Developers that will be interviewing candidates for their company and want to learn how to ask good coding challenge questions"
      ]
    },
    {
      "title": "Kubernetes CKAD Practical Exam Questions and Answers",
      "url": "https://www.udemy.com/course/kubernetes-ckad-practical-exam-questions-and-answers/",
      "bio": "Practice for the Kubernetes Certification with hands-on Questions and Answers",
      "objectives": [
        "Kubernetes Certification",
        "Develop Cloud First Applications",
        "Create and Schedule Jobs in Kubernetes",
        "Configure Readiness and Liveness Probes in a cluster",
        "Upgrade and Rollback Applications deployed on Kubernetes",
        "Design and Deploy applications on Kubernetes Cluster",
        "Secure Kubernetes cluster with Secrets and Network Policies",
        "Create and Configure Persistent Volumes",
        "Troubleshoot Applications Deployed using Logs"
      ],
      "course_content": {
        "Introduction": [
          "Concepts Overview",
          "Kubernetes Components"
        ],
        "Learn Kubernetes Basics": [
          "Create a Kubernetes cluster",
          "Deploy an app",
          "Explore your app",
          "Expose your app publicly",
          "Scale up your app"
        ],
        "Kubernetes CKAD Practical Exam Questions and Answers": [
          "Curriculum of the CKAD exam",
          "Core Concepts (13%)",
          "Multi-Container Pods (10%)",
          "Pod Design (20%)",
          "State Persistence (8%)",
          "Configuration (18%)",
          "Observability (18%)",
          "Services and Networking (13%)"
        ]
      },
      "requirements": [
        "Basic System Administration",
        "Basic Application Development - Python"
      ],
      "description": "The CKAD Practical Exam Preparation course is designed to equip participants with the necessary knowledge and skills to successfully pass the Certified Kubernetes Application Developer (CKAD) exam. This hands-on course covers various practical exercises and scenarios to familiarize candidates with real-world Kubernetes application deployment, management, and troubleshooting.\n\n\nThis course is hands-on and will be delivered through a combination of lectures, demonstrations, and practical exercises. Participants will have access to a live Kubernetes cluster for performing tasks similar to those encountered in the CKAD exam. The course instructor will guide candidates through various scenarios, providing insights, best practices, and tips for the exam.\n\n\nThis course is ideal for individuals who already possess a foundational knowledge of Kubernetes and have practical experience working with Kubernetes clusters. It is recommended for developers, software engineers, system administrators, and DevOps professionals seeking to enhance their Kubernetes skills and obtain the CKAD certification.\n\n\nCourse Objectives:\nGain a deep understanding of core Kubernetes concepts and architecture.\nLearn to work with Kubernetes resources, such as Pods, Deployments, Services, ConfigMaps, and Secrets.\nDevelop proficiency in using kubectl commands to interact with Kubernetes clusters.\nMaster essential application management tasks, including scaling, rolling updates, and rollbacks.\nUnderstand how to troubleshoot common Kubernetes application issues.\nPractice working with Persistent Volumes (PVs) and Persistent Volume Claims (PVCs).\nLearn to set up and use ConfigMaps and Secrets for application configuration.\nExplore multi-container Pod design patterns and container communication.\nAcquire the skills to schedule and deploy applications to specific nodes.\nGet hands-on experience with security contexts and resource limits for Pods.\nUnderstand how to create and use Jobs and CronJobs for batch processing.\nLearn about ServiceAccounts and their role in managing access to Kubernetes resources.\nPractice network policies to control communication between Pods.",
      "target_audience": [
        "DevOps Engineers",
        "DevSecOps Engineers",
        "Developers",
        "Cloud Engineers",
        "System Administrator"
      ]
    },
    {
      "title": "The Essential Algorithms and Data Structures",
      "url": "https://www.udemy.com/course/the-essential-algorithms-and-data-structures/",
      "bio": "Learn how to master the most important algorithms and data structures to become a professional-grade engineer",
      "objectives": [
        "Leverage popular algorithms and data structures in your own programs to solve complex problems efficiently",
        "Design their own algorithms and data structures using industry standard practices",
        "Break down the time complexity of a piece of code and understand how it will scale with input size",
        "Perfectly answer the most common algorithm based interview questions"
      ],
      "course_content": {
        "Introduction to Algorithms": [
          "Algorithm Introduction",
          "Algorithm Design",
          "Algorithm Notation and Vocabulary",
          "Growth Rate Comparison"
        ],
        "Interview Algorithms": [
          "GCD Algorithms: Brute Force",
          "GCD Algorithms: Stein",
          "GCD Algorithms: Euclid",
          "FizzBuzz",
          "String Reversal",
          "Prime Number Generation",
          "Prime Number Generation Part 2",
          "Palindromes"
        ],
        "Searching and Order Statistics": [
          "Linear Search",
          "Binary Search",
          "Exponential Search",
          "Interpolation Search",
          "Jump Search",
          "Finding the Min/Max/Nth Lowest",
          "Finding the Min/Max/Nth Lowest Part 2",
          "Min/Max/Nth Lowest Part 3"
        ],
        "Sorting Algorithms": [
          "Sorting Introduction",
          "Insertion Sort Principles",
          "Insertion Sort Complexity",
          "Selection Sort Principles",
          "Selection Sort Complexity",
          "Bubble Sort Principles",
          "Bubble Sort Complexity",
          "Quicksort Principles",
          "Quicksort Implementation",
          "Quicksort Complexity",
          "Mergesort Basics",
          "Mergesort Implementation",
          "Mergesort Complexity",
          "Heapsort Part 1",
          "Heapsort Part 2",
          "Heapsort Part 3",
          "Heapsort Part 4",
          "Heapsort Part 5",
          "Heapsort Part 6",
          "Counting Sort Part 1",
          "Counting Sort Part 2",
          "Counting Sort Part 3",
          "Counting Sort Part 4",
          "Radix Sort Part 1",
          "Radix Sort Part 2",
          "Radix Sort Part 3"
        ],
        "Basics of Data Structures": [
          "Data Structures Basics",
          "Recursion Part 1",
          "Recursion Expanded and Tail Recursion",
          "Generics"
        ],
        "Fundamental Data Structures": [
          "Collections Introduction",
          "Collections Expanded",
          "ArrayLists Basics",
          "ArrayLists Pros and Cons",
          "LinkedLists Basics",
          "LinkedLists Expanded",
          "Stacks Basics",
          "Stacks Expanded",
          "Queues",
          "Priority Queues Part 1",
          "Priority Queues Part 2",
          "Priority Queues Part 3",
          "Priority Queues Part 4",
          "Maps Part 1",
          "Maps Part 2",
          "Maps Part 3",
          "Sets Part 1",
          "Sets Part 2",
          "Sets Part 3"
        ],
        "Trees": [
          "Binary Search Trees Part 1",
          "Binary Search Trees Part 2",
          "Binary Search Trees Part 3",
          "Binary Search Trees Part 4",
          "Binary Search Trees Part 5",
          "AVL Trees Part 1",
          "AVL Trees Part 2",
          "AVL Trees Part 3",
          "AVL Trees Part 4",
          "AVL Trees Part 5",
          "Red-Black Trees Part 1",
          "Red-Black Trees Part 2",
          "Red-Black Trees Part 3",
          "Red-Black Trees Part 4",
          "Red-Black Trees Part 5"
        ],
        "Advanced Data Structures": [
          "Hashing Part 1",
          "Hashing Part 2",
          "Hashing Part 3",
          "Hashing Part 4",
          "Weighted and Unweighted Graphs Part 1",
          "Weighted and Unweighted Graphs Part 2",
          "Weighted and Unweighted Graphs Part 3",
          "Weighted and Unweighted Graphs Part 4",
          "Weighted and Unweighted Graphs Part 5",
          "Weighted and Unweighted Graphs Part 6",
          "Weighted and Unweighted Graphs Part 7",
          "Weighted and Unweighted Graphs Part 8"
        ]
      },
      "requirements": [
        "Be familiar with basic programming tools like loops, arrays, and objects",
        "A computer you can test your algorithms on",
        "A desire to learn!"
      ],
      "description": "Imagine you walk into work and your boss says, \"I just got a list of 2 billion numbers, can you sort them for me as soon as possible?\"\n\n\nYou might be shocked and wonder where to even start the problem. Do you try and do it all by hand and spend the next couple years trying to sort even a small fraction of the values? Or is there some better way...\n\n\nThe Essential Algorithms and Data Structures is the most comprehensive course on the topic on Udemy and together we will learn how to solve problems like these and even more complicated problems. Algorithms are a guaranteed way of solving a type of problem that works in a predictable fashion with the data. Algorithms like sorting algorithms can be used to sort 10 values or a billion values and won't need any modifications to work with either set. Other algorithms allow us to efficiently search a set of data or find the lowest cost option to connect a series of points on a graph. Algorithms are like blueprints that we use to solve problems in our programs.\n\n\nData structures are unique ways of storing data that are optimized for certain situations. Data structures like a priority queue allow us to model how a CPU processes requests, or how to efficiently model a set of cities and interconnecting flights. Choosing a good data structure to store data can make programs millions of times faster than a bad choice. Data structures are like the power tools of programming that let us drastically speed up our programs.\n\n\nIn this course we're going to combine data structures with algorithms to create a powerful arsenal you can use to solve whatever problems show up in your code. We start by discussing time complexity and how we use it to analyze algorithms. We then cover the most important algorithms for interviews and discuss how to perfectly answer common interview questions. We then shift our focus to being able to search efficiently depending on the starting set of data. In addition, we cover the eight most essential algorithms for sorting and discuses when to use each of them. After that, we cover fundamentals for data structures like generics and recursions that are essential for almost all data structures. Then, we shift our focus to the essential data structures like maps and sets that every powerful programmer is expected to have mastered. Next, we go into detail with the three most important types of trees (Binary Search Trees, Red-Black Trees, and AVL Trees). Finally, we wrap up our discussions with hashing and graphs, which are essential to higher-order approaches for computer science.\n\n\nWhile other courses on the market focus entirely on theory we will place a major emphasis on being able to actually implement the algorithms and data structures we cover. We'll go over how to modify an algorithm or data structure for your situations and will always be looking at pseudo code that helps us understand how an algorithm or data structure works. In addition, we always cover the theory in detail and focus on understanding how and why a data structure is efficient or the details of an algorithms approach, so you can implement it in your language of choice.\n\n\nWe will take a Java-based approach for our discussions of how to implement an algorithm but this doesn't mean you have to know Java. Java is a generic style language whose attributes are almost identical to other major languages like C++ or Python.\n\n\nIf you have any questions you can depend on prompt communication from me. I pride myself on responding to questions within 24 hours and work hard to ensure that each student is satisfied. If you have any questions at any time my email and message box are open 24/7!\n\n\nI hope you're as excited as I am to begin this journey through the most interesting parts of Computer Science. Personally I can say that once I learned about algorithms and data structures I was pleasantly surprised with how many new problems I could solve and how fluently I could understand professional level discussions of programming. If you want to go from being a simple programming student to a true software engineer, then join the tens of thousands of satisfied students and enroll today!",
      "target_audience": [
        "Programmers who started to explore the basics of their language and want to take their knowledge to the next level",
        "College students who want to have an additional resource for a Algorithms and Data Structures course",
        "AP Computer Science A students to gain more knowledge on the algorithm based parts of the exam",
        "Individuals who want to turn their programming hobby into a well-paid job"
      ]
    },
    {
      "title": "Data Structure In-Depth Arrays & Linked List C|C++ DSA",
      "url": "https://www.udemy.com/course/interview-oriented-arrays-linked-list-in-c-c/",
      "bio": "Data Structure Algorithm In-Depth Arrays & Linked List C|C++ DSA - FAQ with Solution for GATE & FAANG Interview",
      "objectives": [
        "Students will be able to understand Arrays & Linked Lists thoroughly concept wise and practically.",
        "As there are hands-on multiple programs with execution of it on IDE, students will learn Arrays & Linked List with its applications in depth",
        "It covers frequently asked questions with solution in GATE exam & FAANG",
        "Arrays & Linked Lists which are important data structures and used in multiple applications",
        "Sessions are on both Whiteboard as well as on IDE on Laptop",
        "Sessions are taken in both C & C++",
        "As have attached all the Code source for Arrays & Linked Lists with its applications in different sessions, students can refer it.",
        "Crack any Interview in this huge IT Industry as Array & Linked Lists are Trending Topic to learn"
      ],
      "course_content": {
        "Introduction to Array & Linked Lists": [
          "Overview of Array & Linked Lists"
        ],
        "Overview of One Dimensional (1D) & Two Dimensional (2D) Array": [
          "Overview of One Dimensional (1D) & Two Dimensional (2D) Array"
        ],
        "Introduction to One Dimensional (1D) Array": [
          "Introduction to One Dimensional (1D) Array"
        ],
        "Array Operations & Insertion at position for 1D Array on Whiteboard": [
          "Array Operations & Insertion at position for 1D Array on Whiteboard"
        ],
        "Insertion Operation at beginning & insertion at end for 1D Array on Whiteboard": [
          "Insertion Operation at beginning & insertion at end for 1D Array on Whiteboard"
        ],
        "Deletion Operation for 1D Array on Whiteboard": [
          "Deletion Operation for 1D Array on Whiteboard"
        ],
        "Traverse & Display Operation for 1D Array on Whiteboard": [
          "Traverse & Display Operation for 1D Array on Whiteboard"
        ],
        "Search Operation for 1D Array on Whiteboard": [
          "Search Operation for One Dimensional(1D) Array on Whiteboard"
        ],
        "Update Operation for 1D Array on Whiteboard": [
          "Update Operation for One Dimensional(1D) Array on Whiteboard"
        ],
        "Overview of Two Dimensional (2D) Array": [
          "Overview of Two Dimensional (2D) Array"
        ]
      },
      "requirements": [
        "Computer running Microsoft Windows, Linux or Mac Operating systems."
      ],
      "description": "Interview Oriented Data Structure Algorithm Arrays & Linked List C|C++ - Frequently Asked Questions with Solution for GATE & FAANG DSA\nDid you anytime know how arrays & Linked Lists are popularly used data structures ? ? If NO then Interview oriented Arrays & LinkedList in C & C++ is good to start with.\n\n\nAbout this Course:\n1. This Course Covers in depth Arrays & Linked List with its applications concept wise and practically.\n2. As there are hands-on multiple programs with execution of it on IDE, students will learn Arrays & Linked List with its applications in depth.\n3. It covers frequently asked questions with solution for GATE exam & FAANG\n4. Arrays & Linked Lists which are important data structures and used in multiple applications\n5. Sessions are on both Whiteboard as well as on IDE on Laptop\n6. Sessions are taken in both C & C++\n7. As have attached all the Code source for Arrays & Linked Lists with its applications in different sessions, students can refer it.\n8. Crack any Interview in this huge IT Industry\n\n\nThis Course will cover all basic concepts of Arrays & Linked Lists with not only covering \"how to code\" but also putting light on details \"Why it is required and How important it is\" so that your all concepts will be cleared from scratch and you can crack any interview giving technical answers covering all the points.",
      "target_audience": [
        "C Developers, C++ Developers, Java Developers, php Developers etc.",
        "College Students/ Freshers, Trainers",
        "In addition with all those who interested in cracking interview",
        "Also Other Language Developers",
        "Testers, Freelancers"
      ]
    },
    {
      "title": "Drools for Developers",
      "url": "https://www.udemy.com/course/master-drools-rule-engine-in-a-weekend/",
      "bio": "Master Drools - the most popular Java rule engine framework",
      "objectives": [
        "How to Setup Drools",
        "Stateful VS Stateless sessions",
        "How to use Salience to prioritize rules",
        "The use of Agenda groups in Drools",
        "Drools Activation Groups",
        "How to use Decision Tables and Cross products in Drools",
        "Drools Language Syntax"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why Drools",
          "Drools History",
          "StateFul and Stateless",
          "Drools Language"
        ],
        "Running Drools Locally": [
          "Section Overview",
          "Java and Eclipse Installation",
          "Install Postman",
          "Basic Run",
          "Java Spring Setup",
          "Run the Spring app from the command line",
          "VS Code Setup"
        ],
        "Drools Techniques": [
          "Section Overview",
          "Drools Concepts",
          "StateFull",
          "Stateless",
          "Drools Salience",
          "Drools Assignment - Create Rules for a Shopping Mall!",
          "Cross products concepts",
          "Cross products",
          "Decision Table",
          "Inference",
          "Activation Groups",
          "Agenda Groups",
          "Function",
          "InsertLogical",
          "ForAll",
          "Drools - Quiz",
          "Drools - Quiz2"
        ],
        "Conclusion": [
          "GoodBye?"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required"
      ],
      "description": "Build a strong foundation in Drools with this practical course suited to both beginners and experienced professionals.\nA rule engine is essential becuase unlike regular code, with rules, the extent to which our rule based logic can be abstracted matters. Drools is the top ranked rule engine in the market. Drools is one of the leading implementations of rule-engines and uses the Rete Algorithm for pattern matching. Rule Engines are being used more and more for their role in handling complex business logic and increased efficiency. Use cases of rule engines today range from transferring maintenance to business owners [non technical people] to centralizing business logic with improvements in security and efficiency. As such more and more jobs are going to developers who have the skill of using rule engines like Drools.\nThis course will guide you through all the basics of Drools and get you ready to tackle any business logic dependent project that comes your way.\nWe will cover the following pillars of Drools:\n1)Drools Concepts: Start off by learning the syntax of drools. Understand the basic structure of a rule. Why do we use Drools? What is a stateless or state-full session?\n2)Drools Setup: Understand how to create Drools sessions and setup drools rules files. Setup a Java app and a Java Spring app which uses Drools.\n3)Drools skills: Here we will pick up the advanced skills of Drools. Learn how to master Drools techniques like prioritization using Salience and Agenda groups. Make use of activation groups. Practically implement state-full and stateless sessions. Help business users by working on cross products and decision tables. See how to implement them in real life situations. Write re-usable code using Inference and InsertLogical commands.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Developers/Tech Leads looking to implementing Drools Rule Engine in their applications",
        "Developers who want to implement complex data driven decision tables using Drools",
        "Anybody with a desire to earn more by learning more!"
      ]
    },
    {
      "title": "Master the Coding Interview in C#",
      "url": "https://www.udemy.com/course/master-the-coding-interview-in-c/",
      "bio": "The ultimate preparation for Coding Interviews to get the job!",
      "objectives": [
        "Ace the Coding Interview given by some of the top tech companies",
        "Learn, implement, and use different Data Structures",
        "Get more interviews",
        "Become a better developer by mastering computer science fundamentals",
        "Become more confident and prepared for your next coding interview",
        "Learn, implement and use different Algorithms",
        "Learn the nuances of C# Data Structures and Algorithms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "2. Set Up Environment"
        ],
        "Big O": [
          "1. Overview",
          "2. What is Good Code?",
          "3. Big O and Scalability",
          "4. Big O(n)",
          "5. Big O(1)",
          "6. Rules of Big O",
          "7. Memory",
          "8. Summary"
        ],
        "How to Solve Coding Problems": [
          "1. Overview",
          "2. What are companies looking for",
          "3. Data Structures and Algorithms you’ll Need to know",
          "4. Google Videos"
        ],
        "Data Structures/ Introduction": [
          "1. Section Overview",
          "2. What is a Data Structure"
        ],
        "Section 5 Data Structures/ Arrays/Lists": [
          "1. Arrays or List Introduction",
          "2. Exercise - Reverse A String",
          "3. Solution - Reverse A String",
          "4. Exercise - Combine Arrays in Order",
          "5. Solution - Combine Arrays in Order",
          "6. Arrays Review"
        ],
        "Data Structures/ Hash Tables": [
          "1. Hashtables Introduction",
          "2. Hash Function",
          "3. Hash Collisions",
          "4. Hash Exercise",
          "5. Hash Tables Review"
        ],
        "Data Structures/Linked Lists": [
          "1. Introduction",
          "2. What is a Linked List?",
          "3. Implement Linked List",
          "4. Doubly Linked Lists",
          "5. Single vs Double Linked List",
          "6. Reverse Linked List Exercise",
          "7. Linked List Review"
        ],
        "Data Structures/ Stacks and Queues": [
          "1. Stacks and Queues Introduction",
          "2. Stacks",
          "3. Queues",
          "4. Stacks Exercise",
          "5. Queues Exercise",
          "6. Extra Stack Exercise",
          "7. Stacks and Queues Review"
        ],
        "Section 9 Data Structures Trees": [
          "1. Trees Introduction",
          "2. Binary Trees",
          "3. O(log(n))",
          "4. Binary Search Tree",
          "5. Blanced vs Unbalanced BST",
          "6. BST Pros and Cons",
          "7. Binary Search Tree Implementation Insert",
          "8. Binary Search Tree Lookup",
          "9. Binary Search Tree Remove",
          "10. Red-Black Tree",
          "11. Trees Review"
        ],
        "Algorithms/ Recursion": [
          "1. Intro to Algorithms",
          "2. Recursion",
          "3. Factorial",
          "4. Fibonacci",
          "5. Recursive vs Iterative",
          "6. Recursion Review"
        ]
      },
      "requirements": [
        "No experience with data structures or algorithms needed",
        "Basic understanding of one programming language",
        "No previous computer science knowledge necessary"
      ],
      "description": "If you're a beginner in Software Development or even need a refresher on Data Structures and Algorithms for the upcoming Coding Interview then this is the course for you. Together, we will increase your confidence and understand what exactly the interviewer is looking for. If you've ever been stuck on a question or not know what questions you should be asking, this course is for you. I have heard several times that not all colleges will teach Data Structures and Algorithms which puts them behind other students who's schools have taught them these subjects. But even beyond that, there are other nuances to interviews that are not taught in school and only learned through experience or by an instructor that have these experiences. My job is to help you not struggle nearly as much as I did and understand these nuances beyond just Data Structures and Algorithms as well.\n\n\nIn this course, we will cover subjects such as:\nBig O Notation\nArrays/List\nHash Tables\nLinked Lists\nStacks and Queues\nTrees\nRecursion\nSorting\nSearching BFS + DFS\nI am a Developer who has worked and managed small teams and worked on large teams as well. I have also been in dozens of interviews and through that experience I will help you get in the mindset that tech companies are looking for as well as teaching you the mistakes I made so you don't repeat them. There will also be exercises and practice quizzes to help you understand the fundamentals and nuances of interviews.",
      "target_audience": [
        "Any engineer, developer, programmer, who wants to improve their interviewing skills",
        "Anyone interested in improving their whiteboard coding skills",
        "Anyone who wants to become a better developer",
        "Any self taught programmer who missed out on a computer science degree",
        "Anyone who wants a course centered around C#"
      ]
    },
    {
      "title": "Elasticsearch 8 Java 20 and Spring Boot 3.1.0 Mastery Course",
      "url": "https://www.udemy.com/course/elasticsearch-8-java-20-and-spring-boot-310-mastery-course/",
      "bio": "Dive Deep into Elasticsearch's Search Capabilities with Java and Spring Boot for Unmatched Search Performance",
      "objectives": [
        "How to install and configure elasticsearch and kibana",
        "How to understand the core concepts of elasticsearch such as shards, replicas, mappings, settings, analyzers, query context, filter context, aggregations",
        "How to perform CRUD operations on documents using elasticsearch’s DSL",
        "Create a RESTful web service with Spring Boot and Java",
        "Integrate Spring Boot with Elasticsearch using Spring Data Elasticsearch and Elasticsearch Client API",
        "Perform CRUD operations and various search operations on Elasticsearch documents",
        "Build two different search applications using Spring Boot and Elasticsearch",
        "How to use @Query annotation with spring boot starter data elasticsearch",
        "Use the latest technologies and frameworks such as Elasticsearch 8, Java 20, and Spring Boot 3.1.0"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Structure"
        ],
        "Setting up developement Environment": [
          "How to install Java",
          "How to install Intellij Idea Community Edition",
          "How to use Github with Intellij Idea",
          "Course Projects on Github Links"
        ],
        "Introduction to elasticsearch and kibana dev tools": [
          "Introduction to elasticsearch",
          "Installation of elasticsearch and kibana",
          "Shards and Replicas in elasticsearch",
          "Index, retrieve and delete index",
          "Query context in DSL",
          "Filter context and fuzzy search",
          "Aggregations in elasticsearch",
          "Custom mappings and settings",
          "Dynamic Mappings",
          "Built in and Custom analyzers",
          "Elasticsearch and kibana dev tools quiz"
        ],
        "Introduction to spring boot": [
          "Introduction to spring boot",
          "Start project using spring initializer",
          "Maven dependencies and spring boot auto configuration",
          "Spring boot starter projects and dependency management",
          "Create a simple hello world controller",
          "Returning java bean from the controller",
          "Returning list of java objects from controller",
          "Create spring boot application from within intellij idea",
          "CRUD Application Part 1 create employee and getAll employees",
          "Use Put mapping to update the employee",
          "Delete Employee by using @DeleteMapping",
          "How to include an embedded database h2 in the project",
          "Including Spring data jpa dependency and creating repository interface",
          "Testing the CRUD Api with h2 database",
          "Creating jar with dependencies after elasticsearch java client crud API",
          "Spring boot section Quiz"
        ],
        "CRUD Application with spring boot starter data elasticsearch": [
          "Create a maven project to connect with elasticsearch",
          "Configuring Spring boot application to connect with elasticsearch",
          "Create model and repository for elasticsearch document",
          "Implementing repository CRUD methods in EmployeeServiceImpl Class",
          "Implement createEmployee method in spring boot for elasticsearch",
          "Implementing getallemployees with elasticsearch",
          "Implementing getemployeebyid with elasticsearch",
          "Implementing updateemployee method with elasticsearch",
          "Implementing deleteemployee for elasticsearch",
          "Implementing findemployeebyname with elasticsearch",
          "Implementing pagination in elasticsearch",
          "Implementing the range query on salary field with elasticsearch",
          "Implementing findbyname using @query annotation",
          "Implementing findbynameand salaryrange with @query",
          "Creating salaryrange with @QUERY",
          "Spring boot starter data elasticsearch quiz"
        ],
        "CRUD Application with elasticsearch client API": [
          "Creating new application for crud app with elasticsearch client",
          "Create product API by using elasticsearch client",
          "Creating sample products by using postman and creating getallproducts method",
          "Getproductbyid with elasticsearch java client",
          "Update product API with elasticsearch",
          "Delete API using elasticsearch java client",
          "GetProductbycategory using elasticsearch java client",
          "Implementing range query on price by using elasticsearch java client",
          "Elasticsearch Client API quiz"
        ],
        "Elasticsearch in Docker Container": [
          "Installing Docker on windows and run Elasticsearch 8 and Kibana container",
          "Connect Spring boot application with Elasticsearch container using HTTPS"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic Knowledge of Java"
      ],
      "description": "The ONLY course that will use the latest version of Elasticsearch Java and Spring Boot!\nDo you want to learn how to build powerful and scalable search applications with Elasticsearch and Java? Do you want to master the latest technologies and frameworks such as Elasticsearch 8, Java 20, and Spring Boot 3.1.0? If yes, then this course is for you!\nIn this course, you will learn everything you need to know about Elasticsearch and Java, from the basics to the advanced features. You will start by learning what Elasticsearch is, how to install it, and use it with Kibana dev tools. You will also learn about the core concepts of Elasticsearch such as shards, replicas, indices, queries, filters, aggregations, mappings, analyzers, and more.\nNext, you will learn how to use Spring Boot to create a RESTful web service with Java. You will learn how to use Spring Boot starter projects, dependencies, auto-configuration, controllers, beans, and repositories. You will also learn how to use an embedded database (H2) to test your CRUD API.\nThen, you will learn how to integrate Spring Boot with Elasticsearch using two different approaches: Spring Data Elasticsearch and Elasticsearch Client API. Using both methods, you will learn how to create, read, update, and delete documents in Elasticsearch. You will also learn how to perform various search operations such as pagination, range queries, custom queries, and more.\nYou will also learn the following:-\n1. Install Docker:\n2. Pull Elasticsearch and Kibana Docker Images:\n3. Run Elasticsearch Container:\n4. Run Kibana Container:\n5. Configure Spring Boot Application with HTTPS:\n6. Connect Spring Boot Application to Elasticsearch and Kibana:\n\n\nBy the end of this course, you will have a solid understanding of Elasticsearch and Java and how to use them together to build amazing search applications. You will also have hands-on experience with creating two different CRUD applications using Spring Boot and Elasticsearch.\nThis course is suitable for anyone who wants to learn about Elasticsearch and Java or improve their existing skills. Before taking this course, you should have some basic Java knowledge.\nSo what are you waiting for? Enroll now and start your journey to becoming an Elasticsearch and Java expert!",
      "target_audience": [
        "Java Developers who want to master Spring boot in simple steps",
        "Web Developers who want to master o Spring starter data Elasticsearch o Elasticsearch Client API",
        "Anyone with a Java background who wants to learn the various modules of Spring",
        "Beginner Java Developers curious about Elasticsearch",
        "Java Developers who find it difficult to connect with Elasticsearch using HTTPS"
      ]
    },
    {
      "title": "Python Chatbot Bootcamp w/ Pandas, NumPy and SciKit",
      "url": "https://www.udemy.com/course/python-chatbot-bootcamp-w-pandas-numpy-and-scikit/",
      "bio": "Learn how to snag the most in demand role in the tech field today!",
      "objectives": [
        "Running a web server using Python",
        "Create a smart, highly interactive Chatbot",
        "Running Python code",
        "Publish a Chat Bot to the web for free!"
      ],
      "course_content": {
        "00 Course Overview": [
          "01 Projects Preview",
          "01 What Is Natural Language Processing",
          "02 What Is Text Vectorization",
          "Source Files"
        ],
        "01 Mammoth Interactive Courses Introduction": [
          "00 About Mammoth Interactive",
          "01 How To Learn Online Effectively",
          "Source Files"
        ],
        "02 Introduction to Python (Prerequisite)": [
          "00. Intro To Course And Python",
          "01. Variables",
          "02. Type Conversion Examples",
          "03. Operators",
          "04. Collections",
          "05. List Examples",
          "06. Tuples Examples",
          "07. Dictionaries Examples",
          "08. Ranges Examples",
          "09. Conditionals",
          "10. If Statement Examples",
          "11. Loops",
          "12. Functions",
          "13. Parameters And Return Values Examples",
          "14. Classes And Objects",
          "15. Inheritance Examples",
          "16. Static Members Examples",
          "17. Summary And Outro"
        ],
        "03 Build a Chatbot w Natural Language Processing from FAQ": [
          "00 Frequently Asked Questions CSV File",
          "01 Train A Vectorizer",
          "02 Chat With The User",
          "Source Files"
        ],
        "04 Build a Context Aware Chatbot": [
          "01 Define A Basic Intent Classifier",
          "02 Define A Basic Generative Model",
          "03 Test The Chatbot",
          "Source Files"
        ]
      },
      "requirements": [
        "No necessary experience needed"
      ],
      "description": "Python is the most emerging programming language in the world. It is used for web and software development. It has a lot of things that you can't consider in other programming languages. You will learn and everything by coding the programs.\nThis course is designed to be accessible to brand new Python programmers but also worthwhile for more experienced Pythonistas who want to get started with AI and Natural Language processing.\n\n\nYou do not any previous experience with Python or programming to be successful in this course.\nYou can use a Windows or Mac computer to complete the course (or Linux for that matter).\n\n\nThis course will cover the following:\nSetting up your development environment\nDownloading and installing Python\nDownloading and installing a free IDE to work with our code\nInstalling the ChatBot package\nCustomizing and training your ChatBot\nSharing your ChatBot with the world\nEach concept is introduced in plain English, avoiding confusing mathematical notation and jargon. It’s then demonstrated using Python code you can experiment with and build upon, along with notes you can keep for future reference. You won't find academic, deeply mathematical coverage of these algorithms in this course - the focus is on practical understanding and application of them. At the end, you'll be given a final project to apply what you've learned!",
      "target_audience": [
        "Beginner to intermediate Python users eager to create an interactive Chatbot",
        "Students looking for a beginner level, practical Python project",
        "Developers transferring from other languages",
        "Anyone who wants to learn how to create a Chatbot with Python"
      ]
    },
    {
      "title": "Managed Extensibility Framework, MEF, from Novice to Guru",
      "url": "https://www.udemy.com/course/managed-extensibility-framework-mef-from-novice-to-guru/",
      "bio": "Managed Extensibility Framework, MEF is a great framework. With this course you can write robust extensible applications",
      "objectives": [
        "Understand and make use of MEF concepts in your professional software development career.",
        "Develop extensible applications Console, Web, Desktop, WPF, WebForm Applications, MVC, Web API, WCF, Unit Test in C# using MEF.",
        "Develop architecture of dependency free applications.",
        "Gain deep understanding about MEF's Primitive Programming Model."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Preliminaries"
        ],
        "MEF With Console Applications": [
          "Hello MEF",
          "Separating Exports in Another Class Library",
          "Export Types and Using Interfaces",
          "Achieving Extensibility",
          "Export Metadata",
          "Inharrited Exports",
          "Part Creation Policies",
          "Fully Extensible Console Application",
          "Console App Quiz"
        ],
        "MEF with Windows Form Application AND WPF Applications": [
          "An Extensible MDI Windows Form Application",
          "MDI Application Code Part 1",
          "MDI Application Code Part 2",
          "An Extensible WPF application",
          "Understanding the code of WPF application",
          "Questions"
        ],
        "MEF With ASP.NET Form based Applications": [
          "MEF As Dependency Injections Framework",
          "Injecting Web Server Controls",
          "Injecting Web User Controls",
          "Web Form Applications"
        ],
        "How deep the rabbit hole goes ?": [
          "Advance Concepts Part 1",
          "Advance Concepts Part 2",
          "Custom Export Provider Part 1",
          "Custom Export Provider Part 2",
          "MEF Contrib",
          "Identifying Mef Failures",
          "Debugging MEF Applications",
          "Advance Concepts"
        ],
        "MEF With ASP.NET MVC Applications": [
          "Publisher / Subscriber ASP.NET MVC Application",
          "Understanding the Code of Application Part 1",
          "Understanding the Code of Application Part 2",
          "Understanding MEF in MVC App",
          "MVC Applications"
        ],
        "MEF With WEB APIs": [
          "Integrating MEF With Web API",
          "Web API"
        ],
        "MEF With WCF Services": [
          "Integrating MEF With WCF Services",
          "WCF Services"
        ],
        "Writing Test Cases With MEF": [
          "Integrating MEF With Unit Test"
        ],
        "Visual Studio IDE Uses MEF to Extend its functionality :)": [
          "Extending Visual Studio"
        ]
      },
      "requirements": [
        "You need to have Visual Studio 2012 or Later. You need to have .NET framework 4 or later because fully functional MEF framework is added in .NET framework 4.0. You should have prior knowledge about syntax of C#. You should be familiar about Object Oriented Programming, and know about the basic concepts of object orientation like Data hiding and Encapsulation, Inheritance and Polymorphism."
      ],
      "description": "Managed Extensibility Framework, is a widely used framework which targets not only Dependency Injections in .NET applications but main concentration of this framework is about writing fully extensible software. Developers from all over the world can write plugIns for applications those are developed in MEF. This is very exciting framework, but unfortunately not much developers are aware of this framework.\nSo this course is about MEF, I have tried to sum up all the technologies like Console Applications, Windows Forms, WPF, ASP.NET Web Form, ASP.NET MVC, ASP.NET WEB API, WCF Services, Test Cases and More importantly extended Visual Studio IDE using MEF.\nMy target audience can simply write \"MEF\" or \"Managed Extensibility Framework\" or MEF with .NET application, in order to find this course.\nI have included Screens Cast Videos explaining coding examples, one article and include 4 to 5 applications along with this course. Students can download those coding examples and application's source code to play around with them and can use freely in their projects.\nIt took me one and a half month to complete this course, because i was writing coding examples to make students fully understand the concepts.\nCourse is structured in a well defined way, explaining from the basic concepts and then moving forward towards more deep and more detailed concepts.\nIf you are an intermediate .NET developer you should take this course to write fully extensible MEF applications.",
      "target_audience": [
        "This course is meant for anyone who knows how to write a program in C#, Knows basic concepts of Object Oriented Programming, and for those who know the concept of classes and Interfaces. Moreover this course will help experience professionals to implement MEF in their existing applications to achieve extensibility. Software Architects can use this course to design architecture of large enterprise level applications."
      ]
    },
    {
      "title": "Source Control Management with Git (SC102) Practice Tests",
      "url": "https://www.udemy.com/course/source-control-management-with-git-sc102-practice-tests/",
      "bio": "Assure yourself of passing the only certification of Git (SC102) with its Practice Exams 2025, Cheers!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to ace one of the most in-demand certifications in Source Control Management? Welcome to Source Control Management with Git (SC102) Practice Tests – the ultimate practice resource designed to prepare you confidently for the SC102 certification exam! This course brings you a complete set of practice tests that mirror the real exam’s complexity, providing an effective way to solidify your Git knowledge and build your test-taking confidence.\n\n\nWhat You’ll Get:\n• Comprehensive Practice Tests: Our expertly crafted questions cover every key domain of the SC102 exam, from cloning and initializing repositories to handling merges, inspecting commits, and working with remote repositories. Each question is designed to reflect the real-world scenarios you’ll encounter during the exam and in your career.\n• Detailed Explanations and Insights: Every answer comes with a detailed explanation so that you can deepen your understanding of Git concepts and strengthen areas where you need improvement.\n• Simulated Real-World Challenges: This course emphasizes practical, hands-on scenarios that ensure you’re not just memorizing facts but truly understanding how to apply Git commands and strategies effectively in the most diverse situations possible.\n• Progress Tracking and Targeted Review: Our structured practice approach lets you track your progress, identify weak spots, and target specific areas before the actual exam.\n\n\nPrepare to master Git essentials, get certified, and take your source control skills to a professional level. Enroll today and ensure your path to SC102 certification success!\n\n\nNote: The actual is a hands-on exam; however, Udemy doesn't support real-time labs; hence, I have crafted the tests in such a way that will cover all the possible domains with all the possible scenarios that the real exam will test you on. Therefore, practice these tests thoroughly, & you will be more than ready for the exam!\n\n\nDisclaimer: These are the practice tests to prepare you completely for the real exam; hence, do not assume that these are the same exam questions that you will get in the exam.",
      "target_audience": [
        "Anyone interested in gaining the only global credential in Git: SC102",
        "Anyone looking to advance their career.",
        "People who are looking forward to challenge themselves with the assessment in Git.",
        "Software Engineers",
        "Data Scientists",
        "DevOps Enthusiasts",
        "Leadership Team",
        "Data Practitioners",
        "Project Managers",
        "Product Managers",
        "Aspiring & Experienced Developers",
        "Students",
        "Tech Enthusiasts"
      ]
    },
    {
      "title": "Microservices Interview: Essential Questions and Answers",
      "url": "https://www.udemy.com/course/microservices-interview-essential-questions-and-answers/",
      "bio": "Ace your next Microservices Interview with essential interview questions including design patterns and best practices.",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "In this course, you'll learn everything you need to know to confidently tackle any microservices-related questions that come your way in your next interview. With 250+ questions and advanced explanations, we'll cover key concepts, principles, and design patterns, as well as common pitfalls and best practices of microservices architectures.\nOver the years, software development moved away from traditional monolithic architectures, because of the complexities with tightly coupled, interconnected code. As a result, microservices are adopted many projects in many enterprise companies with using cloud-native approaches that enable distributed computing through multiple smaller services. And Microservices Architecture knowledge is key crucial skill that companies are demanding critically.\nWith this course, you'll test and learn about Microservices Interview Questions (250+) with topics listed below:\nMicroservices Decomposition\nMicroservices Communications (Sync / Async Message-Based Communication, API Gateways)\nMicroservices Data Management (Databases / Query / Commands / Distributed Transactions)\nMicroservices Distributed Transactions\nMicroservices Deployments with Containers and Orchestrators\nMicroservices Resilience\nPatterns & Best Practices that we will cover during the course :\nAPI Gateway Pattern, Gateway Routing Pattern, Gateway Aggregation Pattern, Gateway Offloading Pattern, Backends for Frontends Pattern-BFF, Service Aggregator Pattern, Service Registry/Discovery Pattern\nSingle-receiver Message-based Communication (one-to-one model), Multiple-receiver Message-based Communication (one-to-many model-topic), Fan-Out Publish/Subscribe Messaging Pattern, Topic-Queue Chaining & Load Balancing Pattern\nThe Shared Database Anti-pattern, Relational and NoSQL Databases, CAP Theorem–Consistency, Availability, Partition Tolerance, Data Partitioning: Horizontal, Vertical and Functional Data Partitioning, Database Sharding Pattern\nMaterialized View Pattern, CQRS Design Pattern, Event Sourcing Pattern, Eventual Consistency Principle\nSidecar pattern, Service Mesh, Infrastructure as code (IaC), CI/CD pipelines\nRetry pattern, Circuit Breaker Pattern, Bulkhead Pattern, Fallback Pattern, Strangler Fig Pattern\nAnd you'll learn how to discuss these topics in the context of real-world scenarios. We'll cover common interview questions.\nSample Questions :\nWhat does \"design for failure\" mean in a Microservices Architecture ?\nIf you design e-commerce application with microservices, Which services could be exist in your architecture ?\nWhat are some patterns and best practices that are commonly used with asynchronous communication in microservices ?\nWhat are some advantages of using HTTP and WebSocket for push and real-time communication in microservices ?\nWhat are some advantages of using the publish/subscribe model and AMQP protocols for event-driven communication in microservices ?\nHow does using GraphQL in a microservices architecture compare to using traditional RESTful APIs ?\nWhich of the following use case best fit for gRPC usage in e-commerce microservices ?\nWhat are the use cases of WebSocket API Usage in real-world scenarios ?\nWhich of the following is NOT typically a responsibility of an API Gateway ?\nHow does the API Gateway apply rate limiting in an microservices-based application ?\nHow Service Registry and Service Discovery is used together in microservices ?\nIf you design e-commerce microservice application, how you apply Publish/Subscribe Messaging Pattern ?\nIf you decide e-commerce databases, What is the data storage technology used by the inventory microservice that processes high-velocity streams of unstructured data ?\nWhy is the Shared Database principle considered an anti-pattern for microservices ?\nWhich type of database is best suited for a microservice that handles orders and transactions in an e-commerce system ?\nHow can the CAP theorem be applied in the design and implementation of microservices ?\nHow is database sharding pattern used to improve the performance and scalability of databases in microservices ?\nWhen should the materialized view pattern be used in microservices ?\nHow can read and write databases be kept in sync in a CQRS architecture ?\nWhich of the following can be real-world use cases of microservices that use CQRS and Event Sourcing ?\nHow does distributed caching improve the performance of a system that uses microservices ?\nWhat is the main disadvantage of cache miss in a distributed caching system for microservices ?\nWhat is the advantage of using the saga pattern for implementing distributed transactions in microservices architecture ?\nWhich is the example of a real-world scenario where the saga pattern could be used in a microservices architecture?\nIn a choreography-based saga, who is responsible for coordinating the updates to the databases ?\nWhat is the key responsibility of the central orchestrator service in an orchestration-based saga implementation ?\nHow can CDC and the transactional outbox pattern be used together in a microservice architecture ?\nWhat is the role of service meshes in the communication and coordination of microservices ?\nWhy use Helm charts in Kubernetes for microservices deployments ?\nWhen is the sidecar pattern typically used in microservices deployments ?\nHow can Infrastructure as code (IaC) be used with Kubernetes for microservices deployments ?\nWhat is the built-in mechanism in Kubernetes for microservices health monitoring ?\nWhen using the retry pattern, what is typically done after a temporary failure occurs ?\nWhat is the Circuit Breaker Pattern ?\nWhich of the following is a microservices resilience pattern that helps prevent cascading failures ?\nWhat are some advantages of using the Strangler Fig Pattern for migrating a monolithic application to microservices ?\nWhat is the main advantage of using contract testing in a microservices architecture ?\nHow to maximize benefit of this practical test ?\nTo maximize benefit of this course, After taking this practical test, you should read all answers of every questions even you replied correctly. Because every question has extensive detailed explanations that you can learn all aspects of that topics.\nBy the end of this course, you'll have a deep understanding of microservices and the ability to articulate their benefits, drawbacks. Also you'll learn insider tips and tricks to help you ace your next microservices interview.  Plus, you'll gain the confidence and skills to hack your next software architecture interview and take your career to the next level.\nBy practicing with this test, You will learn how to demonstrate your knowledge and expertise in microservices with real-world experience and projects, and create strategy for how to effectively communicate and collaborate with the interviewers.\nEnroll now and start learning today!",
      "target_audience": [
        "Who wants to land Software Architecture Jobs for Microservices Projects"
      ]
    },
    {
      "title": "Quantum Computing Made Simple",
      "url": "https://www.udemy.com/course/quantum-computing-made-simple/",
      "bio": "A quick and easy guide to Quantum Computing for programmers and researchers",
      "objectives": [
        "Quantum computing",
        "Fundamentals of Quantum physics",
        "Complex numbers for Quantum computing",
        "Linear algebra for Quantum computing",
        "Python and Qiskit for Quantum Computing"
      ],
      "course_content": {
        "What is a qubit?": [
          "Qubit",
          "Qubit",
          "Representation of a qubit state",
          "Qubit state"
        ],
        "Superposition and measurement": [
          "Superposition and measurement",
          "Superposition and measurement",
          "Qubit as a vector",
          "Qubit as a vector",
          "Physical implementations of quantum computers",
          "Physical implementations of quantum computers"
        ],
        "Complex numbers for qubits": [
          "Complex numbers - part 1",
          "Complex numbers - part 1",
          "Complex numbers - part 2",
          "Complex numbers - part 2",
          "Complex numbers - part 3",
          "Complex numbers - part 3",
          "Complex numbers - part 4",
          "Complex numbers - part 4"
        ],
        "Linear algebra for qubits": [
          "Hilbert space",
          "Hilbert space",
          "Hilbert space - part 2",
          "Hilbert space - part 2",
          "Basis",
          "Basis"
        ],
        "Matrices are everywhere!": [
          "Matrix operations",
          "Matrix operations",
          "Tensor product",
          "Tensor product",
          "Pure and mixed states",
          "Pure and mixed states",
          "Density matrix",
          "Density matrix",
          "Hermitian matrix",
          "Hermitian matrix",
          "Unitary matrix",
          "Unitary matrix"
        ],
        "Operations with qubits": [
          "Hadamard gate",
          "Hadamard gate",
          "Pauli matrices. X gate",
          "Pauli matrices. X gate",
          "Y gate",
          "Y gate",
          "Z gate",
          "Z gate"
        ],
        "3D representation of a qubit state": [
          "Bloch sphere - part 1",
          "Bloch sphere - part 1",
          "Bloch sphere - part 2",
          "Bloch sphere - part 2"
        ],
        "Interactions between qubits": [
          "CNOT",
          "CNOT",
          "Quantum entanglement",
          "Quantum entanglement",
          "Bell state",
          "Bell state",
          "Swap operation",
          "Swap operation",
          "No-cloning theorem",
          "No-cloning theorem"
        ],
        "Python for quantum computing": [
          "Why Qiskit?",
          "Why Qiskit?",
          "Colab for researchers",
          "Colab for researchers",
          "How to code using Jupyter Notebook",
          "How to code using Jupyter Notebook",
          "Write a program using Qiskit",
          "Write a program using Qiskit",
          "Bell state in Qiskit",
          "Bell state in Qiskit"
        ],
        "Quantum teleportation: how is this even possible?": [
          "Quantum teleportation - part 1",
          "Quantum teleportation - part 2",
          "Quantum teleportation - part 3",
          "Quantum teleportation - part 4",
          "Quantum teleportation in the IBM cloud"
        ]
      },
      "requirements": [
        "Basics of math"
      ],
      "description": "Quantum computing is the most modern field in programming. Is it difficult to study this science? It depends on how the knowledge is presented. In this course you will study quantum computing the quickest and simplest way.\nDon't worry if you don't have enough knowledge of math, like linear algebra or complex numbers. This course will explain everything you need, so that quantum computing will be as simple for you as school arithmetic.\nAlso you will understand necessary basics from quantum physics needed for creating quantum algorithms. You will learn what a qubit and superposition are, get acquainted with the concept of measurement.\nNot only will you learn about such amazing things as superposition and quantum entanglement, but you will understand what physical laws govern it, and you will also learn how to use the mathematical tools that can easily describe these complex processes. But most importantly, you will learn how to apply these phenomena of quantum physics in programming. Taking this course, you will first understand how to move from quantum physics to mathematics, and then from mathematics to programming.\nBecoming a quantum programmer is a long road, but the main thing is to take the first step. Let this course be your first step!",
      "target_audience": [
        "Developers curious about quantum computing",
        "Beginner Quantum Programmers",
        "Data Scientists who are interested in quantum computing"
      ]
    },
    {
      "title": "Technical Writing: Common DITA XML Map and Topic Elements",
      "url": "https://www.udemy.com/course/technical-writing-common-dita-xml-map-and-topic-elements/",
      "bio": "A shortcut to writing software documentation in DITA XML using Oxygen XML Author.",
      "objectives": [
        "DITA XML Topic Elements",
        "DITA XML Map Elements",
        "Task Topic Type",
        "Concept Topic Type",
        "Reference Topic Type"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What Will You Learn?"
        ],
        "Installing a Tool for Writing with DITA": [
          "How to Get Started Writing in DITA?",
          "Installing a Tool for Writing with DITA",
          "Installing Oxygen XML Author"
        ],
        "DITA XML Map Elements": [
          "DITA Map Elements",
          "map Element",
          "mapref Element",
          "navref Element",
          "topicref Element",
          "topichead Element",
          "The Complete List of Supported DITA Map Elements",
          "Create a DITA Map",
          "Demo - Part 1 - End-to-end Process Steps",
          "Demo: Part 2 - the DITA Map Elements"
        ],
        "DITA XML Topic Elements": [
          "Common DITA Topic Types",
          "How to Create DITA XML Task Topic",
          "Demo: Create a DITA Task Topic",
          "Demo: Creating a Table in DITA XML",
          "Exercise: Create a Table",
          "How to Create a Topic Section in DITA XML",
          "Syntax of the Section Element in DITA Topics",
          "Demo: Create a Section in a DITA Topic",
          "How to Create DITA XML Concept Topic",
          "Demo: Create a DITA Concept Topic",
          "How to Create DITA XML Reference Topic",
          "Demo: Create a DITA Reference Topic"
        ],
        "Bonus Section": [
          "Course Sample DITA XML Source Files"
        ]
      },
      "requirements": [
        "Technical writing skills are required"
      ],
      "description": "Are you confused and overwhelmed by the number of elements you need to learn as a DITA XML technical writer? Do you wonder which are the elements you must use to simply write your software documentation fast?  Or you simply need a refresher on which are the most often used elements in DITA XML?\nIf yes, this course is for you!\nIf you are a technical writer, looking to improve your knowledge and skills related to DITA XML, you should know the DITA XML map and topic elements well.\nJPDocu School of Technical Writing has providing instructor-led and self-paced courses on technical writing, DITA XML, and information architecture to thousands of students worldwide. In this course, Jordan Stanchev, User Assistance Development Architect at a Fortune 500 software development company, is sharing his vast knowledge in DITA XML and Oxygen XML Author.\nOne of the major challenges authors have with DITA XML is the sheer amount of elements that you have to learn just to start writing. There are currently initiatives happening in the OASIS compete that define the DITA standard to simplify and reduce the number of elements you can use (Lightweight DITA XML project).\nBut is that really needed? Will it help you when you have a more complex scenario to document?\nIf you are a DITA XML technical writer, you should know the most frequently and commonly used DITA XML elements from DITA 1.3 specification. The consequence of having this knowledge will be that you should be able to write the documentation you need without giving up on any benefits and functionality of DITA.\n\n\nIn this course, you will learn:\n\n\nIntroduction & Installing the Tool for Writing - 10 min\nHow to get started writing in DITA XML. You will follow the steps to download and install one of the best DITA XML editors - Oxygen XML Author.\n\n\nDITA XML Elements - 45 min\nWhich are the DITA XML map elements that you would use frequently to organize the structure of your content? You will need:\nmapref to reference one DITA XML map to another;\nnavref to switch the writing context between deliverables;\ntopicref to structure and organize your topics;\ntopichead to create a title to group together content underneath it.\nThis followed by a demo on how to use all these elements in an end-to-end scenario.\n\n\nDITA XML Topics and Topic Elements - 1 hour 25 min\nDITA is a semantic language. It follows the principles of minimalism and structured topic-based writing.\nYou will understand the most frequently used DITA XML topic types: Task, Concept, and Reference.\nI would dare to say that Task is the most important template for writing for a technical writer. It focuses on properly structuring and writing the content of each instruction you write.\nYou will see also specifics around more tricky DITA XML topic elements - such as the table and section elements, that help you better organize your documentation.\nThis all followed by a demo on how to use each of these elements.\nYou will perform short and straight-to-the-point exercises following the instructor's step-by-step demos.\n\n\nWhat is not included in this course?\nThis is not a complete and exhaustive list of DITA XML elements.\nOne of the most complicated aspects of DITA is related to the way-too-many elements that are available. In this course, we try to simplify it to help you get started quickly, instead of trying to cover every possible DITA aspect.\nTry it out and up your DITA XML writing skills! Remember, technical writing is easy - after all, it is just plain docu!",
      "target_audience": [
        "Technical Writers who want to improve their skills in writing using DITA XML"
      ]
    },
    {
      "title": "Complete Guide to yaml with python - Configure your project!",
      "url": "https://www.udemy.com/course/complete-guide-to-yaml-with-python-configure-your-project/",
      "bio": "Mastering YAML Configuration with Python: Unleash Your Project's Potential",
      "objectives": [
        "Understand YAML syntax, including scalar types, sequences, mappings, and indentation rules.",
        "Use the PyYAML library to load, parse, and manipulate YAML files in Python.",
        "Create YAML files programmatically, representing scalar values, lists, dictionaries, and nested structures.",
        "Organize project configurations in YAML files and handle different environments.",
        "Explore advanced YAML concepts such as tags, custom parsing, multiline strings, and including external files.",
        "Handle YAML parsing errors and validate data structures using schemas.",
        "Compare and choose between popular YAML libraries in Python.",
        "Integrate YAML with Python frameworks like Django and Flask for configuration.",
        "Serialize Python objects to YAML and deserialize YAML into Python objects.",
        "Study real-world projects, learn best practices for structuring YAML files, and optimize YAML usage."
      ],
      "course_content": {},
      "requirements": [
        "Basic Programming Knowledge: Participants should have a basic understanding of programming concepts and be familiar with the Python programming language. Knowledge of variables, data types, functions, and control structures in Python is recommended."
      ],
      "description": "Welcome to \"Complete Guide to yaml with python - Configure your project!\" Course!\n\n\nDiscover the power of YAML and Python to configure, control, and streamline your projects! This course is designed to take you from beginner to expert, teaching you the skills to elevate your Python projects to the next level.\n\n\nBy taking this course, you'll gain the following:\nFundamental Knowledge: Dive deep into YAML and its critical role in Python configuration, covering basics like syntax and structure.\n\n\nPractical Skills: Learn how to read and write YAML files in Python, manage configurations, and even create your own configuration class.\n\n\nAdvanced Techniques: Delve into the advanced aspects of YAML configuration, including encrypting sensitive data, validating configuration files, and managing changes and versions.\n\n\nTesting Know-How: Equip yourself with the skills to test and debug your YAML configuration, ensuring smooth and error-free project execution.\n\n\nBest Practices: Understand the best practices for using YAML in Python projects, setting you up for long-term success.\n\n\nAdditional Resources: We'll provide you with other learning resources to continue honing your YAML and Python skills after the course.\n\n\nWhether you're a seasoned developer looking to expand your skillset or a beginner hoping to master the art of Python configuration, this course offers everything you need and more. Empower yourself with valuable, in-demand skills that can help streamline your workflow, enhance project outcomes, and boost your career growth. Join us today and start your journey toward becoming a YAML configuration expert!",
      "target_audience": [
        "Python Developers: This course is ideal for Python developers who want to enhance their skills in project configuration using YAML. It is suitable for developers at various skill levels, from beginners to experienced professionals, who want to leverage YAML for managing their Python projects.",
        "Software Engineers: Software engineers working with Python and involved in project configuration will find value in this course. It provides them with the knowledge and practical skills to effectively use YAML for configuring and managing software projects.",
        "DevOps Engineers: DevOps engineers responsible for managing and configuring projects will benefit from this course. It equips them with the necessary YAML skills to create and maintain configuration files, handle different environments, and integrate YAML into their automation and deployment workflows.",
        "System Administrators: System administrators who work with Python-based systems and need to configure and manage project settings will find this course valuable. It covers the essentials of using YAML for project configuration, allowing administrators to streamline their configuration processes.",
        "Technical Project Managers: Technical project managers who oversee Python projects and need to understand how configuration is managed will benefit from this course. It provides them with the knowledge to effectively communicate with developers and make informed decisions regarding project configuration.",
        "Python Enthusiasts: Even individuals who are not professional developers or engineers but have a keen interest in Python and project configuration can take this course. It provides them with a comprehensive understanding of YAML and its integration with Python, allowing them to configure and manage their own personal projects."
      ]
    },
    {
      "title": "The Complete MySQL from Scratch: Bootcamp",
      "url": "https://www.udemy.com/course/the-complete-mysql-from-scratch-bootcamp/",
      "bio": "Become an In-demand SQL Master by creating databases and building reports through real-world project queries",
      "objectives": [
        "Create your own database or interact with existing databases",
        "Write complex SQL queries across multiple tables",
        "Build a web app using Python and MySQL",
        "Answer company performance or sales questions using data",
        "Write complex SQL queries across multiple tables",
        "Model real-world data and generate reports using SQL queries",
        "Learn JOINS, How to JOIN multiple tables in real-world data",
        "Create Backup and Restore Secure database",
        "You will learn How to create MySQL Database Tables",
        "You will learn SQL Query writing using DDL and DML Commands",
        "Prepare analytical reports with ease",
        "Learn What is Generative AI / Gen AI",
        "Participate in Practice test to test your learning skills"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Course Curriculum Overview",
          "Overview of Databases",
          "What is Source code",
          "Learn What is Generative AI / Gen AI",
          "Best Practices for Learning Online Course"
        ],
        "SQL Environment Setup": [
          "MySQL Installation",
          "MySQL Workbench Installation",
          "Connecting to MySQL using Console",
          "DOWNLOAD the Resources for Practice Datasets"
        ],
        "SQL Statement Basics": [
          "Overview of Challenges",
          "SQL Statement Basic",
          "SELECT Statement",
          "SELECT DISTINCT",
          "Column AS Statement",
          "COUNT built-in Method usage",
          "SELECT WHERE Clause – Part One",
          "SELECT WHERE Clause – Part Two",
          "SQL ORDER BY Statement",
          "SQL Limit Clause Statement",
          "SQL Using BETWEEN with Same Column Data",
          "How to Apply IN Operator",
          "Wildcard Characters with LIKE and ILIKE",
          "Practice Test on SQL"
        ],
        "GROUP BY Statements": [
          "Overview of GROUP BY",
          "Aggregation Function SUM()",
          "Aggregation MIN() and MAX()",
          "GROUP BY - Part One",
          "GROUP BY – Part Two",
          "HAVING Statement"
        ],
        "JOINS": [
          "Overview of JOINS",
          "Introduction to JOINS",
          "AS Statement",
          "INNER Join",
          "Full Outer Join",
          "Left Outer Join",
          "Right Outer Join",
          "Union"
        ],
        "Advanced SQL Commands / Statements": [
          "Basic of Advanced SQL Commands",
          "Timestamps",
          "Extract from Timestamp",
          "Mathematical Functions",
          "String Functions",
          "SubQuery"
        ],
        "Creating Database and Tables": [
          "Basic of Database and Tables",
          "Data Types",
          "Primary Keys and Foreign Keys",
          "Create Table in SQL Script",
          "Insert Statement in MySQL",
          "Update Statement in MySQL",
          "Delete",
          "Alter Table",
          "Drop Table",
          "Check Constraint",
          "NOT NULL Constraint",
          "UNIQUE Constraint"
        ],
        "Databases and Tables": [
          "Overview of Databases and Tables",
          "Creating a Database backup",
          "Restoring a Database from backup"
        ]
      },
      "requirements": [
        "No SQL and No previous programming language experience required, but it won't hurt :)",
        "No software is required in advance of the course (all software used in the course is free)",
        "All you need is a working computer for this course; PC, Mac, and Linux users are all welcome."
      ],
      "description": "Master the art of database management with \"The Complete MySQL from Scratch: Bootcamp.\" This comprehensive course is designed to take you from a complete beginner to a confident MySQL user, equipping you with the skills needed to manage, query, and optimize relational databases effectively.\n\n\nStarting with the basics, you’ll learn what databases are, why they’re essential, and how MySQL fits into the tech landscape. From setting up your MySQL environment to writing your first SQL query, this course provides step-by-step guidance on every aspect of MySQL. You'll explore key topics like creating and managing databases, designing tables, data types, and normalization principles.\n\n\nAs you progress, you’ll dive into advanced topics such as complex joins, subqueries, stored procedures, indexing, and optimizing database performance. You’ll integrate MySQL with programming languages like Python and PHP, preparing you to build robust, data-driven applications in future learnings.\n\n\nThe course is rich with hands-on exercises, real-world projects, and practical use cases to ensure you can apply your skills in professional settings. By the end of the bootcamp, you’ll have a strong foundation in MySQL, empowering you to handle database challenges in careers like data analysis, web development, and beyond.\n\n\nJoin now to start your journey in mastering MySQL from scratch!",
      "target_audience": [
        "Who is interested in learning SQL to help with their current job or to find a new role. SQL is one of today's most in-demand skills",
        "Anyone looking to answer complex business problems and generate reports using large sets of data",
        "Business owners, people in sales, or in marketing roles who are interested in understanding company data Analysis.",
        "Developers who are looking to build applications (e.g. social media network, ecommerce site) using MySQL",
        "Anyone who wants to build business intelligence and analytical reports"
      ]
    },
    {
      "title": "Hyperledger Fabric 2.x Basic & Advanced Network Operations",
      "url": "https://www.udemy.com/course/hyperledger-fabric-version-2x-advanced-network-operations/",
      "bio": "Learn Fabric Advanced Operations like adding new Organisation or Orderer In existing Network.",
      "objectives": [
        "Fabric Advanced Operations",
        "Adding new Organisation in existing channel",
        "Adding New Organisation in Consortium",
        "Adding new Orderer in Existing Fabric Network without disturbing running setup",
        "Configuration block update flow",
        "System Channel and Application Channel",
        "Policy requirement for updating anything in configuration block",
        "Pure Hands ON"
      ],
      "course_content": {
        "Course Introduction": [
          "Course Introduction & Outline - Part 1",
          "Course Introduction & Outline - Part 2",
          "Important Prerequisite"
        ],
        "Git Repository - Source Code - Download": [
          "Source Code - Download and follow the repo"
        ],
        "Create Basic Hyperledger Fabric Network": [
          "Hyperledger Fabric Network Details",
          "Repository Folder Structure",
          "Create Cryptomaterials for all network Participant",
          "Create Channel Artefacts ( Genesis Block, Channel.tx file etc)",
          "Docker-Compose file Walk-through (All Services)",
          "Run All Services in Network",
          "Create Channel and Join all Peers",
          "Chaincode (Smart Contract) Walk-through",
          "Downloading Smart Contract Dependency",
          "Package & Install Chaincode",
          "Approve Chaincode from Both Organisation",
          "Commit Chaincode Definition on Endorsing Peer",
          "Invoke and Query Transaction",
          "Start Network With Single Script"
        ],
        "Add New Org in Existing Network": [
          "Flow Diagram",
          "Create Cryptomaterials For New Organisation",
          "Docker-Compose file Walk-through (All Org3 Services)",
          "Create New Organisation Definition File",
          "Configuration Update Flow",
          "Fetch Configuration Block & Add New Organisation Definition File",
          "Compute Update using Configtxlator Tool using Original & Modified Block",
          "Sign & Send Updated Configuration Block to Orderer",
          "Run Org3 Services, Join Channel & Verify Data"
        ],
        "Add New Organisation in Consortium (System Channel)": [
          "Introduction: Add New Organisation in Existing consortium",
          "Add New Organisation in system Channel (Consortium) Flow",
          "Try To Create Channel when Org is not Part Of Consortium",
          "System Channel Update - Consortium Info Update",
          "Create Channel and Join all Peers- After Updating Consortium with New Org",
          "Deploy Chaincode, Invoke Transaction and Verify data in State DB",
          "Wrap up"
        ],
        "Add New RAFT Orderer in Existing Network": [
          "Add New Orderer in Existing Fabric Network - Flow",
          "Configuration Block Update Flow",
          "Create All Certificates using Certificate Authority for whole Fabric Network",
          "Create Cryptomaterials For New Orderer",
          "Step 1: Add Consenter to System Channel",
          "Step 2: Fetch New Genesis Block and Start new Raft Orderer Container",
          "Step 3: Add Orderer Address to System Channel",
          "Step 4: Add Consenter to Application Channel",
          "Step 5: Add Orderer address to Application Channel",
          "Check and Verify New Orderer Log For Confirmation"
        ]
      },
      "requirements": [
        "Basic understanding of Fabric Components and prerequisite should be installed for creating basic network",
        "Should be familiar with creating basic fabric network",
        "Should have Basic Docker knowledge",
        "Should have basic Bash Script knowledge",
        "Familiar with Fabric Binaries",
        "Basic Understanding of JSON/YAML",
        "Ready to learn fabric advanced Concepts"
      ],
      "description": "Fabric Advanced Operations are complex to implement and need to have the expertise to add new components to the existing network without disturbing the running setup.\nWhat we cover in this course\nHands-on experience of advanced operations like\nConfiguration Block Update Flow\nAdding New Organisation in Application Channel at runtime\nAdding New Organisation in Consortium\nAdding New Orderer in existing orderer cluster\n\nWe will cover each and every step require to do these complex operations.\nWe will carry out network configuration update as per policies defined for adding new components in the fabric network.\nNote: Poster Image - Illustration by Freepik Stories (stories.freepik/technology)\n\nThis course does not include Hyperledger fabric core concepts and focused primarily on Hyperledger fabric advanced network operations\nAt the end of this course, you will be in a position to scale your network by adding a new organization or orderer in the existing fabric network without disturbing the running setup.\n\nAbout Hyperledger Fabric:\nFabric is the first distributed ledger platform to support smart contracts authored in general-purpose programming languages such as Java, Go, and Node.js. The fabric has a highly modular and configurable architecture, enabling innovation, versatility, and optimization. Hyperledger Fabric has been specifically architected to have a modular architecture. Whether it is pluggable consensus, or pluggable identity management protocols.",
      "target_audience": [
        "Anyone who want to advance fabric concept",
        "Fabric Developer interested to enhance their fabric knowledge to advance level",
        "Fabric Administrators"
      ]
    },
    {
      "title": "Real World Vagrant - Hortonworks Data Platform 2.5",
      "url": "https://www.udemy.com/course/real-world-vagrant-hortonworks-data-platform-25/",
      "bio": "Build a Distributed Cluster of Hortonworks 2.5 Manager and Agent nodes with a single command! Includes Spark 2.0!",
      "objectives": [
        "Simply run a single command on your desktop, go for a coffee, and come back with a running distributed environment for cluster deployment",
        "Quickly build an environment where Hortonworks and Hadoop software can be installed",
        "Ability to automate the installation of software across multiple Virtual Machines"
      ],
      "course_content": {
        "Deploy a multinode Hadoop Cluster with HaortonWorks 2.5": [
          "Introduction to HortonWork 2.5. Includes Spark 2.0 and Zeppelin !!",
          "Suggested course curriculum to follow ..."
        ],
        "Setup our Local HortonWorks Infrastructure - On Vagrant": [
          "Base Vagrant file",
          "Describing the Vagrant Topology that we are going to build",
          "Here we configure our local Hortonworks HDP 2.5 repository.",
          "Download the HDP binaries and verify our repository is working",
          "HDP-UTILS-1.1.0.21 April 2017 update",
          "Tune the O/S of the Virtual Machines. ntp, firewall, swappiness, TCP buffers ...",
          "Configure a Local WebServer to handle our Hortonworks and HDP rpm components."
        ],
        "Install and Package the HortonWork Components": [
          "Part I - Install Apache Ambari Server. The Hadoop Management Tool.",
          "Part II - Install Apache Ambari Server. The Hadoop Management Tool.",
          "Packgae the Final Deployable Images for Ambari Server and Agent.",
          "Register the new image with Vagrant"
        ],
        "Boot up the Final Multi Virtual Machine Topology for our Hadoop Cluster": [
          "Boot up the Final Multi Virtual Machine Topology for our Hadoop Cluster",
          "Bonus : We perform some Cluster troubleshooting"
        ],
        "Install Hadoop - HDP": [
          "First Pass - Install Hadoop ...",
          "Second Pass - Install Hadoop ..."
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming or scripting experience is required.",
        "You will need a desktop PC and an Internet connection. The course is created with Windows in mind.",
        "The software needed for this course is freely available",
        "You will require a computer with a Virtualization chipset support - VT-x. Most computers purchased over the last five years should be good enough",
        "Optional : Some exposure to Linux and/or Bash shell environment",
        "64-bit Windows operating system required (Would recommend Windows 7 or above)",
        "This course is not recommened if you have no desire to work with/in distributed computing"
      ],
      "description": "Note : This course is built on top of the \"Real World Vagrant For Distributed Computing - Toyin Akin\" course\n\"NoSQL\", \"Big Data\", \"DevOps\" and \"In Memory Database\" technology are a hot and highly valuable skill to have – and this course will teach you how to quickly create a distributed environment for you to deploy these technologies on.\nA combination of VirtualBox and Vagrant will transform your desktop machine into a virtual cluster. However this needs to be configured correctly. Simply enabling multinode within Vagrant is not good enough. It needs to be tuned. Developers and Operators within large enterprises, including investment banks, all use Vagrant to simulate Production environments.\nAfter all, if you are developing against or operating a distributed environment, it needs to be tested. Tested in terms of code deployed and the deployment code itself.\nYou'll learn the same techniques these enterprise guys use on your own Microsoft Windows computer/laptop.\nVagrant provides easy to configure, reproducible, and portable work environments built on top of industry-standard technology and controlled by a single consistent workflow to help maximize the productivity and flexibility of you and your team.\nThis course will use VirtualBox to carve out your virtual environment. However the same skills learned with Vagrant can be used to provision virtual machines on VMware, AWS, or any other provider.\nIf you are a developer, this course will help you will isolate dependencies and their configuration within a single disposable, consistent environment, without sacrificing any of the tools you are used to working with (editors, browsers, debuggers, etc.). Once you or someone else creates a single Vagrantfile, you just need to vagrant up and everything is installed and configured for you to work. Other members of your team create their development environments from the same configuration. Say goodbye to \"works on my machine\" bugs.\nIf you are an operations engineer, this course will help you build a disposable environment and consistent workflow for developing and testing infrastructure management scripts. You can quickly test your deployment scripts and more using local virtualization such as VirtualBox or VMware. (VirtualBox for this course). Ditch your custom scripts to recycle EC2 instances, stop juggling SSH prompts to various machines, and start using Vagrant to bring sanity to your life.\nIf you are a designer, this course will help you with distributed installation of software in order for you to focus on doing what you do best: design. Once a developer configures Vagrant, you do not need to worry about how to get that software running ever again. No more bothering other developers to help you fix your environment so you can test designs. Just check out the code, vagrant up, and start designing.",
      "target_audience": [
        "Software engineers who want to expand their skills into the world of distributed computing",
        "System Engineers that want to expand their skillsets beyond the single server",
        "Developers who want to write/test their code against a valid distributed enviroment"
      ]
    },
    {
      "title": "InfluxDB for Beginners",
      "url": "https://www.udemy.com/course/influxdb-for-beginners/",
      "bio": "Become an InfluxDB master by learning how to write queries and visualize your data effectively in real world situations",
      "objectives": [
        "Where InfluxDB fits in the TICK stack",
        "Setup and Run InfluxDB locally on your machine",
        "How to integrate InfluxDB with grafana",
        "How to run queries and functions against a database in InfluxDB",
        "What is Time series data"
      ],
      "course_content": {
        "Welcome to the Course": [
          "Introduction"
        ],
        "Intro to InfluxDB": [
          "Why Time Series DataBases",
          "TICK Stack",
          "Case Study",
          "Case Study 2 - Capital One",
          "Tags and Fields",
          "InfluxDB Overview"
        ],
        "Installtion and Setup": [
          "Why use Sublime Text",
          "Setup InfluxDB",
          "Git Bash for Windows",
          "Got everything you need setup?"
        ],
        "Basic Queries": [
          "Create a database",
          "How to structure a query",
          "Count",
          "Order By",
          "Arithmetic",
          "Max and Min functions",
          "Group By",
          "InfluxDB Functions",
          "Why do I need a retention policy",
          "How to implement a retention policy",
          "Continuous Query",
          "RP and CQ Quiz."
        ],
        "Visualizing DashBoards": [
          "Grafana Integration",
          "Do you have grafana running?"
        ],
        "Real World Implementation": [
          "Why are we doing this",
          "What is Cohort Analysis",
          "The Actual analysis"
        ],
        "Setting up the TICK Stack": [
          "Setup Telegraf",
          "Chronograf",
          "Setup the Kapacitor"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required"
      ],
      "description": "Build a strong foundation in InfluxDB with this practical course suited to both beginners and experienced professionals\nA time series database is essentially a database optimized for time-stamped or time series data. InfluxDb is the top ranked time series database in the market. Time series databases are being used more and more for their scalability and usability. Use cases of time series databases today range from analyzing the retail industry to collecting data for self driving cars. Even autonomous trading algorithms today use time series databases. As such more and more jobs are going to developers who have this skill of using time series databases.\nThis course will guide you through all the basics of InfluxDB and get you ready to tackle any time series data project that comes your way,\nWe will cover the following pillars of InfluxDB:\n1)TICK stack: Understand the overall architecture of InfluxDB How is it used in industry?. Leave behind the days of RDBMS and move to time series databases. Install and setup everything you need!\n2)Basics: Ensure you can run basic commands like count, order-by,max, group-by etc. Learn how to implement retention policies and continuous queries. Test your knowledge of Functions in InfluxDB.\n3)Real World Situations: Utilize InfluxDB for real world challenges like running a cohort analysis or setting up the full TICK stack with Telegraf, Chronograf and the Kapacitor. Build great dashboards using Grafana for analysis.\n\n\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Any developer looking to understand how to use InfluxDB and Time Series Databases",
        "Anybody with a desire to earn more by learning more!",
        "Anyone who is interested in storing data for retail, trading algorithms, autonomous vehicles, sales, monitoring systems etc.",
        "For those who want to visualize their time series data effectively and analyze the data for business decisions"
      ]
    },
    {
      "title": "Primavera P6 Complete Course",
      "url": "https://www.udemy.com/course/primavera-p6-complete-course/",
      "bio": "Primavera P6 Complete Course",
      "objectives": [
        "في هذا الكورس ستجد ما هو مناسب في كيفية ادارة المشاريع",
        "ايضا ستتعلم متطلبات ادارة المشاريع من حيث الوقت والتكلفة والجودة",
        "كما ستتعلم برنامج البرايمافيرا من الالف الى الياء",
        "و اخيرا سوف تكون قادرا على ادارة التخطيط باستخدام برنامج برايمافيرا"
      ],
      "course_content": {
        "Introduction": [
          "What is a project?",
          "Project Management",
          "Critical Path Concept",
          "What Is Inside This Course?"
        ],
        "EPS And OBS": [
          "EPS _Part 1",
          "EPS Part 2",
          "7.OBS -Prt1",
          "8.OBS _responsibilities"
        ],
        "project And calendar And WBS": [
          "9.Creating New Project",
          "10. Creating Calendar",
          "11. Calendar _EXEPTION",
          "4. Introduction to WBS",
          "13.WBS main",
          "14. Branch WBS"
        ],
        "activities and relationships": [
          "1. Activities Prt1",
          "2. Activities Prt2",
          "3. Activities Prt3"
        ],
        "Relationships": [
          "1.relationships part 1",
          "2.relationships part 2",
          "3.Relationships Part 3",
          "4.relationships part 4",
          "5.Primary Schedule and Export Project",
          "6.Open External Project"
        ],
        "Program Options": [
          "1.Activity Types",
          "2.Columns Option",
          "3.Layout view Option",
          "4.Guntt Chart Options",
          "5.User Preferences Options",
          "6.Admin Options"
        ],
        "Practice and test your knowledge": [
          "Further More",
          "more over",
          "Refresh",
          "making a new project",
          "Quiz Project"
        ]
      },
      "requirements": [
        "To enroll in a Primavera course conducted in Arabic, you may need to fulfill certain requirements or prerequisites, although the specific criteria can vary depending on the training provider and the level of the course. Here are some common prerequisites you may encounter: Basic Computer Skills: Familiarity with computer operations, including file management, using a keyboard and mouse, and navigating through software applications, is often expected. Project Management Knowledge: A foundational understanding of project management concepts can be beneficial. This includes familiarity with project planning, scheduling, and control processes. Arabic Language Proficiency: Since the course is conducted in Arabic, you should have a good command of the Arabic language to understand the instructions, lectures, and materials presented. Educational Background: While not always mandatory, some Primavera courses may recommend a certain educational background, such as a high school diploma or a degree in a relevant field. However, this requirement may vary depending on the level and intensity of the course. Software Familiarity: It is helpful to have a basic understanding of project management software, particularly Primavera P6. Familiarity with its features, terminology, and navigation can make it easier to grasp the course content. It's important to note that these prerequisites are general guidelines, and the specific requirements may differ between training providers and courses. Therefore, it is advisable to check the course details, prerequisites, and any additional requirements specified by the training provider offering the Primavera course in Arabic. What are the requirements or prerequisites for taking primavera course Assistant Poe The requirements and prerequisites for taking a Primavera course can vary depending on the specific course and training provider. However, here are some common prerequisites you may encounter: Basic Computer Skills: It is beneficial to have a general understanding of computer operations, such as file management, using a keyboard and mouse, and navigating through software applications. Project Management Knowledge: While not always mandatory, having a foundational understanding of project management concepts is helpful. Familiarity with project planning, scheduling, and control processes can facilitate understanding the Primavera software's functionalities. Educational Background: Many Primavera courses do not have strict educational prerequisites. However, some advanced or specialized courses may recommend a certain educational background or prior experience in project management or a related field. This can include having a high school diploma, a bachelor's degree, or relevant work experience. Software Familiarity: Depending on the course level, it may be beneficial to have some familiarity with project management software, particularly Primavera P6. Basic knowledge of the software's features, terminology, and navigation can help you grasp the course content more effectively. Language Proficiency: If the course is conducted in a language other than your native language, you should have a sufficient command of that language to understand the instructions, lectures, and materials provided."
      ],
      "description": "A Primavera P6 course for students is designed to provide an introduction to project management principles and teach students how to effectively use the Primavera P6 software for project planning, scheduling, and control. Here is an overview of what students can typically expect from a Primavera P6 course:\n\n\nIntroduction to Project Management: The course will begin with an introduction to the fundamental concepts and principles of project management. Students will learn about project lifecycle, key terminology, and the importance of effective project planning and scheduling.\n\n\nOverview of Primavera P6: Students will be introduced to the Primavera P6 software, which is a powerful project management tool widely used in various industries. They will learn about its features, interface, and navigation, gaining a basic understanding of how to use the software.\n\n\nCreating a Project: Students will learn how to set up and create a new project in Primavera P6. This includes defining project properties, creating a work breakdown structure (WBS), and inputting project activities.\n\n\nActivity Scheduling: The course will cover the process of scheduling activities in Primavera P6. Students will learn how to define activity relationships, estimate durations, assign resources, and create project calendars. They will also explore techniques for optimizing the project schedule.\n\n\nResource Management: Students will gain an understanding of resource management in Primavera P6. This includes learning how to assign resources to activities, track resource usage, and analyze resource allocation.\n\n\nProject Tracking and Control: The course will cover techniques for tracking project progress and controlling project schedules. Students will learn how to update project data, monitor critical paths, analyze variances, and generate reports to communicate project status effectively.\n\n\nAdvanced Topics (optional): Depending on the course level and duration, advanced topics may be covered. These can include topics such as cost management, risk analysis, earned value analysis, and integration with other project management tools.\n\n\nHands-on Exercises and Projects: Throughout the course, students will have the opportunity to apply their learning through hands-on exercises and projects. These exercises will involve creating and managing projects in Primavera P6, allowing students to practice the concepts and techniques taught in the course.\n\n\nCourse Completion and Certification: Upon completing the Primavera P6 course, students may receive a certificate of completion from the training provider, which can be added to their portfolio or resume to showcase their skills and knowledge in project management and Primavera P6.",
      "target_audience": [
        "this course for those who need to improve their knowledge in planning"
      ]
    },
    {
      "title": "Refactoring Legacy Code like a Pro: a Use Case.",
      "url": "https://www.udemy.com/course/refactoring-legacy-code-like-a-pro-a-use-case/",
      "bio": "Master The Art of Refactoring Messy Codebases Into a Software Masterpiece.",
      "objectives": [
        "Learn how to spot refactoring signals.",
        "Learn techniques to improve the test coverage.",
        "Master refactoring principles and best practices.",
        "You'll confidently tackle complex legacy codebases."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Domain Problem",
          "Extra Resources"
        ],
        "Testing": [
          "Project Setup",
          "Test Coverage",
          "Parametrized Tests",
          "Complete Code Coverage",
          "Test Cleaning",
          "Mutation Testing"
        ],
        "1st Round of Refactoring: The Fundamentals": [
          "Kotlin Conversion",
          "Why Refactoring?",
          "Declutter",
          "Top Level Functions",
          "Primitive Obsession",
          "Depending on Abstractions",
          "Function Splitting",
          "Capturing Logic",
          "Helping Other Devs",
          "Action to Calculation",
          "Public API",
          "Pair Programming"
        ],
        "2nd Round of Refactoring: Overengineering": [
          "Extracting The Responsibility of Formatting",
          "Simplifying Format Utils",
          "Refactoring The Core Logic",
          "Refactoring The Core Logic 2",
          "Refactoring The Core Logic 3",
          "Refactoring The Core Logic 4",
          "Scratch Refactoring"
        ],
        "Conclusion & Feedback": [
          "Wrap-up"
        ]
      },
      "requirements": [
        "Some coding experience"
      ],
      "description": "Master The Art of Refactoring Messy Codebases Into a Software Masterpiece and Become the go-to expert for codebase transformations by learning to take messy code as an opportunity to innovate and grow.\n\n\nBut what is legacy code in the first place?\nLegacy code refers to software code or applications that were created in the past and have been in use for a significant period. However, such code often poses challenges because it may be outdated, poorly documented, or not aligned with current coding standards and best practices. These challenges can make it difficult to maintain, update, or extend the software, thereby causing potential problems for developers to refactor to make it easy for future work.\nIn his Amazing book Working Effectively With Legacy Code, According to Michael Feathers, Legacy Code refers to any code that lacks automated tests: To me, legacy code is simply code without tests.\nIn this course, we will explore practical ways of dealing with legacy codebases. Our approach covers everything from automated tests to detailed techniques for making codebases flexible and enjoyable to work with.\n\n\nBy the end of the course...\nYou'll spot refactoring signals.\nYou'll be able to cover legacy code with tests.\nYou'll master refactoring principles and best practices.\nYou'll master techniques to improve the test coverage.\nYou'll identify common code smells and anti-patterns.\nYou'll confidently tackle complex legacy codebases.\n\n\nBefore You BUY This Course\nIf you're new to the world of code refactoring and looking for an affordable starting point, we recommend diving into specific books on the subject. Books (less than 60$) such as Refactoring or Working Effectively with Legacy Code provide a cost-effective way to build a strong foundation in refactoring principles, allowing you to learn at your own pace.\nOnce you're ready to put your knowledge into action on real legacy code, our comprehensive course guides you through practical application and advanced techniques, ensuring you're fully equipped to tackle complex code bases confidently.\n\n\nWhat's the Use case?\nIn this course, we will refactor a codebase that calculates prayer times provided by Prayer Times Organization. We will address the challenges posed by outdated technologies, inadequate code organization, and the need to improve code readability.\n\n\nWith clear objectives in mind, we'll break down the refactoring process into manageable steps, including:\nCode analysis.\nTest setup.\nModularization.\nExtracting meaningful abstraction.\nReducing the clutter.\nEmphasizing best practices.\nAnd much more.\nThe use case presents a good enough complex code to showcase the difficulties you can face when refactoring a real project. By the end of the course, you'll be well-prepared to take on real-world refactoring projects with confidence and expertise.\nYou can check the preview up in a video for a full explanation of the domain problem, so if that excites you, join now, and let us refactor a messy codebase.\n\n\nLanguage Agnostic\nThis course is designed to be language-agnostic, meaning you can acquire essential principles and techniques that apply universally across various codebases in different programming languages.\nWhile our use cases in the course choose Kotlin, you can still find on the domain problem website other versions that apply to Java, Python, C#, C++, and PHP; the skills and insights you gain are easily transferable to any other language.\nWe emphasize Kotlin to provide a practical learning experience, but the knowledge you acquire will empower you to excel in legacy code refactoring, regardless of your chosen programming language.",
      "target_audience": [
        "Beginner Developers wanting to learn new skill"
      ]
    },
    {
      "title": "Chaos Engineering : Master Techniques for System Reliability",
      "url": "https://www.udemy.com/course/chaos-engineering-master-techniques-for-system-reliability/",
      "bio": "Enhance your system's resilience with practical Chaos Engineering fundamentals, strategies and real-world applications.",
      "objectives": [
        "Origins and Details about Chaos Engineering",
        "Understand the true implication of Chaos Engineering and also what it doesn't apply",
        "Benefits, Principles and Challenges of Chaos Experiments",
        "Actual Case Studies of Chaos Engineering at LinkedIn, Netflix etc"
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "What is Chaos Engineering",
          "Origins of Chaos Engineering"
        ],
        "More about Chaos Engineering": [
          "Why would you break things on purpose",
          "What does Chaos Engineering not imply",
          "Chaos Testing vs Chaos Engineering",
          "Who uses Chaos Engineering?",
          "Why invest in Chaos Engineering?"
        ],
        "Benefits and Principles of Chaos Engineering": [
          "Benefits of Chaos Engineering",
          "Principles of Chaos Engineering",
          "Chaos Engineering Checklist",
          "Prod vs Pre-Prod Environments"
        ],
        "Steps and Experiments in Chaos Engineering": [
          "Types of Chaos Engineering Experiments",
          "How to set up a Chaos Engineering culture",
          "Sequence of a Chaos Engineering Experiment",
          "Controlling the Chaos"
        ],
        "Case Studies": [
          "Chaos Engineering - Case Studies",
          "The Challenges and Pitfalls of Chaos Engineering"
        ],
        "Closing Notes": [
          "Resources",
          "Chaos Engineering - FAQs",
          "Thankyou"
        ]
      },
      "requirements": [
        "No experience needed, we will learn everything from the scratch !"
      ],
      "description": "Unlock the secrets of Chaos Engineering with this comprehensive course. Learn to proactively test and strengthen your systems by simulating failures and analyzing their impact. Discover practical techniques to build resilient and reliable infrastructure, ensuring your systems can withstand unexpected disruptions. Perfect for engineers and IT professionals seeking to enhance their system's robustness and performance.\n\n\nHere are the top five reasons to learn cross-cultural communication:\n\nBoost Resilience : Identify and address system weaknesses to improve overall resilience.\nEnhance Reliability : Ensure systems perform optimally even under stress and unexpected conditions.\nPrevent Downtime : Proactively test and mitigate risks to reduce the likelihood of unexpected failures.\nIncrease Confidence : Build confidence in your ability to handle and resolve system issues effectively.\nDrive Improvement : Promote a culture of continuous enhancement and adaptability in system design and operations.\n\n\nTop Reasons why you should choose this Course :\n\nThis course offers real-world examples and case studies.\nGreat set of resources are provided along with the course, that will be timely updated.\nThe course covers all essential aspects of chaos engineering, from basics to practical strategies.\nDesigned for busy learners, this course allows students to learn at their own pace, anytime, anywhere.\nA Verifiable Certificate of Completion is presented to all students who undertake this unique and comprehensive Chaos Engineering course.",
      "target_audience": [
        "Cloud and Web developers, or infact developers of any domain",
        "Organizations looking to ensure their products/solutions are having no downtime",
        "Professionals / Software Developers / Data Scientists etc",
        "Business Analysts / Consultants / Project Managers etc"
      ]
    },
    {
      "title": "An Introduction to Azure Monitoring",
      "url": "https://www.udemy.com/course/an-introduction-to-azure-monitoring/",
      "bio": "Master Monitoring and Alerting for your apps and infrastructure using Azure Monitoring",
      "objectives": [
        "Monitor your Azure infrastructure [VM's] with Azure Monitor",
        "Basic understanding of Azure VM, Azure Databases and NodeJS Applications",
        "How to send notifications for anomalies via Slack and Email",
        "Make use of Azure Dashboards",
        "Azure Architecture for cloud monitoring",
        "Why we need Azure monitoring",
        "How to Integrate Azure with Grafana",
        "Make use of Azure Workbooks",
        "How to use KQL with Azure Monitoring"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Azure Overview",
          "Disclaimer",
          "Azure Monitoring Pricing",
          "Customer Story",
          "Create an Azure Account - Signup",
          "Architecture",
          "Quiz - Azure Monitoring Concepts"
        ],
        "Monitoring Virtual Machines using Azure Monitor": [
          "Section Intro",
          "Why we use Virtual machines",
          "Monitoring the Virtual Machines",
          "Grafana Intro",
          "Grafana Integration",
          "Virtual Machine Monitoring"
        ],
        "Why we use Azure Databases": [
          "Why we use Azure Databases",
          "Monitoring Azure Databases"
        ],
        "Application Monitoring with Azure": [
          "Section Intro",
          "Monitoring a NodeJS App",
          "Application Monitoring Quiz",
          "Workbooks",
          "KQL Basics",
          "KQL",
          "Spring App Monitoring",
          "KQL Quiz"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "You must setup a free or a paid account on Azure"
      ],
      "description": "Welcome to this Azure Monitoring Course\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in Azure Monitor.\nIn this course you will Learn by example, as we demonstrate all the concepts discussed - so that you can see them working, and you can try them out for yourself as well.\nMy step-by-step training will initiate you into the world of Azure monitoring.\nAzure monitor is designed to collect, analyze and respond to incoming data from a variety of sources - from  the cloud as well as on-premises servers. Whether it is your front line application or your virtual machine based infrastructure, Azure monitor can manage it all. Combine Azure Monitor with Azure Log analytics to get a holistic picture of what is going on in your stack.\nWhy Learn Azure Monitor?\nAnother Question: How can you monitor your Azure/cloud infrastructure?\nWhether you are new to Azure or an advanced user, Azure Monitor will give you the end to end observability you require to monitor your cloud infrastructure. Azure Monitor utilizes a single data platform for all metrics, events, logs, and traces and delivers the ability to visualize, analyze, and troubleshoot your entire Azure environment. In this course you will practice Azure monitoring using VM's, NodeJS applications, and SQL DB's. Azure monitor can monitor all other parts of your cloud infrastructure as well. Before moving onto the practical application we will learn the architecture around Azure Monitoring as well as how the pricing works.\nAzure Monitoring will help you in all stages of observability. Be it collecting of logs and metrics to alerting and visualizing using dashboards.  With Azure  Monitoring, you can find errors and issues in your applications by using a variety of tools like workbooks, KQL [Kusto Query Language] and Azure Insights. Not sure about why your queries are running slow? Use Azure Monitoring! Using a combination of integrations Azure Monitor will notify you of any upcoming threat or a performance breakdown. You can even setup dynamic baselines. At thee end of the day the goal is to make customer and developer experience smoother. With the growth of cloud computing, monitoring performance has become so important.\nThis is an in-demand skill and can potentially land you a 6-7 figure job. The goal being to be an expert who can monitor and give advice on any company's cloud/on-premises environment. Take this step to grow your career.\nBy the end of the course you will have set up and learnt to manage Azure like a pro.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Software Developers who want to understand how to get started with Azure Monitoring",
        "DevOps Engineers",
        "System Reliability Engineers",
        "Those looking to monitor their cloud infrastructure with Azure Monitor",
        "Anyone interested in monitoring their Azure VM's"
      ]
    },
    {
      "title": "Angular7 and TypeScript - Complete course",
      "url": "https://www.udemy.com/course/angular7-and-typescript-complete-course/",
      "bio": "Learn how to develop modern, complex, responsive and scalable web applications with Angular 7",
      "objectives": [
        "How to develop modern, complex, responsive and scalable web applications with Angular7",
        "Fully understand the architecture behind an Angular7 application and how to use it.",
        "Create single-page applications with one of the most modern JavaScript frameworks out there."
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with JavaScript and some of the tools from the latest standards such as classes and modules.",
        "OOPs basics like Inheritance, Polymorphism, Constructor, this object, etc.",
        "Moderate knowledge of HTML, CSS, and JavaScript."
      ],
      "description": "About Angular:\n- Angular is a framework for building client applications in HTML and TypeScript.\n- It’s built using TypeScript (Typed JavaScript) and hence TypeScript is ideal choice for programming Angular\napplications.\n- It lets you use HTML as your template language and lets you extend HTML's syntax to express your\napplication's components clearly and succinctly.\n- Angular is best option if you want to create interactive Single Page Application (SPA).\n- Angular also empowers developers to build applications that live on not only browser but also\nmobile or desktop.\n- Angular's data binding and dependency injection eliminate much of the code you would otherwise have\nto write. And it handles all of the DOM and AJAX code you once wrote by hand and puts it in a welldefined structure.\n\n\nIn the course \"Angular7 and TypeScript - Complete course\", you will learn-\nWhat is Angular?\nAngular Versions: AngularJS (vs) Angular\nSetup for local development environment\n- Installing NodeJS, NPM\n- Installing Visual Studio Code\n- Angular CLI\nDevelop First Angular program using Angular CLI and Visual Studio Code.",
      "target_audience": [
        "Those who want to enhance their Programming skill-set in developing Enterprise Applications."
      ]
    },
    {
      "title": "Jenkins on AWS (Jul 2023)",
      "url": "https://www.udemy.com/course/jenkins-on-aws/",
      "bio": "Blue Ocean, Pipeline, Parallel Jenkins Pipeline, GitHub, Docker Container, DevOps, Master-Slave, Plugins, Agents, CI-CD",
      "objectives": [
        "Setting up AWS EC2 Instance for Jenkins Server",
        "Installing and Configuring Jenkins on AWS",
        "Scheduling Jobs on Jenkins Instance",
        "Integrating GitHub Repository with Jenkins",
        "Assigning Role Based Authorization Plugin to New Users",
        "Backing-Up Configuration Files of Jenkins in AWS Instance",
        "Triggering Jenkins Jobs Automatically",
        "Creating Pipeline Using Groovy Script in Jenkins",
        "Creating Pipeline using Blue Ocean",
        "Setting up Docker Plugins on Jenkins",
        "Deploying Docker Container with Jenkins Pipelines",
        "Building and Deploying an Application to Webserver using Jenkins Pipeline"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Jenkins on AWS": [
          "Lesson 1: Introduction to Jenkins on AWS",
          "Practice 1-1: Setting up AWS EC2 Instance for Jenkins Server",
          "Practice 1-2: Installing and Configuring Jenkins on AWS",
          "Quiz on Jenkins on AWS"
        ],
        "Jobs on Jenkins": [
          "Lesson 2: Build and Run Jobs on Jenkins",
          "Practice 2-1: Build and Run a Job on Jenkins Instance",
          "Practice 2-2: Scheduling Jobs on Jenkins Instance",
          "Practice 2-3: Integrate GitHub Repository with Jenkins",
          "Quiz on Jobs on Jenkins"
        ],
        "Roles to User & Master-Slave Configuration": [
          "Lesson 3: Assign Roles to User & Build Master-Slave Configuration",
          "Practice 3-1: Assign Role Based Authorization Plugin to New Users",
          "Practice 3-2: Distributed Build Master-Slave Configuration",
          "Practice 3-3: Backing-Up Configuration Files of Jenkins in AWS Instance",
          "Quiz on Roles to User & Master-Slave Configuration"
        ],
        "Jenkins Pipelines": [
          "Lesson 4: Integrate Jenkins Pipelines with Jobs",
          "Practice 4-1: Triggering Jenkins Jobs Automatically",
          "Practice 4-2: Create Pipeline Using Groovy Script in Jenkins",
          "Practice 4-3: Integrate GitHub as Source Code on Jenkins",
          "Practice 4-4: Delegate a Pipeline Job using Agent in Jenkins Instance",
          "Quiz on Jenkins Pipelines"
        ],
        "Parallel Jenkins Jobs and Jenkins Slave": [
          "Lesson 5: Understanding of Parallel Jenkins Jobs and Jenkins Slave on AWS",
          "Practice 5-1: Build & Deploy an Application to Webserver using Jenkins Pipeline",
          "Practice 5-2: Create a Parallel Agent Pipeline Job on Jenkins",
          "Practice 5-3: Create a DevOps Pipeline Job on Jenkins",
          "Quiz on Parallel Jenkins Jobs and Jenkins Slave"
        ],
        "Blue Ocean Jenkins": [
          "Lesson 6: Blue Ocean Jenkins",
          "Practice 6-1: Create Pipeline using Blue Ocean",
          "Quiz on Blue Ocean Jenkins"
        ],
        "Jenkins Integration with Docker": [
          "Lesson 7: Jenkins Integration with Docker",
          "Practice 7-1: Setup Docker Plugins on Jenkins",
          "Practice 7-2: Create a Pipeline Job for Docker on Jenkins",
          "Practice 7-3: Deploying Docker Container with Jenkins Pipelines",
          "Quiz on Jenkins Integration with Docker"
        ]
      },
      "requirements": [
        "Basic Cloud Infrastructure Concepts",
        "Working Knowledge on Linux Platform",
        "Basic understanding of Linux Commands",
        "Understanding of CI-CD"
      ],
      "description": "Jenkins is a free and open source automation server which enables developers around the world to reliably build, test, and deploy their software. It helps automate the parts of software development related to building, testing, and deploying, facilitating continuous integration and continuous delivery.\nIn this course, you will learn to setup AWS EC2 instance for Jenkins Server, Install and configure Jenkins on AWS, how to access the Jenkins Dashboard, Build and Run a Job on Jenkins AWS EC2 Instance, DevOps Advantages on Jenkins, to Schedule Jobs on Jenkins AWS EC2 Instance, to Integrate GitHub Repository with Jenkins.\nYou will get to know about Upstream and Downstream Jobs, Triggering Upstream and Downstream Jobs in Jenkins,  Jenkins Plugins, Build Master-Slave Configuration on Jenkins Instance, Explore Pipelines in Jenkins, Upstream and Downstream Projects in Jenkins.\nFurther, you will understand the Groovy Scripting in Jenkins, illustrate on how to Integrate GitHub as Source Code on Jenkins, to Create Parallel Agent Pipeline Job on Jenkins and to Create a DevOps Pipeline Job on Jenkins. You will get an overview of Blue Ocean Pipeline, to Install Blue Ocean Plugin on Jenkins and how to Implement Pipelines in Blue Ocean.\nBesides, you will learn to Setup Docker Plugins on Jenkins, how to create the Pipeline Job for Docker on Jenkins and understand the Docker Container with Jenkins Pipelines.",
      "target_audience": [
        "Cloud Administrators",
        "DevOps Developers",
        "Cloud Application Developers",
        "Cloud Architects"
      ]
    },
    {
      "title": "TornadoFX - Build JavaFX Applications With Kotlin",
      "url": "https://www.udemy.com/course/tornadofx-javafx-kotlin/",
      "bio": "Build JavaFX Applications with TornadoFX - A Lightweight JavaFX Framework for Kotlin",
      "objectives": [
        "Leverage JavaFX libraries by Using TornadoFX - a Kotlin Library for Building JavaFX Applications",
        "TornadoFX - JavaFX Framework for Kotlin",
        "Create Beautiful and Maintainable JavaFX Applications with TornadoFX",
        "Build Rich \"In-House\" Business Desktop Applications with TornadoFX"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How's The Course Structured",
          "Who's This Course For"
        ],
        "Why TornadoFX": [
          "TornadoFX - Motivation",
          "TornadoFX Website"
        ],
        "Download Course Code": [
          "Download Course Code"
        ],
        "Development Machine Setup - MAC and Windows": [
          "Development Setup - Download JDK and IntelliJ IDEA",
          "Install TorandoFX Plugin and Run Hello World",
          "Resources"
        ],
        "JavaFX and TornadoFX - The Building Blocks": [
          "What We'll Cover in This Section",
          "Dissecting TornadoFX Project Structure - Override Stage Size",
          "Dissect Views, Root and Block Initializers and Buttons",
          "JavaFX Overview - Controls, Layouts - Presentation",
          "Understanding Binding - Click Button and Change Label Text",
          "Random Name CHALLENGE Solution",
          "Improving Random Name App With Controller"
        ],
        "More on TornadoFX Views": [
          "What We'll Cover in This Section",
          "Embedding Views - BorderPane Introduction",
          "Injecting Views into Other Views",
          "UIComponents Override Methods - OnDock, OnUndock",
          "Resources"
        ],
        "TornadoFX - Data Controls: Collections, Listviews and TableViews": [
          "Data Controls - Introduction",
          "ListViews",
          "ListViews Formatting Cells",
          "Student Project - Listviews and Restructuring Views",
          "Student Project - Listviews and Restructuring Views - All Functioning",
          "Tableview Introduction - Part 1",
          "Tableview - Creating Model Class with JavaFX Properties",
          "Student Project - Adding New Students Dynamically",
          "Resources"
        ],
        "[Hands-On] Build a Bill Splitter Calculator": [
          "What You'll Build -Bill Splitter Calculator",
          "Putting the UI Together - Part 1",
          "Putting the UI Together - Part 2",
          "Adding the Calculate Function",
          "Binding Slider Values and Showing on Screen",
          "Finished App"
        ],
        "Forms and ItemViewModel": [
          "Introduction - ItemViewModel Class",
          "Understanding ItemViewModel",
          "Implementing Student Model and Updating Project",
          "Making Fields Required and Binding Buttons",
          "Model Reset - Rollback",
          "Adding Validators",
          "Model Commit - Finalizing Form Validation",
          "Resources"
        ],
        "TornadoFX - Type-Safe CSS": [
          "What We'll Cover in This Section",
          "Inline Type-Safe CSS",
          "Inline Type-Safe CSS, Cont.",
          "Applying Styles Class with Stylesheet",
          "TornadoFX Hot Reload Setup",
          "CHALLENGE - Revamp Bill Splitter Calculator",
          "SOLUTION: Bill Splitter",
          "Resources"
        ]
      },
      "requirements": [
        "Fundamentals of Object Oriented Programming",
        "Kotlin Knowledge is Preferred, but Not Entirely Required",
        "Basic JavaFX Architecture is Preferred, but Not Required"
      ],
      "description": "JavaFX has been around for quite a long time.  It's powered by Java and has been used to build desktop applications, as well as Rich Internet Applications (RIAs).\nAlthough the Java programming language has been known for its portability, it has its pitfalls - one of which being its verbosity - developers must write a lot of lines of code to make a simple GUI.\nTornadoFX, a lightweight JavaFX framework for Kotlin, simplifies JavaFX development by abstracting out all of the verbose, hard-to-maintain Java code.\nTornadoFX, powered by the statically typed JVM language (Kotlin), makes it a breeze to build rich, feature-packed user interfaces.\nAlso, TornadoFX minimizes, greatly, the amount of code needed to build JavaFX applications making the codebase easy to maintain and extend.\nNote: This course expects you have some preliminary knowledge about OOP in Any Language, and preferably Kotlin, but not required.\nTornadoFX not only includes type-safe builders to rapidly layout controls and user interfaces but also features:\nDependency Injection\nDelegated Properties\nControl Extension functions\nHere's what we'll cover in this course:\nLearn the differences between JavaFX using Java and JavaFX using TornadoFX\nSetup our development environment to start using TornadoFX\nUnderstand JavaFX Components and how they are easily created with TornadoFX\nBasic Controls in TornadoFX\nData Controls\nType-Safe CSS\nUsing type-safe builders to create controls and layouts in a breeze\nEditing and Model Validation in TornadoFX\nDependency Injection\nJSON and REST\nConnecting a TornadoFX App to a SQLite Database\nCreating Shapes and Animations\nBuilding Java Business Applications with Workspace\nAdditionally, this course comes with the following:\nLifetime Access to All Future Updates\nA responsive Instructor to answer questions\nResources to further your knowledge\nUdemy Certificate of Completion Ready to Download upon finishing the course\nA 30 Day \"No Questions Asked\" Money Back Guarantee!\nLearning TornadoFX is going to allow you to start giving more value to your company, institution or business, as you'll be creating \"in-house\" software in no time.\nDon't overthink it.  Just enroll and start learning TornadoFX - the next level of crafting maintainable, clutter-free JavaFX UI heavy desktop Applications!",
      "target_audience": [
        "Developers Who Want to Learn How to Build JavaFX Applications with TornadoFX (Kotlin)",
        "Kotlin Developers Who Want to Build JavaFX Desktop Applications in TornadoFX",
        "Java Developers Who Want a Less-Verbose, Maintainable Way to Build JavaFX Applications in TornadoFX Using Kotlin",
        "Curious Programming Enthusiasts Who want to Create Beautiful JavaFX Applications in TornadoFX"
      ]
    },
    {
      "title": "Terraform on Microsoft Azure Cloud: Beginners Guide to IaC",
      "url": "https://www.udemy.com/course/terraform-on-microsoft-azure-cloud/",
      "bio": "Learn Infrastructure as Code with Terraform: Build production-ready Azure Infrastructure using Terraform.",
      "objectives": [
        "Understanding Infrastructure as code",
        "Exploring the use and benefits of Terraform",
        "Learning the HCL (Hashicorp configuration language) and it's syntax",
        "Learning to work with AzureRM provider in Terraform",
        "Understanding the Terraform execution flow, write, init, plan, apply and destroy",
        "Deploying infrastructures using Terraform",
        "Exploring Terraform adoption at Individual level, Team level, multi-team and Enterprise level",
        "Getting familiar with Terraform state file, it's purpose and managing it in remote location",
        "Managing and creating reusable terraform modules",
        "Understanding Terraform functions, meta arguments, conditional expressions and lifecycle rules",
        "Troubleshooting terraform scripts"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to course curriculum and setting up expectations",
          "Course Resources",
          "Setting up the content - A journey from on-premise to automation",
          "Introduction to IaC, Terraform tool and its features",
          "Hands-on Lab - Install and setup Terraform with Microsoft Azure",
          "Terraform Workflow",
          "HCL (Hashicorp Configuration Language) Syntax",
          "Deploy first resource on MS Azure using Terraform",
          "Update and Destroy your first resource using Terraform",
          "Variables in Terraform",
          "Data Types",
          "Hands-on Lab - Create your first infrastructure (resource group) on Azure cloud",
          "Basics of Infrastructure as Code and Terraform"
        ],
        "Project 1- Provision an Azure Virtual Machine using Terraform": [
          "Project - Deploy a Virtual Machine with all its component on Azure (Part 1)",
          "Project - Deploy a VM with all its networking components (Part - 2)",
          "Project - Deploy a VM with all its networking components (Part - 3)",
          "Project - Provision an Virtual Machine with all its networking components"
        ],
        "Terraform State File": [
          "State file in Terraform",
          "Terraform adoption stages",
          "Terraform adoption at Individual and team level",
          "Remote State Management",
          "Terraform State Management - A detailed guide",
          "Terraform State File"
        ],
        "Role Play Scenarios": [
          "Kickstarting Azure Infrastructure with Terraform (Beginner Level – Junior Cloud Engineer)"
        ],
        "Meta Arguments in Terraform": [
          "Introduction to Meta Arguments - Depends_on and Count Meta Argument",
          "For_each meta argument",
          "Creating reusable resource blocks using Terraform (Part - 1)",
          "Creating reusable resource blocks using Terraform (Part - 2)",
          "Creating reusable resource blocks using Terraform (Part - 3)",
          "Creating reusable resource blocks using Terraform (Part - 4)",
          "Detailed Guide on Terraform Meta Arguments and their usage with Azure Cloud",
          "Quiz - Meta Arguments"
        ],
        "Troubleshooting Terraform scripts": [
          "Troubleshooting terraform scripts"
        ],
        "Terraform Modules": [
          "Introduction to modules in Terraform",
          "Hands-on Lab - Build a custom terraform module to Provision Azure Networks",
          "Published modules as git sub-modules",
          "Terraform Module Quiz"
        ],
        "Terraform Workspace": [
          "Working with Terraform workspaces",
          "Terraform Workspace Quiz"
        ],
        "Terraform Authentication with Azure Cloud": [
          "Detailed Guide on Terraform Authentication with Azure Cloud"
        ],
        "Terraform Functions": [
          "Detailed Guide on Terraform Function with Azure Cloud"
        ]
      },
      "requirements": [
        "Basic understanding of Microsoft Azure cloud platform is helpful",
        "An Azure account with an active subscription"
      ],
      "description": "Learning Objectives\nAfter completing this course, learners will be able to:\n\n\nExplain Infrastructure as Code (IaC) principles and Terraform’s role in cloud provisioning\nWrite and understand HCL (HashiCorp Configuration Language) syntax\nDeploy infrastructure on Azure using the AzureRM provider in Terraform\nExecute Terraform workflows: init, plan, apply, and destroy\nManage remote state files and understand their purpose\nBuild, manage, and reuse Terraform modules for scalable deployments\nApply Terraform at individual, team, and enterprise levels\nUse functions, meta-arguments, conditional expressions, and lifecycle rules\nTroubleshoot Terraform scripts and debug common issues\nComplete real-world case studies from project setup to deployment\nManual errors are giving way to 70% of the misconfigurations in cloud. DevOps and tech teams are struggling with security issues, downtime and the pain of debugging inconsistent environments that could’ve been automated in minutes.\nMost developers start cloud automation the wrong way, copy-pasting Terraform code from the internet without understanding state management, module structuring, or real-world workflows.\nI’ve designed this course to change that. With my decades of experience as a DevOps & Cloud Consultant for leading teams, I’ve put in the best practices for using Terraform, the IaC tool used by teams at Google, Microsoft, and top startups, to confidently deploy and manage infrastructure on Microsoft Azure.\nThis course is packed with practical insights, hands-on labs, and real-world examples, so you can go from “just running scripts” to building modular, scalable, production-ready cloud infrastructure that your team can rely on.\nBy the end of this course, you will walk away with:\nA deployable, production-ready Azure project built entirely with Terraform\nA clear understanding of IaC principles, state strategy, and module design\nReusable modules for your own projects\nReadiness to apply Terraform confidently at your workplace\nTechnology is ever-evolving, and so is this course. I keep updating the courseware with the latest updates, so you’ll always be learning the most up-to-date methods aligned with current best practices.\nEnrol now and start building scalable Azure infrastructure with Terraform.",
      "target_audience": [
        "DevOps engineers and architects who wish to learn Terraform tool with MS Azure",
        "System admins working with MS Azure cloud platform",
        "SREs/DevOps engineers at all level looking to pass the Terraform certification exam"
      ]
    },
    {
      "title": "The Complete Data Structures & Algorithms Course in C & Java",
      "url": "https://www.udemy.com/course/complete-dsa-c-java/",
      "bio": "Master the Coding Interview: Data Structures + Algorithms with fully animated videos and over 108 real life problems",
      "objectives": [
        "Master coding interviews given by some of the top tech companies",
        "Learn, implement, and use different Data Structures",
        "Become a better developer by mastering tricky Data Structures and Algorithms",
        "Learn, implement and use different Algorithms",
        "Become more confident and prepared for your next coding interview",
        "Professionally handle offers and negotiate raises"
      ],
      "course_content": {
        "Introduction to DSA": [
          "Data Types",
          "Algorithms",
          "Data Structure",
          "Types of Data Structures",
          "Analysis of Algorithms",
          "Rate of Growth",
          "Types of Algorithms Analysis"
        ],
        "Big O Notation": [
          "What is Big O ?",
          "Big O Visualization",
          "Exercise 1- Find the Upper Bound",
          "Omega Notation",
          "Theta Notation",
          "Time Complexity [Part 1]",
          "Time Complexity [Part 2]",
          "Complexity Guidelines",
          "Space Complexity",
          "Exercise 2 - Space Complexity",
          "Exercise 3 - Time Complexity",
          "Exercise 4 - Time Complexity",
          "Exercise 5 - Time Complexity",
          "Exercise 6 - Time Complexity",
          "Exercise 7 - Time Complexity",
          "Exercise 8 - Time Complexity",
          "Exercise 9 - Time Complexity",
          "Exercise 10 - Time Complexity",
          "Exercise 11 - Time Complexity",
          "Exercise 12 - Time Complexity",
          "Exercise 13 - Time Complexity",
          "Exercise 14 - Time Complexity",
          "Exercise 15 - Time Complexity",
          "Exercise 16 - Time Complexity",
          "Exercise 17 - Time Complexity",
          "Exercise 18 - Time Complexity",
          "Exercise 19 - Time Complexity",
          "Exercise 20 - Time Complexity",
          "Exercise 21 - Time Complexity"
        ],
        "Recursion": [
          "Problem Solving FlowChart",
          "Recursion",
          "Recursion vs Iterative",
          "Exercise 22- Factorial Recursion",
          "Exercise 23- Fibonacci Series in Recursion",
          "Exercise 24- Recursive Methods",
          "Exercise 25- Explain the Functionality of Recursive Methods",
          "Exercise 26- From Decimal to Binary [Recursion]",
          "Exercise 27- Guess the Sequence",
          "Exercise 28- Recursive Power Functions"
        ],
        "Arrays": [
          "Creating Arrays",
          "Accessing Arrays",
          "Inserting Element in Array at Specific Position",
          "Searching for Element in Array",
          "Don't Miss to Download Source Codes",
          "Remove Specific Element from Array",
          "Rotate Array by k Positions",
          "Remove Duplicates from Array"
        ],
        "Matrix": [
          "Multidimentional Arrays - Matrix",
          "Printing 2D Array Elements",
          "3D Arrays",
          "Adding Elements to Matrix",
          "Updating Elements in Matrix",
          "Searching a Matrix",
          "Deleting Element from Matrix",
          "Time & Space Complexity of Matrix",
          "Time & Space Complexity of Array",
          "Exercise 29- Average of Array",
          "Exercise 30- Searching an array for an element",
          "Exercise 31- Delete Elements from Array",
          "Exercise 32- Find Max & Min in Array",
          "Exercise 33- Reverse an Array",
          "Exercise 34- Find Duplicates in Array",
          "Exercise 35- Find Common between 2 Arrays",
          "Exercise 36- Adding Two Matrices",
          "Exercise 37- Rotating an Array",
          "Exercise 38- Shuffling an Array"
        ],
        "Linked Lists": [
          "Creating Linked Lists",
          "Printing Linked List Nodes",
          "Printing Linked List Reversely",
          "Inserting Nodes at Beginning",
          "Inserting Nodes at End",
          "Inserting Nodes After a Node",
          "Deleting Nodes from Linked List",
          "Searching Linked Lists",
          "Get nth Node of Linked List",
          "Get Length of Linked List",
          "Get Middle Node of Linked List",
          "Detect a Loop in Linked List",
          "Exercise 39- Reverse a Linked List",
          "Exercise 40- Implementing Linked List in Java",
          "Exercise 41- Printing Linked List",
          "Exercise 42- Pushing Node at the Beginning",
          "Exercise 43- Adding a New Node After a Node",
          "Exercise 44- Appending a new Node",
          "Exercise 45- Deleting a Node with Specific Key",
          "Exercise 46- Delete a Node at specific position",
          "Exercise 47- Get Nodes Count Recursively and Iteratively",
          "Exercise 48- Searching for Specific Value Iteratively",
          "Exercise 49- Searching for Specific Value Recursively",
          "Exercise 50- Get data from any Node",
          "Exercise 51- Get Data from any Node Recursively",
          "Exercise 52- Remove Duplicates from Linked List",
          "Exercise 53- Reverse a List Iteratively",
          "Exercise 54- Reverse a List Recursively",
          "Rotate a Linked List Clockwise"
        ],
        "Doubly Linked List": [
          "Creating Doubly Linked List",
          "Printing Linked List",
          "Advantages & Disadvantages of DLL",
          "Inserting Node at the Beginning of DLL",
          "Inserting Node at the End of DLL",
          "Searching DLL for Key",
          "Deleting Node from DLL",
          "Exercise 56- Creating Doubly Linked list in Java",
          "Exercise 57- Inserting Node at the Beginning in Java",
          "Exercise 58- Printing DLL in Forward & Reverse Mode",
          "Exercise 59- Appending Nodes at the End in Java",
          "Exercise 60- Insert Node after a Given Node in Java",
          "Exercise 61- Delete a Given Node from DLL in java",
          "Exercise 62- Delete a Node at Specific Position",
          "Exercise 63- Reverse a DLL in Java",
          "Exercise 64- Get Size of DLL",
          "Exercise 65- Rotate DLL by N Positions"
        ],
        "Circular Linked List": [
          "Circular Linked Lists",
          "Printing CLL",
          "Inserting a Node at the Beginning of CLL",
          "Inserting a Node at the Beginning [More Detailed]",
          "Inserting a Node at the End of CLL",
          "Searching a Node in CLL",
          "Deleting a Node from CLL",
          "Exercise 66- Creating Circular Linked List",
          "Exercise 67- Pushing Nodes at the Beginning of CLL in Java",
          "Exercise 68- Appending Nodes in CLL",
          "Exercise 69- Adding Nodes After a Node in CLL",
          "Exercise 70- Deleting a Specific Node from CLL",
          "Exercise 71- Count the Nodes in CLL",
          "Exercise 72- Find Min & Max in CLL",
          "Exercise 73- Find Sum of CLL Nodes"
        ],
        "Stack": [
          "What is Stack & How it Works?",
          "Adding Data to Stack",
          "Removing Data from Stack",
          "Stack Operations",
          "Creating Stack using Array & Linked List",
          "Stack Implementation in C",
          "Exercise 74- Stack Implementation in Java",
          "Exercise 75- Reverse a Stack using Recursion",
          "Exercise 76- Sort a Stack using Recursion",
          "Exercise 77- Sort a Stack using Temporary Stack"
        ],
        "Queue": [
          "The Queue",
          "Enqueue",
          "Dequeue",
          "Queue Implementation in C",
          "Exercise 78- Queue Implementation using Array",
          "Exercise 79- Queue Implementation using Linked List",
          "Circular Queue",
          "Circular Queue in C",
          "Exercise 80- Creating Circular Queue in Java",
          "Priority Queue",
          "Dequeue Doubly Ended Queue",
          "Dequeue Insertion at the Front & Rear",
          "Dequeue Implementation in C",
          "Dequeue Implementation in Java"
        ]
      },
      "requirements": [
        "No experience with data structures or algorithms needed",
        "Your notebook and your brain"
      ],
      "description": "Want to land a job at a great tech company like Google, Microsoft, Facebook, Netflix, Amazon, or other companies but you are intimidated by the interview process and the coding questions? Do you find yourself feeling like you get \"stuck\" every time you get asked a coding question? This course is your answer. Using the strategies, lessons, and exercises in this course, you will learn how to land offers from all sorts of companies.\nMany developers who are \"self taught\", feel that one of the main disadvantages they face compared to college educated graduates in computer science is the fact that they don't have knowledge about algorithms, data structures and the notorious Big-O Notation. Get on the same level as someone with computer science degree by learning the fundamental building blocks of computer science which will give you a big boost during interviews. You will also get access to our private online chat community with thousands of developers online to help you get through the course.\n\nHere is what you will learn in this course:\n\n\n1. Big O notation\n2. Data structures:\n* Arrays\n* Hash Tables\n* Singly Linked Lists\n* Doubly Linked Lists\n* Queues\n* Stacks\n* Trees (BST, AVL Trees, Binary Heaps)\n* Tries\n* Graphs\n\n3. Algorithms:\n\n* Recursion\n* Sorting\n* Searching\n* Tree Traversal\n* Breadth First Search\n* Depth First Search\n* Dynamic Programming\n\n\n\nUnlike most instructors, I am not a marketer or a salesperson. I am a senior developer and programmer who has worked and managed teams of engineers and have been in these interviews both as an interviewee as well as the interviewer.\n\nMy job as an instructor will be successful if I am able to help you become better at interviewing and land more jobs. This one skill can really change the course of your career and I hope you sign up today to see what it can do for your career!\n\n\nTaught by:\n\nAbbass Masri is the instructor of the highest rated Android App Development course on Udemy as well as one of the fastest growing. His graduates have moved on to work for some of the biggest tech companies around the world like Apple, Google, JP Morgan, IBM, etc...\nAlso, he is running a successful app on playstore that teaches around 1,000,000 users coding in many languages like: Android, Java, C++, Python, Arduino, and more.. Please check it here on playstore: \"Master Coding App\"\n\n\nAbbass promises you that there are no other courses out there as comprehensive and as well explained. He believes that in order to learn anything of value, you need to start with the foundation and develop the roots of the tree. Only from there will you be able to learn concepts and specific skills(leaves) that connect to the foundation. Learning becomes exponential when structured in this way.",
      "target_audience": [
        "Self-taught programmers",
        "Computer science student",
        "anyone preparing for coding interviews"
      ]
    },
    {
      "title": "DataDog for Monitoring Docker and Kubernetes [Beginner]",
      "url": "https://www.udemy.com/course/datadog-for-monitoring-and-alerting-beginner-level/",
      "bio": "Master DataDog Monitoring fundamentals while practicing on Docker and Kubernetes clusters",
      "objectives": [
        "Why do we need DataDog",
        "Which metric types of DataDog are most useful",
        "Setup DataDog agents to monitor your docker containers and Kubernetes Agents",
        "Learn how to write queries and setup Monitors in DataDog",
        "Learn how to use DataDog dashboards",
        "Send Alerts for Docker and Kubernetes Events via DataDog and Slack"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why we need Monitoring",
          "DataDog Architecture",
          "What is Kubernetes",
          "DataDog UI",
          "Case Study",
          "DataDog Monitoring Concepts - Quiz 1"
        ],
        "Installation and Setup": [
          "Setup Datadog on your local Machine",
          "Setup docker",
          "Integrate Docker with DataDog",
          "Setup Minikube Locally",
          "Integrate Kubernetes with DataDog",
          "Assignment 1 - Setup"
        ],
        "Monitoring Kubernetes": [
          "The Different Metric Types for Kubernetes",
          "Query Language in DataDog",
          "Setting Permissions for Kubernetes",
          "Kube-state Metrics",
          "Examine the docker Dashboard",
          "Tagging Intro",
          "Using Tags to filter clusters and machines",
          "DataDog Quiz- Practical Implementation",
          "Configuring Logs for docker",
          "Configuring Logs for Kubernetes",
          "Alerting"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "Some knowledge of Docker can get you ahead, but not required",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required"
      ],
      "description": "Would you drive a car without a speedometer and a seatbelt? No. Similarly you cannot go about creating and managing software applications and infrastructure without a monitoring tool. DataDog is the top choice for monitoring tools out there, and it gives you complete visibility into your tech stack. DataDog has plenty of features. Most importantly it integrates well with Kubernetes giving you information about individual pods, deployments along with their logs and events.\nThis course will guide you through why we need monitoring and how to setup DataDog on docker and kubernetes for this purpose. Much of this course is from the instructor's experience as a DevOps engineer. Having used DataDog to monitor Kubernetes clusters for many years, it will include many tips and tricks of the trade :) .\nIn this course we will cover:\nWhy do we care about monitoring\nThe DataDog Architecture\nThe DataDog UI\nDeploy DataDog agents on your machines, docker containers and Kubernetes clusters\nHow to setup DataDog in real life situations\nSetup Docker and Minikube on your machine\nThe Integration between DataDog and Kubernetes\nThe Difference types of metrics reported by DataDog\nThree pillars of observability\nUse DataDog for tagging metrics\nAlerting via Slack and Email\nConfiguring Logs and Events from Kubernetes and Docker in DataDog\n\n\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Developers/Tech Leads looking to monitor their applications",
        "DevOps Engineers trying to setup smart alerting for troubleshooting problems",
        "DevOps engineers looking to monitor their kubernetes and docker infrastrcuture real time",
        "Anyone Interested in DataDog and Kubernetes"
      ]
    },
    {
      "title": "Deploying Daprized Microservices Apps to Kubernetes",
      "url": "https://www.udemy.com/course/deploying-daprized-microservices-apps-to-kubernetes/",
      "bio": "Creating and Deploying Microservices to Azure K8s, Creating Resources in the Azure Cloud (using .net6), CI/CD pipeline",
      "objectives": [
        "Get to know Dapr Side-Car technology and how it supports building microservices",
        "How to provision Resources in the Azure Cloud",
        "How to create Azure Kubernetes deployment and service configuration files",
        "How to create an Ingress Controller file",
        "How to deploy the dapr or non-dapr microservices applications to Azure"
      ],
      "course_content": {
        "Introduction": [
          "What is this course all about?",
          "Prerequisites",
          "Past Current Future Dapr Courses",
          "Application Structure Description",
          "Assignment-01"
        ],
        "Building and testing the Microservices with local dapr components": [
          "Building the OrdersApi Microservice",
          "Building the InventoryApi Microservice",
          "Design of Local Dapr Components",
          "Testing Microservices With Local Components",
          "Assignment-02",
          "Coding Assignment-01"
        ],
        "Provisioning the dapr building block resources in Azure Portal": [
          "Setting up of Cosmos Database for State Management",
          "Creating Cosmos DB Components files",
          "Azure Service Bus Provisioning",
          "Testing the Microservices Locally with CosmosDb and ASB Components",
          "Azure Event Hubs Provisioning and Component creation",
          "Testing with Azure Event Hubs"
        ],
        "Installing Azure CLI, Provisioning AKS and Installing Dapr on AKS": [
          "Azure CLI Installation",
          "Azure Kubernetes Service Provisioning",
          "Azure Kubernetes Service CLI Setup",
          "Dapr Setup On Azure Kubernetes Service"
        ],
        "Image Building and Pushing to ACR, Deploying to AKS.": [
          "Building Docker Images and Pushing them to Azure Container Registry",
          "Kubernetes Basics",
          "Deployment and Service Files Explained",
          "Actual Deployment to AKS",
          "Ingress Controller"
        ],
        "Part 2- Deployment to Azure Container Apps": [
          "Part 2 Start",
          "Azure Container Apps Introduction",
          "Simple Azure Container Apps Deployment",
          "Simple Blazor App Deployment to Azure Container Apps",
          "Setting up Continuous Deployment Pipeline for the Blazor App- Part 1",
          "Setting up Continuous Deployment Pipeline Continued",
          "GitHub Actions Explained over the CICD File"
        ]
      },
      "requirements": [
        "intermediate C# programming language",
        "My Previous course titled Microservices Apps Development Revolution with Dapr",
        "basic knowledge of docker"
      ],
      "description": "This course   teaches you how to deploy  microservices  applications to the Azure Kubernetes Service also known as AKS.\nYou will see deployment examples of  both the dapr side car attached and not attached cases.\nThe course may be  thought of  as a sequel to my previous course called Microservices Applications Development revolution with Dapr.\nMicrosoft's new  Dapr Side Car Technology to build  microservices applications  has taken the  microservices development  industry by storm. Along with the current trends in that field, I had prepared the first Dapr video  course that was published 6 months ago.\nNow I am taking the work in that field  one step further and hence the current video course where you will learn to deploy your daprized(also non-daprized apps)  to Azure Kubernetes Cluster.\nYou will learn in this course how to provision resources in the Azure portal, such as Azure Kubernetes Cluster, Cosmos Db, Azure Container Registry, Azure Event Hubs.\nYou will learn how to install Azure CLI on your development machine\nYou will learn how to add Dapr to AKS cluster\nYou will learn how to create Azure Container Registry\nYou will learn how to build docker images and tag them before pushing to the Azure Container registry.\nYou will learn various pieces of the Kubernetes Deployment puzzle such as Kubernetes Deployment and Service files.\nYou will learn how to prepare the Dapr Component Configuration files\nYou will learn how to deploy the configuration files to Azure Kubernetes Cluster via the command line or power shell script files\nYou will learn what an ingress controller is and how we can use an ingress controller package to open our deployed microservices to the outside traffic.\nYour learning process will be supported by several hands-on homework  and suggestions along the way.\n\n\nUpdated:\nAdded a Second Part to the Course:\nThe second part contains videos that were initially intended for a separate  course but I decided to add them to this course.\nThis second part shows another way of deploying Dapr (or non-Dapr) microservices apps to Kubernetes Environment by way of a technology called AZURE CONTAINER APPS, which Microsoft started offering recently.\nIt enables you to deploy microservices apps to Kubernetes Environment without you  noticing  that your app is running on Kubernetes. That is to say, the deployment to K8s environment becomes a breeze with this technology.\nThis technology is gaining a high momentum and I wanted  you to have a taste of it with another  3 hours or so of content\nYou will also see how a CI/CD pipeline is setup and run via GitHub Actions\n\n\nEnjoy the course\nBest regards,\nFrank Ozz",
      "target_audience": [
        "Software developers who are wanting to learn modern microservices application development and deployment of them to the Kubernetes cluster in the cloud"
      ]
    },
    {
      "title": "Working with Binary Data in Python 3",
      "url": "https://www.udemy.com/course/working-with-binary-data-in-python-3/",
      "bio": "Learn to read, write, manipulate and operate on bits and bytes",
      "objectives": [
        "Work with raw bytes in Python 3",
        "Read and write binary files",
        "Formatting binary output",
        "Using bitwise operators",
        "Encode and decode with UTF-8 and Base64",
        "Packing and unpacking structs"
      ],
      "course_content": {
        "Introduction": [
          "Course overview"
        ],
        "Basics of bytes": [
          "The Bytes type",
          "Bytes quiz",
          "Formatting output",
          "The Bytearray type",
          "Bytearray quiz",
          "The BytesIO class"
        ],
        "Bitwise Operations": [
          "Overview of Bitwise Operations",
          "AND Operation",
          "OR Operation",
          "XOR Operation",
          "Ones Complement",
          "Bit Shifting"
        ],
        "Conversion": [
          "Introduction",
          "Convert a large integer to bytes",
          "Convert a list of small integers to bytes",
          "Convert a binary string to a byte",
          "Convert bytes to an integer",
          "Convert hexadecimal strings"
        ],
        "Working with files": [
          "Write bytes to a file",
          "Get metadata about a file",
          "Read Bytes from a File",
          "Seek a position in a file"
        ],
        "Struct packing and unpacking": [
          "What is struct packing?",
          "Example of struct packing",
          "Example of unpacking a struct"
        ],
        "Encoding": [
          "Intro to Encoding",
          "ASCII encoding",
          "UTF-8 encoding",
          "Base64 encoding"
        ],
        "Code Examples": [
          "Code examples"
        ],
        "Conclusion": [
          "Course recap"
        ]
      },
      "requirements": [
        "Basic Python programming knowledge",
        "A Python programming environment"
      ],
      "description": "Learn how to work with binary data using Python 3. Everything in a computer is binary and bytes under the hood, so it is critical to understand how to work with data at this raw level.\nKnowing how to manipulate binary data at and byte streams is an essential skill for any type of programming you do with Python from web developers to data scientists to game developers to security analysts and engineers, malware reverse engineers, and penetration testers\nSome of the things you will learn include:\nReading write bytes to buffer streams and disk which is useful for working with any kind of binary file or network communication\nFormatting output of bytes so you can view it as hexadecimal or even binary format.\nConverting between Python objects and raw bytes which is useful for storing objects to disk or loading up binary data that was intended for a different computer system\nEncoding and decoding bytes which lets you switch between raw bytes that you can store and transfer and usable objects in Python. For example, creating a save game file or transmitting data over the network.\nPacking and unpacking structs; For example, creating a TCP/IP packet header or extracting data from proprietary file formats.\nPerforming bitwise operation like AND, OR, XOR, and ones copmlement which is useful for a variety of tasks like network masking and cryptography.\nCourse syllabus\nIntro\nCourse overview\nBasics of bytes\nBytes type\nBytearray type\nBytesIO class\nFormatting output\nBitwise operations\nAND\nOR\nXOR\nOnes complement\nBit shifting\nConversion\nIntegers <-> Bytes\nBinary strings\nHexadecimal strings\nWorking with files\nRead and write bytes\nSeek position\nGet metadata about a file\nStruct packing\nWhat is struct packing?\nStruct packing\nStruct unpacking\nEncoding\nASCII\nUTF-8\nBase64",
      "target_audience": [
        "All software developers",
        "Anyone who wants to learn to work with binary data in Python",
        "Security engineers",
        "SOC analysts",
        "Malware reverse engineers"
      ]
    },
    {
      "title": "Graphics for Pythoneers",
      "url": "https://www.udemy.com/course/introduction-to-turtle-graphics/",
      "bio": "From Robots to Frameworks - Complete Course!",
      "objectives": [
        "Use Python to plot points upon the classical mathematical plane",
        "Create and manipulate colorized polygons",
        "Scale and manage vector-based graphics",
        "Use Python's built-in Cartesian text sub-system",
        "Use over 3,400 additional vector-based glyphs & textual characters",
        "Understand how to create several grid types, as used to create a colorized chess board",
        "Understand how to draw special / international Unicode characters",
        "Understand the basics of font creation, usage, as well as common glyph-rendering strategies",
        "Create a basic calculator",
        "Determine relative point-distances",
        "Determine object heading & orientation",
        "Create & manage the \"Undo Buffer\"",
        "Use screen-relative viewports",
        "Scale the global, world-coordinate, aspect ratios",
        "Understand how to manage shape transformations",
        "Respond to mouse events & keyboard operations",
        "Create Lambdas to respond to framework events",
        "Register user-defined shapes",
        "Record & transform basic, as well as complex, shapes",
        "Learn how to create a \"Z Order\" to manage user events",
        "Understand the difference between shapes, the shape registry, and active-object instances",
        "Simulate basic object movement & instance inter-operations"
      ],
      "course_content": {
        "Level 3000: Turtle Graphics for Beginners (a.k.a Turtle Graphics 3000)": [
          "3.0100: Lesson Orientation",
          "3.0110: Getting Started",
          "3.0200: Introduction to Cartesian Planes",
          "3.0300: Basic Lines & Orientations",
          "3.0400: Common Angles",
          "3.0500: Goto Points",
          "3.0600: The Main Turtle",
          "3.0700: Drawing Polygons",
          "3.0800: Polygons - Part 2",
          "3.0810: Polygons - Part 3",
          "3.0820: Polygons - Part 4",
          "3.0900: Object-Oriented Pitfalls (The \"Slow Grid\")",
          "3.1000: The \"Fast Grid\"",
          "3.1100: Which is Best? Grid Classes",
          "3.1200: Polygon Case Study (3's and 7's)",
          "3.1300: Turtle Speeds",
          "3.1400: Common Pen Operations",
          "3.1500: Colorized Quadrants - Joseph One",
          "3.1600: State Saver - Joesph Two",
          "3.1700: State Saver Solution",
          "3.1800: The Cartesian \"Map Marker\"",
          "3.1900: Drawing Fractals",
          "3.2000: More Fractals!",
          "3.2100: A Plausible \"Fractal Framework\"?",
          "3.2200: Fractal Tree",
          "3.2300: Fractal Tree Customization",
          "3.2400: Concept Review: Creating a Super Secret Cypher?",
          "3.2500: Unicode Concepts",
          "3.2600: Additional Encoding Concepts",
          "3.2700: Chess Board - Part One",
          "3.2800: Chess Board - Part Two",
          "3.2900: Chess Board - Part Three",
          "3.3000: Vector-Based Fonts",
          "3.3100: Inverting & Aligning Vector-Based Shapes",
          "3.3200: Scaling Vector-Based Shapes",
          "3.3300: Classical Vector-Font Families, Re-Use & Support"
        ],
        "Level 4000: Intermediate Lessons (a.k.a Turtle Graphics 4000)": [
          "4.0100: Introduction to Python 4000",
          "4.0200: Input Processing",
          "4.0300: The Input Activity Solution",
          "4.0400: Advanced Rectangle 'Ops",
          "4.0500: Superior Input 'Ops",
          "4.0600: On-Click Shape Management (The Boxer Class)",
          "4.0700: Mastering Shape Inheritance (Extending Box)",
          "4.0800: Saving The Extended Box State",
          "4.0900: Best Patterns and Pattern Practices",
          "4.1000: 3D Printing & Code Re-Usages (2D Designs to 3D Productions)",
          "4.1100: Simple, Easy, and Amazing Re-Use",
          "4.1200: Managing 3D Effects of 2D Updates",
          "4.1300: Loading, Sizing, and Displaying Bitmaps",
          "4.1400: Circles and Radial-Graph Creations",
          "4.1500: Screen, Pens, and Relative Object Sizes",
          "4.1600: Quickly Create Amazing Shapes using Dynamic Updates",
          "4.1700: Re-Using Enum Polly",
          "4.1800: Headings, Trends, and Distance Calculations",
          "4.1900: Alternate Color Representation & Framework",
          "4.2000: Degrees, Radians, and Alternate Mapping Modes",
          "4.2100: An Evolutionary Research Process for Graphics",
          "4.2200: Changing World Coordinates",
          "4.2300: Easy Callback Solution Upgrade",
          "4.2400: Undoing Drawn Operations",
          "4.2500: Buffer Sizes & Caveats"
        ],
        "Level 5000: Advanced Lessons (a.k.a Turtle Graphics 5000)": [
          "5.0100: Introduction",
          "5.0200: Five Ways to Manage Shapes!",
          "5.0300: Shape Solutions",
          "5.0400: Animation - Managing Times & Shapes",
          "5.0500: Shape Registration & Image Stamping",
          "5.0600: Framework Integration",
          "5.0700: Point Enumerations and Faster Re-Use",
          "5.0800: Recording & Merging Shapes",
          "5.0900: Framework Tactical Registrations",
          "5.1000: Complexity - Easier by Design ?",
          "5.1100: Tilting Shapes and the Registered Alias",
          "5.1200: The \"Turtle Coin\" Solution",
          "5.1300: Shape Searing, Slants, and Angles",
          "5.1400: Shape Transformation - Comparison & Solution",
          "5.1500: Sending and Receiving Events (The Hollywood Model)",
          "5.1600: Message Sending & Receiving Solution",
          "5.1700: Managing Mouse Motions & Events",
          "5.1800: Managing Multiple Robots - All the Same yet each Different!",
          "5.1900: Visual Testing, Driver, and Solution",
          "5.2000: Framework Parent - Child Timer & Callbacks",
          "5.2100: Multi Model Machinations - One Solution",
          "5.2200: Real-World Modeling, Animation & Simulation (Basic Gears)",
          "5.2300: Gear Motion Simulator",
          "5.2400: Multi-Shape Motion Simulators (Challenge Projects)"
        ]
      },
      "requirements": [
        "Students should have experience using Python 3",
        "Python 3.x should be installed",
        "Python's Turtle Module must be installed (i.e: `import turtle` should work!)",
        "Students should have completed Python 1000, Python 2000, and / or have a basic-educational equivalent"
      ],
      "description": "This course has got it all ... from testing, robotics, frameworks, simulation, animation, classical Cartesian and as well as modern computerized drawing planes you'll never enjoy a more comprehensive coverage of both Python's \"batteries included\" graphics module as well as professional programming practices.\n\n\nStarting with the clear and universally understandable geometric classics - by the time you've completed my Turtle Graphics Training I personally guarantee you that you'll be ready for the professional software development world.\n\n\nWe’ve even a demonstration on how to print your design on 3D printers.\n\n\nGraphical Math\nThroughout this training series students will be practicing their knowledge of how to use Python lists, tuples, dictionaries, functions, and classes to create graphical designs.\n\n\nNo longer three (3) separate opportunities, this unified educational opportunity now combines the 3000, 4000, and 5000 tracks (*) into one:\n\n\nLevel 3000\nThe first of a three-part educational experience, in this Python 3000: Turtles, Robots and Vectors educational opportunity students will be building upon their Python 3 programming experience. Complex programming concepts such as loops, blocks, and if-then-else statement and even collections can be graphically stepped-through as any shape is  propelled over any 2D or 3D coordinate-plotting strategies.\n\n\nIn this Python 3000 level opportunity we will begin by drawing shapes using programmable vector-graphics. We will discover how Python's built-in graphical operations can be used to visualize complex programming, as well as classical mathematical, concepts.\n\n\nFonts & Graphical Simulations\nAlong the way, this Level 3000 educational opportunity reviews many graphical concepts, such as Cartesian Geometry, as well as a coordinate-free vector-based way to use Turtle-Graphics. We will demonstrate, as well as practice both techniques to create grids, polygons, as well as to display both shapes and fonts; the type of operations we're going to need to complete the Python 4000, and 5000, lessons.\n\n\nExploring vector-based fonts and Fractals, in this session we will also develop several reusable techniques. Best practices designed to help us master Python's classic mathematical and graphical plane.\n\n\nLevel 4000\nThe Python 4000: Graphical Events and Operations lesson set ushers past our basic understandings of plotting & motion-based shapes to allow us to create graphical frameworks -Design patterns that will allow us to call our functions within Python's classical Cartesian graphics plane. Along the way we will also discover how to graphically gather input from application users, as well.\n\n\nIf you're not familiar with how to create and use frameworks, or have never used a callback function, then I think you will find our intermediate training - or Python 4000 for Turtle Graphics - to be something that you don't want to miss. --Certainly a lesson set that you'll want to re-use, as well as practice!\n\n\nLevel 5000\nIn Python 5000: Cartesian Frameworks we will reuse what we have learned - frameworks and best-practices - to create and animate different many graphical designs & models.\n\n\nA seldom taught feature, in Level 5000 we also will discover how to use Python's  built-in Shape Registry. We will understand how to record - as well as to replay - complex vector operations. From external bitmaps, to vector graphics the surprising resizable & adaptable cursor can allows us to drag-and-drop items around our screens.\n\n\nFinally you will understand what is required to create real-world software while practicing how to detect, collect, and to respond to keyboard, mouse, timer, input, and other real-world events. Highly reusable concepts & design patterns that professional software developers use to better manage, as well as to maintain complex software systems.\n\n\n(*) The source-code solutions archives for each level can be downloaded to your computer from the last lesson of each Section.",
      "target_audience": [
        "Students looking for more opportunities to practice using the Python programming language",
        "Enthusiasts wanting to create & manage complex graphical objects",
        "Scientists looking to use Python on a classic Cartesian coordinate system",
        "Software developers who need to respond to input events from application users",
        "Scientists & engineers who need to simulate real-world operations using timed events",
        "Students who need create in-progress views of operations across a time-series",
        "Engineers who need to manage events between multiple object instances",
        "Engineers needing to use pixel-relative distances, as well as object-heading, calculations",
        "Software developers who need to graphically gather input from application users",
        "Application developers who need to manage view-ports, scailing-factors, and create advanced presentations",
        "Student needing an efficent way to record, tally, and / or \"undo\" pre-recorded graphical operations",
        "Student looking for additional opportunities to practice Modern Python"
      ]
    },
    {
      "title": "Python 3 Foundations Complete Masterclass",
      "url": "https://www.udemy.com/course/python-beginner-complete-masterclass/",
      "bio": "Understand Python from the ground up in only 8 hours! No experience required on Mac, Linux or Windows!",
      "objectives": [
        "Be able to write Python scripts and programs",
        "Understand Python Data Types and Data Structures",
        "Understand Python Functions, Lambda and Decorators",
        "Learn OOP(Object Oriented Programming) and Python Classes",
        "Create and use Python Modules",
        "Use pip and PyPI to set up a virtualenv and install modules",
        "Read and Write to Files with Python"
      ],
      "course_content": {
        "Introduction": [
          "Welcome!",
          "Install List",
          "Install Python Windows",
          "Install Python MacOS",
          "Install Python Linux",
          "Install VS Code",
          "Get Code Repository",
          "How To Learn More Easily",
          "Terminal Navigation",
          "Hello World"
        ],
        "Variables": [
          "Variables Theory",
          "Numeric Variable Types",
          "Non-Numeric Types",
          "Multiple Assignment",
          "Variable Types"
        ],
        "Operators & Conditionals": [
          "Operators & Conditionals Theory",
          "Math Operators",
          "Conditional Statements",
          "try & except",
          "if & elif & else",
          "walrus",
          "match & case",
          "Operators & Conditionals"
        ],
        "Data Structures": [
          "Data Structures Theory",
          "Lists part 1 - declare, add and remove",
          "Lists part 2 - split, join & replace",
          "Lists part 3 - sort",
          "Lists part 4 - slice",
          "Lists part 5 - splat",
          "Lists part 6 - search and filter",
          "Lists",
          "Sets",
          "Ranges",
          "Matrices",
          "Dictionaries",
          "Tuples"
        ],
        "Loops": [
          "Loops Theory",
          "for",
          "while",
          "continue",
          "break",
          "Loops"
        ],
        "File Interactions": [
          "File Interaction Theory",
          "write",
          "read",
          "JSON parsing",
          "Names JSON",
          "JSON from a file",
          "JSON Analysis",
          "JSON to CSV part 1",
          "Dynamic JSON",
          "JSON to CSV part 2 - dynamic"
        ],
        "Functions": [
          "Functions Theory",
          "Basic Function",
          "Arguments",
          "return assignment",
          "return",
          "return assignment",
          "*args assignment",
          "*args",
          "*args assignment",
          "**kwargs assignment",
          "**kwargs",
          "**kwargs assignment",
          "/ & * assignment",
          "/ & * arguments",
          "/ & * assignment",
          "Dynamic Functions assignment",
          "Dynamic Functions part 1 - Function as an argument",
          "Dynamic Functions part 2 - returning a function",
          "Dynamic Functions part 3 - lambda",
          "Dynamic Functions assignment",
          "Decorators assignment",
          "Decorators",
          "Decorators assignment"
        ],
        "Classes": [
          "Classes Theory",
          "Basic Class assignment",
          "Simple Class",
          "Basic Class assignment",
          "__init__ assignment",
          "Constructors",
          "__init__ assignment",
          "Methods assignment",
          "Methods",
          "Methods assignment",
          "Inheritance assignment",
          "Inheritance",
          "Inheritance assignment part 1",
          "Inheritance assignment part 2",
          "super assignment",
          "super",
          "super assignment",
          "Multiple Inheritance assignment",
          "Multiple Inheritance",
          "Multiple Inheritance assignment"
        ],
        "Modules": [
          "Modules Theory",
          "Local Modules",
          "Virtual Environment Commands",
          "Virtual Environments",
          "Module install and freeze",
          "numpy test"
        ],
        "Congratulations": [
          "Congratulations!"
        ]
      },
      "requirements": [
        "Must have basic computer skills, and a desire to learn Python basics",
        "May be easier with some Powershell or Bash shell experience, but we will cover the necessities"
      ],
      "description": "If you are considering learning to program, this course will help you understand common programming concepts and one of the most popular programming languages.\nThe whole course also only uses resources that are available to all operating systems so that you can follow along from Windows, Linux or MacOS.\n\n\nWhy take this course?\nThere are a lot of Python courses our there, so why take this one?\nWhile you may get sick of looking at me, studies have shown that being able to see someone while they are talking improves comprehension and understanding, which is why I will be in the corner of each video unlike most courses.\nThe Video and Audio quality of this course is high which will also make it easier to follow.\nIn this course we will put things in an order that makes sense, and focus on a complete understanding of Python basics.\n\n\n\n\nLearning Path:\n\nIn this course we are going to start from nothing and build a strong foundation to prepare you to understand and work with the Python programming language.\n\n\nInstall and Getting Started\nVariables\nOperators and Conditional Statements\n\n\nAfter we have a foundational understanding of how to write some Python code, we take our first steps to manage basic variables and create procedural programming logic\n\n\nData Structures\nLoops\nFile Interaction\n\n\nOnce we have an understanding of procedural logic and workflows we can start making things more powerful and reusable with Functions and Classes\n\n\nFunctions\nClasses & OOP\n\n\nAnd finally after we have made our logic dynamic, we can also make our programs themselves dynamic by breaking up our code into multiple Modules, and talking about how we can add common modules to our projects\n\n\nModules\npip & virtualenv\n\n\n\n\nIf you are new to software development, congratulations on starting your journey to become a developer! I look forward to seeing you inside!",
      "target_audience": [
        "Beginners with no Programming Experience",
        "Anyone who wants to learn the Python Programming Language",
        "Programmers who want to get a deeper foundational understanding of Python"
      ]
    },
    {
      "title": "Platform Engineering: Build Scalable & Resilient Systems",
      "url": "https://www.udemy.com/course/platform-engineering/",
      "bio": "Learn DevOps, Infrastructure as Code, CI/CD, Kubernetes, more. Prepare for a successful career in platform engineering!",
      "objectives": [
        "Understand and Define Platform Engineering: Grasp the fundamental concepts, importance, benefits, and challenges of Platform Engineering.",
        "Master Infrastructure as Code (IaC): Implement IaC effectively using tools like Terraform and Ansible, enabling consistent & automated infrastructure.",
        "Design and Implement CI/CD Pipelines: Understand the principles of Continuous Integration & Continuous Delivery, build efficient pipelines, apply best practices",
        "Embrace Cloud-Native Technologies: Learn benefits & challenges of cloud-native architectures, hands-on with Kubernetes for container orchestration & deployment.",
        "Leverage Observability Tools: Implement monitoring, logging, and metrics collection with tools like Prometheus and Grafana for platform performance and health.",
        "Understand Platform Design Principles: Apply key design principles to build self-service platforms that empower development teams and improve overall efficiency",
        "Prepare for Platform Engineering Interviews: Develop a strong resume, practice answering common interview questions, and gain confidence through mock interviews",
        "Apply Platform Engineering Principles in Real-World Scenarios: Understand practical examples & implementation strategies to bridge gap between theory & practice",
        "Enhance Collaboration and Communication Skills: Foster DevOps culture necessary for effective collaboration and communication within cross-functional teams."
      ],
      "course_content": {
        "Introduction to Platform Engineering - Benefits, Challenges, Future": [
          "Introduction to Platform Engineering - Benefits, Challenges, Future"
        ],
        "Infrastructure-as-Code (IaC) with Terraform and Ansible": [
          "Infrastructure-as-Code (IaC) with Terraform and Ansible"
        ],
        "Continuous Integration (CI) and Continuous Delivery (CD)": [
          "Continuous Integration (CI) and Continuous Delivery (CD)"
        ],
        "API and Platform API": [
          "API and Platform API"
        ],
        "Platform Observability - Metrics and Logging": [
          "Platform Observability - Metrics and Logging"
        ],
        "Platform Observability - Monitoring and Future of Observability": [
          "Part 1 - Platform Observability - Monitoring and Future of Observability",
          "Part 2 - Platform Observability - Monitoring and Future of Observability"
        ],
        "Introduction to Cloud Native - Benefits and Challenges": [
          "Introduction to Cloud Native - Benefits and Challenges"
        ],
        "Real-world Example of Cloud Native and Future Aspects": [
          "Real-world Example of Cloud Native and Future Aspects"
        ],
        "Introduction to Kubernetes": [
          "Introduction to Kubernetes"
        ],
        "Container Orchestration": [
          "Container Orchestration"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the Platform Engineering: Build Scalable & Resilient Systems course by Uplatz.\n\n\nPlatform Engineering is a discipline in software development focused on building and maintaining an internal platform that enhances the productivity and efficiency of developers and operations teams. The goal is to provide reusable, scalable, and automated infrastructure solutions that streamline the software development lifecycle, enabling faster delivery of applications.\nIn essence, platform engineering allows for the creation of a standardized, highly automated environment where developers can focus on writing code, while platform engineers manage the complexity of the underlying infrastructure. This leads to improved developer experience, faster deployments, and reduced operational overhead.\n\n\nKey Aspects of Platform Engineering:\n\n\nInternal Developer Platform (IDP): Platform engineers design and build IDPs, which are custom platforms tailored to meet the specific needs of the development teams within an organization. These platforms typically abstract away complex infrastructure concerns, providing a unified and self-service environment where developers can easily deploy, monitor, and manage their applications.\nAutomation: A core principle of platform engineering is automation. This includes automating infrastructure provisioning (using Infrastructure as Code), CI/CD pipelines, monitoring, and logging. The aim is to reduce manual intervention and repetitive tasks.\nSelf-Service Capabilities: The platform provides self-service tools, allowing developers to independently create environments, deploy applications, and troubleshoot issues without relying on other teams (such as DevOps). This boosts developer autonomy and shortens development cycles.\nScalability and Reliability: Platforms built by platform engineers are designed to scale with the needs of the business. They integrate fault-tolerance, monitoring, and observability to ensure high availability and reliability, crucial for large-scale applications.\nCollaboration between DevOps, Security, and Developers: Platform engineering bridges the gap between DevOps teams, developers, and security teams. It aligns infrastructure, tooling, and workflows with the requirements of each group, ensuring compliance, security, and faster software delivery.\n\n\nHow Platform Engineering Works:\nInfrastructure as Code (IaC): Platform engineers use IaC tools (like Terraform, Ansible, or Pulumi) to automate and manage the underlying infrastructure, ensuring it can be provisioned and maintained consistently across different environments (development, staging, production).\nCI/CD Pipeline Integration: They integrate Continuous Integration/Continuous Deployment (CI/CD) pipelines into the platform. This involves tools like Jenkins, GitLab CI, or GitHub Actions to automate testing, building, and deployment processes.\nContainerization and Orchestration: Platform engineers leverage containers (e.g., Docker) and orchestration platforms (like Kubernetes) to abstract applications from the underlying infrastructure, making deployments consistent and scalable across environments.\nObservability and Monitoring: Platform engineers implement monitoring, logging, and alerting tools (e.g., Prometheus, Grafana, ELK Stack) to ensure the health, performance, and security of the applications running on the platform. These insights help in proactive troubleshooting and maintenance.\nSecurity and Governance: Security best practices are embedded into the platform, such as managing secrets (with HashiCorp Vault), ensuring compliance with organizational standards, and enforcing access control and security policies.\nCollaboration and Tooling: Tools are designed with usability in mind, allowing developers to access necessary resources through a unified interface (like a dashboard or CLI). This allows for consistent communication between platform engineers and development teams to ensure the platform evolves with their needs.\n\n\nPlatform Engineering - Course Curriculum\n\n\nModule 1: Introduction to Platform Engineering\nLecture 1: Define Platform Engineering, its importance, benefits, and challenges. Discuss the future of Platform Engineering.\nModule 2: Core Concepts\nLecture 2: Explore the benefits of Infrastructure as Code (IaC) and learn about popular tools like Terraform and Ansible.\nLecture 3: Understand CI/CD pipelines, their components, and best practices.\nLecture 4: Learn about self-service platforms, their purpose, and design principles. Explore Platform APIs, their role, and development considerations.\nLecture 5: Master platform observability, including metrics, logging, and monitoring.\nLecture 6: Deep dive into platform observability, monitoring, and the future of observability.\nModule 3: Cloud-Native\nLecture 7: Introduction to cloud-native concepts, benefits, and challenges.\nLecture 8: Real-world examples of cloud-native and its future.\nLecture 9: Introduction to Kubernetes architecture, components, and cluster management.\nLecture 10: Container orchestration, deployment strategies, and best practices.\nLecture 11: Serverless computing, use cases, benefits, challenges, and future.\nLecture 12: Cloud security, best practices, and common threats.\nModule 4: Design Principles and Shell Scripting\nLecture 13: Understand the design principles behind platform engineering.\nLecture 14: Recap and connect the terminologies learned so far.\nLecture 15 & 16: Introduction to Shell Scripting.\nLecture 17: Implementation of Shell Commands and Cocalc.\nLecture 18: CHMO - Understanding Programming Basics\nModule 5: Kubernetes and Platform Lifecycle\nLecture 19 & 20: Implementation of Kubernetes.\nLecture 21: Platform lifecycle management, including planning, development, deployment, and operations.\nModule 6: Observability with Grafana\nLecture 22: Understanding Grafana for observability.\nLecture 23: Connecting Grafana and other automation tools.\nLecture 24: Grafana Labs connections.\nModule 7: DevOps and Tooling\nLecture 25: Understanding Jenkins.\nLecture 26: Connection between Kubernetes and Jenkins\nLecture 27: DevOps implementation\nLecture 28: Service connection\nLecture 29: Platform Engineering documentation\nLecture 30: Understanding Redhat OpenShift\nLecture 31: Understanding GitLab\nModule 8: Practical Examples and Interview Preparation\nLecture 32: Practical examples of Platform Engineering and implementation\nLecture 33 & 34: How to make a resume for Platform Engineering roles\nLecture 35 & 36: Common Platform Engineering interview questions and answers\nLecture 37: Tips and rules for interviews\nLecture 38, 39 & 40: Company-oriented interview questions\nLecture 41: Top questions and framing answers\nLecture 42: LinkedIn session\nCourse Recap\nFinal Lecture: Review key concepts, achievements, and next steps.\n\n\nBenefits of Learning Platform Engineering\n1. Enhanced Career Opportunities\nPlatform engineering is a rapidly growing field with high demand for skilled professionals. By mastering platform engineering, you'll unlock a wealth of career opportunities, including roles such as:\nPlatform Engineer\nCloud Architect\nDevOps Engineer\nSite Reliability Engineer (SRE)\nSoftware Engineer specializing in Infrastructure\nTechnical Lead or Manager\n2. Increased Earning Potential\nDue to the high demand and specialized skillset required, platform engineers command competitive salaries and benefits.\n3. Improved Technical Skills\nYou'll gain proficiency in a wide array of cutting-edge technologies and tools, including:\nInfrastructure as Code (IaC) (Terraform, Ansible)\nCI/CD Pipelines (Jenkins, GitLab CI/CD)\nContainer Orchestration (Kubernetes)\nCloud Platforms (AWS, Azure, GCP)\nMonitoring and Observability (Prometheus, Grafana)\n4. Greater Impact and Influence\nPlatform engineers play a crucial role in enabling and empowering development teams. You'll have a direct impact on the efficiency, productivity, and success of the entire organization.\n5. Problem-Solving and Innovation\nYou'll be challenged to think critically, solve complex problems, and find creative solutions to streamline software delivery and optimize the development experience.\n6. Professional Growth and Development\nPlatform engineering is a constantly evolving field. By staying current with emerging trends and technologies, you'll ensure continuous professional growth and development.\n\n\nCareer Path in Platform Engineering\nThe typical career path in platform engineering often starts with roles like:\nSoftware Engineer/Developer: Gaining experience in building and deploying applications lays a strong foundation for understanding developer needs and pain points.\nDevOps Engineer: Building on development experience, DevOps engineers gain experience in automating and streamlining the software delivery process.\nSystem Administrator: Experience in managing and maintaining infrastructure can be leveraged to transition into automating infrastructure provisioning and management.\nFrom there, individuals can progress into specialized platform engineering roles, such as:\nPlatform Engineer: Focus on designing, building, and maintaining internal developer platforms.\nCloud Architect: Design and implement cloud solutions incorporating platform engineering principles.\nSite Reliability Engineer (SRE): Focus on ensuring the reliability and performance of the platform and its applications.\nWith experience and expertise, platform engineers can move into leadership positions like:\nTechnical Lead or Manager: Lead and mentor teams of platform engineers.\nDirector of Platform Engineering: Oversee the strategy and execution of platform initiatives across the organization.",
      "target_audience": [
        "Software Engineers and Developers: Those who want to expand their skill set beyond application development and gain expertise in building and managing the underlying platforms that support software delivery.",
        "DevOps Engineers: Those looking to deepen their understanding of platform engineering principles and tools to streamline development, deployment, and operations processes.",
        "Platform Engineers: Those already working in platform engineering roles seeking to expand their knowledge, learn new tools and techniques, and stay current with industry best practices.",
        "Beginners and newbies aspiring for a career in cloud and platform engineering.",
        "Anyone interested in learning DevOps, platform engineering, and site reliability engineering both from architecture and implementation point of view.",
        "Cloud Architects: Those responsible for designing and implementing cloud solutions at scale, and looking to integrate platform engineering principles into their overall architecture.",
        "Cloud Engineers: Those seeking to enhance their knowledge of cloud-native technologies and their application in building scalable and resilient platforms.",
        "System Administrators: Those transitioning to a more development-centric role and wanting to learn how to automate and manage infrastructure using code.",
        "IT Professionals: Those aspiring to move into the growing field of platform engineering and gain a competitive edge in the job market.",
        "Technical Leaders and Managers: Those responsible for overseeing software development and infrastructure teams and seeking to optimize their processes and improve delivery efficiency."
      ]
    },
    {
      "title": "Software Development Master Class - Intermediate C#",
      "url": "https://www.udemy.com/course/software-development-master-class-intermediate-csharp/",
      "bio": "Intermediate Programming Concepts with .Net Core and C#",
      "objectives": [
        "Learn about intermediate topics such as arrays, program logic flow, classes, multi-tier applications, data structures, and exception handling.",
        "Intermediate software development with Microsoft .Net and C#.",
        "Introduction to Object-Oriented Programming (OOP) and Object-Oriented Design (OOD)",
        "Learn important concepts and techniques which can be applied to real-world professional situations."
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Course Overview",
          "Review of Basic Programming",
          "Assignments & Code Examples",
          "Load Development Environment"
        ],
        "More Fun With Variables": [
          "Fun With Variables",
          "Value Type Variables",
          "What Time is it? Date & Time Variables",
          "Exploring Variables",
          "All About Strings",
          "More is Better - Arrays",
          "String Snake"
        ],
        "Program Organization and Logic": [
          "Organizing Our Programs",
          "More Logic Flow Choices",
          "Let's Function!",
          "Comment On String Lengths"
        ],
        "A Touch of Class": [
          "A Touch of Class",
          "Classes & Objects",
          "Constructors, Overloading, and Properties",
          "Structs, Value Types for a Class",
          ".Net Libraries: Lists and Files",
          "Rectangles That Draw Themselves"
        ],
        "Multi-Tier Objected-Oriented Applications": [
          "Building an Object-Oriented Application",
          "Introduction to Object Oriented Design",
          "Architectural Layering",
          "Inserting Object Instances",
          "Building Relationships",
          "Handling Errors",
          "Data Persistence",
          "Logging and Bug Analysis",
          "Write Out Read In"
        ],
        "Data Structures": [
          "Introduction to Data Structures",
          "Organization of Data",
          "Updates to School Application",
          "Sorting a Linear List",
          "Binary Search on a Sorted List",
          "Binary Trees - Building",
          "Binary Trees - Walking",
          "Binary Trees - Searching",
          "Using a .Net Dictionary To Manage a List",
          "Do a Binary Search on a Sorted List With Recursion"
        ],
        "Wrap-Up": [
          "You Made It!",
          "What We Learned",
          "Thank You!",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You should have an interest in becoming a professional software developer.",
        "You should have an inquisitive mind and enjoy problem solving.",
        "You should have some basic knowledge of Visual Studio and C# programming and know how to create a Console application, understand variable definition and branching statements such as if/else, while/do, and for loops.",
        "Microsoft Visual Studio 2019 Community Edition (free) or other (paid) editions. (Instructions to download and install are included in this course.)"
      ],
      "description": "In this course I will set you on a path that can take you from absolute beginner to professional software developer. This is not something that you can do in an afternoon, but this intermediate course is a start. My name is Mike Witt and I'm developing this course as the second step in a program that is intended to provide all the information that you will need to become a programmer with skills in a particular area: Developing web applications built around a .Net server, SQL Server database, and an Angular based UI. This course is the second step, but if you stick with it you can turn your learning and hard work into a career.\nIf you've glanced at my bio, you will note that I've been developing software for over 35 years. When I started, I had no idea what programming was. You may only have a basic understanding, but programming (unlike rocket science) is more of a skill and a craft than a theoretical science (like rocket science)! Because of this and because of a shortage of workers, many companies are willing to hire someone even if they don't meet their educational requirements. To be sure, most companies want a degree in computer science or at least some degree in a science or related field, but when it comes right down to it they want and need someone who can do the work.\nThis program will help you leap over the education gap by, not only understanding the technical nuts and bolts, but also by projecting your thinking and personality as someone who can do and understand software development. Here are some of the very important topics you will learn as part of this course:\n- An in-depth look at variables and their capabilities as well as date and time types and arrays.\n- Build more program logic elements into your applications with foreach loops and switch/case branches.\n- Get a start on developing object-oriented programs with classes, methods, properties, and constructors.\n- Find out how to build an application with a mult-tier architecture using object-oriented design techniques.\n- Use object relationships, exception handling, logging, and data persistence to build first-class applications.\n- Understand how data structures work to provide efficient and fast access to data.\n- Finally, you will learn about various .Net libraries that can help with common programming tasks such as lists, dictionaries, and files.\nI am truly excited to share my knowledge and my enthusiasm for developing software with you. Come on this journey and I will do my best to help you learn, enjoy, and finally become part of a community of developers who make this world go round!\nThis course comes with detailed explanations of each concept along with working examples for each programming assignment and a Verifiable Certificate of Completion.",
      "target_audience": [
        "Beginners who are interesting in becoming professional software developers."
      ]
    },
    {
      "title": "Kafka Streams - Become a Streams Superhero",
      "url": "https://www.udemy.com/course/kafka-streams-become-a-superhero/",
      "bio": "Your Complete Guide to Mastery: A Journey to Become a Kafka Streams Superhero in Real-Time Data Processing!",
      "objectives": [
        "Build Kafka stream application",
        "Understand the basics of Kafka streams in depth",
        "Learn how to debug the Kafka streams library",
        "Understand how to perform joins in Kafka streams",
        "Understand how to aggregate using Kafka streams",
        "Learn how to run Kafka UI",
        "Understand Serdes and how to build custom serdes",
        "Difference between Kafka streams and regular Kafka consumer",
        "How to use Kafka stream using Spring boot",
        "What is the co-partition",
        "What is DSL and how it related to the Processor API (PAPI)",
        "Learn to use KStream, KTable and GlobalKTable"
      ],
      "course_content": {
        "Getting Started": [
          "Kafka Streams vs. Regular Kafka",
          "Running Kafka",
          "Project setup",
          "Course repo",
          "Before Starting"
        ],
        "Kafka Stream - Getting Started": [
          "Topology",
          "Topology - Hands-on",
          "DSL vs. PAPI",
          "KStream",
          "The topics in the next lecture",
          "KStream - Hands-on",
          "KTable",
          "KTable - Hands-on",
          "GlobalKTable",
          "GlobalKTable - Hands-on",
          "Processor (PAPI)",
          "Processor (PAPI) - Hands-on",
          "State store",
          "Re-partition",
          "Serdes",
          "Serdes - Hands-on",
          "Tasks"
        ],
        "Join - Getting Started": [
          "Introduction",
          "Co-partition"
        ],
        "Join - KStream-KStream": [
          "KStream-KStream - Intro",
          "KStream-KStream - Hands-on"
        ],
        "Join - KStream-KTable": [
          "KStream-KTable - Introduction",
          "KStream-KTable - Hands-on"
        ],
        "Join - KTable-KTable": [
          "KTable-KTable - Introduction",
          "KTable-KTable - Hands-on"
        ],
        "Join - KStream-GlobalKTable": [
          "KStream-GlobalKTable - Introduction",
          "KStream-GlobalKTable - Hands-on"
        ],
        "Aggregation - Getting started": [
          "Introduction",
          "GroupBy & GroupByKey",
          "Count",
          "Reduce",
          "Aggregate"
        ],
        "Aggregation - GroupBy & GroupByKey": [
          "Grouping - Methods review",
          "Grouping with KStream - Hands-on",
          "Grouping with KTable - Hands-on"
        ],
        "Aggregation - Count": [
          "Count - Methods review",
          "Count with KStream - Hands-on",
          "Count with KTable - Hands-on"
        ]
      },
      "requirements": [
        "Knowledge of Kafka",
        "Knowledge in Java"
      ],
      "description": "Kafka, a name that resonates deeply within the tech community, is a distributed event streaming platform designed to handle high volumes of data in real-time. It has revolutionized the way businesses process and analyze data, making it an indispensable tool for modern-day enterprises.\nEnter Kafka Streams - a powerful client library for building applications and microservices. With Kafka Streams, you can effortlessly process, analyze, and react to those streams of data in real-time. The advantages are numerous: from its fault-tolerance and scalability to its ability to process data in a timely manner, Kafka Streams stands out as a game-changer.\nSo, what can you expect from this course?\nTime Efficiency: Why spend countless hours trying to grasp Kafka Streams when you can leverage my experience? I've distilled years of knowledge into a concise course, enabling you to become proficient in just a few hours.\nHands-On Expertise: This course isn't just about theory. With detailed practices and exercises, you'll not only learn but also apply your knowledge, ensuring you emerge as a Kafka Streams expert.\nEasy Reference: As you embark on your own Kafka Streams projects, this course will serve as a valuable resource. With lectures organized into dedicated and easily navigable topics, you can quickly refer back to any section for clarity or guidance.\nEngaging Learning Experience: I believe that when you enjoy the learning process, you retain and understand more. This course is designed to be both informative and engaging, ensuring that you not only learn but also enjoy the journey.\nIn conclusion, this course offers a comprehensive, hands-on, and enjoyable learning experience. My hope is that as you dive into the world of Kafka Streams with me, you'll find the content both enlightening and enjoyable. Because the more you enjoy, the more you learn.",
      "target_audience": [
        "Experienced Kafka devloper",
        "Developer that wishes to learn in depth Kafka streams",
        "Developer who uses Kafka streams and need a detailed videos for each topic"
      ]
    },
    {
      "title": "Create modern MS Access forms and Advanced UI design Access",
      "url": "https://www.udemy.com/course/create-modern-ms-access-forms-and-advanced-ui-design-access/",
      "bio": "Learn to design web like, modern MS Access forms, and a \"Bigger picture\" data approach in Access 2010",
      "objectives": [
        "Program modern MS Access user interface",
        "Design a modern look in MS Access",
        "Better data management approach",
        "Flexible user interface in Access",
        "Naming objects",
        "MsAccess with SQL Server - performance considerations",
        "Searching within the \"Bigger picture\" data approach"
      ],
      "course_content": {
        "Introduction": [
          "A \"Bigger picture\" data approach in MS Access",
          "Working with a number of entities in MS Access",
          "Preparations for fast and efficient design process Access",
          "Design process for the new form MS Access",
          "Naming (mainly) your forms and queries",
          "MsAccess with SQL Server",
          "MsAccess with SQL Server 2",
          "Getting the most from the \"Bigger picture\" approach",
          "Bonus Access 2010 tips + Bonus Downloads",
          "Create a plan for your entity portal - base tables, keys, relationships.",
          "Decide on an Entity and create a Portal"
        ]
      },
      "requirements": [
        "Understanding basic MS Access. Best at the very beginning of a new app."
      ],
      "description": "How to design a modern look in MS Access\nHow to make the Access form into a helpful dynamic portal.\nHow to match expectations\nHow to create flexible charts/reports.\nNaming objects\nMsAccess with SQL Server - performance considerations\nSearching within the \"Bigger picture\" data approach\n*Please, take a moment to read this note before You decide to enroll: It is not an \"In depth\" MS Access course, but an extension to everything you already know about MS Access design environment.\nWhether you are developing a new MS Access application or upgrading/adding features to an existing one it is sometimes possible to implement something new. Most of the times clients welcome this extra effort – and commission tasks based on it. Traditional Access look is rather heavy. In this course you will learn new design guidelines - to make Access forms look lightweight and modern.  But looks are not enough – I will show an extremely useful approach in designing user interface – which is greatly appreciated by people who use it in their day to day work. It is critical to present the data in comprehensive, easily managed formation. Sample file featuring all of the above is included. Using Vba opens before us a huge world of design possibilities.",
      "target_audience": [
        "Anyone who wants to improve skills in MS Access form design",
        "Anyone who wants to design modern MS Access user interface"
      ]
    },
    {
      "title": "Agile Project Management: How to build anything Digital",
      "url": "https://www.udemy.com/course/agile-project-management-how-to-build-anything-digital/",
      "bio": "Learn about the Approach, Required Skillsets, and Development Phases to Launch any Digital Product from Start to Finish",
      "objectives": [
        "Understand the difference between Waterfall and Agile Software Development",
        "Define the Roles and Responsibilities of an Agile Development Team",
        "Get to know the Software Development Lifecycle (SDLC) from beginning to end",
        "Internalize the importance of regular Customer Testing and adapting your Product accordingly"
      ],
      "course_content": {
        "Introduction and Agenda": [
          "Introduction"
        ],
        "Software Development Approach": [
          "Waterfall Development",
          "Agile Development",
          "Agile Ceremonies"
        ],
        "Roles & Responsibilities of Your Team Members": [
          "Team Members"
        ],
        "Get to know the Software Development Lifecycle (SDLC) from beginning to end": [
          "Ideation Phase",
          "Discovery Phase (Technology)",
          "Discovery Phase (UX and Product Roadmap)",
          "Design & Development Phase",
          "Testing Phase (#1)",
          "Testing Phase (#2)",
          "Launch Phase"
        ],
        "Conclusion": [
          "Final Words"
        ]
      },
      "requirements": [
        "No programming or design experience is required.",
        "You should be curious to find out how to create a digital product from start to finish (e.g. as a project manager early on in your career, or the desire to build out your first startup)"
      ],
      "description": "The Objectives of this Course are:\nUnderstand the difference between Waterfall and Agile Software Development\nDefine the Roles and Responsibilities of an Agile Development Team\nGet to know the Software Development Lifecycle (SDLC) from beginning to end\nInternalize the importance of regular Customer Testing and adapting your Product accordingly\n\n\nWe will be covering 3 key themes:\n\n\nTheme 1 - Software Development Project Management Approach: Waterfall vs Agile\nWaterfall and Agile are the most prevalent methodologies of processes. Waterfall is a sequential methodology where tasks are handled in a mostly linear process. Agile, on the other hand, is an iterative methodology which incorporates an iterative and collaborative process. Selecting the right methodology for your projects will depend on preference and the nature of each project. We will have a look at both.\n\n\nTheme 2 - Your Agile Cross-Functional Software Development Team\nThe Agile cross-functional team is comprised of the Scrum Master, Product Owner, Developers, Business Analyst, and Designers, to name just a few. They all come with a minimum definition of responsibilities and accountability to allow teams to effectively deliver work. Her we will have a more detailed look at each of them, without forgetting the crucial emphasis on your Customer.\n\n\nTheme 3 - The E2E Agile Software Development Lifecycle\nBy adapting an Agile software development life cycle (in short, SDLC), you will benefit from an iterative approach to the design, development and testing of your software feature. We will have a more detailed look at each stage that your feature undergoes: from its initial ideation phase and fleshing out the initial requirements, to the actual build development and testing phases, prior to launching the product to the customer market\n\n\nBy the end of this course you will:\nKnow the difference between Agile and Waterfall Software Development\nLearn about the benefits and drawback of each methodology\nBe aware of typical Agile meetings to use in your daily work life: Sprint Planning, Standups, Demos and Retrospectives\nUnderstand the key roles and responsibilities of team members\nRecognise the importance of regular collaboration with your customers\nAble to explain each phase of the Agile Software Development Lifecycle\nBe confident in kicking off an ideation phase or initiating a creative process\nUnderstand what it takes before any code development takes place - from writing requirements to sketching out designs to planning the technology infrastructure\nBe mindful of the importance of regular testing of your software, both in a a manual as well as automated way\nKnow how to launch your application to friends and family\nBe a champion in gathering feedback from your customer, and iterating your product accordingly, to improve and launch quicker and more successfully",
      "target_audience": [
        "Beginner Project Managers interested in agile software development",
        "Junior Developers and Designers wanting to switch into a (project) management position",
        "An Innovator with a great idea for a digital tool, but unsure where to begin or what skillset is required"
      ]
    },
    {
      "title": "No-code AI applications with ChatGPT, OpenAI, Flowise & LLMs",
      "url": "https://www.udemy.com/course/ai-applications-with-chatgpt-without-programming-zero-to-ex/",
      "bio": "Develop ChatGPT and LLM applications without programming skills using Chatgpt, Flowise, LangChain, Llama, Pinecone...",
      "objectives": [
        "Introduction to Language Models",
        "Tools for working with LLMs and NLPs",
        "AI Application Development with ChatGPT with LangChain",
        "Application Development with ChatGPT and no-code LLMs",
        "Introduction to Flowise and components",
        "Developing state-of-the-art LLMs",
        "LLM Model Training",
        "LLM training with your own documents",
        "Multi-stage reasoning with the string module",
        "Open-source Large Language Models (LLMs)",
        "Credential management in Flowise",
        "Auto-GPT the AI that outperformed ChatGPT"
      ],
      "course_content": {
        "Introduction to this course and Udemy Platform": [
          "How to get the most out of the course"
        ],
        "Introduction to Language Models": [
          "Introduction to Language Models",
          "What are Language Models",
          "Types of Language Models"
        ],
        "Introduction to ChatGPT": [
          "OpenAI, the company behind the ChatGPT algorithm",
          "Introduction to ChatGPT",
          "Advantages of ChatGPT and difference with conventional ChatBots",
          "Limitations of ChatGPT"
        ],
        "Tools for LLM and NLP": [
          "Tools for working with LLMs and NLPs",
          "Open AI API",
          "Hands-on Lab: OpenAI API",
          "Hugging Face Fundamentals",
          "LangChain Fundamentals",
          "Open-source LLM models"
        ],
        "AI Application Development with ChatGPT with LangChain": [
          "Introduction to LangChain",
          "Different LangChain model types and requirements",
          "LLM input management with LangChain's Prompts Module",
          "Combination of LLM with other components through chains",
          "Providing access to external data through LangChain Indexes",
          "Giving ChatGPT the ability to memorize through the LangChain Memory",
          "Providing access to tools through LangChain's Agents module"
        ],
        "Application Development with ChatGPT without code with Flowise": [
          "Developing state-of-the-art LLMs",
          "Flowise Features",
          "Installation of Flowise",
          "Getting started with Flowise"
        ],
        "Flowise components": [
          "Flowise components",
          "Flowise Modeling Component",
          "Flowise Prompts Component",
          "Vector Stores, Indices, Embeddings and Document Loaders of Flowise",
          "Flowise Memory Component",
          "Flowise Chain Component",
          "Flowise Agents and Tools"
        ],
        "Flowise Practical Project (Part I)": [
          "Practical Exercise: Designing the customized wizard",
          "Solution: Customized wizard design",
          "Practical Exercise: Basic ChatFlow Development",
          "Solution: Basic ChatFlow Development",
          "Practical Exercise: Development of an Assistant",
          "Solution: Development of an Assistant"
        ],
        "LLM Model Training": [
          "Different variants of LLMs and how to select them",
          "Data privacy in ChatGPT training"
        ],
        "LLM training with your own documents": [
          "Fundamentals of LLM training with documents",
          "Lab: Adding the QA Chain, Vector Store and PDF Loader",
          "Lab: Adding Text Splitter and OpenAI Embeddings"
        ]
      },
      "requirements": [
        "No previous programming knowledge is required"
      ],
      "description": "In a constantly evolving digital world, Artificial Intelligence has ceased to be a futuristic concept to become an essential tool in various areas of our daily lives. However, the challenge has always been how to make this technology accessible to those who have no programming experience. This is where this course comes to life.\n\n\nHave you ever wondered how to create intelligent, automated solutions without having to learn to program from scratch? This course is your answer. We offer you a unique opportunity to learn how to develop applications powered by ChatGPT and LLMs without writing a single line of code. Not only do we provide you with access to one of the most revolutionary technologies of the moment, but we give you the ability to design, prototype and launch your own AI-based solutions.\n\n\nContent Description:\nSolid Fundamentals: Start with a clear understanding of Language Models and discover the power behind ChatGPT.\nTools at your fingertips: Learn about cutting-edge tools like LangChain and Flowise that will allow you to bring your ideas to life.\nHands-on projects: Apply your knowledge through practical projects and challenges that guarantee an immersive learning experience.\nFuture of AI and ChatGPT: Discover Auto-GPT and other cutting-edge models that are defining the next horizon of AI.\nThere are no longer any barriers between you and next-generation AI applications. Take this opportunity to master ChatGPT and other AI tools, all without having to dive into complex lines of code. Are you ready to transform the future with your own intelligent solutions? Start your journey today!",
      "target_audience": [
        "Any professional who wants to create applications based on ChatGPT without programming ChatGPT",
        "If you are intrigued by the world of AI and wish to create intelligent applications without mastering programming",
        "If you are an entrepreneur looking to capitalize on AI",
        "If you work in a constantly evolving environment and want to incorporate ChatGPT solutions into your workflow without learning to program"
      ]
    },
    {
      "title": "Real World Hadoop - Hands on Enterprise Distributed Storage.",
      "url": "https://www.udemy.com/course/real-world-hadoop-hands-on-enterprise-distributed-storage/",
      "bio": "Master the art of manipulating files within a distributed storage enterprise platform with hands on Hadoop HDFS.",
      "objectives": [
        "Learn how to navigate the HDFS file system",
        "If you want to build a HDFS stack, Simply run a single command on your desktop, go for a coffee, and come back with a running distributed environment for cluster deployment",
        "Quickly build an environment where Cloudera and HDFS software can be installed.",
        "Ability to automate the installation of software across multiple Virtual Machines"
      ],
      "course_content": {
        "Navigating the HDFS File System": [
          "Justification",
          "Suggested course curriculum to follow ..."
        ],
        "HDFS Theory and Installation": [
          "Walking through the topology and benefits of HDFS",
          "Here we break down how HDFS can be installed",
          "We step through the installation of HDFS using Cloudera Manager"
        ],
        "Navigating the Distributed Storage using - hdfs dfs": [
          "Comparing \"hdfs dfs\" commands to our regular \"bash\" commands",
          "Creating a userspace within hdfs for users to read/write files",
          "Here we upload a file into HDFS and view some details",
          "It sounds naughty, but here we look at - hdfs fsck",
          "Here we look at hdfs - ls, rm and expunge"
        ],
        "OK, so how can one Add or Remove Files within a Distributed System.": [
          "We take a closer look at deleting files along with the skipTrash option",
          "Here we look at the hdfs commands - mkdir, appendToFile, cat and tail",
          "Here we learn to search for files within hdfs",
          "Here we look at the hdfs \"get\" and \"getmerge\" commands"
        ],
        "So how easy (or hard!) is it to Manage a Large Distributed Cluster": [
          "Here we look at how we can count files and directories within hdfs",
          "Here we look at how we can copy and move files within hdfs",
          "Here we combine touchz and appendToFile to simulate increasing DataSet size"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming or scripting experience is required.",
        "You will need a desktop PC and an Internet connection. The course is created with Windows in mind.",
        "The software needed for this course is freely available",
        "You will require a computer with a Virtualization chipset support - VT-x. Most computers purchased over the last five years should be good enough",
        "Optional : Some exposure to Linux and/or Bash shell environment",
        "64-bit Windows operating system required (Would recommend Windows 7 or above)",
        "This course is not recommened if you have no desire to work with/in distributed computing",
        "Optional : This course is built on top of - \"Real World Vagrant - Automate a Cloudera Manager Build\""
      ],
      "description": "The Hadoop Distributed File System (HDFS) is a distributed file system designed to run on commodity hardware. It has many similarities with existing distributed file systems.\nWe will be manipulating the HDFS File System, however why are Enterprises interested in HDFS to begin with?\n\nHowever, the differences from other distributed file systems are significant.\nHDFS is highly fault-tolerant and is designed to be deployed on low-cost hardware.\n\nHDFS provides high throughput access to application data and is suitable for applications that have large data sets.\nHDFS relaxes a few POSIX requirements to enable streaming access to file system data.\nHDFS is part of the Apache Hadoop Core project.\nHardware failure is the norm rather than the exception. An HDFS instance may consist of hundreds or thousands of server machines, each storing part of the file system’s data. The fact that there are a huge number of components and that each component has a non-trivial probability of  failure means that some component of HDFS is always non-functional. Therefore, detection of faults and quick, automatic recovery from them is a core architectural goal of HDFS.\nApplications that run on HDFS have large data sets. A typical file in  HDFS is gigabytes to terabytes in size. Thus, HDFS is tuned to support large files. It should provide high aggregate data bandwidth and scale  to hundreds of nodes in a single cluster. It should support tens of   millions of files in a single instance.\nA computation requested by an application is much more efficient if it  is executed near the data it operates on. This is especially true when the size of the data set is huge. This minimizes network congestion and  increases the overall throughput of the system. The assumption is that\nit is often better to migrate the computation closer to where the data  is located rather than moving the data to where the application is running. HDFS provides interfaces for applications to move themselves  closer to where the data is located.\n.\n\nHere I present a curriculum as to the current state of my Cloudera courses.\nMy Hadoop courses are based on Vagrant so that you can practice and destroy your virtual environment before applying the installation onto real servers/VMs.\n.\nFor those with little or no knowledge of the Hadoop eco system Udemy course : Big Data Intro for IT Administrators, Devs and Consultants\n.\nI would first practice with Vagrant so that you can carve out a virtual environment on your local desktop. You don't want to corrupt your physical servers if you do not understand the steps or make a mistake. Udemy course : Real World Vagrant For Distributed Computing\n.\nI would then, on the virtual servers, deploy Cloudera Manager plus agents. Agents are the guys that will sit on all the slave nodes ready to deploy your Hadoop services Udemy course : Real World Vagrant - Automate a Cloudera Manager Build\n.\nThen deploy the Hadoop services across your cluster (via the installed Cloudera Manager in the previous step). We look at the logic regarding the placement of master and slave services. Udemy course : Real World Hadoop - Deploying Hadoop with Cloudera Manager\n.\nIf you want to play around with HDFS commands (Hands on distributed file manipulation). Udemy course : Real World Hadoop - Hands on Enterprise Distributed Storage.\n.\nYou can also automate the deployment of the Hadoop services via Python (using the Cloudera Manager Python API). But this is an advanced step and thus I would make sure that you understand how to manually deploy the Hadoop services first. Udemy course : Real World Hadoop - Automating Hadoop install with Python!\n.\nThere is also the upgrade step. Once you have a running cluster, how do you upgrade to a newer hadoop cluster (Both for Cloudera Manager and the Hadoop Services). Udemy course : Real World Hadoop - Upgrade Cloudera and Hadoop hands on",
      "target_audience": [
        "Software engineers who want to expand their skills into the world of distributed computing",
        "System Engineers that want to expand their skillsets beyond the single server",
        "Developers who want to write/test their code against a valid distributed enviroment"
      ]
    },
    {
      "title": "Build Scalable Applications using Docker and Kubernetes",
      "url": "https://www.udemy.com/course/build-scalable-applications-using-docker-and-kubernetes/",
      "bio": "A Practical Step by Step guide to build a Scalable Microservices Application",
      "objectives": [
        "Learn the concepts of Containers and Docker",
        "Use Docker to Containerize an Application",
        "Create Multi-container Applications using Docker Compose",
        "Learn the concepts of Container Orchestration with Kubernetes",
        "Create a REST API Server in a Kubernetes Pod",
        "Expose your Application using Kubernetes Service",
        "Manage Application Revisions and Scalability using Kubernetes Deployment",
        "Persist the state of your Application using Kubernetes Persistent Volume",
        "Manage Configuration Changes to your Kubernetes Application using ConfigMap and Portainer",
        "Learn and apply the concepts of Microservices and Independent Deployability"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome to the course",
          "Course Objectives"
        ],
        "Hello, Docker - Hello, Kubernetes": [
          "Hello, World!",
          "Docker Desktop",
          "Lab1: Install Docker Desktop on a Windows machine",
          "Install Docker Desktop on Mac or Linux",
          "Lab 2: Run a Hello, World Container",
          "Lab 3: Enable Kubernetes in Docker Desktop",
          "Lab 4: Run a Hello, World Pod on Kubernetes",
          "Progress Quiz 1"
        ],
        "A Practical Introduction to Docker": [
          "Welcome to Docker",
          "What is Docker and how it can help you?",
          "Lab 5: Use Docker to Containerize a REST API Application",
          "Progress Quiz 2",
          "Lab 6: Pass Arguments to change the behaviour of a Container",
          "Lab 7: Create a Multi-container Docker Application",
          "Progress Quiz 3",
          "Lab 8: Use Docker to containerize a PHP Application",
          "Lab 9: Simplify the Multi-container Application using Docker Compose",
          "Progress Quiz 4"
        ],
        "A Practical Introduction to Kubernetes": [
          "Welcome to Kubernetes",
          "A Practical Introduction to Kubernetes",
          "The Kubernetes Pod for the REST API Server",
          "Lab 10: Create a REST API Server in a Kubernetes Pod",
          "Progress Quiz 5",
          "A Kubernetes ReplicaSet for the REST API Server",
          "Lab 11: Create a Highly Available REST API Server using Kubernetes ReplicaSet",
          "Kubernetes Services for the REST API Server",
          "Lab 12: Use A Kubernetes Service to expose a Highly Available REST API Server",
          "Progress Quiz 6",
          "A Kubernetes Deployment for the REST API Server",
          "Lab 13: Create a Highly Available REST API Server using Kubernetes Deployment",
          "Lab 14: Manage Revisions of a REST API Server using Kubernetes Deployment",
          "Progress Quiz 7",
          "A Kubernetes Persistent Volume for the REST API Server",
          "Lab 15: Persist the state of your Application using a Persistent Volume",
          "Lab 16: Manage Configurations of the Application using ConfigMap and Portainer",
          "Progress Quiz 8",
          "A Brief Introduction to Microservices and Independent Deployability",
          "Lab 17: Complete the Two-Tier Application",
          "Progress Quiz 9"
        ],
        "Recap and What's next": [
          "Recap of what you learned in this course",
          "Preparing for a Kubernetes Certification",
          "Kubernetes Certifications and Courses",
          "Suggestions and next steps",
          "Download the course slide deck"
        ]
      },
      "requirements": [
        "Basic Programming and Problem Solving Knowledge",
        "Knowledge of one general purpose programming language",
        "Basic knowledge of Web Development",
        "Optional: Basic knowledge of PHP and Python"
      ],
      "description": "Did you want to start learning Application Containerization, Docker, and Kubernetes but did not know where to start? Do you want something that is not just theroy, but rather a journey where you create and run an actual Application?\n\n\nThen this course is for you. You will learn the concepts of Containers and how to put them to practice using Docker and Kubernetes. Better yet, you will build a Microservices Application in this course as you learn and apply the new concepts.\n\n\nCourse Objectives\nApplication Containerization\nMulti-container Docker Applications\nKubernetes as a Container Orchestrator\nManage Applications using Kubernetes\nConfigure Applications using Kubernetes\nLearn and apply the concepts of Microservices\n\n\nYou will build this Application\nA Two-Tier Microservices Application which has\nA PHP Web Front End\nA Flask REST API Server Backend\nFully scalable, ready to scale up or down\nImplemented in a Microservices Architecture, allowing Independent Deployability and Independent Scalability of each tier\nPersist Important data on the server, even if the Application crashes\nApply all the concepts you will learn as you build this Application bit by bit\n\n\nTechnology used in the Application\nThe Frontend tier is built with PHP, HTML, CSS\nThe Backend tier is a REST API Server written in the Flask Python Framework\nContainerize each tier in its own Docker Container Image\nBuild the end-to-end application using Docker, then using Kubernetes\nLearn what Kubernetes adds on top of Docker to better manage your application\n\n\nAW-11166561487",
      "target_audience": [
        "Programmers who want to run containerized workloads using Kubernetes and Docker",
        "Solution Architects who want to create scalable, multi-tier, containerized applications",
        "Technical Specialists who want to learn and apply the concepts of Microservices and Independent Deployability"
      ]
    },
    {
      "title": "Polkadot Blockchain Developer Bootcamp with Substrate + Rust",
      "url": "https://www.udemy.com/course/polkadot-developer/",
      "bio": "Become an Expert Polkadot Blockchain Developer with One Course! Master Web3, DApps, Custom Blockchains, and More!",
      "objectives": [
        "Understand the basic philosophy behind the blockchain and distributed/decentralised applications",
        "Understand the fundamentals of Polkadot and how Polkadot is different from other blockchains",
        "Learn the capabilities and applications of the Polkadot blockchain",
        "Understand the role of parachains in Polkadot",
        "Learn about Substrate and its importance to Polkadot",
        "Start and operate a multi-node blockchain from your own computer",
        "Write fully customised blockchains for specific use cases with Substrate",
        "Implement advanced block authoring protocols for your blockchain using Substrate",
        "Implement pallets into your blockchain to upgrade its functionality",
        "Understand how Polkadot smart contracts work, both in theory and in practice",
        "Become proficient in advanced development with Substrate"
      ],
      "course_content": {
        "Your guide to understanding Polkadot, Substrate, and the blockchain": [
          "Applications of the blockchain in 2 minutes",
          "Introduction to the blockchain",
          "Introduction to Polkadot",
          "Introduction to Substrate"
        ],
        "THEORY - Blockchain basics": [
          "Blockchain basics",
          "What is a blockchain node?",
          "State transitions and conflicts",
          "Blockchain governance",
          "Applications running on a blockchain"
        ],
        "HANDS-ON - Build a local blockchain": [
          "Project intro",
          "Compile a Substrate node",
          "Start the local node",
          "Install the front-end template",
          "Start the front-end template",
          "Transfer funds from an account"
        ],
        "THEORY - Architecture": [
          "Architecture"
        ],
        "THEORY - Networks and blockchains": [
          "Network types",
          "Node types"
        ],
        "HANDS-ON - Simulate a network": [
          "Project intro",
          "Start the first blockchain node",
          "Add a second node to the blockchain network",
          "Verify blocks are produced and finalised"
        ],
        "THEORY - Consensus": [
          "Consensus",
          "Block authoring",
          "Finalisation and forks",
          "Deterministic finality"
        ],
        "HANDS-ON - Add trusted nodes": [
          "Project intro",
          "Generate your account and keys",
          "Create a custom chain specification",
          "Convert the chain specification to raw format",
          "Start the first node",
          "View information about node operations",
          "Add keys to the keystore",
          "Enable other participants to join"
        ],
        "THEORY - Accounts, addresses, and keys": [
          "Accounts, addresses, and keys",
          "Address encoding and chain-specific addresses",
          "Specialised accounts"
        ],
        "HANDS-ON - Add a pallet to the runtime": [
          "Project intro",
          "Add the Nicks pallet dependencies",
          "Review the configuration for Balances",
          "Implement the configuration for Nicks",
          "Start the blockchain node",
          "Start the front-end template",
          "Set a nickname using the Nicks pallet",
          "Query information for an account using the Nicks pallet"
        ]
      },
      "requirements": [
        "Basic programming experience",
        "An understanding of how the blockchain works"
      ],
      "description": "Ready to master Polkadot blockchain development with Substrate? You've come to the right place!\nBlockchain technology is the most disruptive force in years - and disrupting even blockchain technology itself is Polkadot. Polkadot is the step above other blockchains because it’s the blockchain that combines all other blockchains together and allows all other blockchains to communicate with each other. At the moment there are thousands of different blockchains, and the fact that Polkadot is the first to combine them all is a huge competitive advantage. This mean Polkadot is growing exponentially despite being so new, and makes it likely to reach mass adoption.\nLarge tech companies and start-ups alike cannot hire developers who understand blockchain technologies fast enough, but there are so few resources published to help you truly understand what blockchains are used for, let alone build apps with them.\nThat's the purpose of this course: to be the best resource online for learning about Polkadot, the blockchain, and how to build apps with these cutting-edge technologies.\nBy the end of this course, you’ll:\n\n\n- Be an expert Polkadot developer and even create customised blockchains with Substrate\n- Be proficient at creating your own decentralised applications from scratch\n- Make millions from NFTs? Build a decentralised version of Uber? Create your own bank? Up to you!\n\n\nIn this course you'll cover:\n- What the Polkadot blockchain is, how it works, where Substrate plays a role, and why the combination of Polkadot and Substrate is so incredible\n- Deep dive into Polkadot development using Substrate and Rust\n- Full projects that will solidify your skills in writing dapps (decentralised apps), building your own fully customised blockchains, creating reusable pallets, and more\n\n\nIf you want to take advantage of the cutting-edge Polkadot blockchain while it’s still new and rapidly growing, this course is for you. All you need is some programming experience and knowledge of how blockchains work in general.\n\n\nWhat is Polkadot?\nPolkadot is a blockchain network. All the other blockchains are separate from each other and operate in isolation. What Polkadot does is combine all the blockchains into one network, which means that blockchains on Polkadot can communicate with each other while still retaining blockchain-specific characteristics. Polkadot is fast, secure, cost-effective, eco-friendly, and even supports *smart contracts* which are pieces of code that run on the blockchain, and which can replace your bank/real estate agency/ticket selling company/accountant/witch doctor. These factors combined make Polkadot poised to overtake both Bitcoin and Ethereum in popularity and adoption. What's more, is that Polkadot comes with Substrate. Substrate is a developer toolkit that makes it easy to create brand new, fully customised blockchains that run on the Polkadot network.",
      "target_audience": [
        "Individuals who want to take advantage of the cutting-edge Polkadot blockchain while it's new and rapidly growing"
      ]
    },
    {
      "title": "Logstash In Practice",
      "url": "https://www.udemy.com/course/logstash-in-practice/",
      "bio": "A Complete Guide to Logstash, input, filter, output plugins, testing and Monitoring API",
      "objectives": [
        "Logstash best practices",
        "Practical usage of most commonly used input, filter and output plugins",
        "Testing pipelines",
        "Improving pipelines"
      ],
      "course_content": {
        "About this Course and Author": [
          "Introduction"
        ],
        "Code & Slides Download": [
          "Slides and Code Download"
        ],
        "Prerequisites": [
          "How to prepare yourself for this course"
        ],
        "Logstash architecture": [
          "What Logstash and Beats are?",
          "Logstash Pipelines - Data Processing",
          "First Example Usage"
        ],
        "Filter Plugins": [
          "Grok",
          "Date",
          "GeoIP",
          "Mutate",
          "Common Options (modifiers)",
          "Conditions and error handling",
          "Json",
          "Kv (key-value)",
          "Csv",
          "Split",
          "Fingerprint",
          "Prune",
          "Aggregate",
          "Filter Plugins Summary"
        ],
        "Input Plugins": [
          "File",
          "Stdin",
          "Exec",
          "Http_poller",
          "Http",
          "Beats",
          "Jdbc",
          "Elasticsearch",
          "Input Plugins Summary"
        ],
        "Output Plugins": [
          "Overview",
          "Stdout",
          "Elasticsearch",
          "File",
          "Output Plugins Summary"
        ],
        "Tuning & Optimizations": [
          "Running multiple pipelines",
          "Testing the pipeline",
          "Monitoring API",
          "Retrying & DLQ"
        ],
        "Congratulations": [
          "Thank You!"
        ]
      },
      "requirements": [
        "No programming nor administrative experience needed",
        "Basic HTTP and RESTful API experience is fine enough",
        "Access to any running Logstash instance is optional (course contains simple installation guide)"
      ],
      "description": "This course is all about helping you master Logstash. You'll get tons of practical knowledge, examples, and hands-on exercises to make sure you really understand how it works.\nWe'll start from the basics: installing Logstash on your laptop, so you don't need any special setup to go through this course. You'll learn about the most popular plugins for inputs, filters, and outputs, with examples for each. Don't worry if you're new to these terms – we'll cover everything from the basics to more advanced features.\nIn general, you'll learn how to use Logstash to pull or push data from various sources like files, RESTful APIs, relational databases, queues, and even custom applications. Perform effective data transformations and sending transformed and enriched data to downstream systems. You'll also learn how to optimize your pipeline by assigning the right resources, like threads, to make it run smoothly.\nWhether you're a beginner or already have some experience with Logstash, this course will help you improve your skills. You'll learn how to use plugins correctly, reduce latency, increase throughput, and test and create new pipelines effectively. By the time you finish, you'll have a complete understanding of Logstash and be ready to use it in your work.\n\n\nI hope to see you in the first lecture!",
      "target_audience": [
        "Software Engineers",
        "Architects",
        "DevOps & Administrators",
        "Developers & QA"
      ]
    },
    {
      "title": "CDP Cloudera Hadoop |Big Data | Authentication With Kerberos",
      "url": "https://www.udemy.com/course/cloudera-manager-authentication-with-kerberos-aws-cloud/",
      "bio": "CDP Hadoop Administrator | Cloudera | Cloudera Hadoop Secure Cluster | Kerberos Authentication | MIT Kerberos",
      "objectives": [
        "CDP 7.1.4 Cloudera Hadoop | Big Data | Secure Cloudera Manager With Kerberos Authentication",
        "Cloudera CDP Deployment On AWS",
        "CDP 7.1.4 For 2024",
        "Latest CDP Cloudera"
      ],
      "course_content": {
        "Introduction - Authentication with Kerberos": [
          "Introduction - Cloudera Manager| Authentication With Kerberos | AWS Cloud",
          "Introduction - create AWS EC2 instance",
          "AWS EC2"
        ],
        "Cloudera Manager": [
          "Hadoop 2 Prerequisites",
          "Hadoop 2 Pre-Requiset",
          "Cloudera Manager Part1",
          "Cloudera Manager",
          "Cloudera Manager Quiz",
          "Cloudera Manager Part2",
          "Cloudera Manager Script Explain",
          "Cloudera Manager Diagram",
          "Add New Node To Cloudera Cluster"
        ],
        "Configuring Authentication with Kerberos": [
          "Enabling Kerberos Authentication In Cloudera Manager",
          "Cloudera Latest Installation | Cloudera | Cloudera Hadoop Installation Cloudera"
        ],
        "Bonus Lecture": [
          "MIT Documents"
        ],
        "2024 Update": [
          "AWS Instance Creation",
          "Pre Req",
          "CDP Installation",
          "CDP Installation Part 2 And MIT Kerberos",
          "Part Three",
          "Beeline",
          "Hadoop Ranger"
        ]
      },
      "requirements": [
        "Basics Of Linux",
        "Basics Of AWS Cloud, SSH"
      ],
      "description": "Cloudera Hadoop | Big Data | Secure Cloudera Manager With Kerberos Authentication\nYou will Learn in This course.\n1:- Hadoop 2 Prerequisites.\n2:- Cloudera Manager Deployment.\n3:- Add New Node To Cloudera Cluster.\n4:- Kerberos Authentication Steps.\n5:- Secure Cloudera Cluster\n6:- you will see how to connect to beeline\n7:- in live cluster we will change instance typr.\n8:- in live cluster we will change instance storage or volume.\n9:- in live CDP cluster how to add servicess.\nFirst i have show you how to deployee AWS ec2 instance then doing pre requisets on that then we will change insyajnce type then instance volume after we will deploye CDP cloudera then mit kerberos after that ranger and in cdp live cluster how we will add servicess like solr kerberos and enable it for hive and hdfs\nI have demonstrated that hadoop2 pre-requisites and Cloudera manager installation after installation enabling it Kerberos authentication on Cloudera manager and check one job on the cluster and check Kerberos is working or not. also, show how to create ec2 instance then creating an image of ec2 instance, spot instance on-demand instance then if you want to secure your Hadoop environment you will learn that in this course.",
      "target_audience": [
        "DBA",
        "Big Data Hadoop Admin",
        "Start Career In Hadoop",
        "Cloudera Hortenworks And Apache Hadoop Admin"
      ]
    },
    {
      "title": "Embedded WiFi on STM32 using ATWINC1510 for IoT Applications",
      "url": "https://www.udemy.com/course/wi-fi-on-stm32-using-atwinc1510/",
      "bio": "Start making IoT Application using STM32, TCP/IP, HTTP, REST API and MQTT",
      "objectives": [
        "Know all about ATWINC1510, a great WiFi Network Processor from the company Microchip",
        "Add WiFi connectivity to any STM32 MCU based projects.",
        "Successfully port the open-source drivers provided by Microchip, to STM32 platform.",
        "Create TCP Clients and Servers"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the ATWINC1510 Wi-Fi Module"
        ],
        "Setup": [
          "Creating a new project in STM32Cube IDE",
          "Prototyping Hardware Details",
          "Downloading the drivers for ATWINC1510",
          "Adding ATWINC1510 Drivers in our STM32 Project",
          "Adding support for our platform (STM32) in driver code",
          "SPI Stub Functions"
        ]
      },
      "requirements": [
        "Familiarity with STM32 Microcontrollers and STM32CubeIDE.",
        "A ST-Link Debug Probe.",
        "STM32F051C8 Bluepill Board and ATWINC1510 Module",
        "No PAID software required!"
      ],
      "description": "Welcome to the Embedded Wi-Fi on STM32 using ATWINC1510 for IoT Applications course.\n\nThis course teaches you how to integrate feature rich and easy to use drivers (from Microchip) for ATWINC15xx series of Wi-Fi Network Controller modules.\nThis course uses the STM32 microcontroller and the ATWINC1510 WIFI module. The ATWINC1510 is a low-cost Wi-Fi module with a full TCP/IP stack. If you do not understand what TCP/IP stack means, do not worry, by the end of this course you will understand this and much more. ATWINC1510 is designed and manufactured by a renowned name in the industry, that is the Microchip corporation USA. It is much more reliable brand compared to other low cost Wi-Fi modules brands available in the market. Microchip corporation is well-known for the quality and completeness of the documentation of their products, this makes them a lot easier to use than a competitor's product. They are also well-known for providing quality supporting code for their products. And this time I am referring to the driver code that they provide, for ATWINC15xx series. This open source and free driver code is well-designed, clean and easy to use.\n\n\nThe product itself is of very high quality and reliable for use in Industrial automation and other domains where reliability is utmost important!",
      "target_audience": [
        "Intermediate Embedded Developers interested in adding WiFi connectivity to their projects."
      ]
    },
    {
      "title": "Build Modern GUI Apps With TTKBootstrap, Tkinter, and Python",
      "url": "https://www.udemy.com/course/build-modern-gui-apps-with-ttkbootstrap-tkinter-and-python/",
      "bio": "No More Outdated Looking Tkinter Apps! TTKBootstrap Makes Tkinter Apps Look Modern Again!",
      "objectives": [
        "Introductory TKinter for GUI Apps",
        "The TTKBootstrap Framework For Tkinter",
        "How to Build Basic Apps With TKinter and Python",
        "How To Use All The Major TTKBootstrap Widgets"
      ],
      "course_content": {
        "Basic TTKBootstrap Widgets": [
          "Introduction",
          "Labels and Buttons",
          "CheckButtons",
          "Resizing Buttons",
          "ComboBoxes",
          "Entry Boxes",
          "Floodgauge Widget",
          "DateEntry Widget",
          "Frames and Labels",
          "Menu Buttons",
          "Meters",
          "Notebooks",
          "Progress Bars",
          "Radio Buttons",
          "Sliders",
          "Scrollbars",
          "Separators and Size Grips",
          "Spin Boxes"
        ],
        "More Advanced Widgets": [
          "Treeview",
          "Message Boxes",
          "Color Chooser",
          "Scrolled Text Widget",
          "Scrolled Frame Widget",
          "Toast Messages"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No special tools are necessary to take this course",
        "A Basic Understanding of Python and Tkinter Is Helpful"
      ],
      "description": "In this course I'll teach you how  to make modern looking graphical user interfaces for Python using the TTKBootstrap Library with TKinter.  You'll be surprised just how quickly you can create some pretty cool looking apps!\n\n\nI'll show you the ins and outs of TTKBootstrap, and how to make your old looking Tkinter apps look new and modern.\n\n\nWe'll start out by learning all about the main TTKBootstrap widgets.  Including:\n\n\nButtons\nCheckButtons\nComboboxes\nDateEntry\nEntry Boxes\nFloodgauges\nFrames\nLabels\nLabelFrames\nMenuButtons\nMeters\nNotebooks\nPaned Windows\nProgressBars\nRadioButtons\nScales\nScrollbars\nSeparators\nSizeGrips\nSpinBoxes\nTreeviews\nColor Choosers\nDialog Boxes\nToast Messages\nAnd More!\n\n\nOnce you learn these main TTKBootstrap widgets, you can easily use them in any Tkinter app you build in the future!\n\n\nIf you love Tkinter, but hate the way it looks...this course is for you!  There are several modern libraries for Tkinter, but TTKBootstrap is the most complete and up to date...and in my opinion, easiest to use!\n\n\nIf you don't have any experience with Tkinter, that's fine...I'll walk you through everything you need in this course.  Likewise, if you're an old pro at Tkinter, this refreshing library should be quick and easy for you to pick up.",
      "target_audience": [
        "This course is aimed towards absolute beginners who want to learn to build Modern Looking GUI Apps With TKinter and Python",
        "Anyone wanting to learn to build GUI apps with Python"
      ]
    },
    {
      "title": "Deep Learning Recommendation Algorithms with Python",
      "url": "https://www.udemy.com/course/deep-learning-recommendation-algorithms-with-python/",
      "bio": "How to create machine learning recommendation systems with deep learning, collaborative filtering, and Python.",
      "objectives": [
        "Build a framework for testing and evaluating recommendation algorithms with Python",
        "Understand solutions to common issues with large-scale recommender systems",
        "Create recommendations using deep learning at massive scale",
        "Apply the right measurements of a recommender system's success"
      ],
      "course_content": {
        "00a Introduction to Recommender Systems": [
          "01 Introduction To Recommender Systems",
          "02 How To Evaluate Recommender Systems",
          "03 Content Based Recommendations",
          "04 Neighborhood Based Collaborative Filtering",
          "Source Files"
        ],
        "00b Mammoth Interactive Courses Introduction": [
          "00 About Mammoth Interactive",
          "01 How To Learn Online Effectively"
        ],
        "00c Introduction to Python (Prerequisite)": [
          "00. Intro To Course And Python",
          "01. Variables",
          "02. Type Conversion Examples",
          "03. Operators",
          "04. Collections",
          "05. List Examples",
          "06. Tuples Examples",
          "07. Dictionaries Examples",
          "09. Conditionals",
          "10. If Statement Examples",
          "11. Loops",
          "12. Functions",
          "13. Parameters And Return Values Examples",
          "14. Classes And Objects",
          "15. Inheritance Examples",
          "16. Static Members Examples",
          "17. Summary And Outro",
          "Source Code"
        ],
        "01 Build a Basic Movie Recommender System": [
          "01 Load Data As Pandas Dataframes",
          "02 Merge Movies And Ratings Dataframes",
          "03 Build A Correlation Matrix",
          "04 Test The Recommender",
          "Source Files"
        ],
        "02 Projects 2 and 3 Preview - Machine Learning Movie Recommender": [
          "00 Project Preview"
        ],
        "03 Machine Learning Fundamentals": [
          "00A What Is Machine Learning",
          "00B Types Of Machine Learning Models",
          "00C What Is Supervised Learning"
        ],
        "04 Introduction to User Similarity": [
          "01 Load Data Into Dataframes",
          "02 Find A Recommendation Based On Different Movie Features",
          "03 Calculate Distance Between Users",
          "04 Find Similar Users With Euclidean Distance",
          "Source Files:"
        ],
        "05 Recommend a Movie Based on User Similarity": [
          "05 Define Similarity Between Users",
          "06 Find Top Similar Users",
          "07 Recommend A Movie Based On User Similarity",
          "Source Files"
        ],
        "06 Recommend a Movie with a K Nearest Neighbors Classifier": [
          "08A What Is K Nearest Neighbours",
          "08B Recommend A Movie With A K Nearest Neighbors Classifier",
          "09 Create A Sample User For Testing",
          "10 Recommend Movies To Sample User",
          "Source Files"
        ],
        "07 Project 4 Preview - Complex Machine Learning Recommender": [
          "00 Project Preview"
        ]
      },
      "requirements": [
        "Some experience with a programming or scripting language (preferably Python)",
        "Some computer science background, and an ability to understand new algorithms."
      ],
      "description": "We'll cover tried and true recommendation algorithms based on neighborhood-based collaborative filtering, and work our way up to more modern techniques including matrix factorization and even deep learning with artificial neural networks. Along the way, you'll learn from our extensive industry experience to understand the real-world challenges you'll encounter when applying these algorithms at large scale and with real-world data.\nYou've seen automated recommendations everywhere - on Netflix's home page, on YouTube, and on Amazon as these machine learning algorithms learn about your unique interests, and show the best products or content for you as an individual. These technologies have become central to the largest, most prestigious tech employers out there, and by understanding how they work, you'll become very valuable to them.\nWe'll cover tried and true recommendation algorithms based on neighborhood-based collaborative filtering, and work our way up to more modern techniques including matrix factorization and even deep learning with artificial neural networks.\nRecommender systems are complex; don't enroll in this course expecting a learn-to-code type of format. There's no recipe to follow on how to make a recommender system; you need to understand the different algorithms and how to choose when to apply each one for a given situation. We assume you already know how to code.\nHowever, this course is very hands-on; you'll develop your own framework for evaluating and combining many different recommendation algorithms together, and you'll even build your own neural networks using Tensorflow to generate recommendations from real-world movie ratings from real people.\nThis comprehensive course takes you all the way from the early days of collaborative filtering, to bleeding-edge applications of deep neural networks and modern machine learning techniques for recommending the best items to every individual user.\nThe coding exercises in this course use the Python programming language. We include an intro to Python if you're new to it, but you'll need some prior programming experience in order to use this course successfully. We also include a short introduction to deep learning if you are new to the field of artificial intelligence, but you'll need to be able to understand new computer algorithms.",
      "target_audience": [
        "Software developers interested in applying machine learning and deep learning to product or content recommendations",
        "Engineers working at, or interested in working at large e-commerce or web companies",
        "Computer Scientists interested in the latest recommender system theory and research"
      ]
    },
    {
      "title": "Learn Basics of Python Scripting for Server Side Automation",
      "url": "https://www.udemy.com/course/python-scripting-for-automation/",
      "bio": "Learn How to Automate Repetitive Tasks with Python Scripting",
      "objectives": [
        "Basics of Python Scripting",
        "Functions concepts of Python Scripting",
        "Subprocess Module to execute any OS Level Commands",
        "Regular or Regex Expressions",
        "Logging Concept with logging module"
      ],
      "course_content": {
        "Introduction": [
          "Objective of this course",
          "Prerequisites to Enroll this course",
          "Introduction to Python Scripting",
          "Python Versions"
        ],
        "Installing Python on Windows & Linux Operating Sytems": [
          "System Requirements to install Python",
          "Installing Python On Windows Operating System",
          "Issues you may face after Python Installation on Windows",
          "Installing Multiple Python Versions on Windows",
          "What is py ?",
          "Installing Python on Any Linux - Working with Default Python",
          "Installing Required Python Version on Ubuntu Machine",
          "Making required Python Version as default Python for your User"
        ],
        "Code Editors to Develop or Write Python Scripts or Programs": [
          "List of some of the code Editors to Develop or Write Python Scripts",
          "How to use vi or vim Editor on Any Linux To Develop Python Scripts?",
          "How to use vi or vim Editor on Windows To Develop Python Scripts?",
          "What is Python Shell ?",
          "What is Python IDLE ?",
          "Installing Visual Studio Code Editor on Windows"
        ],
        "Basics of print, indentation , comments and special characters": [
          "Create a Directory or Folder For Practice",
          "What is Syntax ?",
          "Basic Usage of print and What is Python Indentation ?",
          "Comments of Python Scripting",
          "Why Python is called Platform-Independent or System-Independent Language ?",
          "What is a Shebang line in Python Scripting ?",
          "Setting default Python for Visual Studio Code Editor"
        ],
        "Basics of Variables & Data Types": [
          "Introduction to Variables",
          "Introduction to Data Types",
          "type Conversion"
        ],
        "Operations on Strings": [
          "Escape Characters or Escape Sequence",
          "What is Python Raw String and where we need this ?",
          "Working with multiline Strings",
          "Length of a strings",
          "Formatting Strings",
          "Concatenation of strings",
          "dir() and help() Functions for Python Documentation",
          "Case conversion and validation operations on strings",
          "Input & output's of Python Scripting",
          "strip operations of Python Strings",
          "Index Concept of Python Strings",
          "index() find() and count() methods of Python Strings",
          "startswith() and endswith() methods of Python Strings",
          "zfill() and center() methods of Python Strings",
          "Slicing Concept of Python Strings",
          "How to use Python documentation for String methods ?"
        ],
        "Data Structures of Python Scripting": [
          "Introduction to Data Structures and Types of Data Structures",
          "Introduction to List Data Structure",
          "Different Types of Operations on List Data Structure",
          "split() rsplit() and splitlines() methods on Python Strings",
          "Tuple Data Structure",
          "Type Conversion for List and Tuple",
          "Dictionary Data Structure",
          "range function | How to get str or list or tuple index values using range ?",
          "join method",
          "min, max and sum functions",
          "Simple Practice"
        ],
        "Operators of Python Scripting": [
          "Introduction to Operators Of Python Scripting",
          "Arithmetic Operators of Python Scripting",
          "Assignment Operators of Python Scripting",
          "Comparison Operators of Python Scripting",
          "Identity Operators of Python Scripting",
          "Membership Operators",
          "Logical Operators Of Python Scripting",
          "Bitwise Operators of Python Scripting"
        ],
        "Conditional Statements": [
          "Introduction to Conditional Statements",
          "if and if-else syntax and usage with simple example",
          "Neste-if Conditional Statement Explanation with an example and Usage of range()",
          "if-elif-elif-........else Conditional Statement",
          "Ternary Operator or if-else in one line"
        ],
        "Errors ( Syntax Errors & Logical Errors or Runtime Errors or Exceptions )": [
          "Introduction to Errors ( Syntax Errors & Exceptions )",
          "Types of Exceptions and How to list Built-in Exceptions ?",
          "Exception Handling",
          "Handling Multiple Exceptions",
          "What is raise Statement in Exceptions ? | Exceptions with Raise"
        ]
      },
      "requirements": [
        "Basic Knowledge on Computer",
        "Basic Knowledge on Windows and Linux Operating Systems",
        "Basic Knowledge on Command Line"
      ],
      "description": "Welcome to Basics of Python Scripting for Server Side Automation.\nPython is an Advanced Scripting, general-purpose, high-level interpreted programming language\nThe objective of this course is to provides the the Basics of Python Scripting with practice for Windows/Linux System Users to Develop Python Scripts to Automate The Tasks.\nWindows/Linux System Users are like:\nSystem Admins/Developers/Supporters\nDevOps Admins/Developers/Supporters\nDatabase Admins/Developers/Supporters etc….\nDifference between Programming and Scripting Languages:\nProgramming languages are used to develop software’s/applications\nScripting Languages are used to give instructions to the other software's/applications – useful to automate tasks\nPython has both Programming and Scripting languages features\nWhat can we do with Python ?\nNow a days it is becoming more and more popular for doing….\nWeb Application Development\nAPI or REST API Development\nIoT Development\nGUI and Game Development\nData Science and Data Analytics\nAI (Artificial Intelligence)\nWeb Scraping & Text Processing\nCreating plugins and extensions for existing applications\nAutomation (OS, DB, Middleware, Webserver, Cloud, DevOps etc…)\n\n\nThis course is designed to help you get the Basic Concepts of Python scripting to develop Automation Scripts on Server Side.\nStarted the course with very basics like\nIntroduction\nEnvironment Setup to Practice Python Scripting\nVariables & Data Types\nOperations on Strings\nData Structures/Collections\nOperators\nConditional Statements\nException Handling with try and except block(s)\nLoops\nFunctions\nand then covered very important modules like\nsys\nos\ntime,datatime\nsubprocess\nargparse\nre\nrequests\nlogging\nworking with Text , CSV and JSON Files",
      "target_audience": [
        "Beginners Python Scripting for Server Side Automation"
      ]
    },
    {
      "title": "What is AWS CDK and how to build a platform with it",
      "url": "https://www.udemy.com/course/what-is-aws-cdk-and-how-to-build-a-platform-with-it/",
      "bio": "Build an amazing platform with AWS CDK and Projen",
      "objectives": [
        "How to effizient write IaC (Infrastructure as Code) in AWS using the CDK Framework.",
        "Using AWS Solutions Constructs to implement often used and well-architected resource patterns"
      ],
      "course_content": {
        "AWS CDK Introduction": [
          "Introduction & Agenda",
          "What is AWS CDK?",
          "Why is it useful?"
        ],
        "AWS CDK Construct": [
          "What is a Construct?",
          "Api Gateway Example"
        ],
        "DevOps Staging Pipeline": [
          "AWS CDK Staging Pipeline"
        ],
        "Todolist Example": [
          "Todolist Example - Frontend, Backend and Staging Pipieline"
        ],
        "Coding Preparation": [
          "AWS CDK and Projen Setup",
          "Forking and Creating a Token",
          "AWS CDK Bootstrap"
        ],
        "Backend: AWS AppSync, AWS DynamoDB, AWS Cognito": [
          "Backend - Projen",
          "Backend - AppSync Stack",
          "Frontend - Static Site Stack - Stage",
          "Backend - Staging Pipeline"
        ],
        "Frontend: Amplify React hosted in a S3 Static Site": [
          "Frontend - Projen",
          "Frontend - React App",
          "Frontend - React App Dev Script",
          "Frontend - Amplify Export Script",
          "Frontend - GraphQL Scripts",
          "Frontend - Login Screen",
          "Frontend - Navbar",
          "Frontend - Router",
          "Frontend - Todolist Component",
          "Frontend - Static Site Stack - Stage",
          "Frontend - Staging Pipeline"
        ],
        "Integration Tests for Backend and Frontend": [
          "Backend - Integration Test"
        ],
        "Thanks": [
          "Thanks"
        ]
      },
      "requirements": [
        "User needs an AWS account"
      ],
      "description": "Infrastructure as Code (short IaC) is a powerful method to create and maintain you deployments. AWS CDK is a very famous way of defining your deployment with IaC. AWS CDK synthesize to AWS Cloudformation which looks back on many years of use in divers productions. So yes AWS CDK is production ready!\n\n\nIn this course you are learning about the basics of AWS CDK which is an open source framework to generate Cloudformation templates out of code written in languages like Java, JavaScript, TypeScript or Python. CDK uses Constructs to describe one or more Cloudformation resources.\n\n\nAfter that we build a Todolist platform consisting of a frontend React TS App hosted in an S3 Bucket and a backend with AppSync, Cognito and DynamoDB. Frontend and Backend are supported by a deployment pipeline. Each new commit triggers a new run of the AWS CodePipeline frontend or backend pipeline.\n\n\nFor setting up the projects and maintaining them we are using Projen which is a very helpful templating tool with a lot of useful tools for working with AWS CDK.\n\n\nSo lets join me in having a very nice DevOps like experience with AWS CDK and Projen.\nFeel free to provide any feedback. Find my handles on: https://martinmueller.dev\n\n:)",
      "target_audience": [
        "AWS Developers",
        "AWS Architects"
      ]
    },
    {
      "title": "Controller Area Network (CAN bus) For Beginners (English)",
      "url": "https://www.udemy.com/course/controller-area-network-can-bus-for-beginars-english/",
      "bio": "Deep Dive in CAN protocol/controller",
      "objectives": [
        "Deep Dive in CAN Protocol",
        "CAN BUS characteristics",
        "Reading CAN Controller from TRM",
        "Using Linux CAN Socket"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "CAN Protocol (Theoretical Part)": [
          "In-vehicle networks (IVN)",
          "What is CANBUS?",
          "CANBUS Concept",
          "Types of CAN Messages",
          "Error/Overload frame",
          "CANBUS Characteristics",
          "CAN Bus Errors"
        ]
      },
      "requirements": [
        "strong knowledge in MCU fundamentals, interfacing and embedded C programming"
      ],
      "description": "CAN Protocol (Theoretical Part) CONTENT\n\nsummarize Chapter 11 (Automotive Protocols)\nfrom \"Mastering embedded system from scratch Second Edition\"\nlearn-in-depth-store  site\n\"Mastering Embedded Systems From Scratch\" is an all-encompassing, inspiring, and captivating guide designed to elevate your engineering skills to new heights. This comprehensive resource offers an in-depth exploration of embedded systems engineering, from foundational principles to cutting-edge technologies and methodologies.\nSpanning 14 chapters, this exceptional book covers a wide range of topics, including microcontrollers, programming languages, communication protocols, software testing, ARM fundamentals, real-time operating systems (RTOS), automotive protocols, AUTOSAR, Embedded Linux, Adaptive AUTOSAR, and the Robot Operating System (ROS). With its engaging content and practical examples, this book will not only serve as a vital knowledge repository but also as an essential tool to catapult your career in embedded systems engineering.\n\n–In-vehicle networks (IVN)\n–Evolution of in-vehicle networks\nclassic flat wiring harness architecture\ndomain architecture\nzonal architecture\n–A typical wiring harness for a car.\n–central compute Based Zonal Architecture\n–CANBUS Introduction\nWhat is CANBUS?\nWho uses CANBUS?\nCANBUS history\nCANBUS timeline\nCANBUS Characteristics\nOSI Model\nPhysical Layer\n–CAN Protocol Specification\n–General Characteristics\n–Types of CAN Messages\nData frame\nRemote frame\nError frame\nOverload frame\n–CAN bus Characteristics\nCAN Node\nSingle Ended Vs Differential\nRecessive And Dominant Signals\nBit Rate / Bus Length\nCAN transceiver\n–CAN Bus Errors\nBit error\nStuff error\nCRC error\nAcknowledgment error\nForm Error\n–Error Confinement Mechanism\n–CAN Bit Monitoring and Stuffing",
      "target_audience": [
        "Embedded System Engineer",
        "Computer Engineer",
        "Communication and electronics engineer",
        "Mechatronics engineer",
        "Computer Science"
      ]
    },
    {
      "title": "Algorithms and Data Structures - Part 2",
      "url": "https://www.udemy.com/course/algorithms-and-data-structures-part-2/",
      "bio": "Ace your next technical interview!",
      "objectives": [
        "Basics of problem solving",
        "Gain deeper understand of Algorithms and Data Structures",
        "Master the skills needed to ace technical interviews"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview"
        ],
        "Strings": [
          "Let's understand about Strings",
          "Problem solving with Strings"
        ],
        "Recursion": [
          "Learn to debug a recursive code"
        ],
        "Linked List": [
          "Implementation of Linked List",
          "Write recursive code",
          "Problem Solving with Linked List"
        ],
        "Conclusion": [
          "Conclusion of Part 2"
        ]
      },
      "requirements": [
        "Be able to comfortably program in a programming language of choice"
      ],
      "description": "There are four parts to this program.\nIn part 1 of the course, we start with the deep dive implementations on some of the basic linear structures such as Arrays, Queues, Stacks and Dictionary. Understanding data structures are key to problem solving.\nIn this part 2 of the course we will deep dive into problem solving, strings, Linked List and recursion.\nIn part 3, we deep dive into more problem solving and dynamic programming.\nFinally in part 4, we will cover Trees and Graphs.\n\n\nHappy coding!",
      "target_audience": [
        "Developers preparing for technical interviews"
      ]
    },
    {
      "title": "Managing SaaS Training Development and Instructional Design",
      "url": "https://www.udemy.com/course/managing-saas-training-development/",
      "bio": "Develop training curriculum for SaaS products as an Instructional Designer, Product Owner, or an Entrepreneur",
      "objectives": [
        "Instructional Design Strategies for developing and managing a curriculum for Software as a Service Solutions",
        "Run a profitable service-based eLearning business that delivers training services for clients that own SaaS Solutions",
        "Set up a process to develop and maintain profitable learning program for SaaS Solutions"
      ],
      "course_content": {
        "Understanding the SaaS Environment": [
          "Course Introduction",
          "Introduction to the SaaS Environment",
          "Impact on Instructional Designers and Curriculum Developers",
          "Quiz: Understanding the SaaS Environment"
        ],
        "Understanding the Technology": [
          "Overview of Sources to Learn the SaaS Technology",
          "Using the Different Sources",
          "Managing Subject Matter Experts",
          "Learning Needs Analysis Template Overview and Summary",
          "Quiz: Understanding the Technology"
        ],
        "Creating and Using a Curriculum Pipeline": [
          "Curriculum Pipeline Overview",
          "Strategies for Using the Curriculum Pipeline",
          "Learning Paths and Summary",
          "Quiz: Creating and Using a Curriculum Pipeline"
        ],
        "Project Management Best Practices and Tools": [
          "Project Management Overview",
          "Task Lists for SaaS Courses",
          "Project Management Best Practices and Summary",
          "Project Management Tools Overview",
          "Agile Project Management for SaaS Course Development",
          "Selecting a Tool and Summary",
          "Quiz: Project Management Best Practices and Tools"
        ],
        "Designing Effective Courses": [
          "Overview and Design Document Layout",
          "Framing Objectives",
          "Checking Knowledge",
          "Defining the Course Structure",
          "Evaluating Delivery Methods",
          "Quiz: Designing Effective Courses"
        ],
        "Course Development Best Practices": [
          "Before Starting Development",
          "Style Guides",
          "Ensuring Course Quality",
          "Using Graphic Elements",
          "Minimizing Course Update Efforts",
          "Using Project Management Tools",
          "Predicting and Managing Risks and Summary",
          "Overview of Authoring Tools",
          "Choosing an Authoring Tool",
          "Quiz: Course Development Best Practices"
        ],
        "Deployment and Delivery Strategies": [
          "Introduction to Delivery Modalities",
          "Instructor-led Training",
          "Virtual Instructor-led Training",
          "Web-based Training",
          "Microlearning",
          "Blended Learning",
          "Integrated Learning Workflow",
          "Learning Management Systems",
          "Video-hosting Platforms and Summary",
          "Quiz: Deployment and Delivery Strategies"
        ],
        "Monetization": [
          "Monetization Strategies",
          "Quiz: Monetization Strategies"
        ],
        "Course Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "Basics of Instructional Design",
        "Need to develop a curriculum for a SaaS Product"
      ],
      "description": "In this course (Managing SaaS Training Development and Instructional Design), Instructional Designers, Course Developers, Trainers, Curriculum Managers, Product Managers, Enterprise Software Trainers, and Business Owners will learn to:\nSet up a process to develop and maintain profitable learning solutions for Software as a Service (SaaS) Products\nShare and develop best practices to manage SaaS Education\nRun a profitable business within your enterprise by monetizing education\nThe Managing SaaS Training Development and Instructional Design course is tailored for all instructional designers and curriculum developers who work in a SaaS Enterprise or are working for a client who owns a SaaS product. In addition, this course is designed with tips for business owners and managers of SaaS solution enterprises who want to develop effective training solutions for their customers and partners. This course will enable you to develop technical training for Software solutions, specifically, SaaS.\nThis course offers exclusive and practical tips for developing an effective and profitable SaaS curriculum. It brings together the accrued knowledge of industry professionals with years of experience managing curricula for some of the largest SaaS enterprises across the globe.\nSo, come and learn with us about developing a course on SaaS Solutions and how to set up and maintain a profitable curriculum for SaaS solutions.",
      "target_audience": [
        "Instructional Designers working in Software Companies",
        "Business owners of eLearning Services or Instructional Design Services companies who serve clients that own SaaS Solutions",
        "SaaS Companies, Business Owners, Product Managers, or Entrepreneurs who want to develop education for their Products",
        "New Instructional Designers who want to be job-ready with practical tips for implementing their knowledge in a Software Company",
        "Technical Writers who want to learn course development and curriculum management strategies for SaaS Solutions",
        "SaaS or Software Trainers who want to understand the curriculum and course development processes for SaaS Solutions"
      ]
    },
    {
      "title": "The Complete Course of Apache Airflow 2025",
      "url": "https://www.udemy.com/course/airflow-course/",
      "bio": "Learn Apache Airflow in a Professional way. Become an expert in Data Pipelines and Workflows, from ZERO to HERO!",
      "objectives": [
        "At the end of the course you will fully master Apache Airflow, to be able to programmatically author, schedule, and monitor complex workflows from scratch",
        "You will be able to conduct Apache Airflow projects step by step, understanding all the logic and ending with advanced practical examples and complete projects",
        "You will establish a foundational understanding of Apache Airflow and its primary components",
        "You will learn to install and set up Apache Airflow using various methods and explore its web interface",
        "You will develop skills to write, organize, and manage DAGs effectively using best practices",
        "You will understand the different types of operators and executors to manage and execute tasks efficiently",
        "You will master techniques for monitoring and logging to manage DAG runs and task statuses effectively",
        "You will learn to scale Apache Airflow and configure high availability setups for production environments",
        "You will explore advanced features of Apache Airflow and learn to integrate it with external systems",
        "You will develop skills in testing, debugging, and deploying DAGs and tasks using best practices",
        "You will design and implement a complex, real-world workflow using Apache Airflow, integrating all learned concepts",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the hands-on projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to Apache Airflow": [
          "Welcome to the course",
          "Introduction to Apache Airflow",
          "Quiz",
          "Understanding DAGs (Directed Acyclic Graphs) and operators"
        ],
        "Apache Airflow Architecture": [
          "Components of Apache Airflow: Scheduler, Executor, Metadata Database, Web Server",
          "Understanding the role of each component in workflow orchestration"
        ],
        "Installation and Setup": [
          "Installing Apache Airflow using different methods (e.g., pip, Docker)-1",
          "Installing Apache Airflow using different methods (e.g., pip, Docker)-2",
          "Exploring Airflow's web interface"
        ],
        "Writing and Managing DAGs": [
          "Understanding DAGs in detail",
          "How to Write DAGs",
          "Best practices for organizing and managing DAG code",
          "How to Write DAGs Assignment"
        ],
        "Operators and Executors": [
          "Understanding Executors",
          "Understanding different types of operators (BashOperator, PythonOperator, etc.)",
          "Operators and Executors Assignment"
        ],
        "Monitoring and Logging": [
          "Monitoring DAG runs and task statuses",
          "Monitoring and Logging Assignment"
        ],
        "Scaling and High Availability": [
          "Scaling Airflow horizontally and vertically",
          "Configuring High Availability (HA) setups for production deployments-1",
          "Configuring High Availability (HA) setups for production deployments-2"
        ],
        "Advanced Features and Integrations": [
          "Working with sensors for external triggers and dependencies",
          "Integrating Airflow with external systems"
        ],
        "Testing and Debugging": [
          "Writing unit tests for DAGs and tasks",
          "Deployment and Best Practices",
          "Practical Assignment"
        ],
        "Designing and implementing a real-world workflow using Apache Airflow": [
          "Final Project-1",
          "Final Project-2",
          "Final Project-3",
          "Final Project-4",
          "Final Project-5",
          "Course Closure"
        ]
      },
      "requirements": [
        "Having basic notions Data Pipelines can help, but the course starts from scratch",
        "Preparing and installing the needed environment to follow the practical sessions (if you don't know how, don't worry, it's very easy, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become an Apache Airflow professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that Data Engineers, Data Scientists, DevOps, Software Engineers, IT Professionals, Students... can learn Apache Airflow from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working in data engineering, we have realized that nowadays mastering Apache Airflow for efficient and maintainable orchestration of complex workflows is very necessary across diverse systems. Knowing how to use this tool can give you many job opportunities and many economic benefits, especially in the world of IT.\nThe big problem has always been the complexity to perfectly understand Apache Airflow requires, since its absolute mastery is not easy. In this course we try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step, detailed and hands-on examples of every concept.\nWith almost 7 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master Apache Airflow. The course will teach you how to proficiently deploy, manage, and optimize workflows, ensuring streamlined automation and robust data pipeline in a practical way, from scratch, and step by step.\nWe will start with the setup and installation of the needed work environment on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to Apache Airflow and course dynamics\nMaster installing and configuring Apache Airflow\nCreate and organize DAGs effectively\nDifferent operators and executors to define and run tasks\nMonitor workflow execution and task statuses\nScale Airflow installations and ensure availability\nExplore advanced features and integrate with external systems\nTest, debug, and deploy Airflow workflows\nMastery and application of absolutely ALL the functionalities of Apache Airflow\nQuizzes, Practical exercises, complete projects and much more!\nIn other words, what we want is to contribute our grain of sand and teach you all those things that we would have liked to know in our beginnings and that nobody explained to us. In this way, you can learn to build and manage a wide variety of projects and make versatile and complete use of Apache Airflow. And if that were not enough, you will get lifetime access to any class and we will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning Apache Airflow has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never used Apache Airflow before",
        "Data Engineers, Data Scientists, DevOps Engineers, Software Engineers, IT Professionals, Students... who want to learn a new way to create Directed Acyclic Graphs (DAGs)",
        "Intermediate or advanced Airflow users who want to improve their skills even more!"
      ]
    },
    {
      "title": "Data Structures : Binary Tree Animations and Implementations",
      "url": "https://www.udemy.com/course/data-structures-algorithms-java/",
      "bio": "Learn Binary Tree Data Structures in Java through Animations and Implementations.",
      "objectives": [
        "Step by Step approach to visualize Binary Tree Data Structures",
        "Students will master in and out of Binary Tree Data Structures through animations and implementations",
        "Learn Binary Tree through Animations and Implementations",
        "Learn Binary Tree Traversals through Animations and Implementations"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started",
          "Introduction to Course"
        ],
        "Introduction to Binary Tree": [
          "How to represent a Binary Tree in Java ?",
          "How to implement a Binary Tree in Java ?"
        ],
        "Binary Tree Traversals": [
          "Animation - Recursive Pre-Order traversal of a Binary Tree in Java",
          "Implementation - Recursive Pre-Order traversal of a Binary Tree in Java",
          "Animation - Iterative Pre-Order traversal of a Binary Tree in Java",
          "Implementation - Iterative Pre-Order traversal of a Binary Tree in Java",
          "Animation - Recursive In-Order traversal of a Binary Tree in Java",
          "Implementation - Recursive In-Order traversal of a Binary Tree in Java",
          "Animation - Iterative In-Order traversal of a Binary Tree in Java",
          "Implementation - Iterative In-Order traversal of a Binary Tree in Java"
        ],
        "Bonus Section": [
          "Bonus lecture - A must read !!!"
        ]
      },
      "requirements": [
        "The basics of Java programming.",
        "Any IDE - Eclipse, Netbeans or IntelliJ"
      ],
      "description": "Binary Trees Course: A Step-by-Step Guide\nAre you eager to master binary trees? This comprehensive course is designed to equip you with the expertise you need. By delving into multiple problems and their solutions with detailed visualizations, we'll guide you through the intricacies of binary trees, ensuring that you truly understand the concepts rather than simply memorizing them.\nThe course focuses on linked list data structures, implemented in Java. While Java is the primary programming language, students familiar with languages like JavaScript, Python, C#, C++, or C can easily grasp the concepts. Our animated slides provide clear visualizations of various data structures and their implementations, making it easier to follow along.\nThe course covers a wide range of algorithm and data structure questions to enhance your understanding and prepare you for interviews. Each question is accompanied by a solution that's demonstrated through both animated slides and live coding on an IDE. This dual approach allows you to grasp these concepts' underlying logic and practical implementation.\nBy the end of this course, you'll have a solid foundation in binary trees, enabling you to tackle complex problems and excel in technical interviews confidently.\nSo what are you waiting for? Hit the enroll button and start learning.",
      "target_audience": [
        "Beginners to Data Structures",
        "Java Programmers who want to learn Binary Tree Data Structures",
        "Beginners who want to learn Binary Tree Data Structures in Java"
      ]
    },
    {
      "title": "The Complete Parallelism Course: From Zero to Expert!",
      "url": "https://www.udemy.com/course/the-complete-parallelism-course-from-zero-to-expert/",
      "bio": "The modern Parallelism course for everyone! Master Parallelism with projects, challenges and theory",
      "objectives": [
        "Become an advanced, confident, and modern parallel computing developer from scratch",
        "Learn OpenMP and MPI from zero",
        "Become job-ready by understanding how Parallelism really works behind the scenes",
        "Parallelism fundamentals: speedup, task dependency graph, overheads, critical path, scalability, etc.",
        "How to think and work like a developer: problem-solving, researching, workflows",
        "Get fast and friendly support in the Q&A area",
        "Complex concepts like the Geometric Data Decomposition, Recursive Structures, etc.",
        "Practice your skills with 20+ challenges and assignments (solutions included)"
      ],
      "course_content": {
        "Course Overview": [
          "Course Introduction"
        ],
        "Parallelism Fundamentals": [
          "Introduction to Parallelism",
          "Expressing Tasks",
          "Tasks and Dependencies",
          "Task Dependency Graph",
          "Task Dependency Graph Exercise",
          "Granularity and Parallelism",
          "Task Definition",
          "Advanced Granularity",
          "Speedup and Efficiency",
          "Amdahl's Law",
          "Overhead Sources",
          "Common Overheads"
        ],
        "Solved Problems - Fundamentals of Parallelism": [
          "Problem 1 - Question A",
          "Problem 1 - Question B",
          "Problem 1 - Question C",
          "Problem 2",
          "Problem 3 - Question A",
          "Problem 3 - Question B",
          "Problem 3 - Question C",
          "Problem 4 - Question A",
          "Problem 4 - Question B",
          "Problem 4 - Question C",
          "Problem 5 - Question A",
          "Problem 5 - Question B",
          "Problem 5 - Question C"
        ],
        "OpenMP - Task Decomposition": [
          "Task Decomposition Strategies",
          "Recursive Task Decomposition",
          "Introduction to OpenMP",
          "Task Generation Control",
          "Leaf Strategy",
          "Tree Strategy",
          "Depth Recursion Control",
          "Atomic Directive",
          "Critical Directive",
          "Reduction Clause",
          "Locks in OpenMP"
        ],
        "OpenMP - Task Ordering": [
          "Taskwait and Taskgroup",
          "Task Dependency Clauses",
          "Wavefront Example"
        ],
        "OpenMP - Solved Problems": [
          "Problem 1 - Question A",
          "Problem 1 - Question B",
          "Problem 2 - Question A",
          "Problem 2 - Question B",
          "Problem 2 - Question C",
          "Problem 3",
          "Problem 4",
          "Problem 5 - Question A",
          "Problem 5 - Question B",
          "Problem 6 - Question A",
          "Problem 6 - Question B"
        ],
        "MPI - Introduction": [
          "Introduction to MPI",
          "Installing MPI"
        ],
        "MPI - First Steps": [
          "First MPI Program"
        ],
        "MPI - Point-to-Point Communication": [
          "Sending and Receiving Messages",
          "Blocking Operations"
        ],
        "MPI - Collective Communications": [
          "Collective Operations",
          "Gather and Scatter Operations",
          "Parallel Sum Calculation",
          "Introduction to MPI_Allgather",
          "Parallel Maximum Element Search",
          "MPI Reduce Operations"
        ]
      },
      "requirements": [
        "No parallelism experience is necessary to take this course! I take you from beginner to expert!",
        "Basic understanding of one programming language"
      ],
      "description": "You’ve just stumbled upon the most complete, in-depth Parallelism programming course online.\nWhether you want to:\n- build the skills you need to get your first computer science programming job\n- move to a more senior software developer position\n- become a computer scientist mastering in parallel programming\n- or just learn Parallelism to be able to create your own parallel applications quickly.\n\n...this complete Parallelism and Concurrency Masterclass is the course you need to do all of this, and more.\n\n\nThis course is designed to give you the Parallelism skills you need to become an expert developer on parallel applications. By the end of the course, you will understand Parallelism extremely well and be able to build your own Parallel apps and be productive as a computer scientist and software developer.\n\n\nWhat makes this course a bestseller?\nLike you, thousands of others were frustrated and fed up with fragmented Youtube tutorials or incomplete or outdated courses which assume you already know a bunch of stuff, as well as thick, college-like textbooks able to send even the most caffeine-fuelled coder to sleep.\nLike you, they were tired of low-quality lessons, poorly explained topics, and confusing info presented in the wrong way. That’s why so many find success in this complete Parallel Programming developer course. It’s designed with simplicity and seamless progression in mind through its content.\n\nThis course assumes no previous coding experience and takes you from absolute beginner core concepts. You will learn the core Parallelism skills and master parallalel programming. It's a one-stop shop to learn Parallelism and Concurrency. If you want to go beyond the core content you can do so at any time.\n\n\nHere’s just some of what you’ll learn\n(It’s okay if you don’t understand all this yet, you will in the course)\nDesigning and Analysis of Parallel Applications\nTasks and Task Dependency Graph\nParallel Architectures\nBasic metrics: parallelism, execution time, speedup and scalability\nProgramming with Shared Memory: OpenMP\nSynchronization mechanisms between tasks and threads\nStatic/Dynamic Work Distribution\nGranularity\nTask Decomposition vs Data Decomposition\nParallelism Patterns: Iterative vs Divide and Conquer Task Decompositions\nData Decomposition (Geometric Decomposition vs Recursive Structures) for Architectures with Shared Memory\n\n\nWhat if I have questions?\nAs if this course wasn’t complete enough, I offer full support, answering any questions you have 7 days a week.\nThis means you’ll never find yourself stuck on one lesson for days on end. With my hand-holding guidance, you’ll progress smoothly through this course without any major roadblocks.\n\n\nThere’s no risk either!\nThis course comes with a full 30-day money-back guarantee. Meaning if you are not completely satisfied with the course or your progress, simply let me know and I’ll refund you 100%, every last penny no questions asked.\nYou either end up with Parallelism skills, go on to develop great programs and potentially make an awesome career for yourself, or you try the course and simply get all your money back if you don’t like it…\nYou literally can’t lose.\n\n\nReady to get started, developer?\nEnroll now using the “Add to Cart” button on the right, and get started on your way to creative, advanced Parallel Programming brilliance. Or, take this course for a free spin using the preview feature, so you know you’re 100% certain this course is for you.\nSee you on the inside (hurry, OpenMP is waiting!)",
      "target_audience": [
        "Take this course if you want to gain a true and deep understanding of Parallelism",
        "Take this course if you have been trying to learn Parallelism but: 1) still don't really understand Parallelism, or 2) still don't feel confident to code real apps",
        "Take this course if you already know Parallelism and are looking for an advanced course. This course includes expert topics!"
      ]
    },
    {
      "title": "Ultimate Docker Guide with Interview Preparation",
      "url": "https://www.udemy.com/course/ultimate-docker-guide-with-interview-preparation/",
      "bio": "Learn all the needed skills with Docker and Land your Job Guarantee",
      "objectives": [
        "What is Docker and why",
        "VM vs Containers",
        "How Docker works Architecture",
        "Docker Overview",
        "Docker Engine",
        "Docker Images",
        "Docker Containers",
        "Docker Networking",
        "Docker Commands",
        "Containers Management",
        "Our first Nginx Container",
        "How to handle Dockerfile",
        "Docker compose app py file",
        "Interview Preparation"
      ],
      "course_content": {
        "Teaser Video": [
          "Teaser Video"
        ],
        "Introduction": [
          "What is Docker and why",
          "How Docker works Architecture",
          "VM vs Containers",
          "Install Docker On Linux",
          "Install Docker On MAC"
        ],
        "Learn Docker From the scratch": [
          "Docker Overview",
          "Docker Engine",
          "Docker Images",
          "Docker Containers",
          "Docker Storage",
          "Docker Networking",
          "Docker Commands Overview",
          "Dockerfile Basics",
          "Compose Basics",
          "Hello World Container",
          "Ubuntu Container",
          "Containers Management",
          "Images Management",
          "Our first Nginx Container",
          "Nginx Custom",
          "Dockerfile part1",
          "Dockerfile part2",
          "compose INTRO",
          "compose YAML Syntax",
          "compose app py file",
          "compose Dockerfile",
          "compose docker app py",
          "compose up",
          "compose bind mount",
          "compose more option"
        ],
        "Interview Preparation": [
          "Docker Interview Preparation Part 1",
          "Docker Interview Preparation Part 2",
          "Docker Interview Preparation Part 3",
          "Docker Interview Preparation Part 4"
        ]
      },
      "requirements": [
        "Nothing just Patience and Eager to Learn !"
      ],
      "description": "DevOps is a combination of software development and information technology operations that enables businesses to deliver applications at a faster pace. It brings together development and operations teams so there are fewer redundancies in the software development process.\nDevSecOps is a culture shift in the software industry that aims to bake security into the rapid-release cycles that are typical of modern application development and deployment.\n\n\nDevOps has revolutionized workplaces in many ways. The number of DevOps-related jobs are increasing, while its rank as an in-demand job.\n\n\nDevOps is important because it's a software development and operations approach that enables faster development of new products and easier maintenance of existing deployments.\n\n\nWhat is containerization?\nContainerization is the packaging of software code with just the operating system (OS) libraries and dependencies required to run the code to create a single lightweight executable—called a container—that runs consistently on any infrastructure. More portable and resource-efficient than virtual machines (VMs), containers have become the de facto compute units of modern cloud-native applications.\n\n\nWhat is Docker ?\nDocker is a set of platform as a service products that use OS-level virtualization to deliver software in packages called containers. Containers are isolated from one another and bundle their own software, libraries and configuration files; they can communicate with each other through well-defined channels.",
      "target_audience": [
        "DevOps Engineers",
        "DevSecOps Engineers",
        "Developers",
        "System Administrator",
        "IT Engineers"
      ]
    },
    {
      "title": "Introduction Course to RDM building management",
      "url": "https://www.udemy.com/course/rdm-bms-training-introduction-course/",
      "bio": "Building Management Training (RDM) is the perfect for those who have never had the opportunity to explore BMS systems.",
      "objectives": [
        "Students will gain a better knowledge on how to program the RDM 650 controller."
      ],
      "course_content": {
        "Fee Sample Video": [
          "Fee Sample Video"
        ],
        "The course": [
          "Disclaimer",
          "Download & Install the software",
          "Navigating the TDB software",
          "Inputs & Outputs",
          "Sequence control project (Video 1)",
          "Sequence control project (Video 2)",
          "Sequence control project (Video 3)",
          "Sequence control project (Video 4)",
          "Linking temperature to control sequence (Video 5)"
        ],
        "The End": [
          "The End"
        ]
      },
      "requirements": [
        "No previous BMS knowledge is required for students wishing to take this course. As this introduction course is software based. There is no BMS hardware required. Students are required to have a computer /Laptop in order to take this course."
      ],
      "description": "Are you a BMS engineer who is looking to add a new system to your knowledge or someone who is looking to get into the world of building controls and you want a place to start? If this is the case then this is the right course for you. With this introduction course to the RDM BMS software and a project that will help you get a little knowledge on how to put software together. This course provides you with a step by step guide and will take you from beginner to intermediate level.",
      "target_audience": [
        "BMS engineers looking to expand their knowledge or people looking to get into BMS."
      ]
    },
    {
      "title": "PySpark - Build DataFrames with Python, Apache Spark and SQL",
      "url": "https://www.udemy.com/course/pyspark-build-dataframes-with-python-apache-spark-and-sql/",
      "bio": "Build an amazing DataFrames with Python, Apache Spark, and SQL",
      "objectives": [
        "Create big data streaming pipelines with Spark using Python",
        "Learn how to apply Spark on distributed Dataframes",
        "Use Python with Big Data on a distributed framework (Apache Spark)"
      ],
      "course_content": {
        "00 Course Overview": [
          "Project Preview",
          "What Is Apache Spark",
          "What Are Resilient Distributed Datasets",
          "What Is A Dataframe",
          "What You'll Need",
          "Source Files"
        ],
        "01 Mammoth Interactive Courses Introduction": [
          "About Mammoth Interactive",
          "How To Learn Online Effectively",
          "Source Files"
        ],
        "02 Introduction to Python (Prerequisite)": [
          "Intro To Course And Python",
          "Variables",
          "Type Conversion Examples",
          "Operators",
          "Collections",
          "List Examples",
          "Tuples Examples",
          "Dictionaries Examples",
          "Ranges Examples",
          "Conditionals",
          "If Statement Examples",
          "Loops",
          "Functions",
          "Parameters And Return Values Examples",
          "Classes And Objects",
          "Inheritance Examples",
          "Static Members Examples",
          "Summary And Outro"
        ],
        "03 Build DataFrames from Spreadsheets with PySpark": [
          "Start A Spark Session",
          "Load Data As A CSV",
          "Perform Basic Dataframe Operations",
          "Format Dataframe Table",
          "Perform Dataframe Math Operations",
          "Perform Dataframe Queries",
          "Build SQL Queries With Spark",
          "Source Files"
        ]
      },
      "requirements": [
        "No necessary experience needed"
      ],
      "description": "This course covers all the fundamentals about Apache Spark streaming with Python and teaches you everything you need to know about developing Spark streaming applications using PySpark, the Python API for Spark. At the end of this course, you will gain in-depth knowledge about Spark streaming and general big data manipulation skills to help your company to adapt Spark Streaming for building big data processing pipelines and data analytics applications. This course will be absolutely critical to anyone trying to make it in data science today.\nSpark can perform up to 100x faster than Hadoop MapReduce, which has caused an explosion in demand for this skill! Because the Spark 2.0 DataFrame framework is so new, you now have the ability to quickly become one of the most knowledgeable people in the job market!\nThis course will teach the basics with a crash course in Python, continuing on to learning how to use Spark DataFrames with the latest Spark 2.0 syntax! Once we've done that we'll go through how to use the MLlib Machine Library with the DataFrame syntax and Spark. All along the way, you'll have exercises and Mock Consulting Projects that put you right into a real-world situation where you need to use your new skills to solve a real problem!\nWe also cover the latest Spark Technologies, like Spark SQL, Spark Streaming, and advanced models like Gradient Boosted Trees! After you complete this course you will feel comfortable putting Spark and PySpark on your resume! This course also has a full 30-day money-back guarantee and comes with a LinkedIn Certificate of Completion!\nIf you're ready to jump into the world of Python, Spark, and Big Data, this is the course for you!",
      "target_audience": [
        "Someone who knows Python and would like to learn how to use it for Big Data",
        "Someone who is very familiar with another programming language and needs to learn Spark",
        "Developers transferring from other languages",
        "Python Developers looking to get better at Data Streaming",
        "Spark Developers eager to expand their skills."
      ]
    },
    {
      "title": "Cooling Load Estimation Using HAP 5.1 - Arabic",
      "url": "https://www.udemy.com/course/cooling-load-estimation-using-hap-51/",
      "bio": "Build a good knowledge of accurate estimation of cooling load , Form the principles to creating a complete project",
      "objectives": [
        "The importance of accurate Load Estimation",
        "The Main Load Components (External/Internal/System).",
        "The Difference between Zone, Space and System.",
        "Principles of heat transfer.",
        "How to read the Psychometric Chart",
        "Introduction to HAP 5.1 Program",
        "How to choose the weather conditions.",
        "How to build the project libraries",
        "How to create the spaces and define the different loads.",
        "Introduction to HVAC systems(DX & Chilled water) .",
        "Different types of DX Systems (Split units, Package Units, VRF ,…).",
        "The main components of Chilled Water Systems (Chiller ,cooling tower ,Pumps, AHU,FCU ).",
        "How to create the different types of systems on HAP Program.",
        "How to create Chiller plant on HAP Program.",
        "How to generate reports from HAP program."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Cooling Load",
          "Zone, Space and System",
          "Load Estimation Methods",
          "Principles of heat transfer",
          "Measuring Heat Quantities",
          "Sensible Load Vs Latent Load"
        ],
        "Psychometric Chart": [
          "Introduction to Psychometric Chart",
          "Properties of Air",
          "Process on Psychometric Chart"
        ],
        "Weather Conditions": [
          "Introduction to HAP 5.1 Program",
          "Location and Design Temperatures",
          "Clearance , Reflectance and soil conductivity",
          "Appling on HAP 5.1",
          "ASHRAE Meteo"
        ],
        "Project Libraries": [
          "Schedules",
          "Walls And Roofs",
          "Windows and Doors",
          "Shading"
        ],
        "Define Space Properties": [
          "Space Properties - General",
          "Space Properties - Internals",
          "Space Properties - Walls and Roofs",
          "Space Properties - Infiltration, Floors and Partitions",
          "Space Properties - Reports and Operations"
        ],
        "Appling On Project": [
          "Reviewing the project",
          "Starting A new project, Weather and Project Libraries",
          "Arch. Drawings preparation",
          "Define First Floor Spaces",
          "Define Ground Floor Spaces"
        ],
        "Introduction to systems": [
          "Refrigeration Cycle",
          "Introduction to DX-Systems",
          "DX-Systems on HAP 5.1",
          "Chilled Water System & Chillers",
          "Cooling Tower And Pumps",
          "Air Terminal Units",
          "Create FCU System on HAP 5.1",
          "Create AHU System on HAP 5.1 - General",
          "Create AHU System on HAP 5.1 - System Components",
          "Create AHU System on HAP 5.1 - Zone and Sizing Data",
          "Different HAP Reports",
          "Plant Properties on HAP 5.1"
        ],
        "Appling On project": [
          "Appling On project"
        ]
      },
      "requirements": [
        "No pervious requirements"
      ],
      "description": "Hello Every one ,\nThe importance of accurate cooling load calculation is very essential to make a good HVAC design ,choosing the right systems ,suitable selection of different equipment and even for building energy consumption after stating , we will start this course by learning the fundamental of cooling load , the used units , different types of loads and we will study the importance of psychrometric chart learning  the different parameters and process of air .\n\nWe will also emphasize on using Hourly analysis program HAP  5.1 the latest version of carrier program  , we will learn how to define the weather , Project libraries , Space properties , System Properties ,Plant properties and how to generate the different types of reports and how to read this reports .\n\nChoosing the suitable system is very important , so we will learn the different types of Dx-Systems , chilled water system ,why we use refrigerant , the main components of Vapor compression cycle , the different types of chillers , air cooled vs water cooled , absorption chillers , cooling tower components , Pumps , and different types of terminal coils (Fan Coil Unit & Air handling Unit ).\n\nobjectives :\n1. The importance of accurate Load Estimation.\n2. The Main Load Components (External/Internal/System).\n3. The Difference between Zone, Space and System.\n4. Principles of heat transfer.\n5. How to read the Psychometric Chart.\n6. Introduction to HAP Program.\n7. How to choose the weather conditions.\n8. How to build the project libraries.\n9. How to create the spaces and define the different loads.\n10. Introduction to HVAC systems (DX & Chilled water) .\n11. Different types of DX Systems (Split units, Package Units, VRF ,…).\n12. The main components of Chilled Water Systems (Chiller ,cooling tower ,Pumps, AHU,FCU ).\n13. How to create the different types of systems on HAP Program.\n14. How to create Chiller plant on HAP Program.\n15. How to generate reports from HAP program.",
      "target_audience": [
        "HVAC Design Engineers",
        "Faculty of Engineering Students - Mechanical Department"
      ]
    },
    {
      "title": "Software Development Mastery: Antipatterns",
      "url": "https://www.udemy.com/course/decoding-antipatterns/",
      "bio": "Comprehensive Guide to Best Practices & Code Refactoring",
      "objectives": [
        "What are Antipatterns: Learn what antipatterns are, their impact on software projects, and how to recognize and avoid them.",
        "Common Antipatterns: Explore common antipatterns in code, such as god objects and spaghetti code, and learn how to avoid them.",
        "Solutions for Antipatterns: Discover best practices and techniques for writing clean, maintainable, and performant code that avoids antipatterns.",
        "Antipatterns in Software Design: Learn how antipatterns can manifest in software design and how to avoid them.",
        "Antipatterns in Software Processes: Learn how antipatterns can manifest in software processes and how to avoid them.",
        "Best Practices and Guidelines: Discover best practices and guidelines for writing high-quality code and avoiding antipatterns.",
        "Case Studies: Study real-world examples of antipatterns in software projects and learn how they were resolved. Gain practical skills for identifying and avoidin"
      ],
      "course_content": {
        "Introduction": [
          "Definition Of Antipatterns",
          "Recognizing Antipatterns",
          "History Of Antipatterns",
          "Congratulations"
        ],
        "SOLID Design Principles": [
          "What is Single Responsibility Principle?",
          "What is Open/Closed Principle?",
          "What is Liskov Substitution Principle?",
          "What is Interface Segragation Principle?",
          "What is Dependency Inversion Principle?"
        ],
        "Golden Hammer Antipattern": [
          "Golden Hammer",
          "Golden Hammer JavaScript Example and Refactoring",
          "Golden Hammer C# Example and Refactoring",
          "Golden Hammer Python Example and Refactoring"
        ],
        "God Object": [
          "The God Object",
          "God Object Javascript Example and Refactoring",
          "God Object Dotnet Example and Refactoring",
          "God Object Python Example and Refactoring"
        ],
        "Copy Paste Syndrome": [
          "Copy Paste Syndrome",
          "Copy Paste Example JS",
          "Copy Paste Example C#",
          "Copy Paste Example Python"
        ],
        "Lava Flow": [
          "The Lava Flow",
          "Lava Flow Example Javascript and Refactoring",
          "Lava Flow Example Dotnet and Refactoring",
          "Lava Flow Example Python and Refactoring"
        ],
        "Spaghetti Code": [
          "Spaghetti Code",
          "Guess Game C#",
          "Roll Game Js",
          "Pygame Python example"
        ],
        "Primitive Obsession": [
          "Primitive Obsession",
          "Primitive Obsession Example C# and Refactoring",
          "Primitive Obsession Example Pyhthon and Refactoring",
          "Primitive Obsession Example Javascript and Refactoring"
        ],
        "Big Ball Of Mud": [
          "The Big Ball Of Mud",
          "Treasure Game Intro JS",
          "Treasure Game With Antipattern",
          "Treasure Game Refactored JS",
          "Ordering System Refactored",
          "Cave Game Refactored"
        ],
        "Refactoring and Addressing Antipatterns": [
          "Technigues for refactoring"
        ]
      },
      "requirements": [
        "Basic programming experience"
      ],
      "description": "Embark on a comprehensive journey to master software development best practices with our meticulously crafted Udemy course, \"Mastering Software Development: Antipatterns to SOLID Principles.\" This course is a treasure trove for aspiring and seasoned developers alike, aiming to elevate your coding skills and enhance your software design acumen.\nSection 1: Introduction to Antipatterns Dive into the world of antipatterns with our introductory section. Begin with a clear definition, understanding the essence of antipatterns and their impact on software development. Preview Lecture 1 to get a taste of the insights you'll gain. Progress to recognizing these patterns in your code, delve into their historical context, and celebrate your newfound knowledge with a congratulatory wrap-up.\nSection 2: Embracing SOLID Design Principles Transition from antipatterns to the pillars of robust software design with our detailed exploration of SOLID principles. Each lecture is dedicated to one principle, starting from the Single Responsibility Principle to the Dependency Inversion Principle. These concepts are not just theories; they are the backbone of maintainable and scalable code.\nSection 3: Golden Hammer Antipattern Uncover the nuances of the 'Golden Hammer' antipattern, where a familiar technology is overused, regardless of its suitability. With previews available, witness practical examples and refactoring techniques in JavaScript, C#, and Python, transforming knowledge into actionable skills.\nSection 4: God Object Learn about the 'God Object' antipattern, where a single object holds too much responsibility and power within the codebase. Through examples in JavaScript, .NET, and Python, you'll learn to refactor and distribute responsibilities for cleaner, more modular code.\nSection 5: Copy Paste Syndrome Address the pitfalls of 'Copy Paste Syndrome' with our focused lectures. Explore how repeated code can be refactored across different languages, enhancing your ability to recognize and remedy this common issue.\nSection 6: Lava Flow The 'Lava Flow' antipattern signifies hardened, obsolete solutions within the code. Our course provides practical refactoring sessions in JavaScript, .NET, and Python to help you navigate and modernize legacy code effectively.\nSection 7: Spaghetti Code Tackle 'Spaghetti Code' head-on with engaging lectures and gaming examples in C#, JavaScript, and Python. Learn to unravel tangled logic and create a codebase that's easy to read, maintain, and extend.\nSection 8: Primitive Obsession Overcome 'Primitive Obsession', the overuse of primitives over object-oriented solutions. Through refactoring examples in C#, Python, and JavaScript, transform your approach to data structures and improve your code's expressiveness.\nSection 9: Big Ball Of Mud Decode the 'Big Ball Of Mud' antipattern, characterized by haphazardly structured systems. Engage with game-based examples in JavaScript, learning to refactor and evolve towards a structured and clean code environment.\nSection 10: Refactoring and Addressing Antipatterns Conclude your learning expedition with advanced techniques for refactoring. Equip yourself with strategies to identify, address, and prevent antipatterns, ensuring your codebase remains healthy and efficient.\nThis course is not just a series of lectures; it's an interactive, hands-on experience that will challenge you to think critically about software design. With previews available for select lectures, you can start your learning journey right away. Whether you're looking to prevent common coding faux pas or striving to adopt industry-standard design principles, this course is your gateway to excellence in software development. Join us, and transform your coding skills from good to great!",
      "target_audience": [
        "Beginners to experts",
        "Software Developers",
        "Tech Leads",
        "Software Architects",
        "Quality Assurance/Test Engineers"
      ]
    },
    {
      "title": "Junit 5 Jupiter Under JDK 16 In Details Step by Step",
      "url": "https://www.udemy.com/course/junit-5-jupiter-under-jdk-16-in-details-step-by-step/",
      "bio": "Unit Testing use Junit 5 Jupiter,Vintage,Platform, Mockito,Powermock,Cucumber, Selenium,Spring Boot",
      "objectives": [
        "JUnit 3,4 Framework Retrospect & Junit 5 Architecture Overview",
        "JUnit 5 Juipter Foundation",
        "JUnit 5 Juipter Advancement",
        "Migrate legacy JUnit 4 test code",
        "Integration Other Framework(Mockito,Powermock,Cucumber,Selenium,Spring,etc.)"
      ],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Environments Requirements"
        ],
        "JUnit Framework Retrospect and JUnit 5 Overview": [
          "Quality Engineering Process",
          "JUnit 3 framework usage retrospect",
          "JUnit 4 framework usage retrospect",
          "JUnit 4 Runner of Parameterized",
          "JUnit 4 Runner of Theories",
          "JUnit 4 Runner Limitations and Junit Rule (since 4.7)",
          "JUnit 4 framework limitations and Junit 5 Framework design principles",
          "JUnit 5 Framework Architecture and Components",
          "JUnit 5 quick start & integrate with Maven",
          "Custom JUnit 5 Platform Launcher understand TestEngine in deep"
        ],
        "JUnit 5 Juipter Foundation": [
          "Jupiter test case & lambda assertion & @DisplayName",
          "Jupiter exception assertion by assertThrows & Executable",
          "Jupiter Batch assertion Executable and @Order &@Disable",
          "Jupiter @RepeatedTest and RepetitionInfo",
          "Jupiter assertTimeout and assertTimeoutPreemptively",
          "Jupiter Assumption for condition execution test cases",
          "Jupiter @Nested inner class",
          "Jupiter Tagging & Filtering for condition execution",
          "Jupiter Custom Tagging Annotation",
          "Jupiter test instance lifecycle Callback & Handler",
          "Jupiter write test cases in interface default method",
          "Jupiter ConditionExecution and build-in Conditions",
          "Jupiter integration with hamcrest matchers"
        ],
        "Junit 5 Jupiter Advancement": [
          "Jupiter Dependency Injection & ParameterResolver Introduction",
          "Implement a random data provider by custom ParameterResolver",
          "DynamicTest generate the test cases in runtime",
          "@TestFactory more definition forms and DynamicContainer",
          "TestTemplateInvocationContextProvider and @TestTemplate",
          "Implement @Repeated function deep understand TestTemplate",
          "ParameterizedTest&ValueSource&EnumSource",
          "ParameterizedTest&CsvSource&CsvFileSource&MethodSource",
          "ParameterizedTest Argument Aggregation",
          "ParameterizedTest&ArgumentsSource & data type conversion",
          "Parallel execution test cases junit-platform.properties",
          "Parallel execution test cases @Execution & ResourceLock"
        ],
        "Migrate the legacy test code developed by Junit 4": [
          "Introduce the JUnitPlatform into Junit 4",
          "Migrate the legacy test code in Jupiter platform",
          "Migrate the Junit 4 build-in Rules in Jupiter platform"
        ],
        "Integration other framework": [
          "Jupiter integration with Mockito-1",
          "Jupiter integration with Mockito-2",
          "Jupiter integration with Powermock",
          "Jupiter integration with Cucumber-1",
          "Jupiter integration with Cucumber-2",
          "Jupiter integration with Selenium automation test Web App",
          "Jupiter integration with SpringBoot test Restful endpoint-1",
          "Jupiter integration with SpringBoot test Restful endpoint-2"
        ]
      },
      "requirements": [
        "Basic knowledge of unit testing(Junit 3,4)",
        "Basic Java knowledge (version 1.8 or above)"
      ],
      "description": "****Please enable the vedio cc(captions) function ****\nThe course covers the basics of Junit 5, advanced usage, and integration with other testing great tools in detail.\n1. JUnit 5 Jupiter Introduction\n1.1 Quality Engineering Process\n1.1.1 Quality Planning\n1.1.2 Quality Assurance\n1.1.3 Post-Quality Assurance\n1.2 Why Unit Testing?\n1.3 JUnit Framework Retrospect\n1.3.1 JUnit 3\n1.3.1.1 Standard Test Case & Lifecycle\n1.3.1.2 TestSuite\n1.3.2 JUnit 4\n1.4.2.1 Standard Test Case & Lifecycle\n1.4.2.2 @RunWith & Runner\nParameterized\nTheories\nMockitoJUnitRunner\n1.4.2.3 @Rule\n1.3.3 JUnit 5 Jupiter\n1.3.3.1 JUnit 3&4 defect\n1.3.3.2 JUnit 5 inception\n1.3.3.3 JUnit 5 architecture\n1.2.4 JUnit 5 Jupiter Quick Start\nJunit 5 Jupiter\nJunit 5 TestEngine\nJunit 5 Platform Luancher\n2. JUnit 5 Juipter Basic\n2.1 Jupiter Assertion Statement\n2.2 Exception Assertion\n2.3 Batch all Assertion\n2.4 DisplayName\n2.5 Disabled\n2.6 Timeout Assertion\n2.7 RepeatTest\n2.8 Order\n2.9 Tagging & Filtering\n2.10 Nested Test Classes\n2.11 Test Instance Lifecycle\n2.12 Jupiter Extensions\n2.12.1 TestInstancePostProcessor\n2.12.2 BeforeAllCallback\n2.12.3 BeforeEachCallback\n2.12.4 BeforeTestExecutionCallback\n2.12.5 TestExecutionExceptionHandler\n2.12.6 AfterTestExecutionCallback\n2.12.7 AfterEachCallback\n2.12.8 AfterAllCallback\n2.13 Assumptions\n2.14 Integration Other Assertion framework\n2.14.1 Hamcrest\n2.14.2 AssertJ\n2.15 Condition Execution\n2.15.1 DisabledCondition\n2.15.2 DisabledOnJreCondition\n2.15.3 EnabledOnJreCondition\n2.15.4 EnabledOnOsCondition\n2.15.5 EnabledForJreRangeCondition\n2.15.6 DisabledForJreRangeCondition\n2.15.7 DisabledOnOsCondition\n2.15.8 DisabledIfEnvironmentVariableCondition\n2.15.9 DisabledIfSystemPropertyCondition\n2.15.10 EnabledIfSystemPropertyCondition\n2.15.11 EnabledIfEnvironmentVariableCondition\n2.15.12 EnabledIfCondition\n2.15.13 DisabledIfCondition\n2.15.14 Custom Condition Execution\n2.16 Test case in Interface\n3. JUnit 5 Juipter Advanced\n3.1 Dependency injection(build-in)\n3.1.1 TestInfoParameterResolver\n3.1.2 RepetitionInfoParameterResolver\n3.1.3 TestReporterParameterResolver\n3.1.4 Custom ParameterResolver\n3.2 Dynamic Tests-TestFactory\n3.3 DynamicContainer\n3.4 Test Sources\n3.5 Test Templates\n3.6 Parameterized tests\n3.7.1 ValueSource\n3.7.2 EnumSource\n3.7.3 MethodSource\n3.7.4 CsvSource\n3.7.5 CsvFileSource\n3.7.6 ArgumentsSource\n3.7.7 Argument conversion\n3.7.7.1 Implicit conversion\n3.7.7.2 Explicit conversion\n3.7.8 Custom Display Names\n3.7 Parallel Execution\n4. Migrate legacy JUnit 4 test code\n4.1 Jupiter tests in JUnit 4\n4.2 Migration from JUnit 4 to JUnit 5\n4.2.1 Junit4 vs Junit5\n4.2.2 Run Junit 4 at Junit 5 platform\n4.2.3 Junit 4 @Rule at Junit 5 platform\n5. Integration\n5.1 Mockito\n5.2 Powermock\n5.3 Selenium\n5.4 Cucumber\n5.5 Spring Boot",
      "target_audience": [
        "Java Developer",
        "JVM(Scala,Groovy,Koltin) Language Develop Engineer",
        "QA Developer"
      ]
    },
    {
      "title": "Siemens PLC Masetry (Beginner to Advance)",
      "url": "https://www.udemy.com/course/siemens-plc-masetry-beginner-to-advance/",
      "bio": "Master Siemens PLCs for Seamless OT Integration",
      "objectives": [
        "Gain a solid understanding of PLC principles, components, and their industrial applications.",
        "Develop proficiency in programming Siemens PLCs using the TIA PORTAL software.",
        "Learn essential networking concepts to integrate Siemens PLCs into industrial automation systems.",
        "Advance PLC Concepts like Python With PLC IT-OT Integration"
      ],
      "course_content": {
        "Basic Siemens PLC": [
          "Introduction to PLCs: Types & Advantages of PLC",
          "Block Diagram and Architecture of PLC",
          "Scan Time in PLC",
          "PLC Sinking and Sourcing Explained",
          "Overview of Siemens PLCs",
          "Download & Installation of TIA Portal Software",
          "Creating a New Project in Siemens Tia Portal"
        ],
        "Hardware Configuration & Addressing of PLC": [
          "Hardware overview: S7-1500 series PLC",
          "Addressing in Siemens PLC",
          "PLC Simulation in TIA Portal"
        ],
        "Gates & Timer in PLC": [
          "Basic Logic Gates in PLC Programming – AND, OR, NOT",
          "Holding Contact and Breaking Contact in PLC",
          "Introduction to Timers in Siemens PLC",
          "Up & Down Counter in Siemens PLC"
        ],
        "Advanced Logic, Comparison, Math, and Scaling Instructions": [
          "Bit Logic Instructions & Edge Detection in PLC",
          "Siemens PLC Comparator Instructions",
          "Math Instructions in Siemens PLC Programming",
          "Move, Convert and Round Instructions",
          "Scaling/unscaling in PLC Programming"
        ],
        "Siemens PLC HMI Communication": [
          "Step-by-step guide on creating different Object in HMI",
          "Mapping PLC tags to HMI objects for real-time control and monitoring"
        ],
        "Function Block Programming in Siemens": [
          "Basics of function block , functions and data blocks? FBd Creation",
          "advanced data types (UDT, Arrays, etc.) & HMI Faceplate Integration, Library"
        ],
        "PLC Communication": [
          "PLC-PLC Communication- PUT GET",
          "PYTHON-Siemens PLC Communication SNAP-7"
        ]
      },
      "requirements": [
        "The course will cover fundamental concepts and gradually progress to more advanced topics, ensuring accessibility for those new to Siemens PLCs and industrial automation."
      ],
      "description": "Unlock the world of Siemens PLC and HMI with our comprehensive training! Specifically crafted for beginners, this course guides you through programming Siemens S7-1500 PLC and HMI using Siemens TIA- Total Integrated Automation software.\nWhat You'll Get:\nHigh-quality video tutorials\nPresentation copies and PLC codes for every lecture\nHands-on learning with Ladder Logic and a touch of FBD (Functional Block Diagram)\nQuizzes to assess your understanding\nComprehensive coverage of PLC communication protocols: Ethernet, Profinet, Modbus\nAdvanced concepts like Python PLC communication\nCourse Highlights:\nIntroduction & Exercises:\nDive into each command with detailed introductory lectures and practical exercises.\nQuiz Evaluation:\nAssess your performance and reinforce your learning with quizzes after each section.\nAdvanced PLC Communication:\nMaster PLC communication protocols such as Ethernet, Profinet, and Modbus.\nExplore advanced concepts like Python PLC communication.\nFree Updates:\nBuy today and receive free updates to stay current with the latest Siemens PLC and HMI advancements.\nAfter Completing the Course:\nInstall and program Siemens S7-1500 PLC and  HMI confidently.\nMaster the basic fundamental commands of PLC.\nTake your skills further with the Siemens S7-1200 Advanced course for in-depth knowledge and IO-Link technology interfacing.\nIndustrial Communication like Modbus, Ethernet, Profinet\nAdvance Communication like- PLC- PYTHON Communication.\nWho Should Enroll:\nBeginners eager to kick-start their training in Siemens PLC & HMI.\nProfessionals looking to enhance their skills in industrial automation.\nAnyone interested in PLC programming for project or industrial applications.\nWhy Choose Us:\nYears of practical experience condensed into an engaging and comprehensive course.\nLifetime access to course content with free updates.\nEmbark on your PLC journey today! Enroll now to gain hands-on experience and expertise in Siemens PLC & HMI, including advanced communication protocols and Python integration.",
      "target_audience": [
        "Engineers, technicians, and professionals working in the field of industrial automation seeking to enhance their knowledge and skills specifically in Siemens PLC systems.",
        "Engineering students or recent graduates interested in pursuing a career in industrial automation, looking to gain practical insights into Siemens PLC programming and applications.",
        "Maintenance personnel and control system operators aiming to deepen their understanding of Siemens PLCs for effective troubleshooting and system maintenance.",
        "Entrepreneurs and business owners involved in industries reliant on automation, who want a foundational understanding of Siemens PLCs to make informed decisions about their automation systems.",
        "Individuals with a technical background or a keen interest in automation, even if they are new to the field, seeking to explore Siemens PLCs and their applications."
      ]
    },
    {
      "title": "Algorithms in JavaScript : Design techniques",
      "url": "https://www.udemy.com/course/algorithm-design-techniques-live-coding-in-javascript/",
      "bio": "Data Structures, Complexity Analysis,Recursion, backtracking, Dynamic Programming,Greedy algorithm, Divide and Conquer",
      "objectives": [
        "Algorithm Design in JavaScript"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "Course Resources"
        ],
        "Introduction To Algorithms": [
          "Introduction to Algorithms"
        ],
        "Complexity Analysis": [
          "Section Introduction",
          "Complexity Analysis 1",
          "Complexity Analysis 2",
          "Section Summary"
        ],
        "Recurrence Relation": [
          "Section Introduction",
          "Recurrence Relation",
          "Solving Recurrence Relation",
          "Master's Theorem",
          "Section Summary"
        ],
        "Thinking Recursively": [
          "Section Introduction",
          "Recursion",
          "Identification",
          "Approaching",
          "Problem 01 : FindingSubstrings - Logic",
          "Problem 01 : FindingSubstrings - Live Code JavaScript",
          "Problem 01 : FindingSubstrings - Complexity Analysis",
          "Problem 02 : Tower of Hanoi - Logic",
          "Problem 02 : Tower of Hanoi - Live Code JavaScript",
          "Problem 02 : Tower of Hanoi - Complexity Analysis",
          "Problem 03 : Array Product Sum - Logic",
          "Problem 03 : Array Product Sum - Live Code JavaScript",
          "Problem 03 : Array Product Sum - Complexity Analysis",
          "Problem 04 : Binary Subtree - Logic",
          "Problem 04 : Binary Subtree : Live code",
          "Problem 04 : Binary Subtree - Complexity Analysis",
          "Why and Why not Recursion",
          "Types Of Recursion",
          "Tail Recursion",
          "Summary"
        ],
        "Backtracking": [
          "Section Introduction",
          "Introduction to Backtracking",
          "Identification",
          "Approaching The Solution",
          "Problem 01 : Rat In Maze - Logic",
          "Problem 01 : Rat In Maze - Code",
          "Problem 01 : Rat In Maze - Complexity Analysis",
          "Problem 02 : N-Queens - Logic",
          "Problem 02 : N-Queens - Live Code in Javascript",
          "Problem 02 : NQueen - Complexity Analysis",
          "Problem 03 : Knight Tour Problem - Logic",
          "Problem 03 : Knight's Tour Problem - Live Code in Javascript",
          "Problem 03 : Knight Tour Problem - Complexity Analysis",
          "Problem 04 : Boggle | Word Search - Logic",
          "Problem 04 : Boggle | Word Search - Live Code in Javascript",
          "Problem 04 : Boggle | Word Search - Complexity Analysis",
          "Section Summary"
        ],
        "Divide and Conquer": [
          "Section Introduction",
          "Introduction To Divide And Conquer",
          "Identification and Approaching",
          "Problem 01 : MergeSort - Logic",
          "Problem 01 : MergeSort - Live Javascript Code",
          "Problem 01 : MergeSort - Complexity Analysis",
          "Problem 02 : QuickSort - Logic",
          "Problem 02 : QuickSort - Live Javascript Code",
          "Problem 02 : QuickSort - Complexity Analysis",
          "Problem 03 : Median Of Medians - Logic",
          "Problem 03 : Median Of Medians - Live Javascript Code",
          "Section Summary"
        ],
        "Greedy Technique": [
          "Section Introduction",
          "Introduction to Greedy",
          "Identification & Approaching the Solution",
          "Problem 01 : Fractional Knapsack - Logic",
          "Problem 01 : Fractional Knapsack - Live Code Javascript",
          "Problem 01 : Fractional Knapsack - Complexity Analysis",
          "Problem 02 : IntervalScheduling - Logic",
          "Problem 02 : IntervalScheduling - Live Code Javascript",
          "Problem 02 : IntervalScheduling - Complexity Analysis",
          "Problem 03 : Huffman Code - Logic",
          "Problem 03 : Huffman Code - Live Code Javascript",
          "Problem 03 : Huffman Code - Complexity Analysis",
          "Problem 04 : Dijkstra - Logic",
          "Problem 04 : Dijkstra Logic - Live Code Javascript",
          "Problem 04 : Dijkstra - Complexity Analysis",
          "Summary"
        ],
        "Dynamic Programming": [
          "Section Introduction",
          "Introduction to Dynamic Programming",
          "Identification",
          "Compare DP, D&C and Greedy",
          "Approaching the Solution",
          "Example 01 : Staircase Problem Explanation & Live Code",
          "Example 01 : Staircase Problem Complexity Analysis",
          "Example 02 - 0/1 Knapsack Explanation & Live code",
          "Example 02 - 0/1 Knapsack Complexity Analysis",
          "Example 03 - Coin Change Problem Explanation and Code",
          "Example 03 - Coin Change Problem Complexity Analysis",
          "Example 04 : Longest Decreasing Subsequence Explanation And Code",
          "Example 04 : Longest Decreasing Subsequence | Complexity Analysis",
          "Example 05 : Levenshtein problem",
          "Example 05 : Levenshtein Complexity Analysis",
          "Example 06 : Rod Cutting",
          "Example 06 : Rod Cutting - Complexity Analysis",
          "Example 07 : Matrix Chain Multiplication",
          "Example 07 : Matrix Chain Multiplication | Complexity Analysis",
          "Summary"
        ],
        "Famous Algorithms": [
          "Kadane's Algo",
          "Kadane's Algo Live Code Javascript",
          "Kadane's Algo Complexity Analysis",
          "BellmanFord's Algo",
          "BellmanFord's Algo Live Code Javascript",
          "BellmanFord's Algo Complexity Analysis",
          "Topological Sort : Kahn's Algo",
          "Topological Sort Live Code Javascript",
          "Topological Sort Complexity Analysis",
          "Edmon's Karp/ Ford-Fulkerson Algorithm",
          "Edmon's Karp/ Ford-Fulkerson Live Code"
        ]
      },
      "requirements": [
        "Basic Java Script"
      ],
      "description": "Algorithm Design Techniques : Live problem solving in Java Script\n\n\nAlgorithms are everywhere! One great algorithm applied sensibly can result into a System like GOOGLE!\n\n\nLarry Page, founder of google designed “Page Rank” algorithm that is behind the search in google. That is why when we search on google we generally find the most relevant result on the First Page itself.\n\n\nEvery Computer Programmer should learn how to design algorithms which are not only correct but also efficient in terms of\n\n\nTIME and SPACE!\n\n\nCompleter scientists have worked from 100s of years !! - (Put images of some of the scientists…)\n\n\nAnd derived some of the techniques that can be applied to write and design algorithms!\n\n\nSo Why to reinvent the wheel ??\n\n\nLet’s go through some of the most famous algorithm design techniques in this course!!\n\n\nOnce you will come to know these design techniques It will become very easy for you to approach a problem by identifying which technique to apply to solve that correctly and efficiently.\n\n\nWe will start this course with some measurement techniques in algorithms that is called complexity analysis so that we can measure -\n\n\nThe time and space in an algorithm when we design that.\n\n\nThen we will start with understanding recursion and deep dive into that.\n\n\nRecursion is the base of any algorithm design … because most of the algorithms has to be solved using recursion!\n\n\nRecursion is executed in computers in a very special way using stack frames… we will understand all that..\n\n\nThere are many types of recursion and we will have a look into that.\n\n\nWe will solve some classic problems like the Tower of Hanoi, Binary subtree… to understand the recursion deeply…\n\n\nAnd WE WILL WRITE THE CODE LINE BY LINE IN JAVA !! To make it very easy to understand and code…\n\n\nThen we will move into another design technique backtracking !!\n\n\nBacktracking algorithms are enhanced recursion where we can revert our decision from inside a recursion…\n\n\nWe will understand how to Identify and approach this kind of problems..\n\n\nAlso, we will solve some classical problems\n\n\nRat In Maze, NQueens, KnightsTour problems… and Code them LINE by LINE …\n\n\nThen, We will then move to the next section\n\n\nDivide and Conquer… Greedy algorithms\n\n\nAnd will take the same approach !! To understand identify and Solve some problems… and code some classic problems.\n\n\nThen there will be a very important section! Dynamic programming\n\n\nThat is not only important for Algorithms design but also, Interviews\n\n\nThis is a very favorite paradigm for the interviewer to ask questions from - We will solve a lot of problems in section along with code… and understand how to approach this kind of problem!!\n\n\nAll in all!\n\n\nBy the end of this course -\n\n\n1. You will understand how to design algorithms\n2. A lot of coding practice and design live problems in Java\n3. Algorithm Complexity analysis\nAND\nIf you are preparing for your coding Interview or doing competitive programming\n\n\nThis course will be a Big help for you!\n\n\nI think this is enough to create the THRILL !! I welcome you to the course and I am sure this will be fun!!\n\n\nIf it does not - It comes with a 30 Days money-back guarantee so don’t think twice to give it a shot…\n\n\nWelcome Again !! And See you in the course.",
      "target_audience": [
        "Want to learn Algo Designing in JavaScript"
      ]
    },
    {
      "title": "Upgrade Your Clean Code Skills to Top Industry Standards",
      "url": "https://www.udemy.com/course/upgrade-your-coding-skills-to-meet-top-industry-standards-clean-code/",
      "bio": "From Beginner to Professional coding: Master Clean Code",
      "objectives": [
        "Master clean code techniques and concepts",
        "Deeply understand various high quality code factors, other than clean code",
        "Understand essential project-scale best practices",
        "Use tools that will help you improve your coding skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How This Course is Built"
        ],
        "Clean Building Blocks": [
          "Introduction",
          "Values in Code",
          "Complex Expressions",
          "The Art of Naming",
          "Commenting",
          "Finding a Variable's Value",
          "Skill Sharpening Session",
          "Conclusion and Insights"
        ],
        "Clean Functions": [
          "Introduction",
          "Arguments List",
          "Code Duplication",
          "Guard Clauses",
          "Side Effects",
          "Levels of Abstraction",
          "Shorter Functions",
          "The Ultimate Function",
          "Skill Sharpening Session",
          "Conclusion and Meta Principles"
        ],
        "Thinking Clean - Refactoring and its Limitations": [
          "Introduction",
          "Levels of Abstraction Revisited",
          "Complex Expressions Revisited",
          "Comments Revisited Part I",
          "Comments Revisited Part II",
          "Conclusion & Refactoring Considerations"
        ],
        "Designing Clean Software Solutions": [
          "Introduction",
          "Visual Order",
          "Achieving Visual and Functional Order by Grouping",
          "Simplifying and Clarifying Your Code By Being Specific",
          "Using Optimal Solutions with Design Patterns - Part I",
          "Using Optimal Solutions with Design Patterns - Part II",
          "Building Stable Solutions by Minimizing Changes Part I",
          "Building Stable Solutions by Minimizing Changes Part II",
          "Building Stable Solutions by Using Tests Part I",
          "Building Stable Solutions by Using Tests Part II",
          "Conclusion"
        ],
        "From Clean Code to Professional Coding": [
          "Introduction",
          "The Case Against Clean Code",
          "The Case For Clean Code",
          "Clean Code vs. Other Considerations",
          "Conclusion"
        ],
        "Your Journey to Mastering Coding": [
          "Introduction",
          "Automated Tools",
          "Human Feedback",
          "Continually Improving Your Code Base's Code Quality",
          "Improving Your Team's Code Level",
          "Conclusion"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming knowledge, no matter which language",
        "Some lessons require some experience in programming"
      ],
      "description": "Improve your coding skills by learning clean code and beyond from a seasoned team leader, with over 13 years of experience in the industry.\nThis course will show you practical techniques you can use today to significantly upgrade your code's level.\nBut that's not all! This course will take you beyond just clean code techniques, to professional coding - we'll learn various of other factors that will make your code stand at the highest industry standards.\nAs mastering coding is a life long quest, I will also show share with you tools that will help you continually advance your coding skills throughout your career.\n\n\nThis course was build with the intention that its students, of all levels, will improve their coding skills and become experts in writing high quality code over time, including clean code. It will give you the basic and advance concepts and techniques, and will show you how to advance further.\n\n\nWe will look at various techniques to improve your functions, your solutions, and even your teammates coding level!\n\nWe'll dive deeper and deeper to achieve a complete understanding on what it takes to write clean code, and how it's done in practice.\n\n\nThis course will teach you clean code and much beyond.",
      "target_audience": [
        "Developers of all levels, who want to upgrade their coding skills to top industry standard",
        "Developers who want to write clean code, and understand clean code's fundamentals"
      ]
    },
    {
      "title": "[AI] Create a Object Recognition Web App with Python & React",
      "url": "https://www.udemy.com/course/create-a-object-recognition-web-app-with-python-react/",
      "bio": "Build AI-driven web apps with FastAPI and React. Discover Machine Learning with Python for developers.",
      "objectives": [
        "AI and Machine Learning Fundamentals with hands on",
        "Basic Programming in Python and Typescript",
        "Handle frameworks like FastAPI and React",
        "Build real world modern object recognition application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "AI, Machine Learning and Deep Learning",
          "Convolutional Neural Networks (CNNs)",
          "Installing VSCode",
          "VSCode Extensions",
          "Best way to take advantage of this course",
          "AI, Machine Learning and Deep Learning Quiz"
        ],
        "FastAPI and Python Setup": [
          "What is Python and FastAPI?",
          "Installing Python for MacOS",
          "Installing Python for Windows",
          "Installing and running FastAPI",
          "Another Example Route",
          "Running the server with Uvicorn",
          "Installing packages using requirements.txt"
        ],
        "React Application Setup": [
          "What is React and Typescript?",
          "Install NodeJS",
          "Create First React App with Vite",
          "ImageControl Component and Style",
          "Setting State Variables",
          "Predictions and Image Boxes Template",
          "Image Upload Input"
        ],
        "Creating and Setting Prediction Model": [
          "Explaining TensorFlow, SSD Model and Coco Dataset",
          "Adding MobileNetV2 SSD COCO Model DataSet",
          "Loading Pre-Trained Model into our App",
          "Run Inference Function",
          "Predict Route",
          "Label Map",
          "Returning Results From Prediction Route",
          "Testing Predict Route"
        ],
        "Adding Serve Data to FrontEnd": [
          "UseUploadImageHook",
          "Result Types",
          "Returning Data from Hook",
          "Using Hook in Image Control",
          "API Key",
          "HandleUpload and HandleImage",
          "Testing Image Upload",
          "Allow CORS",
          "Getting Results into Screen"
        ],
        "Additional Lectures": [
          "Splitting FrontEnd into smaller components",
          "React Props",
          "Predictions Errors and Mistakes",
          "Use cases and limitations"
        ],
        "Bonus": [
          "Bonus"
        ]
      },
      "requirements": [
        "No programming experience required. Only computer and access to internet"
      ],
      "description": "[AI] Create a Object Recognition Web App with Python & React\nBuild AI-driven web apps with FastAPI and React. Discover Machine Learning with Python for developers.\nThis comprehensive course, \"[AI] Create a Object Recognition Web App with Python & React,\" is designed to empower developers with the skills to build cutting-edge AI-powered applications. By combining the power of FastAPI, TensorFlow, and React, students will learn to create a full-stack object recognition web app that showcases the potential of machine learning in modern web development.\nThroughout this hands-on course, participants will dive deep into both backend and frontend technologies, with a primary focus on Python for AI and backend development, and TypeScript for frontend implementation. The course begins by introducing students to the fundamentals of machine learning and computer vision, providing a solid foundation in AI concepts essential for object recognition tasks.\n\n\n***DISCLAIMER*** This course is part of a 2 applications series where we build the same app with different technologies including Angular, and React. Please choose the frontend framework that fits you best.\n\n\nStudents will then explore the FastAPI framework, learning how to create efficient and scalable REST APIs that serve as the backbone of the application. This section will cover topics such as request handling, data validation, and asynchronous programming in Python, ensuring that the backend can handle the demands of real-time object recognition processing.\nThe heart of the course lies in its machine learning component, where students will work extensively with TensorFlow to build and train custom object recognition models. Participants will learn how to prepare datasets, design neural network architectures, and fine-tune pre-trained models for optimal performance. The course will also cover essential topics such as data augmentation, transfer learning, and model evaluation techniques.\nOn the frontend, students will utilize React and TypeScript to create a dynamic and responsive user interface. This section will focus on building reusable components, managing application state, and implementing real-time updates to display object recognition results. Participants will also learn how to integrate the frontend with the FastAPI backend, ensuring seamless communication between the two layers of the application.\nThroughout the course, emphasis will be placed on best practices in software development, including code organization and project structure. Students will also gain insights into deploying AI-powered web applications, considering factors such as model serving, scalability, and performance optimization.\nBy the end of the course, participants will have created a fully functional object recognition web app, gaining practical experience in combining AI technologies with modern web development frameworks. This project-based approach ensures that students not only understand the theoretical concepts but also acquire the hands-on skills necessary to build sophisticated AI-driven applications in real-world scenarios.\nWhether you're a seasoned developer looking to expand your skill set or an AI enthusiast eager to bring machine learning models to life on the web, this course provides the perfect blend of theory and practice to help you achieve your goals in the exciting field of AI-powered web development.\n\n\nCover designed by FreePik",
      "target_audience": [
        "Beginner Python, Frontend and AI developers. Students with interest in how AI works"
      ]
    },
    {
      "title": "Agile/Scrum practical guide with your virtual team",
      "url": "https://www.udemy.com/course/agilescrum-practical-guide-with-your-virtual-team/",
      "bio": "Master Agile/Scrum going through the project journey with you virtual team: from product idea inception to release",
      "objectives": [
        "Agile fundamentals",
        "Difference between Agile vs Waterfall projects",
        "Scrum fundamentals",
        "Agile values and principles",
        "Scrum fundamentals",
        "Kanban basics",
        "Create a product vision",
        "Create user stories in Jira",
        "Planning poker and other estimation techniques",
        "How to run Sprint planning",
        "Release planning and management in Jira",
        "How to run effective stand ups",
        "How to understand different types of charts used in Agile",
        "How to groom a backlog",
        "Different techniques for retrospectives",
        "Learn how to apply theoretical knowledge in real projects"
      ],
      "course_content": {
        "Introduction to Agile": [
          "Welcome to the course!",
          "Whats is Agile",
          "Agile vs Waterfall",
          "Agile Core Values and Principles",
          "Section 1 quiz"
        ],
        "Scrum Intro": [
          "Scrum Basics",
          "Kanban Basics",
          "Scrum vs Kanban",
          "Scrum Roles and Artifacts",
          "Section 2 quiz"
        ],
        "Product Scope": [
          "Creating Product Vision",
          "User Stories",
          "Acceptance Criteria",
          "Creating backlog in Jira",
          "Section 3 quiz"
        ],
        "Plan": [
          "Estimation Techniques",
          "Planning Poker",
          "Release planning",
          "Definition of Done",
          "Sprint planning",
          "Release Management",
          "Release Management in Jira",
          "Section 4 Quiz"
        ],
        "Do & Check": [
          "Jira Board Overview",
          "Daily Stand up",
          "Charts",
          "Backlog Grooming",
          "Sprint Demo",
          "Sprint Retrospective",
          "Section 5 quiz"
        ],
        "Final": [
          "Product Release",
          "Final tips!",
          "Final Quiz",
          "Bonus Lecture: How to become a Scrum Master"
        ]
      },
      "requirements": [
        "No previous Agile or Scrum experience is required"
      ],
      "description": "THIS COURSE WILL GIVE YOU NOT ONLY THEORETICAL KNOWLEDGE BUT TEACH YOU HOW TO APPLY THEORY IN REAL PROJECTS.\nNo matter what your role this course is designed for everybody.\nTheoretical Part:\nWe will start with fundamentals learning Agile values and principles, the difference between Agile and Waterfall, understand what types of projects work better with Agile and which ones with Waterfall.\nWe will then proceed with Scrum fundamentals and define the difference between Scrum and Kanban, Scrum roles and artifacts\n.\n2. Practical Part:\nWe will start our journey with the team with the definition of the product vision. The team will be working on the development of the platform that helps people organize the events and keep in touch with the participants.\nOnce the product vision is defined, we will start working on the Backlog, creating User stories in Jira\nThen we'll cover estimation techniques as well as run the estimation and planning session with the virtual team\nAdditionally, we will include Release planning and release management in Jira\nWe'll then learn how to monitor and support the team's progress\nWe will  run the sprint demo and learn different  retrospective techniques\nAt the end of each section, you will have to take a quiz testing your understanding of the material covered.\n\n\nWhy take this course?\nThere are a lot of courses giving you theoretical knowledge, but how to apply this in real projects?  This course will prepare you and demonstrate the real case scenarios.  So you will be ready to either join or lead an Agile development team.\nI offer you full support,  answering your questions. Feel free to reach out! :)\n\n\nReady to get started?  Hurry up and enroll now :) See you in the course!",
      "target_audience": [
        "Anyone interested in Agile/ Scrum",
        "Anyone who wants to become an Agile Project Manager, Scrum Master, Product Owner",
        "Any Scrum team memeber who wants to deepen Agile/Scrum knowledge",
        "Anyone who wants to learn how to apply Scrum in real projects",
        "Anyone who wants to transition to Agile"
      ]
    },
    {
      "title": "Mastering Back-End Performance Optimization: Practice Tests.",
      "url": "https://www.udemy.com/course/back-end-performance-optimization-practice-tests/",
      "bio": "Boost Your Skills in Back-End Performance Optimization with Realistic Practice Tests",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you looking to enhance your skills in back-end performance optimization? This course is designed to provide you with a comprehensive set of practice tests that will sharpen your abilities and prepare you for real-world scenarios. With this course, you'll gain valuable insights and hands-on experience to take your back-end performance optimization skills to the next level.\nThis course is ideal for back-end developers, web developers, and anyone interested in enhancing their skills in back-end performance optimization. Whether you're a beginner looking to learn from scratch or an experienced professional seeking to refine your techniques, this course will provide you with the knowledge and practical exercises to excel in the field of back-end performance optimization.\nUnlock the secrets of back-end performance optimization and elevate your website's visibility and user experience with this comprehensive course. Dive into the world of Back-End Performance Optimization. Whether you're a back-end developer, or web developer, this course will equip you with the necessary tools and techniques to excel in the field of back-end performance optimization.\n\n\nWhat will students learn in your course?\n\n\nAdvanced Optimization Techniques: Dive deep into the intricacies of back-end performance optimization. Discover advanced algorithms and methodologies that will enhance the speed, efficiency, and scalability of your website.\nPerformance Analysis and Tuning: Learn how to analyze and measure the performance of your back-end systems. Identify bottlenecks, optimize resource utilization, and implement performance tuning strategies that ensure optimal functionality.\nCaching and Database Optimization: Explore the power of caching and database optimization techniques. Learn how to leverage caching mechanisms to reduce load times and optimize database queries for faster data retrieval.\nScalability and Load Balancing: Gain insights into managing high traffic loads by implementing scalable solutions and load balancing techniques. Learn how to distribute the workload efficiently across multiple servers to ensure optimal performance under heavy usage.\n\n\nRequirements:\n- Basic understanding of back-end development and web technologies.\n- Familiarity with programming languages such as Python, JavaScript, or PHP.\n- Access to a computer with internet connectivity.\n\n\nWho is this course for?\nThis course is ideal for back-end developers, web developers,  and anyone interested in enhancing their skills in back-end performance optimization. Whether you're a beginner looking to learn from scratch or an experienced professional seeking to refine your techniques, this course will provide you with the knowledge and practical exercises to excel in the field of back-end performance optimization.",
      "target_audience": [
        "This course is ideal for back-End developers, web developers, and anyone interested in enhancing their skills in back-end",
        "- This course is ideal for back-end developers, web developers, and anyone interested in enhancing their skills in back-end performance optimization.",
        "Whether you're a beginner looking to learn from scratch or an experienced professional seeking to refine your techniques, this course will provide you with the knowledge and practical exercises to excel in the field of back-end performance optimization."
      ]
    },
    {
      "title": "Object Oriented Programming Interview Practice Test",
      "url": "https://www.udemy.com/course/object-oriented-programming-oops-mcq/",
      "bio": "300+ OOPs Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "300+ Object Oriented Programming OOPs Interview Questions and Answers MCQ Practice Test Quiz with Detailed Explanations.\nWelcome to \"Mastering OOP Concepts: The Ultimate MCQ Quiz Course for Aspiring Developers\" – your comprehensive guide to acing Object-Oriented Programming concepts and excelling in your coding interviews and exams. Whether you are a budding software developer, a computer science student, or a professional seeking to brush up on your OOP skills, this course offers an engaging and interactive way to deepen your understanding.\nWhat You Will Learn:\nThis course is divided into six meticulously crafted sections, each focusing on a core aspect of Object-Oriented Programming:\nIntroduction to OOP: Dive into the basics of OOP, exploring its advantages and disadvantages, and understand the fundamental concepts like Objects, Classes, Abstraction, Encapsulation, Inheritance, and Polymorphism.\nClass and Object in OOP: Gain a solid grasp of Class Declaration, Object Instantiation, Constructors, Destructors, Class Properties, Methods, Access Modifiers, and the nuances of Static Methods and Properties.\nInheritance and Interfaces: Delve into Inheritance, Method Overriding, Abstract Classes, Interfaces, the implications of Multiple Inheritance, and the debate between Composition and Inheritance.\nPolymorphism and Method Overloading: Understand the intricacies of Polymorphism, distinguish between Method Overloading and Overriding, explore Function and Operator Overloading, and grasp Late Static Binding and Covariant/Contravariant Return Types.\nOOP Design Principles: Master the SOLID principles, the DRY principle, the Law of Demeter, and learn the philosophy of Composition Over Inheritance. Enhance your knowledge with various Design Patterns and recognize common Anti-Patterns.\nAdvanced OOP Concepts: Explore advanced topics like Namespaces, Autoloading, Reflection, Serialization/Deserialization, Magic Methods, and Dependency Injection.\nCourse Format (Quiz):\nThis course is uniquely structured as an interactive quiz-based learning experience. Instead of traditional lectures, you'll engage with a series of multiple-choice questions (MCQs) covering a wide range of topics in Object-Oriented Programming. This format is designed to enhance your learning retention, challenge your understanding, and prepare you for real-world applications and interviews.\nWe Update Questions Regularly:\nOur commitment to your learning journey is reflected in our regular updates to the course content. We continually add new questions, refine existing ones, and stay abreast of the latest trends and changes in Object-Oriented Programming. This ensures that you are always learning the most current and relevant information in the field.\nExamples of the Types of Questions You'll Encounter:\nBasic concept questions to solidify your understanding of OOP fundamentals.\nScenario-based problems that simulate real-world challenges and applications.\nCode snippets for analysis and correction, enhancing your debugging skills.\nComparative questions that require critical thinking to distinguish between similar OOP concepts.\nAdvanced theoretical questions that delve into complex OOP principles and design patterns.\nFrequently Asked Questions (FAQs):\nWhat is Polymorphism in OOP?\nPolymorphism is the ability of an object to take on many forms. It allows methods to perform different functions based on the object that invokes them.\nHow does Inheritance improve code reusability?\nInheritance allows a new class to inherit properties and methods from an existing class, thereby promoting code reuse and reducing redundancy.\nWhat is the difference between an Abstract Class and an Interface?\nAn abstract class can have both abstract and concrete methods, while an interface can only have abstract methods (until Java 8 introduced default methods).\nWhy are Design Patterns important in OOP?\nDesign patterns provide tested, proven development paradigms, helping developers solve common design issues in a more efficient and optimized way.\nWhat is the SOLID principle in OOP?\nSOLID stands for Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion. These principles guide the design and architecture of software for better maintainability and scalability.\nHow does Encapsulation enhance security in OOP?\nEncapsulation hides the internal state of an object and only exposes functionality in a controlled manner, which helps maintain data integrity and security.\nWhat is Constructor Overloading?\nConstructor overloading is the process of having multiple constructors within a class, each with a different set of parameters, allowing objects to be initialized in different ways.\nCan you explain the concept of ‘Composition over Inheritance’?\nThis principle suggests using composition (including objects of other classes as members) over inheritance (extending classes) for code reuse, to avoid the complications of deep inheritance hierarchies.\nWhat are Magic Methods in OOP?\nMagic methods are special methods in OOP languages (like Python) that have double underscores (e.g., __init__, __str__) and provide special functionalities or are invoked automatically under certain circumstances.\nHow does Dependency Injection enhance modularity in OOP?\nDependency Injection involves providing objects that an object needs (its dependencies) from outside, thereby making the code more modular, testable, and maintainable.",
      "target_audience": [
        "Computer Science Students: If you're pursuing a degree in computer science or a related field, this course will solidify your understanding of OOP principles, helping you excel in academic projects and examinations.",
        "Aspiring Software Developers: Whether you're looking to start a career in software development or are in the early stages of your professional journey, this course will equip you with the OOP knowledge crucial for developing robust and scalable software.",
        "Professionals Preparing for Technical Interviews: If you are preparing for job interviews that demand a strong grasp of OOP concepts, this course will provide you with the practice and understanding needed to answer interview questions confidently.",
        "Experienced Developers Seeking a Refresher: Even if you're an experienced developer, this course offers a great opportunity to revisit and refresh your knowledge of OOP principles, ensuring you stay sharp and updated.",
        "Hobbyists and Enthusiasts in Programming: For those who enjoy coding as a hobby or are passionate about learning new programming paradigms, this course serves as an engaging way to explore and master OOP.",
        "Educators and Trainers in Computer Science: Educators looking for resources to aid in teaching OOP will find this course useful as a supplementary tool, offering a wide range of questions and scenarios to discuss with students."
      ]
    },
    {
      "title": "Practical Asynchronous Java",
      "url": "https://www.udemy.com/course/practical-asynchronous-java/",
      "bio": "Become a master in asynchronous workflows with Java by using well-known libraries and techniques",
      "objectives": [
        "Understand why we need asynchronous programming in general",
        "Understand how to design an asynchronous application",
        "Understand how async primitives work in Java (Completable Future)",
        "Understand how to check if an asynchronous application uses the threads efficiently",
        "Understand the tradeoffs of asynchronous applications",
        "Use asynchronous libraries to access databases in an async way",
        "Build end-to-end asynchronous REST APIs",
        "Understand how to monitor Thread-Pools and check if they use resources properly",
        "Connect the concepts learned in this course with real-world projects"
      ],
      "course_content": {
        "Introduction": [
          "Getting Started!"
        ],
        "General Concepts around Asynchronous Programming": [
          "What actually means Asynchronous?",
          "What is the main difference between Parallel and Asynchronous?",
          "The tradeoffs of Asynchronous Programming"
        ],
        "Asynchronous Programming in Java with CompletableFuture": [
          "Introducing the CompletableFuture API",
          "The limitations of Futures",
          "Using the async methods to execute tasks",
          "Dealing with exceptions in CompletableFutures",
          "Combining multiple stages for complex scenarios",
          "[PROJECT][Part 1] - Building an asynchronous stock trading bot (overview)",
          "[PROJECT][Part 2] - Building an asynchronous stock trading bot (the BrokerAPI)",
          "[PROJECT][Part 3] - Building an asynchronous stock trading bot (the final code)"
        ],
        "Building an Asynchronous REST API with SpringBoot": [
          "Exploring the blocking SpringBoot Application",
          "Understanding how Async annotation works in SpringBoot",
          "Changing the underlying Thread-Pool for async methods",
          "[PROJECT] - Building an End-To-End Asynchronous SpringBoot app - Part 1",
          "[PROJECT] - Building an End-To-End Asynchronous SpringBoot app - Part 2",
          "[PROJECT] - Building an End-To-End Asynchronous SpringBoot app - Part 3"
        ],
        "Fetching data from a database asynchronously": [
          "How can we query data from MySQL asynchronously?",
          "Querying Redis asynchronously with Lettuce",
          "[EXERCISE] - How do we query data from MongoDB asynchronously?"
        ],
        "Monitoring ThreadPools in Asynchronous applications": [
          "Why do you need to monitor ThreadPools?",
          "Setting up a Docker-based monitoring stack with Prometheus & Grafana",
          "Expose metrics for a ThreadPool from a Spring-Boot application"
        ]
      },
      "requirements": [
        "Basic Java experience is required (OOP)",
        "Basic Java Multithreading knowledge is a plus"
      ],
      "description": "Intro\nThis course is the best online resource you need to become proficient in building asynchronous code in Java, by learning to work with Completable Futures API, by building non-blocking workflows in REST APIs with Spring-Boot, by fetching data from databases asynchronously, and also by learning to monitor Thread-Pools to see if they're used properly in your applications.\n\nThe goal of this course is to make you deeply understand the main asynchronous concepts (that can be re-used in many other languages), applied and exemplified in Java, the language used by many large companies and more than 9 million developers around the world.\n\nAbout myself\nI wrote my first line of code 10 years ago when I was in highschool. I quickly got addicted by how easy you could build useful programs using C# and Windows Forms.\n\nI followed the Computer Science University track where I managed to set the ground knowledge for anything related to Software Engineering (Algorithms, Data Structures, Operating Systems, Multithreading, Distributed Computing, Networking, and many other topics), and I finalized this amazing 6-year learning path by getting a Master's Degree in Parallel and Distributed Systems where I built from the ground a custom Kubernetes Gang Scheduler optimised for running Spark Jobs.\n\nCurrently, I'm a Senior Software Engineer focused on large-scale JVM-based development. I build code used by millions of people around the world.\n\n\nWhy I built this course?\nHaving experience with asynchronous code is a must for any Software Engineer who wants to step into a Senior role. I saw many people struggling to understand things like:\nWhy is my application stuck? How can I debug it?\nHow can I run this method on a different thread?\nHow do I know if my async application is using the resources efficiently?\nIt was really hard for me too to understand some of those things, even if I had enough university background in this area.\nBut fortunately, after many years of working with threads, callbacks, thread-pools, many trial and errors, many profiling sessions and books & articles read, I managed to deeply understand those critical concepts and use them properly in my daily job.\n\nFor those reasons, I thought that building a course where I expose my understanding on asynchronous workflows, would definitely help other people to save time and avoid going into the same pitfalls that I went through.\n\n\nWhat is the content course?\nThis course is split into 5 chapters and each one will learn you a new angle of applying asynchronous code in your applications:\nChapter 1 - General Concepts around Asynchronous Programming\nIn this chapter we're going to learn the basics of asynchronous programming - what we refer to by \"async\" (with some really cool examples), we're going to clarify a common confusion - which is the main difference between parallel and asynchronous, and also we're going to learn about the tradeoffs of async programs compared to the traditional programming, because there are also some aspects we need to be aware of.\nChapter 2 - Asynchronous Programming in Java with Completable Future\nThis is the first chapter in where we're going to go hands-on by learning about the Completable Future API - how it differs from a classical Future, how can we deal with exceptions, and also how we combine multiple futures together to execute more complex scenarios.\nFinally, we're going to build an asynchronous trading bot, where we apply all the things we learned, in a very interesting project.\nChapter 3 - Building an Asynchronous REST API with Spring-Boot\nIn this chapter, we're going to shift gears and explore the Spring-Boot framework, with an emphasis on building Asynchronous code (with @Async annotation), and we're going to also configure the asynchronous mechanism by changing the underlying thread-pool where @Async annotated methods execute.\nIn the end, we're going to build a very interesting project, which is a fully async REST API that downloads images from an external system, based on a keyword provided by the user.\nChapter 4 - Fetching data from a database asynchronously\nData access is a very important aspect, mostly in asynchronous applications, where flows need to be async end-to-end. It doesn't make sense to handle a request asynchronously, but fetch data in a blocking fashion.\nFor that reason, in this chapter we're going to explore non-blocking database clients for MySQL and Redis, that should be used in any async application, to properly build a data-access workflow.\nIn the end, I left an exercise for you to explore the async data-access process for Mongo DB, which will be really interesting to follow.\nChapter 5 - Monitoring ThreadPools in Asynchronous applications\nIn this last chapter I'm going to show you how to properly monitor a ThreadPool using Prometheus and Grafana (a well  known Open Source monitoring stack).\nWe do that by first understanding why monitoring thread-pools is important, by building and configuring the monitoring stack with Docker, and finally by instrumenting our Spring-Boot application to expose metrics in a Prometheus format.\nWhat are the requirements for this course?\nBasic Java Knowledge (including Object Orientated Programming)\nBasic Java Multithreading concepts are a plus, they'll help you to grasp the concepts of this course faster\nAn IDE of your choice, ideally IntelliJ Idea Community Edition, but you can use any IDE where you can run plain Java code\nWillingness to learn and an open-mind\n\n\nThank you for taking the time to look through this description and I'm looking forward to see you in the first lecture!",
      "target_audience": [
        "Beginner and Intermediate Java developers",
        "Senior Java Developers",
        "Computer Science Students",
        "Any developer who want to become proficient in working with asynchronous code"
      ]
    },
    {
      "title": "Part B - Network Protocol Development in C ( from Scratch )",
      "url": "https://www.udemy.com/course/nw_proto_dev_partb/",
      "bio": "Network Coding Project for Network Core Developers, Linux, System Programming, Operating systems, Projects in C/C++",
      "objectives": [
        "Understand how Network Protocols are implemented on Network Devices",
        "Packet processing, Update protocol data structures through packets processing",
        "Debugging and troubleshoot code to resolve issues",
        "Implement new features incrementally",
        "Implement complex protocol state machines and Network Algorithms",
        "The AIM of this project is to cycle you through the experience of end-to-end implementation of a typical network protocol"
      ],
      "course_content": {
        "Welcome to the Part 2 ( Sequel Course )": [
          "Agenda - What is in this Course ?"
        ],
        "Phase 2 - Link State Packets": [
          "Link State Packet Format",
          "TLV 22 Format",
          "Assignment : Defining new TLV Code Points",
          "API to encode TLV22",
          "TLV22 Encoding APIs Implementation",
          "Assignment - Write TLV 22 Aggregating APIs",
          "Structure to represent LSP Pkt",
          "Assignment : Browse the cheat sheet",
          "The Sequence Number"
        ],
        "Phase 2 - LSP Packet Generation": [
          "LSP Packet Generation",
          "API to create LSP pkt",
          "Mandatory Assignment",
          "Debugging and Verification",
          "isis_show_one_lsp_pkt_detail ( ) Implementation",
          "show CLI and Testing Procedure",
          "Mandatory Assignment : Enabling LSP Packet tracing"
        ],
        "Phase 2 - Introducing Asynchronous Programming": [
          "Introducing Asynchronous Programming",
          "Redundant Work - Problem example 1 and Solution",
          "Redundant Work - Problem example 2 and Solution",
          "Asynchronous Programming - APIs to Use"
        ],
        "Phase 2 - Revisiting LSP Generation - Asynchronous Method": [
          "LSP Pkt Generation API Integration - Part1",
          "LSP Pkt Generation API Integration - Part2",
          "Demo and Testing",
          "Demonstration - Redundant Computations in Action",
          "Converting Synchronous Call to Asynchronous Call",
          "Assignment : Task clean up during protocol shutdown",
          "End Result : Witness Final Optimization"
        ],
        "Phase 2 - LSP Periodic Generation and Disbursement": [
          "LSP Periodic Generation and Disbursement",
          "Implementation : Periodic LSP Packet Generation",
          "LSP Disbursement Design",
          "LSP Disbursement API Discussion",
          "LSP Disbursement API Implementation",
          "LSP Disbursement Demo",
          "LSP Reference Count Problem Explanation",
          "Reference Count Problem and Solution in General",
          "LSP Reference Count APIs Implementation",
          "LSP Reference Count API Integration"
        ],
        "Phase 2 - Link State Database Development and LSP flooding": [
          "Getting Started with Link State Database ( LSDB )",
          "Link State Database APIs and Initialization",
          "Link-State Database API Implementation",
          "Updating LSDB with LSPs",
          "Mandatory Assignment : Handling Reference Count of LSPs",
          "LSP Flooding Algorithm",
          "Self LSP packet installation Rules in LSDB",
          "Mandatory Assignment : Write some Codes to be used in future",
          "Setting up isis_install_lsp( ) API calls",
          "isis_install_lsp( ) - Implementation for self lsp pkts",
          "Mandatory assignment : Implement show interface Stats CLI",
          "Remote LSP packet installation Rules and Implementation in LSDB",
          "Testing and Bug fixing",
          "Case Study : How to fix Bugs in Big Protocols",
          "Mandatory Assignment"
        ],
        "Phase 2 - Debugging Made Easier - Event Counters": [
          "Protocol Debug Counters"
        ],
        "Phase 2 - Purging of LSP": [
          "What is LSP Purging",
          "Design Discussion and APIs",
          "LSP Purge - Complete Implementation",
          "Mini-Project - Overloading ISIS Protocol"
        ],
        "Phase 2 - Re-Conciliation": [
          "What is Protocol Convergence ?",
          "Timer Driven Convergence",
          "Reconciliation Explained - Concept and APIs",
          "Reconciliation APIs Implementation",
          "Reconciliation APIs Integration",
          "Assignment Questions on Reconciliation",
          "Processing On-Demand TLV",
          "Assignment Questions on Reconciliation - 2",
          "Final Demo of the Project",
          "Beginning of Phase 3"
        ]
      },
      "requirements": [
        "Must have Completed Part A of the Course"
      ],
      "description": "First of all Congratulations on completing the Part-A of this Course in which we develop the Adjacency Mgmt feature of the protocol. I hope you enjoyed and had a great learning. You must be Feeling confident in developing timer-based state machines now?\n\n\nAnd here starts a new challenge when we enter into Phase 2 of the Project - Link State Database Mgmt. Every Router will use its Adjacency Objects sitting on an interface to build its local Link State Database. But the challenge is - every router has to share its own local copy of the link-state database ( LSDB )  with every other router in the topology running ISIS protocol so that every router has a coherent and common view of the IGP topology. This is what is the end goal of this phase of the project.\n\n\nThis full course series is divided into 3 parts - Part A, Part B, and Part C out of which Part A and B are Live, and Part C is under Development as of 21 Dec 2021.\n\n\nOnce again we shall cover all required theories and concepts before we hit the keyboard for implementation. The three main concepts we shall going to implement in this installment of the course are :\n1. Concept of Packet Flooding\n2. Building of Link State Database\n3. Link State Database Synchronization\n\n\nWe shall continue to use Timers as phase 2 is also heavily dependent on timers to achieve its goals. In addition to timers, we shall also get to introduce to the world of Asynchronous programming through this project.\n\n\nContinue to Challenge yourself by doing more of such projects and you will not even realize that you have already transformed yourself into a 10x Developer.\n\n\n\n\nProject Goals\nThe AIM of this project is to cycle you through the experience of end-to-end implementation of a typical network protocol. In this case study, we have chosen a routing protocol as an example, but the high-level logistics involved to implement a typical network protocol are more or less the same. For example, a typical network protocol has to:\nConfigurable via CLIs\nShow internal states and results through show CLIs\nRespond to generic configuration changes ( such as link shut-down, IP Address on interface change, etc)\nCompute results and install the results in Tables (Routing Information Base, MAC Tables, hardware Tables, etc )\nRespond to Topological Changes (link failures, device failures, etc )\nTime-out stale Data structures if any.\nPeriodically Generate Or Process Protocol packet\nHow to add a new feature to the existing working Protocol Codebase. (This is what you shall be doing all your life as a software engineer !!)\nSince the project is quite big (I am expecting around 10k LOCs), you would also get the opportunity to learn how to :\nOrganize the code in header and src files\nModularize the codebase: How to keep the code of different features in different src files\nTesting the new feature, and cross-check it doesn’t break existing features\nMaintain Code Commits through Version control system ( Github in this case )\nBug Fixing, and exercising various debugging techniques (gdb, Valgrind, etc )\nNeedless to say, you Can’t exercise the above points unless you do a project of considerable size.",
      "target_audience": [
        "Core Developers aiming to work in Networking / Distributed Systems / System Programming side",
        "Not for those seeking non-development roles ( This is pure Dev oriented Course )",
        "Not for those still struggling with basic data structures, basic C programming concepts",
        "Working professionals, Job Seekers, domain changers to Networking Dev, Learners, starving for knowledge"
      ]
    },
    {
      "title": "Complete Python Programming : From Basics to Advance",
      "url": "https://www.udemy.com/course/complete-python-programming-from-basics-to-advance/",
      "bio": "Complete Guide to Python: Fundamentals, Automation, OS Interaction, Multithreading, and Optimization Strategies",
      "objectives": [
        "Build a strong foundation in Python syntax, variables, data types, lists, tuples, and dictionaries.",
        "Master tabular data handling with NumPy arrays and nested lists for memory-efficient processing.",
        "Capture and process images using OpenCV and NumPy for computer vision applications.",
        "Understand multithreading and how Python handles CPU-bound vs. I/O-bound operations.",
        "Optimize programs for better CPU and memory usage through profiling and efficient design patterns.",
        "Differentiate between concurrency and parallelism with visual demos and OS-level tools.",
        "Prepare for advanced topics like multiprocessing, async programming, and quantum computing."
      ],
      "course_content": {
        "Python Programming": [
          "Master Python: From Zero to Pro - Complete Practical Course & Project-Based Lear",
          "Understanding Programming Languages with Python",
          "1_3. Python",
          "Python Programming: Variables, Data Types, Type Inference & System Command",
          "Master Functions & TTS in Python using Modules, Libraries & pyttsx3",
          "Automate WhatsApp with Python: Step-by-Step",
          "Python Data Structures Demystified |Array, Memory, RAM and Real-World Automation",
          "Arrays, Lists, and Tuples for Secure and Efficient Coding | Cryptography Concept",
          "Mastering Lists & Nested Lists for Tabular Data - Practical Guide & Challenge!",
          "Nested Lists, Column Operations & Why Choos Data Structure (like NumPy) Matters",
          "From Lists to NumPy Arrays for Efficient Tabular Data & Image Cropping!",
          "Capture Webcam Images & Basic Image Processing | Computer Vision Tutorial",
          "Python Images and OpenCV: Understanding Image as Data Arrays and Beyond",
          "Generating Images with NumPy and Steganography Concepts in Python",
          "Python Deep Dive: Dynamic Typing, Type Hinting & Real-World Automation",
          "In-Depth: Polymorphism, Powerful String & List Methods, and Dynamic Exploration",
          "Building a Voice-Controlled OS Automation App & Data Structures(Lists vs Tuples)",
          "Building an OS Automation App with if-else, User Input & System Commands",
          "Building an AI-Powered OS Automation Tool | Natural Language & Voice Commands",
          "Conditional Logic Deep Dive: Boolean, None, Functions & Tricky if/else Puzzles",
          "Python Conditionals: Inline if/else, Ternary Operators & Functional Programming",
          "Python Logic: AND, OR, NOT & Lazy Evaluation for Smarter Coding",
          "Mastering if-else, Boolean Operations, and the in Operator |Programming Tutorial",
          "Building AI-Powered Automation - From Mic Input to Text (Speech-to-Text)",
          "From Voice to Text with PyAudio & Google API | AI & NLP Tutorial",
          "Integrating Speech Recognition & Intro to with Statement and Loops",
          "Infinite Loops, break, else & Voice App Demo | Python Programming Tutorial",
          "Understanding Iteration with for vs. while for Powerful Data Processing",
          "Python for Loops: True Iteration, enumerate, Iterables & Conditional Logic",
          "Advanced Python for Loops: Iterators, List Comprehensions, break & continue",
          "Python Functions Mastery: Foundations, Logic Building and Real-World Analogies",
          "Python Functions II: Memory Internals, Dynamic Parameters and Execution Control",
          "From Basics to Best Practices in Argument Handling and Return Behavior",
          "Generators & yield: Deep Dive into Iterators, Memory Efficiency, and Function",
          "Master Iterators, State Preservation & Memory Efficiency",
          "Generators Explained: Master yield for Memory-Efficient Iteration & Lazy Evaluat",
          "Mastering Memory-Efficient Lazy Evaluation for High Performance Code",
          "Mastering Memory Profiling with memory_profiler & Understanding Decorators",
          "Profiling Memory, Execution Time, and Mastering Lambda Functions in Python",
          "Lambda, Higher-Order Functions, and Real-World Filtering",
          "Optimizing RAM & CPU Usage - Understanding Variables, References & PVM Internals",
          "Understanding Variables, References, id(), hex(), and Shallow Copying with copy",
          "Master Memory & Copy in Python: Shallow vs Deep with Image Use Cases",
          "Sequential Execution, Infinite Loops, Real-World Problem Solving | Deep Dive",
          "Organizing Data with Key-Value Structures for Robust Programming",
          "Dictionary Operations: Zipping-Unzipping, Merging & Column-Oriented Data Structu",
          "Dictionaries vs. DataFrames: When and Why to Use for Row and Column Operation",
          "Deep Dive: Local vs. Global Variables, Stack Memory & the __name__ Attribute",
          "Global Variables, Scope, Namespaces & Variable Arguments (*args)",
          "Variable Arguments (*args, **kwargs), Parameter Order & Intro to Concurrency",
          "Achieving Concurrency and Parallelism through Context Switching",
          "Understanding Multithreading, Processes, and CPU Behavior in Python",
          "Mastering Multithreading in Python: From Single Thread to Concurrent Execution",
          "Advanced Multithreading in Python and the Illusion of Parallelism",
          "Understanding CPU Architecture, Hardware Threads and Foundation of Multithreadin",
          "Global Interpreter Lock (GIL) in Python and Limitations of True Multithreading",
          "Demystifying Python Multithreading Performance: Time Sharing vs True Parallelism"
        ],
        "OOps": [
          "1_1. OOPs",
          "1_2. OOPs"
        ]
      },
      "requirements": [
        "No prior programming experience required. This course starts from scratch and gradually builds up to advanced topics."
      ],
      "description": "\"Complete Python: From Basics to Advance\" is a comprehensive, hands-on course that guides you through the journey of mastering Python, from the fundamentals to advanced topics like system automation and optimization. Whether you're a complete beginner or an experienced developer, this course will provide you with the tools and techniques to harness the full power of Python.\n\n\nBegin by learning the basics, including variables, data types, loops, and functions, before diving into more advanced topics like object-oriented programming and Python libraries. As you progress, you'll explore core Python concepts like file handling, error handling, and working with APIs. You’ll also gain a strong understanding of data structures such as lists, dictionaries, and sets, enabling you to build efficient and scalable systems.\n\n\nThe course also covers crucial skills for system automation, such as writing scripts to control your OS, automate repetitive tasks, and interact with external systems. You’ll delve into multithreading for performance optimization, memory profiling, and advanced topics like concurrency. The course also prepares you for real-world applications of Python, like automating workflows, managing files, and building AI-powered applications.\n\n\nBy the end of this course, you'll be proficient in Python and able to develop programs that optimize your system’s performance, automate complex workflows, and solve real-world problems effectively. Perfect for aspiring developers, automation enthusiasts, and anyone looking to enhance their Python programming skills.",
      "target_audience": [
        "Python Developers",
        "Automation Engineers",
        "Backend Developers",
        "Software Engineers",
        "Tech Interviewees",
        "AI Developers",
        "Machine Learning Practitioners",
        "Beginners"
      ]
    },
    {
      "title": "NEW: Spring Boot 3 Securing Your Application with JWT Token",
      "url": "https://www.udemy.com/course/securing-your-spring-boot-3-applications-with-jwt-token/",
      "bio": "Spring Boot 3 + Spring Security 6 - JWT Authentication and Authorisation [NEW] [2023]",
      "objectives": [
        "Implement user authentication and authorization using Spring Security",
        "Encrypt user passwords using BCrypt",
        "Implement role-based authorization with Spring Security",
        "Use JSON Web Tokens (JWT) to provide a secure, stateless method of authentication",
        "ntegrate JWT into a Spring Boot application"
      ],
      "course_content": {
        "Introduction": [
          "How JWT based security works",
          "Source code"
        ],
        "Bootstrap the application": [
          "Create a new Spring boot 3.0 project",
          "Add a new datasource",
          "Establish connection to the database"
        ],
        "Create an application User": [
          "Create a new User java class",
          "Transform the user to an Entity",
          "Extend the user and make it a UserDetails object",
          "Create the User repository"
        ],
        "Implementing the JWT authentication filter": [
          "Create the JWT authentication filter",
          "Checking the JWT token",
          "Create the JWT Service",
          "Add the JJWT dependencies",
          "What is a JWT toekn",
          "Extract claims from the JWT",
          "Implement the SignIn key method",
          "Extract a single claim from JWT",
          "Extract the username from the token",
          "Generate the JWT token",
          "Check if the token is valid",
          "Check the user existence in the database (JwtAuthFilter)",
          "Implement the user details service",
          "Update the SecuritContextHolder and finalise the filter",
          "Add the security configuration",
          "Create the authentication provider bean",
          "Create the authentication manager bean"
        ],
        "Implement the authentication controller": [
          "Create the authentication controller",
          "Create the authentication response",
          "Create the register request object",
          "Create the authentication request object",
          "Create the authentication service",
          "Implement the register method",
          "Implement the authenticate method",
          "Update the security configuration whitelist",
          "Create a demo controller"
        ],
        "Test the application": [
          "Test the application"
        ]
      },
      "requirements": [
        "Java Knowledge"
      ],
      "description": "Are you looking to secure your Spring Boot applications and keep them safe from unauthorized access? Look no further! Our course, \"Spring Security with JWT: Protect Your Applications from Unauthorized Access,\" is the perfect solution for you.\nIn this course, you'll learn everything you need to know about using Spring Security and JSON Web Tokens (JWT) to secure your applications. We'll start by teaching you the basics of Spring Security and how it can be used to authenticate and authorize users in your application. From there, you'll learn how to implement JWT to provide a secure, stateless method of authentication.\nWith our step-by-step instructions and hands-on exercises, you'll gain the knowledge and skills you need to confidently secure your Spring Boot applications. Plus, with lifetime access to the course materials, you can revisit the lessons anytime you need a refresher.\nDon't let unauthorized access threaten the security of your applications. Enroll in \"Spring Security with JWT: Protect Your Applications from Unauthorized Access\" today and take the first step towards safeguarding your valuable assets.\n\n\nA JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is digitally signed using JSON Web Signature (JWS).\nA JWT consists of three parts: a header, a payload, and a signature.\nThe header typically consists of two parts: the type of the token, which is JWT, and the signing algorithm being used, such as HMAC SHA256 or RSA.\nThe second part of the token is the payload, which contains the claims. Claims are statements about an entity (typically, the user) and additional data. There are three types of claims: registered, public, and private claims. Registered claims are a set of predefined claims which are not mandatory but recommended, to provide a set of useful, interoperable claims. Some of the registered claims are:\niss (issuer) claim identifies the principal that issued the JWT.\nsub (subject) claim identifies the subject of the JWT.\naud (audience) claim identifies the recipients that the JWT is intended for.\nexp (expiration time) claim identifies the expiration time on or after which the JWT MUST NOT be accepted for processing.\nPublic claims are claims that are defined in the IANA JSON Web Token Registry or are public by nature. Private claims are custom claims created to share information between parties that agree on using them.\nThe third part of the token is the signature, which is used to verify that the sender of the JWT is who it claims to be and to ensure that the message wasn't changed along the way.\nTo create the signature part you have to take the encoded header, the encoded payload, a secret, the algorithm specified in the header, and sign that. For example if you want to use the HMAC SHA256 algorithm, the signature will be created in the following way:\nHMACSHA256( base64UrlEncode(header) + \".\" + base64UrlEncode(payload), secret)\nThe final JWT will be three base64-URL strings separated by dots, which can be easily passed in HTML and HTTP environments, while being more compact when compared to XML-based standards such as SAML.",
      "target_audience": [
        "Students",
        "Beginners",
        "Mid level"
      ]
    },
    {
      "title": "Cracking the Coding Interview",
      "url": "https://www.udemy.com/course/cracking-the-coding-interview/",
      "bio": "Get ready for your next Coding Interview.",
      "objectives": [
        "Coding Interview Questions.",
        "ability to formulate real-world problems.",
        "skill to analyze a problem, design the algorithm and convert the algorithm to a tested Program.",
        "analytical ability to determine the computational complexity of an algorithm.",
        "Algorithmic Problem Solving"
      ],
      "course_content": {},
      "requirements": [
        "Data Structures and Algorithms"
      ],
      "description": "The purpose of this Course is to help the Engineers who are going to be interviewed for Software development positions at various BIG Tech Companies, to crack the coding interview.\n\n\nEnclosed in this Course is a Collection of Problems/Questions asked at various Coding Interviews.\nNote that the numbers of questions enclosed in this Course is open ended.\nWe update this Course regularly with a number of potential problems collected based on our conversations with interviewers and candidates.\nHence, by purchasing this course, you are obtaining something which helps you through out your Software Development Journey.\nBy the end of this Course,\n\n\nYou will have the ability to formulate real-world problems.\nYou will have the skill to analyze a problem, design the algorithm and convert the algorithm to a tested Program.\nYou will have the analytical ability to determine the computational complexity of an algorithm.\n\n\nComing to the prerequisite of this Course, You should have strong basics on Data Structures and Algorithms.\nNote that this Course does not teach you data structures and algorithms.\nIt teaches you how to apply data structures and algorithms to solve various problems.\n\n\nAnd finally, this course comes with a 30-days Money back guarantee.\nHence, there is really nothing you loose.\n\n\nI am super excited to see you enrolled in this Course.\nThank You!",
      "target_audience": [
        "Engineers who are going to be interviewed for Software development positions at various BIG Tech Companies"
      ]
    },
    {
      "title": "MATLAB Projects with iPhone & iOS Sensors",
      "url": "https://www.udemy.com/course/matlab-ios-sensors/",
      "bio": "Build your own MATLAB programs using the Accelerometer, Compass, GPS & other iOS Sensors on your iPhone & iPad",
      "objectives": [
        "Install MATLAB iOS Sensor Hardware Support Package & MATLAB Mobile App",
        "Connect to iPhone and iPad Devices and Acquire Sensor Data",
        "Capture and Log Data from 5 Different iOS Sensors",
        "Process and Graph Accelerometer & Gyroscope Data",
        "Detect and Display Magnetic Fields",
        "Detect and Track Sensor Position and Speed and Display on Google Maps"
      ],
      "course_content": {
        "Welcome": [
          "The Magic of Apple iOS Sensors",
          "What You Need for This Course",
          "Course Overview & How to Succeed"
        ],
        "Set up": [
          "Install MATLAB Hardware Support Package for iOS Sensors",
          "Install MATLAB Mobile iPhone App",
          "Wifi Network Setup"
        ],
        "Interacting with iOS Sensors": [
          "Enable Sensors & Acquire Data",
          "Acceleration Sensor",
          "Magnetic Field Sensor",
          "Orientation Sensor",
          "Angular Velocity Sensor",
          "Position Sensor",
          "Exercise 3-1: Using iOS Sensors"
        ],
        "Accelerometer Projects": [
          "Project 4-1: Counting Steps"
        ],
        "Magnetometer Projects": [
          "Project 5-1: 3D Compass"
        ],
        "Gyroscope Projects": [
          "Project 6-1: Which End Is Up?",
          "Project 6-2: Virtual Reality Box"
        ],
        "Angular Velocity Projects": [
          "Project 7-1: Shake It Up Baby!"
        ],
        "GPS Projects": [
          "Project 8-1: Tracking Location & Speed"
        ]
      },
      "requirements": [
        "Getting Started with MATLAB Programming course or familiarity with MATLAB is recommended.",
        "To execute examples and projects in this course, you will need:",
        "- MATLAB R2015a or later",
        "- iOS 8 or later on your device"
      ],
      "description": "Now you can collect sensor data from your iPhone or Apple iOS device using MATLAB! Impress your friends, build some cool programs, and take your MATLAB skills to a new level with this interactive course. You’ll learn how to capture and utilize data from 5 different sensors without the need to buy additional software or hardware.\nPlease Note: THIS COURSE IS VERY SIMILAR TO “Build MATLAB Projects with Android Sensors”\nBuild 6 iPhone Sensor Projects (Source Code Included)\nIn this course, you will master the MATLAB® Support Package for Apple iOS Sensors by building a unique set of projects which enable you to:\nBuild Your Own 3D Compass\nRotate 3D Objects Using Your Phone\nDetect iPhone Facing Up or Down\nTrack Position and Speed of A Car\nDetect Shaking\nCount Your Steps While Walking\nDon’t struggle. I’ll show you step-by-step.\nGetting set up is a little tricky, but, don’t worry, I’ll walk you through it. And if you have any problems you can ask for help through the discussion forum.  I’ll show an easy method to enable and acquire data from all 5 iOS sensors including:\nAcceleration Sensors - Learn how to use abrupt changes in your iPhone’s movement\nMagnetic Field Sensors - Explore magnetic fields used by the compass and other input devices\nOrientation Sensors - See how you can detect your iPhone state and control virtual items\nAngular Velocity Sensors - Detect your iPhone’s movement and use to control software\nPosition Sensors - Capture your GPS position and speed and build location based apps\nYou will learn how easy it is to enable these sensors and acquire data for your MATLAB programs.\nin this course, you will get:\n\nInstructional Videos\nInteractive Exercises\n6+ Sample Projects\nSource Code\n24/7 Instructor & Student Access\n30 Day Guarantee\nLifetime Course Access\nTo execute the code and examples, you will need:\n\nMATLAB R2015a or later, for creating the connection to the application and logging sensor data.\niOS 8 or later on your device.\nWifi Network for connecting your computer and iOS device.\nThere’s no better time to expand your MATLAB skills and use your iPhone to collect and process data.  Enroll in this course and get started today!",
      "target_audience": [
        "Engineers, Developers, and Scientists",
        "Professionals, Students, and Hobbyists",
        "Innovative Designers Looking to Develop Algorithms and New Tools",
        "Tinkers and Thinkers Looking to Explore iPhone and iPad Sensors"
      ]
    },
    {
      "title": "Create your own cryptocurrency with ERC-20 tokens on Polygon",
      "url": "https://www.udemy.com/course/create-your-own-cryptocurrency-with-erc-20-tokens-on-polygon/",
      "bio": "Deploy your own cryptocurrency on the Polygon blockchain",
      "objectives": [
        "How to create a cryptocurrency",
        "The Ethereum Blockchain",
        "The Blockchain",
        "ERC-20 tokens",
        "The basics of the Solidity Language",
        "Polygon"
      ],
      "course_content": {
        "Introduction": [
          "Who am I?",
          "Summary of this course",
          "What will you find in this course",
          "What you will not find in this course",
          "Legal Warning"
        ],
        "Basics": [
          "Let's get ready! - What you will need to take this course!",
          "What is a cryptocurrency?",
          "What is a blockchain?",
          "Ethereum vs Polygon",
          "What is Solidity?",
          "What is ERC-20 tokens?"
        ],
        "Solidity : the language of Ethereum": [
          "Introduction to Solidity",
          "Basic Solidity Types",
          "Functions",
          "Arrays",
          "Collections"
        ],
        "The smart contract of your cryptocurrency": [
          "The ERC-20 standard",
          "Let's write the contract 1/2",
          "Let's write the contract 2/2",
          "Windows - Let's setup our tools",
          "Mac & Linux - Let's setup our tools",
          "Write the script to compile",
          "Write the script to deploy"
        ],
        "Deploy your cryptocurrency on Polygon": [
          "Deploy your cryptocurrency on Polygon Testnet",
          "Deploy your cryptocurrency on Polygon Mainnet",
          "FAQ - The answers to your questions",
          "Set the price of your cryptocurrency"
        ],
        "Deploy your cryptocurrency on other blockchain": [
          "Deploy your cryptocurrency on Ethereum Mainnet",
          "Deploy your cryptocurrency on Binance Smart Chain"
        ],
        "Conclusion": [
          "Thank you!"
        ],
        "Go Further": [
          "Go Further",
          "How to invest in Real Estate and receive rent everyday with cryptocurrencies",
          "How to get FREE cryptocurrencies !"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "All concepts will be explained from basics.",
        "A Windows, Linux or Mac PC/Laptop",
        "Some programming experience (Beginner accepted)"
      ],
      "description": "Welcome in this course called \"Create your own cryptocurrency with ERC-20 tokens on Polygon\" !\nIn this course, you will learn how to create your own cryptocurrency on the Polygon blockchain!\n\n\nIf you want to learn more about how to write smart contract with Solidity and how to create a cryptocurrency this course will be perfect for you! We will also talk about the blockchain, how to fix the price of a cryptocurrency, and how to deploy a ERC-20 token on the Polygon mainnet.\n\n\nThis course will teach you:\n\n- How to create a cryptocurrency with ERC-20 tokens\n- Basics of Solidity\n- The blockchain\n- How to set the price of your cryptocurrency\n- How to use Polygon Testnet\n- How to deploy your cryptocurrency on Polygon Mainnet\n\nand many more things...\n\n\nThis course will NOT teach you:\n\n- How to become rich by creating a cryptocurrency.\n- How to predict future prices of your cryptocurrency.\n- How to deploy your cryptocurrency on another blockchain than Polygon.\n- How to be a good Solidity developer.\n- How to deploy your cryptocurrency on Ethereum Mainnet.\nIf you have any questions about this course you can always send me a private message me here on Udemy. I will be delighted to answer you as soon as possible.\nWhat are you waiting to learn how to create your own cryptocurrency?",
      "target_audience": [
        "Anyone who wants to create a cryptocurrency",
        "Anyone who wants to create an ERC-20 token",
        "Anyone who wants to learn Solidity"
      ]
    },
    {
      "title": "Mastering Spring Framework Fundamentals",
      "url": "https://www.udemy.com/course/spring-framework-fundamentals/",
      "bio": "Master the essential everyday aspects of the Spring Framework to boost your development career",
      "objectives": [
        "How to use confidently use the Spring framework container in the workplace",
        "A deep practical understanding of the concepts of dependency injection, inversion of control and autowiring and the Spring container",
        "Understand and be able to use XML, annotation-based and Java based configuration to create Spring-managed beans in the container",
        "How the Spring container is used in modern Java applications",
        "How to use properties in Spring applications",
        "An understanding of and know how to apply profiles in Spring applications to manage environment-specific property sets",
        "A feeling of confidence in using the Spring framework and it's dependency injection and autowiring features",
        "Spring JDBC to work with databases",
        "How to use and apply Spring Aspects to tackle cross-cutting project concerns",
        "Spring MVC and web development with Spring"
      ],
      "course_content": {
        "Getting Started": [
          "Section Introduction",
          "Key Spring Resources you Need to Know",
          "Configuring a project's dependencies to use Spring"
        ],
        "Creating the Spring Container with Application Contexts": [
          "Section Introduction",
          "A Look at the Application Context (aka The Spring Container)",
          "Creating the File System XML Application Context",
          "Configuring Autocomplete when Writing Spring XML Configuration Files"
        ],
        "Creating, Retrieving and Using Spring-Managed Beans": [
          "Section Introduction",
          "Creating a Bean Managed with Spring's XML Container Configuration",
          "Retrieving and Using a Bean from the Spring Container",
          "Using the Classpath XML Application Context",
          "Understanding Singleton Scope",
          "Understanding Prototype Scope",
          "Understanding How Spring Creates Stateless Beans"
        ],
        "Understanding Dependency Injection and Inversion of Control": [
          "Section Introduction",
          "Coding Beans to Use Constructor Dependency Injection",
          "Interpreting a Spring Container Exception",
          "Applying Constructor Dependency Injection to XML Configuration",
          "Verifying the Constructor Dependency Injection with the Debugger",
          "The Sharability of Beans in an IoC Container",
          "The Benefits of Dependency Injection in an IoC Container",
          "The Hollywood Principle",
          "Coding Beans to Use Setter Dependency Injection",
          "Applying Setter Dependency Injection in XML Configuration",
          "Verifying the Setter Dependency Injection with the Debugger"
        ],
        "Autowiring Dependencies in the Spring Container": [
          "Section Introduction",
          "Adding Component Scanning to Autodetect Spring Managed Bean Annotations",
          "Coding Beans to be Automanaged and Autowired by Spring via Annotations",
          "The Advantage of Annotation-based Configuration over XML Configuration",
          "Verifying the Annotation-driven Autowired Beans",
          "Spring's Stereotype Annotations for Better Code Readability",
          "Setter Dependency Injection with Annotations",
          "Constructor Dependency Injection with Annotations",
          "Using the Annotation-Based Application Context",
          "Creating a Java Configuration Class",
          "Applying Java-based configuration with @Bean",
          "Using Scopes with Java-based Configuration",
          "Modeling a More Complex Application to Demonstrate Autowiring Ambiguity Issues",
          "Resolving Ambiguous Arguments of the Same Type by Narrowing the Reference Type",
          "Resolving Ambiguous Arguments of the Same Type by Using @Qualifier"
        ],
        "Using Properties and Profiles in Spring Projects": [
          "Section Introduction",
          "Injecting Properties read from a Properties File with @Value in Spring Managed B",
          "Exploring Property Overriding in Spring",
          "Accessing and using properties with PropertyPlaceholder in XML Configuration",
          "Specifying default properties for property values",
          "Exceptions for Missing property keys in Spring",
          "Resolving and Using a Property Value in a Bean definition in XML Configuration",
          "Accessing the Current Active Profiles with the Environment interface",
          "Setting the current active profile programmatically & through a property switch",
          "Creating Profile-specific bean configuration",
          "Conditional Beans with @Profile"
        ],
        "Getting to Know the Spring Container": [
          "The Proxy Design Pattern",
          "Seeing Proxies in Action",
          "The Disadvantages of a Regular Proxy",
          "Understanding JDK Dynamic Proxies",
          "Dynamic Proxies in Spring",
          "Understanding how Spring Makes Service Methods Transactional using Proxies",
          "Spring Managed Bean Lifecycle Callback Methods",
          "JDK Standard Lifecycle Annotations (@PostConstruct and @PreDestroy)",
          "The Sequence of Spring Container Callbacks on a Spring Managed Bean",
          "Application Container Callbacks and Events",
          "Using the *Aware Interfaces to Access Lower-Level Spring Framework Components"
        ],
        "Accessing Databases with Spring": [
          "Creating and Configuring Data Sources",
          "Creating a Data Access Object to Access a Database",
          "Connection Pool Data Sources in Spring",
          "Creating a JDBC Template to Access a Database",
          "Using JDBC Templates to Insert and Query Data",
          "Using JDBC DAO Support to Remove Boilerplate JDBC Code"
        ],
        "Aspect Oriented Programming in Spring": [
          "Preparing a Spring Project to Use Aspects",
          "Creating a Spring Managed Bean to be Intercepted",
          "Advising Beans in Spring",
          "Understanding Pointcuts and Joinpoints",
          "Accessing Joinpoints Programmatically within an Aspect",
          "Coding Dynamic Advice with Around"
        ],
        "Web Application Development in Spring": [
          "Preparing a Maven Project to Use Spring MVC",
          "Registering the Dispatcher Servlet as Front Controller",
          "Creating the Web Application Context",
          "Creating a Controller Class",
          "Configuring the Jetty Plugin in Maven to Run a Web App",
          "Setting Up Remote Debugging of a Web App",
          "Understanding the Dispatcher Servlet Processing Flow",
          "Writing a Controller to Service Web Requests",
          "Rendering a JSP-Based View with View Resolvers",
          "Understanding How a Request is Serviced",
          "Passing a Model to the View for More Dynamic Pages",
          "Injecting the HTTP Servlet Request and Response into a Controller",
          "Passing Request Parameters and Query Strings to a Controller",
          "Using Path Variables to Access Parts of the Request Path"
        ]
      },
      "requirements": [
        "Understand Java to at least a basic level",
        "Have a desire and curiosity to understand the Spring framework",
        "Understand basic concepts of object oriented programming (limited to interfaces, objects and their instantiation)"
      ],
      "description": "This course takes you head first into the exciting world of Spring development!\nYou'll get to know and understand the major parts of the core framework such as:\nThe Spring container and how it manages your beans for you and delivers a flexible runtime environment for applications\nThe concept of dependency injection: how it works and is applied in Spring\nInversion of Control - what it is and why it's so useful\nSpring property management and how to manage application properties and state\nProfiles in Spring and how they are used and applied\nProxies and proxying and how that works to magically do things like make service methods transactional\nThe various lifecycle and callback interfaces and events you need to know to integrate with and access lower-level components of the Spring container\nSpring JDBC and how to work with databases\nWorking with Spring Aspects to apply Aspect Oriented Programming in the container\nSpring MVC and web application development with Spring\nand much much more!\nIn this course we don't waste time going into the esoteric parts of the Spring framework which you'll never encounter.  Instead, we focus just on the 90% of stuff you need to know to get the job done.\nSpring is the most in-demand skill for Java developers beyond a knowledge of the Java programming language itself and in this course you'll be up and running and be able to confidently work with existing Spring applications, and have the confidence to start building your own, from the ground up.\nI hope you'll join me on this fantastic exciting world of Spring development and I'll see you in class!",
      "target_audience": [
        "Beginner Java developers who need to get up and running with the Spring framework fast",
        "Intermediate developers who are transitioning into Java technology and need a no-nonsense quick guide to getting up and running with Spring",
        "Experienced developers who have forgotten the basics of Spring and could use a refresher course on the fundamentals",
        "Anyone who wants to know how Spring works from the ground up in the most succinct and pragmatic way possible"
      ]
    },
    {
      "title": "Make Money from ChatGPT / GPT-4 Projects",
      "url": "https://www.udemy.com/course/create-sell-and-make-money-from-chatgpt-projects/",
      "bio": "Add ChatGPT and Stripe payment options to any project with a few lines of code",
      "objectives": [
        "Add ChatGPT to existing projects",
        "Create new projects and chrome extensions with ChatGPT functionality",
        "Add payment and subscription to your projects",
        "Using OpenAI API and Stripe API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you'll make",
          "Let your imagination run wild",
          "Latest Developments: GPT 3 to GPT 4"
        ],
        "Optional: How to make chrome extensions": [
          "Why chrome extensions",
          "How to get the most out of this course",
          "Starter code template for chrome extensions",
          "Chrome Manifest (V2 and V3)",
          "Understanding chrome extensions",
          "Manifest.json file",
          "Service workers",
          "Content Scripts",
          "Chrome APIs",
          "Color Picker project",
          "Creating skeleton",
          "Cross script communication",
          "Chrome storage API",
          "Study Helper Project",
          "Chrome webNavigation API",
          "Snooze functionality"
        ],
        "Adding ChatGPT (GPT-4) to your projects": [
          "Demo with complete project code (use ctrl/command +s) to activate the popup.",
          "Code"
        ],
        "Making money from your projects": [
          "Demo",
          "Code"
        ]
      },
      "requirements": [
        "Basic programming knowledge"
      ],
      "description": "Welcome to the course on creating and monetizing ChatGPT Projects! In this course, you will learn how to add ChatGPT / GPT-3 and a Stripe subscription option to your projects, making them more useful, more user-friendly and profitable. Not only that, I will also tell you how to make chrome extensions, as they are one of the best methods to monetize your projects.\n\n\nWe will begin by exploring how to make Chrome extensions, as they are one of the best ways to monetize projects. However, even if you have other types of projects, such as websites, web applications, mobile applications, python applications or any other project you can still benefit from this course. You can simply skip the Chrome extension section and jump straight to the ChatGPT and payments sections to learn how to integrate these features into your existing projects. So buckle up and let's get started!\n\n\nI personally have multiple projects on the chrome web store which make thousands in revenues and have made tens of thousands of dollars of projects via freelancing. If you have any questions during the course, feel free to message me and my team will reply within 12 hours. I also have another course which has a \"highest rated\" label next to it. Programming language is not a barrier and as long as you have basic command over any programming language you will be able to follow. Happy learning :)",
      "target_audience": [
        "People who either want to make new projects using chatgpt or add to existing projects, along with payment functionality"
      ]
    },
    {
      "title": "AVR microcontrollers: C language, electronic devices.",
      "url": "https://www.udemy.com/course/programming-for-avr-microcontrollers/",
      "bio": "AVR microcontrollers: I/O, ADC, PWM, etc.. Programming microcontroller C language, practical work. Atmega, XMEGA series.",
      "objectives": [
        "Microcontrollers AVR: I/O pins, PWM, ADC, EEPROM, timers, etc.",
        "Microcontroller structure and Programming Introduction",
        "C Programming Basics, C language for AVR.",
        "Business projects using AVR microcontroller",
        "LEDs and Pushbuttons",
        "LCD Screens and Seven Segment Displays",
        "Motor and Keypad.",
        "Analog to Digital Conversion",
        "Timers and Counters",
        "Wireless devices controlled by AVR"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "C basics applied AVR microcontrollers": [
          "Decimal, binary and HEX numbers in C language",
          "Functions in C language, related AVR microcontrollers",
          "Variable types, variable declaration.",
          "C language: Bitwise &, |, ^ (AND, inclusive OR, exclusive OR)",
          "C language: Bitwise <<, >>, ~ (shift left, shift right, one's complement)",
          "Arithmetic and relational operators.",
          "The statement if-else",
          "The statement switch-case",
          "Loops - while() and for()",
          "C program structure, #define, #include, main(), C preprocessor.",
          "Input/Output ports, DDRx, PORTx, PINx registers. Part 1.",
          "Input/Output ports, DDRx, PORTx, PINx registers. Part 2.",
          "First project: button, LED. Simplest program.",
          "Buttons and microcontroller - various use cases. The program samples.",
          "Electronic parts used in projects. Resistors, capacitors, LED, transistors."
        ],
        "Developing for AVR microcontrollers": [
          "Schematic diagram using a button, LED, electric motor, potentiometer",
          "ATMEL STUDIO, configuration of I/O registers",
          "Connection programmer to microcontroller, uploading HEX file.",
          "PWM in AVR microcontroller",
          "ADC in AVR microcontroller",
          "Displaying ADC result on one-digit LED display.",
          "Control speed of electric motor by AVR microcontroller",
          "Adjusting the brightness of the LED using a photoresistor. ADC and PWM.",
          "AVR microcontroller with button, LED, electric motor, potentiometer",
          "Analog comparator in AVR microcontroller. ACSR register.",
          "Overflow interrupt Timer1 Atmega8. Clock timer.",
          "Practical work with non-volatile memory EEPROM.",
          "Connecting membrane switch panel to AVR microcontroller",
          "External interrupts in AVR microcontroller.",
          "Connecting encoder to AVR microcontroller",
          "DC motor control. Part 1. Torque measuring.",
          "DC motor control. Part 2. Circuit diagram.",
          "DC motor control. Part 3. The program.",
          "DC motor control. Part 4. Final video.",
          "1-Wire connection DS18B20 digital temperature sensor. Simplest thermometer."
        ],
        "Displaying information on various displays using": [
          "Introduction.",
          "Connection single LED",
          "Connection one-digit LED display. Part 1.",
          "Connection 1-digit LED display. Part 2. Increase/decrease the number by buttons.",
          "Connecting 2-digital 7-segment LED display to microcontroller AVR ATMEL",
          "Connecting 4-digital 7-segment display. Simplest clock.",
          "Connection 7-segment display using shift register by SPI.",
          "Connecting 16x2 LCD to AVR microcontroller Atmega8 by 8 wires.",
          "Connecting 16x2 LCD to AVR microcontroller Atmega8 by 4 wires.",
          "I2C library for connection 16x2 LCD display on C language.",
          "LCD graphic displays. Pins and memory description.",
          "Instruction table of LCD graphic display.",
          "LCD graphic display - control program - Part 1."
        ],
        "SPI interface in AVR microcontrollers.": [
          "Introduction",
          "Functional diagram of SPI, connection of two devices by SPI.",
          "3-wires SPI interface, circuit diagram. Digital potentiometer connecting. Part 1",
          "The source code of 3-wires SPI interface, final video of ready device."
        ],
        "USART (UART) interface in AVR microcontroller. Connection microcontroller and PC": [
          "What is UART interface, function diagram, input - output pins, circuit diagram",
          "The program - UART registers, initialization, sending symbols.",
          "ASCII symbol table, 2-digit number sending by UART",
          "String sending from microcontroller to PC, data exchange between AVR and PC",
          "Data exchange between PC and AVR by UART. Sending the strings."
        ],
        "Bluetooth module HC-05 to Android device connection using UART ATMEGA8": [
          "How to connect Bluetooth module HC-05 to PC.",
          "Connection PC to smartphone using bluetooth module HC-05",
          "Connection microcontroller AVR to smartphone using Bluetooth module HC-05"
        ],
        "ATMEL AVR XMEGA microcontroller - connection the button, display. Interrupts.": [
          "Introduction XMEGA microcontrollers.",
          "The I/O pins features, the register related I/O. DIR, DIRSET, DIRCLR, DIRTGL.",
          "Data Output Value registers: OUT, OUTSET, OUTCLR, OUTTGL.",
          "PORT Interrupt registers: INTCTRL, INTnMASK, INTFLAGS. REMAP register, PINnCTRL.",
          "First program - ON/OFF LED. Configuration DIR register.",
          "First program - ON/OFF LED. Configuration OUT register.",
          "Input pins. Connection the button. PINnCTRL register.",
          "Connection 7-segment 1-digit display. Part 1.",
          "Connection 7-segment 1-digit display. Part 2.",
          "Connection 7-segment 4-digit display to microcontroller",
          "Connection LCD character display 16x2. LCD library.",
          "Connection graphic LCD display. Part 1. What is graphic display?",
          "Connection graphic LCD display. Part 2. Instruction table description.",
          "Connection graphic LCD display. Part 3. The program. Control functions.",
          "Keypad connection. Displaying numbers received from the keypad.",
          "Port interrupts. Registers configuration, code example."
        ],
        "Watering programmable machine for indoor plants": [
          "Watering machine - circuit diagram.",
          "Watering machine - connection 7-segment display with microcontroller",
          "Description of buttons on watering machine",
          "Interrupt overflow handler. Formation of time intervals",
          "Information output on 7-segment display",
          "Non-volatile memory (EEPROM) in watering machine.",
          "Connection of peristaltic pump with watering machine",
          "Ready watering machine checking on breadboard"
        ],
        "Alarm clock on AVR microcontroller Atmega8.": [
          "Introduction. Alarm clock.",
          "Circuit diagram of alarm clock.",
          "Connection 7-segment display with microcontroller. #define section",
          "Timer1 configuration, EEPROM, the main() function of program",
          "Displaying information. Overflow interrupt handler Timer1",
          "Displaying information. Displaying functions in program.",
          "Timer2 asynchronous mode. Countdown of minutes and hours. Turn on the alarm.",
          "Checking the alarm clock on a breadboard, finished device."
        ]
      },
      "requirements": [
        "Basic knowledge of electronics, basic C language"
      ],
      "description": "Attention! All earned funds will go to support the Ukrainian army in the fight against Russian invaders.\nThis course is for beginner and advanced electronics engineers who want to gain and increase experience in developing embedded systems on AVR microcontrollers. I think that AVR ATMEL microcontrollers are the most advanced 8-bit microcontrollers. All ARDUINO projects are built by using these microcontrollers.  After completing the course, the student will receive the necessary knowledge about I/O ports, ADC, PWM, EEPROM, timers, interrupts. Much attention in this course will be paid to interfaces with external devices - sensors, wireless devices, real time clocks, external EEPROM, etc.. We will take a look the UART (USART) serial interface, SPI interface, TWI (two wire interface), the connection by 1-wire bus. The course will consider connections to the microcontroller of various devices - display devices (LED, 7-segment LED displays, LCD), matrix keyboards and so on. Students will get the experience of programming AVR microcontroller on C language.  This course includes business projects also. Finished codes sources of this projects I will send students in private messages. The course shows complete programs and videos of working devices. Work projects will be included in this course also. This training course is constantly expanding. Feedback with students. Individual lessons and project support.\nI kindly ask you to carefully read the curriculum and description of the course and do not make purchases with the aim of further refund. The course contains enough material in the public domain for you to appreciate the presentation style. Sorry, my english isn't nice))",
      "target_audience": [
        "Beginner embedded systems developers",
        "Anyone with a curiosity for making electronics",
        "People with no experience in electronics",
        "Children over 12 years old"
      ]
    },
    {
      "title": "RA: Supply Chain Applications with R & Shiny: Inventory.",
      "url": "https://www.udemy.com/course/ra-supply-chain-applications-with-r-shiny-inventory/",
      "bio": "Learn R & Shiny, Make A cloud based Inventory Application from Scratch! Take decisions Real time.",
      "objectives": [
        "Deploy a could based Inventory application.",
        "reduce stock cost and increase service level.",
        "Inventory Management.",
        "Algorithm Development",
        "Connecting to Database",
        "Mysql",
        "R",
        "Scheduling algorithms",
        "Azure",
        "DevOps",
        "Network Configurations"
      ],
      "course_content": {
        "Introduction": [
          "Why this course is Different?",
          "About RA",
          "Reccomendations",
          "Why R?",
          "Shiny",
          "Application dynamics",
          "Supply chain applications",
          "Applications overview",
          "Curriculum"
        ],
        "Welcome to the world of R": [
          "Welcome to R",
          "What is R statistical language",
          "How to install R?",
          "How to install Rstudio?",
          "A walkthrough toutrial",
          "Setup your Project",
          "Install Packages!",
          "Summary"
        ],
        "R programming fundmentals": [
          "Introduction",
          "Different Data Structures and types in R",
          "Do arithmetic Calculations in R and write Vectors",
          "Creating a list.",
          "Importing data in R and basic explorations.",
          "Selecting data in a dataframe",
          "If Else function",
          "Conditions",
          "Functions with conditions",
          "For loops",
          "Applying a function inside a forloop",
          "For loop on a data-frame",
          "Applying a function on a dataframe",
          "Assignment",
          "Assignment section4 answer part1",
          "Assignment section 4 part 2",
          "Summary"
        ],
        "Manipulation on a dataframe": [
          "Intro",
          "Intro to Dplyr",
          "Investigate with Dplyr",
          "Unique invoices",
          "Average invoice value per country",
          "Average Number of items within an invoice",
          "Joining",
          "Changing date time to date",
          "Pivot Wider",
          "Pivot longer",
          "Separate and Paste",
          "Putting it all together",
          "Assignment New-work Airlines",
          "Assignment question 1 answer",
          "Assignment Question 2 & 3 answer",
          "Assignment Question 5,6 and 6 answer",
          "Assignment Question 7",
          "Summary"
        ],
        "Shiny Basics": [
          "Introduction",
          "Installing packages",
          "First shiny application",
          "Our first UI",
          "Input and output",
          "Reactive app",
          "Fibonacci assignment",
          "Fibonacci sequence assignment",
          "Declarative and imperative programming",
          "Getting unique identifiers",
          "Overview",
          "User interface",
          "App Structure",
          "Date reactivity",
          "Country and SKU reactivity",
          "Line Plots",
          "Application Running",
          "Datatables"
        ],
        "Preparing for Inventory Algorithm": [
          "Introduction",
          "Workflow",
          "Database for inventory",
          "Download for SqlServer",
          "Installation of mySQL server and mySQL workbench",
          "Initializing database",
          "Preparing. for Database",
          "Preparing the Data",
          "Filtering Stocks",
          "Sending Stocks and sales",
          "Algorithm assumptions",
          "Purchase Orders",
          "Connect to Database",
          "Fetching realtime data"
        ],
        "Inventory Algorithm": [
          "Creating a unique Key.",
          "Parsing Dates",
          "Seasonality",
          "Defining Seasonality",
          "Beginning, ending and Receiving inventory",
          "Beginning and ending inventory",
          "Calculating stock status",
          "Total Requested and Current stock",
          "ABC",
          "ABC with Inventorize",
          "Inventory metrics",
          "Demand Lead-time and Policy explanation",
          "Inventory Calculations",
          "Adjusting for seasonality",
          "Service level",
          "Reordering quantity",
          "Finalizing Algorithm",
          "Last stock on hand date",
          "Sending Algorithm to Database"
        ],
        "Inventory App": [
          "Introduction",
          "What should be in an Inventory app?",
          "Key Input",
          "Mango Stock User Interface",
          "Managing user Input",
          "Barplot1",
          "Pivots",
          "Inventory Turns and Margin",
          "Top Sales/ Revenue",
          "Ranking",
          "PieChart and Downloading Files",
          "Finalizing Tab1",
          "Tab2",
          "Alarms Logic",
          "Alarms",
          "Alarms Page",
          "Categories Page",
          "Overview of categories page",
          "Size and Color Tab",
          "Application's Overview"
        ],
        "Deployment": [
          "Introduction",
          "Cron",
          "Scheduling the Algorithm",
          "Debugging",
          "Debugging Part1",
          "Verifying Output",
          "Azure Free account",
          "Deploying a virtual machine",
          "Setting up Server",
          "Rstudio Server",
          "Essential Libraries",
          "Shiny server",
          "Remote Database Connection",
          "Is Everything working ?",
          "Sudo R packages installation",
          "Application"
        ],
        "SQL server": [
          "Introduction",
          "Setting up a new virtual machine",
          "Connecting a virtual machine",
          "Installing libraries",
          "Mysql Configuration",
          "Creating a database",
          "Success",
          "Final Message"
        ]
      },
      "requirements": [
        "No Previous Knowledge needed"
      ],
      "description": "\" This is a project based course that will be a part of many courses on the same topic; in this Project,Mango Incorporation is hiring you to optimize their stock replenishment and automate the process for them. you will have to investigate their data and give them a real-time working solution\"\n\n\nDo you work in Inventory Control/ Procurement ?\nAre you involved in taking supply chain decisions?\nDid you ever wonder how inventory concepts work in real life?\nDo You want to make a complete end to end inventory solution for you business/company?\nDo you want to work as a consultant for supply chain?\n\n\n...... you have come to the right place :)\n\n\nRescale analytics- A data driven supply chain consultancy and a solution provider- Developed The highest rated courses in supply chain analytics and Data science with Python and R and till now it is still the only comprehensive course on the  shows how to take data driven supply chain decisions with data science with Amazing feedback from students !!\nwith this course, Based one students demand.we take it one step further; we combine Supply chain , Devops and Data science to make a comprehensive inventory course for you.\nDon't worry If you don't know how to code, we learn step by step by applying supply chain analysis!\n*NOTE: Full course includes downloadable resources and R project files, Setup Codes, lifetime access, and a 30-day money-back guarantee.\n\n\nin this course you will be able to:\n\n\n* Deploy a could based Inventory application.\n* Inventory Management techniques to be applied in  real-time in a Dynamic Environment\n* Stock Algorithm Development and Automation.\n* Connecting to remote Database .\n* Know how to setup the server where you deploy the inventory algorithm.\n* Know how to setup network configurations between multiple servers.\n* Make you app accessible through the internet.\nHappy Supply Chain mining!\nHaytham\nRescale Analytics\n\n\nFeedback from Clients and Training:\n\n\n\"In Q4 2018, I was fortunate to find an opportunity to learn R in Dubai, after hearing about it from indirect references in UK.\n\n\nI attended a Supply Chain Forecasting & Demand Planning Masterclass conducted by Haitham Omar and the possibilities seemed endless. So, we requested Haitham to conduct a 5-day workshop in our office to train 8 staff members, which opened us up as a team to deeper data analysis. Today, we have gone a step further and retained Haitham, as a consultant, to take our data analysis to the next level and to help us implement inventory guidelines for our business. The above progression of our actions is a clear indication of the capabilities of Haitham as a specialist in R and in data analytics, demand planning, and inventory management.\"\n\n\nShailesh Mendonca\nCommercial lead-in Adventure AHQ- Sharaf Group\n\n\n\n\n“ Haytham mentored me in my Role of Head of Supply Chain efficiency. He is extremely knowledgebase about the supply concepts, latest trends, and benchmarks in the supply chain world. Haytham’s analytics-driven approach was very helpful for me to recommend and implement significant changes to our supply chain at Aster group”\nSaify Naqvi\nHead of Supply Chain Efficiency\n\n\n\n\n“I participated to the training session called \"Supply Chain Forecasting & Management\" on December 22nd 2018. This training helped me a lot in my daily work since I am working in Purchase Dpt. Haytham have the pedagogy to explain us very difficult calculations and formula in simple way. I highly recommend this training.”\nDjamel BOUREMIZ\nPurchasing Manager at Mineral Circles Bearings",
      "target_audience": [
        "Supply chain",
        "Inventory",
        "Applications Development"
      ]
    },
    {
      "title": "Conga CPQ Essentials: Optimize Quote Generation (Salesforce)",
      "url": "https://www.udemy.com/course/conga-cpq-essentials-optimize-quote-generation-salesforce/",
      "bio": "A Step-by-Step Journey to Mastering Conga CPQ for Efficient Sales Operations in Salesforce ecosystem",
      "objectives": [
        "Gain a comprehensive understanding of the core concepts and components of CPQ, including configuration rules, pricing models, and quote generation processes.",
        "Become proficient in using Conga CPQ tools and functionalities to configure products, manage pricing, and generate accurate quotes efficiently.",
        "Develop the ability to apply Conga CPQ to real-world business scenarios, such as complex product configuration, pricing negotiations, and handling custom quote.",
        "Learn strategies to optimize sales processes, including streamlining quote generation, improving quote accuracy, and enhancing customer experience."
      ],
      "course_content": {
        "Introduction": [
          "Conga Community and Package Installation",
          "Lets Do Some Config Settings",
          "Our First Sample Cart",
          "The FLOW till the Cart Finalization"
        ],
        "Product Setup - Standalone, Bundle, Option, Option Group, Categories": [
          "List of Products to Setup for the Kitchen",
          "Adding Standalone Products",
          "Adding Categories to the Catalogue",
          "Understand Bundles and Options",
          "Create a Bundle and Configure it",
          "Option Groups and Options"
        ],
        "Product Setup - Product Attributes, Feature Set, Recurring Products": [
          "Associate Attributes to Products",
          "Apply Product Attribute Rules",
          "Attribute Value Matrices",
          "Compare Product with Feature Sets",
          "Promoting PAAA Kitchen to B2B",
          "Adding Products to B2B PriceList",
          "Attribute Based Pricing"
        ],
        "Product Setup - Pricing Matrix": [
          "Dimension Price Matrix (Range)",
          "Dimension Pricing Matrix (Cumulative Range)",
          "Dimensional Price Matrix (Cum-Range Line Item)",
          "Defining Packaging Fee (THE WRONG WAY)",
          "Adding Packaging Fee (THE RIGHT WAY)"
        ],
        "Product Setup -Price Ramp, Related PriceList, ChargeType Criteria, Usage Pricing": [
          "Price Ramp Scenario",
          "Implement the Price Ramp Scenario",
          "Option Pricing and Cascade Quantity",
          "Max and Min Cap on Base Price",
          "Related Based Price List",
          "Waiving off Delivery Fee (Charge Type Criteria)",
          "Usage Based Pricing",
          "Pricing - Config Setting"
        ],
        "Contraint Rules": [
          "Constraint Rules - Auto Include Scenario (Standalone + Bundle)",
          "Constraint Rule Auto Inclusion for Groups and Field-Set",
          "Constraint Rule - Multiple Conditions and Exclusion",
          "Contraint Rule - Validation and Action Criterias",
          "Constraint Rule - Config Settings"
        ],
        "Pricing Rules and Search Filer (CPQ)": [
          "Pricing Rule"
        ],
        "Callback Classes": [
          "Validation Callback Class",
          "Product Filter Callback"
        ],
        "CPQ Approvals": [
          "NINE steps for Approval Setup",
          "The Cart Level Approval",
          "Cart and LI Approval Together (using Search Filter - Child Filter)",
          "Approval Rule and Rule Entries and Rule Assignees",
          "Line Item Approval Rules"
        ],
        "Project Management": [
          "Account Level Talks",
          "Opportunity Level Talks",
          "Proposal Level Talks",
          "Summary Group Talks",
          "Line Item Level Talks"
        ]
      },
      "requirements": [
        "Knowledge of Salesforce CRM System"
      ],
      "description": "Unlock the power of Conga CPQ and transform your sales process with our comprehensive course designed for beginners and advanced users alike. This course will guide you through every step of the Configure, Price, Quote (CPQ) process, ensuring you gain the skills needed to streamline your sales operations, improve accuracy, and increase efficiency.\nWhat You Will Learn:\nThe fundamentals of Conga CPQ and its role in the sales process.\nHow to set up and configure Conga CPQ to meet your organization’s specific needs.\nBest practices for creating and managing product catalogs, pricing structures, and discounting rules.\nTechniques for generating accurate and professional quotes quickly and easily.\nAdvanced features and customization options to enhance your CPQ implementation.\nTips and tricks to troubleshoot common issues and optimize your CPQ system.\nCourse Highlights:\nStep-by-Step Guidance: Detailed instructions and practical examples to help you understand and apply Conga CPQ features effectively.\nHands-On Exercises: Real-world scenarios and hands-on activities to reinforce learning and build confidence.\nExpert Insights: Learn from industry experts with extensive experience in implementing and using Conga CPQ.\nCertification Preparation: Comprehensive coverage of topics to help you prepare for Conga CPQ certification exams.\nWho Should Enroll:\nSales professionals looking to enhance their quoting and pricing skills.\nAdministrators and IT professionals responsible for implementing and managing CPQ systems.\nBusiness analysts and consultants seeking to understand CPQ best practices.\nAnyone interested in streamlining their sales processes and improving efficiency.\nBy the end of this course, you will have a thorough understanding of Conga CPQ and be equipped with the knowledge and skills to leverage its capabilities for your organization’s benefit. Join us and take the first step towards mastering Conga CPQ and revolutionizing your sales process.",
      "target_audience": [
        "Salesforce CPQ Developer, Sales Operations Professionals, CRM Administrators and Salesforce Users, Business Analysts, Consultants and Solution Architects"
      ]
    },
    {
      "title": "Truly Master Kubernetes",
      "url": "https://www.udemy.com/course/truly-master-kubernetes/",
      "bio": "Fundamentals and Core Concepts",
      "objectives": [
        "Why Kubernetes has become so popular",
        "Kubernetes pros and cons",
        "Important background material: a Docker Containers crash course and a YAML crash course",
        "Containers vs Virtual Machines",
        "The Kubernetes system architecture",
        "How to run a local development cluster using Minikube",
        "How to use Google Kubernetes Engine (GKE) to host a cluster in the cloud for development or production",
        "Kubernetes basics like Pods, Label Selectors, Annotations, and Namespaces",
        "Kubernetes controllers like ReplicaSets, Deployments, and DaemonSets",
        "Kubernetes services and service discovery--including LoadBalancer services, NodePort services, and session affinity",
        "How to use the Kubectl CLI utility--including useful commands like \"apply\", \"exec\", \"port-forward\", and \"top\", to name a few",
        "Liveness Probes/Health Checks and Readiness Probes",
        "Container Lifecycle Hooks",
        "Init containers"
      ],
      "course_content": {
        "The Big Picture": [
          "Introduction",
          "Microservices",
          "Containers",
          "Containers vs VMs",
          "Kubernetes Pros and Cons",
          "What This Course Covers: Admins vs Users",
          "Kubernetes Architecture"
        ],
        "Foundation": [
          "Introduction",
          "Docker Crash Course",
          "__ Docker Client and Daemon",
          "__ Hello World!",
          "__ Dockerfiles",
          "__ Build, Push, and Run Images",
          "Setting Up a Kubernetes Cluster",
          "__ Installing Minikube",
          "__ Creating a Cluster on GKE",
          "YAML Crash Course",
          "__ Comments, Whitespace, and Doc Start",
          "__ From JSON to YAML",
          "__ Arrays",
          "__ Booleans, Nulls, and Strings",
          "Conclusion"
        ],
        "Pods": [
          "Introduction",
          "Pod Description",
          "Config File Basics",
          "Creating Pods",
          "Viewing the Output",
          "YAML and JSON Config Files",
          "Printing K8s Objects",
          "Restart Policy",
          "Pod Termination",
          "__ Grace Periods and Forced Termination",
          "Customizing Containers",
          "__ Setting the Default Command",
          "__ Running Commands in a Shell",
          "__ Environment Variables",
          "Init Containers",
          "__ The Motivation for Init Containers",
          "__ Init Container Examples",
          "Stopping and Deleting Minikube",
          "Conclusion"
        ],
        "Names, Labels, Annotations, and Namespaces": [
          "Introduction",
          "Object Names and UIDs",
          "__ Finding an Object's UID",
          "Labels",
          "Label Selectors",
          "__ Using Selectors",
          "Annotations",
          "Namespaces",
          "__ Namespaces in Kubectl Commands",
          "__ Namespaces in Config Files",
          "Conclusion"
        ],
        "Basic Controllers": [
          "Introduction",
          "ReplicaSets",
          "__ Accidental Matches",
          "__ Pod Labels vs ReplicaSet Labels",
          "__ Pod Restart Policy",
          "__ Creating ReplicaSets",
          "__ Scaling ReplicaSets",
          "__ Deleting ReplicaSets",
          "__ Naked Pods",
          "__ ReplicationControllers vs ReplicaSets",
          "Deployments",
          "__ Creating a Deployment",
          "__ Scaling a Deployment",
          "__ The \"describe\" Command",
          "__ Updating a Deployment on the Fly",
          "____ Deployment Strategies",
          "____ The \"rollout\" Command",
          "DaemonSets",
          "__ Alternatives to DaemonSets",
          "__ DaemonSet Config Files",
          "__ Creating a DaemonSet",
          "__ Deleting a DaemonSet",
          "__ Run Pods on Specific Nodes",
          "__ GKE Cluster Cleanup",
          "__ DaemonSets and Cluster Boot Up",
          "Conclusion"
        ],
        "Services": [
          "Introduction",
          "What Are Services?",
          "Service Demo",
          "Custom Cluster IPs",
          "\"port\" vs \"targetPort\"",
          "The \"expose\" Command",
          "Service Discovery",
          "__ DNS",
          "__ Environment Variables",
          "Externally-Exposed Services",
          "__ NodePort Services",
          "____ Why Use a NodePort Service?",
          "____ A NodePort Service Example",
          "____ Choosing the NodePort Value",
          "__ LoadBalancer Services",
          "__ No-Selector Services",
          "____ User-Defined Endpoints",
          "____ User-Defined Endpoints Example",
          "Session Affinity",
          "Multi-Port Services",
          "Conclusion"
        ],
        "The Kubectl Utility": [
          "Introduction",
          "Command Formats",
          "Object Type Names",
          "One Command, Many Targets",
          "The \"replace\" and \"patch\" Commands",
          "The \"apply\" Command",
          "More on the \"create\" Command",
          "The \"get\" Command Revisited",
          "The \"delete\" Command Revisited",
          "The \"attach\" Command",
          "The \"exec\" Command",
          "The \"cp\" Command",
          "The \"port-forward\" Command",
          "The \"top\" Command",
          "Conclusion"
        ],
        "Probes and Lifecycle Hooks": [
          "Introduction",
          "What Are Probes?",
          "__ Probe Handler Types",
          "__ Probe Types",
          "____ \"execAction\" Liveness Example",
          "____ Optional Probe Configuration",
          "____ \"httpGetAction\" Liveness Example",
          "____ \"tcpSocketAction\" Liveness Example",
          "__ Readiness Probes",
          "Container Lifecycle Hooks",
          "__ Hook Handlers",
          "__ Exec Lifecycle Hook Example",
          "__ The Format of \"httpGet\" Lifecycle Hooks",
          "__ When a Hook Handler Hangs",
          "__ Debugging a Lifecycle Hook",
          "__ Hook Delivery Guarantees",
          "Conclusion"
        ],
        "Conclusion": [
          "Bonus Lecture!"
        ]
      },
      "requirements": [
        "No previous Docker or Kubernetes experience is required (there's a crash course to get everyone on the same page)",
        "Basic terminal/command line experience",
        "Familiarity with the Linux/OSX terminal (helpful, but not mandatory)",
        "Admin access in order to install things like Minikube on your computer"
      ],
      "description": "What is Kubernetes?\nWhen you run a server in production, how do you handle problems such as...\nhardware failures\napplication crashes\nspikes in user demand\nupdates and redeployments of your application\nautomatically managing any number of Docker containers\nmigrating to completely different data centers or cloud providers\nSure. You could handle these problems using a collection of utility programs and custom infrastructure code. But that's a lot of work.\nOn the other hand, you can package your application in Docker containers and run those containers in Kubernetes!\nThe combination of containers and Kubernetes frees you from creating lots of infrastructure to manage your applications running in production.\nThat's no small thing.\nSo what is Kubernetes?\nKubernetes is a container management system.\nKubernetes makes your containerized applications highly reliable.\nIt reduces the number of damage control incidents and late night emergency phone calls from work.\n\n\nWhy Learn Kubernetes?\nKubernetes helps you manage your application in production by providing...\nautomatic crash recovery\nbuilt in load balancing\nhorizontal scaling using a single command\nupgrade your app while maintain 100% uptime\nrevert without any downtime\nsimple service discovery\nautomatic container scheduling\nsecret data management\nKubernetes has a pluggable (customizable) architecture.\nIt abstracts away the underlying hardware.\nIt is open source (no vendor lock-in).\nIt's very popular—and growing more so every year.\n\n\nWhat is Nick's Teaching Style?\nEvery lesson follows a four-part philosophy. I'm going to teach you...\nwhat you're about to learn\nwhy it's important\nhow to code it up and use it\nwhich corner cases and caveats that you need to be on the lookout for\nThe course contains lots and lots of examples. They are designed to be...\ninteresting and entertaining\nconcise and to the point\nclear and without any unnecessary complications",
      "target_audience": [
        "Software Developers",
        "DevOps Engineers",
        "Anyone who is interested in using Kubernetes to manage containers!",
        "Kubernetes Beginners",
        "Container Beginners",
        "Docker Beginners"
      ]
    },
    {
      "title": "C# and .NET - Advanced topics",
      "url": "https://www.udemy.com/course/csharp-and-dotnet-advanced-topics/",
      "bio": "Become a better .NET developer by learning the internals of the .NET Framework",
      "objectives": [
        "Deep knowledge about the internals of .NET: Object finalization in the CLR, Struct layout in C#, Exception filters, and more",
        "Managed pointers in the CLR: The ref keyword in C# and its role in high performance coding, ref return and ref local, Span<T>",
        "CoreCLR internals",
        "Finalizers",
        "Destructor vs. Finalizer",
        "IDisposable vs. Finalizer"
      ],
      "course_content": {
        "Introduction": [
          "Course intro",
          "Course Logistics"
        ],
        "Exception filters": [
          "C# syntax and exception filters in ECMA 335",
          "Logging with Exception filters, Debugging and Performance",
          "Exception filters - Quiz"
        ],
        "Managed pointers in the CLI, the ref keyword in C#, and Span<T>": [
          "The ref keyword in C# and managed pointers in the CLI",
          "ref return in C#",
          "Span<T> - managed, unmanaged, and stack memory in .NET",
          "Span<T> - String parsing",
          "The C# 'ref' keyword and Span<T>"
        ],
        "Finalizers in .NET": [
          "Finalizers and the GC - Finalization, Freachable queue, Threading and Finalizers",
          "Finalizers in practice",
          "IDisposable vs. Finalizer - Using a class that implements IDisposable",
          "Implementing a class that wraps managed and unmanaged resources",
          "Finalizers in .NET - Quiz"
        ],
        "Struct layout in C#": [
          "Struct layout in C# - Sequential layout",
          "StructLayoutAttribute - Auto and Explicit Layout, PackSize"
        ]
      },
      "requirements": [
        "Solid C# software development skills",
        "Fundamental knowledge about the .NET Framework",
        "C# classes, structs, basic Object Oriented Programming knowledge",
        "Visual Studio 2017+",
        ".NET Full Framework (4.7+)",
        ".NET Core (2.1+)"
      ],
      "description": "Do you want to take your .NET development skills to the next level? Do you already write code in C#, and you wonder what happens under the hood when the CLR executes your C# code?\nIf so, then this course is for you!\nThis course is designed for C#/.NET developers who want to take their knowledge to the next level. We will cover advanced topics like:\nobject finalization\nstruct layout\nexception filters\nmanaged pointers in the CLR\nthe ref keyword and its role in high performance coding\nSpan<T>\nand many more\n\n\nMaking a compact course without any fluff and noise was one of the highest priorities during the creation process. Therefore, the videos are short and self-contained. Even if you only have 10 or 15 minutes every day, this course is still a perfect fit for you!\nYou can take the sections within the course in any order. In case your favorite topic is not what we cover in the first section feel free to start wherever you want. On the other hand, videos within the sections are in order, so in each section you should start with the first video.\nAll right, let’s get started and become .NET experts together!",
      "target_audience": [
        "Software developers curious about the internals of the .NET framework (Both .NET Core and .NET Full framework)",
        "C# developers who want to know what the C# compiler does with their code"
      ]
    },
    {
      "title": "Data Structures From Scratch",
      "url": "https://www.udemy.com/course/data-structures-from-scratch/",
      "bio": "This course is designed to help you understand concepts of data structures in detail with applications",
      "objectives": [
        "apply data structure concepts in different applications of computer science",
        "compare and contrast different data structure based on application",
        "write their own algorithms and can analyse between different algorithm",
        "implement various algorithms in programming language",
        "develop planning skills required for datastructure"
      ],
      "course_content": {
        "Introduction To Data Structures": [
          "Introduction To Data Structures",
          "Abstract Data Type",
          "Basics of Array",
          "Concept of Addresses in One Dimensional Array",
          "One Dimensional Array in C++",
          "Basics of Two Dimensional Array",
          "Memory Representation of Two Dimensional Array",
          "Two Dimensional Array in C++",
          "List as an Abstract Data Type"
        ],
        "List And Arrays": [
          "Array List in C++"
        ],
        "Linked List and Analyses": [
          "Array based Linked List and intuition",
          "Dynamic Linked List",
          "Linked List traversal",
          "Linked List insert at last",
          "Linked List Insertion at Middle",
          "Delete Node from Linked List",
          "Analyses of Linked List",
          "Recursion"
        ],
        "Stacks": [
          "Basics of Stack",
          "Stack Operation",
          "Stacks using Linked List",
          "Application of Stacks : Factorial",
          "Application of Stacks: Arithmetic",
          "a. Infix to Postfix",
          "b. Infix to Postfix",
          "c. Infix to Postfix",
          "Algorithim to convert Infix to Postfix",
          "Evaluation of Postfix"
        ],
        "Queues": [
          "Introduction to Queue",
          "Queue Illustration",
          "Array Based Implementation of Queue",
          "C++ Tutorial on Queue"
        ],
        "Trees": [
          "Introduction To Trees",
          "Classification of Trees and Introduction to Binary Trees",
          "Representation of Binary Trees : Array Based Approach",
          "Linked/Dynamic Representation of Binary Trees",
          "Tree Traversal : Inorder",
          "Tree Traversal : Preorder",
          "Tree Traversal: Post Order",
          "Expression Trees",
          "Algorithm To Build Expression Tree",
          "Implementing Binary Trees",
          "C++ Implementation of Binary Trees"
        ],
        "Binary Search Trees": [
          "Introduction to Binary Search Tree",
          "BST: Search Item",
          "BST: Insertion"
        ],
        "AVL Trees": [
          "Introduction To AVL Trees",
          "Why AVL Trees?",
          "AVL Trees Rule",
          "a. Insertion into AVL Trees",
          "b. Insertion into AVL Trees",
          "AVL Trees Algorithm",
          "C++ Implementation of AVL Trees"
        ]
      },
      "requirements": [
        "Basics of programming",
        "Command over any programming language is preferred. (Java or C++)"
      ],
      "description": "Data structure is an efficient way of organizing data and keeping the mess out of your system. This course teaches further about these data structures. The most popular data structures in store data category include binary search trees, hash tables, heaps, and graphs. After learning the codes, you will be able to develop your knowledge side by side with your teacher. There are lot of other courses on data structures so why take this course?? (1. Teaching Style + Side by Side Coding with Theory 2. No use of traditional powerpoint slides)\nThis course was primarily made for those with basic knowledge of C++ that want to improve in computer science.\nWhat is the working system of this course?\nProviding the illustration and examples for better understanding\nEasy lectures for beginners\nComplete detailed explanation of data structures\nCode in C++\nWhat does this course cover?\nArrays\nStacks\nAbstract data type\nQueues\nLinkedList\nRecursion\nTrees and other algorithms\nHash Tables and Graphs (To be covered soon)\nAfter completing the course, you will have enough knowledge to code these data structures on your own and be confident enough to perform your own data structural operations. Its purpose is to facilitate the introduction to programming and exercise the strategies. When designing or using a library, two things are fundamental: time efficiency operations with objects of classes and memory management. The C ++ is a language that tends to be very effective in these areas. This course is crucial in all these categories and will help you learn in the easiest possible way.\nKnowing the basic techniques used during intermediate generation, optimization and code generation expanding programming techniques is the plot of computer science that you will always come back to.",
      "target_audience": [
        "This data structure course is meant for those who are familiar with basic understanding of programming."
      ]
    },
    {
      "title": "Professional C#: The Best Course on Intermediate C# coding",
      "url": "https://www.udemy.com/course/intermediate-csharp/",
      "bio": "Build on your programming skills with Inheritance, Interfaces, Generics, LInQ and much more",
      "objectives": [
        "Best practices in object-oriented C# development",
        "New features in C#, including lambda expressions and LInQ",
        "The .Net Core development",
        "Test Driven development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Instructor Bio",
          "Using Udemy Code Exercises",
          "Lab Alternatives"
        ],
        "Review of C# Basics": [
          "A C# Class",
          "The Employee Class",
          "Local Coding Exercise - The Employee Class",
          "Lab Review"
        ],
        "Object-Oriented C#": [
          "Exceptions",
          "Exceptions Lab",
          "Local Coding Exercise - Exceptions",
          "Exceptions Lab Review",
          "Inheritance - The Basics",
          "Inheritance Lab 1",
          "Local Coding Exercise - Inheritance Lab 1",
          "Inheritance Lab 1 Review",
          "Inheritance Part 2 - Construction",
          "Inheritance Lab 2 - Construction",
          "Local Coding Exercise - Inheritance Part 2 - Construction",
          "Inheritance Lab 2 Review",
          "Inheritance Part 3 - Polymorphism",
          "Inheritance Lab3 - Template Method",
          "Local Coding Exercise - Inheritance Part 3 - Template Method",
          "Inheritance Lab 3 Review",
          "Interfaces",
          "Interface Lab",
          "Local Coding Exercise - Interfaces",
          "Interfaces Lab Review",
          "Generics",
          "Generics Lab",
          "Local Coding Exercise - Generics",
          "Generics Lab Review",
          "Tuples",
          "Operator Overloading",
          "Operator Overloading Code Exercise",
          "Local Coding Exercise - Operator Overloading",
          "Operator Overloading Lab Review"
        ],
        "A Survey of the .Net Core Library": [
          "Class Object",
          "Overriding Object Methods Code Exercise",
          "Local Coding Exercise - Overriding Object Methods",
          "Overriding Object Methods Lab Review",
          "Collections",
          "Collections Code Exercise",
          "Local Coding Exercise - Collections",
          "Collections Lab Review",
          "Dates & Times",
          "Extension Methods",
          "Extension Method Code Exercise - String.IsMatch",
          "Local Coding Exercise - Extension Methods",
          "Extension Methods Lab Review"
        ],
        "Functional Programming": [
          "Delegates",
          "Delegate Lab",
          "Local Coding Exercise - Delegates",
          "Delegates Lab Review",
          "Events",
          "Events Lab",
          "Local Coding Exercise - Events",
          "Events Lab Solution",
          "Lambda Expressions",
          "Lambda Lab",
          "Local Coding Exercise - Lambda",
          "Lambda Lab Review",
          "Language Integrated Query (LInQ)",
          "Local Coding Exercise - LiNQ",
          "LiNQ Lab Review"
        ],
        "Reflection & Metadata": [
          "Attributes & Reflection Basics"
        ],
        "Multitasking": [
          "Threads"
        ]
      },
      "requirements": [
        "Introduction to C#",
        "Experience in other curly braced languages like C++ or Java"
      ],
      "description": "This course is for experienced developers or developers that have taken our introduction course.  This course provides all the skills required to become an expert C# developer.\nWhy choose this course?  Microsoft uses this course and other of Chuck's courses to train their developers internally.  Chuck's courses have been delivered to thousands of developers in-person, online and via Udemy, including  major corporations, government agencies and military around the world.\nChuck walks you through not only the language syntax, but also best practices with an emphasis on good design and architecture.\nGet lots of hands-on experience with\nClass design and implementation\nExceptions - the correct way to detect and react to error conditions\nInheritance - the basic syntax and concepts to get you started\nConstructors and Inheritance - the right way to initialize objects\nPolymorphism - The real reason we code object-oriented applications\nInterfaces - Inheritance vs Interface - inverting the dependency in design with interfaces\nGenerics - learn how to code and use generics\nTuples - a quick way to define and use simple objects\nOperator Overloading - learn to use and design your own operators to enhance the usability of your classes\nThe .Net library - this survey of the .Net library starts with Object and continues to collections,, dates and times, and extension methods - a key feature of C#\nDelegates - get started with functional programming concepts with delegates\nEvents - take the next step in functional programming with events\nLambda expressions - Become a functional programming pro with lambdas!\nLiNQ - query and transform data with ease using LiNQ\nReflection and Metadata\nThreads & Tasks\nReinforce your learning with lots of interactive labs and assignments with instant feedback and instructor support",
      "target_audience": [
        "Developers that need to learn C#",
        "C# Developers that want to up their game"
      ]
    },
    {
      "title": "Git and GitHub - From The Beginning",
      "url": "https://www.udemy.com/course/complete-git-and-github-course-beginner-friendly-approach/",
      "bio": "In this course, you would learn Git and GitHub from beginner to advanced levels using a practical approach.",
      "objectives": [
        "Learn the key concepts of Git version control system.",
        "Learn and understand Git Workflow.",
        "Learn how to install and setup Git.",
        "Learn all the basic Git commands.",
        "Learn how to stage and make commits in Git.",
        "Learn how to revert commits.",
        "Learn the concept of Branching in Git.",
        "Learn how to create Aliases in Git.",
        "Learn how to merge and handle merge conflicts.",
        "Learn how to compare different version of your git repository",
        "Learn how to debug commits.",
        "Learn how to setup SSH.",
        "Learn how to connect your local repository to GitHub.",
        "Learn key GitHub concepts such as creating/cloning/forking repositories, push, pull requests, issues, labels, adding collaborators etc.",
        "And many more..."
      ],
      "course_content": {},
      "requirements": [
        "A computer and internet access.",
        "Basic knowledge on using a computer.",
        "Some basic knowledge about coding is helpful."
      ],
      "description": "In this course, you would learn Git and GitHub from beginner to advanced levels using a practical approach. I have tried as much as possible to make the course simple, easy to understand and beginner-friendly.\n\n\nNow, what is the importance of learning git and GitHub?\nIf you are a developer or a software engineer and you hope to work either as a freelancer or in a software development company, then the knowledge of Git and GitHub is a MUST. This is because git is the version control system that helps you track and manage changes on a project while you collaborate with other developers. It also helps you participate and contribute to open source projects of potential employers.\nBut even if you don't work in a software development company, git and GitHub would still help you manage version control in your private project and this is a good enough reason to learn Git and GitHub.\n\n\nCourse Approach\nIn this course we begin by learning the basics of git and then together, we create a project that is uploaded to GitHub. we then go into some advanced concepts.\nThe course is organized to cover the following\n1. Basics of the command line.\n2. Basics of Git\n3. Practicing Git\n4. Some advanced Git concepts\n5. GitHub\n5. Using Git in Visual Studio Code.\n\n\nBut what is Git?\nGit is an Open Source Distributed Version Control System that help developer manage changes to a project over time.\nLet's break down the keywords in the git definition above.\nGit is free to download and install and you can create a GitHub account for free also.\nControl System: This basically means that Git is a content tracker. So Git can be used to store content — it is mostly used to store code due to the other features it provides.\nVersion Control System: The code which is stored in Git keeps changing as more code is added. Also, many developers can add code in parallel. So Version Control System helps in handling this by maintaining a history of what changes have happened.\nDistributed Version Control System: Git has a remote repository which is stored in a server and a local repository which is stored in the computer of each developer. This means that the code is not just stored in a central server, but the full copy of the code is present in all the developers’ computers. Git is a Distributed Version Control System since the code is present in every developer’s computer.\nWhat is GitHub?\nGitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere. To get started with GitHub, you simply need to create a free GitHub account.\n\n\nBy the end of this course, you would be comfortable using Git and GitHub.",
      "target_audience": [
        "Software engineers, web developers, mobile developers and freelancers interested in learning Git.",
        "Individuals new to Git and Github.",
        "Anyone interested in learning a version control system",
        "This course is not for expert level Git and GitHub users."
      ]
    },
    {
      "title": "High-level System Design Bootcamp",
      "url": "https://www.udemy.com/course/high-level-system-design-bootcamp/",
      "bio": "Ace the High Level System Design Interviews and Architect Real World Systems",
      "objectives": [
        "Cracking System Design Interviews ( FAANG included )",
        "Designing the most popular systems like Google, Netflix, etc. from scratch",
        "Discussing the design trade-offs with the interviewer and playing to your strengths",
        "Most important design & scalability concepts",
        "Communication Protocols, Sharding Strategies, Caching, CAP Tradeoffs, Load Balancing, Message Queues, Data Partitioning, Fault Tolerance, Replication Strategies",
        "Building robust systems that scale"
      ],
      "course_content": {
        "Introduction": [
          "How should you take this course ?",
          "Architecture diagrams."
        ],
        "Back-of-the-envelope estimations": [
          "Introduction",
          "May the numbers be with you",
          "Approaching the problems",
          "The numbers awaken!"
        ],
        "High-level trade-offs": [
          "Introduction",
          "Performance vs Scalability",
          "Latency vs Throughput",
          "CAP theorem",
          "What will you trade-off ?"
        ],
        "Scalability of a system": [
          "Introduction",
          "Horizontal vs Vertical Scaling",
          "Perfectly Load Balanced, as all things should be!",
          "Scale it up!"
        ],
        "Caching": [
          "Introduction",
          "Types of Cache",
          "Cache Update Strategies",
          "Cache Eviction Policies",
          "Gotta Cache 'Em All"
        ],
        "Database evaluation": [
          "Introduction",
          "RDBMS",
          "NoSQL",
          "SQL or NoSQL ?",
          "Sharding",
          "Watched a movie last night. Its SQL is coming out soon .."
        ],
        "Design a ride-booking system : Uber, Lyft, Grab, Ola": [
          "Introduction and System Requirements",
          "Capacity estimations",
          "Database design",
          "API design",
          "Scaling the system",
          "High-level design",
          "Summary"
        ],
        "Design a search engine : Google, Yahoo, Bing, DuckDuckGo": [
          "Introduction",
          "System requirements",
          "Capacity estimations",
          "Database design",
          "Design components",
          "High-level design",
          "Summary"
        ],
        "Design a video streaming platform : Netflix, YouTube, Hotstar": [
          "Introduction",
          "System requirements",
          "Capacity estimations",
          "Database design",
          "API design",
          "Scaling the system",
          "High-level design",
          "Summary"
        ],
        "Design a real-time chat application : Facebook Messenger, WhatsApp, Telegram": [
          "Introduction",
          "System requirements",
          "Capacity estimations",
          "Database design",
          "Scaling the system",
          "High-level design",
          "Summary"
        ]
      },
      "requirements": [
        "Willingness to learn something new.",
        "Basics of SQL"
      ],
      "description": "Why should you take this course ?\nIn the real-world, most of the engineers don't get to design new systems in their career. Only a handful of engineers get to work on such an opportunity. But when it comes to interviews, we suddenly expect everyone to be a master of system design. This course covers all the important concepts to get you prepared for system design rounds. The core focus of the course lies in my approach to design the most popular systems such as Google, WhatsApp, Netflix, and many more.\n\n\nHigh-level design, also known as Architecture Design, is used in most of the software engineering hiring process as an important assessment to identify a great candidate. From freshers to Staff Software Engineers, most of the companies dedicate at least 1 such round in the entire interview process.\n\n\nThis course focuses on the high-level aspects of the design. The only way to get better at interviews is by understanding the base of concepts, and then practicing lots of design problems. Additionally, this course is ideal for working professionals who want to improve their knowledge of systems.\n\n\nGuaranteed Takeaway\nAfter this course completion, you will not fear any high-level system design round of an interview. You'll be asking the right questions about the problems, and will be confident to jab at any design. That is my solemn promise to you.\n\n\nReach Out !\nIf there are more system design interview questions you'd like me to solve or additional topics you'd like me to cover, let me know! :)",
      "target_audience": [
        "Software engineers of all levels preparing for System Design interviews",
        "Senior engineers that are looking to make the next step in their career",
        "Software architects that are looking to broaden their knowledge"
      ]
    },
    {
      "title": "Ultimate DevSecOps With Real World Scenarios",
      "url": "https://www.udemy.com/course/ultimate-devsecops-with-real-world-scenarios-new/",
      "bio": "In this course you will learn all the DevOps technologies and methods needed for your career",
      "objectives": [
        "What is DevOps vs DevSecOps",
        "Linux/Unix For DevOps and Developers",
        "Learn Python From the Scratch",
        "Make your own Ethical Hacking Tools In Python",
        "Learn Cloud Services - AWS (Amazon Web Services)",
        "Learn Continuous Integration And Continuous Delivery CI/CD - Jenkins",
        "Learn Containerization Technology - Docker",
        "Learn Containerization Technology - Kubernetes",
        "Learn IAC (Infrastructure As Code) - AWS Cloud Formation",
        "Learn IAC (Infrastructure As Code) - Terraform",
        "Learn Continuous Monitoring - AWS CloudWatch",
        "Learn Cyber Security Threats and the Best Practices",
        "Learn Soft Skills for DevOps",
        "Real Life Scenarios with Practice Step-By-Step"
      ],
      "course_content": {
        "Introduction": [
          "What Is DevOps Vs DevSecOps"
        ],
        "Linux/Unix For DevOps and Developers": [
          "Slides",
          "Linux from the beginning – History and Evolution",
          "Linux vs Unix",
          "Unix Architecture",
          "Linux Directory Structure",
          "Basic Linux Commands",
          "Basic Linux Commands Hands-On",
          "Working with Directories",
          "Working with Directories Hands-On",
          "Listing Files and Understanding ls Output",
          "Listing Files and Understanding ls Output Hands-On",
          "Links and Shortcuts in Linux",
          "Links and Shortcuts in Linux Hands-On",
          "File and Directory Permissions",
          "File and Directory Permissions Hands-On",
          "Finding Files and Directories Hands-On",
          "Viewing Files and the Nano Editor",
          "Viewing Files and the Nano Editor Hands-On",
          "Editing Files in Vi/Vim",
          "Editing Files in Vi/Vim Hands-On",
          "Linux copy move commands Hands-On",
          "Input Output and Redirection",
          "Input Output and Redirection Hands-On",
          "Linux Comparing Files Hands-On",
          "Linux Transfer Files Over Network",
          "Shell Aliases Hands-On",
          "Linux Environment Variable Hands-On",
          "Processes and Job Control",
          "Processes and Job Control Hands-On",
          "Scheduling Repeated Jobs with Cron",
          "Scheduling Repeated Jobs with Cron Hands-On",
          "Linux History Hands-On",
          "Linux Sudo Another Users Hands-On",
          "Linux Users Management Hands-On",
          "The Linux Boot Process",
          "Linux File System Hands-On",
          "What is Shell Scripting",
          "Linux Operators",
          "Linux Loops",
          "Linux Var Special",
          "Linux Functions",
          "Linux if else Case",
          "Linux Interview Preparation Part 1",
          "Linux Interview Preparation Part 2",
          "Linux Interview Preparation Part 3"
        ],
        "Python For Ethical Hackers": [
          "Install Python",
          "Hello World",
          "Data Types",
          "Numbers",
          "Math functions",
          "Operator Precedence",
          "Variables",
          "Strings",
          "Escape Sequence",
          "Types Conversion",
          "Formated Strings",
          "Strings Indexes",
          "Boolean",
          "Lists",
          "List Methods",
          "Matrix",
          "None",
          "Dictionary",
          "Dictionary Methods",
          "Tuple",
          "Conditional If Else",
          "For Loop",
          "Range",
          "While",
          "Break Continue Pass",
          "Functions",
          "Args Kwargs",
          "Packages in Python",
          "Error Handling",
          "Input / Output (IO)",
          "Input/Output (IO) Error Handling",
          "What is Port Scanner and how it works",
          "Building our first Port Scanner from the scratch",
          "Web Application Directory Discovery",
          "Building our first Directory Discovery from the scratch",
          "What is Brute Force Attack",
          "Types of Brute Force Attacks",
          "Building our first Brute Login from the scratch"
        ],
        "AWS (Amazon Web Services) For DevOps": [
          "What is AWS and Why",
          "IAM Introduction",
          "IAM How Can Users Access",
          "IAM Users Groups",
          "IAM Password Policy",
          "IAM Policy",
          "IAM MFA",
          "IAM CLI (Command Line)",
          "IAM Cloud Shell",
          "IAM Role",
          "IAM Security Tools",
          "EC2 Introduction",
          "EC2 Launch Your First",
          "EC2 Instance Connect",
          "EC2 Roles (Instance Profile)",
          "EC2 Placement Group Overview",
          "EC2 Placement Group Hands On",
          "EC2 Hibernate",
          "EC2 ENI (Elastic Network Interface)",
          "EC2 Spot Instances",
          "EBS Overview (Elastic Block Storage)",
          "EBS Hands On (Elastic Block Storage)",
          "AMI Overview (Amazon Machine Images)",
          "AMI Hands On (Amazon Machine Images)",
          "EFS Overview (Elastic File System)",
          "EFS Hands On (Elastic File System)",
          "ASG Overview",
          "ASG Launch configuration",
          "ASG Create ASG Groups",
          "ELB Overview",
          "ELB Classic",
          "ELB Target groups",
          "ELB Network LB",
          "ELB Application LB",
          "VPC overview",
          "Create your first VPC",
          "VPC Subnets",
          "Elastic IP",
          "VPC Route Tables",
          "VPC NAT",
          "VPC Egress Only",
          "VPC ACL",
          "VPC Peering",
          "VPC Internet Gateway",
          "Route53 Overview",
          "Route53 Register Domain",
          "Route53 HostedZones",
          "Route53 HealthCheck",
          "AWS Interview Preparation Part 1",
          "AWS Interview Preparation Part 2",
          "AWS Interview Preparation Part 3",
          "AWS Interview Preparation Part 4",
          "AWS Interview Preparation Part 5",
          "AWS Interview Preparation Part 6"
        ],
        "Jenkins CI/CD": [
          "What is CI/CD?",
          "What is Jenkins and why",
          "Install Jenkins",
          "Create Jenkins job",
          "Job General",
          "Job SCM",
          "Job Triggers",
          "Job Environment",
          "Job Build",
          "Job Post Build",
          "Job Views",
          "Managements System Information",
          "Managements Global Tool",
          "Managements System Logs",
          "Managements Configure System",
          "Managements Plugin",
          "Managements Users",
          "Managements Security",
          "Managements Credentials",
          "Managements Nodes"
        ],
        "Containerization Technology - Docker": [
          "What is Docker and why",
          "How Docker works Architecture",
          "VM vs Containers",
          "Install Docker On Linux",
          "Install Docker On MAC",
          "Docker Overview",
          "Docker Engine",
          "Docker Images",
          "Docker Containers",
          "Docker Storage",
          "Docker Networking",
          "Docker Commands Overview",
          "Dockerfile Basics",
          "Compose Basics",
          "Hello World Container",
          "Ubuntu Container",
          "Containers Management",
          "Images Management",
          "Our first Nginx Container",
          "Nginx Custom",
          "Dockerfile part1",
          "Dockerfile part2",
          "compose INTRO",
          "compose YAML Syntax",
          "compose app py file",
          "compose Dockerfile",
          "compose docker app py",
          "compose up",
          "compose bind mount",
          "compose more option",
          "Docker Interview Preparation Part 1",
          "Docker Interview Preparation Part 2",
          "Docker Interview Preparation Part 3",
          "Docker Interview Preparation Part 4"
        ],
        "Containerization Technology - Kubernetes": [
          "Concepts Overview",
          "Kubernetes Components",
          "Create a Kubernetes cluster",
          "Deploy an app",
          "Explore your app",
          "Expose your app publicly",
          "Scale up your app",
          "Curriculum of the CKAD exam",
          "Core Concepts (13%)",
          "Multi-Container Pods (10%)",
          "Pod Design (20%)",
          "State Persistence (8%)",
          "Configuration (18%)",
          "Observability (18%)",
          "Services and Networking (13%)"
        ],
        "IAC (Infrastructure As Code) - AWS CloudFormation": [
          "What is IAC (Infrastructure As Code)",
          "CloudFormation Overview",
          "YAML Syntax",
          "CloudFormation Create Stack",
          "CloudFormation Update Delete stack",
          "CloudFormation Parameters",
          "CloudFormation Resources",
          "CloudFormation Mapping",
          "CloudFormation Outputs",
          "CloudFormation Conditions",
          "Cloudformation Internsic Function",
          "CloudFormation User data",
          "CloudFormation cfn init",
          "CloudFormation cfn Signal",
          "CloudFormation RollBack",
          "CloudFormation Nested",
          "CloudFormation Change sets",
          "CloudFormation DependsOn",
          "CloudFormation Drift detect"
        ],
        "IAC (Infrastructure As Code) - Terraform": [
          "Terraform Introduction",
          "Terraform Visual Studio Code Download",
          "Terraform Folder Setup",
          "Terraform Create your First Resource",
          "Terraform Install Terraform",
          "Terraform IAM Users",
          "Terraform Generate Secrets",
          "Terraform INIT",
          "Terraform PLAN",
          "Terraform APPLY",
          "Terraform Destroy",
          "Terraform tfstate File",
          "Terraform Strings",
          "Terraform boolean variables",
          "terraform list var",
          "terraform Map var",
          "terraform using string var",
          "terraform using list var",
          "terraform using map var",
          "terraform using input var",
          "terraform using output",
          "terraform using object var",
          "terraform EC2 Create Instance",
          "Terraform EC2 EIP",
          "Terraform EC2 SG",
          "Terraform module first",
          "terraform Module output",
          "terraform Module remote",
          "terraform IAM Create user and attach",
          "Terraform RDS create",
          "Terraform advance backend create s3",
          "terraform advance backend use s3",
          "terraform advance count",
          "terraform advance import",
          "terraform advance depends",
          "terraform advance data sources",
          "terraform advance syntax validate",
          "terraform advance format",
          "terraform advance providers multiple",
          "terraform advance remote provesioner",
          "terraform advance local provisioner",
          "terraform plan destroy",
          "terraform advance workspaces",
          "terraform advance taint",
          "terraform advance functions",
          "terraform advance debugging",
          "terraform sensitive param",
          "Terraform Interview Preparation Part 1",
          "Terraform Interview Preparation Part 2",
          "Terraform Interview Preparation Part 3",
          "Terraform Interview Preparation Part 4"
        ],
        "Continuous Monitoring - AWS CloudWatch": [
          "CloudWatch Overview",
          "CloudWatch Default Metrics",
          "CloudWatch Custom Metrics",
          "CloudWatch Alarms",
          "CloudWatch Billing Alarms",
          "CloudWatch Logs Overview",
          "CloudWatch Logs Custom",
          "CloudWatch Logs Filters and alarm",
          "CloudWatch Events",
          "CloudWatch Dashboards"
        ]
      },
      "requirements": [
        "Eager to learn and Patience !!!"
      ],
      "description": "This course requires you to download Docker and Docker Desktop from Official docker Website. If you are a Udemy Business user, please check with your employer before downloading software\nDevOps is a set of practices that combines software development and IT operations. It aims to shorten the systems development life cycle and provide continuous delivery with high software quality.\nDevSecOps is a culture shift in the software industry that aims to bake security into the rapid-release cycles that are typical of modern application development and deployment.\nThe roles of the DevOps that have the highest demand among respondents are: DevOps engineer- 39% Software engineer- 29% DevOps consultant- 22%\nOrganizations need DevOps engineers so badly, because now as never before they are pressed to build high-quality applications as fast as possible to keep up with the competition and create innovative solutions to address business challenges in a quick and continuous manner.\nIn this Course you will learn all the needed DevOps/DevSecOps Skills and Tools needed for your Career.\nYou will learn all of the below in one course inly (This Ultimate Course):\nWhat is DevOps Vs DevSecOps\nLinux/Unix For DevOps and Developers\nLearn Python From the Scratch\nMake your own Ethical Hacking Tools In Python\nLearn Cloud Services - AWS (Amazon Web Services)\nLearn Continuous Integration And Continuous Delivery CI/CD - Jenkins\nLearn Containerization Technology - Docker\nLearn IAC (Infrastructure As Code) - AWS Cloud Formation\nLearn IAC (Infrastructure As Code) - Terraform\nLearn Continuous Monitoring - AWS CloudWatch\nLearn Cyber Security Threats and the Best Practices\nLearn Soft Skills for DevOps\nReal Life Scenarios with Practice Step-By-Step",
      "target_audience": [
        "Anyone interested in developing DevOps and DevSecOps skills",
        "DevOps Engineers",
        "DevSecOps Engineers",
        "Cyber Security Engineers",
        "Developers",
        "Software Engineers",
        "System Administrators",
        "Cloud Architect"
      ]
    },
    {
      "title": ".NET 8 Microservices with RabbitMQ and MassTransit",
      "url": "https://www.udemy.com/course/net-8-microservices-with-rabbitmq-and-masstransit/",
      "bio": "Microservices Architecture with RabbitMQ and MassTransit",
      "objectives": [
        ".NET 8",
        "Microservices",
        "Architecture",
        "RabbitMq",
        "MassTransit",
        "MongoDB",
        "Redis",
        "PostgreSQL"
      ],
      "course_content": {
        "Introduction": [
          "Architecture Overview",
          "Technology Requirements",
          "Development Environment Setup"
        ],
        "Solution Setup": [
          "Folder Structure",
          "Microservice Project Structure",
          "Initial Data Structure"
        ],
        "Microservices Core Layer": [
          "Entities",
          "Repositories Interfaces"
        ],
        "Microservices Infrastructure Layer": [
          "Booking Repository Infrastructure",
          "Flight Repository Infrastructure",
          "Notification Repository Infrastructure",
          "Payment Repository Infrastructure"
        ],
        "Microservices Application Layer": [
          "Booking Commands/Queries/Handlers",
          "Flight Commands/Queries/Handlers",
          "Notification Commands/Queries/Handlers",
          "Payment Commands/Queries/Handlers"
        ],
        "Microservices API Layer": [
          "Booking Api",
          "Flight Api",
          "Notifications Api",
          "Payment Api",
          "Testing All Microservice Api's"
        ],
        "Building Blocks for RabbitMq and MassTransit": [
          "Building Blocks"
        ],
        "MassTransit": [
          "Booking MassTransit",
          "Payment MassTransit",
          "Notification MassTransit",
          "Debugging All Microservices MassTransit and RabbitMq"
        ],
        "MongoDB": [
          "Install and Setup MongoDB",
          "Refactor Flights Microservice MongoDB"
        ],
        "Redis": [
          "Install Docker and RedisInsight",
          "Refactor Booking Microservice Redis"
        ]
      },
      "requirements": [
        "Visual Studio",
        "SQL Server",
        "Basic Technical Background"
      ],
      "description": "Get Started with .NET 8 Microservices using RabbitMQ and MassTransit!\nAre you a student or professional looking to dive into software engineering? Want to quickly set up a .NET Core environment for building Microservices with RabbitMQ messaging, but don’t want to wade through unnecessary complexities? This course is designed just for you!\nIn this course, I’ll guide you through setting up your development environment and introduce you to the core concepts of .NET Core Microservices with RabbitMQ. You’ll learn how to design and implement Microservices using MassTransit for messaging, with a hands-on, step-by-step approach. By the end, you’ll have the skills to build apps that communicate efficiently using messaging patterns, setting the foundation for more advanced topics in software development. Additionally, you'll gain a deeper understanding of distributed systems, fault tolerance, and message-driven architecture, which are crucial for building reliable and robust applications in modern software ecosystems.\nWhether you're transitioning to software engineering or enhancing your existing skill set, this course will take you a step closer to mastering .NET technologies. You'll be ready to tackle real-world projects and start building scalable, high-performance applications using modern design principles. Join now, and start your journey into the world of Microservices with .NET Core!",
      "target_audience": [
        "Students and Professionals who want to master .Net 8Microservices using RabbitMQ and MassTransit"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/azure-redis-caching/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Self Driving Simulations: Develop Autonomous Car with Python",
      "url": "https://www.udemy.com/course/self-driving-simulations-develop-autonomous-car-with-python/",
      "bio": "Learn how to build self driving autonomous car simulation using Python, PyGame, and NEAT",
      "objectives": [
        "Learning the fundamental concepts of self driving autonomous car, getting to know technologies behind it, as well as its capabilities and limitations",
        "Learning and understanding how self driving feature in autonomous car works",
        "Building self driving autonomous car simulation project using PyGame and NEAT from scratch",
        "Testing the self driving autonomous cars to ensures the car has a good decision making ability, solid sensor integrations, and effective collision prevention"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Highlight of the Course",
          "Whom This Course is Intended for?"
        ],
        "Tools, IDE, and Libraries": [
          "Tools, IDE, and Libraries"
        ],
        "Introduction to Autonomous Cars": [
          "Introduction to Autonomous Cars",
          "How Autonomous Car Works?"
        ],
        "Setting Up All Required Tools": [
          "Installing Visual Studio Code",
          "Installing Python & Adding Extension to VS Code",
          "Installing PyGame & NEAT"
        ],
        "Basic Python Training Session": [
          "Basic Python Training Session",
          "Data Types Practice",
          "Function & Parameters Practice",
          "Class & Objects Practice",
          "Basics of PyGame"
        ],
        "Preparing Assets for Autonomous Car Simulation": [
          "Preparing Car Objects for Simulation",
          "Downloading GIMP",
          "Building Car Track with GIMP"
        ],
        "Building Self Driving Autonomous Car Project": [
          "Creating Folder for the Project",
          "NEAT Configuration File Explained",
          "Create Function to Initialise the Simulation",
          "Functions to Set Position & Avoid Collision",
          "Function to Detect Obstacles",
          "Function to Update Position",
          "Functions to Get Radar's Data & Calculate Fitness Score",
          "Function to Run Autonomous Car",
          "Autonomous Car Function Explained",
          "Function to Run Simulation"
        ],
        "Testing Autonomous Car Simulation": [
          "Autonomous Car Testing Objectives",
          "Testing Self Driving Autonomous Car Project"
        ],
        "Conclusion & Summary": [
          "Conclusion & Summary"
        ]
      },
      "requirements": [
        "No previous experience in building self driving autonomous car is required",
        "Willingness to do a lot of trial errors in the code"
      ],
      "description": "Welcome to Self-Driving Simulations: Developing Autonomous Cars with Python course. This is basically an extensive project based course where you will be fully guided step by step on how to build autonomous vehicle simulation with self driving feature using Python programming language alongside with Python libraries, such as Pygame and NEAT where Pygame will be utilised to create a visual and realistic representation of the simulated environment while NEAT which stands for NeuroEvolution of Augmenting Topologies will be used to train the neural networks to control and design self driving behaviour. The neural network takes input from the car's sensors. In addition, the neural network will also learn and adapt over time through evolutionary algorithms, improving the car's driving performance and decision-making skills. In the introduction session, you will be learning the basic fundamentals of autonomous car, getting to know technologies behind it as well as understanding how it works. Then, after learning the basic concepts, you will be guided step by step to set up all necessary tools, for instance Visual Studio Code IDE, installing Python, and other relevant tools. Before getting into the project, there will be a basic python training session where you will learn all important concepts in Python that you need to know and master to prepare you for the upcoming project. The basic Python training session is optional since the session was created and intended only for those who are not very confident with their Python programming skills. In the basic Python training session, you will learn different data types or variables, how to build functions and pass down parameters to the function, how to build class, and basic fundamentals of Pygame. Then, once the basic Python training session has been completed, you will move to the project where you will be fully guided step by step on how to build an autonomous car simulation with advanced self driving features from scratch. Once the project has been built, we are going to be conducting testing, not only to test if the code works but also to test if the output of the code is what we expected to get. There will be three main objectives that will be tested, those are the car's decision making ability, sensor integration, and collision prevention.\nFirst of all, we need to ask ourselves this question. Why should we learn how to build an autonomous car simulator? It might be very interesting to learn how the self-driving feature in cars like Tesla works, obviously the system is very complicated and a bit difficult to be understood but what if you have a chance to learn the self driving mechanism from a more simple perspective and that’s exactly what you are going to learn in this course. The next follow up question might potentially be, well it is near impossible and definitely unrealistic to create my own real autonomous vehicle like Tesla, it will cost you a lot and even if you have the funding, you might not have the right skill sets and knowledge to begin with. That is actually true to some extent, we are not going to build a brand new car with self -driving features, instead, we can potentially build a very cool self-driving game or maybe build an autonomous object simulator.\nBelow are things that we are going to learn from this course:\nLearning the fundamental concepts of self driving autonomous car, getting to know technologies behind it, as well as its capabilities and limitations\nLearning and understanding how autonomous car works\nBasic Python training session which prepares you better for the autonomous car project\nBuilding self driving autonomous car simulation project using Pygame and NEAT\nLearning how to build and design car track using GIMP painting tool\nTesting the self driving autonomous cars to ensures the car has a good decision making ability, solid sensor integrations, and effective collision prevention system",
      "target_audience": [
        "People who are interested to build self driving autonomous car simulation with Python",
        "People who are interested to learn about the basic concepts of autonomous car"
      ]
    },
    {
      "title": "Microsoft Power BI: Ultimate Microsoft Power BI Bootcamp",
      "url": "https://www.udemy.com/course/microsoft-power-bi-ultimate-microsoft-power-bi-bootcamp/",
      "bio": "Master Microsoft Power BI to build beautiful data visualizations, data analysis from scratch with Power BI Desktop",
      "objectives": [
        "Learn basics of Connecting & Organizing Data",
        "Transforming data in Power Query",
        "Building Relationships in Microsoft Power BI",
        "Master Advanced Dax for Data Analysis",
        "Designing data Visualizations",
        "Building Sophisticated Power BI Reports and Dashboards",
        "Learn how to use AI in Microsoft Power BI"
      ],
      "course_content": {
        "Introduction to Power BI": [
          "Introduction",
          "Meet & Download the Course Data",
          "How to Access Power BI",
          "Power BI Settings for This Course"
        ],
        "Meet PowerBI": [
          "Meet Power BI",
          "What is Power BI",
          "Comparing Power BI to Excel",
          "How Power BI Works",
          "Power BI Terms Recap"
        ],
        "Basics of Connecting & Organizing Data": [
          "Organizing & Connecting Data",
          "Types of Connections",
          "Map of Power Query Editor",
          "Changing Names & Data Types",
          "Managing Columns & Rows",
          "Quality Control Tools"
        ],
        "Transforming Data in Power Query": [
          "Transforming Data",
          "Formatting Data",
          "Replacing Values",
          "Splitting Columns",
          "Merging Columns",
          "Transforming Dates",
          "Rounding Data",
          "Managing Different Locales",
          "Index Columns"
        ],
        "Data Transformation": [
          "Data Transformation",
          "Formatting Data",
          "Replacing Values",
          "Splitting Columns",
          "Merging Columns",
          "Transforming Dates",
          "Rounding Data",
          "Managing Different Locales",
          "Index Columns"
        ],
        "Building Relationships": [
          "Building Relationships",
          "Meet Data Modeling",
          "Table Types",
          "Key Types",
          "Creating & Editing Relationships",
          "Star & Snowflake Schemas",
          "Data Categories & Field Categories",
          "Hierarchies",
          "Filter Flow",
          "Hiding Fields",
          "Layout Hacks",
          "Troubleshooting Data Sources"
        ],
        "Intro to DAX": [
          "Meet DAX",
          "What is DAX",
          "DAX Calculated Columns 101",
          "DAX Measures 101",
          "Function Categories",
          "DAX Calculated Columns for this Course",
          "DAX Measures for this Course"
        ],
        "Designing Data Visualization": [
          "Power BI Design Lab",
          "Choosing Which Metrics to Visualize",
          "Pro-Tips for Report Design Aesthetics",
          "Designing Your Dashboard Roadmap"
        ],
        "Building Power BI Reports": [
          "Power BI Reports",
          "Outlining with Shapes",
          "Logos & Titles",
          "Card Visuals",
          "Line Charts",
          "Format Painter",
          "Bar Charts",
          "Pie & Donut Charts",
          "Tables & Matrixes",
          "Conditional Formatting Visuals",
          "Maps",
          "Slicers",
          "Pro Tip - Building Reports off a Duplicate"
        ],
        "Report Final Touches": [
          "Final Touches",
          "Editing Interactions",
          "Creating Buttons",
          "Creating Custom Tool Tips with Charts",
          "Advanced Chart Formatting",
          "Mobile Layouts",
          "Optimization Tools",
          "Managing Roles",
          "Publishing Reports"
        ]
      },
      "requirements": [
        "You will learn from very basics of Power BI to Advanced- You do not need to have any prior knowledge in Microsoft Power BI"
      ],
      "description": "In this course, You will master how to build beautiful data visualizations, data prep, data analysis and Reports & Dashboards including cleaning and transforming data in Power Query, leveraging powerful Data Modeling techniques. You learn Power BI Service and learn how to publish, share and edit our reports from there too! You will learn Advanced Dax for Data Analysis in this course. This course teaches Microsoft Power BI Basics and takes to Advanced Level Power BI Topics. You will be an expert by end of the course.\n\n\nWhat will You learn in this course?\n\n\nStep by Step Interactive Training from Power BI Basics to Advanced Tools\nBe able to automate tasks and stop doing so many things manually\nBe able to use Data Modeling and Dashboards to make your life easier\nQuickly mastering Power BI to grow your career\nYou can impress your colleagues or boss with your data modelling skills\nSaving hours with work by streamlining analysis with Power BI\nHave some Real-World Projects that give you the real world knowledge\nHave Power Design Labs where you can practice\nYou will be more efficient in Power BI so that You will be more marketable for a job or promotion\nAnalyzing Reports in Power BI Service",
      "target_audience": [
        "If you want to learn the complete Microsoft Power BI along with Advanced Dax for Data Analysis , This course is perfect for you!"
      ]
    },
    {
      "title": "Introduction to High-Availability (HA) Solutions in Azure",
      "url": "https://www.udemy.com/course/ha-in-azure/",
      "bio": "A high-level overview of how to approach high-availability solutions in the cloud.",
      "objectives": [
        "The concepts of availability and high availability",
        "Azure's Service Level Agreements (SLAs)",
        "High availability services in Azure",
        "Five steps to a high availability solution in Azure"
      ],
      "course_content": {
        "Course Welcome": [
          "Welcome",
          "What is the Concept of Availability?",
          "What is the Concept of High Availability?"
        ],
        "SLAs in Azure": [
          "What are Service Level Agreements (SLAs)?",
          "Virtual Machine (VM) SLA Example in Azure",
          "Azure Virtual Machine (VM) SLAs In Detail",
          "Other SLAs in Azure"
        ],
        "High Availability Concepts": [
          "Azure High Availability Components",
          "Load Balancers and Other HA Components"
        ],
        "Five Steps to a High Availability Solution": [
          "Step 1: Gather HA Requirements",
          "Step 2: Design the Solution",
          "Step 3: Test the Solution",
          "Step 4: Deploying in an HA Environment",
          "Step 5: Ongoing Operations HA Concerns"
        ],
        "Wrapup": [
          "Thank you!",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "An interest in designing a high availability solution in Azure",
        "No hands on experience required as this course is an overview of the topic"
      ],
      "description": "In late 2022, I was asked to present to a local Azure User Group in Portugal. Unfortunately, we were not allowed to video record the talk to release it for people to view after the event. If you did not see it in person, or live online at the time, then you would have missed it.\nSo I decided to record it myself from home and post it here at Udemy.\nSome important caveats before you enroll in this course:\nI created this presentation for an in-person event. If I was making it as a course, I might have structured things a bit differently. But ultimately, this is a presentation with slides and talking.\nUnlike my other Azure courses, this course does not prepare you for any official Microsoft certification or exam. None of the content aligns with any official Microsoft exam.\nAnd given only an hour or so to present, I could not get into deep technical details like building a solution inside Azure itself. This is intended to be an overview to inspire further research.\nThe course covers four overall topics:\nThe concepts of availability and high availability (HA)\nThe concept of Service Level Agreement (SLA)\nHigh availability services in Azure\nFive Steps to a High-Availability Solution\nYou should be able to watch the course all at once, and you are not expected to have an Azure account or follow-along with any hands-on demos.",
      "target_audience": [
        "Cloud application designers looking to make their solutions highly available",
        "Those interested in the topic of high availability in the cloud",
        "Non-technical business stakeholders interested in the concepts of high availability"
      ]
    },
    {
      "title": "Real World Vagrant - Build an Apache Spark Development Env!",
      "url": "https://www.udemy.com/course/real-world-vagrant-build-an-apache-spark-development-env/",
      "bio": "With a single command, build an IDE, Scala and Spark (1.6.2 or 2.0.1) Development Environment! Run in under 3 minutes!!",
      "objectives": [
        "Simply run a single command on your desktop, go for a coffee, and come back with a running distributed environment for cluster deployment",
        "Ability to automate the installation of software across multiple Virtual Machines"
      ],
      "course_content": {
        "Justification": [
          "Justification - My own experience",
          "Suggested Spark Udemy curriculum course s to follow ..."
        ],
        "First Steps": [
          "Base Vagrant file",
          "Quick Overview of your Vagrant Environment",
          "Boot up a Vanilla Centos Desktop on your own Desktop or Laptop",
          "Tune the Virtual Machine"
        ],
        "Automation Steps to Build Your Spark Development Environment": [
          "Automate the Installation of Maven. The Java Build Tool",
          "Automate the installation of Scala. It's like the Java that should have been!",
          "Automate the Installation of ScalaIDE. Eclipse for Scala!",
          "Automate the Installation of sbt. The Scala Build Tool",
          "Automate the Installation of Spark. You get to choose. 1.6.2 or 2.0.1",
          "Automate the Installation of a Spark 1.6.2 Example."
        ],
        "Build our Virtual Machine Image": [
          "Build the Final Development Environment"
        ],
        "Conclusion": [
          "Boot up the Spark Environment in under 2.5 minutes!!",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming or scripting experience is required.",
        "You will need a desktop PC and an Internet connection. The course is created with Windows in mind.",
        "The software needed for this course is freely available",
        "This Course is based on top of my previous course - \"Real World Vagrant For Distributed Computing\"",
        "You will require a computer with a Virtualization chipset support - VT-x. Most computers purchased over the last five years should be good enough",
        "Optional : Some exposure to Linux and/or Bash shell environment",
        "64-bit Windows operating system required (Would recommend Windows 7 or above)",
        "This course is not recommened if you have no desire to work with/in distributed computing"
      ],
      "description": "Note : This course is built on top of the \"Real World Vagrant For Distributed Computing - Toyin Akin\" course\n\nThis course enables you to package a complete Spark Development environment into your own custom 2.3GB vagrant box.\nOnce built you no longer need to manipulate your Windows machine in order to get a fully fledged Spark environment to work. With the final solution, you can boot up a complete Apache Spark environment in under 3 minutes!!\nInstall any version of Spark you prefer. We have codified for 1.6.2 or 2.0.1. but it's pretty easy to extend this for a new version.\nWhy Apache Spark ...\n\nApache Spark run programs up to 100x faster than Hadoop MapReduce in memory, or 10x faster on disk.\nApache Spark has an advanced DAG execution engine that supports cyclic data flow and in-memory computing.\nApache Spark offers over 80 high-level operators that make it easy to build parallel apps. And you can use it interactively from the Scala, Python and R shells.\nApache Spark can combine SQL, streaming, and complex analytics.\n\nApache Spark powers a stack of libraries including SQL and DataFrames, MLlib for machine learning, GraphX, and Spark Streaming. You can combine these libraries seamlessly in the same application.",
      "target_audience": [
        "Software engineers who want to expand their skills into the world of distributed computing",
        "Developers who want to write/test their code against Scala / Spark"
      ]
    },
    {
      "title": "PLC 5 Training and SLC 500 Training. The Basics.",
      "url": "https://www.udemy.com/course/rslogix-plc5-and-slc500-training-the-basics/",
      "bio": "How to program and maintain a PLC 5 and an SLC 500 PLC system.",
      "objectives": [
        "You will learn how to set up a PLC5 and SLC500 from scratch.",
        "The ladder logic programming rules in PLC5 and SLC500.",
        "How to configure physical inputs and outputs on both platforms.",
        "You will learn how to complete and implement a project right through to commissioning."
      ],
      "course_content": {
        "Introduction": [
          "Personal Introduction.",
          "Introduction."
        ],
        "PLC 5 Components and Addressing": [
          "The Basics of Control Systems.",
          "PLC 5 Hardware Components.",
          "PLC 5 Software and Hardware Addressing.",
          "Summary. Control systems and Hardware.",
          "Know Your Basics. Control Systems, Hardware and Software."
        ],
        "PLC5 Chassis Setup and Exploring the Software.": [
          "Setting the Dipswitch and Jumpers on the Chassis and Controller.",
          "Navigating the Software.",
          "Navigating the Software. Demonstration.",
          "Software Summary",
          "Know your Hardware Settings and Software Navigation."
        ],
        "Communication Setup and Project Creation.": [
          "How to configure the Communications of a PLC5.",
          "Demonstration. Setting up the Communication in the Controller and the Channels",
          "Communications Summary.",
          "Communication Knowledge tested."
        ],
        "PLC5 and SLC500 Ladder Programming": [
          "Basic Bit Instruction Programming as used in PLC5.",
          "Demonstration. Basic Bit Instruction Programming as used in PLC5.",
          "Explanation of a Timer Instruction.",
          "Explanation of a Counter instruction.",
          "Demonstration. Timers and Counters.",
          "Explanation of Comparison Instructions.",
          "Demonstration. Comparison Instructions.",
          "Configuring Math's Instructions",
          "Demonstration. How to Configure Math's Instructions in your project.",
          "Configuring and Using Program Control Instructions.",
          "Demonstration. Using Program Control Instructions.",
          "Ladder programming Summary.",
          "Programming Quiz. Know your Elements."
        ],
        "Applying Documentation and Searching.": [
          "Documentation and Searching a PLC5 and SLC500 Project.",
          "Demonstration. Documentation and Searching",
          "Do You Know your Documentation and Searching?"
        ]
      },
      "requirements": [
        "There are no real pre requisites necessary, but it is advantageous if you are computer literate and familiar with electrical and instrumentation terminology."
      ],
      "description": "Due to many requests, I have decided to create a course covering the PLC 5 and SLC 500 PLC systems. The Basics. and it is for any of you who are still using and maintaining these systems even though they have been around for many years now.  Some users simply love them and won't change systems unless they really have to.\nMy name is Jeff Sharman and I shall be your instructor during this training. I have had many years of practical experience in all aspects of PLC's, Instrumentation, and Control Systems as well as training both face to face and Online. I have travelled extensively throughout Africa and the Middle East both in a training and client support capacity. I also possess a SAQA Further Education and Training Certificate: Measurement, Control and Instrumentation. This is South African but recognized in many countries internationally.\nI have been privileged to meet some of the most amazing people from all over the world. Lots of humourous moments also.\nThe course will start by giving you a general introduction to all the aspects that will be discussed.\nWho Should Take This Course?\nThis course,  PLC 5 and SLC 500 Training. The Basics is designed for anyone already in the PLC and Instrumentation field, and wishes to learn PLC's right from the early days. Maybe they are being used in your operation even though they have been around a long time.\nFor anyone who just wishes to enhance their knowledge.\n\n\nListed below are some of the topics I will cover with you in this course.\nIdentifying the hardware components in both systems.\nSetting up communications.\nThe software system.\nAddressing in both systems.\nProgramming ladder. The rules.\nProgramming bit instructions.\nProgramming timers and counters.\nProgram flow\nThis is just a short description of some of the things you will learn in this course. There is a lot more in addition to this.\nThere are a number of quizzes that you can complete after each section to help you reinforce your knowledge and gain confidence.\nOnce you finish the course, you will receive a certificate of completion.\nThe majority of the course consists of video tutorials where I will explain all the different aspects of PLC5 and SLC500 Systems and demonstrate how it can be used.\nThe more you understand, the better you will be,\nSo if you are really serious about learning, Enroll Today.",
      "target_audience": [
        "Instrument mechanics and technicians, Electrical technicians, Engineering personnel, Trainee personnel in the electrical and instrumentation fields, Software and Networking specialists"
      ]
    },
    {
      "title": "Mastering Python Microservices: Build and Scale Applications",
      "url": "https://www.udemy.com/course/mastering-python-microservices/",
      "bio": "From Fundamentals to Advanced: A Step-by-Step Guide to Scalable and Secure Microservices in Python with FastAPI and AWS",
      "objectives": [
        "Comprehensive Understanding of Microservices Architecture",
        "Hands-On Experience with Python Frameworks with FastAPI and Flask",
        "Advanced Microservices Techniques",
        "Security and Performance Optimization",
        "Real-World Case Studies and Deployment Strategies",
        "Building Serverless RestAPI with AWS",
        "GIT Essentials for Python Microservices"
      ],
      "course_content": {
        "Introduction and Fundamentals": [
          "Understanding Microservices architecture",
          "Benefits and challenges of microservices",
          "Building Microservices with Python",
          "Benefits and Challenges of Microservices"
        ],
        "Setting Up the Environment": [
          "Installing python, pip and virtual environments",
          "Setting up an IDE (VSCODE, PYCHARM)",
          "Basics of Docker and Containerization",
          "Basics of Kubernetes for container orchestration"
        ],
        "Building Microservices with Flask": [
          "Basic Setup and Routing",
          "Creating a simple restful API",
          "Handling Requests and response",
          "Blueprints for modular applications",
          "Flask Quiz"
        ],
        "Building Microservices with FastAPI": [
          "Basic Setup and Routing in FASTAPI",
          "Restful APIS with FASTAPI",
          "Dependency injection",
          "Data Validation with pydantic"
        ],
        "Inter-Service Communication": [
          "HTTP Communication between microservices",
          "GRPC and Setting up GRPC in Python",
          "Advanced Features of GRPC",
          "Introduction to Message queues in python RabbitMQ and Kafka",
          "Implementing asynchronous communication"
        ],
        "Database Integration": [
          "Overview of SQL and NoSql Databases",
          "Selecting a database for your Microservices",
          "SQLalchemy using flask and fastapi",
          "MongoDB with Flask",
          "MongoDB with FastAPI",
          "Introduction to Graphql"
        ],
        "Service Discovery and Configuration": [
          "Service discovery in microservices",
          "Service Discovery with consul/eureka",
          "Configuration Management",
          "Service Discovery and Configuration"
        ],
        "Authentication and Authorization": [
          "Flask Basic Authentication methods(JWT)",
          "Flask Basic Authentication methods OAUTH2",
          "RBAC in Microservices JWT",
          "Managing Roles and permissions JWT",
          "Advanced security measures JWT",
          "Implementing RBAC in Microservices with oauth2",
          "Managing Roles and permissions in OAUTH2",
          "Step by Step guide for testing RBAC Implementation"
        ],
        "API Gateway and Load Balancing": [
          "Purpose and Benefits of an API Gateway",
          "Setting up an API Gateway with nginx/kong on Linux",
          "Setting up an API Gateway with nginx kong on windows",
          "Overview of Load Balancing Techniques",
          "Implementing Load Balancing"
        ],
        "Logging and Monitoring": [
          "Best Practices for Logging",
          "Best Practices for Logging(Continue)",
          "Monitoring Python Microservices"
        ]
      },
      "requirements": [
        "Basic Python Programming Knowledge",
        "Familiarity with Web Development Concepts",
        "Understanding of Databases",
        "Willingness to Learn New Tools"
      ],
      "description": "Mastering Python Microservices: Build and Scale Applications\n\n\nAre you a developer or software engineer eager to dive into the world of microservices? This comprehensive course is tailored for you, focusing on leveraging Python to build scalable, maintainable, and efficient microservice-based applications. Microservices architecture has become the backbone of modern software development, enabling organizations to create complex, distributed systems that can be developed, deployed, and scaled independently. Throughout this course, you'll journey from understanding fundamental concepts to implementing advanced techniques and best practices in microservices development.\n\n\nCourse Overview and Objectives\nWe begin by outlining the course structure and objectives, setting clear expectations for what you'll achieve by the end. Gain a deep understanding of microservices architecture and how it contrasts with traditional monolithic approaches. Discover the benefits and challenges associated with microservices, and why organizations are increasingly adopting this architecture despite its complexities.\n\n\nCourse Sections\n\n\nIntroduction and Fundamentals\nGrasp the basics of microservices architecture.\nCompare microservices with monolithic systems.\nUnderstand the flexibility, scalability, and challenges of microservices.\n\n\nSetting Up the Environment\nInstall Python, pip, and virtual environments.\nConfigure your development environment with IDEs like VSCode or PyCharm.\nPrepare your system for efficient microservices development.\nBasics of Docker and containerization\nBasics of Kubernetes for container orchestration\n\n\nBuilding Microservices with Flask\nCreate simple microservices using Flask.\nLearn about routing, RESTful APIs, and Flask Blueprints for modular code organization.\n\n\nBuilding Microservices with FastAPI\nDevelop advanced microservices with FastAPI.\nExplore dependency injection, data validation with Pydantic, and leveraging FastAPI’s performance benefits.\n\n\nInterservice Communication\nImplement effective communication between microservices using HTTP requests.\nDive into advanced techniques like gRPC and message queues (RabbitMQ, Kafka) for scalable communication.\n\n\nDatabase Integration\nChoose the right database for your microservices (SQL vs. NoSQL).\nIntegrate SQL databases with SQLAlchemy and work with NoSQL databases like MongoDB.\nPerform CRUD operations, design schemas, and manage database migrations.\n\n\nService Discovery and Configuration\nUtilize service discovery tools like Consul and Eureka for dynamic service location.\nManage configurations using environment variables, ConfigMap, and Vault.\n\n\nAuthentication and Authorization\nImplement robust authentication and authorization mechanisms using JWT and OAuth2.\nApply Role-Based Access Control (RBAC) to manage user permissions securely.\n\n\nAPI Gateway and Load Balancing\nSet up an API Gateway with tools like Nginx or Kong.\nImplement load balancing strategies to manage traffic and enhance performance.\n\n\nLogging and Monitoring\nIntegrate logging solutions to track and debug microservices.\nSet up monitoring tools to ensure the health and performance of your system.\n\n\nTesting Microservices\nDevelop comprehensive testing strategies for microservices.\nUtilize unit tests, integration tests, and end-to-end tests to ensure reliability.\n\n\nSecurity Best Practices\nLearn about common security threats in microservices architecture.\nImplement best practices to safeguard your applications from vulnerabilities.\n\n\nAdvanced Microservices\nExplore event-driven microservices, CQRS, and event sourcing.\nDive into serverless microservices using AWS Lambda for scalable solutions.\n\n\nCustom Middleware in FastAPI\nCreate Custom Middleware\nEnhancing Middleware\nLogging Request and Response bodies\nImplement Authentication Middleware\nHandling CORS (CROSS-ORIGIN Resource Sharing)\nRate Limiting Middleware\n\n\nPerformance Optimization\nProfile Python applications to identify bottlenecks.\nOptimize resource usage and implement caching strategies with Redis.\n\n\nDocumentation and Versioning\nUse OpenAPI/Swagger to generate comprehensive API documentation.\nImplement effective API versioning strategies for seamless updates.\n\n\nResilience and Fault Tolerance\nBuild resilient microservices capable of handling failures gracefully.\nImplement fault-tolerant designs to maintain system stability.\n\n\nGIT Essential for Python Microservices\nSetup GIT, Env, FastAPI and Uvicorn\nGIT Configuration\nCreate Github Repository\nGIT Workflow best practices\nGIT Branching\nRebasing\n\n\nBuilding a Serverless REST API with AWS\nIntroduction of Building a Serverless RESTAPI with AWS\nSetting up AWS Cognito User Pool\nCreating Lambda Functions\nIAM and Lambda Permission\nConfiguring API Gateway\nIntegrating Cognito Authorizer\nCreate User and Setup AWS Cognito for Authentication\nDownload and Install AWS CLIV2\nSet Password and Test the API\n\n\nList of Python Microservices Projects\n\n\nProject #1: Building and Scaling a Real-Time Data Processing Pipeline\nProject #2: Building a Real-Time chat application with FASTAPI and Modern Web Technologies\n\n\nWhy This Course?\nBy the end of this course, you will have a thorough understanding of microservices architecture and the skills needed to build, deploy, and maintain Python-based microservices in a production environment. Whether you're a seasoned developer looking to expand your knowledge or a newcomer to microservices, this course equips you with the tools and techniques to succeed in the world of distributed systems.\n\n\nJoin us on this journey to master microservices with Python and take your software development skills to the next level!",
      "target_audience": [
        "Aspiring Software Developers",
        "Experienced Developers Transitioning to Microservices",
        "DevOps Engineers and System Administrators",
        "Technical Leads and Architects",
        "Anyone Interested in Modern Software Architecture"
      ]
    },
    {
      "title": "Introduction to the World of Programming",
      "url": "https://www.udemy.com/course/introduction-to-the-world-of-programming/",
      "bio": "Learn the basics of programming and have a broad understanding about the whole software development industry",
      "objectives": [
        "Learn the fundamentals of programming",
        "Be able to write and run programs using a code editor",
        "Organize the code better using OOP principles",
        "Learn about the tools that developers use",
        "Understand the software development process",
        "Understand the characteristics of the most popular programming languages",
        "Learn what kind of skills are required for different developer roles",
        "Be able to decide what kind of developer you want to be",
        "Create a learning plan on how to become a software developer"
      ],
      "course_content": {
        "Introduction": [
          "Overview",
          "Terminology",
          "A brief history of computers",
          "What is inside?",
          "Operating systems",
          "What is programming",
          "Using the terminal",
          "Setting up environment",
          "Write your first program",
          "Quiz",
          "Conclusion"
        ],
        "Fundamentals of programming": [
          "Overview",
          "The code editor and IDE",
          "Syntax",
          "Execution flow",
          "Comments",
          "Variables",
          "Data types",
          "Arithmetic operators",
          "Assignment operators",
          "Assignment",
          "Resolve assignment",
          "Debugging",
          "Strings",
          "Special characters",
          "Assignment",
          "Resolve assignment",
          "Using the Java API",
          "Getting user input",
          "Type conversion",
          "Assignment",
          "Resolve assignment",
          "Comparison operators",
          "Boolean logic",
          "Practice booleans",
          "Conditional statements",
          "Assignment",
          "Resolve assignment",
          "Arrays",
          "For loops",
          "While loops",
          "Assignment",
          "Resolve assignment",
          "Methods and functions",
          "Return values and overloading",
          "Arguments",
          "Assignment",
          "Resolve assignment",
          "Blocks and scopes",
          "Error handling",
          "Assignment",
          "Resolve assignment",
          "Practice coding",
          "Conclusion"
        ],
        "Object oriented programming": [
          "Overview",
          "Classes and objects",
          "Constructors",
          "Assigmnent",
          "Resolve assignment",
          "Objects vs. references",
          "Primitives and references",
          "Packages",
          "Encapsulation",
          "Static methods",
          "Static attributes",
          "Assigmnent",
          "Resolve assignment",
          "Overview"
        ],
        "Tools of the programmer": [
          "Overview",
          "Libraries and frameworks",
          "Package management",
          "Build tools",
          "Maven",
          "Unit tests",
          "Write test with JUnit 5",
          "Version control system",
          "Pipelines",
          "Stackoverflow",
          "AI Tools",
          "Test your understanding",
          "Conclusion"
        ],
        "The software development process": [
          "Overview",
          "Requirements",
          "Planning",
          "Design",
          "Development",
          "Testing",
          "Deployment",
          "Maintenance",
          "Methodologies",
          "Day of a developer",
          "Roles",
          "Test your understanding",
          "Overview"
        ],
        "Programming languages": [
          "Overview",
          "Types of languages",
          "C and C++",
          "Java",
          "JavaScript and TypeScript",
          "Python",
          "C# (sharp)",
          "OS scripts",
          "Others",
          "Test your understanding",
          "Conclusion"
        ],
        "Developer roles": [
          "Overview",
          "Web developer",
          "Backend developer",
          "Frontend developer",
          "Full-stack developer",
          "Mobile developer",
          "Game developer",
          "Automated tester",
          "Data scientist and machine learning engineer",
          "Non-programming positions",
          "Conclusion"
        ],
        "Conclusion": [
          "The psychology",
          "How to continue?"
        ]
      },
      "requirements": [
        "No programming experience needed."
      ],
      "description": "Why should you bother learning programming?\nOur world is connected by the Internet which creates the global market, the biggest one in the world. The Internet is made of  billions of computers and every one of them needs software to work. Software is made by programmers so investing in learning programming seems a pretty solid decision.\nWhy won't AI take programmer positions?\nAI has been made by programmers\nAI generated code needs to be reviewed in order to use it\nAI is just a tool that helps programmers\n\n\nWho is this course for?\nThinking about a career change but don't know where to start.\nTentative about your career decision.\nAny kind of stakeholder in a software development project who wants to understand programmers better.\nCurious about modern technology and want to know exactly what programming is.\nIf you are interested only in learning a specific programming language like Python, then this course may not be your best choice.\n\n\nWhat is included?\nIn this course you will learn about the workings of computers and the fundamentals of programming which is shared amongst many modern programming languages like variables, conditional statements, loops, error handling, etc.  You will solve many programming exercises because learning programming requires practice. I use Java for learning purposes but the topics covered work very similarly for other languages like Python or JavaScript.\nYou will learn the basics of object oriented programming which is a code structuring technique that helps to produce more maintainable and understandable code.\nYou will be aware of the tools that programmers use day by day like libraries, frameworks, package managers, build tools, unit tests, version control systems, pipelines and AI based tools.\nYou will learn the process of making applications and the software development lifecycle including different methodologies like waterfall or agile development.\nYou will learn the characteristics of different programming languages and will be familiar with the top six.\nYou will learn about the different developer roles like backend, frontend, mobile, game developers or automated testers and data scientists and machine learning engineers. You will learn what kind of tasks they work on and what skills they require in order to solve them.\n\n\nWhat will you gain?\nBy the end of the course you will be confident in the basics of programming and will have a broad understanding of the whole software development industry so you will be able to make an informative decision about your career path and plan your learning in order to become a software developer and understand programmers and their work better.",
      "target_audience": [
        "Career changers who are interested in programming but knows little about it.",
        "Any kind of stakeholders in a software development project who are willing to learn the language of programmers.",
        "Young adults who wants to decide their career and considering programming."
      ]
    },
    {
      "title": "Learn Data Structures using C Programming Language",
      "url": "https://www.udemy.com/course/learn-data-structures-using-c-programming-language/",
      "bio": "Hands-on course with exercises on arrays, stacks, queues, linked list, trees, graphs, internal sorting techniques, etc.",
      "objectives": [
        "Understand the fundamentals of Data Structures thoroughly through hands-on coding",
        "Learn to analyze programs",
        "Learn to see a bigger picture of design of algorithms in general"
      ],
      "course_content": {
        "Course Details": [
          "Prerequisites, Topics covered, and Reference book",
          "About quizzes and exercises"
        ],
        "Introduction to Data Structures": [
          "Why study Data Structures and What is a Data Structure",
          "The Big-O notation for representation of performance measure of algorithms"
        ],
        "Arrays : An Introduction": [
          "The definition of an array",
          "Array limits",
          "Element addressing in an array"
        ],
        "An application of arrays: Fast Transpose of a Sparse Matrix": [
          "Introduction to Sparse Matrix Transpose",
          "Sparse matrix representation in a program",
          "First attempt at sparse matrix transpose: A crude solution",
          "Second attempt at sparse matrix transpose: A simple solution",
          "Third and final attempt: Fast Transpose of a Sparse Matrix"
        ],
        "Stacks and Queues: Introduction": [
          "An Introduction to Stacks and Queues"
        ],
        "Stack functionalities": [
          "Stack functionalities and \"push\" function",
          "\"pop\" function in Stacks"
        ],
        "An application of stacks: A Mazing Problem": [
          "Stacks in Procedure Calls and Recursion",
          "Introduction to A Mazing Problem",
          "Recursive solution to A Mazing problem: A partial solution",
          "Recursive solution to A Mazing problem: A full solution",
          "Non-recursive solution to A Mazing Problem"
        ],
        "Queue functionalities": [
          "Queue definitions and Linear Queue",
          "Circular Queue"
        ],
        "Linked Lists": [
          "Why do we need linked lists?",
          "What is a linked list?",
          "Creation of a linked list",
          "Insertion of a new node in between two nodes in a singly linked list",
          "Insertion of a new node at the corners in a singly linked list",
          "Deletion of a node in a singly linked list",
          "Inplace reversal of a singly linked list",
          "Insertion and deletion of a node in a doubly linked list"
        ],
        "Trees : An Introduction": [
          "Terms associated with Tree data structure"
        ]
      },
      "requirements": [
        "You should have a basic knowledge of C Programming Language",
        "You should have access to a C compiler"
      ],
      "description": "Noteworhy reviews :\nSzu-Fan Wang: \"I love the practice codes a lot. Thanks instructor!\"\nAlberto San Martin: \"It is a very clear professor. Good explanations.\"\nThis course aims to teach the fundamental concepts of data structures in a step by step manner. As the first instalment of the course, the topics such as arrays, stacks and queues, linked lists, trees, graphs, and internal sorting techniques are covered. The remaining topics such as external sorting, symbol tables, and files will be included in the same course on a regular basis.\nProgramming is not just about learning a language and starting to write programs like stories. One has to learn certain concepts that are fundamental to computer science in general. That is why this course is a must for all the self-motivated wannabe code ninjas of future. The concepts here are explained slowly and clearly.\nThe highlight of the course is the meticulously planned coding exercises. Though the concepts are explained quite elaborately in the lectures, with ample illustrations and animations, the student will not be spoon-fed with coding solutions right on the screen. Instead, they will be required to complete pieces of code that are available for download, as part of each exercise. So, the lectures and coding exercises are inseparable. There are also quizzes interspersed with the lectures, some of which might help you think differently.\nOn the overall, the course aims to  provide a heady mix of  ease of listening to the lectures and the rigour of do-it-yourself coding exercises, hopefully making it a wholesome knowledge gaining experience.\nIf you didn't feel any change, please do remember that you can get your money back, as there is a 30-day money-back guarantee.",
      "target_audience": [
        "Anyone who wants to become a great programmer, not just a mediocre programmer",
        "Anyone who wants to strengthen one's basics in Computer Science"
      ]
    },
    {
      "title": "Microsoft Interview Questions - Data Structures & Algorithms",
      "url": "https://www.udemy.com/course/microsoft-coding-interview-questions-data-structures-algorithms/",
      "bio": "Learn top questions asked in Microsoft coding rounds",
      "objectives": [
        "Software Developers Preparing for Microsoft Coding Interviews",
        "Developers who want to work as software developers at Microsoft",
        "Software developers who want to practice Leetcode questions asked in Microsoft Interviews",
        "Software developers who want to practice Leetcode problems in Java, Javascript, C++ or Python languages."
      ],
      "course_content": {
        "Maximum Sum Subarray - Arrays": [
          "Maximum Sum Subarray - Java Solution",
          "Maximum Sum Subarray - Javascript Solution",
          "Maximum Sum Subarray - C++ Solution",
          "Maximum Sum Subarray - Python Solution"
        ],
        "Merge Intervals - Stacks": [
          "Merge Intervals - Java Solution",
          "Merge Intervals - Javascript Solution",
          "Merge Intervals - C++ Solution",
          "Merge Intervals - Python Solution"
        ],
        "Two Sum - Hash Table": [
          "Two Sum - Java Solution",
          "Two Sum - Javascript Solution",
          "Two Sum - C++ Solution",
          "Two Sum - Python Solution"
        ]
      },
      "requirements": [
        "Basic programming experience in either of the 4 languages: Java, JavaScript, C++ & Python"
      ],
      "description": "Are you aspiring to join the ranks of top-tier software engineers at Microsoft? Prepare comprehensively and excel in your Microsoft coding interviews with confidence by enrolling in my in-depth course. This course is meticulously designed to empower you to conquer the top problems frequently presented during Microsoft interview rounds.\n\n\nWhat You'll Learn:\nTop Microsoft Interview Problems: In this course, I've carefully curated a collection of the most commonly asked coding problems in Microsoft interviews. This ensures that you are well-equipped to tackle any coding challenge that comes your way.\nStep-by-Step Video Solutions: Through my detailed video solutions, you will be guided through each problem, step by step. You'll gain insight into the entire problem-solving process, from understanding the problem's intricacies to crafting clean and efficient code. In these video solutions, I code live, allowing you to follow along and develop a deep understanding of the thought process.\nMultiple Programming Languages: I understand that candidates have diverse language preferences. Consequently, I provide video solutions in four prominent programming languages: Java, C++, Python, and JavaScript. Choose the language you are most comfortable with and master these problems with ease.\nDownloadable Code Files: Alongside video solutions, I offer downloadable code files for every problem. This feature allows you to delve deeper into the code, analyze it at your own pace, and enhance your comprehension of each solution.\nWhy Choose My Course:\nExpert Guidance: Learn from an experienced software engineer with a stellar track record in acing Microsoft coding interviews. Benefit from my insights, strategies, and effective problem-solving techniques honed through years of experience.\nComprehensive Coverage: I leave no stone unturned. My course comprehensively covers a wide spectrum of data structure problems that frequently appear in Microsoft interviews, ensuring you receive a well-rounded and thorough preparation.\nMultilingual Support: My course is accessible to learners worldwide, as I provide video solutions in four different languages. This flexibility ensures that you can comfortably understand and implement solutions in your preferred programming language.\nLifetime Access: Enroll once, and enjoy lifetime access to all course materials and updates. Stay well-prepared not only for your current interviews but also for future ones.\nDon't miss this opportunity to excel in your Microsoft coding interviews. Enroll now and take the first step toward securing your dream job at Microsoft!",
      "target_audience": [
        "This course is for software developers and students who want to practice for coding interviews at Microsoft"
      ]
    },
    {
      "title": "Create bot in Python for Binance Futures API & Telegram API",
      "url": "https://www.udemy.com/course/create-bot-in-python-for-binance-futures-api-telegram-api/",
      "bio": "Create crypto trading bot in Python for Binance platform on Futures market with leverage based on Telegram live messages",
      "objectives": [
        "You will know how to work and understand complex functions in the Python programming language.",
        "You will know how to work with API from Binance Futures.",
        "You will know how to work with API from Telegram.",
        "You will know how to create a crypto trading bot on the Binance Futures platform based on Telegram live messages."
      ],
      "course_content": {
        "Getting Started": [
          "Course Introduction",
          "What is Python?",
          "Setup Python",
          "Install Needed Packages",
          "Project Structure"
        ],
        "The Basics On Python": [
          "Run Python Script",
          "Convert Python file ( .py ) To Executable File ( .exe )",
          "Colorama Package",
          "Input Package",
          "Getpass Package",
          "Timestamp And DateTime Packages",
          "Save Json Object To Txt File"
        ],
        "The Basics On Telegram API": [
          "Get api_id And api_has For Telegram",
          "Get chat_id For Telegram Public Group",
          "Working With TelegramClient Package And Python"
        ],
        "Advanced In Python": [
          "Threads",
          "Split Function For Telegram String Message",
          "Check Exit Points Function"
        ],
        "Binance Futures API": [
          "Get binance_api And binance_secret For Binance Futures API",
          "How To Send Signed Requests",
          "How To Send Public Requests",
          "Get Your Current Account Balance USDT",
          "Get Exchange Info For Specific Symbol",
          "Get Tick Size For Specific Symbol",
          "Get Minimum Quantity For Specific Symbol",
          "Set Leverage For Specific Symbol",
          "Open A Position",
          "Place Take Profit Order",
          "Place Stop Loss Order",
          "Check For Open Orders Live"
        ],
        "Final Project": [
          "Overview"
        ]
      },
      "requirements": [
        "No programming experience needed. You wil llearn everything you need to know from this course."
      ],
      "description": "In this course i will tech you how to create a bot (automated script) in Python programming language for Binance platform on Futures Market API who will place positions (long or short) and orders (take proft/s and stop loss if you choose in the menu to do that) with leverage based on live Telegram messages (signals). You don't need experience with Python or with Binance Futures API or with Telegram API because I will tech you from scratch how they works. In the future you can subscribe to a VIP Signals group on Telegram, get the group_chat_id and when a signal / message is received the bot will automatically place positions and orders. This course have 6 sections, section 1 Getting Started, section 2 The Basics On Python, section 3 The Basics On Telegram API, section 4 Advanced In Python, section 5 Binance Futures API and the last section, section 6 Final Project. Along the way we will learn some advanced things in Python such as Threading because this is the main task, to use Threads in Python because maybe sometime you give or receive from a VIP Signals group multiple messages / signals and you want to place positions and orders for all the signals at the same time and this thing is possible just with the help of Threads. If you have any questions or problems feel free to ask, I will do my best to answer immediately.",
      "target_audience": [
        "Creating a crypto trading bot in Python programming language for Binance platform on Futures market with leverage based on Telegram live messages."
      ]
    },
    {
      "title": "Python Testing 101",
      "url": "https://www.udemy.com/course/python-testing-101/",
      "bio": "UnitTesting Python with Unittest Framework||White Box Testing||Mocks & Parameterized Tests||Pytest, Jenkins & More...",
      "objectives": [
        "Unit testing with Python 'unittest' framework",
        "Fundamentals of Unit Testing or White box testing in Python",
        "Writing and executing Testcases in Python",
        "Execute Unit Tests in CI/CD server Jenkins",
        "Using Mock or Test Double in Python Unittesting",
        "Test execution and Reporting with Pytest framework with Jenkins",
        "Parameterized Testing with Parameterized Package",
        "Code collaboration and run tests from Code repo like GitHub",
        "Using Git for code version control"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Install/Configure Pycharm in Windows",
          "About the Application Under Test(AUT)"
        ],
        "Getting The Basics Right": [
          "Pls read(<1min)",
          "Getting Started",
          "Fix your Tests using Fixtures",
          "Test Discovery & cmd line options"
        ],
        "Mock/Test Double and Assert Options": [
          "Mock or Test Double Basics",
          "Mock or Test Double Example",
          "Assert And make it Right"
        ],
        "Parameterized Tests": [
          "Method Level Parameterize",
          "Class Level Parameterize"
        ],
        "Test Execution & Reporting (Pytest, Jenkins)": [
          "About Pytest & Execute tests using Pytest",
          "Execute unittest from Jenkins(CI/CD tool)",
          "Mid-Course summary"
        ],
        "Unittesting a Real Application": [
          "Section Intro",
          "Import Application in Pycharm",
          "App walk through",
          "Write Unittest for App",
          "Write Unittest for App with Mock"
        ],
        "Continuous integration(CI) And Testing Python": [
          "Section Intro",
          "About Git & GitHub",
          "Creating GitHub Acct and Installing Git(windows)",
          "Git - Working Locally",
          "Git - Working With Remote Repo",
          "GitHub Repo Create And Push Code-1",
          "GitHub Repo Create And Push Code-2",
          "Jenkins Job To Run Unittests from Jenkins"
        ],
        "Thank You": [
          "conclusion!",
          "Thanks!"
        ],
        "Appendices": [
          "Python3 Installation(Windows)",
          "Jenkins Install/config(Windows)"
        ]
      },
      "requirements": [
        "Python 3.6+ installed in the PC",
        "Basic familarity with Python fundamentals",
        "Know how to install application software in Windows10"
      ],
      "description": "Welcome to Python Testing 101 - Unit Testing Python code with Python Unittest framework.\nUnit testing is a software testing methodology wherein the individual components or parts of the program, called units, are tested independently with all the required dependencies. Unit testing is mostly done by developers, who write the programs for the units. In most of the software projects, unit testing is part of a formal process of development with proper schedule and or efforts allocated for writing unit tests.\nThe course lets you get your hands dirty with the basic building blocks in testing, which are unit tests. Here you will be taken through what a unit test is, the basic syntax, and examples of a simple unit test.\nThen, you will learn about the methods available to use in unit testing and the various tools available to help in running and debugging your tests. You also will learn about use of mocks and patching, which helps you to isolate the code you are interested in testing (your “units”), and simulate responses from other parts of the system or libraries.\nThis course will help you master the fundamentals of Unit testing of Python project. It teaches you various techniques for writing  unit tests in Python and how to execute them efficiently, and find the bugs before your users do!\nWe will be using Python Unittest framework which comes with Python standard library and it assumes that you have minimal prior experience with Python coding.\nYou'll learn how to assert parts of your tests, how to discover the tests, and make tests easier to read and manage. Throughout the course you will see lots of unit test code examples in Python.\nSome of the interesting topics covered in the course are:\nCreate Project in Pycharm with Virtual Env\nUnittest Fixtures & Test Discovery\nUsing Mock and Test Doubles\nPytest as Test Runner and generating nice reports\nJenkins to run and share the test reports\nParameterized Tests\nWriting unittest for a Real, Working Application\nThank you and see you in this course.",
      "target_audience": [
        "Developers who want to start writing unit tests for their Python project",
        "QA engineers who want to learn Unit testing or White Box Testing",
        "Anyone who wants to learn testing and automation",
        "Anyone who wants to use Jenkins to execute Python tests",
        "Anyone who wants to learn about CI/CD with Python projects",
        "Anyone who wants to learn Pytest for running Python Tests"
      ]
    },
    {
      "title": "Cross-platform Desktop App Development for Windows Mac Linux",
      "url": "https://www.udemy.com/course/cross-platform-desktop-app-development-windows-mac-linux/",
      "bio": "Create a multiplatform desktop applications which runs on Mac, Windows and Linux with one single code base",
      "objectives": [
        "Develop cross-platform desktop applications from scratch without copy/paste code",
        "Build distributable desktop applications for Windows, Mac and Linux",
        "Use operating system native features with a single code base",
        "Apply coding patterns specific for building desktop applications",
        "Sell multi-platform applications in Mac App Store",
        "Sell multi-platform application in Microsoft Windows Store"
      ],
      "course_content": {
        "Introduction and welcome": [
          "Introduction and welcome to the course",
          "The reasons behind the technology that we will use",
          "Are you ready to start building?"
        ],
        "First steps: Setup the environment on Windows and Mac": [
          "The foundation: Installing Node on MacOS",
          "The foundation: Installing Node on Windows",
          "The text editor: Installing Atom on MacOS",
          "The text editor: Installing Atom on Windows",
          "Properly configuring Atom for cross-platform development",
          "The required component: Installing Electron",
          "Installing GIT client on Windows",
          "How to use the course resources"
        ],
        "Building our first real cross-platform application": [
          "Creating a Hello World simple application - The basics",
          "Improving the Hello World Application",
          "Saving the application as a template",
          "Creating an application window"
        ],
        "Understanding the app: Main process and Renderer process": [
          "Main process app responsible",
          "Renderer process working with your views",
          "How to add code to the main process",
          "How to add code to the renderer process",
          "Communication between processes"
        ],
        "Using libraries and third party modules": [
          "How to speed up development process",
          "Seeing code changes live",
          "Live reloading without forge",
          "What is possible to do and what we will do",
          "Using custom fonts in your application",
          "Adding jQuery for fast DOM manipulation",
          "Adding underscore",
          "Resetting your styles to start from a clean state"
        ],
        "Cross platform desktop app design": [
          "Basics first: Things to consider when designing a cross-platform desktop app",
          "The design of the Workout application we will build together",
          "Directory structure proper setup",
          "Creating the initial layout and style",
          "App menu layout, structure and style",
          "Naming for the next lecture",
          "How to properly force an input type of value",
          "Adding buttons to the app menu which will change dynamically",
          "Creating the main application window",
          "Adding proper information for the user"
        ],
        "Cross platform desktop app functionality": [
          "Validating user input",
          "Adding functionality to application buttons",
          "Timer initialization: TimerController",
          "Preparing the workout timer",
          "Updating the time properly",
          "Working with the app functionality: Prepare, Work and Rest",
          "Challenge: Building the global timer",
          "Playing audio, sounds or music",
          "Cross-platform desktop notifications",
          "Creating desktop notifications"
        ],
        "Desktop application advanced customization": [
          "Desktop application keyboard shortcuts",
          "App background and preventing the computer to sleep",
          "Custom cross-platform application menu",
          "Building custom menu coding challenge",
          "Know when your app is in development",
          "Challenge: Saving application state",
          "How to properly debug local storage",
          "Advanced developer extensions",
          "Debugging the renderer process",
          "Cross-platform desktop applications accessibility",
          "Making sure your app behaves properly"
        ],
        "Cross-platform application distribution": [
          "Changing the name of your application",
          "Distribute to supported platforms",
          "Building and packaging your application in MacOS",
          "Building and packaging your application in Windows",
          "Building and packaging your application in Linux",
          "Final touches: The application icon",
          "Protecting your application code",
          "Signing your applications for Mac distribution",
          "Preparing your app for the Mac App Store",
          "Signing your applications for Windows distribution",
          "Preparing your app for the Microsoft Windows Store",
          "Congratulations, thank you and next steps"
        ]
      },
      "requirements": [
        "General understanding of HTML, CSS & JavaScript",
        "Basic terminal usage (launch the terminal, navigate on folders, copy and move files, etc)",
        "Windows, Mac or Linux computer"
      ],
      "description": "Create cross-platform desktop applications from scratch and start selling them in the Mac App Store and Windows App Store\nLast course update: March 25th 2019\nAre you looking to build real-world Desktop cross-platform applications? Maybe you want to create a new side-project Desktop app which can run on Windows, Mac, and Linux to get some extra income or you want to get more clients by being able to publish their app to the three primary operating systems.\nEither way, you're in the right place.\nI’ve created this course around a single goal: Turning you into a professional Cross-platform developer capable of developing and deploying real-world production desktop applications for Windows, Mac, and Linux.\nMulti-platform is becoming more and more popular. Coding an application once and having it run everywhere will allow you to implement new apps for you or your clients quickly.\nCross-platform means creating maintainable apps, not worrying about each operating system needs.\nGet better job opportunities by offering cross-platform desktop app development.\nThis course is entirely project-based. From the very beginning, you'll be hands-on programming from a simple “Hello World” app to a complete from start to finish “Workout Timer” application.\nThere's no copying-and-pasting here.\nThis course is about writing code and building projects.\nYou will be programming a complete Workout Timer cross-platform application ready to submit to the Mac App Store and Microsoft Windows App Store.\nDuring all the chapters you'll learn:\nWhy using Electron\nSetting up all the environment\nCreating your first application\nElectron API\nUsing third party libraries\nCustom fonts\nBuilding a complete application (you will create a Workout Timer application from 0 to complete)\nMulti-platform app menus\nPlaying audio\nMulti-platform Desktop notifications\nKeyboard shortcuts\nManaging application state\nApplication debugging\nStoring user data\nCross platform accessibility\nApplication building on Windows\nApplication building on Mac\nApplication building on Linux\nWindows app signing\nMac app signing\nMicrosoft App Store distribution\nMac App Store distribution\nAnd much more!\nUp-to-date. In-depth.\n\nI guarantee this is the most up-to-date and engaging Cross-platform course available, and it comes with a 30-day money-back guarantee.\nWhile other tutorials or course might teach you individual parts, this course will show you how to go from 0 to selling your cross-platform application without copy-pasting code but coding everything by yourself.\nAccess to fast support and a community of like-minded students.\nI offer quick and friendly support. You won't have to sit around hoping someone will actually reply. I answer every single question that students post in a timely manner.\nDon't take my word for it. It's one of the things students like Filip and Nicole love most about my courses.\n\"I'd like to thank Adria for this course, he is not just a great teacher, but also he's quick to answer questions and provide feedback even for my code which wasn’t related to the course.\" - Filip Hudcovic\n\"Adria is amazing. Very straightforward. Seems to be the stuff I want to learn. And he answered all muy questions and helped me building my project.\" - Nicole Maron\n\"The course is high oriented to practice. Lot of tips and tricks very helpful to obtain an immediate profit and the instructor helped me with all my questions\" - Brennan Matthew\nThis course will not remain this price forever! It's time to take action!\n\nClick the \"Buy Now\" button, top right, now. Every hour you delay is costing you money as cross platform will give you more time for development.\nSee you in the course!\nSincerely,\nAdria",
      "target_audience": [
        "Anyone who wants to get better job opportunities by offering cross-platform development",
        "Freelancers who wants to offer cross-platform application development to their clients",
        "Anyone looking to create cross-platform desktop applications",
        "Anyone who wants to create easily create maintainable apps regardless of the operating system"
      ]
    },
    {
      "title": "iOS 16 SWIFTUI 3 Loan Tracker MVVM, CoreData & Cloud Kit",
      "url": "https://www.udemy.com/course/ios-15-swiftui-3-loan-tracker-mvvm-coredata-cloud-kit/",
      "bio": "Build Loan Tracker with SWIFTUI, MVVM, Combine and CoreData, Understand how the SWIFTUI data structure works",
      "objectives": [
        "SWIFTUI 3",
        "iOS 15 app development",
        "MVVM Pattern",
        "Combine",
        "CoreData",
        "CoudKit"
      ],
      "course_content": {
        "Updated to iOS 16": [
          "Information",
          "Lecture 1",
          "Lecture 2",
          "Lecture 3",
          "Lecture 4",
          "Lecture 5",
          "Lecture 6",
          "Lecture 7",
          "Lecture 8",
          "Lecture 9",
          "Lecture 10",
          "Source code"
        ],
        "Setup (iOS 15 course)": [
          "Information",
          "Project Setup"
        ],
        "Create Loan": [
          "Clean up the project and create test loans",
          "Setting the navigation title and customising the UI",
          "LoanCellView and extensions",
          "Show loan cell",
          "Add loan view",
          "Showing Add Loan View",
          "Create loan object"
        ],
        "Create Payment": [
          "Payment View",
          "Fetch Payments from CD",
          "AddPaymentView",
          "Save Payment item",
          "Delete payment",
          "Separate Payment to sections",
          "Delete item and loading view",
          "EditPayment functions and cloud kit",
          "Source code"
        ]
      },
      "requirements": [
        "xCode 13 (Free)",
        "Basic Experiance in Swift Development",
        "Will to learn"
      ],
      "description": "NOTE: the course was updated to iOS 16.\n\n\nIn this course, we will cover some very important aspects of SWIFTUI\nThe course is focused on data passing and structuring for SWIFTUI.\nWe will use MVVM pattern to develop an application that will use CoreData and CloudKit to save, read update and delete data from the CoreData and CloudKit. Also, we will add some custom calculations and visual interfaces to sort our payments and provide information on the loan.\nCoreData\nSWIFTUI\nMVVM\niOS16\nxCode 14\nCloudKit\nWe are also proud to say that we have one of the best Support available on Udemy! Our Q/A Section is constantly monitored and all questions are answered within a few hours, Sometimes we even chat with students in real-time to help them with the issues they may face during the study.\nDon’t waste your time on low-quality courses where you don't even get the support of the instructor\n\n\nDon't just take our word for it, check out our other courses and what other students have to say about our courses!\nWe are so confident that you'll love this course that we're offering a FULL money-back guarantee for 30 days, No Questions Asked!\nSo what are you waiting for? Click the Buy Now button and join the best course on iOS16.",
      "target_audience": [
        "If you know how to use SWIFTUI to make UI, but have issue making the app to function, this corse is for you",
        "Learn how MVVM works, Use Combine framework to pass data around"
      ]
    },
    {
      "title": "Circle CI for DevOps",
      "url": "https://www.udemy.com/course/circle-ci-for-devops/",
      "bio": "Step by Step Guide to Automate Continuous Integration/Deployment process with CircleCI",
      "objectives": [
        "Understand how and why we use Continuous Integration Tools like CircleCI",
        "How to setup configuration files in CircleCI",
        "Understand the History of Continuous Integration",
        "Understand how to setup Github Checks for CircleCI",
        "How to setup caching in CircleCI",
        "How to use Artifacts in CircleCI",
        "Make use of the Insights Tab in CircleCI",
        "How to deploy Apps onto AWS or Heroku",
        "Browser Testing with CircleCI",
        "Circle Orbs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Disclaimer",
          "What is CI/CD",
          "History of CI",
          "Circle CI Architecture",
          "Git Bash Setup",
          "Workflow and Build",
          "Full Demo Workflow",
          "DataDog Circle Story"
        ],
        "Writing Basic Builds": [
          "Use Circle CI Image",
          "GitHub Checks",
          "Caching",
          "Artifacts"
        ],
        "How to Deploy Apps using CircleCI": [
          "AWS Deployment",
          "Heroku Deployment",
          "Heroku Deployment with Orbs",
          "Browser Testing",
          "Insights",
          "Circle CI Quiz Time",
          "Circle CI Quiz 2",
          "CircleCI Assignment"
        ],
        "Conclusion": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "Desire to learn something new."
      ],
      "description": "Welcome to this Course on Circle CI\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in CircleCI for continuous integrations and delivery/deployment.\nIn this course you will Learn by example, as we demonstrate all the concepts discussed - so that you can see them working, and you can try them out for yourself as well.\nCircleCI is a continuous integration and delivery platform that enables development teams to release code quickly while also automating the build, test, and deployment processes. With caching, docker layer caching, artifacts, and other features, CircleCI can run even the most complex pipelines effectively.\nWe will learn about the three key components of building a Continuous Build Pipeline -\n1) Planning and Architecture: Utilize the extensive, customized fleet of CI/CD machines, which includes Docker containers and VMs for Linux, macOS, Windows, and Arm, to save time and resources. Create unique execution environments on your own infrastructure for more control and platform support. Plans job and workflow steps in order to get your tasks done in the order you want. Setup triggers so your workflows can run on a schedule.\n2) Automated Builds: Execute and store your builds using Circle CI commands. Use Artifacts to keep copies of your compiled code. CircleCI provides caching mechanism for faster performance.\n3) Deployment and Testing: CircleCI is a good fit for any software development team with a large or complex collection of automated tests, especially if they use cloud services for the majority of their development (such as GitHub). You can deploy on a variety of tools like AWS S3, EC2 or Heroku. We will see how to execute these steps.\nWe will understand why CircleCI is the perfect CI/CD platform. We will learn about its features & capabilities.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "DevOps leads who want to learn age tools to automate everything from builds to deploys",
        "Anyone interested in CircleCI",
        "Software Engineers",
        "Anyone who wants to work on the continuous integration/continuous deployment workflow setup in their team"
      ]
    },
    {
      "title": "Programming Bootcamp for Kids and Beginners",
      "url": "https://www.udemy.com/course/programming-bootcamp/",
      "bio": "Learn to be an excellent programmer from the absolute basics",
      "objectives": [
        "Computer Science Fundementals",
        "Python",
        "Programming Logic",
        "Karel",
        "Basic Debugging",
        "Understand the basics of any programming language",
        "Breaking down large problems into smaller tasks"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What Is Possible With Coding",
          "Why Take This Course?",
          "Course Outline"
        ],
        "Karel The Robot": [
          "Meet Karel",
          "The Karel IDE",
          "Basic Commands With Karel",
          "Karel Guide",
          "Karel Basics Quiz",
          "Conditional Statements In Karel",
          "While Loops In Karel",
          "Functions In karel",
          "Karel Summative",
          "Karel Summative Solution"
        ],
        "Logic": [
          "Logic And Its Place In Programming",
          "Logic In Real Life",
          "Logical Statements",
          "Comparison Operators",
          "Intro To Logical Operators",
          "Logical AND Operator",
          "Logical OR Operator",
          "Logical NOT Operator",
          "Comprehensive Logic Quiz"
        ],
        "Python": [
          "Introduction To Python",
          "Why Python ?",
          "The Python IDE",
          "Getting Started With The REPL Integrated Development Environment",
          "Single Line Print",
          "Code Commenting In Python",
          "Introduction To Variables",
          "Variable Types",
          "Converting Between Variable Types",
          "Intro To Math In Python",
          "Addition In Python",
          "Subtraction In Python",
          "Division In Python",
          "Multiplication In Python",
          "Exponents In Python",
          "The Modulo Operator",
          "Introduction To Input In Python",
          "Input In Python",
          "Introduction To Functions",
          "Functions Demo",
          "Function Parameters",
          "Variables Inside And Outside A Function",
          "Return Statement",
          "Return Statement Example",
          "Functions Quiz",
          "Conditional Statements",
          "Conditionals Quiz",
          "Introduction To Loops",
          "For Loops 1",
          "For Loops 2",
          "For Loops 3",
          "For Loops Quiz",
          "For Loop Assignment",
          "For Loops Exercise",
          "While Loops",
          "While Loops 2",
          "While Loops Quiz",
          "While Loops Assignment"
        ],
        "Conclusion": [
          "Conclusion & Congratulations!"
        ]
      },
      "requirements": [
        "Access to a computer with an internet connection.",
        "A working knowledge of basic mathematics (addition, subtraction, multiplication, division)."
      ],
      "description": "This course will teach the fundamentals of programming in a sustainable way to ensure that these concepts stick with your students of all ages. Students will learn the basics of Karel, followed by logical concepts, and a deep dive into Python. This course aims to not only introduce students to Python as a programming language, but also to logic and design principles that are needed to write clean and effective code. There were many stakeholders in the course including fellow engineers from Google and Facebook who helped create content based on one key question:\n\"How would I have liked to have been taught programming if I knew absolutely nothing about it?\"\nUsually when trying to learn programming, students are taught many things at once, but they lack the core fundamentals that will allow them to be world class. The content in this course addresses this issue and helps build students confidence and knowledge to the point where they can begin to develop larger, and more useful Python applications. All of the content is extremely easy to follow, and is supported with quizzes and assignments.\nAny feedback is really appreciated to ensure that this course is constantly updated, and this remains the best resource for new programmers.\nNo Risk: 30 day money back guarantee",
      "target_audience": [
        "Students of at least 7 years of age"
      ]
    },
    {
      "title": "TDD, CI/CD, Pair Programming & Other XP Practices for Devs",
      "url": "https://www.udemy.com/course/xp-techniques-learnit/",
      "bio": "Master Extreme Programming techniques to write cleaner, faster, and more reliable code in Agile teams",
      "objectives": [
        "How to integrate XP practices into Agile software development workflows for efficiency",
        "The role of Test-Driven Development (TDD) in reducing defects and improving maintainability",
        "Best practices for effective pair programming and how to maximize collaboration",
        "How to set up and manage a Continuous Integration (CI) pipeline for automated testing",
        "The impact of Continuous Deployment (CD) on software release cycles and delivery speed",
        "Techniques for identifying and eliminating code smells through structured refactoring",
        "How to design simple, flexible, and scalable software using XP’s simplicity principles",
        "Why collective code ownership matters and how to implement it in development teams",
        "How to apply incremental development to release functional software faster.",
        "The psychology of effective team collaboration and feedback loops in XP",
        "How XP encourages adaptive planning and rapid response to changing requirements",
        "Using Agile metrics and XP-specific indicators to measure team and project success",
        "Strategies for handling technical debt proactively without slowing down development",
        "How to implement effective knowledge sharing and skill development within teams",
        "Scaling XP for enterprise applications and larger software development teams"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Module 1: Introduction to Extreme Programming (XP)": [
          "Introduction to Extreme Programming (XP) - Part 1",
          "Introduction to Extreme Programming (XP) - Part 2"
        ],
        "Module 2: Fine-Scale Feedback": [
          "Pair Programming - Part 1",
          "Pair Programming - Part 2",
          "Planning Game - Part 1",
          "Planning Game - Part 2",
          "Test-Driven Development (TDD)",
          "BDD & ATTD",
          "TDD, BDD & ATTD - Practice",
          "Whole Team - Part 1",
          "Whole Team - Part 2"
        ],
        "Module 3: Continuous Process": [
          "Continuous Integration (CI) - Part 1",
          "Continuous Integration (CI) - Part 2",
          "Refactoring or Design Improvement - Part 1",
          "Refactoring or Design Improvement - Part 2",
          "Small Releases - Part 1",
          "Small Releases - Part 2"
        ],
        "Module 4: Shared Understanding": [
          "Coding Standards - Part 1",
          "Coding Standards - Part 2",
          "Collective Code Ownership - Part 1",
          "Collective Code Ownership - Part 2",
          "Simple Design - Part 1",
          "Simple Design - Part 2",
          "System Metaphor"
        ],
        "Module 5: Programmer Welfare": [
          "Sustainable Pace - Part 1",
          "Sustainable Pace - Part 2"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Basic understanding of software development principles – You should be familiar with coding concepts, but no deep expertise is required",
        "Experience working in a team environment – Since XP focuses on collaboration, familiarity with teamwork in a development setting is beneficial",
        "Some exposure to Agile methodologies – While not mandatory, knowing the basics of Scrum, Kanban, or Lean will help you grasp XP concepts faster",
        "Interest in writing better, more maintainable code – This course is for those who want to improve software quality and engineering practices",
        "Willingness to embrace continuous learning – XP relies on frequent feedback and adaptability, so an open mindset is key",
        "No prior experience with Extreme Programming required – Everything will be covered from the ground up"
      ],
      "description": "In today’s fast-paced software development landscape, delivering high-quality, maintainable, and efficient code is more important than ever. Extreme Programming (XP) provides a structured approach to achieving this by integrating Test-Driven Development (TDD), Continuous Integration/Continuous Deployment (CI/CD), Pair Programming, Refactoring, and Agile Best Practices. This course is designed to help developers, engineers, and Agile practitioners adopt XP techniques to build robust software and streamline development workflows.\nThis course is highly practical and hands-on, focusing on real-world implementation of XP methodologies to reduce bugs, improve collaboration, and accelerate software delivery. Whether you’re an individual developer or working in a team environment, these practices will enhance your engineering excellence and prepare you to work efficiently in Agile software development teams.\n\n\nWhat You Will Learn in This Course\nIntroduction to Extreme Programming (XP) – Understanding the values, principles, and benefits of XP for Agile teams.\nTest-Driven Development (TDD) Fundamentals – Learn how writing tests before code improves reliability and maintainability.\nPair Programming Techniques – Master collaborative coding practices to reduce errors and improve efficiency.\nRefactoring Strategies for Maintainable Code – Improve existing code structure while preserving functionality.\nContinuous Integration (CI) & Continuous Deployment (CD) – Automate testing and deployments for faster software delivery.\nFrequent Releases & Small Iterations – Build and deploy software in small, manageable increments.\nAgile Code Reviews & Feedback Loops – Foster better teamwork and software quality through structured reviews.\nVersion Control & Best Git Workflows – Use Git effectively with branching strategies and CI/CD automation.\nSimple Design & YAGNI (You Ain’t Gonna Need It) – Avoid over-engineering and focus on essential functionality.\nAutomated Testing Beyond TDD – Implement integration testing, acceptance testing, and end-to-end testing.\nCollective Code Ownership & Team Collaboration – Encourage a shared responsibility for code quality and maintainability.\nMeasuring Agile Success – Use Agile metrics like cycle time, defect rates, and team velocity to track progress.\nScaling XP for Large Teams – Adapt XP techniques to work in enterprise-scale development environments.\nHandling Technical Debt – Learn strategies to minimize and manage long-term software maintenance costs.\nReal-World XP Case Studies – Explore how top companies use XP techniques to build scalable and high-quality software.\n\n\nWho Is This Course For?\nSoftware Developers & Engineers – Improve software quality with XP, TDD, and refactoring techniques.\nAgile Practitioners & Scrum Masters – Integrate XP practices into Agile workflows for better efficiency.\nDevOps Engineers – Align XP with automation, CI/CD pipelines, and continuous delivery.\nQA Engineers & Testers – Enhance test strategies and understand XP’s approach to quality assurance.\nTech Leads & Engineering Managers – Improve team productivity, reduce technical debt, and enforce best practices.\nFreelancers & Independent Developers – Learn efficient coding methodologies for solo and team-based projects.\nAnyone Interested in Agile Software Development – Gain hands-on experience with proven XP practices.\n\n\nWhy Take This Course?\nPractical Hands-On Learning – Step-by-step exercises, real-world examples, and coding challenges.\nIndustry-Relevant Techniques – Learn proven XP methodologies used in leading tech companies.\nBoost Software Quality & Efficiency – Reduce bugs, improve maintainability, and speed up development.\nWork Smarter in Agile Teams – Improve collaboration, code review workflows, and software delivery processes.\nNo Fluff, Just Actionable Knowledge – Get practical insights that you can immediately apply in your projects.\n\n\nPrerequisites\nFamiliarity with Agile methodologies like Scrum or Kanban is helpful but not required.\nA willingness to practice test-driven development, pair programming, and other XP techniques.\nGet Started Today!\nJoin this course and learn how to implement XP methodologies to build high-quality, scalable, and maintainable software. Whether you're working in a team or as a solo developer, these techniques will transform the way you write code and manage software projects. Enroll now to master TDD, CI/CD, Pair Programming, and other XP best practices!",
      "target_audience": [
        "Mid-Level & Senior Developers – Take your coding skills to the next level by applying XP methodologies in real-world projects",
        "Software Engineers Focused on Code Quality – Learn how to write better, cleaner, and more maintainable code using XP principles",
        "Agile Coaches & Engineering Leaders – Improve team collaboration, implement XP effectively, and drive better development outcomes",
        "Developers Transitioning to Agile Environments – Understand how XP fits within Agile teams and how to integrate it into existing workflows",
        "Continuous Integration & DevOps Engineers – Optimize deployment pipelines with CI/CD and automation-driven XP strategies",
        "QA Engineers & Automation Testers – Gain deeper insights into test automation, TDD, and improving code reliability",
        "Software Architects & Tech Leads – Apply XP to create scalable, adaptable software architectures with minimal technical debt",
        "Startups & Product Teams – Learn how to iterate faster, reduce bugs, and deliver high-quality software efficiently",
        "Development Teams Seeking Collaboration Improvement – XP fosters teamwork, knowledge sharing, and high-level engineering excellence"
      ]
    },
    {
      "title": "Master Important Data Structures and Algorithms in Java.",
      "url": "https://www.udemy.com/course/fundamental-data-structures-bootcamp-interviews/",
      "bio": "Learn and Master Linked List, Stack, Queue, Hashtable, Heap, Graph, Graph Algorithms, Search Algorithm & Sort Algorithms",
      "objectives": [
        "Master Arrays, Linked List, Stack, Queues, Priority Queue, Set, Map, Hashtable, Tree, Heaps, Graphs.",
        "Master Sorting Algorithms, Searching Algorithms & Graph Algorithms.",
        "Ace Coding Interviews.",
        "Understand how a data structure works internally.",
        "Develop a clear understanding of when to use which data structures and algorithms.",
        "Understand Time and Space complexity of using a particular Data Structure or algorithm.",
        "Implement any coding exercise confidently."
      ],
      "course_content": {
        "Getting Started.": [
          "Course Overview"
        ],
        "Basics of Data Structures": [
          "What is a Data Structure & Why it is so important?",
          "Classification of Data Structures & Abstract Data Types (ADT)",
          "Time Complexity and Big-O notation.",
          "Quiz - Data Structures Basics."
        ],
        "Arrays": [
          "Array - Properties, Uses & Internal Implementation.",
          "Array Declaration & Operations",
          "Array Code Challenge 1 and Solution.",
          "Array Code Challenge 2 and Solution.",
          "Dynamic Array",
          "Quiz - Array"
        ],
        "Important List Data Structures": [
          "List",
          "ArrayList",
          "Major ArrayList Operations",
          "ArrayList Code Challenge 1 & Solution.",
          "ArrayList Code Challenge 2 & Solution.",
          "LinkedList",
          "LinkedList - Internal Working",
          "LinkedList Operations",
          "LinkedList Code Challenge 1 & Solution",
          "LinkedList Code Challenge 2 & Solution",
          "LinkedList Code Challenge 3 & Solution",
          "Doubly LinkedList",
          "Doubly LinkedList Code Challenge & Solution",
          "Circular LinkedList",
          "Circular LinkedList Code Challenge & Solution.",
          "Vector",
          "Vector Operations",
          "Vector Code Challenge 1 & Solution",
          "Vector Code Challenge 2 & Solution",
          "Stack",
          "Stack Implementation Using ArrayList",
          "Stack Implementation Using LinkedList",
          "Stack Operations",
          "Stack Code Challenge 1 & Solution",
          "Stack Code Challenge 2 & Solution",
          "Quiz - Lists"
        ],
        "Queue & Priority Queue": [
          "Queue",
          "Internal Implementation of Queue",
          "Queue Code Challenge 1 & Solution",
          "Queue Code Challenge 2 & Solution",
          "Priority Queue",
          "Internal Implementation of Priority Queue",
          "Priority Queue Operations",
          "Priority Queue Code Challenge & Solution",
          "Quiz - Queues"
        ],
        "Important Set Data Structures": [
          "Set",
          "Hash Set",
          "Internal Implementation of HashSet",
          "HashSet Operations",
          "HashSet Code Challenge 1 & Solution",
          "HashSet Code Challenge 2 & Solution",
          "Linked Hash Set",
          "Internal Implementation of Linked HashSet",
          "Linked HashSet Operations",
          "Linked HashSet Code Challenge 1 & Solution",
          "TreeSet",
          "Internal Implementation of TreeSet",
          "TreeSet Operations",
          "TreeSet Code Challenge 1 & Solution.",
          "Quiz - Set"
        ],
        "Most Used Map Data Structures": [
          "Map",
          "Hash Map",
          "Internal Implementation of HashMap",
          "HashMap Important Methods",
          "HashMap Code Challenge 1 & Solution",
          "HashMap Code Challenge 2 & Solution",
          "Linked Hash Map",
          "LinkedHashMap Important Methods",
          "LinkedHashMap Code Challenge 1 & Solution",
          "LinkedHashMap Code Challenge 2 & Solution",
          "TreeMap",
          "Internal Implementation of TreeMap",
          "TreeMap CRUD Methods",
          "TreeMap Advanced Methods",
          "TreeMap Code Challenge 1 & Solution",
          "TreeMap Code Challenge 2 & Solution",
          "Hashtable",
          "Hashtable Methods",
          "Hashtable Code Challenge 1 & Solution"
        ],
        "Popular Tree Data Structures": [
          "Tree",
          "Binary Tree",
          "Binary Tree Traversals",
          "Level Order Tree Traversal",
          "Inorder Tree Traversal",
          "Pre-Order Tree Traversal",
          "Post-Order Tree Traversal",
          "Binary Tree Code Challenge 1 & Solution",
          "Binary Search Tree (BST)",
          "Binary Search Tree Code Challenge 1 & Solution",
          "Binary Search Tree Code Challenge 2 & Solution"
        ],
        "Heaps": [
          "Heap Data Structure Overview",
          "Min-Heap Implementation in Java",
          "Implement Max Heap in Java",
          "Max-Heap Implementation in Java",
          "Find K'th Smallest element from a Min Heap data structure.",
          "Coding Challenge"
        ],
        "Graphs": [
          "Graph Overview",
          "Graph Representations",
          "Graph Adjacency Matrix Implementation",
          "Graph Adjacency List Implementation",
          "Code Challenge - Count Total Paths in Directed Graph"
        ]
      },
      "requirements": [
        "Basic knowledge of Java like OOPS concepts, if-else statement etc.",
        "Basic knowledge of using any IDE like Eclipse, NetBeans, IntelliJ etc."
      ],
      "description": "Data Structures and Algorithms are the most important and fundamental building blocks of computer science and any coding interviews. A good knowledge of data structures & algorithms is a must for designing and developing an efficient software application. This course will covers all the practical data structures of Java Collections Framework  along with several important algorithms that we often use for application development and explore in depth about its  working, properties and practical significance in creating efficient and reliable software applications. Here,  we will explore and analyse about various data structures and algorithms like Arrays, Linked List, Stack, Queue, Priority Queue, Set, Map, Hashtable, Tree, Binary Search Tree, Heaps, Graphs, Graph Algorithms, Search Algorithms, Sort Algorithms and many more.\n\nThe objective of this course is to enable students to:\nDevelop deeper understanding of Data Structures and Algorithms.\nMaster Arrays, Linked List, Stack, Queue, Priority Queue, Set, Map, Hashtable, Tree, Heaps, Graphs.\nMaster Sorting Algorithms, Searching Algorithms, Graph Algorithms.\nAce Coding Interviews.\nUnderstand how a data structure works internally.\nDevelop an understanding of when to use which data structure and algorithm.\nUnderstand Space and Time complexity of using a particular Data Structure or algorithm.\nImplement any coding exercise confidently.\nThis course is designed, keeping simplicity as a priority so that even beginners will find it easy to understand and practice simultaneously. The coding language, I have used here is Java, however one can practice in any language as the concepts behind data structures and algorithms remains the same across various programming languages. So go ahead and enroll now. I will see you in the next lesson.\nWhat Students say about this course ?\nGood content and easy to understand the Data Structure concepts. The well explained coding examples and questions asked in quiz are helpful for interview preparation.  - Keerti Joshi\nHelped me to understand about data structures even more clearly, especially the internal implementations of each data structures.  - Anuradha Singh",
      "target_audience": [
        "One who wants to understand the Data Structures at a deeper level.",
        "Students who want to crack Data Structure interviews of product companies."
      ]
    },
    {
      "title": "Software Design Patterns",
      "url": "https://www.udemy.com/course/soft-design-patterns/",
      "bio": "Learn Design Patterns with real-world examples, and elevate Your coding skills!",
      "objectives": [
        "Understand Core Design Patterns",
        "Apply Design Patterns in Real-world Scenarios",
        "Enhance Code Readability and Maintainability",
        "Understand the Trade-offs and Limitations",
        "Collaborate Effectively Using Common Terminology",
        "Evaluate and Select Suitable Design Patterns"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Creational Design Patterns": [
          "Factory Method",
          "Factory Method Quiz",
          "Abstract Factory",
          "Abstract Factory Quiz",
          "Builder",
          "Builder Quiz",
          "Prototype",
          "Prototype Design Pattern",
          "Singleton",
          "Singleton Quiz",
          "Creational Design Patterns Quiz"
        ],
        "Structural Design Patterns": [
          "Adapter",
          "Adapter Quiz",
          "Bridge",
          "Bridge Quiz",
          "Composite",
          "Composite Quiz",
          "Decorator",
          "Decorator Quiz",
          "Facade",
          "Facade Quiz",
          "Flyweight",
          "Flyweight Quiz",
          "Proxy",
          "Proxy Quiz",
          "Structural Design Patterns Quiz"
        ],
        "Behavioral Design Patterns": [
          "Chain Of Responsibility",
          "Chain Of Responsibility Quiz",
          "Command",
          "Command Quiz",
          "Interpreter",
          "Interpreter Quiz",
          "Iterator",
          "Iterator Quiz",
          "Mediator",
          "Mediator Quiz",
          "Memento",
          "Memento Quiz",
          "Observer",
          "Observer Quiz",
          "State",
          "State Quiz",
          "Strategy",
          "Strategy Quiz",
          "Template Method",
          "Template Method Quiz",
          "Visitor",
          "Visitor Quiz",
          "Behavioral Design Patterns Quiz"
        ],
        "Final Test": [
          "Design Pattern Practice Test"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge",
        "Experience with Object-Oriented Programming"
      ],
      "description": "Welcome! This course will help you understand common design patterns to write better and cleaner code. It's perfect for beginners and experienced developers alike.\n\nCourse Features:\nClear and Simple Lessons: We keep explanations short and easy to understand.\nLots of Quizzes: Test your knowledge with quizzes to make sure you understand each pattern (170+ quizzes in total!).\nExpert Teacher: Learn from an instructor who knows design patterns well.\nLifetime Access: Watch the videos and read the materials whenever you want.\nCertificate: Get a certificate when you finish the course.\nWhat You'll Learn:\nBasics of Design Patterns: Learn what design patterns are and why they are important.\nCreating Objects: Understand patterns like Singleton, Factory Method, Abstract Factory, Builder, and Prototype.\nStructuring Code: Learn about Adapter, Composite, Proxy, Flyweight, Facade, Bridge, and Decorator patterns.\nBehavior and Interaction: Master patterns like Observer, Strategy, Command, State, Iterator, Mediator, Memento, and Template Method.\nBy the end of this course, you'll know how to use design patterns to solve coding problems and improve your projects. Sign up now to start learning!\nWho This Course Is For:\nSoftware developers who want to improve their coding skills.\nComputer science students who want to learn more about design patterns.\nAnyone with basic programming knowledge who wants to learn advanced design techniques.\nJoin us and become a design pattern expert today!",
      "target_audience": [
        "Junior and Mid-Level Programmers",
        "Computer Science Students",
        "Software Developers"
      ]
    },
    {
      "title": "Hands on AWS: Simple Queue Service (SQS)",
      "url": "https://www.udemy.com/course/hands-on-aws-sqs/",
      "bio": "A simplified guide to understanding Simple Queue Service (SQS)",
      "objectives": [
        "Know a basic understanding of how AWS SQS works",
        "Know best practices for SQS",
        "Understand how to get started integrating with SQS",
        "Understand how to get started using SQS in the AWS console"
      ],
      "course_content": {
        "Overview & Best Practices": [
          "Overview",
          "Use Cases & Best Practices"
        ],
        "Demos": [
          "Getting Started with AWS",
          "Console Demo",
          "Command Line Interface (CLI) Demo"
        ],
        "AWS Certification": [
          "AWS Certification",
          "Simple Queue Service - AWS Certification Prep"
        ]
      },
      "requirements": [
        "General understanding of queues",
        "Knowledge of AWS service model",
        "Basic command line experience"
      ],
      "description": "Amazon Web Services is the premier provider of cloud services. Among their service offering are Simple Queue Service (SQS).\nAmazon Simple Queue Service (SQS) is a fully managed message queueing service that makes it easy to decouple and scale systems.\n\nHands on AWS: Simple Queue Service (SQS) provides a fundamental overview of SQS, best practices for design, and provides a few demos to get you started with SQS.\nThis course is meant for beginners to AWS and SQS and could also be helpful for those prepping for AWS Certification Exams.\nBy the end of the course, you will understand the fundamentals of SQS and you'll be able to start building scalable, decoupled systems.",
      "target_audience": [
        "This course is for individuals who are interested in learning more about AWS",
        "This course is for individuals who are interested in learning more about Simple Queue Service (SQS)"
      ]
    },
    {
      "title": "Leveraging Hexagonal Architecture, DDD, TDD & CQRS with .Net",
      "url": "https://www.udemy.com/course/leveraging-hexagonal-architecture-ddd-tdd-cqrs-with-net/",
      "bio": "In this course, you will learn how to apply fundamental concepts of hexagonal architecture, DDD, TDD, and CQRS in .Net",
      "objectives": [
        "Will learn and understand how to use Hexagonal Architecture combined with DDD and TDD",
        "We will demystify DDD, you will learn to differentiate Entities, Value Objects, Aggregates, and Repositories",
        "The course is TDD centric, meaning that you will learn how to write the tests first and leverage it to improve your design quality",
        "Finally you will learn how to combine all these important concepts all together on the same application and write better quality software with it."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Understanding Hexagonal Architecture": [
          "Understanding Hexagonal Architecture",
          "Class 3 - DDD and CQRS"
        ],
        "Preparing the Development Environment": [
          "Class 4 - Preparing the environment",
          "Class 5 - Creating the project"
        ],
        "Defining the boundaries": [
          "Class 6 - Defining the boundaries",
          "Class 7 - The domain objects",
          "Class 7.1 - Adding Tests to the Domain Models"
        ],
        "Interaction between Api and Domain": [
          "Class 8 - CreateCustomer command",
          "class 09 - GetCustomer Query"
        ],
        "Preparing The Database": [
          "class 10 - Preparing the database",
          "class 10.1 the main component",
          "class 11 - Migrating the DB"
        ],
        "Summary Overview": [
          "class 12 - Summary overview"
        ],
        "Application Use Cases": [
          "class 13 - Developing the first UseCase CreateCustomer using TDD",
          "class 13.1 - Sending the CreateCustomerCommand from the Web API Adapter",
          "class 14 - GetCustomer Query"
        ],
        "Dealing with Authentication and Authorization": [
          "class 15 - Authentication and Authorization"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "The only pre-requisite is to know a little bit of c# and .Net and have Visual Studio or Visual Studio Code installed"
      ],
      "description": "In this detailed course, you will master the application of fundamental concepts in hexagonal architecture, Domain-Driven Design (DDD), Test-Driven Development (TDD), and Command Query Responsibility Segregation (CQRS) using .NET. Through a blend of theoretical knowledge and practical exercises, you will learn to enhance your code's quality by employing techniques that emphasize testability, maintainability, and extensibility.\n\n\nAdditionally, software engineers who take this course will be able to lead their teams in refactoring efforts to improve code quality. You will be well-equipped to provide guidance on enhancing software quality, ensuring your projects meet high standards of excellence and adaptability. By the end of this course, you will have the skills to create robust, scalable, and easily maintainable software solutions, positioning yourself as a key player in driving technical excellence within your team.\n\n\nThis course is designed for both novice and experienced software engineers who want to deepen their understanding of advanced architectural patterns and methodologies. You will have access to real-world examples and hands-on projects that will solidify your learning experience. Our comprehensive curriculum covers everything from the basics to advanced topics, ensuring you have a thorough grasp of each concept. Through continuous feedback and support, you will refine your skills and gain confidence in implementing these techniques in your professional work. By the end of this journey, you will not only enhance your technical capabilities but also your ability to lead and mentor others in your organization.",
      "target_audience": [
        "This course is designed for software developers and architects who are looking to deepen their understanding of software design and testing methodologies"
      ]
    },
    {
      "title": "Building Twitter Bot With Python and Tweepy - Python Project",
      "url": "https://www.udemy.com/course/python-bot-development/",
      "bio": "Learn Automation By Building Twitter Bot With Python, Tweepy And Twitter API. Python Project For Twitter Automation!",
      "objectives": [
        "Learn To Build Twitter Bot With Tweepy",
        "Learn About Access Token, Keys And It's Usage",
        "Deploy Bot Online And Run 24/7",
        "Learn Basics About Python Automation",
        "Develop a Basic BOT (Automating Program) using Tweepy"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge Of Python"
      ],
      "description": "Welcome to Building Twitter Bot With Python and Tweepy,\nThis course will help you to build a Twitter Bot project Step-by-Step with Tweepy and Twitter Developer Free API, after development we will deploy the bot online to work 24/7.\n\nBuild Your Twitter Bot To -\n1. Auto Reply\n2. Auto Retweet\n3. Auto Favorite/Like\n4. Auto-Search and More!\n\nThroughout the course, you will learn more about Python and Tweepy,\n1. Understanding Twitter API and its usage with Tweepy.\n2. Extracting Timeline Data and working with it.\n3. Building logic to work on data and perform functions on extracted data.\n4. Getting started by updating our first status through Terminal.\n5. Completing the Auto Reply Bot used for hashtags.\n6. Completing Auto Retweet and Like for articular search.\n7. Deploying Bot Online - Working 24/7\n\nAfter completing this course you will be ready to expand your knowledge of Automation and Python.\nEnroll now and I will make sure you learn best about Tweepy!",
      "target_audience": [
        "Students Who Want To Build Their Own Automation Tool With Twitter",
        "Programmer Who Want To Build A Python Project"
      ]
    },
    {
      "title": "DevOps Practice Tests: Master ChatGPT for Devops.",
      "url": "https://www.udemy.com/course/devops-practice-tests-chatgpt-for-devops/",
      "bio": "Ace the DevOps MCQs with Hands-on Practice Tests and Optimize ChatGPT with Devops for High-Quality Applications.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to take your DevOps skills to the next level? Join this engaging and comprehensive practice tests course designed to help you master the art of ChatGPT Prompting for DevOps. Learn the strategies and techniques used by industry experts to ensure your applications run smoothly and efficiently.\nIn this course, you will dive deep into the world of ChatGPT Prompting for DevOps through a series of hands-on practice tests. You'll gain practical experience in identifying bottlenecks, optimizing code, and fine-tuning your infrastructure for maximum efficiency. Whether you're a seasoned DevOps professional or a beginner looking to enhance your skills, this course will provide you with the knowledge and confidence to excel in your career.\nWhat will students learn in your course?\nBy the end of this course, students will be able to:\nIdentify performance DevOps  for applications using ChatGPT.\nApply optimization techniques to improve response times and reduce latency.\nUtilize monitoring and profiling tools to analyze system performance.\nImplement caching, load balancing, and scaling strategies for optimal resource utilization.\nPrerequisites:\nTo get the most out of this course, learners should have:\nBasic knowledge of DevOps principles and practices.\nFamiliarity with at least one programming language.\nUnderstanding of cloud computing concepts (e.g., AWS, Azure, or Google Cloud).\nWho is this course for?\nThis course is ideal for:\nDevOps professionals looking to enhance their skills in back-end performance optimization.\nSoftware engineers and developers interested in understanding the impact of ChatGPT Prompting for performance on their applications.\nSystem administrators and IT professionals responsible for maintaining high-performance infrastructure using ChatGPT Prompting.\nStudents and learners seeking hands-on practice in ChatGPT Prompting for DevOps .\nDon't miss this opportunity to become a proficient back-end performance optimizer and elevate your DevOps career using ChatGPT Prompting. Enroll now and take the first step towards delivering high-quality, lightning-fast applications. Let's optimize the ChatGPT for DevOps together!",
      "target_audience": [
        "DevOps professionals looking to enhance their skills in back-end performance optimization.",
        "Software engineers and developers interested in understanding the impact of ChatGPT Prompting for performance on their applications.",
        "System administrators and IT professionals responsible for maintaining high-performance infrastructure using ChatGPT Prompting.",
        "Students and learners seeking hands-on practice in ChatGPT Prompting for DevOps."
      ]
    },
    {
      "title": "Python Masterclass",
      "url": "https://www.udemy.com/course/python-masterclass-eb/",
      "bio": "Master programming with Python and improve your coding skills from any level to professional",
      "objectives": [
        "Master Python Fundamentals and Syntax",
        "Apply Object-Oriented Programming (OOP) Techniques",
        "Develop Debugging and Error Handling Skills",
        "Understand and Implement Functions and Functional Programming Concepts",
        "Utilize Data Structures Effectively (Lists, Dictionaries, Tuples, Sets)",
        "Create and Manage Python Modules and Packages",
        "Handle File I/O and Work with CSV/JSON Data",
        "Implement Best Practices for Code Readability and Maintainability",
        "Work with External Libraries Using pip and Virtual Environments",
        "Understand and Use Python’s Built-in and Custom Exceptions",
        "Utilize Regular Expressions for Pattern Matching and Text Processing",
        "Optimize Code Performance with Recursion and Functional Techniques",
        "Leverage Python for Data Manipulation and Analysis using Pandas",
        "Create Real-World Projects to Build a Strong Python Portfolio"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the “Python Odyssey”!",
          "The Story of Python",
          "Personal Journey",
          "Who is this Course for?",
          "How to Navigate this Course?",
          "What is Programming?",
          "Understanding the Python Interpreter and How Code Becomes Machine Instructions"
        ],
        "Elementary": [
          "Installing Python on macOS",
          "Installing Python on Windows",
          "Installing Python on Linux (Ubuntu)",
          "Variety of ways how we can run and develop Python",
          "Introduction to the print() Function",
          "Variables in Programming",
          "Variables in Python",
          "Quiz on Variables in Python",
          "Formatting Strings with print()",
          "Escape Characters in print()",
          "Quiz on the print() Function in Python",
          "Single vs. Double Quotation Marks",
          "Comments",
          "Quiz on Comments in Python",
          "Reserved Words",
          "Quiz on Reserved Words in Python",
          "None Value",
          "Quiz on None Value in Python",
          "Dynamic Typing",
          "Quiz on Dynamic Typing in Python",
          "Strong Typing",
          "Quiz on Strong Typing in Python",
          "The Python Standard Library",
          "Operators",
          "Operators Practical Session",
          "Quiz on Operators",
          "Arithmetic Operators: Area of a rectangle",
          "Arithmetic Operators: Remainder (157 divided by 13)",
          "Arithmetic Operators: Power of (5)",
          "Comparison Operators: Strings equality",
          "Logical Operators: both greater than x and less than y",
          "Logical Operators: divisible by x or divisible by y",
          "Operator Precedence",
          "Quiz on Operator Precedence"
        ],
        "Basic": [
          "Python Expressions",
          "Quiz on Python Expressions",
          "Overview of Data Types",
          "Quiz on Overview of Data Types",
          "Common String Methods",
          "String Indexing",
          "Practical Session: More String Methods",
          "Quiz on Strings",
          "input() Function",
          "Quiz on the input() Function",
          "Numerical Types",
          "Numerical Operations",
          "Working with Math and Random Functions",
          "Quiz on Numerical Types and Operations",
          "Calculating Compound Interest",
          "Booleans",
          "Exploring Logical Conditions in Python",
          "Introduction to Lists",
          "Practical Session: Common List Methods",
          "Quiz on Lists",
          "Managing a To-Do List",
          "Tuples",
          "Practical Session: Tuples",
          "Quiz on Tuples",
          "Dictionaries",
          "Practical Session: Python Dictionaries",
          "Quiz on Dictionaries",
          "Create a Program to Collect User Data Using Dictionaries",
          "Sets",
          "Practical Session: Unique Words Using Sets",
          "Quiz on Sets",
          "Converting Data Types",
          "Quiz on Converting Data Types",
          "Virtual Environments",
          "Key Differences Between Python 2 and Python 3"
        ],
        "Program Flow": [
          "Blocks and Statements",
          "Quiz on Blocks and Statements",
          "Conditionals – if, else, and elif",
          "Using Multiple elif Statements",
          "Replit Introduction",
          "Practical Session: Conditionals",
          "Using Dictionaries for Mapping Cases",
          "Python’s match Statement",
          "Practical Session: Mapping Cases with Dictionaries and the match Statement",
          "Handling Shopping Cart Discounts",
          "Categorising Input Based on Data Type",
          "The range() Function",
          "for Loops in Python",
          "while Loops in Python",
          "break, continue, and pass Statements",
          "Replit Introduction",
          "Practical Session: Conditionals",
          "Practical Session: for loops [Challenge]",
          "Practical Session: for loops",
          "Fizzbuzz",
          "Practical Session: while loops [Challenge]",
          "Practical Session: while loops",
          "Matrix and Nested Loops in Python",
          "Practical Session: Matrices",
          "Emulating do-while Loops in Python",
          "Odd or Even Checker with Exit Option",
          "Truthy and Falsy",
          "The Ternary Operator in Python",
          "Practical Session Ternary",
          "Ternary Operators",
          "The Difference Between is and == Operators",
          "The Walrus Operator",
          "Practical Session: Walrus Operator",
          "The Global and Nonlocal Keywords"
        ],
        "All About Functions": [
          "Introduction to Functions",
          "Introduction to Sublime Text",
          "Quiz on Python Functions",
          "Practical session: Multiplication Table",
          "The return Statement",
          "Quiz on the return Statement",
          "Practical session: Voting Eligibility Checker",
          "Number Guessing Game",
          "Docstrings",
          "*args and **kwargs",
          "Quiz on *args and **kwargs",
          "Practical session: Using both *args and **kwargs together",
          "Practical Session: Unpacking with Single (*) Asterisks",
          "Functions That Call Other Functions",
          "Quiz on Functions that Call Other Functions",
          "Practical Session: Calculator for Final Price with Discount and Tax",
          "Functions with Multiple return Statements",
          "Quiz on Functions with Multiple return Statements",
          "Grade Determiner",
          "Default Arguments",
          "Quiz on Default Arguments",
          "Named and Positional Arguments",
          "Quiz on Named and Positional Arguments",
          "Practical Session: Shopping Cart Discount System",
          "Practical Session: Shopping Cart (Named, Positional and Default Arguments)",
          "Lambda Functions",
          "Quiz on Lambda Functions",
          "Practical Session: Sorting Books (Lambda Functions)",
          "Returning Functions (Function Factories)",
          "Quiz on Function Factories",
          "Practical Session - Personalized Greeting (Function Factory)",
          "Passing Functions as Arguments",
          "Quiz on Passing Functions as Arguments",
          "Create a Custom Logger Function"
        ],
        "Object Oriented Programming": [
          "Introduction to Object-Oriented Programming",
          "Introduction to Classes and Objects in Python",
          "Garbage Collector",
          "Attributes and Methods in Python Classes",
          "Introduction to Visual Studio Code",
          "Constructor || the __init__ Method",
          "Class Variables vs Instance Variables",
          "Practical Session: Simple Banking System",
          "Accessing self and cls",
          "Inventory Management System",
          "Abstraction",
          "Encapsulation",
          "Inheritance",
          "Abstract Classes",
          "Practical Session: LibraryUser",
          "The super() Function",
          "Practical Session: Staff Member",
          "Multiple inheritance",
          "Method Resolution Order",
          "Practical Session: Smart Device Hierarchy",
          "Polymorphism",
          "Practical Session: Shape",
          "Animal Simulation System Using OOP Concepts",
          "Static vs Class Methods",
          "Practical Session: Logger",
          "Dunder methods",
          "Composition and Aggregation",
          "Library Management System (using Composition and Aggregation)",
          "Object Cloning",
          "Method Overriding vs Method Overloading"
        ],
        "Error handling, exceptions and debugging": [
          "Introduction to Errors and Exceptions",
          "Basic Exception Handling",
          "Practical Session: Exception Handling",
          "Built-In Python Exceptions",
          "Practical Session: Specific Exception Types",
          "Raising Exceptions Manually in Python",
          "Creating Custom Exceptions",
          "Practical Session: Raise Custom Exception",
          "Exception Handling Best Practices",
          "Shopping Cart Program with Exception Handling",
          "Simple Inventory Management System",
          "Logging for Better Debugging",
          "Debugging Techniques",
          "Practical Session: Debugging with pdb",
          "Using IDE Tools for Debugging",
          "Practical Session: Debugging with IDE",
          "Assertions for Error Checking",
          "Handling Warnings",
          "Common Debugging Pitfalls and How to Avoid Them",
          "Library Management System"
        ],
        "Functional Programming": [
          "Introduction to Functional Programming",
          "Imperative vs. Functional Thinking",
          "Pure Functions",
          "Practical Session: Shopping list - Pure Functions and Immutability",
          "Higher-Order Functions",
          "Practical Session: Higher-Order Functions and Function Composition",
          "Function Composition",
          "Function Chaining in Python",
          "Building a Functional Data Pipeline",
          "The functools Module in Python",
          "Closures and Function Factories",
          "Practical Session: Discount Factory",
          "Decorators",
          "Practical Session: Rate Limiter",
          "Creating a Dynamic Function Decorator Library",
          "Recursive Functions in Python",
          "Practical Session: Find Pattern (Recursion)",
          "Recursive Solutions for Real-World Problems"
        ],
        "File IO": [
          "Introduction to File I/O",
          "Reading Files",
          "Writing to Files",
          "Practical Session: File Processor – Read, Process, Write",
          "File Modes",
          "File Paths",
          "Handling CSV Files",
          "Working with Pandas",
          "Handling JSON Files",
          "Customer Order Processing System",
          "Assignment Solution (Extra): Customer Order Processing System",
          "File IO Error Handling",
          "Practical Session: Advanced Handling with JSON and Pandas",
          "File IO with Binary Files",
          "Working with Large Files",
          "Practical Session: Processing CSV Data and Writing to JSON",
          "Practical Session: Binary Files and Large File Handling",
          "Movie Review Analysis",
          "Pickle",
          "Practical Session: Integration Organizing Files",
          "Practical Session: Pickle and JSON Comparison",
          "Shelve",
          "Log File Analysis and Report Generation"
        ],
        "Modules and Packages": [
          "Understanding the import Statement",
          "Introduction to Modules",
          "Built-in Python Modules",
          "Creating and Using Packages",
          "Organising Projects Using Modules",
          "Practical Session: Creating and Using Python Modules",
          "Understanding if __name__ == \"__main__\"",
          "Practical Session: Creating and Using Custom Modules and Packages - Part One",
          "Practical Session: Creating and Using Custom Modules and Packages - Part Two",
          "Introduction to pip - Python’s Package Installer",
          "Namespace and Scope in Modules",
          "Practical Session: Namespace, Scope, and Regular Expressions - Part One",
          "Practical Session: Namespace, Scope, and Regular Expressions - Part Two",
          "Assignment: Developing a Modular Task Management System",
          "Assignment Solution: Developing a Modular Task Management System",
          "Regular Expressions in Python",
          "Assignment: Developing a Personal Expense Tracker",
          "Assignment Solution: Developing a Personal Expense Tracker"
        ]
      },
      "requirements": [
        "Computer with any standard OS (MacOs, Windows, Linux).",
        "Desire to become Python developer."
      ],
      "description": "This course is the best possible mix of theory and hands-on practice to guide you how to become a real Python programmer.\n\n\nWhether you are a complete beginner, switching from another language, or looking to deepen your skills, this course has you covered. With tons of quizzes, practical sessions, and challenging assignments, every concept is reinforced through real coding. You will not just learn Python - you will learn to apply it like a pro. This is where the real difference happens.\n\n\nThe sessions and assignments are based on real-world systems, and that way you will gain experience that actually matters. Throughout the course, you'll internalize programming principles, clean code practices, and proper code architecture - everything you need to write professional, maintainable code.\n\n\nSome of the points that make this course different from any other course on this platform are:\n- The Widest Toolset – You will work with a broad range of industry-standard tools, learning how Python fits into different development workflows.\n- Multi-sensory Learning Approach – This course is build based upon various well-tested advanced techniques (concept mapping, coloring, shaping, progression steps) proven to boost memory and make complex concepts stick.\n\n\nThis is more than just another Python course. It’s a structured, constantly improving learning experience designed to take you from beginner to pro.",
      "target_audience": [
        "Beginners, starting from Zero",
        "Junior developers",
        "College graduates and job seekers",
        "Mid-Level developers looking to refine their skills",
        "Experienced developers coming from other languages and looking to embrace the Pythonic way"
      ]
    },
    {
      "title": "Python Tool Development with PySide & PyQt",
      "url": "https://www.udemy.com/course/python-tool-development-with-pyside-pyqt4-pyqt5/",
      "bio": "Learn to create a simple GUI tool using the powerful Qt Framework for Windows, Linux, and Mac with Python 2.7, 3.4, 3.5.",
      "objectives": [
        "Create your own GUI and tools!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "GUI Design": [
          "02_Installation",
          "Designer and Resources",
          "GUI Layout Planning",
          "GUI Design"
        ],
        "Qt.py Importing": [
          "Qt.py Download",
          "Starting Code"
        ],
        "GUI Code": [
          "GUI Code Planning",
          "Importing and Class Name",
          "GUI Constructor",
          "GUI Setup",
          "Workspace Combobox",
          "Application List Widget",
          "Run the Tool"
        ],
        "Workspace Model": [
          "Model View Controller, MVC, MVVM",
          "Model File Planning",
          "Model File Code"
        ],
        "Application Model": [
          "Application Data",
          "Get, Add, Delete Apps",
          "Reorder, Run Apps"
        ],
        "Workspace GUI": [
          "Instantiating Model",
          "Connect Workspace",
          "Populating Workspaces",
          "Test Workspaces"
        ],
        "Application GUI": [
          "Workspace Changed",
          "Populate Apps",
          "Branching Thoughts",
          "Run Applications",
          "Testing Applications"
        ],
        "Edit Button GUI": [
          "Edit Button",
          "Edit Options"
        ],
        "Edit Toggle": [
          "Edit Button Checkable",
          "Edit Functions"
        ]
      },
      "requirements": [
        "You should have some experience with Python"
      ],
      "description": "Hey, fellow programmer! Interested in creating python tools to make your life easier? Want to take your scripts to the next level? Let me teach you how!\n\nThis series will walk you through the creation of a custom tool to launch other applications and documents with ease. Whether you know just the basics of python programming or an expert curious about PySide or PyQt, this series will be perfect for you!\n\nThe tool we develop will work on:\nPython 2.7, 3.4 and 3.5\nPySide, PySide2, PyQt4 and PyQt5\nWindows, Linux and Mac!\nIn this series you'll learn how to:\nPrototype in Designer\nCreate readable GUI code\nPlan data holding code\nConnect data to GUI\nExpand GUI functionality\nIterative testing\nCustom widget classes\nDrag & Drop functionality\nSave & Load data\nDock tool in System Tray\nAdd custom style!\nAt the end of this series, you'll be well prepared to create you own tools!\nIf you have any questions, feel free to message me directly! Thanks for being awesome!",
      "target_audience": [
        "You should have some experience with Python"
      ]
    },
    {
      "title": "Google Cloud Run with Java and Spring Boot",
      "url": "https://www.udemy.com/course/learn-serverless-google-cloud-run-with-java-and-spring-boot/",
      "bio": "CloudRun , serverless kubernetes, spring boot , java",
      "objectives": [
        "Serverless fundamentals: Learn benefits, architecture, scaling.",
        "Master Google Cloud Run: Deploy Java, Spring Boot.",
        "Containerize Spring Boot: Docker, best practices.",
        "Build scalable serverless apps: Integrate, event-driven."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Cloud Run ?"
        ],
        "Deploy Spring Boot Application on Google Clour Run": [
          "About Example Application",
          "Simple Cloud Run App without spring boot",
          "Running First Spring Boot Application on Cloud Run",
          "Adding and Deploying Crud Operations on Cloud Run",
          "Adding and Updating Environment Variables"
        ],
        "Backend Internal API": [
          "External and Internal Ingress",
          "Demo : Calling Backend Internal API"
        ],
        "Revision Management,Rollbacks, gradual rollouts, and traffic migration": [
          "Revision Management and traffic migration",
          "Demo : Revision Management,Rollbacks, gradual rollouts, and traffic migration"
        ],
        "Health Probe and logging": [
          "Health Probes in Cloud Run",
          "Demo : Health check with Spring boot actuator",
          "Simple logging example"
        ],
        "Persisting Data": [
          "Read data from Google Bucket storage",
          "Using Cloud sql"
        ],
        "Using CiCD pipeline": [
          "Using GitHub Action to deploy Cloud Run Application"
        ],
        "Creating Jobs": [
          "Creating sample jobs provided by Google",
          "Creating a simple Java Job"
        ],
        "Continuously deploy new revisions from a source repository": [
          "Using Dockerfile from Github Source",
          "Deploy Using Google Build Pack"
        ],
        "Thank you": [
          "Thank you"
        ]
      },
      "requirements": [
        "basics Java programming, Spring Boot, cloud computing, Docker, Google Cloud Platform."
      ],
      "description": "Learn Serverless Google Cloud Run with Java and Spring Boot is a comprehensive course designed to help you master the concepts and techniques of building serverless applications using Google Cloud Run, Java, and Spring Boot.\nIn this course, you will start by gaining a solid understanding of serverless computing and its benefits, as well as an overview of Google Cloud Run and its features. You will then dive into the Java and Spring Boot frameworks, exploring their core functionalities and how to leverage them to build robust and scalable applications.\nThroughout the course, you will learn how to containerize your Spring Boot applications using Docker and deploy them to Google Cloud Run. You will explore the key aspects of building serverless applications, such as managing resources, handling authentication and authorization, and working with event-driven architectures.\nWith hands-on exercises and real-world examples, you will practice deploying and scaling your applications on Google Cloud Run. You will also learn how to integrate your serverless applications with other Google Cloud services, such as Cloud Storage, Cloud Pub/Sub, and Cloud Logging.\nBy the end of this course, you will have the skills and knowledge to confidently develop and deploy serverless applications using Java, Spring Boot, and Google Cloud Run. Whether you are a Java developer looking to adopt serverless architecture or an experienced cloud practitioner seeking to enhance your skills, this course will empower you to leverage the full potential of serverless computing on the Google Cloud Platform.",
      "target_audience": [
        "This course is suitable for Java developers and cloud practitioners who want to learn how to build serverless applications using Java and Spring Boot on Google Cloud Run. It is designed for individuals seeking to leverage the benefits of serverless computing and enhance their skills in cloud-based application development."
      ]
    },
    {
      "title": "Jakarta EE (Formerly Java EE) Deep Dive - Build A Todo App",
      "url": "https://www.udemy.com/course/jakarta-ee/",
      "bio": "Learn to use JPA, EJB, CDI, JAX-RS to build a Todo app and deploy it as a docker container to Microsoft Azure Cloud",
      "objectives": [
        "Develop a fully functional Todo app deployed to Microsoft Azure using Docker",
        "Learn to develop RESTful web services with JAX-RS",
        "Learn to secure RESTful Web Services with Json Web Token (JWT)",
        "Learn to build database driven apps with Java Persistence API",
        "Know the various Jakarta EE APIs and how they work together",
        "Learn to develop loosely coupled apps with the Contexts and Dependency Injection API",
        "Learn to use the Enterprise JavaBeans API to create powerful business logic components",
        "Learn to deploy Java EE apps with Docker"
      ],
      "course_content": {
        "Welcome!": [
          "Welcome, intro and course overview",
          "What are we going to build?",
          "Join the Course Community on Gitter!"
        ],
        "Java Persistence API - JPA Domain Modelling": [
          "The Java Persistence API (JPA) - History and Motivations",
          "Let's Create the Project",
          "A Jakarta EE Hello World Code Walk Through",
          "A Jakarta EE Hello World Code Walk Through",
          "A Look at the 3 Canonical Jakarta EE APIs",
          "Creating the TodoUser Entity - Setting the Primary Key",
          "Creating the TodoUser Entity",
          "Creating the TodoUser Entity - Customizing the Table and Columns",
          "Creating the Todo Entity",
          "JPA And Polymorphism",
          "Populating the Todo Entity Class",
          "Entity Relationships",
          "Entity Relationships - Bidirectional Relationships",
          "Customizing Foreign Key Column with @JoinColumn",
          "An Introduction to Bean Validation",
          "Adding Validation Constraints to the Todo Entity",
          "Adding Validation Constraints to the Todo Entity",
          "Adding Validation Constraints to the Todo Entity",
          "Adding Validation Constraints to the TodoUser Entity",
          "Adding Validation Constraints to the TodoUser Entity",
          "Domain Modelling Recap"
        ],
        "Java Persistence Query Language and the Service Layer": [
          "An introduction to querying with the Java Persistence API",
          "Querying the TodoUser Entity with Java Persistence Query Language (JPQL)",
          "Querying the TodoUser Entity with Java Persistence Query Language (JPQL)",
          "Querying the TodoUser Entity with Java Persistence Query Language (JPQL)",
          "Querying the TodoUser Entity with Java Persistence Query Language (JPQL)",
          "Off Topic",
          "An Introduction to the Service Layer with EJBs",
          "An Introduction to Enterprise JavaBeans (EJBs)",
          "An Intro Stateless, Stateful and Singleton EJBs",
          "Introducing the Persistence Service Stateless EJB",
          "An Intro to the JPA EntityManager Interface",
          "A Look at the JPA Persistence Context",
          "The Difference Between Persistence Context and Persistence Unit",
          "Injecting the EntityManager Interface into our Persistence Service EJB",
          "Implementing Persistence Service Methods - Save TodoUser",
          "Implementing Persistence Service Methods - Save TodoUser",
          "Implementing Persistence Service Methods - Save Todo",
          "Implementing Persistence Service Methods - Save Todo",
          "Implementing Query Service EJB Methods - Find TodoUser By Email",
          "The Query Service Stateless EJB - Recap",
          "Implementing Query Service EJB Methods - List TodoUsers and Find TodoUser by ID",
          "Implementing Query Service EJB Methods - Find TodoUser by Name",
          "Implementing Query Service EJB Methods - Find All Todos",
          "Testing Our Services with Arquillian and JUnit",
          "Testing Our Services with Arquillian and JUnit",
          "Testing Our Services with Arquillian and JUnit",
          "Testing Our Services with Arquillian and JUnit",
          "JPA Entity LifeCycle Callbacks",
          "JPA Entity LifeCycle Callbacks",
          "The Problem with the GetSingleResult Method on EntityManager",
          "The Problem with the GetSingleResult Method on EntityManager",
          "The Problem with the GetSingleResult Method on EntityManager",
          "An Intro to DataSources",
          "Let's Create the DataSource",
          "Downloading, Setting Up and Testing SQLite DB",
          "Running our App on SQLite",
          "JPA, JPQL, EJB Summary"
        ],
        "Java API for RESTful Web Services (JAX-RS)": [
          "An Intro to Jakarta EE REST Web Servics with JAX-RS",
          "Configuring REST Service Root Path with @Application",
          "Specifying REST Resource Paths with @Path",
          "Crafting the TodoUser REST Resource Class",
          "Crafting the Todo REST Resource Class",
          "Resource Validation",
          "Implementing the TodoUserRest Class - Create Resource Method",
          "Implementing the TodoUserRest Class - Create Resource Method",
          "Implementing the TodoUserRest Class - Create Resource Method",
          "Implementing the TodoUserRest Class - Create Resource Method",
          "Implementing the TodoUserRest Class - Let's Run the Code!",
          "Implementing the TodoUserRest Class - Let's Run the Code!",
          "How to Exit the Running Payara Micro Server Instance",
          "Implementing the TodoUserRest Class - Update Resource Method",
          "Implementing the TodoUserRest Class - Find By Email Resource Method",
          "Implementing the TodoUserRest Class - Find By Email Resource Method",
          "Implementing the TodoUserRest Class - Find By Email Resource Method",
          "Implementing JAX-RS Resource Parameter Constraints",
          "Implementing JAX-RS Resource Parameter Constraints - Let's Run the Code",
          "Class Level Content Type Declaration",
          "Implementing the TodoUserRest Class - Search By Name Resource Method",
          "JPA Native Queries - Count TodoUser By Email",
          "JPA Native Queries - Count TodoUser By Email",
          "JPA Native Queries - Count TodoUser By Email",
          "JPA Native Queries - Count TodoUser By Email",
          "Preventing Double Signup with the Same Email",
          "Preventing Double Signup with the Same Email",
          "Preventing Double Signup with the Same Email",
          "Preventing Double Signup with the Same Email - Let's Run the Code!",
          "Code Run and Bug Alert with Update Method",
          "Code Run and Bug Alert with Update Method",
          "Let's Fix the Bug!",
          "Let's Fix the Bug and Run the Code",
          "The Todo Rest Class",
          "Implementing the TodoRest Class - List Resource Method",
          "Implementing the TodoRest Class - Find By ID Method Using Dynamic JPQL",
          "Implementing the TodoRest Class - Mark Todo as Completed Resource Method",
          "Implementing the TodoRest Class - Get All Completed Todos Resource Method",
          "Implementing the TodoUserRest Class - Get All Completed Todos Resource Method",
          "Implementing the TodoRest Class - Get All Todos By Due Date Resource Method",
          "Implementing the TodoUserRest Class - Mark a Todo as Archived Resource Method",
          "Authentication with Json Web Token (JWT) - Adding Third Party Libs",
          "An Introduction to JAX-RS Filters",
          "JWT Auth with JAX-RS Filters - Login Resource Method",
          "JWT Auth with JAX-RS Filters - Login Resource Method",
          "JWT Auth with JAX-RS Filters - Login Resource Method",
          "JWT Auth with JAX-RS Filters - Implementing the SecurityUtil Class",
          "JWT Auth with JAX-RS Filters - Login Resource Method",
          "JWT Auth with JAX-RS Filters - Recap",
          "JWT Auth with JAX-RS Filters - Let's Run the App",
          "JWT Auth with JAX-RS Filters - Let's Run the App",
          "A Trip to the JWT.io Website",
          "JWT Auth with JAX-RS Filters - Implementing @SecureAuth & ContainerRequstFilte",
          "JWT Auth with JAX-RS Filters - Implementing the ContainerRequestFilter",
          "JWT Auth with JAX-RS Filters - Implementing the ContainerRequestFilter",
          "JWT Auth with JAX-RS Filters - Implementing the ContainerRequestFilter",
          "JWT Auth with JAX-RS Filters - Implementing the ContainerRequestFilter",
          "JWT Auth with JAX-RS Filters - Implementing the ContainerRequestFilter",
          "JWT Auth with JAX-RS Filters - Implementing the ContainerRequestFilter",
          "JWT Auth with JAX-RS Filters - Let's Run the App",
          "JWT Auth with JAX-RS Filters - Better Error Handling",
          "JWT Auth with JAX-RS Filters - Let's Run the App",
          "Securing Resource Methods - The TodoUserRest Class",
          "Securing Resource Methods - The TodoRest Class",
          "Let's Run the App",
          "Let's Run the App",
          "Let's Run the App",
          "JWT Auth with JAX-RS Filters - Let's Improve our Code",
          "Better Principal Info with SecurityContext",
          "Better Principal Info with SecurityContext",
          "Better Principal Info with SecurityContext - Recap",
          "Better Principal Info with SecurityContext",
          "Better Principal Info with SecurityContext",
          "Let's Run the App and Fix a Bug",
          "Default Message Provider API in Jakarta EE - JSON-B",
          "Custom Data Marshaling with MessageBodyWriter",
          "JAX-RS and Marshallers",
          "Oh No! A NullPointerException!!",
          "Let's Fix the NPE in the PersistenceService EJB",
          "Let's Fix the NPE in the QueryService EJB",
          "Let's Run the App",
          "Customizing Marshaled Data with @JsonbTransient",
          "Let's Run the App",
          "Hypermedia JAX-RS with JSON-P API",
          "Hypermedia JAX-RS with JSON-P API",
          "Hypermedia JAX-RS with JSON-P API",
          "Hypermedia JAX-RS with JSON-P API",
          "Hypermedia JAX-RS with JSON-P API - Let's Run the App",
          "Hypermedia JAX-RS with JSON-P API - Let's Run the App",
          "Hypermedia JAX-RS with JSON-P API - Let's Run the App",
          "JAX-RS Exception Mappers - The Why",
          "Returning Meaningful Validation Error Messages with Exception Mappers",
          "Returning Meaningful Validation Error Messages with Exception Mappers",
          "Returning Meaningful Validation Error Messages with Exception Mappers - Code Run",
          "Returning Meaningful Validation Error Messages with Exception Mappers",
          "Returning Meaningful Validation Error Messages with Exception Mappers",
          "Caching with CacheControl"
        ],
        "Deploying Jakarta EE to Microsoft Azure with Docker": [
          "Jakarta EE Cloud Deployment with Docker Intro",
          "Jakarta EE Cloud Deployment with Docker - Code Change",
          "Jakarta EE Cloud Deployment with Docker - Summary of Steps",
          "Jakarta EE Cloud Deployment with Docker - Creating the Azure Container Registry",
          "Jakarta EE Cloud Deployment with Docker - Pushing Docker Image to ACR",
          "Jakarta EE Cloud Deployment with Docker - Creating the Azure Web App",
          "Jakarta EE Cloud Deployment with Docker - Creating the Azure Web App",
          "Jakarta EE Cloud Deployment with Docker - Testing the Deployed App",
          "Jakarta EE Cloud Deployment with Docker - Recap",
          "Jakarta EE Cloud Deployment with Docker - Room for Code Improvement",
          "Jakarta EE Cloud Deployment with Docker - Making and Pushing Changes",
          "Jakarta EE Cloud Deployment with Docker - Testing the Pushed Changes"
        ],
        "The Theory of Java EE (Jakarta EE)": [
          "What is Java EE?",
          "What is Java EE?",
          "What is a Java EE (Jakarta EE) Application Server?",
          "What is an Application Server?",
          "What is a Java Specification Request (JSR)?",
          "What is a JSR?",
          "What is a Reference Implementation?",
          "What is a Reference Implementation?",
          "What is Jakarta EE?",
          "Jakarta EE Specification Process",
          "Java EE (Jakarta EE) and Spring Framework",
          "The Theory of Jakarta EE (Java EE) - Test Your Knowledge"
        ]
      },
      "requirements": [
        "Basic knowledge of Java Programming Lanuguage",
        "Java 8",
        "A Java IDE - NetBeans, IntelliJ or Eclipse",
        "Maven"
      ],
      "description": "Start developing modern software with Jakarta EE (formerly Java EE) today!\nIf you're looking for a software development platform that will allow you develop modern, powerful, secure and portable applications, then Jakarta EE (formerly Java EE) is the answer. Jakarta EE is used by professional software developers from across the world in all forms of domains- from finance to healthcare to robotics. This course is the most practical way to jump right in and start developing with Jakarta EE.\nBuild any kind of software you can imagine with Jakarta EE. Practice while you learn. This course is completely hands on, and gives you all the source code for each step and lecture.\nBy the end of this course, you would have built a fully functional Todo app exposed as a web service running in a Docker container on Microsoft Azure!\nWe'll be using Jakarta EE (Java EE) 8 throughout this course. All you need is an implementation of the APIs, and we will be using the FREELY available Payara Server as our app container.\nWhat's in it for you? Here's my promise to you.\nI'm a Jakarta EE developer based in Accra Ghana. Nothing in this world excites me like sharing my knowledge of high productivity with Java EE with students from across the world. I'll be here for you every step of the way. Whenever you've a question, just ask in the course forums and I'll be more than happy to respond. I mostly respond to questions in less than an 1 of asking.\nWhat is this course all about?\nIn this comprehensive guide to software development with Jakarta EE (formerly Java EE), you'll learn all there is to know about how to use this powerful, industry standard platform to develop any kind of software you imagine. You'll learn about the\nJava Persistence API (JPA) for database access\nJava API for Restful Web Services for crafting modern web services\nEnterprise JavaBeans (EJB) API for crafting powerful business components\nContexts and Dependency Injection (CDI) API for crafting loosely coupled app\nIntegration testing using the Arquillian framework\nDeployments using Docker container orchestration and so much more\nLearn from someone who lives and breathes Java EE, is very passionate about helping you succeed with Jakarta EE and will be with you through it all.\nBy the end of this course, your confidence as a Java EE developer will soar. You'll have a thorough understanding of developing software with Jakarta EE, for fun or career advancement.\nGo ahead and click the enroll button and I'll see you in lesson 1!\nCheers,\nLuqman",
      "target_audience": [
        "Anyone who wishes to develop database driven apps with the Java Persistence API (JPA)",
        "Anyone who wishes to develop modern RESTful web services with JAX-RS",
        "Anyone who wishes to learn Java EE deployment with Docker",
        "Java developers that are curious about enterprise software development with Java EE",
        "Anyone who wants to master Jakarta EE software development",
        "Anyone who wishes to advance their Java software development",
        "Anyone who wishes to learn how to develop modern software with the standards based Java EE"
      ]
    },
    {
      "title": "Writing Functional Design Document(Real Time Project Based)",
      "url": "https://www.udemy.com/course/writing-functional-design-documentreal-time-project-based/",
      "bio": "Writing Effective Functional Specification Document(FSD)/FD in Information Technology Based on Real Time Project Example",
      "objectives": [
        "Writing Effective Functional Design Document/Functional Specification Document in Information Technology",
        "Understanding Contents of Functional Design Document/Functional Specification Document in Information Technology",
        "Building Interface Between SAP and SalesForce Based on Real Time Project Insights",
        "End to End Project Life Cycle Based on Real Time Project Insights",
        "What is Functional Design Document/Functional Specification Document",
        "Typical Contents Functional Design Document/Functional Specification Document",
        "Purpose of Functional Design Document/Functional Specification Document",
        "Audience of Functional Design Document/Functional Specification Document",
        "Features of Functional Design Document/Functional Specification Document",
        "Types of Functional Design Document/Functional Specification Document",
        "Who Writes Functional Design Document/Functional Specification Document",
        "What is Technical Design Document/Technical Specification Document",
        "Types of Technical Design Document/Technical Specification Document",
        "Who Writes Technical Design Document/Technical Specification Document"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Agenda"
        ],
        "Functional Specification Document/Functional Design Document Brief Introduction": [
          "What is Functional Specification Document(FSD)?",
          "Purpose of Writing Functional Specification Document(FSD)",
          "Key Features of Functional Specification Document(FSD)",
          "Audience of Functional Specification Document(FSD)"
        ],
        "Writing Functional Design Document (FSD) Based on Real Time Project": [
          "Pre-Requisites Before Writing Functional Specification Document(FSD)",
          "Writing Functional Design Document (FSD) Part-I",
          "Writing Functional Design Document (FSD) Part-II",
          "Writing Functional Design Document (FSD) Part-III",
          "Writing Functional Design Document (FSD) Part-IV",
          "Writing Functional Design Document (FSD) Part-V"
        ],
        "What's Next": [
          "Whats's Next",
          "Making Changes to Functional Specification Document (FSD)",
          "Functional Specification Document (FSD) Types",
          "Who Writes Functional Specification Document (FSD)",
          "Statuses of Functional Specification Document (FSD)"
        ],
        "Project - Oracle Transportation Management Invoices to SAP Via IDoc": [
          "Interface - Oracle Transportation Management Invoices to SAP Via IDoc Part-I",
          "Interface - Oracle Transportation Management Invoices to SAP Via IDoc Part-II"
        ],
        "Bonus Topics-(Include Templates,Project Based FSD's & TSD's-Contentious Update)": [
          "Bonus Lecture (Include Templates,Project Based FSD's & TSD's-Contentious Update)"
        ]
      },
      "requirements": [
        "Only Passion to Learn is Required"
      ],
      "description": "This is Step-by-Step Course that will Take you into Incredible World of Writing Effective Functional Specification Document/Functional Design Document in Information Technology.\nIn this Course I will walk you through Writing a Functional Specification Document/Functional Design Document Based on Real Time Project of Building Interface Between SAP and SalesForce.\nThis Course is Designed Based on Real Time Project Insights, This Course Contains Complete Information About Project Life Cycle Including Pre-Requisites Before Writing Functional Specification Document Including Raw Requirement/User Stories, Requirements Gathering, Requirements Finalization, Writing Functional Specification Document, Development Process, Unit Testing, QA Testing, End User Testing, Cut over Activities, Project Go Live, Hyper Care Period and Post Go Live Support.\n\nThis Course is a Must for People who wanted to Learn End to End Project Cycle in Information Technology and Wanted to Primarily Become Efficient Writing Functional Specification Document/Functional Design Document in Information Technology.\nYou will Get Sample Functional Specification Documents (FSD) Templates for Designing Processes, Custom Programs, Interfaces and Reports Developments along with Complete Details of What is Functional Specification Document, Propose of Writing Functional Specification Document, Audience of Functional Specification Document, Key Features of Functional Specification Document and Who Writes Functional Specification Document.\n\nIn This Course We Will Cover Very Important Bonus Topic of Technical Specification Documents(TSD)/Technical Design Document Including What is Technical Specification Documents, Types of Technical Specification Documents, Who Writes Technical Specification Documents along with Sample Technical Specification Documents (TSD) Templates for Designing Processes, Custom Programs, Interfaces and Reports Developments.\nAfter this Course you would have Deep Understanding of Writing Functional Specification Document/Functional Design Document Along with End to End Project Cycle in Real Time Environment and Good Understanding of Technical Specification Document/Technical Design Document.\nAt the End of this Course you can Confidently Add Designing Processes, Writing Functional Specification Documents/Functional Design Documents in Information Technology on your Resume/CV.\nLearn by Doing!",
      "target_audience": [
        "All IT Professionals",
        "All Professionals Interacts with Technology and Systems",
        "All IT Students Who Are Ready to Learn and Enter into Corporate World",
        "All Students Who Are Ready to Learn and Enter into Corporate World"
      ]
    },
    {
      "title": "Deploy FastAPI, React, PostgreSQL Apps on Amazon Cloud (AWS)",
      "url": "https://www.udemy.com/course/deploy-fastapi-fullstack-amazon-cloud-aws/",
      "bio": "Deploy a Full Stack app on AWS that is scalable, uses a custom domain, SSL, HTTPS, Continuous Integration and Delivery",
      "objectives": [
        "Deploy your Full Stack Python FastAPI, React and PostgreSQL Apps Online to AWS",
        "Learn to Deploy your FastAPI applications so the whole world can use YOUR app!",
        "Create a custom Domain Name that points to your Full Stack application.",
        "This course will INSTANTLY set you apart from the competition!",
        "I am a RESPONSIVE INSTRUCTOR ... post your questions and I will RESPOND in 24 hours",
        "You can DOWNLOAD all source code. Perfect for offline LEARNING and REVIEW."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course Content",
          "How To Get The Most Out Of This Course",
          "Get the Course Source Code and Slides"
        ],
        "Getting Started": [
          "Project Overview and Prerequisites",
          "FastAPI & React Project Setup Overview",
          "Python and Node Installation",
          "Setup FastAPI Project Locally",
          "Setup React Project Locally",
          "Setup GitHub Repository for FastAPI",
          "Setup GitHub Repository for React"
        ],
        "AWS Overview": [
          "What is Cloud Computing?",
          "AWS Overview",
          "AWS Deployment Core Services",
          "AWS Free Tier Overview & Course Costs"
        ],
        "AWS FastAPI Deployment Guide": [
          "Create AWS Developer Account",
          "Create Free Tier Budget Overview",
          "Create Our Free Tier Budget",
          "RDS Overview",
          "Create RDS Service",
          "Connect FastAPI to PostgreSQL RDS Overview",
          "Connect FastAPI to PostgreSQL RDS",
          "Create FastAPI Infrastructure on AWS Overview",
          "Create FastAPI Infrastructure on AWS",
          "Deploy FastAPI using CI/CD on AWS",
          "Make RDS Private"
        ],
        "Custom Domain, HTTPS/SSL and Load Balancer": [
          "Costs",
          "Route 53 Overview",
          "How to Purchase Custom Domain",
          "Hosted Zones Overview",
          "Setup FastAPI Subdomain",
          "Certificate Manager & Load Balancer Overview",
          "Create SSL Certificate Manager",
          "Configure Load Balancer"
        ],
        "AWS React Deployment Guide": [
          "Amplify Overview",
          "Amplify Deployment",
          "Setup React Domain & Env Variables"
        ],
        "Remove AWS Services": [
          "Remove AWS Services That Were Created"
        ],
        "Summary": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic FastAPI knowledge is required.",
        "Basic React knowledge will be helpful.",
        "No previous experience with Amazon Cloud (AWS) needed.",
        "Free AWS developer account requires a credit card for registration (no charges to card, verification only)."
      ],
      "description": "Learn how to BUILD and DEPLOY a Full Stack application using AWS, FastAPI, React and PostgreSQL!\n-\nAWS (amazon web services) is one of the hottest and most in-demand technologies on the market.\nBy the end of this course, you will have built and deployed your own scalable production ready applications, that leverages the power of AWS, FastAPI, React and PostgreSQL.\nThere are tons of tutorials, but how many actually show you how to build and deploy an entire application step-by-step so the whole world can use what YOU created?\n-\nBeing able to leverage AWS into your application can improve the job you have, get you a new job, or even create a startup / contract roles! These skills are highly sought after with some of the highest paying job postings are asking for AWS, Python & FastAPI experience.\nIn this complete AWS Deployment course you will quickly get caught up to speed by locally building/setting up a social media app that I created for this course. We will deploy this app and you can use this app as a starting place for future projects you want to create! Whether you are wanting to expand your current craft, want to change careers or simply wanting to learn a new fast growing piece of technology, then this course if for you. You will be using all modern AWS services that include: RDS, EC2, Elastic Beanstalk, Route 53, Hosted Zones, Amplify, Code Pipeline and more!\nThis course is designed with intermediate programmers in mind! This means we don't walk through all of the code, but you are expected to be able to read the code if you'd like. This way, we can dive right into AWS services and working on setting up your infrastructure.\n-\nIn this course, you will get (not only):\n- All source code is available for download\n- Responsive Instructor: All questions answered within 24 hours\n- Professional video and audio recordings (check the free previews)\n- High quality closed-captions / subtitles available for English (new!)\n-\nContent and Overview:\nInstall & Setup Python, IDE, FastAPI & React.\nGit Repositories.\nCloud Computing Knowledge.\nDeploy FastAPI & PostgreSQL on AWS.\nDeploy React application on AWS.\nSetup Continuous Integration & Delivery (CI/CD) on AWS.\nSetup Custom Domain on AWS.\nSetup Custom Subdomains on AWS.\nSetup SSL/HTTPS on AWS.\nAllow anyone in your application so the world can use it.\nAnd more!\nCourse videos are regularly updated to keep up with the newest updates and information. The codingwithroby community is very active, so always know that if you have a question you will receive an answer within 24 hours!\n-\nSee what other students are saying about my courses!\n\"Great teacher, very well built i like the overview part before hands on, 5 stars from me :)\"\n\"The course is great because it covers a lot of real-life situations and goes wide and deeply on each topic. All recommendations and praise for the author.\"\n\"I like how the entire course is Paced. The instructor is very knowledgeable and explains how to code step by step in an easy-to-understand manner.\"\n\"I learn a lot of things related with fastAPI and tools that helps me with the creation of a new web app\"\n\"Clear, crisp and covered a wide array of topics on python. Thanks Eric for the course.\"\n\"The teaching style is great, can't say enough good things about it, would 100% recommend to any developers\"\n-\n\n\nNo Risk – Money-Back Guarantee\nFinally, there is no risk. Once you purchase the course, if for some reason you are not happy with the course, Udemy offers a 30-day money back guarantee.\nSo you have nothing to lose, sign up for this course and learn how to deploy a Full Stack application on AWS using the tools of FastAPI, React and PostgreSQL\nIt is time to level up your career and add AWS to your craft list today.",
      "target_audience": [
        "The course is appropriate for all FastAPI developers wanting to learn how to use AWS"
      ]
    },
    {
      "title": "Applied Groundwater Modeling Using Visual MODFLOW Flex",
      "url": "https://www.udemy.com/course/applied-groundwater-modeling-using-visual-modflow-flex/",
      "bio": "Groundwater modeling, Governing equations, Conceptual and numerical models, Visual Modflow Flex",
      "objectives": [
        "Understand the theory and governing equations of groundwater modeling",
        "Build a numerical groundwater model using Visual Modflow FLEX",
        "Build a conceptual groundwater model using Visual Modflow FLEX",
        "Understand the automatic calibration using PEST"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Fundamentals of Groundwater Modeling": [
          "Fundamentals-Part1",
          "Fundamentals-Part2",
          "Physical proprieties",
          "Governing equations",
          "Principles of GW models"
        ],
        "Visual Modflow Flex: Introduction+Applications": [
          "Introduction to Visual Modflow Flex",
          "Exercise 1",
          "Exercise 2",
          "Exercise 3",
          "Exercise 4",
          "Exercise 5-Part1",
          "Exercise 5-Part2",
          "References"
        ]
      },
      "requirements": [
        "No prior Knowledge of Groundwater modeling is required",
        "You will need a Desktop or Laptop computer",
        "Free Visual Modflow Flex software trial"
      ],
      "description": "Course Description\nThis course will introduce you to the methods commonly used to model groundwater flow and solute transport in the subsurface. The course focused on applications of hydrogeological modeling methods to examine important flow and transport processes by using Visual Modflow Flex. This course will provide you with a comprehensive background in modeling of groundwater flow and solute transport in the subsurface. The primary objective of the course is to provide you with sufficient training in the fundamental theory and application of groundwater modeling to be able to develop the skill sets required to address basic environmental problems that are commonly addressed via groundwater flow and solute transport modeling.\nThe course contains the following sections :\n- Course Introduction\n- Fundamentals of Groundwater Modeling\n- Physical proprieties of porous media\n- Governing equations\n- Principles of groundwater models\n- Introduction to Visual Modflow Flex\n- Conceptual Model\n- Numerical Model\n- And five Exercises on Visual Modflow Flex which contain the following sections :\n· Building the model\n· Assigning parameters and boundaries\n· Groundwater flow analysis\n· Solute transport modeling\n· Visualizing output in 2-D and 3-D\n· Automatic calibration using Pest\nCourse objectives :\n- Improved understanding of the fundamental theory behind groundwater modeling and solute transport\n- Competence in applying groundwater modeling and solute transport modeling methods\n- Ability to Build a flow and a transport model based on available data and known constraints\n- Familiarity with Visual Modflow Packages such as MODFLOW, MT3DMS, MODPATH and PEST",
      "target_audience": [
        "This course is for any one who wants to learn groundwater modeling",
        "This course is for Student",
        "This course is for Hydrogeologist",
        "This course is for Groundwater modeller",
        "This course is for Environmental expert"
      ]
    },
    {
      "title": "Version Control with Git: Step-by-Step Tutorial!: 3-in-1",
      "url": "https://www.udemy.com/course/version-control-with-git-step-by-step-tutorial-3-in-1/",
      "bio": "Manage your projects with the aid of hands-on exercises that make Git version control easy for you!",
      "objectives": [
        "Configure Git easily to get it working on any system and ensure name and email are used for commits.",
        "Find out Basic Git commands that you will use in every project such as git init, git add, git commit, git push, git pull, and git fetch.",
        "Set up Git repositories, clone an existing repository, and work with local and remote branches and tags.",
        "Optimize workflows by leveraging the different workflow styles to suit the needs of the project.",
        "Make your code linear and get better control over it with features such as Rebase and Blame.",
        "Integrate external software into your project without affecting your app, with the help of SubModules.",
        "Eliminate errors easily with features such as Reset and Revert and develop clean code in Git."
      ],
      "course_content": {
        "Learn Git in 3 Hours": [
          "The Course Overview",
          "What Is Version Control?",
          "Installing and Configuring Git",
          "What Is the Terminal?",
          "File System Navigation Using Your Terminal",
          "Manipulating Files and Folders",
          "Using VI as an Editor",
          "Configuring and Initializing a Repository",
          "Tracking Files",
          "Viewing Changes",
          "Committing Your Changes",
          "Setup Git Ignore Files",
          "Browsing Project History",
          "Undoing Mistakes",
          "Cloning Repositories",
          "Using Remote Repositories",
          "Using Tags in Git",
          "What Is a Branch?",
          "Creating New Branches",
          "Merging Branches",
          "Resolving Merge Conflicts",
          "Remote Branches",
          "Rebasing",
          "GitHub",
          "Forking Repositories",
          "Commit Guidelines",
          "Squashing Commits",
          "Merge Requests",
          "Aliasing Commands",
          "Test Your Knowledge"
        ],
        "Hands-On Version Control with Git": [
          "The Course Overview",
          "Why Git and How It Works to Solve Major Version Control Issues",
          "Git Installation on Windows, Mac, and Linux",
          "Configuring and Initializing a Git Repository",
          "Adding and Committing Changes in a Git Repository",
          "Checking Status in a Git Repository",
          "Accessing and Inspecting Commit History in a Git Repository",
          "GitHub –Taking a Tour!",
          "Forking a GitHub Repository",
          "Cloning a GitHub Repository",
          "Using Pull and Push to Interact with a GitHub Repository",
          "Fetch Versus Pull",
          "Branching in Git",
          "Managing Git Branches",
          "Git Merge with Fast-Forward Technique",
          "Git Merge with No-Fast-Forward Technique",
          "Git 3-Way Merge",
          "Using Pull Request in a Team Collaboration Scenario",
          "Working with Git Rebase",
          "Git Pull with Rebase",
          "Using SSH with GitHub",
          "Miscellaneous File Management with Git",
          "BitBucket and Working with It",
          "Debugging with Git",
          "Learning Git Best Practices",
          "Test Your Knowledge"
        ],
        "Mastering Git": [
          "Understanding Version Control",
          "Using Git with Nitrous",
          "Verify Your Git Installation and Version",
          "Setting Up Globals",
          "A Typical Git Workflow",
          "Setting the Stage",
          "The Commit – an Intimate Look",
          "The Git Directory",
          "The Remote",
          "Tracking Remotes",
          "Branching",
          "Branching in Git",
          "History and How It'll Affect the Future",
          "The Commit Messages",
          "Merging in Git",
          "How to Reset Your Changes",
          "Altering History",
          "Applying Rebase in Git",
          "Using Blame",
          "Using Diff",
          "Bisecting in Git",
          "Patching Up Git",
          "Git SubModules",
          "Stash",
          "Aliases",
          "GUI Clients for Git",
          "When Troubles Arise",
          "The Ultimate Reference: A Git repository",
          "Final Thoughts",
          "References and Resources"
        ]
      },
      "requirements": [
        "Prior basic knowledge of Git and version control will be useful (Not Mandatory)."
      ],
      "description": "Three complete courses in one comprehensive training program.\nUsing Git, you can track the history of file and code changes, deliver new versions of software without relying on any continuous delivery mechanisms, and protect your code from any mistakes made while programming! Git version control gives developers the capability to manage, version, release, and share a code base, free from the nightmare of breaking code. With an enhanced workflow and a faster release cycle, it makes agile software development much easier. Controlling your projects—small or large—is easier now, owing to the advanced functionalities that Git brings with it. It will help you implement that perfect workflow you have been looking for!\nThis comprehensive 3-in-1 course is an easy-to-follow guide full of examples to help you gain knowledge and expertise in Git. To begin with, you’ll learn how to create, contribute to, and collaborate on software projects using Git. Set up Git repositories, clone an existing repository, and work with local and remote branches and tags. You’ll also manipulate and change the Git commit history, to tackle practical workflow problems. Integrate external software into your project without affecting your app, with the help of SubModules. Finally, manage your projects with the aid of hands-on exercises that make Git version control easy for you!\nBy the end of the course, you’ll learn versioning and manage your code to deliver projects with better performance using version control with Git!\nContents and Overview\nThis training program includes 3 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Learn Git in 3 Hours, covers building powerful and effective projects using Git Version Control Systems. In this course, we’ll teach you the basics of using Git and explain how it works. To begin with, we’ll show you how to install Git and effectively use your computer’s terminal or command line to navigate the file system and create and edit files. Then we’ll cover all the commonly used commands in Git that make up the vast majority of any Software Engineer’s workflow.\nMoving on, we’ll explain Git’s branching workflow, why it’s such a useful feature, and how to use it in your projects. Once you’ve learned all this, we’ll discuss some advanced Git workflow techniques that will make you a valued contributor and collaborator on any project. You’ll be able to create your own Git repositories or clone and contribute to existing ones. This will allow you to track the changes to sets of files over time, recover data you might lose, and collaborate with others on projects. You’ll have a profound understanding of Git’s branching workflow, and how to use it in the best possible way in your projects. By the end, you’ll be familiar with using Git and use VCS to handle large projects easily and make well-crafted contributions to your own or others’ projects.\nThe second course, Hands-On Version Control with Git, covers better project workflows with Distributed Version Control. In this course, you will learn how to use distributed version control to record changes to the project file system to optimize workflows. Git is a highly sought after skill when it comes to landing a programming job. However, Git can be pretty useful even to non-programmers such as designers, authors, and so on. You'll learn how to configure your environment to use Git, exploring the inbuilt tools for migrating without losing code files. You'll explore the Git data model and how you can navigate through databases with simple commands. You'll debug your application with Git and use various techniques to find faulty commits. You'll also learn to go remote with your repository with GitHub, updating and cloning remote repositories. Then you'll set up your repositories in BitBucket cloud. You will set up your own Git repositories, configure access, find and recover from repository errors, and perform repository maintenance and troubleshooting. Finally, you will work with centralized and distributed version control systems and see how to use Git to bring order to the chaos of collaborative software development. By the end of the tutorial you'll have figured out how to use Git, mastered workflows (from basic to open source), and adopted the one that fits your needs\nThe third course, Mastering Git, covers managing your projects with the aid of hands-on exercises that make Git version control easy for you! This course is an exploration of solo and collaborative Source Control Management with the intention of expanding and improving your confidence and expertise with Git. You’ll begin with a brief overview of Source Control Management before setting up and verifying your Git installation. Then, you’ll move on to a more detailed look at the Git workflow and explore variants and the not-so-rare “special situations”. With a strong understanding of the Git history and structure, you’ll learn how to use power tools as Branching, Merging, Reset, Revert and so on. Next, you’ll take a deep dive into more intriguing features of Git such as Rebase, Stash, Aliases, and Patches. You will explore several examples of these commands to improve the efficiency of using Git. Finally, when you have mastered the various tools provided by Git, you’ll be provided with some suggestions that’ll help you to move forward with Git. Once you are done with this course, perhaps you will be the one providing answers to others in trouble!\nBy the end of the course, you’ll learn versioning and manage your code to deliver projects with better performance using version control with Git!\nAbout the Authors\n●        Ross Conyers is a Computer Science Graduate and Software Engineer who started programming and building computers in his teens and went on to study Computer Science at the University of St Andrews. When he started programming, he worked with web technologies and Java. During his degree, he focussed on network programming and have developed a love of all things. Throughout his work, he did programming mostly in Python, working on high traffic, data-intensive, distributed systems that are used by millions of people per day. He believes to share some of his knowledge gained within several years.\n●        Bibhash Roy is a hardened Software Developer and Professional turned entrepreneur, with over 25 years of rich industrial experience (17 years in Software Development) in diverse fields. However, he is passionate about teaching whatever he has learned in his career, spanning an array of prestigious stints at large Global Corporate powerhouses such as PricewaterhouseCoopers and Siemens. Over the years, he has gained deep knowledge and expertise in programming languages such as Java, C, C++, PL/SQL, Scala, and Python to name but a few. He has worked extensively in various frameworks and tools such as Spring, Struts, Hibernate, Oracle, MongoDB, Cassandra, Hadoop, Spark, and others. DevOps intensely interests him. He has been working with Git and GitHub since their inception. As a part of his engineering responsibility, he has developed and architected numerous highly scalable and mission-critical applications for many Fortune 500 companies. Currently, in the role of founder and CEO, he is spearheading Whitepeak Software, a cloud-based software development company deeply involved in domains such as big data, mobile, and the Internet Of Things (IoT)!\n●        Thom Parkin has been writing software since the days when all phones had wires. A self-proclaimed ParaHacker, Thom immerses himself in technology both professionally and as a hobby, spending his free time participating in the world of open source software. When he is not playing euro board games, he is writing software or writing about software development.",
      "target_audience": [
        "Developers, Software Engineers, Programmers, and Project Managers who want to use Git to deliver their projects better and faster as well as use version control to track, modify, and share content in their projects!"
      ]
    },
    {
      "title": "Blockchain, understanding how it works while creating one",
      "url": "https://www.udemy.com/course/blockchain-tutorial/",
      "bio": "Understand Bitcoin, Ethereum and other cryptocurrencies. How a wallets sign transaction and how blocks are created",
      "objectives": [
        "What is blockchain",
        "How blockchain works",
        "What is SHA256",
        "What is a wallet on the blockchain",
        "How wallets sign transactions on the blockchain",
        "What are private and public keys",
        "How each individual peace of the blockchain works",
        "How each peace on the blockchain connects to each other"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Lets shape the new blockchain courses content together.": [
          "Don't skip this lecture, your future learning blockchain literally depends on it"
        ],
        "Creating our React application to visualize our Blockchain": [
          "Create our react app the Blockchain Visualiser",
          "Installing Chakra UI to make our blockchain look nice"
        ],
        "SHA256 Hash, what is it and why it is so important for the block chain": [
          "Introduction to SHA256 hash",
          "Build our own SHA256 Hash visualiser",
          "Adding useState and useEffect to your SHA256 visualiser",
          "Creating a hash function and using it on our react app",
          "Understanding SHA256 hash"
        ],
        "Blocks, understand how a block works on the blockchain": [
          "Introduction to Blockchain Blocks",
          "Creating a single block for the blockchain",
          "Adding the Block Number and the nonce to our block",
          "Hashing our block data",
          "Checking if the block is valid by checking its hash",
          "Creating a function to mine our block",
          "Checking for the block signature hash using leading zeros"
        ],
        "Blockchain, how to we chain our blocks into a complete blockchain for security": [
          "Introduction to Blockchain Blocks",
          "Creating the blockchain block of the blockchain",
          "Creating a chain of blocks for our Blockchain",
          "Using immer to help us with React State",
          "Creating the blocks for the blockchain programatically",
          "Passing the values from the blockchain to the blocks",
          "Passing values from the blocks to the blockchain",
          "Chaining the blocks in the blockchain by passing the hash to the next block",
          "Adding the previous hash to the hash functions",
          "Exploring the blockchain on a single node"
        ],
        "Creating a navigation system to navigate the different parts of our blockchain": [
          "Introduction to the new navigation system",
          "Creating our Chackra Navbar",
          "Creating our menu items",
          "Adding the links on our menu items"
        ],
        "Creating the transactions inside our Blockchain": [
          "Adding react router dom to our project"
        ],
        "Creating a distributed blockchain network": [
          "Introduction to the distributed blockchain network",
          "Creating our distributed blockchain link",
          "Adding new nodes to our distributed blockchain",
          "Small Stylistics changes on the Distributed Blockchain Viewer",
          "Add Blockchain Node to pass the node number back to the distributed component",
          "Making a copy to the previous hash on the blockchain block",
          "Comparing the last chain hashes on the blockchain",
          "Fixing the problem where the hash count was one step behind",
          "Finding the hash with more nodes on the blockchain",
          "Finishing our distribute blockchain viewer"
        ],
        "Introduction to Transactions Blocks": [
          "Introduction to transactions on the Blockchain",
          "Creating our blockchain transactions viewer",
          "Creating our Transactions Block",
          "Creating a Transaction Component",
          "Displaying the transactions on the Block from our Blockchain",
          "Updating the transactions on the Block",
          "Updating the transactions on the Blockchain",
          "Moving the transactions to the main blockchain object",
          "Fixing the blocks to start as mined blocks",
          "???Updating the transactions on the block from the blockchain",
          "Saving the amount on the block chain as a number instead a string"
        ]
      },
      "requirements": [
        "Basic programming logic",
        "Basic understand of JavaScript",
        "Basic understand of React will help but is not needed"
      ],
      "description": "If you new to cryptocurrencies or use them every day you maybe still have many questions, such as:\nWhat makes a block on the blockchain and how are blocks linked on the blockchain?\nHow blocks are validated and added to the chain?\nHow wallets' private and public keys work?\nHow wallets sign and validate transactions?\nWhat is a decentralized system and why cryptocurrency uses it?\nWhat is SHA256 and why bitcoin use it?\nWhat is proof of work?\nOr many other the thousands of questions we cover on this course, in this course, you will learn how this amazing technology works under the hood as we learn by creating each piece of the blockchain and adding it all together.\nIn this course we will create together:\nSHA256 hashers\nBlocks\nBlockchain\nDecentralized Blockchains\nTransactions\nWallet\nSign and validate transactions\nSigned transactions\nAnd much more\nIn each class, you will learn (by doing) a new piece of the blockchain, expanding your knowledge on each new class and build on top of the newly acquired knowledge.\n\n\nThis course is created using JavaScript and React, all the blockchain parts are created separated to easily understand.\n\n\nThis course is not aimed to create a complete blockchain, but a sample blockchain with a fixed number of transactions where we can explore how each part of the blockchain works.",
      "target_audience": [
        "Anyone interested on understand how the blockchain works",
        "Anyone interested on deeply understand how the blockchain works",
        "Anyone interested in learn what peaces make the blockchain and how they work together"
      ]
    },
    {
      "title": "Become Salesforce Developer from Zero: Hands-On Course",
      "url": "https://www.udemy.com/course/become-salesforce-developer-from-zero-hands-on-course/",
      "bio": "Practical Salesforce Development for Beginners — Build & Certify",
      "objectives": [
        "Register a free Salesforce Developer Edition org for hands-on practice.",
        "Distinguish between Salesforce Classic and Lightning Experience.",
        "Learn essential configurations every developer should know.",
        "Install and configure Visual Studio Code: create, deploy, retrieve source code.",
        "Debug Apex code and use Developer Console.",
        "Develop a Visualforce page for Salesforce Classic UI.",
        "Develop an Lightning Web Component (LWC) for Lightning Experience.",
        "Use the Salesforce Lightning Design System (SLDS) to style the UI.",
        "Develop an Apex Trigger to handle Insert, Update, Delete event on records.",
        "Develop Batch Apex for processing large volumes of data.",
        "Develop Schedule Apex to run at specific times.",
        "Develop Apex Test Class to ensure code quality and deployment readiness.",
        "Recognize common mistakes new developers make and how to avoid them.",
        "Hands-on exercises to strengthen your understanding.",
        "Mini-project is designed to help learners apply their Salesforce Apex, LWC, and automation skills to a real-world scenario."
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the course",
          "What you'll learn in this course",
          "What are the requirements or prerequisites for taking this course"
        ],
        "Getting Started with Salesforce": [
          "How to Register a Free Salesforce Developer Edition Org",
          "Salesforce Classic vs Lightning Experience – Key Differences",
          "Understanding the Concept of Salesforce Organizations and Editions",
          "Go Through Different Salesforce Organization Types and Compare",
          "Basic Customization and Setup Exploration",
          "Developer Console Exploration",
          "Getting Started with Salesforce Basics"
        ],
        "Foundations for Salesforce Development": [
          "Installing Visual Studio Code for Salesforce Development",
          "Creating Apex Classes and Exploring Collections",
          "Using For Loops in Apex with Practical Example",
          "Using SOQL in Apex",
          "SOQL in Loops — How to Avoid and Best Practices",
          "Foundations of Salesforce Development",
          "Work with Lists in Apex"
        ],
        "Implement Visualforce Page": [
          "Walkthrough of the Visualforce Page We Will Build",
          "Dowload Source And Deploy To Your Org",
          "Code Walkthrough – Search, Create, Edit, Delete",
          "Attributes on <apex:page>",
          "Using the rerender Attribute for Dynamic Updates",
          "Visualforce Page Summary & Next Steps",
          "Visualforce Page Fundamentals",
          "Modify Table to Add Rating Column",
          "Enhance the Inline Edit Popup: Add Rating Field"
        ],
        "Implement Lightning Web Component (LWC)": [
          "Walkthrough of the LWC We Will Build",
          "Dowload Source And Deploy To Your Org",
          "Code Walkthrough – Search, Create, Edit, Delete",
          "Building LWC UIs with Lightning Components & Lightning Design System (SLDS)",
          "Enhancing LWC: Using @wire To Retrieve Data",
          "Enhancing LWC: Adding Row Counters to Table",
          "Lightning Web Component Fundamentals",
          "Add Rating Column to LWC Data Table",
          "Add Rating Field to LWC Edit Popup"
        ],
        "Apex Triggers in Salesforce": [
          "Introduction to Apex Triggers in Salesforce",
          "Implementing Before Insert Triggers",
          "Implementing After Insert Triggers",
          "Implementing Before Update Triggers",
          "Activating and Deactivating Triggers in Salesforce",
          "Trigger Concepts Check",
          "Add Default Industry and Description on Account Creation",
          "Create a Task After Account Update"
        ],
        "Batch Apex in Salesforce": [
          "Understanding Apex Batch: Concepts, Use Cases, How to Implement",
          "Building an Apex Batch: Update Customer Tiers by Revenue",
          "Using Database.Stateful in Apex Batch Jobs",
          "Apex Batchable in Salesforce"
        ],
        "Automating with Apex Scheduler in Salesforce": [
          "How to Implementation, Scheduling, and Monitoring",
          "Apex Scheduler Basics"
        ],
        "Apex Test Classes": [
          "Writing Test Classes for Apex Controllers: Why, How, and Coverage",
          "Apex Test Class Fundamentals",
          "Write a Test Class for AccountTriggerHandler"
        ],
        "Final Project: Contact Training Tracker – Apply Apex, LWC & Automation in a Real": [
          "Contact Training Tracker for a Salesforce Consulting Company",
          "Solution Walkthrough: Final Project - Contact Training Tracker"
        ]
      },
      "requirements": [
        "Have a strong desire and clear goal to become a Salesforce Developer (required).",
        "Have basic coding knowledge (preferred, but not required)."
      ],
      "description": "Hi! My name is Vinh, and I’m excited to guide you on your journey to becoming a confident Salesforce Developer.\nI began my career in Salesforce, and I've been working with the platform ever since — over 10 years of hands-on experience across roles including Developer, Consultant, and Technical Architect.\nOver the years, I’ve earned 16 Salesforce Certifications, including Platform Developer II, Application Architect and System Architect, and I’ve helped train and mentor many developers who are now thriving in their careers.\nI created this course to give you a clear, structured, and practical roadmap to become a Salesforce Developer — without wasting time on things you don’t need at the beginning.\n\nWhy This Course is Different:\nFocused Learning – Based on my 10+ years of experience, I teach you what truly matters for a beginner Salesforce Developer. You’ll learn the most important tools, features, and skills used on real projects.\nOutcome-Driven Lessons – Every lesson starts with the goal or result you’re going to achieve, so you’ll always know why you’re learning what you’re learning.\nShort & Practical Videos – Each topic is explained in short, digestible lessons so you can stay focused and make real progress, even with limited time.\nHands-On Coding – You won’t just learn theory. You’ll practice by writing Apex, SOQL, Visualforce, and LWC code through guided exercises and assignments.\nReal-World Scenario – Mini-project is designed to help learners apply their Salesforce Apex, LWC, and automation skills to a real-worl scenerio. You'll build a Contact Training Tracker system for a Consultant Company.",
      "target_audience": [
        "Beginners who are just starting their Salesforce journey and aspire to become Salesforce Developers.",
        "Salesforce Administrators who want to expand their skill set and transition into a developer role.",
        "Aspiring Developers with basic programming knowledge who are looking to switch careers and start developing on the Salesforce platform."
      ]
    },
    {
      "title": "Introduction to Azure Logic Apps - 2023",
      "url": "https://www.udemy.com/course/introduction-to-azure-logic-apps-2023/",
      "bio": "Learn from an industry expert!",
      "objectives": [
        "Build automation workflows using Azure Logic Apps",
        "Learn the differences between Azure Logic Apps (Standard) and Azure Logic Apps (Consumption)",
        "Understand the different connector models and how to choose the right one",
        "Learn to use triggers, actions and built-in operations to create efficient workflows",
        "Learn from an industry expert!!!"
      ],
      "course_content": {},
      "requirements": [
        "This is a beginner course, no existing Azure Logic Apps experience is required.",
        "Azure subscription (trial is fine)"
      ],
      "description": "Azure Logic Apps is a cloud-based service that provides a way to schedule, automate, and orchestrate tasks, business processes, and workflows when you need to integrate apps, data, systems, and services across enterprises or organizations. This course is designed to help you learn how to use Azure Logic Apps to build  workflows that integrate with other systems.\nIn this course, you will learn about the different types of Azure Logic Apps, including Consumption and Standard, and how to create and manage them. You will also learn how to use connectors to integrate with other services, how to use triggers to start workflows, and how to use actions to perform tasks. Additionally, you will learn how to use the Logic Apps Designer to create workflows visually.\nThis course is designed for developers, architects, and IT professionals who want to learn how to use Azure Logic Apps to automate and orchestrate tasks and workflows. This course is targeted at people who are new or early in their Logic Apps journey.\n\n\nCourse Agenda:\nIntroduction\nAbout the Author\nWhat can I expect in this course?\nWho is this course for?\nWhat is Azure Logic Apps?\nWhy do companies use Azure Logic Apps?\nWho uses Azure Logic Apps?\nIntroductory Demo\nAzure Logic Apps Versions\nAzure Logic Apps (Consumption)\nAzure Logic Apps (Standard)\nAzure Logic Apps - Core Concepts\nTriggers\nActions\nDynamic Content\nRun History\nFlow Control\nHands-On Demo\nAzure Logic Apps (Standard) Version\nAzure Logic Apps (Consumption) Version\n\n\nLearn from an industry expert, published author, accomplished YouTuber who has years of automation and integration experience.\nHow does that sound? Let's get started.",
      "target_audience": [
        "Developers and Analysts that are interested in learning more about Azure Logic Apps.",
        "People early in their Azure Logic Apps journey."
      ]
    },
    {
      "title": "Python Mastery: Design Patterns, SQLAlchemy, Pytest & CICD",
      "url": "https://www.udemy.com/course/python-mastery-a-comprehensive-guide-intermediate/",
      "bio": "Object-Oriented Programming (OOP), Database Interaction using SQLAlchemy, Pytest, SOLID and Creational Design pattern.",
      "objectives": [
        "Object-Oriented Programming (OOP) in Python",
        "SOLID and Design Patterns in Python",
        "practical database integration using SQLAlchemy",
        "mini project - SQLAlchemy, Github Action, Docker",
        "unit test using pytest in Python",
        "SQL Query in postgreSQL"
      ],
      "course_content": {},
      "requirements": [
        "A Little Bit of Programming Knowledge is Beneficial, But Not Mandatory!"
      ],
      "description": "This course title encapsulates the breadth of your tutorial, emphasizing the progression to advanced topics like Object-Oriented Programming (OOP), Design Patterns, and practical database integration using SQLAlchemy. It communicates a clear learning path for students interested in mastering Python and its applications in real-world scenarios.\nThe course you've outlined, covering Object-Oriented Concepts, Design Patterns, and Database integration using SQLAlchemy, Git, unit test using Pytest and CICD with mini project, is well-suited for the following audience:\nBeginner to Intermediate Python Developers:\nIndividuals who have a basic understanding of Python and want to deepen their knowledge by exploring Object-Oriented Programming, Design Patterns, and database integration.\nComputer Science Students:\nStudents pursuing computer science or related fields can benefit from a comprehensive course that covers foundational Python concepts, OOP principles, design patterns, and practical database integration.\nWeb Developers:\nWeb developers who want to expand their skills by understanding not only Python basics but also how to implement Object-Oriented Design, apply Design Patterns, and integrate databases using SQLAlchemy in web development projects.\nCareer Switchers:\nIndividuals looking to transition into a career in programming or software development who have some basic knowledge but want to build a strong foundation in Python and related concepts.\nWe provide a well-rounded learning experience in the specified Python-related topics.",
      "target_audience": [
        "Individuals who have a basic understanding of Python and want to deepen their knowledge by exploring Object-Oriented Programming, Design Patterns, and database integration.",
        "Those who are passionate about programming and eager to learn more advanced concepts beyond the basics.",
        "Experienced software engineers who wish to refresh their Python skills and deepen their understanding of key concepts like OOP, Design Patterns, and database integration",
        "Individuals looking to transition into a career in programming or software development who have some basic knowledge but want to build a strong foundation in Python and related concepts",
        "Those interested in databases and want to explore how Python, particularly with SQLAlchemy, can be utilized for effective database integration.",
        "for Test Engineer to write unit test using pytest"
      ]
    },
    {
      "title": "Successful Software Development in Big Corporations",
      "url": "https://www.udemy.com/course/successful-software-development-in-big-corporations/",
      "bio": "Become Successful Software Developer on Enterprise Projects",
      "objectives": [
        "Successfully Develop Software in Difficult and Complex Environments",
        "Efficiently Implement Functional Requirements on Big Projects",
        "Maintain Clean Code Regardless of Organizational and Technical Constraints",
        "Improve Your Efficiency When Developing Software",
        "Walk through Realistic Examples and Learn Concrete Development Patterns"
      ],
      "course_content": {
        "Welcome": [
          "Hey There: Welcome to the Course",
          "What Is It All About: The Course Agenda",
          "This Is the Way: Course Conventions"
        ],
        "Working as a Developer in an Enterprise Corporation": [
          "Best Place To Work: The Industrial Machines Corporation",
          "This Will Be Huge: The Juggernaut IT project",
          "Old, Big and Heavy: The BEHEMOTH application",
          "The Depressing One: Challenges for the Development Team",
          "Developer Required: The First Task"
        ],
        "The Matryoshka Development Approach": [
          "What Makes a Developer Happy: Goals on the Project",
          "About Russian Wooden Dolls: The Matryoshka Development Approach",
          "They're Like Onions: The Development Layers"
        ],
        "The Inner Matryoshka: Understanding the Business Requirement": [
          "Whatever They Want: Requirement Engineering and Requirement Refinement"
        ],
        "The Second Smallest Matryoshka: Defining the Structure of the Requirement": [
          "Actors, Entities, Relations: The Data Model of the Requirement"
        ],
        "The Third Matryoshka: Defining the Behaviour of the Requirement": [
          "I Like to Move It: The Functional Algorithm"
        ],
        "The Fourth Matryoshka: Implementing the Algorithm": [
          "Even Though You Know It All: Refresher on Some Programming Concepts",
          "Getting Loose: The Interface and the Dependencies",
          "Trust, But Test: The Unit Test",
          "Happy Coding: The Algorithm Implementation"
        ],
        "The Second Biggest Matryoshka: Integration into the Application Framework": [
          "What Do We Have Here: Inspection of the Application Framework",
          "We Are Not the Same: The Data Model Mapping",
          "But It Worked On My Machine: The Integration Test",
          "Docking Process Initiated: Integration of the Component Implementation"
        ],
        "The Biggest Matryoshka: Handling Change": [
          "It's NOT a Feature: Bug Fixing",
          "As Designed But Not as Expected: Reacting to Specification Changes",
          "The Hidden Operation: Refactoring",
          "Higher, Faster, Further: Performance Optimization"
        ],
        "Case Study 1 - Customizing the Data Integration Framework": [
          "Let's Do It Again: A New Requirement for the Data Integration Module"
        ]
      },
      "requirements": [
        "You should have an understanding of object-oriented programming languages (such as Java) and basic software design principles"
      ],
      "description": "Enterprise applications in big corporations pose a specific set of challenges that software developers do not encounter on smaller projects.\n\n\nFirst, enterprise applications tend to be very complex. It is not an exception for an enterprise application to have dozens to hundreds interfaces, reports, processing rules, adapters etc. The sheer numbers of the system make it very difficult to grasp.\n\n\nSecond, the business logic in enterprise applications can be very complex. Such applications are usually huge back end systems that provide global services to all departments of the whole enterprise.\n\n\nThird, enterprise applicationy are usually very long-living. As a result, they utilize outdated technologies and patterns. Heavy-weight, monolithic application servers with strictly defined layers of logic and hardwired dependencies are difficult to deploy and to adapt.\n\n\nFourth, the enterprise IT is often very business-centric. Your stakeholders, such as business colleagues, project managers and analysts have a deep knowledge about how their business works. As a developer, you often lack the specific knowledge and have to close this gap before you can successfully work in the given line of business.\n\n\nFifth, the development models in big organizations are often unflexible. Most enterprises still utilize the waterfall model which makes adaptations difficult.\n\n\nAnd, finally, there are bureaucratic hurdles. You need a lot of access permissions, certificates, software licenses, tool installations and approvals before you can even start working. The setup of your working environment on a new project can literally take months.\n\n\nAll of this is disconcerting. But here is the good news: There is a way of mitigating all of the problems mentioned above. I will show you in this course how you can set up a working mode for yourself that enables high quality of your results and efficiency of your work, regardless of the complexity of the system and your familiarity with it.\n\n\nThe course is based on theoretical concepts, but I will not bore you with theory too much. Instead, we will have a practical tutorial. During the course, we will walk through a simulated scenario in a fictive enterprise corporation where we will receive a functional requirement and implement it. The scenario is kept close to the real-live work in an IT department of a complex enterprise. We will use Java as programming language and make our hands dirty by writing the code.\n\n\nLet's also agree on what this course is not about.\n\n\nThis course is not a beginner programming tutorial. You will not learn the basics of Java here. To gain the most from the course, you should be already familiar with basic programming knowledge, especially with object-oriented programming languages, such as Java. You don't need industry experience, however, to understand the topics in this course. On the other hand, I am sure that you will profit from this course even if you are a seasoned software developer.\n\n\nThanks for your interest. Enjoy the course.",
      "target_audience": [
        "Junior developers who want to grow. Senior developers who want to refine their skills. Development leads who want to optimize the development process.",
        "The skills you learn in this course can be applied to any software development project, but they will be especially useful for big projects in complex environments"
      ]
    },
    {
      "title": "Building AI Agents with smolagents",
      "url": "https://www.udemy.com/course/building-ai-agents-with-smolagents/",
      "bio": "Understand theory of AI agents and how to build them with smolagents library",
      "objectives": [
        "Understand AI agent theory - how agents differ from LLMs, their components (brain/body), and when to use agents vs workflows for different tasks.",
        "Build multi-agent to solve complex problems with specialized agents",
        "Build AI agents with smolagents that can search the web, process data, and execute code, plus create custom tools to extend agent capabilities.",
        "Build agents with GradioUI interfaces, share on Hugging Face Spaces, and implement monitoring with OpenTelemetry and LangFuse for production use."
      ],
      "course_content": {
        "Introduction": [
          "Course Goal",
          "Resources"
        ],
        "AI Agents Theory": [
          "Intro to AI Agents",
          "AI Agents Definition & Key Components",
          "Agents Workflows",
          "When to use Workflows vs Agents",
          "Multi Agents",
          "Agents Best Practices"
        ],
        "smolagents": [
          "Intro to smolagents",
          "Building our first agent",
          "Transition to multi step agents",
          "Multi step agents (CodeAgent vs Toolcalling agent)",
          "Code execution",
          "Weather Agent with custom tool",
          "Adding UI to Weather Agent",
          "Sharing Agents & Tools",
          "Multi Agent System",
          "Adding Monitor with OpenTelemetry & Langfuse"
        ],
        "Ending": [
          "Thanks!"
        ],
        "BONUS": [
          "How to use MCP tools"
        ]
      },
      "requirements": [
        "Basic Python programming knowledge. Some familiarity with LLMs is helpful but not required. You'll need a computer with Python installed and a free Hugging Face account."
      ],
      "description": "What you'll learn:\nBuild AI agents that interact with external systems and tools\nUnderstand the architecture of modern AI agent systems\nImplement single agents and multi-agent collaboration patterns\nCreate custom tools for your AI agents\nAdd user interfaces with GradioUI\nDeploy agents to Hugging Face Spaces\nSet up monitoring with OpenTelemetry and LangFuse\nCourse Description:\nMove beyond basic chatbots and build AI systems that take real actions in the world.\nThis course takes you from AI agent theory to implementation using the smolagents framework. You'll learn to build systems that search the web, process data, execute code, and collaborate with other agents.\nWe begin with theory, explaining the differences between traditional LLMs and AI agents, agent architecture, and when to use workflows versus agents. You'll understand the spectrum from developer-controlled flows to autonomous agents.\nThen we dive into hands-on development. You'll build your first agent, create custom tools, implement user interfaces, and deploy to Hugging Face Spaces. The course concludes with multi-agent systems and monitoring techniques.\nBy the end, you'll have the knowledge and skills to design, build, and deploy AI agent systems for various applications.\nRequirements:\nBasic Python programming knowledge\nFamiliarity with LLM concepts\nNo prior experience with AI agents required\nWho this course is for:\nSoftware developers adding AI capabilities to applications\nMachine learning engineers expanding beyond traditional models\nAI enthusiasts building interactive systems\nProfessionals automating complex workflows\nStudents and researchers exploring AI applications",
      "target_audience": [
        "Developers and AI enthusiasts who want to build AI systems that take actions beyond text generation. Perfect for those looking to create practical agents that interact with external systems."
      ]
    },
    {
      "title": "Complete ROS Start Guide - Windows/Mac/Linux - C++/Python",
      "url": "https://www.udemy.com/course/complete-ros-start-guide/",
      "bio": "These Tutorials on Robot Operating System will get you up and running fast!",
      "objectives": [
        "ROS - Robotic Operating System"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "Install Guide"
        ],
        "Beginner Package": [
          "ROS High Level Intro",
          "Basic Linux Commands",
          "Creating a Package",
          "Your First ROS Node - Publishing - C++",
          "Your First ROS Node - Publishing - Python",
          "Building a ROS Package",
          "ROS Command Line",
          "Your Second ROS Node - Subscribing - C++",
          "Your Second ROS Node - Subscribing - Python",
          "C++ and Python Interacting with ROS"
        ],
        "Intermediate Package": [
          "Bashrc and New Package",
          "Creating Your Own ROS Message",
          "Re-write Nodes - C++",
          "Re-write Nodes - Python",
          "Unit Tests - C++ Pure gtest",
          "Unit Tests - C++ gtest and ROS",
          "Unit Tests - Python nosetest",
          "Unit Tests - Python with ROS",
          "ROS Bag Usage",
          "RQT Log",
          "ROS Launch"
        ],
        "Advanced Package": [
          "Create New Package",
          "Create .srv File",
          "ROS Service / Client - C++",
          "ROS Service / Client - Python",
          "Properly using package.xml",
          "Importing From Other Packages - C++",
          "Importing From Other Packages - Python"
        ],
        "Outro": [
          "Outro"
        ]
      },
      "requirements": [
        "Windows, Mac, or Linux computer"
      ],
      "description": "Robot Operating System (ROS) is an essential tool for any roboticist to know. Whether you are building a robot for a side project or building out your skills to upgrade your career, this course will get you competent with ROS fast!\nFor the last 2-3 years I've used ROS every single day so I'm very familiar for what ROS knowledge is important and what can be skipped. ROS is very large, and as a beginner there are so many things ROS offers it can be tough to know what to focus on. Trying to learn everything right away can make the learning feel daunting. In this course I cover all the essential fundamentals to get you started with ROS.\nIn this course I'll live code everything from scratch. This way you can see every detail and you won't miss out on what is typically skipped in these types of tutorials. I also provide a pre-configured Virtual Machine that will allow you to run ROS on your computer whether you are using Mac, Windows, or Linux.\nFew of the topics covered in this course are:\nCreating your First Node\nROS Publisher\nROS Subscriber\nBasic ROS Commands\nCreating custom ROS Messages\nROS compatible Unit Tests\nHow to use ROS Bags\nROS Launch files\nProper ROS Logging\nROS Services / Clients\nImporting Functionality from other ROS Packages\nWhat are you waiting for? Jump in now and learning! If you are trying to upgrade your Robotics skills, this course is essential to your journey!",
      "target_audience": [
        "Roboticists and Software Developers"
      ]
    },
    {
      "title": "Advanced OOP with Python. Beyond the basics.",
      "url": "https://www.udemy.com/course/advanced-oop-with-python/",
      "bio": "A deeper dive into the mechanics behind classes, objects, inheritance, polymorphism and encapsulation in Python",
      "objectives": [
        "make better decisions when and how to use OOP features in your code",
        "use inheritance for nominal sub typing and prevent duplicate code",
        "create more efficient classes by integrating Python’s built-in language features",
        "adhere to the open closed principle with Polymorphism",
        "use protocols to achieve structural subtyping",
        "learn Python’s unique way to implement encapsulation"
      ],
      "course_content": {
        "Course introduction": [
          "Course introduction"
        ],
        "Classes and Objects": [
          "Classes and Objects",
          "Methods",
          "Object inspection",
          "Object instantiation"
        ],
        "Inheritance": [
          "Inheritance",
          "Abstract base class",
          "Extending methods"
        ],
        "OOP in a dynamic language": [
          "OOP in a dynamic language",
          "Type hints",
          "Method overloading"
        ],
        "Polymorphism": [
          "Polymorphism",
          "Interfaces",
          "Typed abstract base class",
          "Protocols"
        ],
        "Encapsulation": [
          "Encapsulation",
          "Properties"
        ],
        "Classes in Python": [
          "Class is an object",
          "Static methods"
        ],
        "Conclusion": [
          "QA #1: How does Python pass self as first argument to the method/function?",
          "QA #2: Can you give another example of the open-closed principle?",
          "Conclusion",
          "Bonus section"
        ]
      },
      "requirements": [
        "Beginner understanding of OOP",
        "~1 year experience in Python or another programming language"
      ],
      "description": "This course teaches Object Oriented Design in Python beyond intermediate level. The course solidifies and deepens your knowledge about classes, objects, inheritance and polymorphism. You will learn many Python specific class and object implementation details of construction, overriding and overloading. Work through many exercises that allows you to practice common OOP tasks.\n\n\nTarget audience\n\nDevelopers who especially benefit from this course, are:\nPython developers who learned the basics of OOP and want a deeper dive into the mechanics of OOP in Python\ndevelopers who bring experience from another OO programming language and want to learn how to use OOP in Python\nself-taught OOP developers who want to improve their skills by learning best practices\n\n\nChallenges\n\nStudents that are interested in this course often know basic OOP features but are not yet aware of Python’s unique language features that allows them to work object oriented in a Pythonic way. This can lead to verbose or inefficient code. It is my goal to teach you up-to-date, preferred ways to work with OOP in Python and make your code structured and maintainable.\n\n\nWhat can you do after this course?\n\nmake better decisions when and how to use OOP features in your code\ncreate more efficient classes by integrating Python’s built-in language features\nembrace the dynamic character of Python by using structural type checking\n\n\nTopics\n\nClasses and Objects: Class instantiation, self, data attributes, UML, methods, __str__, __repr__, constructor\nInheritance: Inherit, extend and override methods, access to base class via super, abstract base class\nOOP in a dynamic language: Dynamically typing, Static type checking, overloading\nPolymorphism: Open-closed principle, type equality, interfaces and protocols\nEncapsulation: Attribute visibility. name mangling, properties\nClasses in Python: Class as object, class variables, class and static methods\nDuration\n\n2 hours video time, 3 hours including practicing exercises.\n\n\nThe teacher\n\nThis course is taught by Loek van den Ouweland, a senior software engineer with 25 years of professional experience. Loek is the creator of Wunderlist for windows, Microsoft To-do and Mahjong for Windows and loves to teach software engineering.",
      "target_audience": [
        "Python developers who learned the basics of OOP and want a deeper dive into the mechanics of OOP in Python",
        "developers who bring experience from another OO programming language and want to learn how to use OOP in Python",
        "self-taught OOP developers who want to improve their skills by learning best practices"
      ]
    },
    {
      "title": "Effective Programming with AI",
      "url": "https://www.udemy.com/course/effective-programming-with-ai/",
      "bio": "Master AI coding via hands-on practice. Boost design skills. Level up to super developer with AI, GitHub Copilot.",
      "objectives": [
        "Hands-on learning: Each course is a progressive development of a real project. Each course provides a GitHub branch for easy practice and comparison.",
        "How to work effectively with AI: Learn how to instruct AI tools to get the best results, and how to verify and modify AI-generated code.",
        "Software Design Principles: Learn how to design for extensibility using SOLID principles beyond simple coding, and how to leverage AI along the way.",
        "Essential Practical Skills: Implement core practical skills such as code refactoring, unit testing, and documentation with AI."
      ],
      "course_content": {
        "Introduction": [
          "Why Developer Don't Use AI Tools Like Copilot?",
          "Instructor Introduction",
          "Development Environment",
          "Proof of Concept - Effective Programming with AI."
        ],
        "Effective Programming with AI": [
          "Create a project that prints a shape using insideShape.",
          "Secure shape extensibility – 4 callable objects.",
          "Refactor PrintShape functor to store insideShape.",
          "Simply extend PrintShape for the output method.",
          "Generalize the output method of PrintShape.",
          "Write an ADR – design decisions for extending output methods.",
          "Structure modules - source/header files and namespaces.",
          "Unit test modules independently.",
          "Add BMP file output.",
          "Add image-based shapes – BMP.",
          "Write Doxygen comments and README.md."
        ],
        "Conclusion": [
          "Complete project based on design.",
          "SOLID principles in shape-printer project.",
          "Conclusion - Path forward in AI era."
        ]
      },
      "requirements": [
        "Basic understanding of at least one object-oriented programming language (e.g., C++, Python, Java, C#, etc.).",
        "Understanding of the basic concepts of classes and objects, and the necessity of inheritance and extension."
      ],
      "description": "Hesitate about AI no longer. This course will surely guide you to become the super developer the future demands.\nHave you had vague fears or doubts about AI coding until now? This course will completely clear your concerns and clearly present how to utilize AI as a powerful development partner.\nThis goes beyond AI simply 'whipping up' code. This course vividly demonstrates the actual development process of gradually improving a program with AI, and cultivates the following core competencies:\nExperience AI's Amazing Support Power! See firsthand how effectively AI supports the development process. Through this vivid experience of its incredible capabilities, you will gain confidence in using AI.\nClearly Understand and Prepare for AI's Limitations! At the same time, you will realize AI isn't a magic lamp. By confirming the reality that AI doesn't always provide perfect or optimal code, you will develop a critical perspective towards AI-generated results.\nCharting the Developer's New Path in the AI Era! Stop blindly trusting the code AI generates. We will teach you how to build verification, improvement, and design skills to collaborate with AI and create the best software.\nYou must become the 'Final Decision Maker,' thoroughly reviewing and testing AI-suggested code without blindly accepting it, and taking responsibility for the final product's quality.\nAI code is merely a starting point. Your value is determined by your ability to design and improve software to be more robust and efficient.\nThe ability to unlock 100% of AI's potential with clear prompts and interact effectively with AI becomes crucial. To do this, you must actively utilize AI and become an 'AI Orchestrator.'\nDon't Fall into the 'Vibe Coding' Trap! The approach of quickly developing by easily accepting the code AI provides (the so-called 'Vibe Coding') might be convenient in the short term, but it can hinder your growth in the long run.\nMake AI Your 'Growth Engine'! This course will show you how to use the code AI provides to accelerate and deepen the development of your core competencies.\nAnalyze and test the code AI suggests meticulously to build code verification skills.\nIdentify areas for improvement and ponder better solutions to enhance your design skills.\nFor parts you don't understand, ask AI for explanations and view examples to expand your own knowledge base.\nAI isn't just a tool; it's a powerful assistant for your growth. It can explain code, supplement test cases, suggest improvement ideas, and help you understand complex concepts easily. By using AI this way, you can break free from simple repetitive tasks and focus on more creative and important core activities.\nThis is the true form of the developer required in the AI era. Don't hesitate any longer. Through this course, take AI by the hand and begin your journey to be reborn as a super developer!\nTake Your First Step Towards Becoming a Super Developer with the Preview Lectures!\nLecture 1: Why are many developers still unable to properly utilize AI? Compare with your own situation, grasp the flow of change, and feel the inevitability of AI collaboration.\nLecture 4: Just how capable is AI's coding ability? We will present AI's surprising capabilities alongside its clear limitations, showing the specific direction developers should take.\nLecture 18: We will summarize the insights gained throughout the course and clearly present the core competencies developers need and the future vision in the AI era.\nThe subsequent Lectures 5 through 15 are designed for growth through actual experience, not just theory. Gradually perform tasks with AI and develop code yourself. Beyond simply watching, you can cultivate practical skills for the future through active participation.\nThrough this course, you will experience the joy of developing with AI and witness the explosion of your own potential. Start now! You are already ready to move towards becoming a super developer.",
      "target_audience": [
        "Experienced developers who have hesitated to adopt AI tools or want to learn how to properly utilize AI for productivity improvement.",
        "Novice developers and those new to development who want to quickly grow into competitive developers in the AI era.",
        "Tech leads and architects who are concerned about the increased potential risks of using AI tools.",
        "Educators who teach how to use AI tools for development."
      ]
    },
    {
      "title": "Software Architecture: Modeling, Viewpoints, C4",
      "url": "https://www.udemy.com/course/architecting-software-modeling-viewpoints-c4/",
      "bio": "Master system design and software architecture through C4 modeling, Viewpoints & Perspectives, and clear diagrams",
      "objectives": [
        "Explain what a model is and how it simplifies and communicates complex software systems",
        "Describe architectural models and illustrate how they represent system structure and behavior",
        "Choose the right modeling framework based on your system’s goals, audience, and level of abstraction",
        "Create clear, consistent architecture diagrams that work across technical and non-technical roles",
        "Analyze the Marketing domain like a system designer—identify structure, flow, and boundaries",
        "Build a complete system model using the C4 Model and the Viewpoints & Perspectives framework"
      ],
      "course_content": {
        "Welcome": [
          "About author",
          "Why this course was created?",
          "Structure of the course"
        ],
        "Introduction": [
          "About This Section",
          "What is a Model?",
          "What is a System?",
          "What is Systems Modeling?",
          "What is System Architecture?",
          "What is a mental model?",
          "How to Share and Align Mental Models?",
          "What is visualization?",
          "What is Visual Communication?",
          "Summary"
        ],
        "Learn: Architecture Modeling": [
          "About this section",
          "What is Architecture Modeling?",
          "What are the techniques to model Architecture?",
          "What are the key elements of Architecture View?",
          "What is an Architecture Viewpoint?",
          "What is an Architecture Perspective?",
          "How to create an Architecture Model?",
          "How do you handle the complexity of the architecture model?",
          "What does the Architecture Model look like?",
          "Summary"
        ],
        "Learn: Architecture Frameworks and Notations": [
          "About this section",
          "What are Architecture Frameworks?",
          "What is the TOGAF Framework?",
          "What is the Viewpoints and Perspectives Framework?",
          "What is 4+1 Framework?",
          "What are Architecture Notations?",
          "What is ArchiMate?",
          "What is the C4 model?",
          "What are Flow Charts?",
          "What is Event Storming?",
          "Summary"
        ],
        "Learn: Best Practices and Antipatterns": [
          "About this section",
          "What are best practices for Diagrams?",
          "What are common mistakes for Diagrams?",
          "How to document the Model?",
          "How do you version-control the model?"
        ],
        "Learn: Further Reading": [
          "About this section",
          "Systems Architecture Overview",
          "Communication Patterns Overview"
        ],
        "Practice: Understand Marketing Domain": [
          "About this section",
          "What is Marketing?",
          "What kinds of Marketing exist?",
          "Who is involved in marketing?",
          "What are core marketing processes?",
          "What tools support marketing today?",
          "What does a marketing website include?",
          "Slides"
        ],
        "Practice: Build Architecture Model": [
          "About this section",
          "Functional Viewpoint - Intro",
          "Functional Viewpoint - Task 1",
          "Functional Viewpoint - Mechanics",
          "Functional Viewpoint - Task 2",
          "Functional Viewpoint - Presentation",
          "Context Viewpoint - Intro",
          "Context Viewpoint - Task 1",
          "Context Viewpoint - Mechanics",
          "Context Viewpoint - Task 2",
          "Context Viewpoint - Presentation",
          "Informational Viewpoint - Intro",
          "Informational Viewpoint - Task 1",
          "Informational Viewpoint - Mechanics",
          "Informational Viewpoint- Task 2",
          "Informational Viewpoint - Presentation",
          "Operational Viewpoint - Intro",
          "Operational Viewpoint - Task 1",
          "Operational Viewpoint - Mechanics",
          "Operational Viewpoint - Task 2",
          "Operational Viewpoint - Presentation",
          "Concurrency Viewpoint - Intro",
          "Concurrency Viewpoint - Task 1",
          "Concurrency Viewpoint - Mechanics",
          "Concurrency Viewpoint - Task 2",
          "Concurrency Viewpoint - Presentation",
          "Development Viewpoint - Intro",
          "Development Viewpoint - Task 1",
          "Development Viewpoint - Mechanics",
          "Development Viewpoint - Task 2",
          "Development Viewpoint - Presentation",
          "Deployment Viewpoint - Intro",
          "Deployment Viewpoint - Task 1",
          "Deployment Viewpoint - Mechanics",
          "Deployment Viewpoint - Task 2",
          "Deployment Viewpoint - Presentation",
          "Perspectives - Overview",
          "Perspectives - Security",
          "Perspectives - Cost"
        ],
        "Final Words": [
          "Final Words",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "No strict prerequisites—just a basic understanding of software systems and an interest in modeling and communicating architecture or structure."
      ],
      "description": "Understand Systems. Communicate Architecture. Build with Clarity.\nAre you struggling to explain how your system works?\nDo architecture diagrams in your team confuse more than they clarify?\nIs your system design clear in your head, but hard to communicate to others?\nYou’re not alone.\nAs software systems grow more complex, even experienced professionals face the same challenge: how to describe architecture and system design clearly, so teams can align, avoid misunderstandings, and move faster.\nThat’s where software architecture modeling makes all the difference.\n\n\nWhat You'll Learn\n● What a model is—and how it simplifies and communicates complex systems\n● How to describe architectural models that show structure, behavior, and design intent\n● How to choose the right modeling frameworks based on your goals and audience\n● How to create clean and clear diagrams that work across engineering and business roles\n● How to explore and understand the Marketing domain as a system designer\n● How to apply the C4 model and Viewpoints & Perspectives to build an end-to-end system model\n\n\nThis Course Is For You If You Are:\n● A Software Architect or Engineer who wants to communicate architecture to peers and stakeholders clearly\n● A Tech Lead or Developer who's building or evolving complex systems and needs to understand the big picture\n● A Product Owner or Business Analyst looking to grasp system boundaries and behavior better\n● A Consultant, CTO, or Team Lead aiming to align cross-functional teams with visual clarity\nYou don't need to be a full-time architect—if you design systems, this course is for you.\n\n\nFAQ\n● How is this course different from other Software Architecture courses?\nMost courses focus on patterns or infrastructure. This one focuses on visualizing, communicating, and aligning architecture through modeling. It's practical, visual, and grounded in real-world frameworks like C4 and Viewpoints & Perspectives—not just theory.\n● Is this course only for Software Architects?\nNot at all. Anyone who builds, designs, or explains systems, from developers and product managers to consultants and tech leads, will benefit.\n● What do I need to complete this course?\nJust a basic understanding of software systems. No prior modeling experience is required. We'll guide you from first principles to building a complete architectural model.",
      "target_audience": [
        "This course is for any software development professional looking to better understand, design, and communicate system models—from software architecture to organizational structures and process designs."
      ]
    },
    {
      "title": "Microservices Architecture on AWS",
      "url": "https://www.udemy.com/course/microservices-architecture-on-aws/",
      "bio": "Transform your monolith into organized, maintainable services & build enterprise-grade solutions on the cloud",
      "objectives": [
        "Master the key tenets/elements required to build a microservices architecture.",
        "Observe key industry examples, lessons learned and MSA pitfalls.",
        "Explore non-functional requirements related to MSA such as resilience, availability, performance, security, scalability, and maintainability.",
        "Learn about the DevOps role in MSA, particularly Continuous Integration and Deployment, and the importance of CI pipelines with a large number of microservices.",
        "Improve the reusability, composability, and maintainability of code.",
        "Manage Blue Green deployments to reduce downtime and risk.",
        "Reduce the risk and cost of operating a cloud platform.",
        "Build a service that is responsible for operating and maintaining it in production."
      ],
      "course_content": {
        "Microservices Architecture": [
          "The Course Overview",
          "Definition of Microservices",
          "Driving Forces and Conway's Law",
          "Coupling and Cohesion",
          "Domain-Driven Design",
          "Exploring Our Sample Project",
          "Spinning Up Our First Microservice",
          "Continuous Integration Using AWS CodeBuild",
          "Automated Deployment Using AWS CodeDeploy",
          "Continuous Delivery Using AWS CodePipeline",
          "Best Practices for CI/CD",
          "Integration Methods",
          "Adding a gRPC Interface to Our Service",
          "Building Up Our Second Async Microservice",
          "Best Practices for Monitoring and Logging",
          "Monitoring Using AWS CloudWatch",
          "Scaling and Load Balancing",
          "Service Discovery",
          "Using AWS EC2 Auto-Scaling",
          "Service Mesh Versus API Gateway",
          "Introduction to Serverless Computing",
          "Leveraging AWS Lambda",
          "Development Lifecycle of Serverless Applications",
          "Caveats of the Serverless Model",
          "Microservices Design and Boundaries",
          "Operations in a Microservices Environment",
          "Polyglot Programming and Persistence",
          "Moving from a Monolith to Microservices",
          "Considerations for a Microservices Architecture",
          "Microservices at Netflix",
          "Microservices at Gilt",
          "Test Your Knowledge"
        ],
        "Building Microservices on AWS": [
          "The Course Overview",
          "The Concepts of Microservices",
          "Benefits of Microservices",
          "Key Design Elements for Microservices",
          "Understanding AWS EC2 and ELB",
          "Decentralizing AWS Data Options",
          "AWS Elastic Beanstalk",
          "Working with AWS Lambda",
          "AWS API Gateway",
          "AWS Route 53",
          "Monitoring Microservices",
          "Exploring Blue Green Deployments",
          "Using Elastic Load Balancer for Blue Green Deployments",
          "Using Elastic Beanstalk for Blue Green Deployments",
          "Getting Started with Continuous Integration",
          "Using AWS CodeCommit",
          "Implementing AWS CodeBuild",
          "Using AWS CodePipeline",
          "The Complete Continuous Integration Pipeline",
          "Working with Containers",
          "Using Orchestration",
          "Exploring Kubernetes",
          "Using AWS Elastic Container Service",
          "Test Your Knowledge"
        ]
      },
      "requirements": [
        "Basic knowledge of Microservices is necessary for this course."
      ],
      "description": "Microservices are a popular new approach to building maintainable, scalable, cloud-based applications. AWS is the perfect platform for hosting Microservices. All major companies are now evolving from a monolithic to a microservices architecture in their websites and applications due to its many advantages.\nAs this course follows a practical approach, you will begin with learning where to use microservices and understand the things you should take into account when building your architecture. Advanced tasks - with concepts such as Serverless computing and DevOps using AWS - will also be undertaken to help you in your next venture with confidence. Then you will learn how to build Microservices-based applications on AWS, overcome the limitations and challenges you experience in traditional monolith deployments & much more.\nBy the end of the course, you would have set a solid foundation for you to start implementing Microserviceslearnt for daily tasks, test & monitor your application for improving the performance and deploy your Microservice to the cloud, be ready to migrate to a microservices architecture in your organization.\nContents and Overview\nThis training program includes 2 complete courses, carefully chosen to give you the most comprehensive training possible.\nThe first course, Microservices Architecture you'll be exploring the intricacies of the microservices architecture you will understand its advantages over a monolithic and other related architecture. By going through multiple scenarios you'll learn where to use microservices and understand the things you should take into account when building your architecture. Advanced tasks—with concepts such as Serverless computing and DevOps using AWS—will also be undertaken to help you in your next venture with confidence.\nThe second course, Building Microservices on AWS shows you how to build Microservices-based applications on AWS. It will help you overcome the limitations and challenges you experience in traditional monolith deployments. It will provide you with technological freedom and help you choose the best tool for each job. By the end of the course, you'll have learned to apply AWS tools to create and deploy Microservices-based applications. You'll be able to make your applications cost-effective, easier to scale, and faster to develop.\nAbout the Authors:\nDimos Raptis is a professional Software Engineer with several years of experience, designing and developing software systems for various companies, ranging from small software shops to big tech companies. His expertise lies in the Java and Linux ecosystems, having built highly concurrent, multi-threaded applications and deployed them both in the public cloud and in on-premise data centers. He is a big fan of XP practices, such as test-driven development and continuous improvement processes. His technical expertise lies in the Java and Linux ecosystems; he has some hands-on experience with emergent open-source technologies. Also, he has a soft spot for the fields of big data and Machine Learning.\nAlan Rodrigues has been working on software components such as Docker containers and Kubernetes for the last 2 years. He has extensive experience working on the AWS Platform, currently being certified as an AWS Solution Architect Associate, a SysOps Administrator, and a Developer Associate. He has seen that organizations are moving towards using containers as part of their Microservices architecture. And there is a strong need to have a container orchestration tool in place. Kubernetes is by far the most popular container orchestration on the market.",
      "target_audience": [
        "The course will appeal to cloud developer, cloud administrators, software architects, and software engineers, and developers who are primarily new to the microservices architecture and interested in migrating from a monoliths to microservices."
      ]
    },
    {
      "title": "Kubernetes Certification Training For Absolute Beginners",
      "url": "https://www.udemy.com/course/kubernetes-certification-training-for-absolute-beginners/",
      "bio": "Learn Kubernetes and container orchestration from ground up",
      "objectives": [
        "Learn the core concepts of the Kubernetes platform",
        "Learn all about container orchestration",
        "Learn with work with Docker and Kubernetes",
        "Learn to use container technology in your own projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to Kubernetes": [
          "What is Kubernetes",
          "What are Containers",
          "Quiz1"
        ],
        "Docker Installation": [
          "Installing Docker on Linux",
          "Installing Docker on Windows",
          "Installing Docker on Mac",
          "Creating a Docker File",
          "Containerizing an Existing Application",
          "Quiz 2"
        ],
        "Tool to run Kubernetes": [
          "Where can we run K8",
          "Minikube Setup",
          "Introduction to yaml and Resource Files",
          "Quiz 3"
        ],
        "Kubernetes Architecture and Services": [
          "Kubernetes Architecture",
          "Kubernetes Networking and Services",
          "Intro to Google Cloud Kubernetes Engine",
          "Launching Workloads in GK3",
          "Quiz 4"
        ],
        "Additional Lecture": [
          "Introduction to Container Orchestration and Kubernetes",
          "Installaton of Kubernetes",
          "Application installation and configuration on Kubernetes",
          "Internal Kubernetes Aspects",
          "Kubernetes Aspects Continued",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of Linux is important to take this course"
      ],
      "description": "Kubernetes or K8 is gaining popularity among the app developers because of its myriads of advantages. It is basically an open-source container-orchestration system. It helps in automatic deployment, scaling and management of the containerized application. Kubernetes comes with several advantages like easy availability of tools or services, ability to run any containerized application, resource isolation, horizontal scaling and others. Whereas, containers act as a logical packaging mechanism from which applications are extracted to the environment where they actually run. It has several benefits too. Containers are small and fast, have their own file systems are portable across clouds, is highly efficient and much more. All of these properties have significantly increased the demand of the individuals having the knowledge of Kubernetes and Containers. Due to which we brought this course revolving around the concepts of Kubernetes and Containers.\nWhy you should take this Course?\nIt is an extensive course which entirely focuses on the concept of Kubernetes and Containers. At first, this course unfolds with the basic introduction of Kubernetes and Containers and then gives you in-depth details of the same. Along with the explanation of Kubernetes and Containers, installation of Docker on Linux, creating a Dockerfile and containerizing an existing application has also been shown. It gives you insights into the tool to run Kubernetes such as Minikube and gives introduction of yaml and resource file. Kubernetes architecture, networking and services are also included. Additionally, introduction to Google Cloud Kubernetes engine and other topics are mentioned too.\nThis Course Includes-\nA Basic intro of Kubernetes and Containers\nDocker installation, creating a dockerfile and containerizing an application\nTool to run K8 such as Minikube\nKubernetes Architecture and Services\nIntroduction to Google Cloud Kubernetes Engine\nand much more!\nThis technology is constantly becoming popular among the app developers and if you don’t yet understand Kubernetes then it’s the right time to master this technology. Start now, in order to become the expert of tomorrow.",
      "target_audience": [
        "Anyone who wants to learn Kubernetes and container orchestration will find this course very useful"
      ]
    },
    {
      "title": "Advanced Data Structures and Algorithms in C ( DSA )",
      "url": "https://www.udemy.com/course/data-structures-and-algorithms-in-c-2/",
      "bio": "Advanced Data Structures and Algorithms in C Using C DSA C Data Structures Algorithms LeetCode DSA C DSA with C DSA in C",
      "objectives": [
        "Understand various data structures and algorithms (DSA) through animations",
        "Get the ability to implement different algorithms in C",
        "Get the confidence to face programming interviews",
        "Learn theory and implementation of AVL Trees, B Trees, Threaded Binary Trees and Expression Trees",
        "Graph, traversal and shortest path algorithms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Advanced Data Structures and Algorithms Through C"
        ],
        "AVL Tree": [
          "Important : Source Code Repository required for course",
          "Introduction",
          "Rotations",
          "Insertion in AVL Tree - 1",
          "Insertion in AVL Tree - 2",
          "Insertion in AVL Tree - 3",
          "Insertion in AVL Tree - 4",
          "Examples of insertion in AVL Tree",
          "Deletion in AVL Tree - 1",
          "Deletion in AVL Tree - 2",
          "Deletion in AVL Tree - 3",
          "Examples of deletion in AVL Tree",
          "Your Review Matters!"
        ],
        "Threaded Binary Tree": [
          "Introduction",
          "Insertion",
          "Deletion"
        ],
        "Expression Tree": [
          "Introduction",
          "Constructing and Evaluating an Expression Tree",
          "Implementation of Expression Tree"
        ],
        "B tree": [
          "Introduction",
          "Inorder Traversal",
          "Searching",
          "Insertion",
          "Implementation of Insertion - 1",
          "Implementation of Insertion - 2",
          "Deletion",
          "Examples of Deletion from Leaf Node",
          "Examples of Deletion from Non-Leaf Node",
          "Implementation of Deletion"
        ],
        "Graph": [
          "Introduction",
          "Terminology",
          "Cycles",
          "Connectivity in Undirected Graph",
          "Connectivity in Directed Graphs",
          "Tree and Forest",
          "Representation of Graph : Adjacency Matrix",
          "Adjacency Matrix in C",
          "Representation of Graph : Adjacency List",
          "Adjacency List in C",
          "Transitive closure of a directed graph and Path Matrix",
          "Warshall’s Algorithm",
          "Warshall’s Algorithm in C"
        ],
        "Traversal in Graph": [
          "Introduction",
          "Breadth First Search",
          "Implementation of Breadth First Search",
          "Finding Shortest path in an unweighted graph",
          "BFS Spanning Tree",
          "BFS in Undirected Graphs : Finding Connected Components",
          "Depth First Search",
          "Implementation of Depth First Search through Stack",
          "Recursive Implementation of Depth First Search",
          "Classification of Edges in DFS of Directed Graph",
          "Classification of Edges in DFS of Undirected Graph"
        ],
        "Shortest Paths in Graph": [
          "Shortest Path Problem",
          "Dijkstra’s Algorithm",
          "Dijkstra’s Algorithm : Example",
          "Dijkstra’s Algorithm in C"
        ],
        "Minimum Spanning Tree of a Graph": [
          "Introduction",
          "Prim's Algorithm",
          "Prim's Algorithm : Example",
          "Prim's Algorithm in C",
          "Kruskal's Algorithm",
          "Kruskal's Algorithm : Example",
          "Implementation of Kruskal's Algorithm",
          "Kruskal's Algorithm in C"
        ],
        "Bonus Lecture": [
          "Recommended Course and offer on my other courses"
        ]
      },
      "requirements": [
        "Knowledge of C programming",
        "Knowledge of linked list, stack, queue and binary search trees"
      ],
      "description": "This \"Advanced Data Structures and Algorithms In C\" course is thoroughly detailed and uses lots of animations to help you visualize the concepts.\nThis \"Advanced Data Structures and Algorithms in C\" tutorial provides a comprehensive explanation of different types of graph and various graph algorithms. Throughout the course a step by step approach is followed to make you understand different algorithms. Through this course you can build a strong foundation and it will help you to crack Data Structures and Algorithms in C coding interviews questions and work on projects. Good foundation on Data Structures and Algorithms in C interview topics helps you to attempt tricky interview questions.\nThis Data Structures and Algorithms using C course covers following DSA topics in C with implementation :\nTrees : AVL Tree, Threaded Binary Tree, Expression Tree, B Tree explained and implemented in C\nGraphs : Adjacency matrix, Adjacency list, Path matrix, Warshall’s Algorithm, Traversal, Breadth First Search (BFS), Depth First Search (DFS), Dijkstra’s Shortest Path Algorithm, Prim's Algorithm and Kruskal's Algorithm for minimum spanning tree\nHere are the DSA topics in course-\nAVL Tree\nThreaded Binary Tree\nExpression Tree\nB Tree\nGraph\nTraversal in Graph\nShortest Paths in Graph\nMinimum Spanning Tree of a Graph\nThe Data Structures and Algorithms with C course is broken down into easy to assimilate short lectures and complete working programs are shown for each concept that is explained. The algorithms and examples are explained with figures and animations to simplify the learning of this complex topic.  You will see code implementation of different data structures in C and algorithms are explained in step-wise manner.\nIn this Data Structures and Algorithms through C course, C programs are used for implementing various concepts, but you can easily code them in any other programming language like C++, C#, Java, Python.\nThis \"Data Structures and Algorithms In C\" online course on udemy will help software developers to refresh the concepts studied in Data Structures and Algorithms In C books / pdf and also to students learning from referred books / pdf.\n\n\nSo what are you waiting for, click on Buy button to enroll now and start learning.",
      "target_audience": [
        "Professional Programmers wanting to write effective code",
        "Programmers looking for jobs",
        "Computer Science students having Data Structures as part of their curriculum",
        "Non Computer science students wanting to enter IT industry"
      ]
    },
    {
      "title": "Design Patterns with C++",
      "url": "https://www.udemy.com/course/design-patterns-c/",
      "bio": "Software Design Patterns in theory with implementations using C++",
      "objectives": [
        "You will understand and implement design patterns.",
        "Advance your skills in C++.",
        "Practice on Object-Oriented Programming."
      ],
      "course_content": {
        "Creational Patterns": [
          "Abstract Factory in Theory",
          "Abstract Factory Implementation",
          "Quiz",
          "Builder in Theory",
          "Builder Implementation",
          "Quiz",
          "Factory Method in Theory",
          "Factory Method Implementation",
          "Quiz",
          "Prototype in Theory",
          "Prototype Implementation",
          "Quiz",
          "Singleton in Theory",
          "Singleton Implementation",
          "Quiz"
        ],
        "Structural Patterns": [
          "Adapter in Theory",
          "Adapter Implementation",
          "Quiz",
          "Bridge in Theory",
          "Bridge Implementation",
          "Quiz",
          "Decorator in Theory",
          "Decorator Implementation",
          "Quiz",
          "Façade in Theory",
          "Façade Implementation",
          "Quiz",
          "Flyweight in Theory",
          "Flyweight Implementation",
          "Quiz",
          "Proxy in Theory",
          "Proxy Implementation",
          "Quiz"
        ],
        "Behavioral Patterns": [
          "Command in Theory",
          "Command Implementation",
          "Quiz",
          "Interpreter in Theory",
          "Interpreter Implementation",
          "Quiz",
          "Mediator in Theory",
          "Mediator Implementation",
          "Quiz",
          "Memento in Theory",
          "Memento Implementation",
          "Quiz"
        ]
      },
      "requirements": [
        "Basic knowledge on any object-oriented language."
      ],
      "description": "This course offers a hands-on and example-oriented approach to learning design patterns in C++. It’s specifically crafted to help you strengthen your understanding of object-oriented architecture through real world and practical implementations. Rather than overwhelming you with heavy theory, it guides you step-by-step using clear and concise examples that demonstrate how design patterns can be used to solve common software design problems.\n\n\nAll you need to get started is a basic knowledge of object-oriented programming. Whether you’ve just learned about classes and inheritance or have some beginner experience with C++, this course is designed to build upon that foundation and elevate your thinking to a more architectural level.\n\n\nIf you’re new to programming or transitioning into software development, this course will introduce you to essential software engineering principles using C++ through abstraction, encapsulation, and modular design. By the end, you’ll not only recognize major design patterns such as Singleton, Factory, Observer, Strategy, and more—but also understand when and how to apply them effectively in your own projects.\n\n\nThis course is ideal for beginners who are eager to improve their coding practices, design cleaner codebases, and gain a solid grasp of reusable, scalable software architecture—all through practical, approachable examples in C++.",
      "target_audience": [
        "Developers",
        "Beginner coders who want to improve their skills"
      ]
    },
    {
      "title": "Agile Mindset & Adaptability: The Complete Guide to XP",
      "url": "https://www.udemy.com/course/agile-mindset-learnit/",
      "bio": "Efficient Software Development: Speed Up Work, Reduce Bugs & Improve Code Quality wtih Extreme Programming",
      "objectives": [
        "Understand Extreme Programming (XP) principles and Agile mindset",
        "Master Test-Driven Development (TDD) for reliable, maintainable code",
        "Implement Pair Programming to improve collaboration and code quality",
        "Use Continuous Integration (CI) and Continuous Deployment (CD)",
        "Refactor code effectively while preserving functionality",
        "Apply incremental development for faster software releases",
        "Write user stories and plan Agile iterations efficiently",
        "Enhance collaboration with XP’s feedback loops and code reviews",
        "Reduce technical debt by applying XP best practices",
        "Improve software design with XP's simplicity and adaptability",
        "Automate testing strategies beyond TDD for better quality assurance",
        "Apply collective code ownership and shared team responsibility",
        "Use Agile metrics to measure progress and optimize development",
        "Handle changing requirements effectively with XP techniques",
        "Scale XP practices for larger teams and enterprise projects"
      ],
      "course_content": {
        "Introduction": [
          "Communication plan",
          "Tips to Improve Your Course Taking Experience",
          "Free AI Bot for My Students Only – No Sign-Up, FREE, Just Practice"
        ],
        "Module 1: Introduction to Extreme Programming (XP)": [
          "Introduction to Extreme Programming (XP) - Part 1",
          "Introduction to Extreme Programming (XP) - Part 2"
        ],
        "Module 2: Fine-Scale Feedback": [
          "Pair Programming - Part 1",
          "Pair Programming - Part 2",
          "Planning Game - Part 1",
          "Planning Game - Part 2",
          "Test-Driven Development (TDD)",
          "BDD & ATTD",
          "TDD, BDD & ATTD - Practice",
          "Whole Team - Part 1",
          "Whole Team - Part 2"
        ],
        "Module 3: Continuous Process": [
          "Continuous Integration (CI) - Part 1",
          "Continuous Integration (CI) - Part 2",
          "Refactoring or Design Improvement - Part 1",
          "Refactoring or Design Improvement - Part 2",
          "Small Releases - Part 1",
          "Small Releases - Part 2"
        ],
        "Module 4: Shared Understanding": [
          "Coding Standards - Part 1",
          "Coding Standards - Part 2",
          "Collective Code Ownership - Part 1",
          "Collective Code Ownership - Part 2",
          "Simple Design - Part 1",
          "Simple Design - Part 2",
          "System Metaphor"
        ],
        "Module 5: Programmer Welfare": [
          "Sustainable Pace - Part 1",
          "Sustainable Pace - Part 2"
        ],
        "Bonus Section": [
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "Familiarity with software delivery processes (doesn’t have to be technical)",
        "An interest in continuous improvement, fast feedback, and iterative development",
        "No prior experience with Extreme Programming (XP) required – everything will be explained from scratch",
        "Interest in improving adaptability in software projects and handling change efficiently",
        "Open-mindedness to collaborative practices like Pair Programming and Code Reviews",
        "Openness to learning new approaches in teamwork, collaboration, and feedback cycles"
      ],
      "description": "Extreme Programming (XP) is one of the most effective Agile methodologies, designed to improve software quality, team collaboration, and development speed. This course provides a comprehensive, hands-on guide to XP, covering key practices like Test-Driven Development (TDD), Continuous Integration (CI/CD), Pair Programming, Code Refactoring, and Incremental Development.\nIn today's fast-paced software industry, teams must adapt quickly to change, write maintainable code, and deliver high-quality software with minimal bugs. Extreme Programming provides the framework to achieve this by promoting frequent feedback, iterative releases, and disciplined engineering practices.\nBy the end of this course, you will gain practical, real-world experience applying XP methodologies to improve productivity, reduce technical debt, and foster effective team collaboration. Whether you are a developer, team lead, tester, or Agile coach, this course will equip you with the skills needed to integrate XP into your development workflow and build high-performing teams.\n\n\nWhat You Will Learn in This Course\nIntroduction to Extreme Programming (XP) – Understand the core principles, values, and benefits of XP in Agile development.\nAgile Mindset and XP’s Role – Learn how XP aligns with Agile frameworks like Scrum, Kanban, and Lean development.\nTest-Driven Development (TDD) in Action – Master the cycle of writing tests before code to improve reliability and maintainability.\nPair Programming Techniques – Learn how two developers can collaborate effectively to write higher-quality code with fewer bugs.\nContinuous Integration (CI) and Continuous Deployment (CD) – Automate testing and deployments to improve efficiency and code stability.\nRefactoring Strategies for Maintainable Code – Identify and improve existing code while preserving functionality.\nCollective Code Ownership and Team Collaboration – Encourage knowledge sharing and collective responsibility for high-quality code.\nFrequent Releases and Small Iterations – Develop software in small, manageable increments to ensure continuous feedback and adaptability.\nSimple Design and YAGNI (You Ain’t Gonna Need It) – Implement only necessary features to reduce complexity and technical debt.\nCustomer Collaboration and Feedback Loops – Involve stakeholders early and often to build user-centric applications.\nUser Stories and Agile Planning – Write and prioritize user stories to align development with business needs.\nAutomated Testing Beyond TDD – Explore integration testing, acceptance testing, and end-to-end testing strategies.\nHandling Technical Debt in Agile Projects – Learn how XP minimizes long-term maintenance costs by enforcing best practices.\nAgile Metrics and Measuring Success – Use velocity, cycle time, and defect rates to track team performance and efficiency.\nScaling XP in Larger Teams – Discover how XP principles can be adapted for enterprise-scale software development.\n\n\nWho Should Take This Course?\nSoftware developers and engineers who want to improve code quality and efficiency.\nAgile practitioners, Scrum Masters, and team leads looking to integrate XP into their workflows.\nQA engineers and testers interested in test-driven development and automation.\nDevOps professionals who want to enhance CI/CD practices with XP methodologies.\nProduct owners and business analysts aiming to align development with business goals.\nAnyone interested in learning Agile best practices and modern software development techniques.\n\n\nWhy This Course?\nThis course is structured to balance theory with real-world application, ensuring that learners can immediately apply XP practices in their projects. The lessons include practical examples and case studies to reinforce learning. Whether you work in a startup or a large enterprise, this course will help you improve productivity, streamline development, and write maintainable software that scales.\nPrerequisites\nUnderstanding of software development workflows\nInterest in Agile methodologies and iterative software development\n\n\nGet Started Today\nLearn how to implement Extreme Programming (XP) techniques to deliver high-quality software, improve team collaboration, and enhance Agile workflows. Enroll now and start mastering XP for modern software development.",
      "target_audience": [
        "Agile Enthusiasts & Change Leaders – Learn how XP fosters adaptability in fast-changing development environments",
        "Software Developers Seeking Efficiency – Improve coding speed, reduce bugs, and create scalable, high-quality software",
        "Scrum Masters & Agile Coaches – Discover how XP complements Agile frameworks like Scrum and Kanban",
        "Product Managers & Owners – Enhance collaboration with development teams and improve product delivery",
        "Tech Leads & Engineering Managers – Implement XP to build stronger teams and reduce technical debt",
        "QA Engineers & Testers – Understand how XP integrates automated testing for higher software quality",
        "Startups & Fast-Paced Teams – Adopt XP practices to move faster without sacrificing code quality",
        "DevOps Professionals – Align XP with CI/CD pipelines to automate and streamline development workflows",
        "Project Managers in Agile Organizations – Improve planning, iteration cycles, and customer feedback integration",
        "Freelancers & Independent Developers – Optimize solo and remote development workflows with XP techniques"
      ]
    },
    {
      "title": "Building Java using Gradle on Jenkins",
      "url": "https://www.udemy.com/course/building-java-using-gradle-on-jenkins/",
      "bio": "A hands-on guide with step-by-step examples for Git, Docker, Jenkins, Gradle, Java, and bringing them all together",
      "objectives": [
        "The basics of Test Automation, CI, CD, and DevOps",
        "The fundamentals of Source Control (Git), Docker, and Jenkins",
        "How to install and setup Git, Docker, Docker Compose, and Jenkins",
        "An Introduction to Java Build Concepts and Gradle",
        "How to use Gradle to check, test, and publish Java libraries",
        "How to use Jenkins to automate CI/CD based on Gradle using freestyle jobs, scripted pipelines, and declarative pipelines"
      ],
      "course_content": {},
      "requirements": [
        "An understanding of the Windows/Linux/Mac command-line",
        "A very basic understanding of Java coding",
        "Knowledge of how to install third-party applications and tools, and making them available via the command-line"
      ],
      "description": "With so many terms, techniques, and tools available, navigating how about building and delivering software can be overwhelming. This course picks a path through that maze, specifically focused on Java, and walks through a set of those options for delivery. Specifically using a combination of Docker, Jenkins, Git, and Gradle. Every aspect of this course also comes with a Git repository that contains both details and the examples being discussed.\n\n\nLearners can follow along by running their own development environments for executing the examples, or just use this as a deep-dive explanation into the inner workings of Java-Jenkins-Gradle delivery. Either way, let working code be your guide. The course structure starts with setting up a basic development environment, and ends with using a Jenkins declarative pipeline to   execute a Gradle build using the Java, Maven, Jacoco, and PMD plugins, that on the pass of all the quality gates publishes the resulting Java Library to a Maven Repository.\n\n\nIt additionally covers the concepts of containerization, configuration as code, static code analysis, unit testing, code coverage, and pipelines as code. The course is otherwise divided into three sections:\n\n\n(1) Infrastructure\nGit via Github - Setting up Git so that you can use SSH to get the examples.\nDocker and Docker Compose - Installing Docker and Docker Compose to be able to run containers locally.\nJenkins via Docker Compose - Running Jenkins locally in a container.\n(2) Building Java\nBuilding Java 101 - The basics of how Java code is turned into a Jar.\nGradle and the Java Plugin - Using the Java Plugin to test and build a Jar.\nGradle and Java Code Coverage - How to generate code coverage for unit testing, and set a quality gate.\nGradle and Java Static Code Analysis - How to run PMD, and set a quality gate.\nGradle and Java Library Publishing - How to publish a Jar to a Maven Repository.\n(3) Jenkins Automation\nFreestyle Job - Building, Testing, and Delivering the Jar using a Freestyle Job.\nScripted Pipeline - Building, Testing, and Delivering the Jar using a Scripted Pipeline.\nDeclarative Pipeline - Building, Testing, and Delivering the Jar using a Declarative Pipeline.",
      "target_audience": [
        "DevOps Engineers and Developers interested on how Gradle can be used to build and publish Java-based projects via the available techniques on Jenkins",
        "Developers looking for a deeper understanding on how Git, Docker, Java, Jenkins, and Gradle can all come together to build and deliver"
      ]
    },
    {
      "title": "New Managers: Build Solid Foundations as Engineering Manager",
      "url": "https://www.udemy.com/course/engineering-leadership-build-a-rock-solid-foundation/",
      "bio": "Learn how to Lead a team as you transition into an Engineering Leader, Ideal for Aspiring, Newer & Existing Managers",
      "objectives": [
        "Build solid foundations as an Engineering Leader",
        "Figure out your Leadership Style",
        "Learn the Responsibilities as an Engineering Leader",
        "What should success as a Leader looks like",
        "Learn if you want to become a Leader and if Leadership is for you",
        "Crush First 90 days of Engineering Leadership",
        "Learn how to lead a team & succeed as you transition into an Engineering Leader",
        "Learn the importance of creating value early, establishing your mandate and planning the transition.",
        "Define goals for 30, 60, 90 days, learn how to manage stakeholders and understand org's vision.",
        "What are wins? What does a early win look like? How you can build credibility and trust early",
        "Identify org expectations, create alignment and learn strategies to build a good network",
        "Define a high-performing team, evaluate team performance using key metrics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download [Workbook] Developer to Leader"
        ],
        "Foundations of Engineering Leadership": [
          "Goals of the Module",
          "What does an Engineering Manager do?",
          "Build your Leadership Styles",
          "Your Unfair Advantage",
          "Define your Values",
          "Leader vs Boss",
          "What gives you Energy?",
          "Anti-patterns of a Manager",
          "Master the Context"
        ],
        "First 90 Days of Engineering Leadership: The Leader's Playbook": [
          "Introduction",
          "Hit the ground running",
          "Accelerate your learning",
          "Secure Early Wins and Build Credibility",
          "Set expectations right",
          "Build a high performing team"
        ],
        "BONUS SECTION": [
          "Special Bonus Lecture"
        ]
      },
      "requirements": [
        "No prior leadership experience required"
      ],
      "description": "Welcome to New Managers: Build Solid Foundations as Engineering Manager! The only course you need to learn and build a solid foundations of an New Manager plus crush your first 3 months in a job as you lead a new team or lead your existing team.\n\n\nYou will walk away from this course with a solid toolbox of skills and knowledge that you can use to succeed in your new management role as a new manager.\n\n\nEven if you have zero leadership experience, this course will take you from beginner to mastery and help you build a solid foundation as an Engineering Manager. Here's why:\nThe course is taught by Ankita Kulkarni, previously Senior Engineering Manager.\nAnkita has hired more than 100+ developers and also coached several developers into transitioning Engineering Managers and Technical Managers.\nThe course is regularly updated and will teach you how to lead a team in 2023\nThis course doesn't cut any corners, there are exercises and you will get a comprehensive workbook which you can use to follow along the course.\nThe curriculum was developed after 10+ years of experience, with comprehensive student testing and feedback.\nI've taught over 13,000 students and many are from top fortune 500 companies such as IBM. Uber, and work in Engineering Leadership all across the globe.\nYou'll save yourself over $5,000 by enrolling as an average Leadership course price starts around $3000 all the way to $10,000\nThe course is constantly updated with new content, with new projects and modules determined by students - that's you!\nYou will save time and energy ⏰\nThis course is built on more than 10 years experience with training new managers and experienced managers from all corners of the world.\nSuccessful engineering managers have all invested in their leadership skills. These skills are often what makes or breaks a new manager.\n\n\nThis course is here to help you learn how to lead a team, take control and grow into a successful manager by setting up your first 90 days for success.\nEach lesson comes with a workbook in the form of a Notion template that you can use to do practical homework that you can start applying in your job right away.\n\n\nHi, I'm Ankita, your instructor for this course\nI have over 10+ years of experience in Tech at the intersection of Frontend and Leadership\nGrown 100+ developers & leaders and 25+ developer teams at a time\n✍️ Published Author of the E-book: Engineering Leader's Playbook: The First 90 Days, and crossed 148+ sales.\nWorked for IBM, Tim Hortons, Burger King, Popeyes, Borrowell, WealthSimple, Roche, Shoppers Drug Mart, Moleskine and more.\n✏️ Taught 10,000+ students here online on Next.js, React, GraphQL and Engineering Leadership\n\n\nThis course is not about making you watch a lot of content but instead about understanding the principles and applying the exercises using a workbook. This course will push you and challenge you to build solid leadership skills as a foundation and you will know how to crush it when you transition into a Leader or you are leading a new team.\n\n\nYou might have heard many Leadership books, podcasts and even after that, you still don't truly know how to become a Leader. This course will change that, I guarantee it!\n\n\nSee you inside the course!",
      "target_audience": [
        "Intermediate, Senior+ Developers transitioning from being an Individual Contributor to a Manager or want to learn what it takes",
        "Newly promoted or First-Time Engineering Managers",
        "Technical Leads and Team Leads - Utilize your technical expertise and transition into a well-rounded, results-driven leader",
        "Engineering Managers with a New Team or Existing Leaders leading a new team",
        "Learn the foundation strategies that work with newer teams to help build trust early"
      ]
    },
    {
      "title": "Master Java Spring Boot with JPA in 10 Easy Steps",
      "url": "https://www.udemy.com/course/master-java-spring-boot-with-jpa-in-10-easy-steps/",
      "bio": "From Zero to Java Spring Boot Pro: Master JPA and Build Real-World Apps Fast",
      "objectives": [
        "Learn to create a web app in Java using Spring Boot",
        "Integrate database to your Java web app with Java Spring Boot JPA",
        "Use HTML, Thymeleaf, Boostrap with your Java Spring Boot Web App",
        "Java Sprint Boot Basics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction: Create a Java Spring Project",
          "Java Spring Boot: The Application File",
          "Java Spring Boot Application Properties",
          "Using HTML to display a web page with Java Spring Boot Web Applications",
          "Executing Your Java Spring Boot Project",
          "The Entity Class in a Java Spring Boot Project for Java Web Applications",
          "The Repository Class in a Java Spring Boot Project for your Java Spring Web App",
          "The Service Class in a Java Spring Boot Project for Java Web Applications",
          "The Service Class in a Java Spring Boot Project for your Java Spring Web App",
          "The Controller Class in a Java Spring Boot Project for your Java Spring Web App",
          "The HTML File Using an SQL Result Set in your Java Spring Web App"
        ]
      },
      "requirements": [
        "To take this course, you are already an efficient Java Coder",
        "This course is for Java Programmers, not for Java beginners",
        "You need to know Java JDBC already before taking this course"
      ],
      "description": "In this transformative course, you will master the art of building robust Java Spring Boot applications from the ground up.\nDesigned for passionate Java developers eager to harness the power of Spring Boot for web application development with seamless database integration via JPA, this course assumes a foundational knowledge of SQL, HTML, Java, and JDBC to maximize your learning experience.\nSpring Boot stands at the forefront of modern Java development—a powerful framework that accelerates the creation of production-ready applications through smart pre-configurations, streamlined dependency management, and embedded web servers. It empowers developers to focus on innovation, boosting productivity while simplifying deployment complexities.\nCentral to our journey will be the Java Persistence API (JPA), a sophisticated specification that revolutionizes database interaction by bridging the gap between Java objects and relational data through elegant object-relational mapping (ORM). Leveraging JPA allows you to effortlessly map domain models to database tables and perform queries in a clean, object-oriented manner—significantly reducing the need for verbose SQL. Often paired with frameworks like Hibernate, JPA is an indispensable tool for modern Java applications.\nOn the frontend, you will integrate dynamic HTML pages crafted with Thymeleaf and styled with Bootstrap, creating responsive and engaging user experiences. Thymeleaf, a modern server-side template engine, seamlessly blends with Spring to deliver natural, maintainable templates that render beautifully in browsers even without a server. This makes it both developer-friendly and powerful for real-world web applications.\nComplementing this, Bootstrap provides a robust, mobile-first framework that empowers you to design sleek, responsive layouts with ease. Its comprehensive collection of pre-built components and grid system ensures your applications look stunning across all devices.\nBy the end of this course, you will not only possess the technical skills to create sophisticated Java web applications but also the confidence to bring impactful, scalable solutions to life. Prepare to embark on a rewarding learning journey that will elevate your development prowess and open new doors in your programming career.",
      "target_audience": [
        "Java programmer who are already proficient Java coders",
        "Use Java for web-based applications, with back and front ends, connecting to database"
      ]
    },
    {
      "title": "How to become a Cloud Engineer with no experience",
      "url": "https://www.udemy.com/course/how-to-become-a-cloud-engineer-in-less-than-6-months/",
      "bio": "Get yourself started on an exciting career path in cloud computing.",
      "objectives": [
        "Why you should become a cloud engineer",
        "What skills are needed to become a cloud engineer",
        "Identify the best roles to apply for",
        "Understand you salary requirements and ranges",
        "Learn about training and coaching options",
        "Learn about a roadmap to get started in the cloud"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is a Cloud Engineer?",
          "Why become a Cloud Engineer/Course Content Download",
          "What a Cloud Engineer does for Tasking",
          "What are the technical skills required?",
          "What are the salary range for a Cloud Engineer",
          "LinkedIn Role Review",
          "AWS Cloud Demo - What a Cloud Engineer may work on",
          "Career Path for a Cloud Engineer",
          "Certification Options",
          "Training Options",
          "Coaching Options",
          "Interview Techniques",
          "Common Interview Questions",
          "Discussion with Max Garcia IT Project Manage about Cloud Roles in 2024",
          "Discussion with Rich Augenti Cloud/DevOps Engineer about AWS and FinOps",
          "Resources",
          "Course Closeout"
        ],
        "Bonus Lectures From Cloud InterviewACE, Premium Cloud Interview Prep!": [
          "Cloud InterviewACE",
          "Cloud InterviewACE Schedule",
          "Cloud Skill Mapping",
          "Non Tech Roles",
          "Whiteboard Discussion",
          "Interview Questions Part 1",
          "Interview Questions Part 2",
          "Demonstration"
        ]
      },
      "requirements": [
        "NONE"
      ],
      "description": "Did you know that a cloud engineer makes, on average, over $120,000 per year in the US?( Report from RHT)\nIn this course, we cover why cloud engineering may be an excellent career for you. The course has been designed to provide a solid introduction to why you should become a cloud engineer as well as how to get started.\nMost “entry-level” cloud computing jobs require years of prior experience, making it challenging to break into the field.\nHowever, with the proper training and coaching, becoming a cloud engineer is more than feasible.\nWhat is covered in the course?\nThe following topics will be covered in the course.\nWhat is a Cloud Engineer?\nWhy become a Cloud Engineer?\nWhat a Cloud Engineer does day to day\nWhat are the top skills needed\nCareer path options\nSalary Expectations\nTraining Options\nCoaching Options\nInterview Techniques\nDiscussion with Max, an IT Project Manager\nDiscussion with Rich, a Cloud Architect/DevOps Engineer\nPractice Interview Questions\nCloud Demos\nRoadmap to Continue\nAdditional Resources\nCourse Closeout\n\n\nWho is the target audience?\nThe course is designed for individuals seeking to enter the cloud computing field.\nWhat You'll Learn\nWhy you should become a cloud engineer\nWhat skills are needed to become a cloud engineer\nIdentify the correct cloud roles to apply for.\nWhat is the salary range for a cloud engineer\nUnderstand what a cloud engineer does for daily tasks\nHow to find training and coaching to jump-start your career\nLearn about some common interview questions.\n\n\nRequirements\nConsidering a career change to cloud computing\nAccess to cloud services to learn more.",
      "target_audience": [
        "Anyone who is considering a career in cloud computing."
      ]
    },
    {
      "title": "Master The Basics Of Arduino | Learn Arduino Step by Step",
      "url": "https://www.udemy.com/course/master-the-basics-of-arduino-learn-arduino-step-by-step/",
      "bio": "Learn Arduino Programming and Hardware Fundamentals",
      "objectives": [
        "Basics Of Arduino",
        "How to Build circuits on a breadboard",
        "Design circuits and write code",
        "Understand analog and digital inputs and outputs",
        "Setting Up the Circuit For Arduino Uno With Breadboard",
        "Read Data from Arduino Serial Monitor",
        "Arduino Bluetooth Basic Tutorial"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Arduino",
          "Arduino Uno Components (Microcontroller, Pins, Clock & Power)"
        ],
        "Install Arduino IDE": [
          "How to Install Arduino IDE on Windows 10 + First Sketch",
          "Setting Up the Circuit For Arduino Uno With Breadboard"
        ],
        "Arduino sketches": [
          "Setup And Loop Blocks + light LEDs right to left",
          "Read Data from Arduino Serial Monitor",
          "Arduino Strings and Loops",
          "Digital Input With a Push Button in Arduino"
        ],
        "Arduino Step by Step": [
          "Read Analog Signal From Peripheral Devices (Potentiometer)",
          "Read from Photosensitive Sensor,Gas Sensor,Microphone Sensor",
          "Analog Signal Output (PWM) (Control Speed of DC Motor)",
          "How to Use an LCD Display",
          "How to Control Servo Motor With Arduino",
          "Keyboard PS2 | USB",
          "Using 4Ã—4 Keypad With Arduino",
          "RFID Tutorial RC522 with Arduino Uno",
          "Using the SONAR MODULE (HC SR04) Ultrasonic Distance Sensor",
          "Send SMS and Call from SIM900 GSM Module",
          "Setting up Bluetooth HC-05 | Arduino Bluetooth Basic Tutorial"
        ],
        "Using FreeRTOS in Arduino": [
          "Setting Up FreeRTOS on Arduino",
          "How to Handle Tasks with FreeRTOS on Arduino.",
          "Accurately delay, Delete Function, Suspend and Resume function",
          "How to Use Mutex to handle Multiple Task"
        ]
      },
      "requirements": [
        "A Windows, Mac or Linux computer",
        "An Arduino Uno",
        "breadboard, jumper wires, a multimeter, a soldering iron and solder"
      ],
      "description": "Are you curious about electronics, microcontrollers, or building your own gadgets? This beginner-friendly course is the perfect starting point to learn Arduino step by step—even if you have no prior experience with coding or hardware.\nIn \"Master The Basics Of Arduino\", you’ll explore the exciting world of physical computing and learn how to use the powerful Arduino platform to bring your ideas to life. This hands-on course will walk you through all the essential concepts, tools, and skills to get started with Arduino from scratch.\nWhat You’ll Learn:\nUnderstand what Arduino is and how it works\nSet up your Arduino board and the Arduino IDE (software)\nWrite your first Arduino program (sketch)\nWork with basic electronic components like LEDs, resistors, sensors, and buzzers\nUse digital and analog inputs/outputs effectively\nControl real-world devices with Arduino\nBuild interactive projects step-by-step\nDebug your circuits and code with confidence\nWhy Take This Course?\nBeginner-friendly, no prior experience required\nLearn by doing—every concept is paired with a practical example\nCovers both hardware and software essentials\nIdeal foundation for robotics, home automation, and IoT projects\nSupportive learning environment with downloadable code and circuit diagrams\nWho This Course Is For:\nAbsolute beginners curious about electronics or coding\nStudents and hobbyists looking to get hands-on with hardware\nCreators and tinkerers interested in DIY electronics and automation\nAnyone who wants to understand how microcontrollers work\nBy the end of this course, you’ll have the knowledge and confidence to start building your own Arduino projects—and the skills to keep learning and exploring more advanced applications.\nLet me know if you’d like to include specific projects, like \"blinking an LED\" or \"temperature sensor display\", to make the course description more detailed.",
      "target_audience": [
        "Students",
        "beginners"
      ]
    },
    {
      "title": "Build REST APIs with Spring Data REST & Spring Boot",
      "url": "https://www.udemy.com/course/rest-apis-with-java-spring-data-rest-spring-boot-jpa-mysql-json-hal/",
      "bio": "REST APIs with Java Spring Framework & Spring Data JPA. Validations, Pagination, Sorting, Projection, Excerpt.",
      "objectives": [
        "Develop REST APIs using Spring Data REST",
        "Basics of Spring Data JPA",
        "CRUD Operations with Spring Data REST",
        "Validations with Spring Data REST",
        "Pagination & Sorting with Spring Data REST",
        "Projection & Excerpt with Spring Data REST",
        "HAL Explorer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting Up Environment": [
          "JDK, Maven and STS Installation",
          "Postman (REST Client) Installation",
          "MySQL Installation"
        ],
        "Introduction To Spring Data REST": [
          "What is Spring Data ?",
          "Problem Statement",
          "What is Spring Data REST ?",
          "What are HATEOAS and HAL ?"
        ],
        "Basics of Spring Data JPA": [
          "What is Spring Data JPA ?",
          "Set Up MySQL Database",
          "Create Spring Boot App",
          "Spring Boot-MySQL Connection With JPA",
          "Create First Entity Class",
          "Create First Repository Using @Repository Annotation",
          "Get All Records Using JPA",
          "Get Single Record Using JPA",
          "Save Record Using JPA",
          "Update Record Using JPA",
          "Delete Record Using JPA"
        ],
        "Getting Started with Spring Data REST": [
          "Overview of Spring Data REST",
          "Create Spring Boot App with Spring Data REST",
          "Spring Data REST In Action",
          "Expose ID Field's Value",
          "Create Record using Spring Data REST",
          "Update Record using Spring Data REST",
          "Partial Update using Http Patch and Spring Data REST",
          "Delete Record using Spring Data REST",
          "Configure API Path & Collection Key",
          "Configure Base Path"
        ],
        "Customize JSON Using Jackson Library": [
          "@JsonProperty Usage",
          "@JsonIgnore Usage"
        ],
        "Spring Data REST Using SQL Relationships": [
          "MySQL Database Overview",
          "Configure Spring Boot App",
          "Define SQL Relationships Using Spring Data JPA",
          "Create Record with Reference",
          "Cascade Delete Using Spring Data JPA",
          "Restricting To Expose as REST Resource"
        ],
        "Validations with Spring Data REST": [
          "Introduction To Validations",
          "Create Validator",
          "Register Validator",
          "Validator In Action",
          "Validation While Updating Record"
        ],
        "Pagination & Sorting": [
          "Introduction To Pagination & Sorting",
          "Pagination In Action",
          "Configure Default Page Size",
          "Sorting In Action"
        ],
        "Custom APIs Using Spring Data REST": [
          "Introduction To Custom APIs",
          "REST API Using findBy Field",
          "Find By Multiple Fields",
          "Set Path For Custom API",
          "Pagination with Custom APIs"
        ]
      },
      "requirements": [
        "Need to have basic knowledge of Java Programming Language & Apache Maven",
        "Need to have basic knowledge of Spring Boot & Spring Framework"
      ],
      "description": "Do you want to expose your database with REST APIs ? If yes then you can go for Spring Data REST.\nIn this course you will learn Spring Data REST with Spring Data JPA & MySQL Database. Once you will learn Spring Data REST with Spring Data JPA then you can use Spring Data REST with other databases like MongoDB, Neo4j etc.\n\n\nIn this course, first you will learn basics of Spring Data JPA and then we will jump to Spring Data REST. After that you will learn how to handle SQL relationships while working with Spring Data REST.\nIn this course you will learn Hypermedia as the Engine of Application State (HATEOAS) principle and we will use Hypertext Application Language (HAL) for the implementation of HATEOAS.\nYou will learn how to customize JSON response using Jackson Library. Validations are very important while developing REST APIs and this course covers validations with Spring Data REST.\nYou will learn how to achieve Pagination & Sorting while working with Spring Data REST.\nSpring Data JPA provides findBy methods and with that we can develop custom APIs using Spring Data REST.\nTo provide dynamic JSON response Spring Data REST provides Projection & Excerpt.\nWith HAL Explorer, you can get UI to call your APIs and it can be considered as REST API documentation.\nIn this course you will learn\nDevelop REST APIs with Spring Data REST\nCustomize JSON Using Jackson Library\nSpring Data REST Using SQL Relationships\nValidations with Spring Data REST\nPagination & Sorting with Spring Data REST\nCustom APIs Using Spring Data REST\nProjection & Excerpt with Spring Data REST\nHAL Explorer\n\n\nCourse Topics & Lectures :-\n• Introduction To Spring Data REST\nWhat is Spring Data ?\nProblem Statement\nWhat is Spring Data REST ?\nWhat are HATEOAS and HAL ?\n\n\n• Basics of Spring Data JPA\nWhat is Spring Data JPA ?\nSet Up MySQL Database\nCreate Spring Boot App\nSpring Boot-MySQL Connection With JPA\nCreate First Entity Class\nCreate First Repository Using @Repository Annotation -DONE\nGet All Records Using JPA\nGet Single Record Using JPA\nSave Record Using JPA\nUpdate Record Using JPA\nDelete Record Using JPA\n\n\n• Getting Started with Spring Data REST\nOverview of Spring Data REST\nCreate Spring Boot App with Spring Data REST\nSpring Data REST In Action\nExpose ID Field's Value\nCreate Record using Spring Data REST\nUpdate Record using Spring Data REST\nPartial Update using Http Patch and Spring Data REST\nDelete Record using Spring Data REST\nConfigure API Path & Collection Key\nConfigure Base Path\n\n\n• Customize JSON Using Jackson Library\n@JsonProperty Usage\n@JsonIgnore Usage\n\n\n• Spring Data REST Using SQL Relationships\nMySQL Database Overview\nConfigure Spring Boot App\nDefine SQL Relationships Using Spring Data JPA\nCreate Record with Reference\nCascade Delete Using Spring Data JPA\nRestricting To Expose as REST Resource\n\n\n• Validations with Spring Data REST\nIntroduction To Validations\nCreate Validator\nRegister Validator\nValidator In Action\nValidation While Updating Record\n\n\n• Pagination & Sorting\nIntroduction To Pagination & Sorting\nPagination In Action\nConfigure Default Page Size\nSorting In Action\n\n\n• Custom APIs Using Spring Data REST\nIntroduction To Custom APIs\nREST API Using findBy Field\nFind By Multiple Fields\nSet Path For Custom API\nPagination with Custom APIs\n\n\n• Projection & Excerpt In Spring Data REST\nIntroduction To Projection & Excerpt\nCreate Projection\nProjection In Action\nConcat Values Using Projection\nMore with Projection\nExcerpt In Action\n\n\n• HAL Explorer\nIntroduction To HAL Explorer\nHAL Explorer In Action",
      "target_audience": [
        "Any Java Developer wants to develop REST APIs using Spring Boot & Spring Data REST"
      ]
    },
    {
      "title": "Data Engineering : Python,Machine Learning,ETL,Web Scraping",
      "url": "https://www.udemy.com/course/data-engineering-pythonmachine-learningetlweb-scraping/",
      "bio": "Learn essentials of Data Engineering with Python, Data Manipulation, Machine Learning, ETL, SSIS , Web Scraping.",
      "objectives": [
        "Understand the Role of Data Engineering: Grasp the significance and responsibilities of data engineering within the broader data ecosystem.",
        "Learn Key Data Engineering Concepts: Familiarize with essential terminology and concepts in data engineering.",
        "Set Up a Python Environment: Successfully install Python and create virtual environments on both Windows and macOS.",
        "Utilize Jupyter Notebook: Install, set up, and navigate Jupyter Notebook for interactive data analysis and visualization.",
        "Develop Python Programming Skills: Understand and apply Python programming fundamentals, including expressions, statements, and data types.",
        "Manipulate Data Structures in Python: Efficiently use Python lists, tuples, and dictionaries.",
        "Perform Data Manipulation with Pandas: Use Pandas to create, manipulate, and analyze data in Series and DataFrames.",
        "Load and Inspect Datasets: Import datasets into Pandas DataFrames and perform initial data inspection.",
        "Clean and Transform Data: Apply data cleaning and transformation techniques to prepare data for analysis.",
        "Visualize Data with Python: Create various types of visualizations to explore and present data insights.",
        "Understand Machine Learning Basics: Gain a foundational understanding of machine learning concepts and workflows.",
        "Preprocess Data for Machine Learning: Perform data preprocessing tasks including handling missing values, encoding categorical variables, and feature engineerin",
        "Train and Evaluate Machine Learning Models: Train machine learning models, make predictions, and evaluate their performance using appropriate metrics.",
        "Work with Logistic Regression Models: Train, evaluate, and interpret logistic regression models.",
        "Visualize Model Evaluation Metrics: Create visualizations to interpret confusion matrices and other evaluation metrics.",
        "Save and Load Machine Learning Models: Save trained models and load them for future use and deployment.",
        "Build Decision Trees and Random Forests: Understand and implement decision trees and random forest algorithms.",
        "Create and Run ETL Packages with SSIS: Learn to create and execute ETL packages using SQL Server Integration Services (SSIS).",
        "Extract Data Using Web Scraping: Use BeautifulSoup and Scrapy to extract data from websites.",
        "Develop Web Scraping Scripts: Write and test scripts to automate web scraping tasks.",
        "Build Comprehensive Data Engineering Solutions: Integrate skills and knowledge to build robust data engineering pipelines that include data collection, processi"
      ],
      "course_content": {
        "Overview of Data Engineering": [
          "Introduction",
          "Understanding the role of data engineering in the data ecosystem",
          "Key concepts and terminology",
          "Data Engineering Workflow: From data collection to data analysis",
          "Overview of data engineering processes and pipelines"
        ],
        "Python Environment Setup": [
          "Python Installation on Windows",
          "What are virtual environments",
          "Creating and activating a virtual environment on Windows",
          "Python Installation on macOS",
          "Creating and activating a virtual environment on macOS",
          "What is Jupyter Notebook",
          "Install Text Editor",
          "Installing Pandas and Jupyter Notebook in the Virtual Environment",
          "Starting Jupyter Notebook",
          "Exploring Jupyter Notebook Server Dashboard Interface",
          "Creating a new Notebook",
          "Exploring Jupyter Notebook Source and Folder Files",
          "Exploring the Notebook Interface"
        ],
        "Python Programming Fundamentals": [
          "Python Expressions",
          "Python Statements",
          "Python Code Comments",
          "Python Data Types",
          "Casting Data Types",
          "Python Variables",
          "Python List",
          "Python Tuple",
          "Python Dictionaries",
          "Python Operators",
          "Python Conditional Statements",
          "Python Loops",
          "Python Functions"
        ],
        "Data Manipulation and visualization with Python": [
          "Overview of Pandas",
          "Creating a Pandas Series from a List",
          "Creating a Pandas Series from a List with Custom Index",
          "Creating a pandas series from a Python Dictionary",
          "Accessing Data in a Series using the index by label",
          "Accessing Data in a Series By position",
          "Slicing a Series by Label",
          "Creating a DataFrame from a dictionary of lists",
          "Creating a DataFrame From a list of dictionaries",
          "Accessing data in a DataFrame",
          "Download Dataset",
          "Loading Dataset into a DataFrame",
          "Inspecting the data",
          "Data Cleaning",
          "Data transformation and analysis",
          "Visualizing data"
        ],
        "Machine Learning Essentials: Build and Train a Machine Learning Model": [
          "What is Machine Learning?",
          "Installing and importing libraries",
          "Introduction to Data Preprocessing",
          "What is a Dataset",
          "Downloading dataset",
          "Exploring the Dataset",
          "Handle missing values and drop unnecessary columns.",
          "Encode categorical variables.",
          "What is Feature Engineering",
          "Create new features.",
          "Dropping unnecessary columns",
          "Visualize survival rate by gender",
          "Visualize survival rate by class",
          "Visualize numerical features",
          "Visualize the distribution of Age",
          "Visualize number of passengers in each passenger class",
          "Visualize number of passengers that survived",
          "Visualize the correlation matrix of numerical variables",
          "Visualize the distribution of Fare.",
          "Data Preparation and Training Model",
          "What is a Model",
          "Define features and target variable.",
          "Split data into training and testing sets.",
          "Standardize features.",
          "Train logistic regression model.",
          "Making Predictions",
          "Evaluate the model using accuracy, confusion matrix, and classification report.",
          "Visualize the confusion matrix.",
          "Saving the Model",
          "Loading the model",
          "Improving Understanding of the model's prediction",
          "Building a decision tree",
          "Building a random forest"
        ],
        "How to Create and run ETL Packages with SSIS,SQL Server,SSDT": [
          "What is SSIS",
          "What is an SSIS Package",
          "What is ETL",
          "What is SQL Server",
          "Download SQL Server",
          "Install SQL Server",
          "Install SQL Server Management Studio ( SSMS)",
          "Connect SSMS to SQL Server",
          "Download Sample Databases",
          "Restore Sample Databases",
          "Installing Visual Studio",
          "Starting Visual Studio",
          "Installing SQL Server Data Tools(SSDT) Templates Extensions",
          "Create a new Integration Services project",
          "Exploring the data",
          "Add and configure a Flat File connection manager",
          "Add and configure an OLE DB connection manager",
          "Add a Data Flow task to the package",
          "Add and configure the flat file source",
          "Add and configure the lookup transformations",
          "Add and configure the OLE DB destination",
          "Annotate and format the package",
          "Test the package"
        ],
        "Data Extraction using Web Scraping": [
          "What is Web Scraping",
          "Tools for web scraping",
          "Create and activate a new virtual environment",
          "What we will scrape",
          "Inspecting Elements",
          "Overview of Web Scraping with BeautifulSoup",
          "Installing BeautifulSoup",
          "Installing Scrapy",
          "Building a web scraping script - part 1",
          "Building a web scraping script - part 2",
          "Prototyping the script : part 1",
          "Prototyping the script : part 2",
          "Prototyping the script : part 3",
          "Prototyping the script : part 4",
          "Prototyping the script : part 5",
          "Testing |Running |Saving Scraped data to file",
          "Overview of Web Scraping with Scrapy",
          "Creating a Scrapy project",
          "Components of a Scrapy Project",
          "Scrapy Architecture",
          "Creating a Spider : part 1",
          "Creating a Spider : part 2",
          "Scraping data with scrapy shell : Part 1",
          "Scraping data with scrapy shell : Part 2",
          "Running the spider and saving scraped data"
        ]
      },
      "requirements": [
        "Basic Computer Literacy: Familiarity with basic computer operations, such as installing software, navigating file systems, and using a web browser.",
        "Interest in Data Engineering: A strong interest in data engineering, data analysis, and machine learning.",
        "Computer: A laptop or desktop with internet access."
      ],
      "description": "Welcome to this course. which is designed to equip you with the essential skills and knowledge needed to excel in the rapidly evolving field of data engineering. Whether you are a beginner or an experienced professional looking to broaden your skill set, this course offers a detailed, hands-on approach to mastering data engineering.\nCourse Overview:\nData engineering is the backbone of modern data science and analytics, providing the foundation for collecting, processing, and analyzing large datasets. This course starts with the basics and gradually progresses to more complex topics, ensuring a solid understanding of each concept before moving on to the next.\nSection 1: Overview of Data Engineering We begin with an introduction to data engineering, covering its role within the data ecosystem. You will learn about key concepts, terminology, and the typical workflow of a data engineer, from data collection to analysis. This section sets the stage for the more technical aspects to come.\nSection 2: Python Environment Setup Python is a fundamental tool for data engineers. In this section, you will learn how to set up your Python environment on both Windows and macOS, including the creation and activation of virtual environments. We will also cover essential tools like Jupyter Notebook and popular text editors, preparing you for efficient Python programming and data manipulation.\nSection 3: Python Programming Fundamentals With your environment set up, we dive into Python programming. Starting with basic expressions and statements, you will progress to more complex topics such as data types, variables, lists, tuples, dictionaries, control flow statements, and functions. This section ensures you have a strong foundation in Python, which is crucial for data engineering tasks.\nSection 4: Data Manipulation and Visualization with Python Learn to harness the power of Pandas for data manipulation. You will explore how to create and manage Series and DataFrames, load and inspect datasets, clean and transform data, and visualize data using various techniques. By the end of this section, you will be adept at preparing and analyzing data for insights.\nSection 5: Machine Learning Essentials This section introduces you to the basics of machine learning. You will learn about data preprocessing, handling missing values, encoding categorical variables, and feature engineering. We will guide you through training and evaluating machine learning models, making predictions, and visualizing results. You will also learn to save and load models for future use.\nSection 6: Creating and Running ETL Packages with SSIS and SQL Server Explore the world of Extract, Transform, Load (ETL) processes using SQL Server Integration Services (SSIS). You will learn to create and manage ETL packages, handle data from various sources, and automate data workflows. This section provides practical skills for managing large-scale data integration tasks.\nSection 7: Data Extraction Using Web Scraping Finally, we cover web scraping techniques using BeautifulSoup and Scrapy. You will learn to extract data from websites, write and test web scraping scripts, and save scraped data for analysis. This section equips you with the skills to gather data from the web, a valuable asset for any data engineer.\nIntended Learners:\nThis course is ideal for aspiring data engineers, data analysts, software developers, students, tech enthusiasts, and professionals transitioning into data engineering roles. No prior experience is required, making it accessible to beginners.\nWhy Enroll?\nBy enrolling in this course, you will gain practical, hands-on experience with the tools and techniques used by data engineers. You will learn to build robust data pipelines, manipulate and analyze data, and create and deploy machine learning models. Our step-by-step approach ensures you can confidently apply these skills in real-world scenarios, making you a valuable asset in the data-driven industry.\nJoin us on this journey to master data engineering and unlock the power of data!",
      "target_audience": [
        "Aspiring Data Engineers",
        "Data Analysts and Scientists",
        "Software Developers",
        "Students and Recent Graduates",
        "Tech Enthusiasts and Hobbyists",
        "Professionals Transitioning Careers",
        "Entrepreneurs and Business Analysts"
      ]
    },
    {
      "title": "PCB Design: Master Designing Printed Circuit Board",
      "url": "https://www.udemy.com/course/master-designing-drawing-and-testing-electronic-proteus/",
      "bio": "A-Z Guide to designing, testing and Manufacturing any electronic circuit, using the most popular electronic software.",
      "objectives": [
        "Master Designing electronic circuits",
        "Simulate and test your circuit before actually making it",
        "Make a professional Printed Circuit electronic board PCB for your circuit.",
        "Track you errors in seconds",
        "Use Proteus Software which is one of the best electronic software ever"
      ],
      "course_content": {
        "Updated: Master Electronic Circuits like never before": [
          "Section Intro",
          "What You will learn",
          "Who We Are",
          "Introduction Prestart Defentions",
          "Planning to Master PCB Design from Schematic to Board",
          "Introduction to Bluetooth and PIC Projects",
          "Installing the Required Software Proteus",
          "Basic introduction to Proteus ISIS interface and Tools",
          "Design Draw and Test your First Simple Circuit",
          "Getting Started with Proteus and Circuit Design",
          "Introducing Some Teqniques to Master ISIS",
          "Create Your Own Electric Element in ISIS Proteus",
          "Design Draw and Test a more advanced Circuit",
          "Basic Introduction to ARES interface and tools",
          "Advanced Circuit Design and ARES Tools in Proteus",
          "Preparing ISIS Circuit Design to be moved to ARES",
          "Placing Elements the right way in ARES",
          "Start Routing in Different Ways",
          "Preparing and Routing PCB Designs in Proteus ARES",
          "Finalize Your Circuit for mass production",
          "Print PCB Design on Heat Paper",
          "PCB Board Cleaning and Etching",
          "PCB Finalization and Production",
          "Drilling",
          "Bonus Lecture Coupons, Gifts and More",
          "Master Electronic Circuits like never before",
          "Summary",
          "Reading Material"
        ],
        "Old Lessons: Master Electronic Circuits like never before": [
          "Section Intro",
          "What You will learn",
          "Introduction Prestart Defentions",
          "Before Installing the Required Software",
          "Installing the Required Software Proteus",
          "Introduction and Software Setup for PCB Design",
          "Basic introduction to Proteus ISIS interface and Tools",
          "Very Important Note: Review Process",
          "Design Draw and Test your First Simple Circuit",
          "Introducing Some Teqniques to Master ISIS",
          "Proteus ISIS Interface and Basic Circuit Design",
          "Create Your Own Electric Element in ISIS Proteus",
          "Design Draw and Test a more advanced Circuit",
          "Basic Introduction to ARES interface and tools",
          "Advanced Circuit Design and ARES in Proteus",
          "Preparing ISIS Circuit Design to be moved to ARES",
          "Placing Elements the right way in ARES",
          "Start Routing in Different Ways",
          "Preparing and Routing PCB Designs in Proteus ARES",
          "Finalize Your Circuit for mass production",
          "Introduction to Proteus Software and Circuit Design",
          "Summary",
          "Reading Material"
        ],
        "PCB Fabrication": [
          "Section Intro",
          "Print PCB Design on Heat Paper",
          "PCB Board Cleaning and Etching",
          "Drilling",
          "PCB Printing, Etching, and Drilling",
          "Summary",
          "Reading Material"
        ],
        "Practice Test": [
          "Practice Test: Basics of Proteus and Circuit Design Practice Test"
        ],
        "Who we are?": [
          "Who We Are?"
        ],
        "Course Project": [
          "Course Project",
          "Ready-to-Manufacture PCB Presentation"
        ],
        "Course Wrap-Up": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Passion",
        "Simple basic electronic background",
        "PC or Laptop",
        "Software (Included)"
      ],
      "description": "PCB design is the process of designing Printed Circuit Boards (PCBs) with an assembler in order to assemble electronic circuits. PCB design is a required skill for any engineer who runs into PCBs in their everyday life. In an age of rapid change, the PCB industry is always evolving. The design of a PCB can take days or weeks, depending on the complexity and intricacy. In order to make it easier for people to create their own PCBs, design software was created. The most commonly used software is Proteus.\nProteus is designed software that allows you to create your own PCBs by simply dragging and dropping components onto the screen. You can choose from different libraries of components and even create your own. It is easy to use and does not require any training.\nPrinted circuit boards are complex pieces of hardware that are used in many different industries. Manufacturing printed circuit boards, or PCBs, is a difficult task and requires a great deal of specialized training and knowledge. If you're looking to get into the field of designing and manufacturing PCBs, there are a few things you need to know about the process. This course will explore how to design and manufacture a printed circuit board.\nA-Z Guide to Designing, Drawing, and Testing Any Electronic Circuit Using one of the most popular software in the electronics industry, after this course you will be a master at making your own electric circuit board.\nWhy You Should Take This Course?\nThe course teaches you how to design electronic circuits with the most popular circuit design software.\nLearn about the latest electronics design processes and techniques from experts in the field.\nThe course is prepared for beginners and experts alike, so you’ll learn from the basics of electronics circuit design to more complex designs.\nYou can enroll at any time during the year to learn these skills.\nGain knowledge of designing, testing, and manufacturing circuits.\nComprehensive software training course.\nContinual Updates 4 Star | More Than 1200 STUDENTS!!! THANK YOU!!!\nWhat Students Are Saying:\n\"Very good I have experience in electronics and music electronics and computer technology. The course was refreshing and very good. I am pleased about doing the course thank you.\" - Michael Williams\nWelcome to this course.\nYou will become professional in making your own electronics circuits. You will even be able to master mass-producing any electronics circuit that you find useful.\nVideo and text lectures are included along with the software package that will be used in this course.\nThe course begins with introducing electronic circuit design, then lessons for beginners to allow you to become an expert. At the end, we will make a more advanced circuit and prepare it for mass production like a professional.\nAll you need for this course is your laptop and headphones.\nThis course is open for comments and suggestions.\nWhy you should take this course? Because you will learn by doing, not by listening, and you will become an expert in making your own circuits.\nWhat You Will Learn\nIntroduction to PCB design and manufacturing.\nHow to use Proteus software for designing PCBs.\nDesigning, drawing, and testing electronic circuits.\nPreparing circuits for mass production.\nWho Is This Course For\nBeginners with no prior knowledge of PCB design.\nEngineers and electronics enthusiasts looking to enhance their skills.\nAnyone interested in learning how to design and manufacture PCBs.\nRequirements\nNo prior knowledge of PCB design required.\nA computer with Proteus software installed.\nEnthusiasm and a willingness to learn.\n\n\nAbout the Instructor Info Educational Engineering Team\nTeam of skilled Engineers Sharing Knowledge with the World\nEducational Engineering Team is a Leading Team in Microcontroller Industry, with over 13 Years of Experience in Teaching and Doing Practical Projects.\nWe strive to put all our hands-on experience in these courses. Instead of superficial knowledge - we go into the depth of the topic and give you the exact - step by step blueprint on how to tame simple as well as complex topics in easy and digestible bite-sized videos.\nThis real-world knowledge enables you to grasp knowledge easily, and you can apply this learning immediately to your life and projects.\nEducational Engineering Team has been in the Programming and Microcontroller business since 2007. We have been part of many projects. Over the course of these years - we have gained a good insight into students’ and educators’ needs. We are passionate about sharing all our collective knowledge with you. As of 2018, we have already taught over 250k-THOUSAND students and counting.\nCurrently, we have more than 100+ Courses on Udemy\nEducator and Author of \"Educational Engineering\".\nAshraf is an educator, Mechatronics engineer, electronics and programming hobbyist, and Maker. He creates online video courses on the EduEng YouTube Channel (More Than 4 Million View, 20k+ Subscribers) and is the author of four Microcontroller books.\nAs a Chief Educational Engineer since 2007 at Educational Engineering Team, the company he founded, Ashraf’s mission is to explore new trends and technology, helping educate the world to make it a better place.\nEducational Engineering offers educational courses and Bootcamps, articles, lessons, and online support for electronics hobbyists, Programming hobbyists, Microcontroller hobbyists, STEM students, and STEM teachers.\nThat team also works as freelancer engineers, helping many students in their graduation projects, and provide guidance and consulting for many students over the years to help them kick-start their career.\nAshraf’s core skill is explaining difficult concepts in a step-by-step, easy-to-understand manner using video and text. With over 11 years of tertiary teaching experience, Ashraf has developed a simple yet comprehensive and informative style in teaching that students from all around the world appreciate.\nHis passion for Microcontrollers and Programming, particularly for the world of Arduino, PIC Microcontroller, and Raspberry Pi, has guided his personal development and his work through Educational Engineering.\nAshraf’s online courses have helped over 250,000 people from around the world to be better and to make a great career in the industry.\nEducational Engineering Team offers courses on\nCircuit Design, Simulation, and PCB Fabrication\nArduino, PIC Microcontroller, and Raspberry Pi\nProgramming in C, Python, and other programming languages\nPLC Industrial Programming and Automation\n3D Design and Simulation\nESP and IoT World",
      "target_audience": [
        "Engineering Students",
        "Electronics Students",
        "Everyone who's interested in Electronics",
        "Science Students"
      ]
    },
    {
      "title": "Mastering Electron: Build Modern Desktop Apps (2025 Edition)",
      "url": "https://www.udemy.com/course/mastering-electron-modern-desktop-apps/",
      "bio": "Create a Complete App with Database Integration and Packaging using Electron JS, HTML, CSS and JavaScript",
      "objectives": [
        "Welcome and Introduction",
        "Setting Up the Development Environment",
        "Fundamentals of Electron",
        "Todo App Project",
        "Packaging the Application for Distribution",
        "Auto Updating the application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction & overview of the course",
          "What’s and why electron",
          "The Todo notes application",
          "Electron Basic Understanding"
        ],
        "Setting Up the Development Environment": [
          "Installing IDE",
          "Install Node.js and npm",
          "Installing Electron"
        ],
        "Basics and Fundamentals": [
          "Understanding hello world",
          "Key Concepts - Processes, IPC & Preload Script",
          "Key Concepts - Implementation Renderer to Main one way",
          "Key Concepts - Implementation Renderer to Main two way",
          "Basic concepts"
        ],
        "Todo App Project": [
          "Designing the Todo List UI (optional)",
          "Connecting to database",
          "Create Notes Operation",
          "Read Notes Operation - Part I",
          "Read Notes Operation - Part II",
          "Edit Notes Operation",
          "Delete Notes Operation"
        ],
        "Packaging Electron Application": [
          "Electron builder for packaging application"
        ],
        "Auto Update in Electron": [
          "Auto Update - Electron-Updater - Part I",
          "Auto Update - Github Releases - Part II",
          "Thank You & Next Steps"
        ]
      },
      "requirements": [
        "Basics of HTML, CSS and Javascript are required",
        "Basics of git & github",
        "Will be good if you know little bit of node and jQuery. (quick crash course will work)",
        "Bootstrap is optional, just needed in designing part."
      ],
      "description": "Welcome to the \"Mastering Electron\" course! Whether you're a beginner or an experienced developer, this course is designed to help you dive into Electron JS Framework and build powerful desktop applications.\nIn this comprehensive course, you'll learn everything from the basics of Electron to packaging your app as an executable file. We'll guide you step-by-step through the development of a fully functional notes app, including database operations and advanced features.\nOur hands-on approach ensures you gain practical experience, making learning efficient and engaging. You'll be encouraged to code along with us, ensuring you can apply your new skills immediately.\nI have tailored this course to make you understand everything in a short and crisp manner while ensuring the content is complete and thorough.\nBy the end of this course, you'll have a solid understanding of Electron Framework and the confidence to create your own desktop applications. We’ll cover essential topics such as setting up the development environment, creating and managing windows, integrating with databases, and packaging your app.\nJoin us and start your journey to becoming an Electron expert today! Don't miss out on the opportunity to enhance your skill set and advance your career in software development. Let's build something amazing together!",
      "target_audience": [
        "Anyone who is interested in desktop app development.",
        "Anyone who wants to learn electron js",
        "Anyone who wants to develop desktop apps using web technologies"
      ]
    },
    {
      "title": "Genesys Cloud Architect: Building Call Flows",
      "url": "https://www.udemy.com/course/genesys-cloud-architect-building-call-flows/",
      "bio": "Elevate Your Customer Experience and Boost Agent Productivity with Expert Call Flow Strategies",
      "objectives": [
        "Design efficient call flows that streamline customer interactions and improve their overall experience with your contact center.",
        "Optimize call routing and handling, resulting in reduced average handling time, increased first-call resolution, and improved agent productivity.",
        "Learn how to effectively integrate call flows with other Genesys Cloud components for a unified, powerful contact center solution.",
        "Gain a competitive edge by leveraging cutting-edge call flow design techniques and the latest features in Architect for Genesys Cloud.",
        "Access additional resources and a community of experts, fostering continuous learning and improvement in call flow design and implementation."
      ],
      "course_content": {
        "Introduction to Genesys Cloud and Architect": [
          "Introduction to Genesys Cloud and Architect",
          "Quiz"
        ],
        "Setting Up and Navigating Architect": [
          "Setting Up and Navigating Architect",
          "Hands-On Exercise: Exploring the Genesys Cloud Dashboard and Architect Interface",
          "Quiz"
        ],
        "Call Flow Components and Basics": [
          "Call Flow Components and Basics",
          "Hands-On Exercise: Creating Wrap-Up Codes and ACD Skills",
          "Hands-On Exercise: Creating a User in Genesys Cloud",
          "Hands-On Exercise: Creating a Queue in Genesys Cloud",
          "Hands-On Exercise: Creating a Schedule and Emergency Group",
          "Hands-On Exercise: Creating a Group in Genesys Cloud",
          "Hands-On Exercise: Creating an In-Queue Call Flow in Genesys Cloud",
          "Quiz"
        ],
        "Creating a Basic Call Flow": [
          "Creating a Basic Call Flow",
          "Hands-On Exercise: Creating Your First Simple Call Flow",
          "Hands-On Exercise: Exploring Call Flow Components",
          "Hands-On Exercise: Creating a Data Table and Exploring Different Fields",
          "Hands-On Exercise: Creating an Agent Script and Assigning to Queue or Call Flow",
          "Quiz"
        ],
        "Advanced Call Flow Features": [
          "Advanced Call Flow Features",
          "Hands-On Exercise: Implementing Advanced Features in a Call Flow",
          "Hands-On Exercise: Creating Participant Data",
          "Hands-On Exercise: Adding Multiple Languages to Call Flows",
          "Quiz"
        ],
        "Integrating Call Flow with Genesys Cloud": [
          "Integrating Call Flow with Genesys Cloud",
          "Hands-On Exercise: Integrating a Call Flow with Queues and User Extensions",
          "Hands-On Exercise: Setting Queues to Variables and Making Decisions",
          "Hands-On Exercise: Using Data Action to Determine if User is Logged In and Ready",
          "Hands-On Exercise: Creating a Genesys Cloud Integration and OAuth",
          "Hands-On Exercise: Creating Collection Variables From Data Tables",
          "Quiz"
        ],
        "Testing, Debugging, and Deploying Call Flows": [
          "Test, Debug, and Deploy a Call Flow",
          "Testing, Debugging, and Deploying Call Flows",
          "Quiz"
        ],
        "Monitoring and Optimizing Call Flows": [
          "Monitoring and Optimizing Call Flows",
          "Hands-On Exercise: Analyzing Call Flow Performance and Making Optimizations",
          "Quiz"
        ],
        "Course Summary and Additional Resources": [
          "Course Summary and Additional Resources",
          "Hands-On Exercise: Course Summary and Resource Exploration",
          "Quiz",
          "Course Practice Quiz"
        ]
      },
      "requirements": [
        "Basic computer literacy: Participants should be familiar with basic computer operations and be comfortable using a web browser and navigating web-based applications.",
        "Familiarity with contact center concepts: A basic understanding of contact center operations, including concepts like call routing, IVR, queues, and agent handling, will be helpful for participants to grasp the content effectively.",
        "Genesys Cloud account: To practice building call flows in Architect and follow along with the course material, participants should have access to a Genesys Cloud account. If a participant doesn't have an account, they can sign up for a trial account or use their organization's existing Genesys Cloud instance.",
        "Interest in customer experience and contact center technology: This course is designed for individuals who are passionate about customer experience management and improving contact center operations. A strong interest in these topics will help participants stay engaged and motivated throughout the course.",
        "While not strictly required, prior experience with customer service or contact center operations can be beneficial for better understanding the practical applications of the course material. However, the course is designed to be accessible even for beginners with little to no prior experience in the field."
      ],
      "description": "\"Genesys Cloud Architect: Building Call Flows\" is a comprehensive course designed to provide students and professionals with the essential knowledge and skills required to create, deploy, and manage call flows effectively in a contact center environment. Through a series of practical, hands-on modules, participants will learn the fundamentals of call flow design, advanced routing techniques, and best practices for integrating call flows with Genesys Cloud components.\nStarting with an introduction to Genesys Cloud and Architect, the course takes learners through the entire process of designing and implementing call flows, including setting up Architect, working with basic and advanced call flow components, and integrating call flows with Genesys Cloud queues, users, groups, and IVR systems. Participants will also gain valuable insights into testing, debugging, and deploying call flows, as well as monitoring and optimizing call flow performance for improved contact center efficiency and customer experience.\nDesigned for both beginners and experienced professionals, this course is ideal for contact center agents, supervisors, managers, IT professionals, and anyone interested in mastering the art of call flow management in Genesys Cloud. By the end of the course, participants will be equipped with the practical knowledge and skills needed to create, deploy, and optimize call flows that deliver exceptional customer experiences and drive contact center success.",
      "target_audience": [
        "Professionals working in contact centers or customer service who want to improve their understanding of Genesys Cloud and call flow design, with a focus on using Architect to create and manage call flows.",
        "Students pursuing a career in contact center technology, customer experience, or related fields, who want to gain practical skills and knowledge about Genesys Cloud and call flow management.",
        "IT professionals responsible for implementing, managing, or maintaining contact center solutions using Genesys Cloud, who want to enhance their understanding of call flow design and best practices.",
        "Managers or supervisors overseeing contact center operations, who are looking to optimize their call routing strategies and improve customer experience through effective call flow design.",
        "Individuals interested in upskilling or transitioning to a career in contact center technology or customer experience management, who want to learn the fundamentals of call flow design and integration with Genesys Cloud."
      ]
    },
    {
      "title": "Text-to-SQL Spring AI Implementation with RAG",
      "url": "https://www.udemy.com/course/spring-ai-text-to-sql/",
      "bio": "Build a Text-to-SQL application using Spring AI 1.0.0",
      "objectives": [
        "Learn how to use Spring AI 1.0 to build AI applications",
        "Text-to-SQL implementation using LLM and RAG",
        "Database metadata searching using vector store",
        "Function calling in Spring AI to execute SQL statements"
      ],
      "course_content": {
        "Introduction": [
          "Course introduction"
        ],
        "Spring AI Basic": [
          "Spring AI Introduction"
        ],
        "Basic Text to SQL": [
          "Basic Text to SQL",
          "[Code & Demo] Basic text to SQL",
          "Database metadata extraction",
          "[Code & Demo] Database metadata",
          "Low cardinality values"
        ],
        "Database metadata search using RAG": [
          "Embedding model and vector store",
          "[Code & Demo] Chroma",
          "Database metadata index",
          "[Code & Demo] Database metadata index",
          "Generate table summary using LLM",
          "[Code & Demo] Generate table summary",
          "Include SQL sample queries",
          "[Code & Demo] Include SQL sample queries",
          "Generate SQL statement summary using LLM",
          "Reduce LLM prompt content size",
          "Table metadata stored in Postgres",
          "Target driven generation"
        ],
        "Table re-selection": [
          "Table re-selection using LLM",
          "[Code & Demo] Re-select tables",
          "Automatic table re-selection using LLM",
          "Manual table re-selection using chat memory",
          "[Code & Demo] Re-select tables using chat memory"
        ],
        "Functions to execute and validate SQL statements": [
          "Use function to execute SQL statements",
          "[Code & Demo] Execute SQL statements",
          "Use function to validate SQL statements",
          "[Code & Demo] Validate SQL statements"
        ],
        "Web UI": [
          "Web UI"
        ],
        "Deployment": [
          "Prepare for deployment",
          "Use Spring Cloud Function",
          "[Code & Demo] Function handlers for Spring Cloud Function",
          "Use AWS CDK to deploy serverless functions to AWS Lambda",
          "[Code & Demo] Use AWS CDK to deploy functions"
        ],
        "MCP": [
          "Build Text-to-SQL MCP server",
          "MCP server code",
          "MCP server demo using MCP Inspector"
        ],
        "Updates": [
          "Update 01 - 20250211",
          "Update 02 - 20250310",
          "Spring AI 1.0.0 Release"
        ]
      },
      "requirements": [
        "Basic knowledge of Java",
        "Basic knowledge of Spring & Spring Boot",
        "Basic knowledge of LLM"
      ],
      "description": "Building AI applications is very popular these days. For Java developers, the best choice for building AI applications is using Spring AI. To learn how to use Spring AI to build AI applications, we need to have a concrete example. Text to SQL, is a typical usage of using AI to improve productivity. By using text to SQL, non-technical people use natural language to describe database query requirements. These queries are sent to LLM. LLM can generate SQL statements to answer user queries. LLM can also use tools to execute SQL statements, and return the query results to the user. Text to SQL is a good example of AI applications.\nIn this course, we will use Spring AI to create a text to SQL application. After learning this course, you will know:\n\n\nHow to use ChatClient to send requests to LLM and receive responses.\nHow to extract database metadata and include them in the prompt sent to LLM.\nHow to use Spring AI advisors to intercept ChatClient requests to process requests and responses.\nHow to use embedding model and vector store to implement semantic search of database metadata.\nHow to use LLM to generate summary of database tables and SQL statements.\nHow to use LLM to re-select tables automatically.\nHow to allow user to manually re-select tables using message history.\nHow to execute and validate SQL statements using functions.\nHow to deployment metadata indexer and Text-to-SQL application as serverless functions on AWS Lambda.\nHow to store table metadata in a database.\nHow to create a Text-to-SQL MCP server using Spring AI and MCP Java SDK.\nThis course covers all major aspects of Spring AI, including ChatClient, advisors, embedding models, vector stores, chat memory and function calling.\nWhat you have learned in this course can help you build other AI applications using Spring AI.\n\n\nThe code has been updated to Spring AI 1.0.0 release version.\n\n\nYou can also get a free copy of the PDF book.\n\n\nSource code: This course provides full source code of the text to SQL application. The source code can be downloaded from resource of 5th lecture. You can also send me your  GitHub account email to access the private GitHub repository.",
      "target_audience": [
        "Java developer curious about building AI applications using Spring AI"
      ]
    },
    {
      "title": "Master the JavaScript Interview",
      "url": "https://www.udemy.com/course/master-the-javascript-interview/",
      "bio": "Learn how to ace your next JavaScript interview using advanced problem-solving techniques & algorithms",
      "objectives": [
        "Tackle any problem you'll find in an interview.",
        "Master several algorithmic strategies & data structures that can be applied to a wide range of problems.",
        "Critically analyze the algorithms you come up with and find ways to make them incredibly more efficient."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Welcome"
        ],
        "Strings & Arrays": [
          "Unique Characters",
          "Rapid String Processing",
          "Unique Characters: Ultimate Simplicity",
          "Flattening Nested Arrays",
          "Flattening Arrays Discussion",
          "Removing Duplicate Characters",
          "Removing Dupes: Ultimate Simplicity",
          "Find the Highest Frequency",
          "String Rotation"
        ],
        "Advanced Strings & Arrays": [
          "Finding Subsets with Double Array Algorithms",
          "Double Array Algorithms - Diving Deep",
          "Array Subset: The Optimal Solution",
          "Maximum Profits through Brute Force",
          "Maximum Profits: Intelligent Processing",
          "Single Mutation",
          "Detecting Anagrams",
          "Rapid Anagram Processing",
          "Thinking Spatially: Rotating a Square Matrix",
          "Rotating a Square Matrix Solution",
          "Rotate Matrix: Two Bonus Problems",
          "In Place Matrix Rotation - Strategy",
          "In Place Matrix Rotation - Solution"
        ],
        "Algorithms & Data Structures": [
          "Brute Force Sorted Search",
          "Elegant Sorted Search",
          "Balanced Brackets"
        ],
        "JavaScript Mastery": [
          "Deep Equivalence Algorithm - Pseudocode",
          "Deep Equivalence Algorithm - Solution",
          "Fibonacci: Brute Force Algorithm",
          "Memoized Fibonacci",
          "Memoization Performance Gains",
          "Timed Count Off - setTimeout Wackiness",
          "Timed Count Off - 3 Solutions",
          "Versatile Add I",
          "Versatile Add II",
          "Versatile Add III"
        ],
        "Thank you": [
          "Thank you!"
        ]
      },
      "requirements": [
        "Be familiar with basic JavaScript.",
        "Know the bare basics of data structures and algorithms."
      ],
      "description": "Master the JavaScript interview by practicing this set of carefully curated interview questions and solutions. These problems will provide the programming tools you need to tackle any question you find in an interview.\nMost questions have multiple solutions presented. All solutions are thoroughly explained and time and space complexity are discussed. A passing familiarity with these ideas is expected. You'll learn how to tackle different types of problems so you can proceed with confidence in your interviews.\nThese questions go beyond the common problems that we've all seen. FizzBuzz and bubble sort? We start past those.\nWe'll discuss how to refine algorithms. We'll go over clever, advanced ways of manipulating data that interviewers are looking for. You'll walk away more skilled and confident in your problem solving and interviewing abilities.",
      "target_audience": [
        "JavaScript developers looking to ace a job interview and land a software engineering position.",
        "Anyone interviewing for a web development position.",
        "People looking to keep their problem-solving skills sharp."
      ]
    },
    {
      "title": "Programming AutoCAD to Excel using VB.NET - Hands On!",
      "url": "https://www.udemy.com/course/programming-autocad-to-excel-using-vbnet-hands-on/",
      "bio": "This course will teach you how to develop AutoCAD Plugins that integrates with Excel (and Text Files) using VB.NET.",
      "objectives": [
        "Develop a program to select and read AutoCAD Objects then export Properties to Excel",
        "Develop a program to open and read Excel file and import into AutoCAD",
        "Develop a program to select and read AutoCAD Objects then export Properties into a Text File",
        "Develop a program to open and read a Text File and import into AutoCAD"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is this course for?",
          "What will you learn from this course?",
          "Tools needed",
          "Course Prerequisites"
        ],
        "Section 2 - Exporting AutoCAD Objects to Excel": [
          "Section Overview - Export AutoCAD Objects to Excel",
          "Exporting Lines to Excel - Overview",
          "Creating the VB.NET-Excel Project",
          "Design of User Interface to Export Lines",
          "Creating the Common Utility Class",
          "Creating the ExportLines Method",
          "Running and Testing ExportLines Method",
          "Exporting MTexts to Excel - Overview",
          "Creating the ExportMTexts Method",
          "Export Polylines to Excel - Overview",
          "Creating the ExportPolylines Method",
          "Running and Testing ExportPoylines Method",
          "Export Blocks (Without Attributes) to Excel - Overview",
          "Creating the ExportBlocks Method",
          "Creating Export Blocks UI and Running the Code",
          "Exporting Blocks (With Attributes) to Excel - Overview",
          "Creating the User Interface for exporting Blocks to Excel",
          "Creation of BlocksForm UI",
          "Coding the BlocksForm Load Event",
          "Testing the BlocksForm UI",
          "Coding the BlocksForm to populate the Listboxes",
          "Coding the BlocksForm Export Button",
          "Coding the ExportBlocksWithAttributes Method",
          "Running and Testing ExportBlocksWithAttributes Method."
        ],
        "Section 3 - Importing Excel File into AutoCAD": [
          "Section Overview - Import Excel File into AutoCAD",
          "Importing Lines from Excel File into AutoCAD - Overview",
          "Creating ImportExcelUtil Class",
          "Creating the ImportLines Method",
          "Creating the UI for the ImportLines Method",
          "Coding the ImportLines UI code behind.",
          "Running and Testing ImportLines Method",
          "Importing MTexts into AutoCAD - Overview",
          "Creating the ImportMTexts Method",
          "Creating ImportMTexts User Interface",
          "Running and Testing ImportMTexts Method",
          "Importing Polylines from Excel File into AutoCAD - Overview",
          "Creating the ImportPolylines Method",
          "Creating ImportPolylines User Interface",
          "Running and Testing ImportPolylines Method",
          "Importing Blocks (without Attributes) from Excel File into AutoCAD - Overview",
          "Creating the ImportBlocks Method",
          "Creating the ImportBlocks User Interface",
          "Running and Testing ImportBlocks Method",
          "Importing Blocks (with Attirubtes) from Excel File into AutoCAD - Overview",
          "Creating the ImportBlocksWithAttributes Method",
          "Creating the UI for ImportBlocksWithAttributes Method",
          "Running and Testing ImportBlocksWithAttributes Method"
        ],
        "Section 4 - Exporting AutoCAD Objects to a File": [
          "Exporting Lines to a File - Overview",
          "Creating the ExportToFile Utility Class",
          "Creating ExportLinesToFile Method",
          "Creating the UI for ExportLinesToFile Method",
          "Running and Testing ExportLinesToFile Method",
          "Exporting MTexts To File - Overview",
          "Creating the MTextToFile Method",
          "Creating the UI for the ExportMTextToFile Method",
          "Running and Testing ExportMTextToFile Method.",
          "Exporting Polylines to File - Overview",
          "Creating ExportPolylinesToFile Method",
          "Exporting Polylines to File - User Interface",
          "Running and Testing ExportPolylinesToFile Method",
          "Exporting Blocks (without Attributes) to File - Overview",
          "Creating the ExportBlocksToFile Method",
          "Creating ExportBlocksToFile User Interface",
          "Running and Testing ExportBlocksToFile Method",
          "Exporting Blocks (With Attributes) to a File - Overview",
          "Creating the EXportBlocksWithAttributesToFile Method",
          "Creating the UI for ExportBlocksWithAttributesToFile Method",
          "Coding the BlocksForm for ExportBlocksWithAttributeToFile Method",
          "Running and Testing ExportBlocksWithAttributesToFile Method"
        ],
        "Section 5 - Importing Text File into AutoCAD": [
          "Importing Text File into AutoCAD - Overview",
          "Importing Lines from a Text File into AutoCAD - Overview",
          "Creating the ImportFileUtil Class",
          "Creating the ImportLinesMethod",
          "Creation of ImportLines User Interface",
          "Coding the ImportLines UI button",
          "Running and Testing the ImportLines Method",
          "Importing MTexts from Text File into AutoCAD - Overview",
          "Creating the ImportMTexts Method",
          "Creating the TextStyle Manipulation Code",
          "Creating the UI for the ImportMTexts Method",
          "Running and Testing the ImportMTexts Method",
          "Importing Polylines from a Text File into AutoCAD - Overview",
          "Creating the ImportPolylines Method",
          "Creating the ImportPolylines UI",
          "Running and Testing ImportPolylines (from a File) Method",
          "Importing BLocks (without Attributes) from a Text File into AutoCAD - Overview",
          "Creating the ImportBlocks (without Attributes) Method",
          "Creating the ImportBlocks UI",
          "Running and Testing ImportBlocks (without Attributes) Method",
          "Importing Blocks (with Attributes) from a Text File into AutoCAD - Overview",
          "Creating the ImportBlocksWithAttributes From a File Method",
          "Creating the ImportBlocksWithAttributes (from a File) UI (Part 1)",
          "Creating the ImportBlocksWithAttributes (from a File) UI (Part 2)",
          "Running and Testing ImportBlocksWithAttributes (from a File) Method"
        ],
        "Section 6 - Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic knowledge of AutoCAD",
        "Basic knowledge of Excel",
        "Basic knowledge of VB .NET (would be helpful but not required)",
        "Familiarity of AutoCAD .NET API (good to have)"
      ],
      "description": "In this course, you will learn how to develop AutoCAD Plugins using VB.NET with Windows Forms that will integrate with Excel and Text Files. You will develop a project that will have all the Export and Import functionalities for both Excel Spreadsheets and Text Files (.csv and .txt).\nThis will guide you step-by-step, from method creation to designing the UI with the code behind. You will learn how to export Lines, MTexts, Polylines, Blocks with and without Attributes into Excel Spreadsheet as wells as Comma Separated Values (csv files), and Pipe Delimited Files.\nYou will also learn how to design the User Interface by grouping related controls together using the Group Container control. You will also learn how to pass data from one form to another using Fields. Simple code validations are also used in the program.\nFurthermore, for every section and individual tasks, it gives you a high level flow chart that serves as a guide in developing your methods.\nThe plugin source code will be available for you to follow along. You are free to modify and use the code for your respective needs.\nBy the time you finish this course, you will have the fully functional plugin complete with User Interfaces that you can use right away at work.\nJoin me and explore the world of AutoCAD, VB.NET, and Excel.",
      "target_audience": [
        "AutoCAD Users who want to learn how to interact Excel and AutoCAD using VB .NET",
        "AutoCAD Developers (AutoLISP, VBA, C#, VB .NET)",
        "Quantity Surveyors",
        "Cost Estimators"
      ]
    },
    {
      "title": "Core Coding Principles",
      "url": "https://www.udemy.com/course/core-coding-principles/",
      "bio": "This course is for developers who want to improve their ability to write good, clean, maintainable code",
      "objectives": [
        "Understand why code quality is important and how it enables effective software development",
        "Describe key coding principles such as cohesion & coupling, DRY, and the SOLID principles",
        "Improve your reasoning ability about code quality by using a variety of lenses",
        "Write cleaner, more readable, more communicative, more flexible code than before",
        "Discuss code quality ideas amongst a team and be able to, as a team, work towards agreement on a team’s coding standards"
      ],
      "course_content": {
        "Welcome to Core Coding Principles": [
          "Introduction",
          "Welcome to Core Coding Principles"
        ],
        "Axioms and Lenses": [
          "Axioms: What are they, why talk about them?",
          "Axiom 1: Managing Complexity is at the Heart of Software Development",
          "Axiom 2: Code is Required for any Sufficiently Complex Problem",
          "Axiom 3: Coding is High Read, Low Write System",
          "Lemma 1: Code Quality Matters",
          "Axiom 4: We can use Lenses to Evaluate Code",
          "House of Lenses: How Lenses Relate to One Another",
          "Notes, Further Reading and Exercises"
        ],
        "Values": [
          "Introduction: What are Values?",
          "Communication",
          "Simplicity",
          "Flexibility",
          "End Note",
          "Notes, Further Reading and Exercises"
        ],
        "Concept: Coupling & Cohesion": [
          "Introduction",
          "Coupling Overview",
          "Types of Coupling: Semantic and Data Coupling",
          "Semantic Coupling 1: Content Coupling",
          "Semantic Coupling 2: Common Coupling",
          "Semantic Coupling 3: Subclass Coupling",
          "Semantic Coupling 4: Temporal Coupling",
          "Semantic Coupling 5: Control Coupling",
          "Semantic Coupling 6: External Coupling",
          "Data Coupling 1: Data Stamp Coupling",
          "Data Coupling 2: Simple Object Coupling",
          "Data Coupling 3: Simple Data Coupling",
          "Cohesion",
          "Encapsulation",
          "End Note",
          "Notes and Further Reading"
        ],
        "Concept: Refactoring": [
          "What is Refactoring?",
          "The Practice of Refactoring",
          "Refactoring Demo 1: Rename",
          "Refactoring Demo 2: Move",
          "Refactoring Demo 3: Delete",
          "Refactoring Demo 4: Extract and Inline",
          "Refactoring Demo 5: Summary and Thoughts",
          "Notes, Further Reading and Exercises",
          "Worked Example: Tennis Refactoring Kata Intro",
          "Worked Example: Tennis Refactoring Kata Extended"
        ],
        "Concept: Cyclomatic Complexity": [
          "Cyclomatic Complexity (and Nesting)",
          "Demo Part 1: Refactoring a Sample Project to Reduce Cyclomatic Complexity",
          "Demo Part 2: Move Parameter to the Constructor, Introduce Better Types",
          "Demo Part 3: Further Reduce Parameters by Introducing a Class",
          "Demo Part 4: Final Test Refactorings - Introducing a SUT Builder",
          "Further Reading and Extercises"
        ],
        "Principle: Kent Beck's Development Principles": [
          "Introduction",
          "Local Consequences",
          "Minimize Repetition",
          "Symmetry",
          "Declarative Expression",
          "Rates of Change",
          "Summary",
          "Further Reading and Exercises"
        ],
        "Heuristic: DRY": [
          "What is DRY and what is it not?",
          "Common Duplication Forms",
          "Pitfalls of DRY",
          "Notes and Further Reading"
        ],
        "Heuristic: Four Rules of Simple Design": [
          "Introduction: Kent Beck's Formulation",
          "Martin Fowler's Formulation",
          "J.B Rainsberger's Formulation",
          "Applying the \"Four Rules\" of Simple Design",
          "Notes, Further Reading and an Exercise"
        ],
        "Principle: SOLID": [
          "Introduction",
          "Single Responsibility Principle",
          "Exercise: Single Responsibility Priciple",
          "Open/Closed Principle",
          "Exercise: Open/Closed Principle",
          "Liskov Substitution Principle",
          "LSP Example: Invariants",
          "LSP Example: Pre- and Post- Conditions",
          "LSP Furthur Thoughts",
          "Exercise: Liskov Substitution Principle",
          "Interface Segregation Principle",
          "Dependency Inversion Principle",
          "Summary and Final Thoughts",
          "Notes, Further Reading and an Exercise"
        ]
      },
      "requirements": [
        "Developers can code in C#",
        "Visual Studio 2022"
      ],
      "description": "The course is for developers who are looking to improve their ability to write good, clean, maintainable code. In it, we cover key coding principles that help to develop a language for discussion within the team. These include coupling and cohesion, the SOLID principles, DRY.\nNote: the course examples and exercises are in C#, but the theory covered is applicable in all OO languages.\nGoals -\n• To get developers thinking about code quality\n• To provide developers with the tools they need to discuss and evaluate code quality\n• To get developers to build alignment about what “good” code is\n• To provide developers with some guidelines about how to go about writing better code\n\n\nCourse Structure -\nThe following topics are covered:\n• Preparation – what is the team’s existing understanding of good code?\n• Lenses for Thinking about Code Quality - Thinking about programming like Kent Beck:\nCore Values of Software Development\nKey Principles\nThe Four Rules of Simple Design\n• Cohesion and Coupling\n• DRY\n• SOLID Principles:\nSingle Responsibility Principle\nOpen-Closed Principle\nLiskov Substitution Principle\nInterface Segregation Principle\nDependency Inversion Principle\n• The Practice of Writing Clean Code:\nCoding Standards\nMeaningful naming\nFunctions\nComments\nLearning Outcomes\nAt the end of this course developers will be able to:\nUnderstand why code quality is important and how it enables effective software development\nDescribe key coding principles such as cohesion & coupling, DRY, and the SOLID principles\nReason about code quality using a variety of lenses\nDiscuss code quality ideas among a team and be able to, as a team, work towards alignment and agreement on the team’s coding standards\nWrite cleaner, more readable, more communicative, more flexible code than before",
      "target_audience": [
        "C# Developers who are wanting to improve their ability to write good, clean, maintainable code"
      ]
    },
    {
      "title": "Center of Excellence (CoE)",
      "url": "https://www.udemy.com/course/center-of-excellence-coe/",
      "bio": "Learn the basic CoE model and it's various benefits, implementation along with the Interaction Model.",
      "objectives": [
        "Understand CoE structure, it's functioning and Implement CoE successfully within your company."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "CoE Definition",
          "CoE Model"
        ],
        "CoE - Prime Objectives": [
          "Prime Objectives - Part 1",
          "Prime Objectives - Part 2"
        ],
        "Governance Structure": [
          "Governance Structure Overview",
          "Leadership Team",
          "Operations Leadership Team"
        ],
        "Implementation": [
          "Implementation - Plan, Do, Check, Act",
          "CoE Interaction Model"
        ],
        "Testing Center of Excellence (TCoE) Example": [
          "Testing Center of Excellence (TCOE)",
          "TCoE - Return on Investment (ROI)"
        ],
        "Continuous Journey": [
          "Journey"
        ]
      },
      "requirements": [
        "Basic Project team understanding."
      ],
      "description": "Understand CoE structure, its functioning, the efficient structure and how to Implement CoE successfully within the company.\nMaster the CoE or TCoE Framework and get that Confidence into your Professional career.\n\nIntroduction to the CoE and definition.\nCoE objectives.\nLearn about the Governance structure that exists in the CoE.\nFind out the Responsibilities of the Leadership and Operations teams.\nKnow about the 'Implementation' - a continuous cycle\nUnderstand the Interaction Model.\nAn example of the TCoE (Testing Center of Excellence) for better understanding.\nCoE Journey.\nThe term Center of Excellence (CoE) is becoming a popular way of focusing attention in many organisations. This course will add to your skill-set and can definitely give you an edge over others in your professional career.\n\nContent and Overview\nSuitable for IT Professionals, Testing Professionals, Project Managers and for those who are planning to begin their CoE journey. The course contents are simple to understand and students can straightaway start to implement the best practices of CoE. It talks about the definition, CoE model, objectives, Governance structure, Interaction model, ROI and TCoE example.\nStudents completing the course will have the knowledge to create or work in the CoE model with lots of confidence and can really add a value to their projects.",
      "target_audience": [
        "Anyone who wants to understand CoE in the IT industry."
      ]
    },
    {
      "title": "Learn you some Lambda best practice for great good!",
      "url": "https://www.udemy.com/course/learn-you-some-lambda-best-practice-for-great-good/",
      "bio": "Become an AWS Lambda blackbelt.",
      "objectives": [
        "Learn best practices for working with AWS Lambda.",
        "Understand how to optimize performance of Lambda functions.",
        "Know the cost pitfalls for Lambda before they can bite you!",
        "Understand how to make your serverless application more resilient.",
        "Learn about latest Lambda features such as Provisioned Concurrency and Lambda Destinations.",
        "Learn security best practices."
      ],
      "course_content": {
        "Introduction": [
          "About your instructor",
          "About this course"
        ],
        "Performance": [
          "Tuning function memory",
          "What's in a cold start?",
          "What affects the initialization time?",
          "Measuring cold start performance",
          "Make cold starts faster [node.js]",
          "Introduction to Provisioned Concurrency",
          "When to use Provisioned Concurrency",
          "Enable HTTP keep-alive",
          "Process data in parallel [node.js]"
        ],
        "Scalability": [
          "Fan-out",
          "Controlling concurrency",
          "API Gateway service proxies",
          "Load testing",
          "Provisioned concurrency",
          "Handling RDS connections"
        ],
        "Security": [
          "Principle of least privilege",
          "Secret management part 1",
          "Secret management part 2",
          "API Gateway",
          "Server-side encryption"
        ],
        "Resilience": [
          "Multi-region, active-active",
          "Handling partial failures",
          "Standardise error handling through middlewares/wrappers",
          "When to use Lambda Destinations?"
        ],
        "Observability": [
          "Alerts you can't do without",
          "Logging",
          "Distributed tracing",
          "Distributed tracing with X-Ray",
          "Distributed tracing with Lumigo",
          "Distributed tracing with Epsagon",
          "Distributed tracing with Thundra",
          "Distributed tracing summary",
          "Correlation IDs",
          "Lambda powertools [node.js]"
        ],
        "Cost": [
          "Tuning function memory",
          "Cost monitoring tools",
          "Watch out for costs for peripheral services",
          "Keeping CloudWatch Logs cost in check",
          "SNS vs SQS vs EventBridge vs Kinesis",
          "API Gateway service proxies",
          "API Gateway REST API vs HTTP API vs ALB",
          "Use batching to reduce cost",
          "Lambda Provisioned Concurrency"
        ],
        "Next Steps...": [
          "Congratulation! And what next..."
        ]
      },
      "requirements": [
        "Have working knowledge of AWS and related services such as Lambda and API Gateway"
      ],
      "description": "Embarking on a journey with AWS Lambda can initially appear straightforward, leading you to swiftly deploy your projects. However, beneath the surface, there lie myriad crucial decisions whose implications could manifest significantly down the line. Selecting between the API Gateway or Application Load Balancer (ALB), for instance, is a decision where a misstep could cost you thousands of dollars monthly. While there's a plethora of resources to assist in launching your endeavor with Lambda, many fall short when it comes to navigating the real-world challenges that await.\nThis course is meticulously designed to bridge this gap, ensuring you are adeptly prepared to tackle real-world scenarios head-on. It goes beyond mere introductory content, delving into the critical best practices of AWS Lambda surrounding performance optimization, cost-efficiency, robust security measures, and much more. By the culmination of this course, you will possess the nuanced understanding necessary to make well-informed decisions regarding AWS service integrations with Lambda, empowering you to architect highly scalable, resilient, and cost-effective serverless applications.\nWe will explore the cutting-edge features unveiled in re:Invent 2019, such as Provisioned Concurrency and Lambda Destinations, arming you with the knowledge on when and how to utilize them optimally. Through a blend of theory and hands-on exercises, you will unravel the intricacies of AWS Lambda, making strides towards mastering serverless architecture. The rich learning experience is further augmented with real-world case studies, demonstrating how seasoned professionals tackle complex problems using AWS Lambda.\nThis course is an indispensable resource for those looking to not only get acquainted with AWS Lambda but to thoroughly understand the platform's potential and how to harness it effectively in real-world scenarios. So, if you're seeking to transcend the basics and immerse yourself in a comprehensive learning expedition towards mastering AWS Lambda in a real-world context, this is the quintessential course for you. Your voyage towards becoming proficient in navigating the multifaceted challenges and opportunities of serverless applications begins here.",
      "target_audience": [
        "AWS developers",
        "Serverless enthusiasts"
      ]
    },
    {
      "title": "Linux Command Line For Developers Masterclass - Bash Shell",
      "url": "https://www.udemy.com/course/linux-command-line-masterclass/",
      "bio": "Learn the Linux Administration using Linux Command Line and Bash Shell. Learn to Use Linux From Scratch as A Developer.",
      "objectives": [
        "Become the Linux Command Line Super Hero from Scratch!",
        "Learn to Use Linux as a Software Development and Deployment Tool.",
        "Ditch the GUI and Save Time by Getting Things Done Quickly Using The Command Line.",
        "Get Control: Learn to Manage Remote System Resources and Services.",
        "Get A Better Understanding of OS: Learn underlying mechanisms of Linux systems.",
        "Learn the Basics of Bash Scripting by Creating Your Own Bash Scripts and Using Community Scripts."
      ],
      "course_content": {
        "Introduction To Linux": [
          "Introduction to the course",
          "What Are Operating Systems",
          "The Correct Pronunciation",
          "Resources And Practice Important!",
          "A Brief History Of How It Started",
          "Why Distributions And Not Operating System",
          "Debian vs. Fedora vs. macOS (Unix and Unix Like)",
          "Installing Ubuntu on MacOs",
          "Installing Ubuntu On Windows Using WSL2"
        ],
        "The Linux File System": [
          "Introduction To File System Module",
          "Basic Structure Of A Command",
          "Navigation Inside the Terminal",
          "Don’t Try To Memorise Commands",
          "Overview Of Directory Structure",
          "Understanding The Directory Structure In Linux",
          "The `ls` Command in Linux",
          "`ls` Long Format",
          "The `file` Command",
          "The `less` Command",
          "Introduction To Wildcards",
          "Deeper Dive Into Character Classes",
          "mkdir - Create Directories",
          "Linux File Systems Quiz 1",
          "cp - Copy Files And Directories",
          "mv - Move and Rename Files",
          "rm - Remove Files And Directories",
          "Links In Linux",
          "ln - Create Links",
          "ln - Overwrite Existing Files",
          "Identifying Links In Terminal",
          "★Practice★ Exercise For Linux File System",
          "★Solution★ To Practice Exercise",
          "Linux File System Quiz 2"
        ],
        "Understanding Commands In Linux": [
          "Introduction - Understanding Commands In Linux",
          "Understanding What Are Commands",
          "type - Check Command Type",
          "which - Executable Location",
          "help - Info On Built-ins",
          "help vs --help",
          "man - Program's Manual",
          "apropos - Display Suitable Command",
          "whatis - One Line Man Pages",
          "info - Display Info Entry",
          "★Practice★ Exercise For Commands In Linux",
          "★Solution★ Exercise For Commands In Linux",
          "Understand Commands In Linux Quiz"
        ],
        "Command Line Redirection": [
          "Intro To Command Line Redirection",
          "Streams And Redirection",
          "Redirecting stdout",
          "Redirecting stderr",
          "Redirecting stdin",
          "Redirection Order",
          "★Practice★ Redirection",
          "★Solution★ Redirection",
          "grep - Global Regular Expression Print",
          "Command Line Redirection Quiz 1",
          "uniq - Filter Adjacent Duplicate Lines",
          "wc - Word Count",
          "head and tail commands",
          "sort - Command",
          "Pipelines",
          "Pipelines And Filters",
          "★Practice★ Pipelines and Filters",
          "★Solution★ Pipelines and Filters",
          "Command Line Redirection Quiz 2"
        ],
        "Mastering Shell Expansions": [
          "Intro To Mastering Shell Expansions",
          "Expansion",
          "Pathname Expansion",
          "Tilde Expansion",
          "Arithmetic Expansion",
          "Brace Expansion",
          "Parameter Expansion",
          "Command Substitution",
          "Mastering Shell Expansions Quiz 1",
          "Variable Expansion",
          "Alias Expansion",
          "History Expansion",
          "Word Splitting",
          "★Practice★ Mastering Shell Expansions",
          "★Solution★ Mastering Shell Expansions",
          "Quoting",
          "Double Quotes",
          "Single Quotes",
          "Mastering Shell Expansions Quiz 2"
        ],
        "Keyboard Tricks": [
          "Intro: Keyboard Tricks",
          "Bash Readline",
          "Cursor Movements",
          "Modifying Text",
          "Text Completion",
          "Using History",
          "★Practice★ Keyboard Tricks",
          "★Solution★ Keyboard Tricks"
        ],
        "Linux Permissions": [
          "Intro Linux Permissions",
          "Multi-User Operating Systems",
          "Owner, Group, Everybody",
          "id - User Identity",
          "read, write, execute",
          "chmod - Symbolic Mode",
          "chmod - Numeric Mode",
          "★Practice★ Linux Permissions",
          "★Solution★ Linux Permissions",
          "Linux Permissions Quiz 1",
          "Changing Identities",
          "Managing Users",
          "su - Switching Users",
          "Understanding Groups",
          "sudo and Sudoers File",
          "File Owners",
          "chown - Change File Owner",
          "chgrp - Change Group",
          "Linux Permissions Quiz 2"
        ],
        "Linux Processes": [
          "Intro: Linux Processes",
          "Linux Processes And Multitasking",
          "PIDs, Child and Daemons",
          "ps - View Processes",
          "Process States",
          "top - Process Interactive Utility",
          "Signals",
          "Shutting Down System",
          "★Practice★ Linux Process",
          "★Solution★ Linux Process",
          "Linux Processes Quiz"
        ],
        "Linux Environment": [
          "Linux Environment",
          "Understanding Environment",
          "Environment And Shell Variables",
          "How Is Environment Established",
          "Startup File",
          "The PATH",
          "★Practice★ Modifying the .bashrc File",
          "★Solution★ Modifying the .bashrc File",
          "Linux Environment Quiz"
        ],
        "Introduction To Vi": [
          "Introduction To Vi",
          "History of VI",
          "Editing Modes In VI",
          "VI Basics",
          "Deleting Text In VI",
          "Cut, Copy, Paste",
          "Joining Lines",
          "Search And Replace",
          "Editing Multiple Files",
          "Copying Content Between Files",
          "★Practice★ Mastering VI Editor",
          "★Solution★ Mastering VI Editor",
          "Introduction To Vi Quiz"
        ]
      },
      "requirements": [
        "No experience with Linux or Command Line Interface needed. We start from Scratch.",
        "A Computer with macOS, Windows or Linux Installed."
      ],
      "description": "Unlock the full potential of Linux and elevate your development skills with my \"Linux Command Line For Developers Masterclass.\" Designed specifically for developers, this course will guide you through the intricacies of the Linux command line, providing you with the knowledge and tools needed to navigate and control Linux environments efficiently.\n\n\nHi, I am Manik, a full-stack developer and your instructor for this course. With my experience as a programmer, I understand the essential skills you need to master the command line and leverage Linux as a powerful development and deployment tool. I've structured the curriculum to get you started quickly and equip you with practical command-line proficiency for real-world applications.\n\n\nWhat You Will Learn:\nIntroduction and History of Linux: Begin your journey with a solid foundation, understanding how Linux evolved into the powerhouse it is today.\nLinux File System: Master the structure and management of files in Linux, a crucial skill for any developer.\nUnderstanding and Deep Dive into Commands: Gain in-depth knowledge of essential Linux commands to manipulate the system and files.\nCommand Line Redirection: Learn to redirect input and output to streamline your workflow in the Linux environment.\nMastering Shell Expansions: Discover the power of shell expansions to simplify complex commands and scripts.\nKeyboard Tricks: Enhance your efficiency with time-saving keyboard shortcuts.\nManaging Permissions in Linux: Understand the permissions model in Linux to manage access to files and directories securely.\nUnderstanding and Managing Linux Processes: Get to grips with process management, crucial for optimizing performance and resource allocation.\nLinux Environment: Delve into the Linux environment variables and configurations to tailor your workspace to your needs.\nEditing Text Using VI: Become proficient in VI, the ubiquitous text editor, to create and edit scripts and code.\nPackage Management: Learn to manage software and dependencies with Linux’s package management systems.\nStorage Management: Understand how to manage storage resources in Linux efficiently.\nNetworking: Explore the basics of networking in Linux to ensure your applications communicate effectively.\nSearching For Files: Master the techniques for finding files quickly and efficiently.\nArchiving And Compression: Learn to use Linux tools for archiving and compressing files, which are essential for data management.\nBash Scripting Basics: Start automating tasks and building scripts with Bash to enhance your development productivity.\n\n\n\nProjects:\nThroughout this masterclass, the practical application of your newfound skills is paramount. While exploring bash scripting, we'll dive into two engaging projects to solidify your command line expertise. First, you'll create an ASCII art animated party parrot, bringing vibrant animations to life within your terminal. Then, we'll develop a news application, enabling you to fetch the latest news directly in the terminal using specific search keywords as arguments. These projects are designed to test your skills and add a touch of creativity and real-world utility to your learning journey.\n\n\nList Of Common Commands (NOT a complete list):\nls\nfile\nless\nmkdir\ncp\nmv\nrm\nln\ntype\nwhich\nhelp\nman\napropos\nwhatis\ninfo\nexec\ngrep\nuniq\nwc\nhead\ntail\nsort\nid\nchmod\nsu\nsudo\nchown\nchgrp\nps\ntop\nvi\napt\nping\ntraceroute\nnetstat\nftp\nssh\nlocate\nfind\ngzip\nbzip2\ntar\nzip\ncat\nAnd Lots More\n\n\nEmbark on your Linux command line adventure today! Join me in the \"Linux Command Line For Developers Masterclass\" and transform how you navigate, develop, and deploy with Linux. Let's unlock your full potential together. Sign up now and start mastering Linux!",
      "target_audience": [
        "Anyone who is starting with using the Linux Command Line.",
        "If you are a software developer and want to learn Linux Command Line to enhance your skills.",
        "Anyone who wants to master the Linux command line skills.",
        "If you want to start your career as a Linux System Administrator."
      ]
    },
    {
      "title": "Business Central Programming - Beyond the Basics",
      "url": "https://www.udemy.com/course/business-central/",
      "bio": "Advance Your Skills with Business Central Programming",
      "objectives": [
        "Learn to use AI-assisted AL programming with GitHub Copilot.",
        "You will learn key programming topics such as working with events and implementing automated testing.",
        "Learn how to extend Business Central using Power Platform by creating custom Canvas Apps.",
        "Learn to use the Performance Profiler, Debugger, and Page Scripting Tool to enhance your day-to-day work in Business Central.",
        "Learn how single-instance codeunits maintain data consistency across sessions, while install and upgrade codeunits streamline app deployment.",
        "Learn to navigate the Admin Center and perform essential tasks like environment handling, and more.",
        "Discover how to monitor your system’s health and performance using telemetry, ensuring your Business Central environment is running smoothly."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installing Business Central and Publishing your Extensions": [
          "Notes regarding the type of Business Central installation you are using",
          "Installing Business Central On-Premises on Docker Desktop",
          "PowerShell scripts for Installing Business Central On-Premises on Docker Desktop",
          "Install VS Code and AL Extensions",
          "Notes on publishing to an Online (Sandbox) or On-Premises Environment",
          "Publishing your app to a Business Central Sandbox environment",
          "Publishing your app to a Business Central On-Premises environment",
          "Uploading an extension to a production environment",
          "Installing and Publishing Quiz"
        ],
        "Essential Business Central Tools": [
          "Using the Performance Profiler",
          "How to start debugging your code",
          "Debugging with Conditional Breakpoints",
          "Attach and debug next",
          "Using the Page Scripting Tool",
          "Accessing the SQL Database of the Business Central On-Premises Environment",
          "Note on how you can create an Azure free account",
          "BC Tools Quiz"
        ],
        "AL Programming Topics": [
          "Programming a simple Job Queue",
          "Job Queue Quiz",
          "Events: concepts & example",
          "How to subscribe and handle an event",
          "Creating an event publisher",
          "Creating a manual event subscriber",
          "Using the Event Recorder",
          "Events Quiz",
          "Creating a Notification - concept & demonstration",
          "Creating a Notification Quiz",
          "Single Instance Codeunits",
          "Single Instance Event Subscriber",
          "Single Instance Quiz",
          "Install Codeunits - concept & demonstration",
          "Upgrade Codeunits - concept & demonstration",
          "Install & Upgrade Codeunits Quiz",
          "Collect and display errors using the Error Message codeunits",
          "Collecting Errors with Error Message Codeunits Quiz",
          "Implementing Interfaces in the AL Code",
          "Implementing Interfaces in AL - Quiz"
        ],
        "Business Central & AI": [
          "Using GitHub Copilot for assisted AL Programming",
          "Using GitHub Copilot Edits & Chat for assisted AL Programming",
          "AI-Powered Code Generation with GitHub Copilot Agent",
          "Improving GitHub Copilot Agent output by using a instructions file",
          "GitHub Copilot in AL Programming Quiz",
          "Connecting to Azure AI Service for Language (Sentiment Analysis)",
          "Connecting to Azure AI Service for Language (Entity Recognition)"
        ],
        "Extending Business Central with Power Platform": [
          "Creating your Power Platform account",
          "Building your first Power App and connecting it to Business Central",
          "Publishing your Power App",
          "Enabling Power Automate in Business Central",
          "Creating a simple Power Automate flow for Business Central"
        ],
        "Automated Testing": [
          "Install the Test Runner",
          "Automated Testing in AL - concept demonstration",
          "AL Automated Testing Quiz",
          "Creating Page Scripts for Automated Tests",
          "Automating Page Script Tests Using BC Replay",
          "Tests Catch Bad Code - Simulating a Failure With Test Automation",
          "Automated Tests with Page Scripts Quiz"
        ],
        "Admin Center Operations *(not for OnPrem)": [
          "Introduction to the Admin Center",
          "How to open the Admin Center",
          "Roles required to access the Admin Center",
          "The Admin Center environments page",
          "How to create a new environment",
          "How to copy an environment",
          "Rename or delete an environment",
          "Create a security group for your environment",
          "Notification Recipients",
          "How to manage your apps",
          "Schedule an environment update",
          "The Capacity Menu in Admin Center",
          "Adding a new User to your BC Sandbox",
          "Admin Center Operations Quiz"
        ],
        "Data Administration": [
          "Navigating to Data Administration on BC On-Premises",
          "Data cleaning reports - demonstration",
          "Date compression - demonstration",
          "Data retention policy - demonstration",
          "Data Administration Quiz"
        ],
        "Telemetry": [
          "Introduction to Telemetry",
          "Basic Telemetry in Admin Center *(not for OnPrem)",
          "Advanced Telemetry in Azure Insights",
          "Telemetry in Azure Insights for Business Central On-Premises",
          "How to query the telemetry logs from Azure Insights",
          "Create a automated Power BI Telemetry Report",
          "Implement Telemetry with the help of the LogMessage function",
          "Implement Telemetry with the help of \"Telemetry Feature\"",
          "Implement a Telemetry Alert",
          "Telemetry Quiz"
        ]
      },
      "requirements": [
        "Familiarity with basic AL or C/AL programming concepts and with the Dynamics NAV or Business Central platform are beneficial, as they can enhance your ability to grasp the material more effectively. To get the most out of this course, you’ll need a computer with internet access to set up and practice in Business Central environments, along with a proactive mindset and a willingness to engage in hands-on learning!"
      ],
      "description": "Welcome to the Business Central Programming - Beyond the Basics course!\nI'm here to guide you through this in-depth journey. This course is meticulously designed to equip you with the foundational knowledge and practical skills needed to confidently extend, work with and optimize Business Central.\nWhat You’ll Learn:\nInstalling, Publishing, Debugging & Tools: Configure your environment to practice coding exercises, learn how to publish your apps to your on-premises or sandbox environment, and use essential tools like the debugger, performance profiler, and page scripting tool.\nAL Programming Topics: Improve essential programming skills in Business Central. Learn about event-driven programming, app lifecycle management with specialized codeunits, creating notifications, using GitHub Copilot to assist with writing AL code.\nAutomated Testing: Learn concepts related to automated testing.\nAdmin Center Operations: Learn to navigate the Admin Center and perform essential tasks like environment handling, specifically tailored for online hosted environments.\nData Administration: Learn to optimize the storage capacity of your environment.\nTelemetry: Discover how to monitor your system’s health and performance using telemetry, ensuring your Business Central environment is running smoothly.\nJoin me in this comprehensive course and take the next step in your professional journey. By the end of this course, you'll have the confidence and skills to effectively work with Microsoft Dynamics 365 Business Central, setting you up for success in your career.\n\n\nImportant: This course is not intended to prepare you for the MB-820 Certification. Instead, it focuses on practical, real-world concepts to support you in your day-to-day work as a Business Central developer.",
      "target_audience": [
        "Ideal for developers seeking to deepen their understanding of Business Central programming.",
        "This course is useful for functional consultants who want to gain technical insights to better support their clients' implementations.",
        "This course is designed for individuals aiming to break into the ERP field with a solid foundation in Business Central.",
        "Great for anyone passionate about enterprise resource planning who wants to gain technical knowledge of Business Central.",
        "Perfect for IT professionals tasked with maintaining and troubleshooting Business Central systems."
      ]
    },
    {
      "title": "Introduction to Algorithmic Design and Analysis",
      "url": "https://www.udemy.com/course/introduction-to-algorithmic-design-and-analysis/",
      "bio": "Learn The Art of Computer Programming",
      "objectives": [
        "Learn how to design & analyze algorithms.",
        "Become a better programmer.",
        "Enhance your problem solving and critical thinking skills.",
        "Learn to think like a computer scientist."
      ],
      "course_content": {
        "Math Fundamentals for Algorithms: Summations, Series, and Bounds": [
          "Summations & Products",
          "Series & Sequences",
          "Bounding Summations",
          "Summations, Series, and Bounds"
        ],
        "Math Fundamentals for Algorithms: Set Theory": [
          "Introduction to Sets",
          "De Morgan's Laws & Other Set Operations",
          "Set Theory Quiz"
        ],
        "Math Fundamentals for Algorithms: Probability & Combinatorics": [
          "Combinations & Permutations",
          "Intro to Probability",
          "Discrete Random Variables",
          "Probability & Combinatorics"
        ],
        "Math Fundamentals for Algorithms: Recursion": [
          "Defining Recursive Functions",
          "Analyzing Recursive Functions",
          "Recursive Functions"
        ],
        "Math Fundamentals for Algorithms: Asymptotic Analysis": [
          "Asymptotic Analysis - Brief Overview",
          "Common Notations in Asymptotic Analysis",
          "Master Method",
          "Asymptotic Analysis"
        ],
        "Sorting and Divide-and-Conquer Algorithms": [
          "Maximum Subarray Algorithm",
          "Maximum Subarray Pseudocode",
          "Analyzing Maximum Subarray Algorithm",
          "Bubble Sort",
          "Bubble Sort Pseudocode, Logic, and Analysis",
          "Merge Sort",
          "Merge Pseudocode",
          "Maximum Subarray, Bubble Sort, Merge Sort"
        ],
        "Common Data Structures": [
          "Linked Lists",
          "Linked List Operations & Pseudocode",
          "Stacks & Queues",
          "Stacks & Queues Pseudocode",
          "Hash Maps",
          "Hash Map Operations With Chaining",
          "Binary Search Trees",
          "Binary Search Tree Operations",
          "Linked Lists, Stacks, Queues, Hash Maps, and BSTs"
        ],
        "Dynamic Programming & Graph Algorithms": [
          "Dynamic Programming",
          "Dynamic Programming Explanation & Rod-cutting Pseudocode",
          "Graphs, BFS, and DFS",
          "Graphs, BFS, and DFS Pseudocode",
          "Dynamic Programming & Graph Search"
        ]
      },
      "requirements": [
        "Some programming experience",
        "Precalculus"
      ],
      "description": "In this comprehensive course, students will embark on a journey to explore the fundamental principles and techniques of algorithmic design and analysis. With a strong focus on practical applications, this course is tailored to equip learners with the knowledge and skills required to solve complex computational problems efficiently.\nThroughout the course, students will delve into various essential algorithmic concepts, including:\n\n\nDivide and Conquer Algorithms: Learn to break down complex problems into simpler subproblems, solve them recursively, and combine the solutions to conquer the original problem.\nSorting: Gain insights into various sorting techniques, such as bubble sort, and mergesort, and how to analyze these algorithms.\nHash Maps: Understand the power of hashing and its role in creating efficient data structures for fast data retrieval and storage.\nStacks and Queues: Explore the functionality of these linear data structures and their applications in algorithmic design.\nLinked Lists: Grasp the intricacies of linked lists and their role in dynamic memory allocation and data manipulation.\nDynamic Programming: Unravel the art of solving problems by breaking them down into overlapping subproblems and solving them in a bottom-up manner.\nGraphs, BFS, and DFS: Delve into graph theory, and master breadth-first search (BFS) and depth-first search (DFS) algorithms to traverse and analyze complex networks.\nBinary Search Trees: Learn about the structure and operations of binary search trees, and understand their importance in organizing hierarchical data efficiently.\nAsymptotic Analysis: Develop a solid understanding of Big O, Big Omega, and Big Theta notations to evaluate the efficiency and scalability of algorithms.\nBy the end of this course, students will have a strong foundation in algorithmic design and analysis, empowering them to tackle complex computational challenges with confidence and precision.",
      "target_audience": [
        "Beginner developers",
        "Math or computer science students"
      ]
    },
    {
      "title": "GUI and Speech Recognition technique with Python for AI",
      "url": "https://www.udemy.com/course/python-tkinter-for-gui-project-on-voice-user-interface/",
      "bio": "Graphical and Voice User Interface Development using Python Basic to Advance",
      "objectives": [
        "Master GUI Development with Tkinter",
        "Learn Geometry Managers in Tkinter: Grid ,Pack and Place",
        "Understand how you can create your own styles and use them in your applications",
        "Learn widgets such as Button,Canvas ,Check, Entry, Label, Listbox, Menubutton, Message, Radiobutton, Scrollbar, Toplevel, Spinbox, PanedWindow, LabelFrame",
        "Learn VUI (Voice User Interface)",
        "Building basic Apps With TKinter",
        "Text to Speech Conversion using Python",
        "Speech to Text Conversion using Python",
        "Speech Recognition in Python using Google Speech API",
        "Project on GUI and VUI such as Text to Speech, Digital Clock, Today's Day, Restart your PC with Speech Recognition, Convert image to text and text to speech"
      ],
      "course_content": {
        "Introduction": [
          "Why to join this course?",
          "What is CLI, GUI and VUI",
          "Meet Trainer for this Course"
        ],
        "Python Basic to Advance": [
          "Introduction of Python and Python Libraries",
          "Python brief Introduction",
          "Environment Set up",
          "Data Type, Variable and Keywords",
          "How to produce output ? / Print Statement in Python",
          "how to take input?",
          "List, Tuple, Set, Dictionary",
          "List Operations in details",
          "Set Operations in details",
          "Tuple Operations in details",
          "Dictionary Operations in details",
          "String Operation in Python",
          "Data Type Conversion",
          "Math library",
          "Collections_Module_in_Python",
          "Queue Module",
          "Generation of Random Number and Range Functions",
          "Importance of Indentation",
          "Sequential, Selection, Repetition",
          "Create, Edit, Write, Read Text File",
          "Datetime and Calendar Module",
          "eval(),exec(),repr() function",
          "Exception Handling in Python",
          "Iterator",
          "Generator and Decorators",
          "isinstance, Use of format, Timeit(), round(), Slice and abs()",
          "User Define Functions and inbuilt Function",
          "Global and local Variables in Functions",
          "Lambda, Map, Filter and Reduce Function",
          "List Comprehension, Sets, Frozensets and Assertion",
          "Logging Module",
          "CSV file Operations using Python",
          "Regular Expression",
          "Switch Case",
          "Ternary Operator",
          "Types of Operators",
          "Zip Function",
          "Numpy Library Tutorial 1",
          "Numpy Library Tutorial 2",
          "Numpy Library Tutorial 3",
          "Numpy Library Tutorial 4",
          "Numpy Library Tutorial 5",
          "Numpy Library Tutorial 6",
          "Numpy Library Tutorial 7",
          "Numpy Official Site Visit",
          "Python Crash Course"
        ],
        "Graphical User Interface development using Tkinter": [
          "Introduction of Tkinter Library Use for GUI Development",
          "How to install Python and Other Libraries",
          "How to use E book and Notes",
          "Tkinter Tutorial 1",
          "Tkinter Tutorial 2",
          "Tkinter Tutorial 3",
          "Tkinter Tutorial 4",
          "Tkinter Tutorial 5",
          "Tkinter Tutorial 6",
          "Tkinter Tutorial 7",
          "Tkinter Tutorial 8",
          "Tkinter Tutorial 9",
          "Tkinter Tutorial 10",
          "Tkinter Tutorial 11",
          "Tkinter Tutorial 12"
        ],
        "Speech Recognition": [
          "Voice is Future of User Interface",
          "Text to Speech",
          "Text to Speech Output",
          "Speech to Text",
          "Speech to Text Output",
          "Speech Recognition in Python using Google Speech API"
        ],
        "Project of Graphical User Interface and Voice User Interface": [
          "Text to Speech Project with GUI and VUI",
          "Digital Clock",
          "Today's Day using Speech Recognition",
          "Project on Restart your Computer with Speech Recognition",
          "Convert image to text and text to speech"
        ],
        "Additional and New Learning": [
          "Difference Between Speech Recognition and Natural Language Processing",
          "Natural Language Processing"
        ]
      },
      "requirements": [
        "It start with Basics",
        "Only a passion for Learning",
        "All software used in this course is either available for Free or as a Demo version",
        "This course is intended for absolute beginners in programming"
      ],
      "description": "\"Python Masterclass: GUI Development and Speech Recognition for AI Innovation\"\n\n\nDive into the realm of graphical user interfaces (GUI), voice user interfaces (VUI), and command line interfaces (CLI) with our comprehensive Python Masterclass. This course explores the fundamental concepts and advanced techniques behind CLI, GUI, and VUI, equipping you with essential skills for interface development.\n\n\nDelve into Tkinter, Python's prominent library for GUI development, learning how to create interactive and visually appealing applications. Uncover the power of speech recognition technology, mastering text-to-speech and speech-to-text conversions, and discover the intricacies of VUI design.\n\n\nFrom creating intuitive command line interfaces to crafting immersive graphical and voice-based experiences, this course offers hands-on projects that integrate GUI and VUI functionalities. Through practical applications, you'll transform theoretical knowledge into real-world skills, gaining expertise in designing seamless user interfaces.\n\n\nIdeal for aspiring GUI and VUI developers, this course provides a strong foundation for anyone embarking on a career in interface development. Whether you're a beginner or an experienced programmer, this masterclass offers in-depth insights, empowering you to create intuitive interfaces that enhance user experiences. Join us and embark on a journey to master the art of GUI development and speech recognition, unlocking endless possibilities in the world of Python-powered interfaces. Enroll now and transform your programming skills into innovative applications that captivate users and drive technological advancements.\"",
      "target_audience": [
        "Learner who wants develop GUI and VUI using Python"
      ]
    },
    {
      "title": "Intro to Embedded Systems with AVR ATMEGA32",
      "url": "https://www.udemy.com/course/introduction-to-embedded-systems-p/",
      "bio": "Learn AVR ATMEGA 32 from scratch",
      "objectives": [
        "Understand what are embedded systems and microcontrollers",
        "ATMEGA32",
        "Embedded C",
        "Create a smart home project using ATMEGA 32"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Microcontrollers",
          "Bitwise operations",
          "Embedded C",
          "Quiz 1"
        ],
        "Digital input/output and interfacing with the microcontroller": [
          "DIO pins",
          "Softwares",
          "Datasheet",
          "DIO code",
          "7-Segment",
          "7-Segment code",
          "Assignment 1",
          "LCD",
          "LCD_Driver code",
          "Keypad",
          "Keypad_Driver code",
          "DC Motor",
          "DC_Motor code",
          "Quiz 2"
        ],
        "Interrupts": [
          "Interrupt",
          "Interrupt code",
          "Quiz 3"
        ],
        "Peripherals": [
          "Analog to Digital Converter",
          "ADC_Driver",
          "Timers1",
          "Assignment 2",
          "Timers2",
          "Servo Motor",
          "Servo_Driver",
          "Quiz 4"
        ],
        "Communication Protocols": [
          "Introduction to communication protocols",
          "UART",
          "UART_Driver",
          "SPI",
          "SPI_Driver",
          "Assignment 3",
          "I2C",
          "I2C_Driver",
          "Quiz 5"
        ],
        "Final Exam and Project": [
          "Final Exam",
          "Final project"
        ],
        "Codes and lectures": [
          "Codes",
          "Lectures"
        ]
      },
      "requirements": [
        "C programming language"
      ],
      "description": "The Intro to Embedded Systems with AVR ATMEGA32 Course is the gate and start point for anyone  interested in learning embedded systems and using the ATMEGA32 microcontroller. The course starts from scratch with\n1) An introduction to embedded systems\nto know what are embedded systems and where we see them in our everyday life then the course takes you to\n2) An introduction to Microcontrollers\nand then you will get to know\n3)  How to deal with bits\nand\n4) Embedded  C\nBy having this solid ground you will be able to work with the ATMEGA32 and know its different capabilities and peripherals and how to interface with it. You will start with the\n5) Input and output pins\nThen seeing data on a\n6) 7-segment\nand\n7) LCD\nand entering data with\n8) Keypad\nAfter that you will learn how to use\n9) Dc motor\nas well as different analog input devices by using\n10) Analog Digital Converter\nthen you will control a\n11) Servo motor\nafter learning more about\n12) Timers\nand last but not least communication between microcontrollers and creating a network using\n13) UART\n14) SPI\nand\n15) I2C\nThe course is mainly divided into\n1) Theoretical lectures\nfor understanding the concept,\n2) Practical coding lectures\nto implement what you have learnt,\n3) A quiz after each section\nto make sure that you have understood that part before going on with the course and\n4) Some assignments\nto exercise by yourself and do some coding . Also at the end of the course you will get a final exam on all the topics as well as a big project to get your hands dirty with embedded systems and make your first own project. The project is a simple model for a smart home.\nThe course requires that you have a background in C programming language only. No need for any hardware, only your PC or Laptop.",
      "target_audience": [
        "Students",
        "Embedded systems passionates"
      ]
    },
    {
      "title": "Dynamic Programming Ruby, Coding Interviews and Applications",
      "url": "https://www.udemy.com/course/dynamic-programming-ruby/",
      "bio": "Become a better developer by learning how to build efficient Dynamic Programming algorithms",
      "objectives": [
        "Recognize a problem that can be solved using Dynamic Programming",
        "Come up with both a top down and bottom up Dynamic Programming solution using Ruby",
        "Use Dynamic Programming for coding interview puzzles and practical applications",
        "Improve your problem-solving skills and become a better developer",
        "Revise your recursion knowledge"
      ],
      "course_content": {},
      "requirements": [
        "Ruby programming language",
        "Familiarity with recursion, although we also cover this in the course"
      ],
      "description": "Have you ever wondered what makes a good developer? Why it is that big tech companies are increasingly asking candidates to solve challenging coding puzzles in interviews? Or why you should bother to learn about complicated algorithms?\n\n\nWith regards to technical skills a good developer has an understanding of computer science and knows when to apply this knowledge. Tech companies know that if someone has a good grasp of these fundamentals, she will likely be fine learning any programming language, using any new tool and solving a wide range of programming problems. As a developer comprehending data structures and algorithms you’ll be better equipped to tackle some of the more difficult problems both in your day-to-day job and for coding interviews.\n\n\nDynamic Programming is a topic in data structures and algorithms. It covers a method (the technical term is “algorithm paradigm”) to solve a certain class of problems. In this course we will go into some detail on this subject by going through various examples. The course is designed not to be heavy on mathematics and formal definitions. Instead you will learn through practical everyday programming algorithms and through some coding interview puzzles. We present a method to recognize problems that can be solved using dynamic programming and then build an efficient solution through small gradual steps.\n\n\nIn addition, you will also learn how to gamble professionally, how to be an air traffic controller and how to become a serious writer.*\n*Not really… but hey it’s hard to make Dynamic Programming sound exciting...\n\n\nAll code in this course can be found on github, username/project: cutajarj/DynamicProgrammingInRuby\n\n\nAt the end of the course we have a small coding exercise to test your knowledge.",
      "target_audience": [
        "Self taught developers who are looking to up their game and become better developers",
        "Experienced developers wanting to learn how to apply Dynamic Programming to solve certain classes of problems",
        "Developers wanting to prepare for an upcoming coding interview",
        "University students struggling with Dynamic Programming"
      ]
    },
    {
      "title": "Build a Chip-8 Emulator in JavaScript that runs on a browser",
      "url": "https://www.udemy.com/course/emulator/",
      "bio": "The ultimate project to have on your Portfolio, dominate an interview having talking about your amazing Chip-8 Emulator",
      "objectives": [
        "How a emulator works and how to create one",
        "How microprocessor works and how to emulate them",
        "Understand how machines work",
        "Understand how devices talk wich it other",
        "How to emulate actual hardware such as memory, display, microprocessor, sound card and keyboard"
      ],
      "course_content": {
        "Understanding what is Chip-8": [
          "Understand what Chip-8 is and the challenges we will face"
        ],
        "Starting our journey creating our Chip-8 microprocessor": [
          "Creating our Chip-8 virtual microprocessor"
        ],
        "Creating our Chip-8 Display": [
          "Creating our Display"
        ],
        "Creating the support code (Webpack) and servers (Live Server)": [
          "Setting up Webpack so we can use modern JavScript on the Browser",
          "Creating a webserver to serve our Chip-8 emulator"
        ],
        "Connecting the Display to the HTML and Scaling up the resolution": [
          "Connecting the display to the HTML",
          "Creating a multiplier to make our Display larger",
          "Creating our screen and our screen buffer",
          "Drawing our Frame Buffer on the screen"
        ],
        "Creating our Chip-8 Memory": [
          "Creating our memory"
        ],
        "Creating our Chip-8 Registers": [
          "Creating the Registers",
          "Adding and removing values from Stack using Push and Pop",
          "Checking for Stack Overflow and Stack Underflow errors"
        ],
        "Creating our Chip-8 Keyboard": [
          "Creating our Chip-8 Keyboard",
          "Mapping the Keyboard",
          "Using the mapping in our Virtual Keyboard",
          "Creating all the keyboard functions",
          "Detecting and storing key presses"
        ],
        "Create our Chip-8 charset sprites from 0-F and loading into memory": [
          "Creating the Chip-8 charset",
          "Loading character set to Chip-8 memory"
        ],
        "Drawing sprites in the display": [
          "Drawing a character on the display",
          "Understanding the Pixel Position and writing on the screen"
        ]
      },
      "requirements": [
        "Medium to advance knowledge in JavaScript",
        "Some understand about Binary number",
        "Some understand about Hexadecimal numbers",
        "Some knowledge in how microprocessor works is an advantage but not required"
      ],
      "description": "Did you ever wonder how video games work? What goes inside that little box when you press the power button? How do that tiny silicon chips talk with each other to create the amazing graphics we see on the screen and respond to each press we make on the controllers?\nIf you want to not only have a complete understanding of how the microprocessor talks to the memory, display, keyboard, and sound card, but also what happens inside with all the registers, so that is the course for you.\nIn this advanced course, you will learn how to create your very own emulator for the Chip-8 in the JavaScript that runs in any browser, so you can add it to your portfolio page and mesmerize job interviews with all your new knowledge.\nThe Chip-8 is a virtual machine from the mid-1970s designed to make game development easier. There are a number of classic video games ported to CHIP-8, such as Pong, Space Invaders, Tetris, and Pac-Man. There are also applications like a random maze generator and Conway's Game of Life.\nThis course is ideal for anyone who has programming experience and always dreamed of creating their own emulator one day, or would love to create an emulator but just does not know where to start. Even someone who has attempted to create an emulator in the past and fail can greatly benefit from this course.\nIn this course, we will create new classes in JavaScript for each piece of hardware, to emulate the memory, the display, the sound card, and the keyboard, after that, we will jump into the so expect Chip-8, we will first implement its registers and then we will implement each of its 35 opcodes\nAfter you complete this course you will have a fully functioning Chip-8 emulator that is capable to run hundreds of rooms available freely on the internet.",
      "target_audience": [
        "People that want a have an awesome project on they portfolio",
        "People interest in create an emulator or have always dreamed on create an emulator",
        "People interested in how hardware works",
        "People interested in low level details of hardware"
      ]
    },
    {
      "title": "General Programming Fundamentals",
      "url": "https://www.udemy.com/course/general-programming-fundamentals/",
      "bio": "Learn Universal Programming Concepts",
      "objectives": [
        "Programming",
        "Programming Fundamentals",
        "Programming Basics"
      ],
      "course_content": {
        "Essential Concepts": [
          "Introduction",
          "Who Is Your Instructor?",
          "What You Will Learn",
          "Who Is This Course For",
          "What is a Programming",
          "Tools",
          "Parts Of A Program Part 1",
          "Parts of a Program Part 2",
          "Calls",
          "Dot Notation",
          "Primative Data Types",
          "Variables",
          "Global Variables",
          "Local Variables",
          "Arithmetic",
          "Methods/Functions",
          "Comparisions",
          "IF Loop",
          "For Loop",
          "While Loop",
          "Arrays",
          "Objects",
          "Parameters",
          "Constructors",
          "Instances",
          "Classes",
          "Libraries",
          "Input and Output",
          "Getters and Setters",
          "Errors",
          "Formatting",
          "Comments",
          "Static Variables",
          "What To Do Next?"
        ],
        "Intermediate Concepts": [
          "Type Cast",
          "Modifiers",
          "Switch",
          "Pointers",
          "Multi-Dimensional Arrays",
          "State Machine",
          "Inheritance/Extending",
          "Interfaces",
          "Algorithms, Using Bubble Sort As Example",
          "Exception Catching",
          "Threads",
          "Stacks",
          "Queues",
          "Binary Trees",
          "Matrix"
        ]
      },
      "requirements": [
        "None"
      ],
      "description": "Welcome to General Programming Fundamentals\nIn this course you will learn the fundamentals concepts of programming\nThis course will focus on teaching the fundamentals of all programming language instead of 1 specific programming language\nLet me explain\nBasically how can you think of programming in the form of spoken languages\nAdjectives, Noun, Subjects, Verbs, Sentences, Sentence Order/Flow ETC.\nThis dictates the structure of programming as well as spoken languages\nAs programming is based on spoken languages\nThese base concepts that you will learn in this course are universally shared between all programming languages\nThus if you know these fundamentals you will be able to learn any language quickly and easily\nSo after this course i believe that you can go and take whatever programming language course you desire and pick up the programming language very quickly\nEvery subsequent programming language after this course's fundamentals and your first programming language will seem easy and fast to learn after that.\nIf you have any questions don't hesitate to ask. I will answer them as quickly and to the best of my ability\nCheck out some of the other courses i teach\nDisclaimer: this course does not contain any specific programming language syntax more of fundamentals about how programming is structured. Thus the course is taught in a classroom like white board setting relating spoken language and programming to each other to understand the concepts.\nEnjoy The Course",
      "target_audience": [
        "Beginning Programmers"
      ]
    },
    {
      "title": "Mastering Practical Algorithms: Project Euler Challenges",
      "url": "https://www.udemy.com/course/mastering-practical-algorithms/",
      "bio": "Sharpen your coding skills. Master algorithms, optimize solutions, enhance problem-solving and problem breakdown.",
      "objectives": [
        "Creative Problem-Solving: Develop the ability to think outside the box and tackle complex problems with innovative solutions",
        "Algorithm Optimization: Learn techniques to write efficient code that runs faster and uses fewer resources.",
        "Mathematical Foundations: Strengthen your understanding of the mathematical principles that underpin many algorithmic challenges.",
        "Code Implementation: Gain hands-on experience coding solutions in Python (potentially others).",
        "Debugging and Testing: Master the art of debugging and testing your code to ensure it works correctly and efficiently."
      ],
      "course_content": {},
      "requirements": [
        "Basic Programming Knowledge: For the explanation, you don't need to know any particular language. The current implementations are only in Python, so basic Python is required to understand the code part.",
        "Curiosity and Persistence: A willingness to learn and a determination to overcome challenging problems. This isn't easy, but is rewarding!"
      ],
      "description": "Are you looking to enhance your programming skills and take your problem-solving abilities to the next level? Welcome to Mastering Algorithms: Solving Project Euler Challenges, a comprehensive course designed to help developers and enthusiasts alike sharpen their coding skills through engaging and challenging algorithmic problems.\nIn my experience, there's nothing that competes with using the basics in a creative, clever way. Although I forgot most of my algebra and math theory as soon as I got out of school, I've found that this knowledge is incredibly valuable for becoming a better programmer and writing more efficient, scalable, and optimal solutions!\nCourse Structure: Each video is dedicated to a single Project Euler problem. In the first half, we will be on the board, breaking down the problem (as they get very tricky to understand as we progress). In the second half, we will implement solutions and often find ways to optimize them. Currently, all problems videos use Python, for implementation because it is the most ubiquitous language for this kind of work. I am adding JavaScript/Node slowly. Even if you are a C, Java, or PHP developer, you will be able to follow the problem breakdown and have a good chance of understanding the Python code. If not, you’ll still be able to solve the problems on your own!\nWhat You’ll Get:\nIn-Depth Lessons: Each video is carefully crafted to guide you through the intricacies of different problems, from basics to advanced topics. When I started, I couldn't find a consistent source for this material, so I've created one for you!\nInteractive Coding Exercises: Put your knowledge to the test with hands-on coding exercises and detailed walkthroughs.\nCommunity Support: Access to the Q&A section where you can post your solutions or get help when you're stumped. Collaborate with other like-minded learners who are eager to tackle these challenges.\nExpert Guidance: Benefit from my experience and insights as I help you navigate through each problem and develop effective solutions.\nBy the end of this course, you’ll not only have solved numerous Project Euler problems but also gained a deeper understanding of algorithms and a robust skill set that will serve you well in your programming career. Enroll now and start your journey to becoming a master problem-solver!",
      "target_audience": [
        "Aspiring Developers: Ideal for those new to programming who want to build a solid foundation in algorithms and problem-solving.",
        "Experienced Programmers: Perfect for seasoned developers looking to refine their skills and tackle more challenging problems. These still challenge me to this day!",
        "Tech Enthusiasts: Great for anyone with a passion for coding and a desire to improve their technical prowess.",
        "Math Students: Nearly any student of mathematics will love the problem break downs."
      ]
    },
    {
      "title": "Modern C++ development with bazel, googletest and googlemock",
      "url": "https://www.udemy.com/course/bazel-gtest-gmock/",
      "bio": "Learning to write testable code using a modern build system - bazel",
      "objectives": [
        "Learn the basics of using the modern build system that scales",
        "Understand how to import code from external sources",
        "Write tests to verify that your code matches the specification",
        "Write code to return dummy data using google mock."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setup"
        ],
        "Bazel": [
          "Introduction",
          "hello bazel - compiling a hello world program using bazel",
          "compiling files including headers",
          "creating and using a library",
          "generating product flavors"
        ],
        "Google test": [
          "Introduction",
          "Demo part 1",
          "Demo part 2",
          "Deepdive into gtest part 1",
          "Deepdive into gtest part 2",
          "Deepdive into gtest part 3"
        ],
        "Google mock": [
          "Introduction",
          "Demo",
          "Deepdive"
        ]
      },
      "requirements": [
        "Basic C++",
        "Should've written some C++ code using classes and header files."
      ],
      "description": "Bazel is a build system from google. C++ is one of the languages that bazel supports.\nOne of the nice things about bazel is, you specify the files and bazel figures out the dependency tree.\nBazel is written in skylark (a subset of python) which makes it accessible to a wide audience.\nThe ability to integrate with other libraries and the build performance makes bazel a great choice to use.\n\n\nGoogletest is an industry wide accepted solution for unit testing. It's battle tested across multiple projects at varying scales in the industry.\nThis framework is built along lines of other popular frameworks like junit (following the xunit principles)\n\n\nGooglemock is a framework for stubbing external calls to make your unit tests repeatable in isolation.\n\n\nLooking forward to seeing you in the course.\nCheers.",
      "target_audience": [
        "Anyone with a basic understanding of C++.",
        "If you're an experienced programmer who doesn't know much of C++, that's OK too. Focus is on the these frameworks and not on C++"
      ]
    },
    {
      "title": "Engineering Interview: Improve Problem-Solving in Python!",
      "url": "https://www.udemy.com/course/engineering-interview-improve-problem-solving-in-python/",
      "bio": "Improve your problem solving skills. Prepare for an engineering interview with 18 real-world coding interview problems.",
      "objectives": [
        "Prepare for an coding interview",
        "Practice your problem-solving skills",
        "Learn how to solve real-world interview problems",
        "Crush your software engineering interview"
      ],
      "course_content": {},
      "requirements": [
        "I require that you already know the basics of python and programming. (variables, functions, conditionals...)",
        "Also, I am solving some problems that require the knowledge of basic data structures (Hash Tables, Binary Search Trees)"
      ],
      "description": "Are you someone who wants to improve problem-solving skills or prepare for an upcoming software engineering interview? Then you have come to the right place!\nIn this course, you will improve your problem solving skills and prepare for an engineering interview with 18 real-world coding interview problems. Solving those problems will improve your problem solving capabilities and help you get a software engineering job.\nHello, my name is luke and I will be your instructor throughout this course.\n\n\nIn this course, you will prepare for your coding interview in python.\nBasically I will show you how to solve real-world problems. That often comes up at a software engineering interview\nThese are the type of problems you can get at an interview in one of the big tech companies like Microsoft, Amazon, Apple, Facebook, and Google.\n\n\nIf you practice your problem-solving skills on these problems I promise you, you will be\nbetter prepared for your interview.\n\n\nSo who is this course for?\nThis course is for a person who is preparing for a coding interview\nAlso, it is a good match for people who wants to get a job at one of the big tech companies and they need to pass the coding interview before they can get to the in-place interview.\nAnd overall if you just want to improve your problem-solving skills, this course is made for you.\n\n\nAnother thing I want to mention is that this course is not designed for absolute beginners. It requires that you know basic programming concepts such as function, variables, if statements, loops and so on.\nAlso In the course, I am using some data structures to solve some problems so it would be great if you would know what I am talking about. I use only basic data structures like Binary search tree or Hash table.\n\n\nIn the course, there are currently 18 exercises on which you can practice your problem-solving skills.\nYou have the source code that is written in python available to every exercise.\n\n\nAnd if you get stuck or if you don't understand something you can always reach out to me. Mostly I respond within a day.\n\n\nSo do you want to improve your problem solving skills?\nEnroll today and I will see you in the course!",
      "target_audience": [
        "Anyone who is preparing for a coding interview",
        "Anyone who wants to get a job at a big tech firm like Facebook, Google, Microsoft Amazon, Apple...",
        "Anyone who wants to crush the software engineering interview",
        "Anyone who wants to improve their problem solving skills"
      ]
    },
    {
      "title": "Ultimate Guide to Launching a Meme Coin on Base [2024]",
      "url": "https://www.udemy.com/course/ultimate-guide-creating-and-launching-meme-coin-on-base/",
      "bio": "From Smart Contracts to Market Launch: A Step-by-Step Guide to Building and Deploying Your Meme Coin on Base Chain",
      "objectives": [
        "Understanding Meme Coins: You’ll dive into what meme coins are, why they’re so popular, and the fun culture around them.",
        "Smart Contract Development: We’ll walk you through writing, deploying, and interacting with smart contracts using handy tools and languages.",
        "Tokenomics and Trust: You’ll discover the basics of token economics and learn how to build trust and transparency in your projects.",
        "Market Launch Strategies: We’ll cover how to launch your meme token successfully, create liquidity pairs, and grow a supportive community."
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed, A basic understanding of web concepts is nice, but all you really need is a curiosity about blockchain and cryptocurrency."
      ],
      "description": "In this step-by-step course, you’ll learn how to create and launch your very own meme coin on Base, one of the most efficient and user-friendly Layer 2 blockchains. Whether you’re a beginner in crypto or a seasoned developer looking to explore the meme coin craze, this course breaks down everything you need to know, from the basics of blockchain and smart contracts to writing your own code and deploying it to the Base testnet network. We’ll dive deep into meme coin tokenomics, security best practices (so you can avoid rug-pulls), and even how to create liquidity pairs to ensure your coin is ready for the market. Along the way, you'll also learn how to build trust within your community by promoting transparency and handling things like taxes, slippage fees, and contract ownership. We will also discuss the aspects of whether or not you should burn your LP tokens or not. By the end, you’ll have a fully functional meme coin and the knowledge to confidently launch and promote it on social media platforms like Twitter and Telegram. Whether you're launching as a fun project or aiming for viral success, this course will provide you with all the tools you need to bring your meme coin idea to life on the Base Network.",
      "target_audience": [
        "This course is perfect for anyone curious about web3—whether you’re coming from web2, a beginner developer, or just someone who wants to learn more about meme coins and the blockchain scene. Come join us!"
      ]
    },
    {
      "title": "Real World Hadoop - Automating Hadoop install with Python!",
      "url": "https://www.udemy.com/course/real-world-hadoop-automating-hadoop-install-with-python/",
      "bio": "Deploy a Hadoop cluster (Zookeeper, HDFS, YARN, Spark) with Cloudera Manager's Python API. Hands on.",
      "objectives": [
        "Simply run a single command on your desktop, go for a coffee, and come back with a running distributed environment for cluster deployment",
        "Quickly build an environment where Cloudera and Hadoop software can be installed.",
        "Ability to automate the installation of software across multiple Virtual Machines"
      ],
      "course_content": {
        "Rational": [
          "Rational",
          "Suggested course curriculum to follow ..."
        ],
        "Anaconda (Python) Setup within Vagrant": [
          "Course Notes and Resources",
          "Walking over the Cloudera / Hadoop Cluster Topology",
          "Part I - Installing Hadoop",
          "Part II - Installing Hadoop",
          "Automating the Installation of Anaconda",
          "Destroy our Hadoop Cluster. Python will now be taking over ..."
        ],
        "Python - Automate Deployment of Cloudera Management Services": [
          "Connect to Cloudera Manager via Python.",
          "Python - Obtain a handle to a new Clouderea Manager Services Container",
          "Python, Acquire database credentials in order to configure the CM Services",
          "Python - Deploy and start the Cloudera Manager Services",
          "Python - Verify the Cloudera Manager Services"
        ],
        "Python Automate Deployment of the Hadoop Cluster": [
          "Python - Create Hadoop Cluster Container and deploy parcels",
          "Complete Cloudera Parcel setup - Deploying the Packaged Hadoop Binaries",
          "Creating directories in advance",
          "Python - Configure and Install a Multinode ZooKeeper Cluster.",
          "Python - Configure and Install a Multinode HDFS Cluster.",
          "Python - Configure and Install a Multinode YARN Cluster.",
          "Python - Configure and Install a Multinode SPARK Cluster."
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming or scripting experience is required.",
        "You will need a desktop PC and an Internet connection. The course is created with Windows in mind.",
        "The software needed for this course is freely available",
        "You will require a computer with a Virtualization chipset support - VT-x. Most computers purchased over the last five years should be good enough",
        "Optional : Some exposure to Linux and/or Bash shell environment",
        "64-bit Windows operating system required (Would recommend Windows 7 or above)",
        "This course is not recommened if you have no desire to work with/in distributed computing",
        "This course is built on top of - \"Real World Vagrant - Automate a Cloudera Manager Build\""
      ],
      "description": "Note : This course is built on top of the \"Real World Vagrant - Automate a Cloudera Manager Build - Toyin Akin\" course\nDeploy a Hadoop cluster (Zookeeper, HDFS, YARN, Spark) with Python! Instruct Cloudera Manager to do the work! Hands on. Here we use Python to instruct an already installed Cloudera Manager to deploy your Hadoop Services.\n.The Cloudera Manager API provides configuration and service lifecycle management, service health information and metrics, and allows you to configure Cloudera Manager itself. The API is served on the same host and port as the Cloudera Manager Admin Console, and does not require an extra process or extra configuration. The API supports HTTP Basic Authentication, accepting the same users and credentials as the Cloudera Manager Admin Console.\n.\nHere are some of the cool things you can do with Cloudera Manager via the API:\nDeploy an entire Hadoop cluster programmatically. Cloudera Manager supports HDFS, MapReduce, YARN, ZooKeeper, HBase, Hive, Oozie, Hue, Flume, Impala, Solr, Sqoop, Spark and Accumulo.\nConfigure various Hadoop services and get config validation.\nTake admin actions on services and roles, such as start, stop, restart, failover, etc. Also available are the more advanced workflows, such as setting up high availability and decommissioning.\nMonitor your services and hosts, with intelligent service health checks and metrics.\nMonitor user jobs and other cluster activities.\nRetrieve timeseries metric data.\nSearch for events in the Hadoop system.\nAdminister Cloudera Manager itself.\nDownload the entire deployment description of your Hadoop cluster in a json file.\nAdditionally, with the appropriate licenses, the API lets you:\nPerform rolling restart and rolling upgrade.\nAudit user activities and accesses in Hadoop.\nPerform backup and cross data-center replication for HDFS and Hive.\nRetrieve per-user HDFS usage report and per-user MapReduce resource usage report.\n.\n\nHere I present a curriculum as to the current state of my Cloudera courses.\nMy Hadoop courses are based on Vagrant so that you can practice and destroy your virtual environment before applying the installation onto real servers/VMs.\n.\nFor those with little or no knowledge of the Hadoop eco system\nUdemy course : Big Data Intro for IT Administrators, Devs and Consultants\n.\nI would first practice with Vagrant so that you can carve out a virtual environment on your local desktop. You don't want to corrupt your physical servers if you do not understand the steps or make a mistake.\nUdemy course : Real World Vagrant For Distributed Computing\n.\nI would then, on the virtual servers, deploy Cloudera Manager plus agents. Agents are the guys that will sit on all the slave nodes ready to deploy your Hadoop services\nUdemy course : Real World Vagrant - Automate a Cloudera Manager Build\n.\nThen deploy the Hadoop services across your cluster (via the installed Cloudera Manager in the previous step). We look at the logic regarding the placement of master and slave services.\nUdemy course : Real World Hadoop - Deploying Hadoop with Cloudera Manager\n.\nIf you want to play around with HDFS commands (Hands on distributed file manipulation).\nUdemy course : Real World Hadoop - Hands on Enterprise Distributed Storage.\n.\nYou can also automate the deployment of the Hadoop services via Python (using the Cloudera Manager Python API). But this is an advanced step and thus I would make sure that you understand how to manually deploy the Hadoop services first.\nUdemy course : Real World Hadoop - Automating Hadoop install with Python!\n.\nThere is also the upgrade step. Once you have a running cluster, how do you upgrade to a newer hadoop cluster (Both for Cloudera Manager and the Hadoop Services).\nUdemy course : Real World Hadoop - Upgrade Cloudera and Hadoop hands on",
      "target_audience": [
        "Software engineers who want to expand their skills into the world of distributed computing",
        "System Engineers that want to expand their skillsets beyond the single server",
        "Developers who want to write/test their code against a valid distributed enviroment"
      ]
    },
    {
      "title": "Mastering Design Patterns and Software Design - Swift, iOS",
      "url": "https://www.udemy.com/course/mastering-design-patterns-and-software-design-swift-ios/",
      "bio": "Become a Pro in Software Design and Design Patterns by learning with real time examples and scenarios.",
      "objectives": [
        "Become an expert in System Designing and Pro in Software Design Patterns.",
        "You will learn the Design Patterns with step by step implementation in Swift Programming.",
        "Learning Creational, Structural and Behavioural Design Patterns from Zero to Hero.",
        "Understanding when to use which design pattern and learning the decision making skills.",
        "Learning how Apple used these design patterns in iOS SDK and inner workings of Swift Foundation Framework",
        "Uncovering the inner workings to get in depth understanding to crack technical interviews.",
        "Learning Design patterns with real time situations and practical usage in projects.",
        "Up skill your Software Design knowledge to write scalable, flexible and maintainable code.",
        "Learning the insights of Swift Foundation and iOS SDK.",
        "You will able to face System Design Interviews and Senior Technical rounds with ease and confidence."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Design Patterns"
        ],
        "Prototype Design Pattern (CREATIONAL)": [
          "What is Prototype Pattern",
          "Prototype Implementation (Basic Approach)",
          "Prototype Implementation (Apple's Standard Approach)",
          "What is Shallow Copy",
          "What is Deep Copy",
          "Prototype Design Pattern"
        ],
        "Singleton Design Pattern (CREATIONAL)": [
          "What is Singleton",
          "Implementing Singleton in Swift",
          "Bonus: Learn what are final and @objc keywords and how they improve performance.",
          "Singleton Design Pattern"
        ],
        "System Design Fundamentals & Terminology": [
          "System Design Intro",
          "Managing Dependencies",
          "Design Takeaways"
        ],
        "Factory Design Pattern (CREATIONAL)": [
          "What is Factory Pattern",
          "Implementing Factory Design Pattern"
        ],
        "Abstract Factory Design Pattern (CREATIONAL)": [
          "What is Abstract Factory",
          "Abstract Factory Implementation"
        ],
        "Builder Design Pattern (CREATIONAL)": [
          "Builder Design Pattern",
          "Builder Pattern Implementation"
        ],
        "Object Pool Design Pattern (CREATIONAL)": [
          "Object Pool Design Pattern",
          "Object Pool Creation"
        ],
        "Creational Patterns - Takeaway": [
          "Summary and takeaway"
        ],
        "Adapter (STRUCTURAL)": [
          "Adapter Design Pattern",
          "Adapter Pattern Implementation"
        ]
      },
      "requirements": [
        "Basic Swift Programming Knowledge"
      ],
      "description": "This is a practical course that equip with all you need in order to understand and use Design Patterns and Software Design skills to develop code which is flexible, extendable and maintainable. We will be learning the Design Patterns with visualisation of how each pattern works internally and implement each pattern with scenario based examples with step by step approach in Swift Programming.\nWe we be also looking at various key concepts of Swift, Objective C and iOS SDK to understand the inner workings and insights during various stages of course. You will get good confidence to crack senior technical interviews that relates to Design patterns and Software Design landscape. We also cover most of the Design Principles one should aware to write code which is reusable and robust.\nYou will be learning the Creational Design patterns for efficiently creating objects in a flexible way that increases the extendability and maintainability of the code. You will master the Singleton, Prototype, Factory, Abstract Factor, Builder and Object Pool patterns as part of the Creational Design Patterns.\nYou will be learning the Structural Design patterns for assembling classes and objects to create larger structures in a decoupled way that increases the extendability and maintainability of the code. You will master the Adapter, Bridge, Composite, Decorator, FlyWeight , Proxy and Facade patterns as part of the Structural Design Patterns.\nYou will be learning the Behavioural Design Patterns which identifies and establishes communication between objects in a flexible and loosely coupled manner. You will master Chain of Responsibility, Strategy, Template, Observer, Command, State, Visitor, Mediator patterns as part of the Behaviour Design Patterns.\nYou will be also leaning most common Software Design Core Concepts and Terminology that we use for Designing reusable, flexible and extendable Software Components in day to day life of Software Development.",
      "target_audience": [
        "Beginner to Advanced Apple Developers who are passionate to up skill their software design skills.",
        "Anyone who is passionate to write Scalable, Flexible and Maintainable Code."
      ]
    },
    {
      "title": "Argo CD for the Absolute Beginners - Hands-On DevOps",
      "url": "https://www.udemy.com/course/argo-cd-for-the-absolute-beginners-hands-on-devops/",
      "bio": "Prepare for the Certified Argo Project Associate (CAPA) while enhancing your skills with Practical Argo CD",
      "objectives": [
        "Introduction to GitOps",
        "How to Design and Implement Argo CD",
        "Indepth Hands-On for Argo CD applications and projects",
        "Sync Policy in Argo CD",
        "Application Deployment using Helm, Kustomize and Private Repositories",
        "Webhooks with Argo CD for Push based approach",
        "Managing Multiple Kubernetes Clusters with Argo CD",
        "Declarative Approach for Argo CD",
        "Monitoring and Dashboarding"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "GitHub Repository Link",
          "Course Material - Argo CD for the Absolute Beginners - Hands-On DevOps"
        ],
        "Introduction to GitOps and Argo CD": [
          "Introduction to GitOps",
          "Overview of the Argo Projects",
          "Getting Started with Argo CD",
          "Features of Argo CD",
          "Demonstration - Argo CD Documentation"
        ],
        "Understanding Argo CD Framework": [
          "Core Argo CD Terminologies"
        ],
        "Setting up Argo CD": [
          "Pre-requisites for Setting up Argo CD",
          "Demonstration - Installing Argo CD on Kubernetes",
          "Demonstration - Argo CD UI Walkthrough",
          "Demonstration - Two node cluster setup (OPTIONAL)",
          "Checkout - Practical Kubernetes - Beyond CKA and CKAD | Hands-on"
        ],
        "Argo CD Architecture": [
          "Understanding Argo CD Architecture"
        ],
        "Argo CD Applications": [
          "Introduction to Argo CD Applications",
          "Application Modes - UI (Console) and CLI and Manifests",
          "Demonstration - First Application Deployment using Argo CD",
          "Demonstration - Auto Namespace with Application Deployment",
          "Sync Options for Argo CD Applications",
          "Demonstration - Prune Sync Option with Argo CD Applications",
          "Demonstration - Argo CD Application deletion in non-cascade mode"
        ],
        "Quiz 1 - Knowledge Check": [
          "Quiz 1 - Knowledge Check"
        ],
        "Argo CD Projects": [
          "Introduction to Argo CD Projects",
          "Demonstration - Project Creation in Argo CD",
          "Demonstration - Deploying and Troubleshooting Argo CD Apps in Custom Project",
          "Checkout - Podman for the Absolute Beginners - Hands-On DevOps"
        ],
        "Automatic Sync Policy in Argo CD": [
          "Getting Started with Automatic Sync Option in Argo CD",
          "Demonstration - Application Deployment with Automatic Sync",
          "Demonstration - Prune Resources option with Automatic Sync",
          "Demonstration - Self-Healing option with Automatic Sync",
          "Demonstration - Configure Automatic Sync Reconciliation Time"
        ],
        "Upgrades and Rollbacks using Argo CD": [
          "Upgrades and Rollbacks",
          "Demonstration - Upgrades and Rollbacks in Argo CD"
        ]
      },
      "requirements": [
        "Basic Unix/Linux Knowledge (Good to have)",
        "Basic understanding of Kubernetes",
        "Basic System Administrator Skills"
      ],
      "description": "What’s in this course?\n\n\nArgo CD for the Absolute Beginners - Hands-On is a comprehensive course, designed to guide you from foundational Argo CD knowledge to production-level skills.\n\n\nThe course starts with foundational topics, perfect for beginners, covering the GitOps Principles, then dive into the necessity and features of Argo CD. You will learn how to set up and manage a Argo CD environments and understand its architecture.\n\n\nThe course will explore Argo CD objects such as Applications and Projects, and you’ll become proficient in deploying Argo CD objects using ArgoCD console, Argocd CLI and a Declarative Approach. You’ll also learn how to perform advanced tasks like application upgrades and rollbacks, integrating Private Git repositories and working with Webhooks.\n\n\nAs you progress, you’ll delve into more specialized areas such as managing multiple Kubernetes clusters using Argo CD and app of apps pattern to manage complex applications in modular way. The course will also cover Argo CD monitoring.\n\n\nBy the end of this course, we will implement an end to end CI/CD Capstone project using Github actions and Argo CD.\n\n\nSpecial Note:\nThis course is designed to showcase all practical concepts with live demonstrations. Every concept is presented in real-time, and any errors that arise are troubleshooted and addressed as they occur live in the demonstrations.\n\n\nLegal Notice:\nArgo CD or Argo Project is a registered trademarks of  The Cloud Native Computing Foundation (CNCF) and/or The Linux Foundation in the United States and other countries. This course is not certified, accredited, affiliated with, nor endorsed by The Cloud Native Computing Foundation (CNCF) and/or The Linux Foundation.\n\n\nStudent Testimonials:\n★★★★★ \"Is a great starting point for anyone new to GitOps and Argo CD. It provides a solid foundation by introducing the core principles of GitOps and explaining the purpose and features of Argo CD in a beginner-friendly way.\"\n★★★★★ \"Will highly recommend! The practical demonstrations were incredibly helpful.\"\n\n\nCourse Structure:\nLectures\nDemos\nQuizzes\nAssignments\n\n\nCourse Contents:\nCourse Introduction\nGetting Started with GitOps\nArgo CD at a Glance\nUnderstanding Argo CD Architecture\nInstallation and Configuration of Argo CD\nArgo CD Applications using UI, CLI and YAML\nArgo CD Projects using UI, CLI and YAML\nAutomatic Sync Policy in Argo CD\nRollouts and Rollbacks using Argo CD\nApplication Deployment using Helm, Kustomize and Private Repositories\nWebhooks with Argo CD\nManaging Multiple Kubernetes Clusters with Argo CD\nDeclarative Approach for Argo CD\nArgo CD Monitoring and Dashboarding\nEnd to End Capstone Project using GitOps and Argo CD\n\n\nAll sections of this course are demonstrated live, with the goal of encouraging enrolled users to set up their own environments, complete the exercises, and learn through hands-on experience!",
      "target_audience": [
        "System Administrators or System Engineers",
        "Application Developers and Testers",
        "DevOps Administrators or DevOps Engineers",
        "Cloud Administrators or Cloud Engineers"
      ]
    },
    {
      "title": "Troubleshooting Kubernetes",
      "url": "https://www.udemy.com/course/troubleshooting-kubernetes/",
      "bio": "Practical solutions to common issues faced while deploying, managing, and operating your Kubernetes clusters",
      "objectives": [
        "Plan, operate and manage a Kubernetes cluster in production",
        "Troubleshoot cluster issues",
        "Select the correct resources in Kubernetes to serve your infrastructure goals",
        "Manage application deployments on Kubernetes clusters",
        "Configure cluster-wide logging",
        "Monitor and set up alerts for cluster health and determine if any action is required",
        "Best practices for working with Kubernetes"
      ],
      "course_content": {
        "Avoiding Installation Pitfalls": [
          "The Course Overview",
          "Planning and Installing",
          "Resource Management",
          "Scenario – Insufficient Cluster Capacity",
          "Pod Security Policy",
          "Troubleshooting Networking Issues",
          "Scenario – Deploy the Debug Tool",
          "DNS or Pod-to-Service Communication Issues",
          "Scenario – Kubernetes Dashboard Loading Is Slow",
          "Multi-Platform Kubernetes Cluster",
          "Taints and Tolerations",
          "Common Issues with Multi-Platform Clusters",
          "Scenario – Pending State Post-Deployment",
          "Test your knowledge"
        ],
        "Managing Your Cluster Effectively": [
          "Kubernetes Cluster Management",
          "Creating and Managing Kubernetes Objects",
          "Viewing Kubernetes Resources Using Kubectl CLI",
          "Modifying Kubernetes Resources Using Kubectl CLI",
          "Kubectl CLI Issue",
          "Kubernetes Dashboard Overview",
          "Test your knowledge"
        ],
        "Logging into Kubernetes": [
          "Logging Architecture and Logging Patterns in Kubernetes",
          "Cluster-Level Logging in Kubernetes",
          "Common Issues Related to Logging",
          "Resource Allocation and Configuration Aspects of the Logging Backend",
          "Test your knowledge"
        ],
        "Monitoring and Alerting": [
          "Kubernetes Monitoring",
          "Key Resources to Monitor and Related Metrics",
          "Alerts",
          "Test your knowledge"
        ],
        "Troubleshooting Application Deployment Issues": [
          "Working with Replication Controllers",
          "Deployment with Replica Sets – Next - Generation Replication Controllers",
          "Running Jobs – Run Once and Forget",
          "Using Deployments",
          "Using DaemonSet to Run Code on Multiple Nodes",
          "Targeting Deployment to Specific Nodes",
          "Setting Resource Limits for Application",
          "Capabilities and Security Policies",
          "Troubleshooting Application Deployment Issues",
          "Handling Out Of Memory Errors",
          "Handling Garbage Collection and Eviction Thresholds",
          "Test your knowledge"
        ],
        "Configuring Your Services": [
          "Services for Kubernetes Explained",
          "Service Discovery and Routing",
          "Ingress Resources Explained",
          "Troubleshooting Application Access Issues",
          "Test your knowledge"
        ]
      },
      "requirements": [
        "Working knowledge of Kubernetes is assumed; this course explores it in more detail and examines the practical aspects of managing your clusters."
      ],
      "description": "Containers are changing the way applications are developed, deployed, and managed. Consequently, container orchestration has become a critical piece of infrastructure for enterprises on their digital transformation journey. Kubernetes is an open-source container orchestration platform for automating the deployment, scaling, and management of containerized applications. It has become the de-facto standard for container orchestration.\nThis course provides a tour of how to debug issues with the Kubernetes cluster infrastructure and presents a working conceptual model of how clusters operate. You will be addressing common problems faced by developers in cluster management, monitoring, and logging. Subsequently, we examine common issues when creating and deploying apps on Kubernetes.\nBy the end of the course, you'll have gained full control of your Kubernetes infrastructure and will be able to manage it with ease.\nPlease note a working knowledge of Kubernetes is required for this course.\nAbout the Author\nPradipta Kumar Banerjee\nIBM, Senior Technical Staff Member, Bangalore, India\nPradipta is a Senior Technical Staff Member for the IBM Cloud Private platform and leads cloud-native platform initiatives for IBM Power Microprocessor. He comes with an extensive infrastructure and cloud background and has worked on many first-of-a-kind projects for large enterprise customers across various industries, focusing primarily on virtualization, cloud, and container technologies. Pradipta is an IBM Master Inventor with many patents and received the Best of IBM and Outstanding Technical Achievement awards.",
      "target_audience": [
        "This course is for sysadmins and developers who would like to implement easy and practical solutions to common issues encountered while using Kubernetes for large-scale container application management."
      ]
    },
    {
      "title": "Real World Vagrant - Automate a Cloudera Manager Build",
      "url": "https://www.udemy.com/course/real-world-vagrant-automate-a-cloudera-manager-build/",
      "bio": "Build a Distributed Cluster of Cloudera Manager and any number of Cloudera Manager Agent nodes with a single command!",
      "objectives": [
        "Simply run a single command on your desktop, go for a coffee, and come back with a running distributed environment for cluster deployment",
        "Quickly build an environment where Cloudera and Hadoop software can be installed",
        "Ability to automate the installation of software across multiple Virtual Machines"
      ],
      "course_content": {
        "Vagrant for Big Data Testing": [
          "Automating a Cloudera Manager Build with Vagrant",
          "Suggested course curriculum to follow ..."
        ],
        "Setup our Vagrantfile so that we can build our box templates": [
          "Base Vagrant file",
          "Here we walk through a simple Vagrant Script",
          "Modify the hosts file to make it Cloudera friendly",
          "Here we download the Cloudera Manager rpms and create a local repository",
          "Here we configure the Centos O/S. firewall, ntp, tcp buffers and swappiness",
          "Setup Local Webserver to house Cloudera's CDH Parcels",
          "Here we find Cloudera's Online Parcel Repository and download a Parcel",
          "Automate the Installation Cloudera Manager and Agents",
          "Quickly validate our template by walking through the Cloudera Manager UI"
        ],
        "Package the Manager and Agent into varant image templates": [
          "Package the Cloudera Components. Manager and Agent",
          "Boot up a Cluster topology using the new Cloudera vagrant base boxes",
          "First pass - Deploying an Hadoop Cluster.",
          "Second pass - Deploying an Hadoop Cluster",
          "Bonus - Hadoop Services that require access to a database."
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic programming or scripting experience is required.",
        "You will need a desktop PC and an Internet connection. The course is created with Windows in mind.",
        "The software needed for this course is freely available",
        "You will require a computer with a Virtualization chipset support - VT-x. Most computers purchased over the last five years should be good enough",
        "Optional : Some exposure to Linux and/or Bash shell environment",
        "64-bit Windows operating system required (Would recommend Windows 7 or above)",
        "This course is not recommened if you have no desire to work with/in distributed computing",
        "This course is built on top of - \"Real World Vagrant For Distributed Computing\""
      ],
      "description": "Note : This course is built on top of the \"Real World Vagrant For Distributed Computing - Toyin Akin\" course\n\n\"NoSQL\", \"Big Data\", \"DevOps\" and \"In Memory Database\" technology are a hot and highly valuable skill to have – and this course will teach you how to quickly create a distributed environment for you to deploy these technologies on.\nA combination of VirtualBox and Vagrant will transform your desktop machine into a virtual cluster. However this needs to be configured correctly. Simply enabling multinode within Vagrant is not good enough. It needs to be tuned. Developers and Operators within large enterprises, including investment banks, all use Vagrant to simulate Production environments.\nAfter all, if you are developing against or operating a distributed environment, it needs to be tested. Tested in terms of code deployed and the deployment code itself.\nYou'll learn the same techniques these enterprise guys use on your own Microsoft Windows computer/laptop.\nVagrant provides easy to configure, reproducible, and portable work environments built on top of industry-standard technology and controlled by a single consistent workflow to help maximize the productivity and flexibility of you and your team.\nThis course will use VirtualBox to carve out your virtual environment. However the same skills learned with Vagrant can be used to provision virtual machines on VMware, AWS, or any other provider.\nIf you are a developer, this course will help you will isolate dependencies and their configuration within a single disposable, consistent environment, without sacrificing any of the tools you are used to working with (editors, browsers, debuggers, etc.). Once you or someone else creates a single Vagrantfile, you just need to vagrant up and everything is installed and configured for you to work. Other members of your team create their development environments from the same configuration. Say goodbye to \"works on my machine\" bugs.\nIf you are an operations engineer, this course will help you build a disposable environment and consistent workflow for developing and testing infrastructure management scripts. You can quickly test your deployment scripts and more using local virtualization such as VirtualBox or VMware. (VirtualBox for this course). Ditch your custom scripts to recycle EC2 instances, stop juggling SSH prompts to various machines, and start using Vagrant to bring sanity to your life.\nIf you are a designer, this course will help you with distributed installation of software in order for you to focus on doing what you do best: design. Once a developer configures Vagrant, you do not need to worry about how to get that software running ever again. No more bothering other developers to help you fix your environment so you can test designs. Just check out the code, vagrant up, and start designing.\n.\nHere I present a curriculum as to the current state of my Cloudera courses.\nMy Hadoop courses are based on Vagrant so that you can practice and destroy your virtual environment before applying the installation onto real servers/VMs.\n.\nFor those with little or no knowledge of the Hadoop eco system Udemy course : Big Data Intro for IT Administrators, Devs and Consultants\n.\nI would first practice with Vagrant so that you can carve out a virtual environment on your local desktop. You don't want to corrupt your physical servers if you do not understand the steps or make a mistake. Udemy course : Real World Vagrant For Distributed Computing\n.\nI would then, on the virtual servers, deploy Cloudera Manager plus agents. Agents are the guys that will sit on all the slave nodes ready to deploy your Hadoop services Udemy course : Real World Vagrant - Automate a Cloudera Manager Build\n.\nThen deploy the Hadoop services across your cluster (via the installed Cloudera Manager in the previous step). We look at the logic regarding the placement of master and slave services. Udemy course : Real World Hadoop - Deploying Hadoop with Cloudera Manager\n.\nIf you want to play around with HDFS commands (Hands on distributed file manipulation). Udemy course : Real World Hadoop - Hands on Enterprise Distributed Storage.\n.\nYou can also automate the deployment of the Hadoop services via Python (using the Cloudera Manager Python API). But this is an advanced step and thus I would make sure that you understand how to manually deploy the Hadoop services first. Udemy course : Real World Hadoop - Automating Hadoop install with Python!\n.\nThere is also the upgrade step. Once you have a running cluster, how do you upgrade to a newer hadoop cluster (Both for Cloudera Manager and the Hadoop Services). Udemy course : Real World Hadoop - Upgrade Cloudera and Hadoop hands on",
      "target_audience": [
        "Software engineers who want to expand their skills into the world of distributed computing",
        "System Engineers that want to expand their skillsets beyond the single server",
        "Developers who want to write/test their code against a valid distributed enviroment"
      ]
    },
    {
      "title": "SAP SuccessFactors Payroll Bootcamp - Beginner to Advanced",
      "url": "https://www.udemy.com/course/sap-successfactors-payroll-bootcamp-beginner-to-advance/",
      "bio": "Learn how to implement SAP SuccessFactors payroll from scratch",
      "objectives": [
        "SuccessFactors Employee Central Payroll",
        "Basics of SAP HCM Payroll or S/4 HANA Payroll",
        "Implementation of SAP Payroll",
        "Payroll Control Centre",
        "Complete Payroll implementation for On-premise / S4 HANA / Employee Central Payroll / Hyperscalar SAP systems",
        "International Payroll driver",
        "PCRs and SCHEMAs",
        "Wagetype configuration",
        "Overtime and Shift allowance automation",
        "Payslip Configuration",
        "No-Show absence automation",
        "KPI and Alert setup for Payroll Control Centre",
        "Process Management for Payroll Control Centre",
        "Manage Configuration for Payroll Control Centre",
        "Configuration workbench for Payroll Control Centre",
        "Background jobs and programs for PCC"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "SAP Payroll Bootcamp - Part 1"
        ],
        "Bootcamp": [
          "SAP Payroll Bootcamp - Part 2",
          "SAP Payroll Bootcamp - Part 3",
          "SAP Payroll Bootcamp - Part 4",
          "SAP Payroll Bootcamp - Part 5",
          "SAP Payroll Bootcamp - Part 6",
          "SAP Payroll Bootcamp - Part 7",
          "SAP Payroll Bootcamp - Part 8",
          "SAP Payroll Bootcamp - Part 9",
          "SAP Payroll Bootcamp - Part 10",
          "SAP Payroll Bootcamp - Part 11",
          "SAP Payroll Bootcamp - Part 12",
          "SAP Payroll Bootcamp - Part 13",
          "SAP Payroll Bootcamp - Part 14",
          "SAP Payroll Bootcamp - Part 15",
          "SAP Payroll Bootcamp - Part 16",
          "SAP Payroll Bootcamp - Part 17",
          "SAP Payroll Bootcamp - Part 18",
          "SAP Payroll Bootcamp - Part 19",
          "SAP Payroll Bootcamp - Part 20",
          "SAP Payroll Bootcamp - Part 21",
          "SAP Payroll Bootcamp - Part 22",
          "SAP Payroll Bootcamp - Part 23",
          "SAP Payroll Bootcamp - Part 24"
        ]
      },
      "requirements": [
        "Basics of HR concepts"
      ],
      "description": "SAP SuccessFactors Payroll Bootcamp - Beginner to Advanced\n\n\nIn this course you can learn how configure Payroll and Control Center in SuccessFactors Employee Central Payroll system from scratch. This course will guide you through the system pre-requisites and steps required to configure Key Performance Indicators (KPIs) and Alerts on PCC screens which are relevant for your landscape.\n\n\nIt is a complete course on SuccessFactors Employee Central and Employee Central Payroll Systems. It covers below configuration topics:\n\n\nComplete Payroll implementation for On-premise / S4 HANA / Employee Central Payroll / Hyperscalar SAP systems\nImplementation of Payroll Control Centre\nInternational Payroll driver\nPCRs and SCHEMAs\nWagetype configuration\nOvertime allowance automation\nShift allowance automation\nPayslip Configuration\nNo-Show absence automation\nKPI setup for Payroll Control Centre\nAlerts setup for Payroll Control Centre\nProcess Management for Payroll Control Centre\nManage Configuration for Payroll Control Centre\nConfiguration Workbench for Payroll Control Centre\nBackground jobs and programs for Payroll Control Centre\n\n\nThis course would be helpful to below audience:\n\n\nFunctional Consultants\nTechnical Consultants who wish to get a Techno-Functional role\nEnd users\nStudents\nAspirants who wish to seek career in SAP HCM or SAP SuccessFactors\n\n\nCourse Exclusions:\n\n\nBelow topics are not covered under this offered course:\n\n\n1. Point to Point Integration between SuccessFactors Employee Central and Employee Central Payroll\n2. SuccessFactors Employee Central Payroll Administration",
      "target_audience": [
        "SAP/SuccessFactors Consultants - ECP Consultants, EC Consultants, HCM Consultants",
        "Technical Consultants who wish to get a Techno-Functional role",
        "End users",
        "Students",
        "Aspirants who wish to seek career in SAP HCM or SAP SuccessFactors",
        "Payroll enthusiasts"
      ]
    },
    {
      "title": "Step up your coding with Continuous Feedback",
      "url": "https://www.udemy.com/course/continuous-feedback/",
      "bio": "How to know more about your code, and know it earlier",
      "objectives": [
        "How to collect important information about your code",
        "Tracing fundamentals and comparison to debugging",
        "Using observability data to improve your code",
        "OSS and free toolings"
      ],
      "course_content": {
        "Introduction": [
          "What is Continuous Feedback and why should developers care?",
          "Not an OTEL 101: Getting info about code"
        ],
        "Not without a Trace: Using observability when coding": [
          "From manual observability to Continous Feedback"
        ]
      },
      "requirements": [
        "Java Develpers"
      ],
      "description": "What do you know about the code changes that were just introduced into the codebase? When will you notice if something goes wrong?\nContinuous Feedback is a new dev practice that aims to make practical usage of code runtime data to shorten the feedback loop during development. OpenTelemetry makes it possible with great library support and a standard spec for tracing, metrics, and more.\nBy practicing CF, developers can increase productivity with shorter feedback loops. Getting access to data about their code much earlier, detecting and resolving issues in shorter iterations, as-they-code.\nIn this course, we'll look past the novelty of using OSS observability tools and technologies, to discuss how we can actually make them useful for developers. We'll look at the benefits of enabling OpenTelemetry collection for dev and test data and examine OSS tools to help analyze the application runtime. Throughout the talk, we'll go over code examples of common anti-patterns, code smells, hidden errors, and other types of problems that this untapped source of data can reveal.\nUltimately, the goal should not be simply observing the application or creating nice-looking dashboards. Rather, success is in leveraging observability data in order to achieve a more effective dev process and write better code.",
      "target_audience": [
        "Software developers (senior and junior) interested in standing out with new skills and practices"
      ]
    },
    {
      "title": "PyQt Desktop Apps with Python",
      "url": "https://www.udemy.com/course/pyqt-desktop-apps-with-python/",
      "bio": "Start making Desktop Apps with Python PyQt",
      "objectives": [
        "Make GUI apps with PyQt and Python",
        "Understand how to use PyQt",
        "Includes projects: Make a Web Browser, Text Editor and BMI Calculator",
        "Design your apps with Designer"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installation": [
          "Install PyQt on Mac OS X",
          "Install PyQt on Mac OS X",
          "Install PyQt on Windows",
          "Install PyQT on Windows",
          "Install PyQt on Ubuntu Linux",
          "Install PyQt on Ubuntu Linux"
        ],
        "PyQt Basics": [
          "PyQt Window",
          "Hello World",
          "Signals and Slots",
          "MessageBox",
          "Text Input",
          "Menu",
          "Layouts",
          "Designer"
        ],
        "Project: BMI Calculator with PyQt": [
          "Instructions",
          "Project Solution (1/2)",
          "Project Solution (2/2)"
        ],
        "Project: Web Browser": [
          "Instructions",
          "Build a Web Browser"
        ],
        "Project: Text Editor": [
          "Instructions",
          "Text Editor (1/2)",
          "Text Editor (2/2)"
        ]
      },
      "requirements": [
        "Experience with Python required",
        "No knowledge of PyQt required"
      ],
      "description": "Make Desktop applications with Python Pyqt.  PyQt can be challenging to learn, in this course we'll make it easy for you. The course starts with the basics like buttons, labels, signals and slots. Then it dives deeper and teaches you how to use designer,\nMake several projects including:\na text editor,\nweb browser\nbmi calculator.\nYou will be able to make your own desktop apps with Python PyQt!",
      "target_audience": [
        "Python programmers who want to make Desktop Apps (GUI)"
      ]
    },
    {
      "title": "Mastering SOLID Principles of Object Oriented Design (C#)",
      "url": "https://www.udemy.com/course/mastering-solid-principles-of-object-oriented-design-c/",
      "bio": "Master SOLID principles using C#. Learn to write maintainable, scalable, and robust code through practical examples.",
      "objectives": [
        "Understand and effectively apply the five SOLID principles (SRP, OCP, LSP, ISP, DIP) in your software design to create clean, maintainable, and scalable code.",
        "Learn techniques to refactor and improve existing codebases, ensuring better readability, reduced technical debt, and easier maintenance.",
        "Develop skills to design software systems that can adapt to changing requirements with minimal impact, promoting long-term project success.",
        "Create modular and reusable code components, allowing for efficient development and integration across different projects and systems."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course",
          "Overview of SOLID Principles"
        ],
        "Single Responsibility Principle (SRP)": [
          "What is Single Responsibility Principle",
          "Understanding and identifying SRP violation and fixing it - Code example",
          "Benefits of conforming to Single Responsibility Principle"
        ],
        "Open/Closed Principle (OCP)": [
          "What is Open-Closed Principle",
          "Understanding and Identifying OCP violation and fixing it - Code example",
          "Benefits and importance of Open-Closed Principle"
        ],
        "Liskov Substitution Principle (LSP)": [
          "What is Liskov Substitution Principle (LSP)",
          "Understanding and Identifying LSP violation and fixing it - Code example",
          "Benefits and importance of Liskov Substitution Principle (LSP)"
        ],
        "Interface Segregation Principle (ISP)": [
          "What is Interface Segregation Principle (ISP)",
          "Understanding and Identifying ISP violation and fixing it - Code example",
          "Benefits and importance of Interface Segregation Principle (ISP)"
        ],
        "Dependency Inversion Principle (DIP)": [
          "What is Dependency Inversion Principle (DIP)",
          "Understanding and Identifying DIP violation and fixing it - Code example",
          "More Topics closely related to DIP",
          "Benefits and importance of Dependency Inversion Principle (DIP)"
        ],
        "Summary and what next": [
          "Summary and what next"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge",
        "Experience with Object-Oriented Programming (OOP)",
        "Understanding of Basic Software Development Concepts"
      ],
      "description": "Unlock the full potential of your C# programming skills with our comprehensive course on mastering SOLID principles. SOLID is an acronym for five foundational principles of object-oriented design that ensure your code is maintainable, scalable, and robust. These principles include Single Responsibility, Open/Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion.\nThroughout this course, you’ll dive deep into each of these principles with detailed explanations and practical examples tailored for C# developers. You’ll learn to identify and address common design issues, transforming your approach to software development. Through hands-on exercises, you’ll gain the skills to apply these principles effectively in real-world projects, enhancing your ability to write clean, efficient, and adaptable code.\nThis course is designed for developers at all levels, from beginners to seasoned professionals. If you’re new to object-oriented programming, you’ll gain a strong foundation in SOLID principles, setting you up for success in your programming career. Experienced developers will benefit from a deeper understanding and refinement of their coding practices, leading to more efficient and reliable software.\nBy the end of this course, you’ll have a solid grasp of how to implement SOLID principles in your C# projects, leading to better software development practices. Join us and elevate your coding proficiency, ensuring your applications are robust, flexible, and easy to maintain. Embrace the power of SOLID principles and revolutionize your software design with this essential course.",
      "target_audience": [
        "Aspiring Software Developers",
        "Experienced Developers Seeking to Improve Design Skills",
        "Students in Computer Science or Software Engineering",
        "Software Architects and Team Leads"
      ]
    },
    {
      "title": "No Nonsense Node.js: Setup Development Environment",
      "url": "https://www.udemy.com/course/no-nonsense-nodejs-setup-development-environment/",
      "bio": "Become a Professional Node.js Developer",
      "objectives": [
        "Setup development playground for node.js"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Development Environment Overview": [
          "Overview",
          "Setup Git Repository",
          "Setup Github Access Linux & Mac",
          "Setup Github Access Windows",
          "Basic Git Tutorial"
        ],
        "Setup Development Tools": [
          "Install Tools"
        ],
        "Setup Runtime": [
          "Overview",
          "Setup Docker Build",
          "Start Script for Linux & Mac",
          "Start Script for Windows",
          "Setup Website",
          "Setup Website in Windows"
        ],
        "Setup Database": [
          "Overview",
          "Setup Database Code"
        ],
        "Now The Fun Starts": [
          "Let's Start Developing",
          "Next Steps"
        ]
      },
      "requirements": [
        "Knowing a little Javascript and Shell/Bash scripting will help"
      ],
      "description": "This course is designed for developers that are inspired to become profession node.js developers. Either working on projects with their employer, client, or for a personal project, this course will help to get up and running as quickly as possible.\nSetting up a development environment is a very basic need in order to do any professional development, so we have spent a lot of time and effort to ensure that the playground for development is supportive and enables rock-solid coding.\nThis course is for all levels of developers that want to learn node.js outside of simple tutorials that do not teach how to run projects in the real world. They just want to just dive in and build something that is production grade. All the materials are easy-to-follow videos and will take no longer than three hours to get up and running.",
      "target_audience": [
        "Professional developers making the switch to node.js"
      ]
    },
    {
      "title": "Qt6 and QML Intermediate: Interfacing to C++",
      "url": "https://www.udemy.com/course/qt6-qml-intermediate-interfacing-to-c/",
      "bio": "Connect your beautiful QML user interface to a powerfull C++ back end.",
      "objectives": [
        "Interfacing C++ to QML",
        "Building your own QML types from C++",
        "Building QML friendly Types",
        "Data Conversion Between C++ and QML"
      ],
      "course_content": {
        "Welcome": [
          "Welcome",
          "Get Help (Fast)"
        ],
        "Diving In": [
          "Introduction",
          "Context Properties",
          "Connections",
          "C++ Signals",
          "The Q_PROPERTY macro mappings",
          "Context Objects",
          "Calling JavaScript QML from C++",
          "Instantiable Types",
          "Instantiable Modules",
          "Singleton Objects",
          "Summary"
        ],
        "Data Conversions between C++ and QML": [
          "Introduction",
          "Basic Data Types",
          "Time and DateTime",
          "Sequence Types to JavaScript Arrays",
          "QVariantList and QVariantMap",
          "Summary"
        ],
        "Let's build stuff: A REST client.": [
          "Introduction",
          "REST Client: QNetworkAccessManager",
          "REST Client: QRestAccessManager",
          "REST Instantiable Type",
          "Summary"
        ],
        "Non Visual Types": [
          "Introduction",
          "Custom Type: Counter",
          "Enums",
          "Counter: Enum Version",
          "Object List Properties",
          "Object List Properties: Inherited Types",
          "Default Properties",
          "Grouped Properties",
          "Attached Properties",
          "Property Value Sources",
          "Summary"
        ],
        "Farewell": [
          "Farewell",
          "Course List - Bonus"
        ]
      },
      "requirements": [
        "A fair amount of knowledge about the C++ side of Qt",
        "A fair amount of knowledge about QML and Qt Quick",
        "Qt and Qt Creator installed on your local system",
        "Drive and willingness to learn",
        "I'll teach you the rest"
      ],
      "description": "Qt Quick  and QML are the latest and greatest User Interface design technologies from the Qt Framework. They are best known and used to build Fluid, Dynamic and cross platform user interfaces, that can run on Windows,Mac,Linux,Android,IOS and even embedded devices.\nQt Quick User interfaces can be easily extended or interfaced with a powerful C++ back end. Allowing you to take full advantage of what Qt has to offer.\nThis course will teach you various key techniques you need to know to make your powerful C++ back end and your shinny fluid Qt Quick User interface work together in one single piece of software product. You will be exposed to  different facilities at your disposal in the Qt framework.Those will help you write Qt code in the recommended way. That is building fluid an eye catching UI in QML and connecting it a a powerful C++ code base for heavy operations.\nThe ideal student for the course is someone who already knows their way around both the C++ side of Qt and Qt Quick ; and is willing to learn how the two sides can communicate. So if you are rusty on either Qt C++ or Qt Quick(QML), please learn the basics first. If in doubt, do check my previous courses on both Qt C++ and Qt Quick.\nYou will take advantage of lots of straight to the point and easy to understand lectures, most of them backed by engaging demos for you to try out the concepts on your own right away.\nIf you're looking to learn how you can get your Qt C++ and QML code bases to connect and talk to each other, this course will get you up and running in the shortest amount of time possible.\n\nThe course starts right away getting your hands dirty doing things like Calling C++ methods from QML,Calling Javascript/QML methods from C++, Using Q_PROPERTY mechanism to propagate properties and changes between C++ and QML and more.\nYou then get to take a comprehensive look at how your data is transformed when you juggle it between QML and C++. Next we do a live demo; a REST API client that downloads data in C++ and feeds the data to Qt Quick for display. The course then dives in one of the most interesting topics of registering a type in C++ to be used and instantiated in Qt Quick. This will allow you to create your own QML types like Person, Car, Tomato,... On top of that you'll also learn how to make your own QML Apis more readable and usable by incorporating features like Object and List Properties,Default Properties, Attached Properties and Property Value Sources.\nQt is the platform choice for thousands of software projects and used by some of the most successful companies on the planet today. Learning how to make your C++ talk to your shiny Qt Quick UI will unlock the door to really using Qt the way it should be used today. Leveling up your skills as a Qt Developer.\nPlease check out some of the preview videos, and lets get you STARTED connecting your powerful C++ back end to a Dynamic and Fluid Qt Quick User Interface.",
      "target_audience": [
        "Anyone willing to learn what it takes to interface QML to C++"
      ]
    },
    {
      "title": "Amazon Interview Prep: Data Structures & Algorithms",
      "url": "https://www.udemy.com/course/amazon-coding-interview-questions-data-structures-algorithms/",
      "bio": "Practice Top Coding Questions Asked in Amazon's Coding Interview",
      "objectives": [
        "Gain proficiency in tackling the most common coding problems in Amazon interviews",
        "Solve each problem with detailed video solutions with the problem-solving process",
        "Explore solutions in Java, C++, Python, and JavaScript",
        "Enhance understanding by downloading code files for in-depth analysis & comprehension"
      ],
      "course_content": {
        "Easy Problems": [
          "Best Time To Buy And Sell Stocks",
          "Move Zeroes",
          "Majority Element",
          "Linked List Cycle",
          "Contains Duplicate",
          "Valid Anagram",
          "Valid Parenthesis",
          "Diameter Of Binary Tree",
          "Maximum Depth Of Binary Tree",
          "Climbing Stairs",
          "Min Cost Climbing Stairs",
          "Number Of 1 Bits",
          "Missing Number",
          "Single Number",
          "Find Middle Of Linked List",
          "Palindrome Linked Lists",
          "Reverse Linked List",
          "Search Insert Position",
          "Binary Tree InOrder Traversal",
          "Invert Binary Tree",
          "Symmetric Tree",
          "Path Sum"
        ],
        "Medium Problems": [
          "Maximum Sum Subarray",
          "Maximum Product Subarray",
          "Add Two Numbers",
          "Linked List Cycle II",
          "Intersection Of Two Linked Lists",
          "Min Stack",
          "Minimum Add To Make Parenthesis Valid",
          "Group Anagrams",
          "Longest Consecutive Sequence",
          "Kth Largest Element In An Array",
          "Kth Smallest Element In BST",
          "Jump Game",
          "House Robber",
          "House Robber II",
          "Coin Change",
          "Longest Increasing Subsequence",
          "0 1 Matrix",
          "Course Schedule",
          "Flood Fill",
          "Network Delay Time",
          "Combination Sum",
          "Product Of Arrays Except Self",
          "Rotate Array",
          "Sort Colors",
          "Find the Duplicate Number",
          "Three Sum - Hash Table",
          "Search In A Rotated Sorted Array",
          "Two Sum II - Input Array Is Sorted",
          "Magnetic Force Between Two Balls",
          "Binary Tree Level Order Traversal",
          "Longest Common Subsequence",
          "Longest Substring Without Repeating Characters",
          "Partition Equal Subset Sum",
          "Target Sum",
          "Number Of Islands",
          "Surrounded Regions",
          "Subsets",
          "Longest Palindromic Substring",
          "Decode Ways",
          "Set Matrix Zeroes",
          "Spiral Matrix",
          "Validate Binary Search Tree",
          "Valid Sudoku"
        ],
        "Hard Problems": [
          "Trapping Rain Water",
          "Sliding Window Maximum",
          "Find Median from Data Stream"
        ],
        "Merge Intervals - Stacks": [
          "Merge Intervals - Java Solution",
          "Merge Intervals - Javascript Solution",
          "Merge Intervals - C++ Solution",
          "Merge Intervals - Python Solution"
        ],
        "Two Sum - Hash Table": [
          "Two Sum - Java Solution",
          "Two Sum - Javascript Solution",
          "Two Sum - C++ Solution",
          "Two Sum - Python Solution"
        ],
        "Find First And Last Position Of Element In Sorted Array - Binary Search": [
          "Find First And Last Position Of Element In Sorted Array - Java Solution",
          "Find First And Last Position Of Element In Sorted Array - Javascript Solution",
          "Find First And Last Position Of Element In Sorted Array - C++ Solution",
          "Find First And Last Position Of Element In Sorted Array - Python Solution"
        ],
        "Lowest Common Ancestor of a Binary Tree - Trees": [
          "Lowest Common Ancestor of a Binary Tree - Java Solution",
          "Lowest Common Ancestor of a Binary Tree - Javascript Solution",
          "Lowest Common Ancestor of a Binary Tree - C++ Solution",
          "Lowest Common Ancestor of a Binary Tree - Python Solution"
        ],
        "Pow(X,N)": [
          "Pow(X,N) - Java Implementation"
        ],
        "Rotate Image": [
          "Palindromic Substrings - Java Implementation",
          "Rotate Image - Java Implementation"
        ]
      },
      "requirements": [
        "Basic programming experience in any of the 4 languages: Java, JavaScript, C++ & Python"
      ],
      "description": "Are you searching for a course that can truly land you a job at Amazon?\n\n\nYour search ends here. Want to know why?\n\n\nYour time is precious.\n\n\nIt's time to concentrate on problem-solving. No more hunting for questions, feeling confused or wondering if you've practiced enough.\n\n\nBecause I'm here to guide you, just like I've helped hundreds of students over the past X years.\n\n\nAll you have to do is prepare yourself to excel in your Amazon coding interviews with confidence. This comprehensive course will help you throughout your journey.\n\n\nThis course is designed to focus on the top problems commonly asked during Amazon interview rounds, preparing you thoroughly for any challenge that comes your way.\n\n\nAre you ready to learn?\n\n\nIn this course, you'll:\n\n\nDive into carefully curated collections of the most frequently asked coding problems in Amazon interviews, ensuring you're fully prepared. I’ve hand-picked them for you, so you can focus on solving and understanding concepts.\n\n\nFollow along with detailed step-by-step video solutions, where I'll guide you through each problem from start to finish. You'll witness the entire problem-solving process, gaining a deep understanding of concepts as we go.\n\n\nGet access to a collection of carefully selected LeetCode questions aimed at boosting your proficiency in data structure and algorithm challenges, ideal for Amazon coding rounds.\n\n\nChoose from video solutions in four popular programming languages: Java, C++, Python, and JavaScript. This way, you can master these problems with ease in the language you're most comfortable with.\n\n\nAccess downloadable code files for every problem, allowing you to analyze and dissect the code at your own pace, ensuring a thorough comprehension of each solution.\n\n\nReady to secure your dream job at Amazon?\n\n\nEnroll now and let's turn your aspirations into reality together!\n\n\nDon't wait any longer to achieve your career goals.\n\n\nJoin the course today and start your journey towards success.\n\n\n\n\n\n\nWho this course is for:\nSoftware developers gearing up for Amazon coding interviews\nDevelopers aspiring to work as software developers at Amazon\nDevelopers looking to sharpen their skills with LeetCode questions commonly asked in Amazon interviews\nThose eager to practice LeetCode problems in Java, JavaScript, C++, or Python languages",
      "target_audience": [
        "Basic programming experieThis course is for software developers and students who want to practice for coding interviews at Amazon, in either of the 4 languages: Java, JavaScript, C++ & Python"
      ]
    },
    {
      "title": "Understanding Chef: The Practical Guide",
      "url": "https://www.udemy.com/course/understanding-chef-the-practical-guide/",
      "bio": "Learn step by step process to manage your software infrastructure using Chef",
      "objectives": [
        "Learn to setup web infrastructure using Chef",
        "Master core concepts of provisioning and configuration management",
        "Learn practical applications of Chef",
        "Ace the Chef certification exam"
      ],
      "course_content": {
        "Introduction": [
          "Course Intro",
          "Introduction to configuration management",
          "Introduction to Chef",
          "Section 1"
        ],
        "Tools of the trade": [
          "Chef Development Kit",
          "Chef Workflow",
          "Understanding Ruby",
          "Ruby Continued",
          "Ruby Features",
          "Advance Ruby",
          "Ruby Conclusions",
          "Section 2"
        ],
        "Writing recipes in Chef": [
          "Chef - Simple Example",
          "Using Version Control",
          "Package Resource",
          "OHAI",
          "Creating chef recipe"
        ],
        "Advanced Cooking": [
          "Building a LAMP Stack",
          "Building the cookbook",
          "Installing Components",
          "Installing PHP7",
          "Installing Maria DB",
          "Creating the Default Database",
          "Installing Code Igniter",
          "Running the Recipe",
          "Cookbook Wrapup",
          "Section 4"
        ],
        "Working with Chef server": [
          "Chef Attributes",
          "Attribute Precedence",
          "Chef Server Types",
          "Our lab architecture",
          "Lab continued",
          "Splitting our Infrastructure",
          "Infrastructure continued",
          "Chef Sever Wrapup"
        ],
        "Cookbook Marketplace": [
          "Introduction to Chef Marketplace",
          "Wrapper cookbook creation",
          "Using a marketplace cookbook",
          "Implementing the cookbook",
          "Deployment",
          "Running and testing the cookbook",
          "Section 6"
        ],
        "Other Important Concepts": [
          "Roles",
          "Testing the Role",
          "Practical Lab Exercise",
          "Chef Environments",
          "Searching Chef",
          "Searching inside recipes",
          "Data bags",
          "Data bagss - Part 2",
          "Encrypted Data Bags",
          "Section 7"
        ],
        "Summary": [
          "Summary",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Basic knowledge of Linux is important to complete the course",
        "Knowledge of tool like vagrant is a plus"
      ],
      "description": "Break down automation with our tasty and easy to learn Chef tutorial!\nWrite your own code and design your infrastructure from scratch to build the perfect combination of machines for your need. Building and configuring your perfect cloud infrastructure shouldn’t be hard – and with Chef it really isn’t.\nChef is a collection of configuration management tools, that can help you code exactly how your infrastructure should look, behave and evolve. You write pieces of codes in Ruby, which are known as recipes, that are used to configure systems. These recipes are then deployed to multiple serves, which then follow the instructions defined in the cookbook.\nIf you want to become a chef and write the ultimate cookbook for your cloud architectures, then here is where you can start!\nOur awesome course on Chef has been designed with the perfect combination of sweet and spicy to help you not only learn Chef, but also show you exactly how you can build the best stack. No more daunting concepts, that cover just theory and leave you more confused. Our ‘Understanding Chef’ tutorial will take you on a journey of learning Chef.\nIn this course, you will not only jump into Chef and it’s functions, but instead you will become familiar with it as you build a complete real-world example from the ground up. The course is a long lab that will take you through the features and functions of Chef by building an actual LAMP stack. Our hands-on approach to the course, will not only help you learn the basics but also actively build components on the development stack such as Apache Web Server, MySQL server, and PHP.\nFrom working with Chef, to writing your own recipes and building your own blueprint, this course can help you through it all!\nEnroll now and become a master chef of automation!",
      "target_audience": [
        "Any one who wants to learn configuration management using Chef",
        "Anyone who wants to automate infrastructure management"
      ]
    },
    {
      "title": "Google Coding Interview Prep - Solve Top Leetcode Problems",
      "url": "https://www.udemy.com/course/google-coding-interview-questions-data-structures-algorithms/",
      "bio": "Crack the Google coding interview by going through the Leetcode questions asked in last 6 months!",
      "objectives": [
        "Master the most frequently asked coding problems in Google interviews",
        "Detailed video solutions for each problem",
        "Gain insight into the entire problem-solving process",
        "Video solutions available in Java, C++, Python, and JavaScript",
        "Access downloadable code files for deeper analysis and understanding."
      ],
      "course_content": {
        "Easy - Problems": [
          "Counting Bits",
          "Search Insert Position - Sorting",
          "Find Middle Of The Linked List",
          "Linked List Cycle",
          "Reverse Linked List",
          "Valid Paranthesis",
          "Diameter Of A Binary Tree",
          "Invert Binary Tree",
          "Symmetric Tree",
          "Path Sum",
          "Climbing Stairs",
          "Contains Duplicate",
          "Majority Element",
          "Max Consecutive Ones",
          "Missing Number",
          "Move Zeroes"
        ],
        "Medium - Problems": [
          "Flood Fill",
          "Maximum Sum Subarray",
          "House Robber",
          "Jump Game",
          "Product Of Array Except Self",
          "Group Anagrams",
          "Longest Substring Without Repeating Characters",
          "Add Two Numbers",
          "Three Sum",
          "Binary Tree Level Order Traversal",
          "Kth Largest Element In An Array",
          "Coin Change",
          "Longest Increasing Subsequence",
          "0-1 Matrix",
          "Number Of Islands",
          "Combination Sum",
          "Subsets",
          "Decode Ways",
          "Longest Consecutive Sequence",
          "Longest Palindromic Substrings",
          "Maximum Subarray",
          "Rotate Array",
          "Set Matrix Zeroes",
          "Sort Colors",
          "Spiral Matrix",
          "Valid Sudoku"
        ],
        "Hard - Problems": [
          "Trapping Rain Water",
          "Find Median from Data Stream"
        ],
        "Merge Intervals - Stacks": [
          "Merge Intervals - Java Solution",
          "Merge Intervals - Javascript Solution",
          "Merge Intervals - C++ Solution",
          "Merge Intervals - Python Solution"
        ],
        "Find First And Last Position Of Element In Sorted Array - Binary Search": [
          "Find First And Last Position Of Element In Sorted Array - Java Solution",
          "Find First And Last Position Of Element In Sorted Array - Javascript Solution",
          "Find First And Last Position Of Element In Sorted Array - C++ Solution",
          "Find First And Last Position Of Element In Sorted Array - Python Solution"
        ]
      },
      "requirements": [
        "Basic programming experience in any of the 4 languages: Java, JavaScript, C++ & Python"
      ],
      "description": "Forget everything for a moment and imagine how it would feel if the questions you're asked in your Google interview are ones you've already solved before.\nOr at least, you've tackled similar questions, so you know exactly which algorithm to use and how to proceed to find an optimized solution.\n\n\nImagine the confidence you'd feel when explaining your solution.\n\n\nExciting, isn't it?\n\n\nSo, let's stop wasting time on irrelevant questions.\n\n\nIt's time to shift our focus to problem-solving, which truly matters.\n\n\nThat's why I've curated a list of top questions commonly asked in Google interviews and you can expect them in your interview rounds.\n\n\nThe journey may seem complicated but I'm here to support and guide you, just like I've guided countless students over the years.\n\n\nIn this course, you'll get:\n\n\nTop Google interview problems: I've meticulously curated a collection of the most frequently asked coding problems in Google interviews to ensure you're well-equipped for any challenge.\n\n\nStep-by-step video solutions: Follow me as I lead you through each problem, providing insight into the whole problem-solving process.\n\n\nMultiple programming languages: To master these problems easily, choose your preferred language from Java, C++, Python, or JavaScript.\n\n\nDownloadable code files: Understand the code, analyze it at your own pace, and enhance your comprehension with downloadable code files for every problem.\n\n\nWhy choose this course?\n\n\nJust like you, I've been through the process of preparing for big companies, so I understand exactly what it's like.\n\n\nThat's why I prioritize conceptual clarity. I want you to feel confident and ready to tackle any coding challenge that comes your way during your Google interview prep.\n\n\nHere’s what all you get:\n\n\nExpert guidance: Learn from an experienced software engineer with a stellar track record in acing Google coding interviews.\n\n\nComprehensive coverage: Receive a well-rounded preparation with extensive coverage of a wide spectrum of data structure problems.\n\n\nAccess a curated selection of LeetCode questions: These questions are designed to sharpen your data structure and algorithm problem-solving abilities, perfect for Microsoft coding interviews.\n\n\nLanguage Flexibility: Video solutions can be accessed in four different programming languages for comfortable understanding and implementation.\n\n\nLifetime access: Enroll once and enjoy lifetime access to all course materials and updates, ensuring preparedness for future interviews.\n\n\nDon't let this opportunity slip away.\n\n\nEnroll now and take the first step toward securing your dream job at Google!\nWho this course is for:\n\n\nThis course is ideal for software developers and students who want to practice coding interviews at Google.",
      "target_audience": [
        "This course is for software developers and students who want to practice for coding interviews at Adobe"
      ]
    },
    {
      "title": "Learn New Relic: Monitoring and DevOps for the Cloud [AWS]",
      "url": "https://www.udemy.com/course/learn-new-relic-monitoring-and-devops-for-the-cloud-aws/",
      "bio": "Monitor your AWS/Cloud Infrastructure using New Relic",
      "objectives": [
        "Setup a working instance of New Relic locally",
        "Monitor your AWS infrastructure with New Relic",
        "The different types of data New Relic can ingest and process",
        "Basic understanding of AWS, EC2 and RDS",
        "How to send notifications for anomalies via Slack and Email",
        "Send over Events and Logs from AWS to New Relic",
        "Understand why we need New Relic and what the pricing looks like",
        "Set up New Relic Logging locally and write some basic queries"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Why New Relic"
        ],
        "Preparing to Setup New Relic": [
          "How is the data stored inside New Relic",
          "Pricing",
          "Case Study",
          "New Relic Theory - Quiz"
        ],
        "Installation and Setup": [
          "Section Overview",
          "SignUp",
          "Setup APM for a Simple NodeJS Application",
          "Setup on a Windows Machine",
          "Setting up Logging",
          "The Different Types of data",
          "Running your First Query"
        ],
        "AWS Monitoring": [
          "Section Overview",
          "SignUp for AWS",
          "Understanding AWS",
          "Understanding EC2",
          "Integrate AWS with New Relic",
          "Monitor EC2 instances with New Relic",
          "What is AWS RDS",
          "Monitor RDS instances",
          "Advanced Monitoring for RDS",
          "AWS ELB Monitoring",
          "What is AWS ELB",
          "AWS Monitoring - Quiz"
        ]
      },
      "requirements": [
        "A desire to learn and Crush It!",
        "A working Computer with either Windows/MacOS or Linux",
        "An Internet connection",
        "All technologies we will use will be free/have free trial versions",
        "Some Basic knowledge of unix/linux commands can be helpful, but not required",
        "You must setup a free or a paid account on Amazon AWS"
      ],
      "description": "Welcome to this New Relic Monitoring Course\nWe are very excited to get this course out to you. This course will take you from being a beginner to an expert in New Relic.\nThis course has a  hands-on learning experience make sure that the concepts you learn in the course are well practiced and you gain confidence in using your knowledge immediately.\nWhy Learn New Relic?\nAnother Question: How can you monitor your AWS/cloud infrastructure?\nWhether you are new to AWS or an advanced user, New Relic will give you the end to end observability you require to monitor your cloud infrastructure. New Relic utilizes a single data platform for all metrics, events, logs, and traces and delivers the ability to visualize, analyze, and troubleshoot your entire AWS environment. In this course you will practice AWS monitoring using EC2 and RDS instances. New Relic can monitor all other parts of your AWS infrastructure as well. Before moving onto the cloud we will learn the theory around New Relic Monitoring as well as how to set it up locally.\nNew Relic will help you in all stages for AWS/Cloud adoption. From Migration and Modernization to Optimization, New Relic is there for you. Pinpoint all issues during migration to AWS and take technical and business decisions accordingly. Modernize your DevOps process and monitor your performance using New Relic. Finally, by monitoring all your data, you can use New Relic to optimize end user experience.\nEverything is well documented and separated, so you can find what you need. Assignments and Quizzes will make sure you stay on track and test your knowledge. The course will have a combination of theory and practical examples.",
      "target_audience": [
        "Software Developers who want to understand how to get started with New Relic",
        "DevOps Engineers",
        "System Reliability Engineers",
        "Want to add New Relic to your resume?",
        "Those looking to monitor their AWS instance with New Relic"
      ]
    },
    {
      "title": "Building APIs doing Outside-In TDD in Node and Typescript",
      "url": "https://www.udemy.com/course/building-apis-doing-outside-in-tdd-in-node-and-typescript/",
      "bio": "A practical example on how to build REST API doing Outside-In TDD in Node, Typescript and Jest (express and mongodb)",
      "objectives": [
        "Build REST API in Node and TypeScript",
        "Test with Jest framework",
        "Outside-in TDD approach a.k.a. mockist a.k.a. London school TDD",
        "Test doubles, mocks, spies, stubs, fakes and dummies",
        "Docker",
        "Mongo MongoDB Mongoose",
        "Node and Express"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Course"
        ],
        "Problem Presentation and Project Initialization": [
          "Problem presentation",
          "The OpenAPI Specification (OAS) File",
          "Project Initialization"
        ],
        "Retrieve Data from the system": [
          "First Red Acceptance Test",
          "First Green Acceptance Test",
          "Refactor I",
          "Extending the Controller and the ErrorHandler",
          "Refactor II",
          "Secret Retriever Service",
          "Secret Repository",
          "Pass Get Secrets Acceptance Tests",
          "Uncontrolled Errors"
        ],
        "Store data from the system": [
          "Write the first failing acceptance test",
          "Implement the controller",
          "The Secret Storer service",
          "Token Generator",
          "Extending the Secret Repository",
          "Unhandled Errors",
          "Refactor III"
        ],
        "End To End Testing with Jest and supertest": [
          "Write End to End (e2e) Tests"
        ]
      },
      "requirements": [
        "Familiar with Node, Express and Typescript",
        "Familiar writing tests",
        "Familiar with docker and mongodb"
      ],
      "description": "In this course we will implement a REST API in Node with express and typescript. We will store data in a mongodb database using mongoose. In order to implement this REST API, we will receive an OpenAPI Specification (OAS) file that will be the base to design and build our application.\n\nThe API we are going to build is a clone of the One Time Secret site. We will create an application that stores our secrets and provides us a URL to access them later, but with the condition that we can access that URL one time only. Whenever we attempt to retrieve the same secret again, hitting the same URL for a second time, we will receive an error.\n\nGiven that we already know how the public interface would look like with the OpenAPI Specification file provided, we will be using Test Driven Development (TDD) but following an Outside-In approach, also known as mockist approach or London School TDD. We will start writing the acceptance criteria tests, keeping them in red, we will start the double cycle and write unit tests for the inner components. That way we will build our way inside the application, one level at a time until we can make the acceptance test completely pass. While coding, even though we already have a quite clear direction of our application design, we will try to get inspired with DDD, Hexagonal Architecture and CQRS.\n\nKudos to @Panos for the constructive feedback that helped to make this course better.",
      "target_audience": [
        "Developers with certain experience writing code",
        "Developers with certain experience writing tests",
        "Developers with certain experience practicing TDD"
      ]
    },
    {
      "title": "User Stories - The 3 C's, INVEST and User Story Splitting!",
      "url": "https://www.udemy.com/course/user-stories-the-3-cs-invest-and-user-story-splitting/",
      "bio": "Learn the 3 C's, INVEST and User Story splitting. With 2 example projects!",
      "objectives": [
        "Learn what a User Story is",
        "Why we use User Stories",
        "User Stories vs. Requirement Specification",
        "Split User Stories",
        "Kanban board flow with User Stories",
        "User Story Splitting",
        "Lean Startup Introduction",
        "Estimating User Stories with User Story Point"
      ],
      "course_content": {
        "Basics of User Stories": [
          "What is a User Story?",
          "Why use User Stories?",
          "Acceptance Criteria and the three C's",
          "Definition of Done vs. Acceptance Criteria"
        ],
        "How to write GOOD User Stories with INVEST": [
          "INVEST criteria for good user stories!",
          "Why should User Stories be small?"
        ],
        "Lean and Vertical Slicing": [
          "How big should a User Story be?",
          "Software Layering & Horizontal Trap",
          "Introduction to Lean Startup"
        ],
        "User Story Splitting Website Example": [
          "Splitting the parent Epic Story",
          "Splitting the Order Section - MVP Planning",
          "Product section & Contact form - MVP planning",
          "MVP done! Iteration/Sprint 2",
          "When should User Stories be estimated and made more detailed?",
          "Retrospective - what did we do?"
        ],
        "Uber/Taxi Clone App with User Stories and Lean Methodology": [
          "Our first User Story",
          "We're not following INVEST!",
          "How can we make our business more Lean?",
          "Look ma! No app!",
          "2nd iteration of our Taxi Business",
          "3rd iteration of our Taxi App Business",
          "Lean Contracting Marketplace"
        ]
      },
      "requirements": [
        "Basic english skills"
      ],
      "description": "Hello and welcome to the User Stories course!\nIn this course you will learn in a relaxed and fun manner how to write basic user stories, what the 3 C's in User Stories are. You'll learn about INVEST and User Story splitting.\nYou're also going to learn how User Story splitting ties in with the Lean Startup Methodology and how to launch new projects as soon as possible with User Story Splitting!\nI hope you will enjoy my course, and if you're looking for any explanations feel free to message me any time!",
      "target_audience": [
        "Product Owners",
        "Developers",
        "Designers",
        "Engineers"
      ]
    },
    {
      "title": "MVC pattern - explained and applied",
      "url": "https://www.udemy.com/course/mvc-pattern/",
      "bio": "Learn in an easy way the MVC pattern in just 1 hour. All you need to start learning about the MVC frameworks.",
      "objectives": [
        "Understand the MVC (Model-View-Controller) pattern.",
        "Create your own applications using the MVC pattern.",
        "Get the basic knowledge to work with frameworks based on MVC architecture, for example: ASPNET MVC, Apache Struts, Spring MVC, Cake PHP among others.",
        "You will see how this pattern is implemented."
      ],
      "course_content": {},
      "requirements": [
        "The student must have basic knowledge in some object-oriented programming language"
      ],
      "description": "You will learn about the famous MVC design pattern which stands for Model-View-Controller. This pattern is widely used in software engineering and many people talk about it, but few people know how to use it properly. You will learn, in an easy way, the MVC pattern in just 1 hour !\nMany programmers still develop software systems without following any pattern or architecture. You will see that the MVC pattern isolates the business logic from the user interface, and makes it easier to manage complexity of application through the separation of concerns.\nSeveral commercial and non-commercial web application frameworks have been created that enforce this pattern, for example: ASP.NET MVC, Apache Struts, Spring MVC, Cake PHP, and many more. Therefore it is very important that you understand the MVC pattern before working with any framework that follows this architecture.\nThis course was created to be fast, objective and easy to understand. It is not tiresome for students like most of the courses about design patterns.\nGet started to learn MVC design pattern today!\nAll videos are in English;\nAll videos contain English subtitles;\nAll source code utilized in this course is available to download.",
      "target_audience": [
        "This course is intended to computer science students, programmers, or simply to those who wish to know the MVC pattern to use it on their own software system design.",
        "If you wish to work with the famous frameworks based on MVC, such as ASPNET MVC, Apache Struts, Spring MVC, Cake PHP among others, then you should learn how to work the MVC architecture before you learn these frameworks."
      ]
    },
    {
      "title": "Dynamic Programming Masterclass (2025)",
      "url": "https://www.udemy.com/course/ai-wont-teach-dynamic-programming-this-way-java/",
      "bio": "Embark on a Journey to Decode Dynamic Programming: Mastering Patterns for Problem-Solving",
      "objectives": [
        "Gain the ability to visualize and comprehend the majority of Dynamic Programming challenges",
        "Solve actual interview problems and follow-ups",
        "Understand detailed solutions with code in Java to over 15 popular Dynamic Programming questions",
        "Intermediate level problem solving skills",
        "Enhance your problem-solving abilities and grow as a more proficient developer"
      ],
      "course_content": {},
      "requirements": [
        "Basics of programming such as if/else statements, loops & functions",
        "Basics of Java (preferred not compulsory)",
        "Basics of common data structures like 2D arrays and trees (preferred not compulsory)"
      ],
      "description": "Welcome to \"AI won't teach Dynamic Programming this way (Java)\", a comprehensive course designed for programmers and computer science enthusiasts eager to deepen their understanding of this crucial algorithmic technique. Dynamic Programming (DP) is a method for solving complex problems by breaking them down into simpler subproblems. This course is tailored to equip you with a robust understanding of DP concepts, enabling you to apply them in various programming challenges and real-world scenarios.\n\n\nBroad Categories of DP problems that we teach in this course:\n\n\nLongest Increasing Subsequence & Variations: Dive into the intricacies of finding the longest increasing subsequence in a sequence of numbers, along with its various forms and applications.\nLongest Common Subsequence (LCS) & Variations: Explore the LCS problem, crucial in file comparison, DNA sequencing, and more, and learn about its different versions.\nBuy and Sell Stock Problems & Variations: Analyze different scenarios in stock trading to maximize profit using DP, covering various constraints and conditions.\nMatrix Pattern Problems & Variations: Master DP approaches for matrix-related problems, crucial in image processing, game development, and other areas.\nDP in Trees & Variations: Explore how DP can be extended to more than arrays and 2D arrays. The problems in this category varies a lot in difficulty levels and is crucial when it comes to intermediate level problem solving skills.\n\n\nCourse Structure\nVideo Lectures: Engaging and detailed video lectures for each topic, offering both theoretical understanding and practical examples.\nQuizzes: After each lecture, test your understanding with comprehensive quizzes which are actual coding interview follow-ups.\nResources: Java code for each problem discussed in lectures.\nWho This Course Is For\nAnyone studying Data Structures and Algorithms\nAnyone who is interested in improving their problem solving skills\nAnyone looking to begin or enhance their journey in Dynamic Programming\nAnyone aiming to get ready for coding interviews of any kind\nWhat You Will Learn\nGain the ability to visualize and comprehend the majority of Dynamic Programming challenges\nSolve actual interview problems and follow-ups\nUnderstand basics of Recursion and how to use it for advanced problem solving\nUnderstand detailed solutions with code in Java to over 15 popular Dynamic Programming questions\nIntermediate level problem solving skills\nEnhance your problem-solving abilities and grow as a more proficient developer\nPrerequisites\nBasic knowledge of programming (preferably in Python, Java, Javascript or C++).\nBasic knowledge of Data Structures like 2D Arrays and Trees would be beneficial.\nWhat's Included\nAccess to all video lectures and quizzes.\nDownloadable resources and lectures.\nCertificate of completion.\nIt is essential to note that all the problems we discuss in this course are among the most asked MAANG (Meta/Facebook, Amazon, Apple, Netflix, Google) interview questions.\nEnroll now and embark on your journey to mastering Dynamic Programming, an essential skill for every programmer!",
      "target_audience": [
        "Anyone studying Data Structures and Algorithms",
        "Anyone who is interested in improving their problem solving skills",
        "Anyone looking to begin or enhance their journey in Dynamic Programming",
        "Anyone aiming to get ready for coding interviews of any kind"
      ]
    },
    {
      "title": "Amazon CloudWatch in 60 Minutes: Monitor your AWS resources",
      "url": "https://www.udemy.com/course/aws-monitoring/",
      "bio": "Learn from Releaseworks Cloud Engineers: How to aggregate logs and monitor your AWS infrastructure and applications.",
      "objectives": [
        "How to monitor AWS resources like EC2 instances, Application Load Balancers, ECS clusters and more",
        "How to aggregate logs from your applications into Amazon CloudWatch",
        "How to use Amazon CloudWatch Synthetics to monitor key transactions in your application",
        "How to use Amazon CloudWatch ServiceLens to make troubleshooting of your application stack easier",
        "How to use Python and Boto3 to read data from the Amazon CloudWatch API",
        "How to use Python and Boto3 to send Custom Metrics into Amazon CloudWatch"
      ],
      "course_content": {},
      "requirements": [
        "Basic understanding of AWS is beneficial",
        "You will need an AWS account (instructions provided on course)"
      ],
      "description": "Learn from industry-leading DevOps and Cloud Engineers at Releaseworks:\nIn the next 60 minutes, you will learn the core features of CloudWatch like Metrics, Logs, Events, Alarms, ServiceLens and Synthetics, and how to use them in practice. We will also cover the basic usage of the CloudWatch API with Python and the Boto3 library.\nAmazon Web Services, or AWS, is the leading cloud platform in the world. Amazon CloudWatch is the native monitoring and log aggregation platform in AWS. Amazon CloudWatch enables you to monitor both infrastructure and applications running in AWS and provides a multitude of useful features to gather, analyze, and visualize operational data.\nAmazon CloudWatch Fundamentals includes 8 labs to help you practice along with the instructor, and learn by doing.\nThis course will teach you how to create monitoring dashboards for your AWS resources, and configure alarms when there is an issue that needs your attention. We will walk you through using ServiceLens to monitor the health of your applications beneath the surface, and creating canary scripts with CloudWatch Synthetics to enable better monitoring of your application and API endpoints.\nTo help you take your knowledge to the next level, we will also teach you how to use simple Python scripts to integrate with the open CloudWatch API for reading data and sending Custom Metrics into Amazon CloudWatch.\nFinally, we will teach you the best practices of alerting, based on our experience working with a number of critical systems and software development teams.\n\n\nDid you know that DevOps is one of the most sought-after set of skills in the job market right now, with tens of thousands of open roles globally. According to PayScale, the median DevOps salary in the U.S. is $93,770 per year. The best DevOps specialists on the market can name their price, and often earn more than $200,000 in a year. The best time to start learning DevOps was 5 years ago - the second best time is now!\n\n\nReleaseworks is an upskilling-focussed DevOps and cloud engineering consultancy based in London. We help some of the largest digital organizations in the world to take full advantage of the cloud, and implement DevOps ways of working. Our mission is to help software development teams release better software, faster. Releaseworks Academy is the collection of learning resources that we use to upskill the software development teams of our clients, as well as our own cloud engineers.",
      "target_audience": [
        "Software developers looking to aggregate logs and/or monitor their applications with Amazon CloudWatch",
        "System administrators looking to monitor AWS resources"
      ]
    },
    {
      "title": "Create custom Alexa skill using AWS Lambda function",
      "url": "https://www.udemy.com/course/create-custom-alexa-skill-using-aws-lambda-function/",
      "bio": "Learn to create Skill for Alexa enabled devices such as Amazon Echo for absolute beginners",
      "objectives": [
        "Use Alexa Skill Console to create skills",
        "Publish your skills to store",
        "Use Alexa Core SDK for performing operations",
        "Create lambda function for custom skills"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Course",
          "What is AI & Alexa?",
          "What is Alexa Skill?"
        ],
        "Alexa Skill Kit (Basic concepts)": [
          "Create First Skill",
          "Intents & Utterances",
          "Slot & Slot type"
        ],
        "Alexa Skill Kit (Advance concepts)": [
          "Request & Response format",
          "Create Lambda Function - 1",
          "Create Lambda Function - 2",
          "Enhance Response for Alexa",
          "Launch & Measure"
        ],
        "Using Ask CLI & Alexa SDK": [
          "Using Ask CLI & Alexa SDK",
          "Update Lambda function",
          "Test & Deploy skill",
          "Use Alexa SDK v1 Apdapter",
          "Using ResponseBuilder in Alexa SDK v1",
          "Use Skillinator",
          "Use CloudWatch",
          "Install & Test in Echo Dot"
        ],
        "Using Directives": [
          "Using Cards",
          "Generate Audio using SSML",
          "Using Audio Directive",
          "Using Video Directive",
          "Using Hints in Card",
          "Delegate Directive",
          "ElicitSlot Directive",
          "ConfirmSlot Directive",
          "ConfirmIntent Directive"
        ],
        "Advanced Alexa Operations": [
          "Obtain Device Information",
          "Store data in DynamoDB",
          "Account Linking",
          "State Management",
          "Use Multi language",
          "Create Flash Brief",
          "Using BluePrints"
        ],
        "Conclusion & More": [
          "Best Practice",
          "Conclusion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic knowledge of what is Chatbots",
        "Basic knowledge of JavaScript",
        "Amazon’s Developer Account",
        "AWS Account"
      ],
      "description": "AI is Artificial intelligence, Study of intelligent agents and takes actions. Skills are an ability to perform an operation on devices enabled with Amazon Alexa like Echo.\n\nThroughout this series, I am going to teach you How to create your own custom Alexa skill using Alexa skill console, Alexa SDK, and use AWS Lambda function for this.\nThis course includes 5 Core components for creating your own custom Skills.\n\n\nAlexa is a\nvirtual assistant\nby Amazon. It contains some skill using which user can do various things such as\nask for service\netc.\nAlexa skill Kit provides a user interface to for\nBuild, Measure, and Test skill\nwhich is known as Skill kit.\nAWS Lambda function is backbone on your skill. Alexa skill will send a request to our lambda function and it will\nperform the original operation\n.\nAlexa Skill SDK used to create handlers that will generate a response to our skill in form of JSON. So we just need to call those function only. We will use both\nAlexa SDK and Alexa Core SDK\n.\nASK CLI is a command line tool which allows us to create skill as well as\ndeploy\n, clone too.\nThrough this series, we will learn\nIntroduction to AI, Bots, and Alexa.\nUnderstood the concept of Intent, Utterance as well as Slots.\nJSON format for both Request and Response.\nTest and Deploy, and Publish your custom skill to skill store, as well as test it on your own Echo device.\nUse Alexa SDK version-1 for generating a response.\nUse directives for generating a more rich response with Audio, Video, Hint, Elicit, and Confirm directive.\nPerform some Advance operations such as Account linking, working with DynamoDB, State management.\nAlong with those you will learn how to use Skillinator, CloudWatch.\nWe will also create Flash briefing skill and see Alexa Blueprints.\nWe will learn all above things through this video series. If you have any doubts then you can contact me via mail, message, or Q & A.",
      "target_audience": [
        "This is for newbies who want to create Alexa Skills",
        "Developer who know basic JavaScript and want to create skills",
        "Person who want to create custom skills for Amazon Echo device",
        "Developer who want to create Flash Briefing skill"
      ]
    },
    {
      "title": "Control a LED Matrix via web interface with Arduino ESP32",
      "url": "https://www.udemy.com/course/control-a-led-matrix-via-web-interface-with-arduino-esp32/",
      "bio": "Via a local web server at the ESP we can change the ticker on the LED matrix (MAX7219 8x32)",
      "objectives": [
        "Control of LED matrix via created web interface",
        "Using HTTP request to load data from public APIs",
        "Using JSON objects in Arduino",
        "Displaying graphics and text on a display"
      ],
      "course_content": {
        "Introduction": [
          "Overview LED Matrix",
          "Power supply with step-down module",
          "Wiring ESP32",
          "Wiring ESP8266",
          "All files from this online course"
        ],
        "LED Matrix": [
          "Intro",
          "IDE Setup",
          "Libraries and first text output",
          "Adjust the sliding text",
          "Interconnect LED module",
          "Pacman and text",
          "Rocket, bunny, heart and other content",
          "Create and display your own graphic Let's go online"
        ],
        "Let's go online": [
          "Intro",
          "Establish wifi connection",
          "SPIFFS",
          "SPIFFS Data uploader",
          "Web server for this project",
          "HTML Input und GET-Request",
          "GET parameters on the Arduino",
          "Pass text from website",
          "Show SPIFFS data on website",
          "Control graphics and text via website"
        ],
        "Display external data": [
          "Intro",
          "Show current time via NTP server",
          "Cryptocurrency via free API"
        ],
        "Conclusio": [
          "Adapt to ESP8266",
          "Conclusio and goodbye"
        ]
      },
      "requirements": [
        "First experience in Arduino development. You know how to use the IDE and include libraries."
      ],
      "description": "We build this practical project step by step and you can download all the codes for each chapter. Frustration-free development is guaranteed!\n\n\nIn this video course you will learn how to control a 8x32 LED matrix (or a MAX72xx module). We use the MD_Parola library for this project. With this library we can control the text in many different ways. With this library we have the possibility to implement different ticker settings easily and fast. A text can slide in from one side and stop in the middle of the matrix for a certain time. The duration of the ticker can be adjusted and also the speed and brightness of the ticker can be easily adjusted.\nWe will also insert dot graphics that will make the text \"disappear\" as soon as the graphic slides over the text.\n\n\nWe will create a website in the course using a local web server running on the ESP32/8266. The web server will be configured in such a way that you can access the created (also in this course) website using a fixed IP address. On the website there is an input field where you can enter text. Using jQuery we send a GET request to the Arduino, which evaluates the content and displays it on the LED matrix. This way you can individually control the text via the web server.\n\n\nThe text as well as the website data are stored on the ESP using SPIFFS. This is the flash memory of the Arduino. This means that the current text can be displayed on the website after each opening. By storing the data on the flash memory, every person/end device that calls up the website can see the current text on the LED matrix. Thus, one could also design a larger advertising space via a web server. If the Arduino were disconnected from power, the content of the output would not disappear and would automatically output the text again when the power source is connected again.\n\n\nWe will also display the local time. For this we connect to a NTP server and download the current timestamp. We convert this timestamp into a readable date/time.\n\n\nLast but not least, we fetch the current bitcoin price from a public interface. Thus you learn how to control public APIs with the Arduino and how to evaluate the return value using Arduino JSON.\n\n\n\n\nAfter each video I have saved my code. You can download all codes, so you can get to the result without frustration.\nWe use the following components in this project.\nESP32/ESP8266\nMAX7219 8x32 LED-Matrix\nStep-down-Modul for external 12v power supply (optional)\nSee you in class.\npixelEDI",
      "target_audience": [
        "To all DIY enthusiasts and hobby developers who develop with the Arduino platform."
      ]
    },
    {
      "title": "Learn UML From Easy Step By Step To Complex Diagrams",
      "url": "https://www.udemy.com/course/learn-uml/",
      "bio": "Learn to create 7 types of diagrams in UML via detailed step by step screen recording examples.",
      "objectives": [
        "Students will be able to create class, package, object, activity, sequence, use case, and state diagrams.",
        "Students will be able to create their own UML projects on their own."
      ],
      "course_content": {},
      "requirements": [
        "You must have access to UML software.",
        "You must have a computer (PC or Mac).",
        "You must be a beginner to UML."
      ],
      "description": "Do you need to learn UML for the first time? Then this course is for you!\nThis UML course has been designed by professional software engineers so that we can share our knowledge and help you learn modeling diagrams with the easiest examples ever.\nWe will walk you step-by-step into the software of UML. With every tutorial you will develop new skills and improve your understanding of this powerful tool.\nThis UML course is structured the following way:\nPart 1 - Class Diagrams\nPart 2 - Package Diagrams\nPart 3 - Object Diagrams\nPart 4 - Activity Diagrams\nPart 5 - Sequence Diagrams\nPart 6 - Use Case Diagrams\nPart 7 - State Diagram\nMoreover, the course is packed with easy to understand practical UML examples. So not only will you learn the theory, but you will also get some hands-on UML practice.\nYou should NOT take this course if you aren't a beginner. This is only a beginner level UML course.\nIf you already have advanced UML skills, this course isn't for you.",
      "target_audience": [
        "Beginners who don't know how to create basic UML diagrams."
      ]
    },
    {
      "title": "Java Developer Quick Start",
      "url": "https://www.udemy.com/course/java-developer-quick-start/",
      "bio": "Take a look at the most popular Java technologies today: Maven, Java 8, JUnit+Mockito and Spring!",
      "objectives": [
        "The basics of Apache Maven - the world's most popular Java build tool for building Java projects",
        "The basics of Java 8 and it's new features - the most important Java features to know about since Java's last main update of Java 5 with generics",
        "The basics of JUnit and Mockito - the de facto standard for unit testing Java applications",
        "The basics of the Spring framework - the word's number one base framework which most enterprise Java projects are built on"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to the Course!"
        ],
        "Apache Maven - The No 1 Java Build Tool!": [
          "Creating a Maven Project with the Quickstart Archetype",
          "Performing Simple Build Tasks with Maven",
          "The Project Object Model and POM File",
          "Resolving a Simple Dependency"
        ],
        "Java 8 - The most important release of Java to date!": [
          "A Quick Look at the Main Java 8 Features",
          "Lambda Expressions- Syntax and Examples",
          "Coding and Referencing a Simple Lambda Expression",
          "Refactoring a Lambda Expression by Adapting an Existing Functional Interface"
        ],
        "JUnit and Mockito - The world's top Java test framework combination!": [
          "Introducing a Simple Unit Test in JUnit",
          "Structure of a Unit Test",
          "What is Mockito and what are Mock Objects?",
          "Creating a project which uses JUnit and Mockito"
        ],
        "Spring Framework - The number 1 base framework for almost all Java projects!": [
          "Configuring a project's dependencies to use Spring",
          "A Look at the Application Context (aka The Spring Container)",
          "Creating a Bean Managed with Spring's XML Container Configuration",
          "Retrieving and Using a Bean from the Spring Container"
        ],
        "Wrap Up": [
          "Thanks and where next?"
        ]
      },
      "requirements": [
        "A basic understanding of Java programming is useful and to be aware of basic coding concepts",
        "It's useful to be able to use the commandline to be able to execute basic commands but is not essential"
      ],
      "description": "In this course we're going to take a sneak peak into the world of professional enterprise Java development and pull back the curtains on the main technologies used!\nWelcome to the Java Developer Quick Start course where I take the top 4 tools, frameworks and topics of modern Java development, and give you a taste of each in easy to absorb units!\nIn this course we cover:\nApache Maven - the world's most popular tool for building Java projects - we'll see how to build our Java projects and see Maven in action\n\n\nJava 8 and it's new features - Java's got functional now, so this is essential to know!  Get up to speed with the new features so you don't get left behind\n\n\nJUnit and Mockito - the top test framework combination for Java projects.  We'll see these two in action to write unit tests and get acquainted with Mockito\n\n\nSpring framework - this is hands-down the number 1 framework which practically all Java projects are built on these days.  We'll look at it together\nWe keep everything to the basics - just enough to get productive and know our way around.\nSo if you're ready to peek inside the world of enterprise Java development and expand your Java knowledge, then sit back and relax and let's jump in together as I take you on the Java Developer Quick Start.  I can't wait to see you inside! ;)",
      "target_audience": [
        "Beginner to intermediate Java developers who are relatively new to the 4 technologies covered",
        "Curious complete beginners to Java might also want to watch this course - but just bear in mind that we assume you're already a developer from the outset (although you can watch to get an idea of the \"next level\" stuff you'll be exposed to if you take your Java knowledge further)",
        "Developers in other languages who are transitioning over to Java - the content is also useful for them and will provide a base framework for understanding what the enterprise Java development landscape looks like"
      ]
    },
    {
      "title": "C# Back-end Development Bootcamp 2025",
      "url": "https://www.udemy.com/course/c-back-end-development-bootcamp-2024/",
      "bio": "Intensive C# Back-end Programming Course",
      "objectives": [
        "Master C# Inside Out: Get to grips with C#'s basic syntax and standout features. It's like learning a new language, but for coding!",
        "Handle the Tough Stuff: Learn to manage methods, deal with errors smoothly, and keep a watchful eye on large-scale app operations.",
        "Build Desktop Apps: Dive into creating the backbone of typical desktop applications. It's like assembling the pieces of a digital puzzle.",
        "Craft and Control Classes: Become a pro at creating classes, using interfaces, and juggling collections in a way that makes sense and sparks creativity.",
        "Harness the Power of Inheritance: Learn how to create intricate class hierarchies, expand existing classes, and develop versatile methods and classes.",
        "Manage Data Like a Pro: Read and write data like a storyteller, and learn the art of transforming data into various formats.",
        "Database and Data Queries: Step into the world of databases with entity data models and use LINQ to play with data like a pro.",
        "Access Remote Data: Venture into accessing and querying data from afar using advanced .NET Framework techniques.",
        "Design Stunning Interfaces: Learn to build visually appealing user interfaces that make your applications stand out.",
        "Boost Performance: Speed up your applications with the magic of asynchronous operations and tasks.",
        "Expand Your Horizons: Mix and match unmanaged libraries and dynamic components to take your C# app to the next level.",
        "Play Detective with Code: Use reflection to explore code metadata, create custom attributes, and even generate code on the fly!",
        "Secure Your Data: Dive into the world of digital cryptography, learning to both lock and unlock your data using advanced encryption techniques."
      ],
      "course_content": {
        "Module 1": [
          "Download and Install Visual Studio",
          "Course Structure Overview and Assurances for Beginners",
          "Review of C# Syntax",
          "Data Types, Operators and Expressions",
          "Programming Language Constructs: Conditional Logic, Iteration Logic, Arrays",
          "Module 1: Intensive Demo & Practice"
        ],
        "Module 2: Creating Methods, Handling Exceptions and Monitoring Applications": [
          "C# Syntax details, Creating and Invoking Methods, Handling Exceptions",
          "Module 2: Part 2",
          "Module 2: Part 3",
          "Module 2: Part 4",
          "Module 2: Part 5"
        ],
        "Module 3: Basic types and constructs of Visual C#": [
          "Implementing Structs and Enums, Organizing Data into Collections",
          "Module 4: Part 2",
          "Module 4: Part 3",
          "Module 4: Part 4"
        ],
        "Module 4: Creating Classes and Implementing Type-Safe Collections": [
          "Creating Classes, Defining Interfaces, Implementing Type-Safe Collections",
          "Module 4: Part 2",
          "Module 4: Part 3"
        ],
        "Module 5: Creating a Class Hierarchy by Using Inheritance": [
          "Creating Class Hierarchies, Extending .NET Framework Classes",
          "Module 5: Part 2"
        ],
        "Module 6: Reading and Writing Local Data": [
          "Reading and Writing Files, Serializing and Deserializing Data, Performing I/O"
        ],
        "Module 7: Accessing a Database": [
          "Creating and Using Entity Data Models, Querying Data by Using LINQ"
        ],
        "Continuing Your C# .NET Journey": [
          "Continue Your C# .NET Journey"
        ]
      },
      "requirements": [
        "Familiarity with Visual Studio.",
        "Proficiency in C# programming, including an understanding of Lambda expressions, LINQ, and anonymous types.",
        "Prior experience working with the .NET Framework.",
        "Experience in web development with HTML, CSS, and JavaScript.",
        "Skills in data querying and manipulation using ADONET.",
        "An understanding of XML and JSON data formats."
      ],
      "description": "On completion of this course, you'll possess the ability to:\nYou will unlock the secrets of C#'s core syntax and features.\nBecome a pro in creating and calling methods, catching and handling exceptions. Moreover, gain a comprehensive knowledge of the monitoring requirements of large-scale applications.\nMaster the basic structure and vital elements of a typical desktop application.\nLearn to craft classes, implement interfaces, as well as create and use generic collections.\nUnleash the power of inheritance to build a class hierarchy, extend a .NET Framework class, and formulate generic classes and methods.\nBecome deft in reading and writing data using file input/output and streams. Moreover, gain the ability to serialize and deserialize data in different formats.\nHarness the strength of creating and using an entity data model for database access and use LINQ to query and update data.\nUse the components in the System Net namespace and the WCF Data Services for accessing and querying remote data.\nDevelop a visually appealing graphical user interface using XAML.\nEnhance the speed and responsiveness of applications through the use of tasks and asynchronous operations.\nLearn to effectively integrate unmanaged libraries and dynamic components into a C# application.\nDiscover how to examine a type's metadata using reflection, create and use custom attributes, generate code at runtime, and manage assembly versions.\nBe adept at data encryption and decryption using symmetric and asymmetric encryption.\nExciting, huh? Are you ready to embark on this extraordinary learning journey? Keep in mind, each new skill you'll acquire here will be a powerful tool in your coding arsenal. Let's get started!",
      "target_audience": [
        "This course is specifically designed for developers who already have some programming experience in languages like JavaScript, Python, Java or PHP and are familiar with object-oriented programming concepts. It is tailored for developers who have a minimum of one month of programming experience in an object-oriented setting."
      ]
    },
    {
      "title": "Build a good structure with golang (go, gin, mysql, gorm)",
      "url": "https://www.udemy.com/course/build-a-good-structure-with-golang-go-gin-mysql-gorm/",
      "bio": "Learn to Build Robust and Scalable Web Applications with Go, Gin, MySQL, and GORM",
      "objectives": [
        "Building a good structure with golang using gin framework",
        "Using the most popular golang plugins",
        "Have a good practice on creating custom packages",
        "Complete building a blog project with authentication system",
        "Learn how to use gin framework the HTTP web framework written in Golang",
        "Build an advanced features like [migrations, seeders] and creating a pretty cli"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Source code",
          "Join our community"
        ],
        "Project structure": [
          "Project structure",
          "Project configurations",
          "Cli interactions"
        ],
        "Packaging": [
          "Create config package",
          "Create routing package",
          "Create serve package",
          "Create html package",
          "Create static package"
        ],
        "Blog project": [
          "Blog project - Home page"
        ],
        "Database": [
          "MySQL connection",
          "Database Models",
          "Database Migration",
          "Database Seeder"
        ],
        "Project layers": [
          "Repository layer",
          "Service layer",
          "Custom response"
        ],
        "Blog pages": [
          "Blog project - Finalize home page",
          "Blog project - Show article part 1",
          "Blog project - Show article part 2",
          "Blog project - Show article part 3"
        ],
        "Authentication": [
          "Blog project - Register form",
          "Blog project - Handle register form part 1",
          "Blog project - Handle register form part 2",
          "Blog project - Handle form errors",
          "Blog project - Show errors on the form",
          "Blog project - Show old data on the form",
          "Blog project - Finalize registration",
          "Blog project - Login form",
          "Blog project - Handle login form",
          "Blog project - Finalize login",
          "Blog project - Auth middlewares"
        ],
        "Final touches": [
          "Blog project - Article form",
          "Blog project - Handle article form",
          "The end",
          "Source code",
          "Stay connected and keep learning: Join our community today"
        ]
      },
      "requirements": [
        "Basic knowledge is required for Golang",
        "Basic knowledge is required for Mysql"
      ],
      "description": "If you're looking to learn how to build robust and scalable web applications with Go, Gin, MySQL, and GORM, this is the course for you. In this course, you will learn how to build a solid and maintainable structure for your Go web applications using some of the most popular tools and frameworks in the Go ecosystem.\nWe will start by discussing the principles of good application design and how to implement them in Go using a layered architecture and various design patterns. You'll also learn how to set up a project structure that facilitates code organization, reuse, and testing.\nNext, we'll dive into Gin, a lightweight web framework that makes it easy to handle HTTP requests and responses in a clear and concise way. You'll learn how to use Gin to create web applications.\nWe'll also cover MySQL, one of the most popular relational database engines, and GORM, a powerful ORM library that provides a simple and intuitive way to work with databases in Go. You'll learn how to connect your application to a MySQL database, and how to perform common database operations such as querying, inserting, updating, and deleting data.\nThroughout the course, you'll work on a sample project that demonstrates all the concepts and techniques covered. By the end of the course, you'll have a solid understanding of how to build robust and scalable web applications with Go, Gin, MySQL, and GORM, and how tomaintain them over time as they evolve and grow. With these skills, you'll be well-equipped to develop high-performance and scalable web applications that can handle large amounts of traffic and data.\nIn summary, this course is designed to provide you with a comprehensive and practical understanding of how to build web applications with Go, Gin, MySQL, and GORM. Whether you're new to Go or an experienced developer looking to expand your skill set, this course will equip you with the knowledge and tools you need to build high-quality and maintainable web applications. So, enroll now and start your journey to becoming a proficient Go web developer!",
      "target_audience": [
        "Beginner Golang developer need to have a solid understand of creating better structure"
      ]
    },
    {
      "title": "The Complete Course of Compiler Design",
      "url": "https://www.udemy.com/course/compiler-design-course/",
      "bio": "Learn how to develop Compilers in a Professional way from Scratch. Build your own C++ Compiler, from A to Z!",
      "objectives": [
        "At the end of the course you will fully master Compiler Design, to be able to develop your own C++ compilers from scratch",
        "You will be able to understand the fundamental theory of Compilers, ending with advanced practical examples & step by step exercises",
        "You will become familiar with the user interface, toolbars and basic commands, and you will master all the phases of the configuration process",
        "You will learn in a professional way the Lexical Analysis, the Syntax Analysis and the Semantic Analysis",
        "You will learn how to generate a code a code from sratch, understanding its interpretation",
        "You will understand how to with Runtime Environments, Optimization and Domain Specific Language DSL",
        "You will learn other essential topics in compilers: Target Program Code, Memory Management, Allocation & Assignment, Dynamic vs Static Compilation, Hotspot...",
        "You will understand how to build a Simple Lexer, a Simple Parser and Simple ICG from scratch, in a practical way",
        "You will master the advanced Tips and Tricks to Master Compiler Design, and you will discover the best resources to stay updated",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises, quizes and the complete projects",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction": [
          "Welcome and Course Overview",
          "Early Day Computers",
          "The Importance of Compiler Design",
          "Setting Up Development Environment"
        ],
        "Compiler Basics": [
          "What is a Compiler?",
          "Quiz",
          "Compiler vs Interpreter",
          "The Compilation Process",
          "Question 1",
          "Question 1 Answer"
        ],
        "Lexical Analysis": [
          "Lexical Analyzer, Tokens, Lexemes",
          "Regular Expressions",
          "Question 2",
          "Question 2 Answer",
          "Finite Automata",
          "Examples",
          "Transition Tables",
          "NFA to DFA",
          "Question 3",
          "Question 3 Answer",
          "Question 4",
          "Question 4 Answer",
          "Question 5",
          "Question 5 Answer"
        ],
        "Syntax Analysis": [
          "Syntax Analysis, Context Free Grammar (CFG)",
          "How to Parse, Parse Tree, Left Recursion, Left factoring",
          "Question 6",
          "Question 6 Answer",
          "Question 7",
          "Question 7 Answer",
          "Types of Parsing, Recursive Decent Parsing",
          "C++ Recursive Decent Parsing Code",
          "First Set and Follow Set",
          "Question 8",
          "Question 8 Answer",
          "Predictive Parsers, LL(k) Parsers",
          "Question 9",
          "Question 9 Answer",
          "Bottom-Up Parsing, LR Parsing",
          "LR Parsing Table and Example",
          "Question 10",
          "Question 10 Answer"
        ],
        "Semantic Analysis": [
          "Semantic Analysis",
          "Syntax Directed Translation",
          "Question 11",
          "Question 11 Answer"
        ],
        "Intermediate Code Generation": [
          "Intermediate Code Generation",
          "Directed Acyclic Graphs",
          "Abstract Syntax Tree",
          "Notations",
          "Question 12",
          "Question 12 Answer",
          "Three-Address Code",
          "Quadruples & Triples",
          "Question 13",
          "Question 13 Answer"
        ],
        "Runtime Environments": [
          "Runtime Environments",
          "Stack",
          "Stack Implementation using C++",
          "Heap",
          "Activation Records",
          "Managing Scope",
          "Question 14",
          "Question 14 Answer"
        ],
        "Optimization Techniques": [
          "Optimization Techniques",
          "Constant Folding",
          "Dead Code Elimination",
          "Common Sub expression Elimination",
          "Question 15",
          "Question 15 Answer"
        ],
        "Advanced Compiler Topics": [
          "Code Generation",
          "Input to the Code Generator",
          "Target Program Code",
          "Memory Management",
          "Instruction Selection & Examples on generating Assembly code",
          "Question 16",
          "Question 16 Answer",
          "Register Allocation & Assignment",
          "Evaluation Order & Example",
          "Question 17",
          "Question 17 Answer",
          "Just-In-Time Compilation",
          "Dynamic Compilation vs Static Compilation",
          "HotSpot Compilation"
        ],
        "Domain Specific Language DSL": [
          "Domain-Specific Languages (DSLs)",
          "Mathematical Expression using DSL",
          "DSL for the Expression",
          "Testing the DSL",
          "Problem Statement",
          "DSL Function",
          "Testing the DSL",
          "Question 18",
          "Question 18 Answer"
        ]
      },
      "requirements": [
        "Having basic notions of Compiler Design and C++ language can help, but if not, do not worry cause the course starts from scratch",
        "Installing Visual Studio Code and needed environment (if you don't know how, don't worry, it's very easy, free, and I'll explain it to you in the course!)",
        "A decent computer and of course, desire to learn!"
      ],
      "description": "Become a Compiler developer professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that developers, engineers, programmers, students... can learn Compiler Design from scratch to develop compilers in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working in software and engineering, we have realized that nowadays mastering Compiler Design is very necessary for undesrtand teh structure and set of principles that guide the translation, analysis, and optimization process of a compiler. Knowing how to build your own compiler from scratch can give you many job opportunities and many economic benefits, especially in the world of the development.\nThe big problem has always been the complexity to perfectly understand compilers requires, since its absolute mastery is not easy. In this course we try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own compilers in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith more than 11 exclusive hours of video and almost 100 lectures, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical basis to fully master the compiler design. The course will teach you how to develop any C++ compiler in a practical way, from scratch, and step by step.\nWe will start with the overview and setup of Visual Studio Code and needed environment and then, we'll cover a wide variety of topics, including:\nIntroduction to Compiler Design and course dynamics\nSet up, configurations and needed installations for the work environment\nGeneral familiarization with the user interface and elements\nThe Fundamentals of Compilers\nLexical Analysis\nSyntax Analysis\nSemantic Analysis\nCode generation from sratch\nRuntime Environments\nOptimization Techniques\nDomain Specific Language DSL\nOther topics: Target Program Code, Memory Management, Allocation & Assignment, Dynamic vs Static Compilation, Just-In-Time and Hotspot Compilation...\nBuilding a Simple Lexer\nBuilding a Simple Parser\nBuilding a Simple ICG\nAdvanced Tips and Tricks to Master Compiler Design and the best resources to stay updated\nMastery and application of absolutely ALL the functionalities of Compiler Design\nQuizes, Practical exercises, complete projects and much more!\nIn other words, what we want is to contribute our grain of sand and teach you all those things that we would have liked to know in our beginnings and that nobody explained to us. In this way, you can learn to create and manage a wide variety of compilers quickly and make versatile and complete use of Compiler Design. And if that were not enough, you will get lifetime access to any class and we will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning Compiler Design has never been easier. What are you waiting to join?",
      "target_audience": [
        "Beginners who have never design a compiler before",
        "Developers, engineers, programmers, students... who want to learn how to develop a C++ compiler in a professional way",
        "Intermediate or advanced Compile Design student who want to improve their skills even more!"
      ]
    },
    {
      "title": "HashiCorp Certified: Terraform Professional 2025",
      "url": "https://www.udemy.com/course/hashicorp-certified-terraform-professional/",
      "bio": "Earn Your Terraform Authoring and Operations Professional Certification with Expert Guidance and Practical Exercises",
      "objectives": [
        "Prepare for the HashiCorp Certified: Terraform Authoring and Operations Professional Exam with real-world scenarios and hands-on exercises.",
        "Master Terraform fundamentals, workflows, and commands to build and manage cloud infrastructure efficiently.",
        "Implement advanced Terraform techniques, including modular structures, loops, conditions, and resource imports.",
        "Configure Terraform with AWS services for real-world applications, such as IAM, S3, and EC2.",
        "Manage Terraform state in advanced way using remote backends and lock mechanisms."
      ],
      "course_content": {
        "About": [
          "About course",
          "About author",
          "About Exam and Prerequisites"
        ],
        "Linux": [
          "About Linux section",
          "Filesystem structure",
          "Permissions system",
          "Process management"
        ],
        "AWS": [
          "About AWS section",
          "What is AWS?",
          "Creation of AWS account",
          "Introduction to Identity & Access Management Services",
          "Introduction to S3 storage",
          "Introduction to AWS Network",
          "Introduction to AWS Compute resources",
          "AWS CLI Installation and credentials setup"
        ],
        "Infrastructure as Code": [
          "About Infrastructure as Code section",
          "What is Infrastructure as Code?"
        ],
        "Terraform Basics": [
          "About Terraform Basics section",
          "Terraform overview",
          "Terraform installation on Linux",
          "Terraform installation on MacOS",
          "Terraform installation on Windows",
          "HCL and Data types",
          "Terraform workflow",
          "Terraform Built-In Functions, Loops and Conditions",
          "Terraform Fundamentals [ + Hands-on - AWS IAM Role and IAM Policies ]",
          "Terraform Workspaces"
        ],
        "Terraform Backend": [
          "About Terraform Backend section",
          "Terraform Remote State and Lock files [ + Hands-on - State File Migration ]",
          "Terraform Remote State File usage [ + Hands-on - HC Remote State and S3 object ]"
        ],
        "Terraform Advanced": [
          "About Terraform Advanced section",
          "Terraform Random Provider [ + Hands-on - Random string ]",
          "Advanced TF Workflow Import/Move/Remove [ + Hands-on AWS S3 bucket and object ]",
          "Advanced Terraform Loops and Conditions [ + Hands-on AWS Security Groups ]",
          "Terraform Validators/Checks/Pre-Post conditions [ + Hands-on AWS AMI and EC2 ]",
          "Terraform Tests [ + Hands-on AWS VPC Subnets and NACLs ]",
          "Terraform Modular structure p.1 [ + Hands-on AWS LT and AutoScaling Group ]",
          "Terraform Modular structure p.2-Migration [ + Hands-on AWS IAM Role and Policy ]",
          "Terraform Multiple Providers Setup [ + Hands-on AWS Provider and SSM parameter ]",
          "Terraform AWS Advanced Provider Configuration [ + Hands-on AWS Provider ]",
          "Terraform AWS Session Data [ + Hands-on AWS Caller Identity Data ]"
        ],
        "Terraform Cloud and Enterprise": [
          "About Terraform Cloud And Enterprise section",
          "Technical Overview",
          "Key Features",
          "Access, Pricing, and Support Plans"
        ],
        "Exam Preparation": [
          "Next preparation steps",
          "Terraform Authoring and Operations Professional Exam Questions #1",
          "Terraform Authoring and Operations Professional Exam Questions #2"
        ]
      },
      "requirements": [
        "A basic understanding of cloud computing concepts is recommended."
      ],
      "description": "This course is designed for anyone who wants to pass the HashiCorp Certified: Terraform Authoring and Operations Professional Exam while mastering Terraform’s powerful features. Terraform Professional course takes you step-by-step through essential concepts, hands-on projects, and advanced techniques to ensure you’re well-prepared for real-world applications.\n\n\nThis course is structured to provide a clear path from foundational knowledge to advanced skills.\nWhat You'll Learn:\n1. Introduction and Exam Prep\nLearn about the certification, prerequisites, and key skills required.\n2. Linux Fundamentals\nFilesystem structure, permissions, and process management to support Terraform operations.\n3. AWS Essentials\nCore AWS services, including IAM, S3, EC2, and networking basics, plus account creation and configuration.\n4. Infrastructure as Code (IaC)\nDiscover the benefits of IaC and how Terraform brings them to life.\n5. Terraform Basics\nInstall and configure Terraform on multiple platforms.\nUnderstand its workflow, key commands, HCL language, Terraform workspaces and essential built-in functions.\n6. Terraform State Management and Backends\nWork with local and remote state files, backends, and locking mechanisms.\n7. Advanced Terraform Techniques\nDeepen your knowledge with:\nLoops and Conditions: Dynamically create resources and manage dependencies.\nResource Imports: Bring manually created resources under Terraform management.\nLifecycle Rules: Implement lifecycle ignore changes and protect resources.\nModular Structures: Create reusable Terraform modules to simplify your configurations.\nDynamic Blocks and Complex Loops: Automate the creation of complex resource configurations.\nCustom Validations and Testing: Add pre/post conditions\nTerraform Tests: Implement automated Terraform tests\nAWS Credentials: Discovery all ways to use AWS with Terraform\nProviders: Dive to complex providers usage in Terraform\n8. Terraform Cloud and Enterprise\nExplore advanced Terraform features, including cloud integration and enterprise-level solutions.\n9. Exam Preparation\nStrategies, tips, and practice for acing the certification exam.\n\n\nAbout the Instructor\nHi, I’m Kostia—a Cloud Architect with expertise in system design, DevOps, and cloud infrastructure. I hold multiple certifications, including AWS Solutions Architect and Terraform Professional. With years of hands-on experience building dynamic, scalable systems using Terraform, I’m here to share practical insights and help you pass the exam and earn certification!\n\n\nKey Features\n5 hours of high-quality video content: Concise and focused lessons to maximize your learning.\nStep-by-step guidance: Learn as we build and manage resources together.\nUseful links and resources: Get access to curated references and official documentation.\nGitHub repository with code: All changes and configurations covered in the course will be committed to a public GitHub repository for your convenience.\nRequirements\nA computer and internet access.\nThe ability to create an AWS account (we’ll cover the setup process in the course).\n\n\nWhy Take This Course?\nBy joining this course, you’ll gain the expertise and confidence to excel in the Terraform Professional Certification Exam and apply advanced Terraform skills in demanding, real-world cloud environments. This course is designed for experienced professionals looking to deepen their knowledge and master Terraform for career growth in cloud and DevOps roles.",
      "target_audience": [
        "Cloud and DevOps professionals looking to validate their Terraform expertise with a professional certification.",
        "IT specialists aiming to deepen their knowledge of Terraform for managing complex infrastructures.",
        "Architects, system administrators, and developers seeking advanced Terraform workflows to optimize cloud deployments.",
        "Experienced Terraform users who want to expand their skills and gain the HashiCorp Certified: Terraform Authoring and Operations Professional"
      ]
    },
    {
      "title": "Outlook Desktop Add-ins Development For Beginners",
      "url": "https://www.udemy.com/course/outlook-desktop-add-ins-development-for-beginners/",
      "bio": "Learn outlook desktop add-in development using C# and visual studio",
      "objectives": [
        "Understand outlook basics.",
        "How to create simple outlook desktop add-in in visual studio.",
        "How to add ribbon tabs in mail, calendar and task explorers.",
        "How to add ribbon controls in mail read and mail compose views.",
        "How to add ribbon controls in appointment and task items.",
        "How to add customized panel in outlook.",
        "How to create and send emails in outlook using c#.",
        "How to create and send tasks, appointments in outlook using c#.",
        "How to handle selection change in outlook mail, calendar and task explorers using c#.",
        "How to handle inspector coding using c#.",
        "How to create setup project for outlook desktop add-in."
      ],
      "course_content": {
        "Outlook desktop add-in development": [
          "Introduction to outlook",
          "Create demo outlook desktop add-in in visual studio",
          "Add ribbon control to mail explorer",
          "Add images to outlook ribbon buttons",
          "Add ribbon control to mail read and compose items",
          "Add ribbon control in calendar explorer",
          "Add ribbon control in appointment item(calendar inspector)",
          "Add ribbon control in task explorer",
          "Add ribbon control in task item(inspector)",
          "Add right hand side panel to outlook",
          "Create and send email in outlook using c#",
          "Create appointment item in outlook using c#",
          "Create task item in outlook using c#",
          "Send task and meeting items using c#",
          "Handle selection change in outlook explorer",
          "Handle new outlook inspector using c#",
          "Handle button click events in customized outlook right hand side panel",
          "Create and install outlook desktop add-in setup"
        ]
      },
      "requirements": [
        "Outlook account(free).",
        "Visual studio community edition(free).",
        "Basic c# knowledge.",
        "Basic visual studio knowledge."
      ],
      "description": "Outlook is personal management software designed by Microsoft that uses by most of the people all around the world. It manages mail, appointments, task, contacts, etc.\nWhy outlook desktop add-ins?\nAs millions of people and companies use outlook for handling their business and day today requirements, outlook desktop add-ins help to get things done directly from mailbox.\nIt will help you to bind your businesses with outlook directly.\nWhy learning outlook desktop add-in development is important?\nAs most of people use outlook for personal and business management, learning development of outlook add-ins make you able to start your career as an outlook specialist.\nIf you are using outlook for handling business or day today requirements you can customize your outlook by creating your own outlook desktop add-in.\nIn this course featured lectures allows you to get basic knowledge about outlook desktop add-ins, and students will be able to create outlook desktop add-in from scratch without any prior knowledge.\nAs course is using c# and visual studio students will get hands on experience with c# and also visual studio.\nTopics covered include creating customized ribbons in mail, calendar, task explorers and inspectors, sending mail, task and calendar items, handling outlook panels and much more.\nAt the end you will create your own setup for the designed outlook desktop add-in.",
      "target_audience": [
        "C# developers who are interested in outlook application developments.",
        "Beginner and experienced developers"
      ]
    },
    {
      "title": "System Design Concepts",
      "url": "https://www.udemy.com/course/system-design-concepts/",
      "bio": "An explanatory course on System Design concepts",
      "objectives": [
        "Learn concepts related to System Design",
        "Understand in detail how the Concepts are put into practical use",
        "Learn in a focussed manner what the system design jargons actually mean"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of software development"
      ],
      "description": "This course will explain you concepts related to System Design. This will help budding computer science graduates and software developers to become good architects. This will also help you to prepare for technical System Design interviews. This course can also be used as a goto course for refreshing your system design concepts.\nIntroduction to Course\nAs a computer engineer, be it student, developer or an architect, you are actively involved in designing systems. These systems can vary from small micro-services to large distributed systems. While designing such systems, it is very necessary that you are clear on the basics of system design. System design involves a large variety of concepts. It consists of various terminologies and jargons that you might encounter while reading articles, blogs, going through courses or videos. In order to design a good system, or in order to understand someone else's design, you should be well aware about what does a particular design choice actually entail. In this course, I will cover a wide variety of System Design concepts, and try to explain them with the help of examples, so that you can easily understand these concepts.\nPlease feel free to drop in comments if you want me to cover any System Design concept not yet covered in the course.",
      "target_audience": [
        "Software Developers who want to learn about System Design Concepts",
        "Computer Science graduates who are new to the System Design world",
        "Developers who are looking for cracking the System Design Interview",
        "Developers who are learning to design pieces of architecture in their day-to-day world",
        "Developers who want to revisit and hone their knowledge on System Design Concepts"
      ]
    },
    {
      "title": "Learning Stack data structure [Java]",
      "url": "https://www.udemy.com/course/stack-data-structure/",
      "bio": "Problem solving using Stacks",
      "objectives": [
        "How to use Stack Data structure",
        "When to use Stack data strcuture",
        "How to identify if the problem can be solved using Stack",
        "Solving problems in stack"
      ],
      "course_content": {
        "Working with Stacks": [
          "Introduction to Stacks",
          "Check if Parentheses are balanced",
          "Backspace string compare",
          "Simplify path",
          "Next greater element"
        ]
      },
      "requirements": [
        "Required to know basic Core java"
      ],
      "description": "Stack:\nStack stores elements of the same data type.\nWe can insert, and remove elements in the stack in the Last In First Out policy (LIFO)\n\n\nDeclaration\nStack<Type> variable_name = new Stack<>();\nStack<Integer> stack = new Stack<>();\n\n\nMethods used in Stack:\n\nstack_name . push() - insert element into a stack\nstack_name . peek() - checks the topmost element in the stack\nstack_name . pop() - removes the topmost element in the stack\nstack_name . size() - returns the number of elements in stack\nstack_name . empty() - returns true / false. if stack is empty, it returns true. if stack is not empty it retuns false\nstack_name . clear() - clears the stack\nstack_name . contains(value) -  returns true if the value we check is there in stack or else it returns false\nstack_name remove(index) - removes the value in given index\nstack_name . search(value) - searches the value in stack and returns us the index of the value if present.\n\n\nIterating stack:\n\n\nWe can go through the stack elements in two ways.\n1. Popping the elements\nWe can pop the stack elements one by one and go through all the elements.\n\n\n2. For each loop\nWe can go through the stack by a for loop as below\n\n\nfor(String s : stack_name)\n{\n//Stack will be iterated from bottom to top direction in this way\n}\n\n\nHow to identify if that problem can be solved using a stack\n\n\n1. when we want to evaluate brackets, expressions in certain order we can use stacks.\n2. When we wanted to use backspace character in keyboard or any similar sitautions, we can use stacks\n3. When we want to delete or remove the last elements we can use stack.\n4. When we want to backtrack to something and then again to move forward direction multiple times we can use stack.\n5. We can use stack to find some peak elements (assuming the value plotted something like graph) we can use stacks",
      "target_audience": [
        "Developers who are learning Data structures and Algorithms"
      ]
    },
    {
      "title": "Integrating d3.js with React",
      "url": "https://www.udemy.com/course/integrating-d3js-with-react/",
      "bio": "Bring Data Visualization to Life",
      "objectives": [
        "Bring Data Visualization to Life",
        "Set up your project with React, TypeScript and d3",
        "Create simple and advanced d3 charts",
        "Work with complex charts such as world and force charts",
        "Integrate d3 data with React state management",
        "Improve the performance of your d3 components",
        "Deploy as a serverless app and debug test",
        "Learn to integrate third-party charting libraries including Visx, Nivo, React-vi, and Victory"
      ],
      "course_content": {
        "React + D3 Hello World": [
          "Setting up the environment",
          "'Hello D3' Function Component",
          "'Hello D3' Class Component"
        ],
        "Graphics and Interactions": [
          "Introduction",
          "Graphics - JSX Canvas",
          "Graphics - SVG advanced",
          "Map data in React using JSX",
          "Map data in React using d3",
          "Your first chart - Simple bar chart",
          "User Gestures - React & d3 Mouse Events",
          "Animating Graphics with React",
          "Animating Graphics with d3",
          "Animate SVG with CSS Transitions"
        ],
        "React + d3 - Simple Charts Part 1": [
          "Line Chart",
          "Resizable Line Chart Widget",
          "Line Chart Widget with Animation",
          "Area Chart",
          "Area Chart with Gradient",
          "Area Chart with Custom Space Colors",
          "Bar Chart",
          "Bar Chart tooltip interaction"
        ],
        "React + d3 - Simple Charts Part 2": [
          "Pie Chart",
          "Donut Chart",
          "Scatter Plot",
          "Scatter Plot Interactivity"
        ],
        "Integrating with Recoil State Management": [
          "Histogram chart with Recoil",
          "Integrating Histogram Chart With Material-UI Components",
          "Summary"
        ],
        "Advanced charts - World Chart": [
          "Introduction",
          "WorldMap d3 & React - Hello World Map Atlas",
          "Round World Map projection",
          "Rotating round world map chart",
          "Rotating round world map chart with coordinates",
          "Refactoring World Map"
        ],
        "World Map Widget": [
          "Setting up our data and state management",
          "World Map Widget Component",
          "ClientList Material-UI Component",
          "ClientListDetail Material-UI Component"
        ],
        "Force Chart Part I - Bubble Chart": [
          "Bubble chart",
          "Bubble Chart User Interaction"
        ],
        "Force Chart Part II - Force network graph": [
          "Intro and setting up with data management",
          "Network graph graphics",
          "Network graph interactivity"
        ],
        "Integrating Popular Chart Libraries Built on D3": [
          "Introduction",
          "Recharts",
          "Visx",
          "Victory",
          "Nivo",
          "React-vi"
        ]
      },
      "requirements": [
        "It is good to be comfortable with HTML, JavaScript, and CSS and some knowledge in React. It will make understanding of concepts easier."
      ],
      "description": "Learn to integrate D3.js into a React TypeScript project and create a charts component working in harmony with React. Understand how you can utilize D3 with React to bring life to your charts.\nUsing this course, you will create simple charts such as line, bar, donut, scatter, histogram, and others, and advanced charts such as a world map and force charts. You will learn to share the data across your components and charts using React Recoil state management, and understand how to integrate third-party chart libraries that are built on D3 such as Visx, Nivo, React-vi, and Victory. Lastly, you will learn how to deploy your chart as a serverless app on popular platforms.\nReact and D3 are two of the most popular frameworks in their respective areas – learn to bring them together and take your storytelling to the next level.\nYOU WILL:\n· Learn to set up your project with React, TypeScript, and D3.js\n· Learn how to create simple and advanced D3.js charts\n· Learn to work with complex charts such as world and force charts\n· Integrate D3 data with React state management\n· Learn to improve the performance of your D3 components\n· Learn how to integrate popular React charts built on D3\n· Learn how to deploy as a serverless app and debug test\nThis course is intended for readers that already have basic knowledge of React, HTML, CSS, and JavaScript.",
      "target_audience": [
        "React developers",
        "d3 developers"
      ]
    },
    {
      "title": "150 Unique Site Reliability Engineer SRE Interview Questions",
      "url": "https://www.udemy.com/course/site-reliability-engineer-sre-150-unique-interview-questions/",
      "bio": "Master SRE Concepts: Real-World Scenarios In-Depth Interview Preparation Guide with Answers and Explanations!",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This course is a comprehensive practice test aimed at preparing you for interviews for Site Reliability Engineering (SRE) roles. We've designed this course to mirror the type of questions you might face in real-world SRE interviews, ranging from basic queries to complex problem-solving scenarios, covering every aspect of this crucial tech role.\nAs SRE roles often demand a sound understanding of Linux, this course presupposes a foundational knowledge in Linux. However, don't be intimidated if you're not an expert - our goal here is to help you learn, grow, and succeed.\nThe questions presented in this course are carefully crafted, aligning with the kinds of questions asked by leading tech companies including FAANG (Facebook, Amazon, Apple, Netflix, Google) and other tech giants. Our aim is to provide you with a robust question bank that equips you for any SRE interview scenario.\nBeyond merely providing answers, we delve deep into each question. We don't just provide correct answers; we explain why they're right. We also look at incorrect answers, explaining why they're wrong. This dual approach empowers you to understand the logic behind each answer, enhancing your understanding and ensuring that you're learning, regardless of whether your initial answer was right or wrong.\nThis course is an invaluable tool for anyone aiming to ace their SRE interviews. From beginners to experienced professionals, this practice test serves as both a primer for upcoming interviews and a learning platform for anyone looking to deepen their SRE knowledge. Join us on this journey to unlock your potential and ace your SRE interview.\n\n\nIf you are;\n\n\nAspiring Site Reliability Engineers: If you're looking to start your career as a SRE, this course will provide you with a comprehensive set of interview questions, ranging from basics to advanced, helping you understand what to expect in interviews.\nExperienced Site Reliability Engineers: If you're an experienced professional aiming to switch jobs or preparing for an upcoming interview, this course can help refresh your knowledge and practice potential interview scenarios.\nDevOps Engineers: DevOps professionals looking to transition into SRE roles will find this course beneficial as it covers key aspects of the SRE role, often seen as an evolution of the DevOps methodology.\nSoftware Engineers: Developers interested in the operational aspects of keeping a software system running smoothly, or looking to transition to SRE roles, would benefit from this course.\nIT Professionals: Anyone in IT looking to expand their knowledge base, especially those in system administration, network engineering, or security roles, considering a career pivot towards SRE roles.\nComputer Science Students and Graduates: Those who are studying or have recently completed a degree and are considering a career as a Site Reliability Engineer.",
      "target_audience": [
        "Aspiring Site Reliability Engineers",
        "Experienced Site Reliability Engineers",
        "DevOps Engineers",
        "Software Engineers",
        "IT Professionals",
        "Computer Science Students and Graduates",
        "DevOps Professionals",
        "System Administrator",
        "Linux Administrator"
      ]
    },
    {
      "title": "Projects in Cloud Computing",
      "url": "https://www.udemy.com/course/projects-in-cloud-computing/",
      "bio": "Master the latest cloud computing technologies and start building products on the cloud",
      "objectives": [
        "Learn to create real world apps using current cloud technologies",
        "Learn to use cloud computing solutions from Amazon, Microsoft and Google",
        "Learn cloud computing with Heroku and Netflix OSS",
        "Master technologies like Openshift and Kubernetes"
      ],
      "course_content": {
        "Introduction": [
          "Intro"
        ],
        "Anatomy of an AWS Instance": [
          "Spin up a virtual machine (EC2) with security group",
          "Install Nginx",
          "Test Nginx as reverse proxy",
          "Extend Security with the IAM Console",
          "Ansible Configuration",
          "Provisioning with Ansible",
          "Setup Ansible Dynamic Inventory",
          "Use Dynamic Inventory",
          "Going Further with AWS"
        ],
        "Firebase": [
          "Setup a Firebase Development Environment",
          "Firebase Authentication",
          "Using Firebase Internal API’s Storage",
          "Using Firebase Internal API’s Database"
        ],
        "Cloud Programming Languages": [
          "Cloud Programming Languages"
        ],
        "Google Cloud Platform (gcloud) PAAS": [
          "Setup a Google Cloud Platform Development Environment",
          "Setup a Google Cloud Platform Shell Environment Part A",
          "Setup a Google Cloud Platform Shell Environment Part B",
          "Setup a Google Cloud App Engine Rest API",
          "Extending Google Cloud App Engine Rest API with the DataStore",
          "Setup a Google Cloud Platform Key Value Store A",
          "Setup a Google Cloud Platform Key Value Store B",
          "Setup a Google Cloud Platform Key Value Store C"
        ],
        "Google Cloud Platform APIs": [
          "Google Cloud Storage, Set up a Gcloud Development Environment",
          "Setup a Google Cloud Platform File Storage Application",
          "Gcloud File Storage Application OAuth Config and API Implementation"
        ],
        "Azure Cloud Model": [
          "Understanding the Azure Cloud Model",
          "Create and Configure an Active Directory to access Azure Resources",
          "Set Active Directory Permissions to access Azure Resources",
          "Setup a Azure Development Environment",
          "Test the Azure Development Environment with the default key store",
          "Test the Azure Development Environment with the Resource manager"
        ],
        "Azure sdk": [
          "Provisioning with the Azure sdk",
          "Accessing and configuring the Provisioned machine",
          "Configuring Azure Network access",
          "Azure Storage with the Azure Python sdk",
          "Blobservice and File Upload with the Azure sdk"
        ],
        "Azure NoSQL": [
          "Azure NoSQL service with the Azure sdk",
          "Set up an Azure DocumentDb Development Environment",
          "Create and run a Azure DocumentDb NoSQL Client",
          "Working with DocumentDb NoSQL Client"
        ],
        "Introduction to the Netflix OSS": [
          "Introduction to the Netflix OSS",
          "Design a Cloud Project Using Netflix OSS"
        ]
      },
      "requirements": [
        "Students should have basic understanding of cloud computing technologies before starting the course"
      ],
      "description": "The ONLY course to help you understand Cloud Computing using a hands-on approach is finally here!\nThe fast paced acceleration of technology has resulted in futuristic concepts to become real. What used to seem like sci-fi technologies have now become the norm. The same can be seen with storage and system platforms. The bulky computers are long gone for more sleek and modern ones. However, these systems are not at all cheap, but expensive and time consuming to set up. This has given way for cloud computing.\nCloud computing is a shared platform where users can borrow storage, processing power and other services on demand, without having to physically add more systems to their current network. This drastically reduces the cost and offers better opportunities for companies, most commonly startups.\nWith the huge number of apps and software that are in the market, cloud computing was definitely a needed option to reduce costs and help boost technological advancement. There are three innovative companies that are often associated with Cloud Computing – Microsoft, Amazon and Google. Each company has significantly contributed to growing the cloud platform to the great heights it is currently on.\nWith cloud computing being the future of development, there is no one course that caters to helping you learn everything you need to know about Cloud and its many technologies – Until Now!\nWe have collaborated with industry experts to design the only course you would need to learn the ins and outs of Cloud Computing and many of its related technologies. From AWS to Azure to GCloud, you will master the entire cloud platform in this course.\nThe course covers a vast syllabus that includes Cloud Engineering Techniques, the Cloud Architecture, Providers, Application Clients, Build Tools, Design Patterns, Programming Languages and also emerging cloud technologies to keep an eye out for.\nHere is a further breakdown of what you will learn in this course:\nThe course includes:\nCloud Provisioning: Ansible, Vagrant\nOrchestration: Kubernetes\nProviders: AWS, GCloud, Microsoft Azure, Heroku and OpenShift\nArchitecture: IaaS (Infrastructure as a Service), PaaS (Platform as a service) and SaaS (Software as a service)\nApplication Clients: Azure Python SDK, GCloud SDK, Heroku SDK, OpenShift Client\nBuild Tools: Gradle, WebPack and PIP\nDesign Patterns: Circuit Breaker, Service Registration and Discovery, Load Balancing, Universal JavaScript\nCloud Programming Languages: Python, Java, Go, JavaScript\nEmerging Cloud Technologies: Docker clusters, ReactJS zero configuration, Microservices\nIn addition to learning the theory behind cloud computing and the different cloud platforms, you will also work with each technology, including building platforms from scratch. You will gain a complete working experience as well as confidence by the end of this course.\nWith this much packed in this humongous course, what’s keeping you from boosting your skills and your career to greater heights? Enroll Now.",
      "target_audience": [
        "Students who want to learn the latest cloud computing technologies",
        "Students who want to compare various competing cloud technologies for professional development"
      ]
    },
    {
      "title": "Apache Flink with Scala 3",
      "url": "https://www.udemy.com/course/apache-flink-with-scala-3/",
      "bio": "Master everything you need to write production-level Flink applications in Scala 3 through hands-on exercises!",
      "objectives": [
        "Learn Flink's basic and advanced concepts and architecture each followed by hands-on exercises in Scala 3",
        "Learn how Flink handles stream processing, distributed and stateful computation",
        "Learn to handle event time processing using Flink's watermarks mechanism and window operation",
        "Learn to integrate Flink version 1.17 with Kafka and Kubernetes using Scala 3",
        "Learn to write stateful applications using Flink's key concepts including checkpoint mechanism, map state, list state and value state",
        "Learn Flink's deployment modes and deploy your own Flink application on Kubernetes"
      ],
      "course_content": {
        "Introduction": [
          "Prerequisites",
          "Introduction",
          "Why Flink",
          "Flink Cluster and Life Cycle"
        ],
        "Anatomy of a Flink Pipeline": [
          "Flink Pipeline",
          "Data Source",
          "Hands-on: Data Source Part One",
          "Hands-on: Data Source Part Two",
          "Hands-on: Data Source Part Three",
          "Kafka Source",
          "Data Transformation",
          "Hands-on: Data Transformation",
          "Low Level APIs",
          "Hands-on: Low Level APIs Part One",
          "Hands-on: Low Level APIs Part Two",
          "Data Transformation II: Handling Multiple Streams",
          "Hands-on: Handling Multiple Streams",
          "Side Output",
          "Hands-on: Side Output",
          "Output",
          "Hands-on: Integration with Kafka"
        ],
        "Advanced Flink Concepts": [
          "Introduction to Timely Streaming",
          "Windows I: Window Assigners",
          "Hands-on: Handling events with Processing Time",
          "Hands-on: Handling events with Event Time",
          "Windows II: Window Lifecycle",
          "Windows III: Window Functions",
          "Hands-on: Tumbling Window",
          "Hands-on: Sliding Window",
          "Hands-on: Global Window",
          "Handling Time with Multiple Streams",
          "Hands-on: Window Join",
          "Stateful Streaming",
          "State Types",
          "Hands-on: Value State",
          "Hands-on: List State",
          "Checkpoints",
          "Hands-on: Checkpoint"
        ],
        "Flink Application Deployment": [
          "Deployment on Kubernetes"
        ]
      },
      "requirements": [
        "Basic understanding of functional programming languages such as Scala"
      ],
      "description": "As the latest Flink course in Scala 3 released in 2024, it covers Flink's basic and advanced concepts each followed by hands-on exercises. This course cuts through all the complexities of integrating the very recent Flink version 1.17 with Scala 3 and Kubernetes. Starting with version 1.15 of Flink, Scala support was removed to make it easier to integrate with multiple versions of Scala, including Scala 3. This course includes step by step video demonstrations on how to resolve the problem of classpath collision when deploying Flink applications in Scala 3 on Kubernetes.\nConcretely, here's what you will learn to either ace your next Flink interview or be ready to write your production level Flink application:\n1. Flink and Streaming Fundamentals\nYou'll understand how Flink handles stream processing, distributed and stateful computation; You'll learn Flink's architecture including Flink cluster's components; You'll know how to deploy and manage the lifecycle of a Flink application.\n2. Flink Data Pipeline\nYou'll understand different levels of abstraction for developing streaming applications; You'll be able to process big data in real time any way you want to by mastering fundamental Flink concepts including: data ingestion, efficient data transformation, controlling your applications with lower level APIs, producing output streams to data sinks.\n3. Integration with Apache Kafka\nYou'll learn configuration of Kafka Source and Kafka Sink; You'll master how to set up Kafka dependencies in built.sbt and how to integrate Kafka with Flink as a data source or data sink.\n4. Time Handling, Watermarks and Windows\nYou'll be able to handle event time processing using Flink's watermarks mechanism and window operation including tumbling window, sliding window and global window.\n5. Fault Tolerant\nYou'll be able to write stateful applications using Flink's key concepts including checkpoint mechanism, map state, list state and value state.\n6. Integration with Kubernetes\nYou'll learn Flink's deployment modes and deploy your own Flink application on Kubernetes by following along the video demonstration of every deployment step and deployment configurations.\nWhat you'll get from this course:\nYou will get 30+ total Flink video lessons with slides and illustrative diagrams plus access to Github Repo with all the code in the course;\nYou can practice by writing more than 20 Flink applications for common use cases and following along the hands-on video lessons;\nYou will quickly master the configurations of all the dependencies and steps to deploy Flink 1.17 applications on Kubernetes by following the video demonstration;\nYou will learn transferrable principles of big data streaming and distributed systems that you can apply on other streaming systems.",
      "target_audience": [
        "Developers who want write production ready Flink applications or want to learn about distributed real-time data streaming systems, or trying to troubleshoot Flink deployment on Kubernetes"
      ]
    },
    {
      "title": "Version Control with Git - Concepts with Hands On Projects",
      "url": "https://www.udemy.com/course/version-control-with-git-concepts-with-hands-on-projects/",
      "bio": "Learn in-depth concepts of Git with hands-on exercies",
      "objectives": [
        "Understand how version control systems work",
        "Learn Git concepts",
        "Use Git with confidence",
        "Resolve conflicts, create & manage branches in Git",
        "Use Github & remote Git repositories"
      ],
      "course_content": {
        "Introduction to Version Control Systems": [
          "Section Overview",
          "Concepts - Version Control Systems",
          "Types of Version Control Systems & Central Repository",
          "Distributed Version Control Systems"
        ],
        "Starting with Local Git Repository": [
          "Section Overview",
          "Install Git",
          "Create Git repository - git init",
          "Git Concepts - Working & Staging Area",
          "Git status, add & commit commands",
          "See what's going on with git log",
          "First encounter with differences - git diff",
          "Undo changes with git checkout",
          "Concepts - Git references",
          "Git reset",
          "Ignore files with ignore file"
        ],
        "Branching": [
          "Section Overview",
          "Concepts - Branching",
          "Create branch & switch with git checkout",
          "Git merge",
          "Delete a branch"
        ],
        "Merge Conflicts & Resolution": [
          "Section Overview",
          "Concepts - Three Way Merge",
          "Three way merge in action",
          "Merge conflict & resolution"
        ],
        "Remote Repositories": [
          "Section Overview",
          "Concepts - Remote repositories",
          "Github - Setup account & create repository",
          "Clone remote repository",
          "Working with remote repository - git push & pull",
          "Setup remote with existing local repository",
          "Remote branches",
          "Clone vs Fetch vs Pull",
          "Put local branch on remote repository",
          "Delete remote branch"
        ]
      },
      "requirements": [
        "Basic computer skills",
        "Ability to install software on your computer",
        "You may need admin rights to install software"
      ],
      "description": "Are you completely new to version control systems & Git? Are you using Git commands but are not really sure how they work behind the scenes? Are you not able to use  full power of Git?\nIf answer to any of these questions is yes, then this course can help you.\nGit is one of the most elegant software tools that I've ever used. This is not just any other version control system. Git will change the way you work for better! Branching is the killer feature of Git that will make you more productive by allowing you to work on multiple things at same time.\nTo fully harness this power of Git, you need to know more than just commands. You need to understand the concepts behind those commands. Only then can you use Git with confidence and become super productive.\nHow this course will help you?\nWe are not starting first lesson with typing commands. We spend some time understanding how version control systems work.\nThen we'll see what are the distributed version control systems.\nWe'll then start working with Git. All important concepts are explained in their own separate lectures along the way just before we use those concepts. You'll learn a new concept and then immediately use those concepts with Git commands. This will teach you the concepts without getting bored.\nWe then learn what is a remote repository. We'll use Github for our remote repository. So you'll learn how to create a repository on Github, how to clone one from Github, create branches and much more.\nThis is a growing and a curated course. We've already added more than 5 Hrs of content that will get you started on any project you want. But we've a lot more to say. We'll be adding more advanced Git concepts and more lectures on them.\nTL;DR;\nAt the end of this course you'll be armed with the knowledge about Git commands & concepts behind them, which will allow you to tackle your daily version control tasks with confidence and use Git to its full potential.",
      "target_audience": [
        "This course is for anyone who wants to use version control system",
        "Students who have just started using git",
        "Git users who want to understand the concepts behind git"
      ]
    },
    {
      "title": "Flux CD for the Absolute Beginners - Hands-On DevOps",
      "url": "https://www.udemy.com/course/flux-cd-for-the-absolute-beginners-hands-on-devops/",
      "bio": "Automate Kubernetes the GitOps way—fast, reliable, and scalable with Flux CD.",
      "objectives": [
        "Introduction to GitOps",
        "Understanding Flux CD Framework",
        "In-depth Understanding of Flux CD Architecture",
        "Working with Source and Kustomize controller",
        "Application Deployment using Kustomize, Helk and OCI Registry",
        "Image reflector and automation controllers in Flux CD",
        "Notification Controller in Flux CD (Webhooks and Alerting)",
        "Flux CD Monitoring and Dashboarding",
        "Flux CD UI options"
      ],
      "course_content": {
        "Course Introduction": [
          "Introduction",
          "GitHub Repository Link",
          "Course Material - Flux CD for the Absolute Beginners - Hands-On DevOps"
        ],
        "Introduction to GitOps and Flux CD": [
          "Introduction to GitOps",
          "Getting Started with Flux CD",
          "Flux CD Features",
          "Demonstration - Flux Documentation"
        ],
        "Understanding Flux CD Framework": [
          "Core Flux CD Terminologies"
        ],
        "Setting up Flux CD": [
          "Flux CD installation Options and Pre-requisites",
          "Overview of flux CLI",
          "Demonstration - flux CLI Installation and commonly used commands",
          "Demonstration - Installing Flux CD on Kubernetes",
          "Demonstration - Two node cluster setup (OPTIONAL)",
          "Checkout - Practical Kubernetes - Beyond CKA and CKAD | Hands-on"
        ],
        "Flux CD Architecture": [
          "Understanding Flux CD Architecture"
        ],
        "Working with Source and Kustomize controller": [
          "Getting started with Source Controller and Kustomize Controller",
          "Demonstration - Deploying First Application using Flux (from Flux repository)",
          "Demonstration - suspend, resume and delete operations in Flux",
          "Source Controller and Kustomize Controller file creation (Declarative way)",
          "Demonstration - Deploying Application (Declarative with external Repository)",
          "Demonstration - Integrating Private Repository",
          "Demonstration - Integrating Object Storage (s3) with Flux CD",
          "Checkout - Podman for the Absolute Beginners - Hands-On DevOps"
        ],
        "Application Deployment using Kustomize and Helm": [
          "Application Deployment using Kustomize and Helm",
          "Demonstration - Deploying Application using Kustomize Overlay",
          "Understanding Helm Controller in Flux CD",
          "Demonstration - Deploying Application using Helm Charts (with Git as Source)",
          "Demo - Deploying Application from Helm Charts (with Helm Repository as Source)",
          "Checkout - Argo CD for the Absolute Beginners - Hands-On DevOps"
        ],
        "Application Deployment from OCI Registry": [
          "Understanding OCI Registry",
          "Demonstration - Pushing manifests and helm charts to OCI Registry",
          "Understanding OCI Repository Source Controller in Flux CD",
          "Demo - Deploy Application (Manifests based package/artifact) from OCI Registry",
          "Demo - Deploying Application (helm based package/artifact) from OCI Registry"
        ],
        "Image reflector and automation controllers in Flux CD": [
          "Understanding Flux CD Image Automation Controllers",
          "Demonstration - Installing Image Automation Controllers",
          "Demo - Flux CD Image Automation (ImageRepository, Policy, UpdateAutomation)"
        ],
        "Notification Controller in Flux CD": [
          "Understanding Flux CD Notification Controllers",
          "Demonstration - Webhooks with Flux CD (Receiver Flux resource)",
          "Demo - Integrating Flux CD with MS Teams for notifications (Providers & Alerts)"
        ]
      },
      "requirements": [
        "Basic Unix/Linux Knowledge",
        "Basic understanding of Kubernetes"
      ],
      "description": "What’s in this course?\n\n\nFlux CD for the Absolute Beginners - Hands-On is a comprehensive course, designed to guide you from foundational Flux CD knowledge to production-level skills.\n\n\nThe course starts with foundational topics, perfect for beginners, covering the GitOps Principles, then dive into the necessity and features of Flux CD. You will learn how to set up and manage a Flux CD environments and understand its architecture.\n\n\nThe course will explore Flux CD controllers such as Source, Kustomize and Helm, and you’ll become proficient in deploying Flux CD objects flux CLI in a Declarative Approach. You’ll also learn how to perform advanced tasks like integrating Private Git repositories, working with OCI registries, automating end to end Image Rollouts using Image Reflector and Image Update Automation controllers and working with Notification Controllers for Webhooks and Alerting.\n\n\nAs you progress, you’ll delve into Flux CD monitoring and explore free and opensource User Interface options.\n\n\nSpecial Note:\nThis course is designed to showcase all practical concepts with live demonstrations. Every concept is presented in real-time, and any errors that arise are troubleshooted and addressed as they occur live in the demonstrations.\n\n\nLegal Notice:\nFlux CD or Flux Project is a registered trademarks of  The Cloud Native Computing Foundation (CNCF) and/or The Linux Foundation in the United States and other countries. This course is not certified, accredited, affiliated with, nor endorsed by The Cloud Native Computing Foundation (CNCF) and/or The Linux Foundation.\n\n\nCourse Structure:\nLectures\nDemos\nQuizzes\nAssignments\n\n\nCourse Contents:\nCourse Introduction\nGetting Started with GitOps\nFlux CD at a Glance\nCore Flux CD Terminologies\nOverview of flux CLI\nUnderstanding Flux CD Architecture\nInstallation and Configuration of Flux CD\nSource Controller and Kustomize Controller\nDeclarative way for creating Flux CD resource files\nApplication Deployment using Private Repositories\nApplication Deployment using Kustomize Overlays and Helm Charts\nImage reflector and automation controllers in Flux CD\nWebhooks with Flux CD (Notification Controller)\nIntegrating MSTeams for Alerting (Notification Controller)\nFlux CD Monitoring and Dashboarding\nOpenSource UserInterface (UI Options)\n\n\nAll sections of this course are demonstrated live, with the goal of encouraging enrolled users to set up their own environments, complete the exercises, and learn through hands-on experience!",
      "target_audience": [
        "DevOps/Kubernetes Administrators or DevOps/Kubernetes Engineers",
        "System Administrators or System Engineers",
        "Application Developers and Testers"
      ]
    }
  ]
}