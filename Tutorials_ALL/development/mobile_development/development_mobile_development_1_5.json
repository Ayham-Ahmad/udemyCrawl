{
  "courses": [
    {
      "title": "Build Complete TaskList App in UIKit, CoreData, MVVM, Lottie",
      "url": "https://www.udemy.com/course/build-complete-tasklist-app-in-uikit-coredata-mvvm-lottie/",
      "bio": "Production ready app using MVVM design pattern & programmatic UI in UIKit & Lottie Animation",
      "objectives": [
        "Students will learn to build app in UIKit",
        "Students will learn to use CoreData and MVVM Design Pattern",
        "Students will learn to add external dependency using Swift Package Manager",
        "Students will learn to build complete app from scratch programmatically"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Setup and Walkthrough",
          "Folder Setup"
        ],
        "Data Model": [
          "Task Data Model"
        ],
        "View Models": [
          "Task View Model",
          "Task List View Model",
          "Add New Task View Model"
        ],
        "Core Data": [
          "Core Data Manager",
          "Get All Tasks From Core Data",
          "Add New Task",
          "Toggle Completed Function",
          "Delete Task Function",
          "Testing Core Data Manager"
        ],
        "Views and View Controllers": [
          "Add New Task View Controller",
          "Task Table View Cell",
          "Summary Table View Cell",
          "Celebration Animation View",
          "Task List View Controller - Part 1",
          "Task List View Controller - Part 2",
          "Task List View Controller - Part 3",
          "Task List View Controller - Part 4"
        ]
      },
      "requirements": [
        "Knowledge of Swift"
      ],
      "description": "Programmatic UI using UIKit in Swift is an essential aspect of iOS app development, and it enables developers to create user interfaces (UI) that are highly customizable, responsive, and performant. With programmatic UI, developers can create UI elements such as buttons, labels, and text fields entirely through code, rather than using a graphical interface builder. This approach offers several benefits, including greater control over the UI design, improved performance, and reduced app size.\nWhen developing iOS apps, it's important to use a design pattern that separates the UI from the business logic. One such pattern is MVVM (Model-View-ViewModel), which helps to create a modular, testable, and maintainable codebase. In MVVM, the model represents the data and logic of the app, the view represents the UI, and the view model acts as the intermediary between the two. By using this pattern, developers can easily update the UI without modifying the model, and vice versa.\nSwift Package Manager is a tool that enables developers to manage dependencies in their projects. With Swift Package Manager, developers can easily add third-party libraries and frameworks to their projects, making it easier to reuse code and accelerate development. This tool is built into Xcode, which makes it easy to integrate into iOS app development projects.\nBy combining programmatic UI using UIKit in Swift with MVVM design pattern and Swift Package Manager, developers can create highly customizable, responsive, and maintainable iOS apps. This approach enables developers to build UI elements that are tailored to their specific needs while keeping the business logic separate, leading to better code organization and more straightforward maintenance. Additionally, using Swift Package Manager makes it easier to manage dependencies, which helps to speed up development time and reduce errors.\n\n\nIn this course, we will learn all this and more so join in and let's learn iOS development using UIKit together.",
      "target_audience": [
        "Anyone who wants to learn programmatic app development in iOS using UIKit"
      ]
    },
    {
      "title": "Android Development: From Basics to Advanced Techniques",
      "url": "https://www.udemy.com/course/android-development-from-basics-to-advanced-techniques/",
      "bio": "Master Android fundamentals, UI design, advanced concepts, and testing to build high-quality mobile applications",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Embark on your journey to becoming an expert Android developer with this comprehensive course, designed to cover everything from Android fundamentals to advanced concepts. Whether you're a beginner looking to get started or an experienced developer aiming to refine your skills, this course provides a deep dive into Android development, equipping you with the knowledge and tools needed to create robust and efficient mobile applications.\nCourse Highlights:\nAndroid Fundamentals: Learn the essential building blocks of Android development, including the critical XML files, component classes, and lifecycle management. Understand how to handle user interactions, manage memory effectively, and ensure your app runs smoothly across different devices.\nAndroid Components and Layouts: Master the use of Android components like activities, fragments, and layouts. Discover best practices for creating responsive and user-friendly interfaces, and learn how to manage and customize layouts using XML and code.\nAndroid UI and Resources: Delve into UI design and resource management. Learn how to create scalable and adaptive UIs, manage different resources for various device configurations, and handle data persistence using shared preferences and other techniques.\nAdvanced Android Concepts: Take your skills to the next level by exploring advanced topics such as background processing, on-demand features, and effective memory management. Learn how to optimize your apps for performance, handle complex scenarios, and implement modern Android development practices.\nTesting, Permissions, and Gradle: Ensure your apps are secure, efficient, and reliable by mastering testing strategies, managing permissions, and using Gradle for project configuration. Learn how to write and run effective unit and UI tests, manage dependencies, and streamline your development process.\nBy the end of this course, you’ll have the confidence and skills to develop high-quality Android applications, navigate the complexities of the Android ecosystem, and keep up with the latest developments in mobile technology. Whether you're building apps for personal use, contributing to open-source projects, or preparing for a career in mobile development, this course is your gateway to success.\nAndroid development, Android fundamentals, Android components, UI design, Android UI, advanced Android, testing in Android, Android permissions, Gradle, mobile app development.",
      "target_audience": [
        "Android developers preparing for job interviews or certification exams who want to test and refine their knowledge.",
        "Students and professionals looking to assess their understanding of Android development fundamentals and advanced concepts.",
        "Self-learners who have studied Android development and want to validate their knowledge through practical questions.",
        "Junior developers who want to gauge their readiness for real-world Android development tasks and scenarios."
      ]
    },
    {
      "title": "Learn Flutter - Beginners Course",
      "url": "https://www.udemy.com/course/learn-flutter-beginners-course/",
      "bio": "Build Android and iOS apps with a flutter framework",
      "objectives": [],
      "course_content": {
        "Introduction To Flutter": [
          "How to Install Flutter on Android Studio",
          "First Flutter Application"
        ],
        "Flutter States": [
          "StatelessWidget Class",
          "StatefullWidget Class"
        ],
        "layouts": [
          "Container Widget",
          "Row & Column Widget",
          "Basic List Widget",
          "List Widget (Array of List)",
          "Stack",
          "Gridview"
        ],
        "AppBar & TabBar Widget": [
          "Basic : Create AppBar & It's Basic Properties",
          "AppBar Leading & Actions[]",
          "Tabbar : Top & Bottom"
        ],
        "Custom Widgets": [
          "Custom Method Widget",
          "Custom Class Widget"
        ],
        "Input & Selections Widgets": [
          "TextField Widget",
          "Buttons Widget",
          "CheckBox Widget",
          "Radio Widget",
          "Slider Widget",
          "Switch Widget"
        ],
        "Drawer Widget & Routes": [
          "Simple Drawer Widgets",
          "Routes"
        ],
        "Notification Widgets": [
          "SnackBar",
          "Alert Dialog",
          "Simple Dialog"
        ]
      },
      "requirements": [
        "Installed Android Studio/intellij/VSCode with flutter",
        "Basic knowledge of dart language",
        "Basic understanding of OOPS Concept"
      ],
      "description": "Hello everyone, Welcome to the beginners course of flutter, This course will teach you how to create  Flutter application in a very practical & simple manner, as every lecture comes with full coding screencast & corresponding code in notebook .\nThis course will be updates frequently as flutter and dart are in their early stages of development.\n\nSo what are you waiting for?",
      "target_audience": [
        "Beginner flutter developers that are interested in developing mobile application for android and ios",
        "Developers that want to learn, how to create an mobile app using singlecode base"
      ]
    },
    {
      "title": "Core Data in iOS - The Complete App Development Bootcamp",
      "url": "https://www.udemy.com/course/core-data-in-ios-the-complete-app-development-bootcamp/",
      "bio": "Mastering Core Data: A Comprehensive Guide to iOS App Development",
      "objectives": [
        "The fundamentals of Core Data and how to perform essential CRUD (Create, Read, Update, Delete) operations.",
        "Deep understanding of Core Data's foundational components, including managed object contexts, persistent stores, and managed object models.",
        "Techniques for working with various data types, including transforming and storing complex data using Transformable attributes.",
        "Strategies for implementing one-to-many and many-to-many relationships between entities in Core Data.",
        "Methods for efficiently retrieving data from the Core Data store using predicates, fetch requests, and sorting.",
        "How to utilize the @FetchRequest property wrapper in SwiftUI to seamlessly integrate Core Data into SwiftUI applications.",
        "Synchronization of Core Data with CloudKit for data management and cloud storage.",
        "Best practices for handling data migrations to ensure seamless updates and versioning of Core Data models."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Introduction to Core Data": [
          "What is Core Data?",
          "Core Data Stack",
          "Core Data Models"
        ],
        "Data Management with Core Data": [
          "What we will be building?",
          "Creating the TodoItem Model Using Core Data Editor",
          "Implementing CoreDataProvider",
          "Resource: Core data | automatically generated String and Date attributes are opt",
          "Creating and Saving Data",
          "Fetching Data",
          "Marking TodoItem Complete and Incomplete",
          "Updating Title of TodoItem Using In-Place Editing",
          "Using ContentUnavailableView",
          "Deleting Data"
        ],
        "Budget App - Setting Up and Adding Budget Categories": [
          "What are we building?",
          "Setting Up Core Data Stack",
          "Adding Budget Category Model",
          "Building the User Interface",
          "Configuring Data for the Previews",
          "Saving Budget",
          "Displaying All Budgets on Screen"
        ],
        "Budget App - Adding Expenses Relationship": [
          "Understanding One to Many Relationship",
          "Adding Expense Entity and Configuring One to Many Relationship",
          "Implementing BudgetDetailScreen",
          "Adding Expense to a Budget",
          "Displaying Expenses",
          "Displaying Total and Remaining",
          "NOTE: Refactoring Total and Remaining",
          "Deleting Expense"
        ],
        "Budget App - Adding Tags Relationship": [
          "Understanding Many to Many Relationship",
          "Implementing Tag Model",
          "Seeding Tags into the Database",
          "Implement TagsView to Display and Select Tags",
          "Assigning Tags to Expense",
          "Displaying Tags for Expenses"
        ],
        "Budget App - Filtering": [
          "Filtering by Tags",
          "Adding Expenses for Xcode Previews",
          "Filtering by Price",
          "Filtering by Title",
          "Filter by Date",
          "Implementing Sorting",
          "Refactoring",
          "Navigating to Filter Screen, Total Budget and Adding ContentUnavailableView"
        ],
        "Migrations": [
          "What are Migrations?",
          "Simple Migration",
          "FIX - Budget Spent Property",
          "Custom Migration (Understanding the Scenario)",
          "Custom Migration (Performing Migration)",
          "Rollback Changes"
        ],
        "Updating Expenses": [
          "Updating Expenses Option 1",
          "Updating Expenses Options 2",
          "Updating Expenses Option 3"
        ],
        "Syncing Core Data with CloudKit": [
          "Configuring iCloud",
          "Fixing Issues and Following iCloud Requirements for Core Data Models",
          "Checking Expense Title is Unique",
          "FIX - Expense Exist Function",
          "Demo of iCloud Integration on iPhone and iPad"
        ]
      },
      "requirements": [
        "Basic knowledge of iOS app development using Swift programming language.",
        "Familiarity with SwiftUI framework (preferred but not mandatory).",
        "Understanding of fundamental iOS concepts such as views, view controllers, and navigation.",
        "Access to a Mac computer running the latest version of Xcode, Apple's integrated development environment for iOS app development.",
        "Eagerness to learn and willingness to dedicate time and effort to mastering Core Data concepts and techniques."
      ],
      "description": "Unlock the full potential of Core Data with our comprehensive YouTube course! Whether you're a beginner or an experienced iOS developer, this bootcamp-style series is designed to elevate your skills and empower you to build robust applications with ease.\nIn this course, we delve deep into Core Data, the backbone of data persistence in iOS applications. You'll learn the ins and outs of integrating Core Data seamlessly into your projects, harnessing its power to store and manage complex object graphs across various storage mediums.\n\n\nKey Topics Covered:\n1. Introduction to Core Data and Essential CRUD Operations\n2. Understanding Core Data's Foundational Components\n3. Exploring Transformable Data Types\n4. Implementing One-to-Many Relationships\n5. Managing Many-to-Many Relationships\n6. Retrieving Data from the Core Data Store\n7. Utilizing the @FetchRequest Property Wrapper\n8. Synchronizing Core Data with CloudKit for Data Management\n9. Handling Data Migrations for Seamless Updates and Versioning\n\n\nWhy Enroll in this Course?\n1. Career Boost: Mastery of Core Data enhances employability and job prospects in iOS development.\n2. Efficiency: Learn to efficiently manage data, saving time and effort in app development.\n3. App Quality: Develop higher-quality apps with smoother data handling and improved user experience.\n4. Versatility: Gain skills to build a wide range of apps, adapting to diverse project requirements.\n5. Competitive Edge: Stay ahead in the dynamic iOS development landscape with up-to-date skills.\n6. Personal Growth: Enhance problem-solving abilities and foster a mindset of continuous learning and improvement.\n\n\nDon't miss out on this opportunity to become a Core Data expert and take your iOS development journey to new heights. Enroll now and embark on a transformative learning experience!",
      "target_audience": [
        "Beginner to intermediate iOS developers who want to enhance their skills in data persistence and Core Data.",
        "Students or professionals seeking to deepen their understanding of Core Data and its integration with SwiftUI for iOS app development.",
        "Developers interested in building robust and scalable iOS applications with efficient data management capabilities.",
        "Anyone looking to expand their knowledge and proficiency in Core Data to improve their career prospects in iOS development.",
        "Individuals who are passionate about learning and staying updated with the latest tools and techniques in iOS app development."
      ]
    },
    {
      "title": "Developing app using Flutter (May 2022)",
      "url": "https://www.udemy.com/course/developing-app-using-flutter/",
      "bio": "Flutter, android app, Weather app, MySQL, Firebase, cloud firestore database, Rest APIs",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Introduction to Flutter": [
          "Lesson 1: Introduction to Flutter",
          "Practice 1-1: Setting up Development Environment",
          "Quiz 1: Quiz on features of Flutters"
        ],
        "Dart Programming and Creating a simple app using Flutter": [
          "Lesson 2: Dart Programming and Creating a simple app using Flutter",
          "Practice 2-1: Introduction to Dart Programming",
          "Practice 2-2: Creating simple application using Flutter",
          "Quiz 2: Quiz on Dart Programming and Creating a simple app using Flutter"
        ],
        "Flutter: Widgets and layouts": [
          "Lesson 3: Flutter: Widgets and layouts",
          "Practice 3-1: Working with Widgets",
          "Practice 3-2: Working with Layouts",
          "Practice 3-3: Working with Stateless and stateful widgets",
          "Quiz 3: Quiz on Widgets and layouts"
        ],
        "Flutter: Navigating between Routes or pages": [
          "Lesson 4: Flutter: Navigating between Routes or pages",
          "Practice 4-1: Navigating between Routes in Flutter",
          "Practice 4-2: Passing Data between Routes in Flutter",
          "Quiz 4: Quiz on Navigating between Routes or pages"
        ],
        "REST API Integration with Flutter": [
          "Lesson 5: REST API Integration with Flutter",
          "Practice 5-1: HTTP Get method in Flutter",
          "Quiz 5: Quiz on REST API Integration with Flutter"
        ],
        "Flutter: Connecting to Database": [
          "Lesson 6: Flutter: Connecting to Database",
          "Practice 6-1: Connecting to MySQL Database in Flutter",
          "Practice 6-2: Insert and Fetch data from MySQL Database",
          "Practice 6-3: Connecting and inserting data into Firebase",
          "Quiz 6: Quiz on Connecting to Database"
        ],
        "Project - Flutter Weather app with login": [
          "Lesson 7: Project - Flutter Weather app with login",
          "Practice 7-1: :Weather app with login",
          "Quiz 7: Quiz on Flutter Weather app with login"
        ]
      },
      "requirements": [
        "knowledge of any programming language",
        "About MySQL queries"
      ],
      "description": "Flutter is supported and used by Google, trusted by well-known brands around the world, and maintained by a community of global developers. Developing a mobile application is a complex and challenging task. However, to develop an application supporting both OSs, we need to code in two different languages using two different frameworks. To help overcome this complexity, there exist mobile frameworks supporting both OS. Irrespective of their simplicity or complexity, these frameworks always have many disadvantages, one of the main drawbacks being their slow performance. Dart has a large repository of software packages that lets you to extend the capabilities of your application.\nFlutter – a simple and high-performance framework based on Dart language, provides high performance by rendering the UI directly in the operating system’s canvas rather than through a native framework. Flutter is powered by Dart, a language optimized for fast apps on any platform. Flutter needs lesser testing. Because of its single code base, it is a sufficient if we write automated tests once for both platforms.\n\n\nFlutter also offers many ready-to-use widgets (UI) to create a modern application. These widgets are optimized for mobile environments and designing the application using widgets is as simple as designing HTML.",
      "target_audience": [
        "Mobile App developer",
        "Cross platform app developers"
      ]
    },
    {
      "title": "Learning Android App Creation With C#",
      "url": "https://www.udemy.com/course/android-app-creation-with-c-sharp/",
      "bio": "Learn How To Create Android Apps Using C#. An Easy To follow Course For App Developers",
      "objectives": [
        "Learn how to create Android Apps with C#"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Introduction And Course Overview",
          "0102 Mono In Visual Studio 2012",
          "0103 Deploying To A Device",
          "0104 How To Access Your Working Files"
        ],
        "The User Interface": [
          "0201 Views And Layouts",
          "0202 Table Layouts",
          "0203 Relative Layouts"
        ],
        "User Interface Widgets": [
          "0301 Text View",
          "0302 Edit View",
          "0303 AutoComplete Edit",
          "0304 Buttons",
          "0305 Spinner",
          "0306 Checkbox",
          "0307 Radio Buttons And Groups",
          "0308 Images",
          "0309 Basic List",
          "0310 Simple List Adapters",
          "0311 Custom List Adapters",
          "0312 Expandable List Adapters",
          "0313 Using Expandable List Adapters"
        ],
        "Activities - Intents And Services": [
          "0401 Activities And Intents",
          "0402 Activity Life Cycle",
          "0403 Passing Data Between Activities"
        ],
        "The Data Layer": [
          "0501 Creating A SQLite Database",
          "0502 CRUD Operations",
          "0503 Creating Business Objects - SQLite ORM"
        ],
        "Social Network Users": [
          "0601 Login And Tabs",
          "0602 Contacts List",
          "0603 Contact Details",
          "0604 Editing A Contact"
        ],
        "Photo Sharing": [
          "0701 Editing Pictures And Local File Storage",
          "0702 Photo Grid View",
          "0703 Adding And Deleting Photos"
        ],
        "Messaging": [
          "0801 Messages List",
          "0802 Messaging UI",
          "0803 Sending An SMS Message",
          "0804 Sending A Picture",
          "0805 Sending An Email",
          "0806 Adding An Attachment"
        ],
        "Syncing With A Server": [
          "0901 Remote Data Using JSON",
          "0902 Updating The Server",
          "0903 Retrieving Photos",
          "0904 Uploading Photos"
        ],
        "Publishing": [
          "1001 Versioning And Signing",
          "1002 Publishing"
        ]
      },
      "requirements": [
        "A desire to create cool Android Apps"
      ],
      "description": "This Android App Creation with C# training course from Infinite Skills teaches you how to create applications for Android using Mono and C#. This course is designed for the absolute beginner, meaning no Android App Creation experience is required.\n\nYou will start out by touring the user interface and learning the interface widgets, including text and edit view, AutoComplete edit, and radio buttons and groups. This video tutorial takes you through the creation of a social networking app with messaging and photo sharing, while covering basic Android development concepts. The course will teach you basic concepts such as setup, UI development, working with local and remote data, and interfacing with SMS and email. Finally, you will learn how to publish the App to Google Play.\n\nOnce you have completed this video based training course, you will have developed the necessary skills needed to create and submit your own Android Apps to the Google Play store. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Web Designers, Web Developers, Any one who wishes to create robust Android Apps"
      ]
    },
    {
      "title": "Unity Mobile Development - Create Your First Mobile Game!",
      "url": "https://www.udemy.com/course/create-your-first-unity-mobile-game/",
      "bio": "Learn the fundamentals of Unity, C# and mobile game development, and introduce yourself to the world of programming!",
      "objectives": [
        "How to create and build your very first mobile game from scratch, while learning the fundamentals of coding and game development.",
        "The basics of how to design and publish games using the Unity Game Engine and the C# programming language!",
        "Mobile game development strategies and techniques from an experienced mobile developer!",
        "Principal concepts of mobile game design, such as game feedback and monetization strategy implementation!!"
      ],
      "course_content": {
        "Introduction": [
          "Roadmap",
          "Installing Unity and Visual Studio",
          "The Basics of Unity and C#"
        ],
        "Core Mechanics": [
          "Creating Your Character",
          "Designing An Environment",
          "Intro to Physics",
          "Writing our First Script",
          "Adding Camera Follow",
          "Setting Character States",
          "Creating a Game Loop",
          "Adding in Timers",
          "Generating our Map",
          "Improving our Map",
          "Minor Improvements"
        ],
        "Improving our Game": [
          "Adding a Scoring System",
          "Saving",
          "Improving Visuals",
          "Adding Sound",
          "Creating a Menu System",
          "Monetizing Your Game"
        ],
        "Final Steps": [
          "Finishing Up :)"
        ]
      },
      "requirements": [
        "No programming or development experience needed! You will learn everything you need to know!"
      ],
      "description": "Hey there, and welcome to my course on creating your first-ever mobile game!\n\n\nIn this course, we will be creating our very own, fun-to-play, monetisable mobile game from scratch! We'll be using Unity and C# to develop our game, and will be covering everything mobile game related, from the basics of coding to all the specifics of our game engine.\n\n\nOver the last few years, I have created and released 4 mobile games, entirely on my own, and they are all currently available to download on Google Play. Now, using the skills I acquired, I have created this course, in the hopes that I could spread this knowledge and help you create your very first game.\n\n\nWhen I was building my mobile games, I ran into many, many issues, and as a result, spent hours or sometimes even days searching the web for simple ways to overcome them. In this course, I will cover everything I wish I had known when I started out developing mobile games, and explain the entire process of creating mobile games from start to finish, through easy-to-follow video tutorials. After completing this course, you will have gained all the Unity and C# knowledge you need to begin creating your very own games and apps by yourself!\n\n\nCreating a mobile game from scratch can be a tricky task, but with the help of this course, you'll be learning what has proved to me to be the easiest and most efficient way to develop mobile games in Unity.\n\n\nIf you choose to enroll, you'll be making a wise decision, learning a valuable and in-demand skill, and having fun while doing so. I hope I get the privilege of teaching you.\n\n\nHave a great day! :)",
      "target_audience": [
        "Those looking to enter the exciting world of mobile game development!",
        "Game artists or musicians wanting to learn how to create a game on their own!",
        "Those wanting to learn Unity and C# for the first time!",
        "Novice programmers looking to enter a new field!"
      ]
    },
    {
      "title": "Android Jetpack Compose Projects For Beginners",
      "url": "https://www.udemy.com/course/jetpack-compose-projects-build-great-login-uis-for-android/",
      "bio": "Create responsive UIs with Jetpack Compose, covering state management, custom components, and social logins",
      "objectives": [
        "Create stylish and responsive login screens with Jetpack Compose: Students will learn how to build visually appealing login screens using Jetpack Compose in And",
        "Implement state management: Students will understand how to manage user input (email and password) using rememberSaveable to retain state during configuration c",
        "Build reusable UI components: Learn to create custom, reusable UI components like CustomTextField and SocialButton to improve app maintainability",
        "Enhance user experience with form validation: Understand how to implement basic form validation and error handling for login flows",
        "Integrate social login buttons (Google and Facebook): Implement social login options with buttons using Jetpack Compose."
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Kotlin: A foundational understanding of Kotlin is required, as this course assumes familiarity with the language",
        "Familiarity with Android Studio and Android development: Basic understanding of Android development, including setting up projects and running apps, will be helpful"
      ],
      "description": "Are you ready to master Jetpack Compose for Android? This course will guide you through building modern, responsive login UIs using Jetpack Compose and Kotlin. You will learn to design two unique login screens with real-world functionality, including state management for input fields, custom UI components, and integrating social login buttons (Google and Facebook). Whether you're new to Android development or an experienced Kotlin developer, this course will equip you with the skills to create functional and visually appealing user interfaces.\nIn this hands-on course, you will start by creating a simple login UI with Jetpack Compose, learning how to manage user input and validate forms effectively. You'll then move on to more advanced topics such as designing reusable UI components and incorporating social media login options to give your app a professional touch.\nBy the end of this course, you'll be confident in building login screens for any Android project with Jetpack Compose. This course is perfect for Android developers who want to enhance their skills, as well as beginners looking to dive into modern Android development. You'll walk away with a strong understanding of Jetpack Compose and practical experience creating production-ready login screens for real-world Android applications and projects.",
      "target_audience": [
        "Android developers looking to learn Jetpack Compose: Ideal for developers who want to learn Jetpack Compose to build modern and efficient UIs for Android apps",
        "Kotlin developers interested in Android UI development: If you're comfortable with Kotlin and want to expand into UI development, this course is for you",
        "Beginners in Android development: Newcomers to Android development who want to learn how to create functional, modern UIs using Jetpack Compose"
      ]
    },
    {
      "title": "Automate everything with Katalon Studio",
      "url": "https://www.udemy.com/course/katalon-studio/",
      "bio": "Automate Web/iOS/Android applications with Katalon",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Katalon studio for Android Application": [
          "Introduction to Katalon and Android automation",
          "Working with Spy Mobile and running simple android test with record and play"
        ],
        "Katalon Studio for Web UI automation": [
          "Working with Spy Web and running simple Web UI test with record and play",
          "Handling popup window and data driven testing with Excel sheet with parameters",
          "Iterating multiple data in Excel sheet and working with cross browsers",
          "Working with Katalon Recorder"
        ],
        "Handling dynamic/parameterized objects with Katalon Studio": [
          "Advanced interactions and dynamic property modification (Part A)",
          "Advanced interaction and dynamic property modification (Part B)",
          "Custom keywords and method calls (Part A)",
          "Custom keywords and method calls (Part B)",
          "Working with Parameterized test object (Part A)",
          "Working with Parameterized test object (Part B)"
        ],
        "Katalon Studio (Beta) and new features": [
          "Katalon Test reporting and Analytics (Beta)",
          "Katalon Test reporting and Analytics (Beta) - Part 2",
          "Working with Test Listeners (Test Hooks) in Katalon studio v5.2",
          "Running firefox headless with Katalon Studio 53.0"
        ],
        "Katalon studio for iOS Application": [
          "Automating Native Xamarin iOS application (Part A)",
          "Automating native Xamarin iOS application (Part B)"
        ],
        "Katalon Studio with Kobiton to run test on Cloud": [
          "Introducing Kobiton with Katalon Studio"
        ],
        "Katalon Studio running on Docker Container": [
          "Katalon studio running in Docker Container"
        ],
        "API Testing with Katalon Studio": [
          "API Testing with Katalon Studio and its new changes in Katalon 5.4",
          "API Testing with Katalon Studio - POST Request and verify",
          "API Testing with Katalon Studio - PUT Request and verify",
          "API Testing with Katalon Studio - DELETE Request and verify"
        ],
        "Automating MFA based application with Katalon Studio": [
          "Automating Multi-factor Authentication login based application"
        ]
      },
      "requirements": [
        "Basic understanding of Selenium Webdriver",
        "Basic understanding of mobile application",
        "Basic idea of Web applications"
      ],
      "description": "In the course Automate everything with Katalon Studio we will learn everything from\nUnderstand what Katalon studio is\nAutomate Android application\nAutomate iOS application\nAutomate Web application\nUnderstand basic to advanced concepts of Katalon studio\nUnderstand Katalon analytics for reporting\nUnderstand how object repository works\nUnderstand working with external data sources\nWorking with all new features of Kalaton studio which are even in Beta stage\nThis course talks everything in much high level, but giving details in much granular level in many areas of the course.",
      "target_audience": [
        "QA",
        "Developer",
        "DevOps"
      ]
    },
    {
      "title": "The Complete Swift iOS Developer - Create Real Apps in Swift",
      "url": "https://www.udemy.com/course/the-complete-ios-10-developer-course/",
      "bio": "Learn iOS and Swift to become an app entrepreneur. Includes FREE AWS service, Swift tvOS and Sketch training.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup": [
          "Introduction to Setup",
          "How to Set Up Xcode 8 and Swift 3",
          "How to Set Up iOS 10 Simulators"
        ],
        "Basic Swift 3": [
          "Introduction to Swift 3",
          "Interlude",
          "Set up a Playground in Swift 3",
          "Variables in Swift 3",
          "Collections - Arrays in Swift 3",
          "Collections - Sets in Swift 3",
          "Collections - Dictionaries in Swift 3",
          "Swift 3 Questions - Part 1",
          "Logic - If Else and Switch Case in Swift 3",
          "Round and Round - Loops in Swift 3",
          "Swift 3 Questions - Part 2",
          "Functions in Swift 3",
          "Optionals in Swift 3",
          "Swift 3 Questions - Part 3",
          "Classes and Objects in Swift 3",
          "Inheritance in Swift 3",
          "Swift 3 Questions - Part 4",
          "Summary of Swift 3"
        ],
        "Your First iOS 10 App - An Astronomy Screen Torch!": [
          "Introduction to Your First iOS 10 App",
          "An Astronomy Screen Torch - Storyboards",
          "An Astronomy Screen Torch - View Controller Code",
          "An Astronomy Screen Torch - Buttons and Outlets",
          "An Astronomy Screen Torch - Storyboard Element Positioning",
          "Create an Astronomy Screen Torch - Assignment",
          "Create an Astronomy Screen Torch - Solution",
          "Summary of Your First iOS 10 App",
          "Astro Torch Source Code"
        ],
        "App 2 - Temperature Converter": [
          "Introduction to Temperature Converter",
          "Making the Main Screen of our Temperature Converter",
          "Connecting the Main Screen of Temperature Converter to Code",
          "Writing the Main Code of our Temperature Converter App",
          "Temperature Converter - Assignment",
          "Temperature Converter - Solution",
          "Summary of Temperature Converter"
        ],
        "App 3 - Calculator": [
          "Introduction to Calculator",
          "Making our Calculator Screen - Images, Image Sets and Buttons",
          "Making of our Calculator Screen - Stack Layouts",
          "Connecting Calculator Screen to Code",
          "Storing things with Enums",
          "Writing the Basic Code of our Calculator",
          "Calculator - Homework",
          "Calculator- Solution",
          "Calculator Source Code",
          "Summary of Calculator"
        ],
        "App 4 - Back to the Future": [
          "Introduction to Back to the Future",
          "Back to the Future - Tabbed Apps Explained",
          "Back to the Future Layout - Storyboards",
          "Back to the Future Code - Showing the Year",
          "Back to the Future Code - A Ticking Clock",
          "Back to the Future Time Travel - Storyboards",
          "Back to the Future Time Travel - Code",
          "Back to the Future Time Travel - Animations",
          "Back to the Future - Homework",
          "Back to the Future - Solution",
          "Back to the Future - Extra Credits",
          "Summary of App 2 - Back to the Future",
          "Back to the Future Source Code"
        ],
        "App 5 - Where was I? - GPS and Maps": [
          "Introduction to App 3 - Where was I?",
          "Where was I? - Setup",
          "Showing a Map with Apple Maps",
          "Info.plist - Setting Required Device Capabilities",
          "Info.plist - Permissions for Location",
          "Showing Your Location",
          "Getting Location Coordinates",
          "Creating a Class to Store Location Coordinates",
          "Saving Location Coordinates (UserDefaults)",
          "Showing Last Location with a Pin Annotation",
          "Where Was I - Homework",
          "Where Was I - Solution",
          "Summary of Where was I? - GPS and Maps",
          "Where was I Source Code"
        ],
        "Great App Design": [
          "Introduction to Great App Design",
          "Thinking About User Experience",
          "Popular User Experience Tools",
          "How to Design a User Experience - Photo Sharer",
          "What is a User Interface - First Step",
          "Popular User Interface Design Tools",
          "How to Design a User Interface",
          "Summary of Great App Design"
        ],
        "App 6 - Quick Share (Photos)": [
          "Introduction to Quick Share",
          "Quick Share - Launch Screens and Images",
          "Creating the User Interface - UITableView",
          "How to Setup a Simple UITableView",
          "How to Setup a Custom UITableViewCell",
          "How Handle a Click from a UITableViewCell",
          "How to Push a New View Controller and Send Data",
          "Warning - There Be Dragons Ahead!",
          "How to Use the Photos Framework with Swift",
          "How to Pass a Photo to a View Controller",
          "Setting up Sharing Icons and Minimising Outlet Code",
          "Sharing on Facebook and Twitter Using the Social Framework",
          "Sharing on Instagram",
          "Sharing on WhatsApp",
          "Taking a Photo from Inside Your App",
          "Quick Share - Homework",
          "Quick Share - Solution",
          "Summary of Quick Share",
          "Source Code for Quick Share"
        ]
      },
      "requirements": [
        "You will need a Mac running the latest OS X to create iOS apps"
      ],
      "description": "The Complete iOS 10 Developer has just ONE goal - to turn you into the best developer, freelancer and entrepreneur that you can possibly be!\nOther iOS courses COMPLETELY miss why you're learning to become a developer. How do I know this? Well I've taken their courses because I wanted to see what the competition is up to!\nAnd what do these other guys miss?\nWell they haven't thought about you and what your needs are! Let me tell you why I think you're here. I think it's because maybe you are looking for a way to improve yourself - either via high paying jobs, freelancing or by creating your very own successful startup.\nI get that.\nSo whilst this course gives you all the developer skills you could ever want - it also has more. A complete section on how you create a startup. Right from idea all the way through to raising millions in venture capital funding.\n\n--------------------------------------------------------\nWhich one are you?\n- Six figure salaried developer?\n- Someone who likes earning between $60 - $120 p/h as a freelancer?\n- Someone who wants to free themselves from the 9 - 5 jive and create a successful startup?\n--------------------------------------------------------\n\nHere's a recent message I received from one of my students:\n\" Hi Grant, I managed to land the fabled 6 figure developer job yesterday thanks to your course. In the interview they asked me complicated questions and luckily you'd explained the majority of those. Thanks for a great course and I'm off to buy the rest of your courses now that I have a little extra change :) \"\n--------------------------------------------------------\nBonus For You\nMany courses offer a few extras here and there. That's nice but they don't have any real value. By real value I mean, can it earn you passive revenue day after day, week after week or month after month?\nThis course contains an app that no other course contains. One that I'm releasing in time for iOS 10 and one that I foresee as having HUGE potential. The source code is contained in this course. In fact I invite you to compete against me with the release. If your app has more users than mine I will refund you the price of this course :)\n------------------------------------------------------\n\nWho Am I?\nEveryone wants to know who's teaching them. Well, here's my bio:\nI started out as NOT A PROGRAMMER. Hard to believe when I tell you that I've worked on dozens of the most popular apps out there right?\nThe fact that I didn't start out as a programmer means that I actually remember what it's like to be a beginner. I remember teachers throwing useless jargon at me and you know what?\nIt sucked!\nThat's why in this course I tell you everything you need to know in plain English!\nCreating useful apps\nMaking GPS maps\nMaking ticking clock apps\nTranscription apps\nCalculator apps\nConverter apps\nRESTful and JSON apps\nFirebase apps\nInstagram clones (but better ;)\nFancy animations to WOW users\nCreating compelling apps\nHow to start your own startup from idea to financing to selling\nAnd a ton more!\nIn Silicon valley venture capitalists talk about return on investment a lot. A good return averaged over all their assets is something like 10%.\nImagine if you could have a return in the thousands of percent?\nWell that's what you get when you take this course. An investment of a few coffees returns your investment multiple times over.\nYou are your biggest asset. Invest in it accordingly and take this course today!",
      "target_audience": [
        "Beginners to programming or iOS programming should take this course",
        "Experts at iOS programming should not take this course"
      ]
    },
    {
      "title": "Build real-time iOS apps with ASP .NET Core SignalR",
      "url": "https://www.udemy.com/course/build-real-time-ios-apps-with-asp-net-core-signalr/",
      "bio": "Build apps for Apple devices (iOS, watchOS, tvOS and macOS) that use ASP .NET Core SignalR for realtime communication",
      "objectives": [
        "Connect and communicate with ASP .Net Core SignalR Servers from Apple devices (e.g. iPhone)",
        "Handle errors and connection life cycle events",
        "Troubleshoot issues",
        "Understand the most common mistakes and learn how to avoid them"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Overview": [
          "Lecture 2: Overview"
        ],
        "Server and environment preparation": [
          "Server and environment preparation"
        ],
        "Application Skeleton": [
          "Application skeleton"
        ],
        "Application UI": [
          "Application UI"
        ],
        "Basic chat functionality": [
          "Basic chat functionality"
        ],
        "Error handling, hub connection life cycle": [
          "Error handling, hub connection life cycle"
        ],
        "Automatic reconnection": [
          "Automatic reconnection"
        ],
        "Structural types handling": [
          "Structural types handling"
        ],
        "Server side invocations": [
          "Server side invocations"
        ]
      },
      "requirements": [
        "Basic knowledge of the Swift programming language."
      ],
      "description": "Do you need to write an iPhone application that sends and receives instant updates to and from your ASP .NET Core backend? Would you like your Apple Watch to communicate with other devices and web sites in real time using SignalR? If so, look no further – this course is precisely what you need.\nAbout the course\nThis course will teach you how to build applications for devices in Apple’s ecosystem running iOS, watchOS, tvOS or macOS that use SignalR for real-time communication via the ASP .NET Core backend.\nIn this course, you will gain hands-on experience by building an iPhone chat application from scratch that leverages the Swift SignalR Client to exchange messages with other users using an ASP .NET Core based chat server.\nWhat you will learn\nKey topics covered in this course include:\nSignalR communication implementation\nError handling and hub connection life cycle\nAutomatic reconnection\nStructural type handling\nTroubleshooting issues\nThe most common mistakes and ways to avoid them\nBy the end of this course, you will have a deep understanding of how to integrate the Swift SignalR Client with your application, understand the nuances of working with the ASP .NET Core SignalR Server and know how to effectively identify, troubleshoot, and resolve issues encountered when communicating with the backend server.\nAbout the instructor\nMy name is Pawel, and I am the creator of the SignalR Swift Client – the most widely used ASP .NET Core SignalR client for Apple’s ecosystem and a former member of the SignalR team at Microsoft.",
      "target_audience": [
        "iOS, macOS, tvOS and watchOS developers who need or want to use ASP .Net Core as their backend."
      ]
    },
    {
      "title": "Android Dependency Injection With Dagger 2 - II",
      "url": "https://www.udemy.com/course/android-dependency-injection-with-dagger-ii/",
      "bio": "Master Dagger 2 Android Dependency Injection With MVVM architecture complete app",
      "objectives": [
        "Dependency Injection",
        "Dagger 2",
        "MVVM",
        "Kotlin Coroutines",
        "Retrofit",
        "Room"
      ],
      "course_content": {
        "Introduction": [
          "Download Project File",
          "Base Project walk through",
          "Base URL",
          "Configure base URL and endpoints",
          "Retrofit",
          "Request and Response data class file",
          "NetworkService",
          "Network resource file",
          "Main Repository",
          "Task Entity",
          "Database service and DAO",
          "Add task repository",
          "Configure MainViewModel - Part I",
          "Configure MainViewModel - Part II",
          "Configure AddViewModel",
          "ViewModelProviderFactory",
          "Application module and component",
          "Application class inject dependencies",
          "Repository class constructor injection",
          "Activity module and component",
          "Activity and Fragment Scope",
          "Fragment Componet and Module",
          "Inject dependencies in home fragment",
          "Inject dependencies in add fragment",
          "Bug Fix",
          "Task list layout",
          "Task Adaptor",
          "Implement task adaptor",
          "Get task list from local db",
          "Display data to recycler view",
          "Add task to api",
          "Bug fix",
          "Snackbar",
          "Thank You"
        ]
      },
      "requirements": [
        "Basic of Android Development",
        "Android Dependency Injection With Dagger - I OR Basic knowledge of Dagger 2"
      ],
      "description": "In this course we will learn android dependency injection using Kotlin and MVVM. We will build a complete app using Kotlin, Coroutines, Room, Retrofit, Dagger and MVVM. This course is fully practical no talking just doing. If you have already completed Android Dependency Injection With Dagger - I, this course is for you.\nThis course is for anyone who is interested in learning Android Dependency Injection With Dagger. By the end of the course you will have a good understanding about dependency injection and Dagger 2.",
      "target_audience": [
        "Any one intrested to learn adroid dependency injection with dagger",
        "Android developer"
      ]
    },
    {
      "title": "Basic Swift Programming and iOS - Free Preview",
      "url": "https://www.udemy.com/course/the-complete-ios-developer-course/",
      "bio": "Learn iOS and Swift & become an app entrepreneur!",
      "objectives": [],
      "course_content": {
        "Introduction to iOS 11 and Swift 4": [
          "Introduction",
          "How to Get the Most from this Course"
        ],
        "Setting Up for iOS 11 and Swift 4": [
          "Introduction to Set Up",
          "How to Set Up Xcode 9 - Swift 4 and the iOS 11 Simulators",
          "How to Install iOS 11 Beta on your iPhone or iPad"
        ],
        "Learn Basic Swift 4": [
          "Basic Swift 4 Introduction",
          "How to Use a Playground in Swift 4",
          "Variables in Swift 4",
          "Collections - Arrays in Swift 4",
          "Collections - Sets in Swift 4",
          "Collections - Dictionaries in Swift 4",
          "Logic in Swift 4 - If Else and Switch Case",
          "Round and Round - Loops in Swift 4",
          "Functions in Swift 4",
          "Optionals in Swift 4",
          "Classes and Objects in Swift 4",
          "Inheritance in Swift 4",
          "Summary of Basic Swift 4"
        ],
        "Starter iOS 11 App - An Astronomical Screen Torch!": [
          "Introduction to Your First iOS 11 App",
          "Astronomy Screen Torch - Storyboards",
          "Astronomy Screen Torch - View Controller Code",
          "Astronomy Screen Torch - Buttons and Outlets",
          "Astronomy Screen Torch - Storyboard Element Positioning",
          "Astronomy Screen Torch - Assignment",
          "Astronomy Screen Torch - Solution",
          "Summary of Your First iOS App"
        ]
      },
      "requirements": [
        "You will need a Mac running the latest macOS to create iOS apps",
        "You can also create your own 'Hackintosh' if you can't afford a Mac"
      ],
      "description": "Basic Swift Programming has just ONE goal - to show how you can be the best iOS / Mac / Apple TV developer, even if you're starting from scratch!\nOther Swift courses COMPLETELY miss why you're learning to become a developer. How do I know this? Well I've taken their courses because I wanted to see what the competition is up to!\nAnd what do these other guys miss?\nWell they haven't thought about you and what your needs are! Let me tell you why I think you're here. I think it's because maybe you are looking for a way to improve yourself - either via high paying jobs, freelancing or by creating your very own successful startup.\nI get that.\nSo whilst this course gives you the basic developer skills you need to get started, it also has more. It has my insight from decades of real world development experience, invaluable for your career progression.\n--------------------------------------------------------\nHere's a recent message I received from one of my students:\n\" Hi Grant, I managed to land the fabled 6 figure developer job yesterday thanks to your course. In the interview they asked me complicated questions and luckily you'd explained the majority of those. Thanks for a great course and I'm off to buy the rest of your courses now that I have a little extra change :) \"\n--------------------------------------------------------\nWho Am I?\nEveryone wants to know who's teaching them. Well, here's my bio:\nI started out as NOT A PROGRAMMER. Hard to believe when I tell you that I've worked on dozens of the most popular apps out there right?\nThe fact that I didn't start out as a programmer means that I actually remember what it's like to be a beginner. I remember teachers throwing useless jargon at me and you know what?\nIt sucked!\nThat's why in this course I tell you everything you need to know in plain English!\nIn Silicon valley venture capitalists talk about return on investment a lot. A good return on investment is something like 10%.\nImagine if you could have a return of 10,000%?\nWell that's what you get when you take this course. An investment of a few coffees returns your investment multiple times over!\n----------------------------------------------------------------------------------------\n\nYou are your biggest asset. Invest in yourself and take this course today!\n----------------------------------------------------------------------------------------",
      "target_audience": [
        "Beginners to programming or iOS programming should take this course"
      ]
    },
    {
      "title": "Build WatchOS Timer App in SwiftUI 4 using MVVM",
      "url": "https://www.udemy.com/course/build-watchos-timer-app-in-swiftui-4-using-mvvm/",
      "bio": "Build timer app UI from start to finish while learning about WatchOS",
      "objectives": [
        "WatchOS UI",
        "SwiftUI",
        "iOS Development",
        "Watch App Development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Timer App UI": [
          "Setup",
          "Timer Unit and Timer Model",
          "Timer View Model",
          "Timer Glow Effect",
          "Timer Dial",
          "Timer Cell",
          "Timer List View",
          "Timer View"
        ]
      },
      "requirements": [
        "Xcode Knowledge",
        "Swift Knowledge",
        "SwiftUI Knowledge"
      ],
      "description": "SwiftUI has changed the entire dynamics of app development in iOS space. Now developing for watchOS is as easy as dropping reusable SwiftUI views into the app and run them against the correct target.\nIn this course, we are going to work on WatchOS and SwiftUI. With the introduction of SwiftUI, a lot of UI development have been combined and learning has become easy. For example, most of the concepts of SwiftUI that you learn and apply on iOS, iPadOS, MacOS and TVOS are same. WatchOS has different specs as far as the hardware, screensize etc goes so SwiftUI adapts to those changes and provides a look that works of WatchOS but the code you write is pretty much same as SwiftUI for iOS.\nWe will learn about timer app that is present in your apple watch and create a clone of that using SwiftUI. We will build all the modules that will make the complete app along with the timer dial to show seconds and minutes ticker view. You will learn to observe changes in Timer using Timer publisher and create a reverse progress view which will indicate time remaining in the timer. You will learn to apply conditional based color rings to display different stages of the progress.\n\n\nLearning Objectives:\n\n\n* WatchOS and SwiftUI\n* Ring Progress View\n* Combine based Timer Publisher\n* Build advanced ticker view using basic shapes\n* Build timer model to support minute and hour based timer\n* Create conditional views based on observed changed into the view and state properties\n* Use of OnReceive Observer to monitor changes in Timer",
      "target_audience": [
        "Developers who wants to build WatchOS apps using SwiftUI"
      ]
    },
    {
      "title": "Java for Mobile Devices - iOS/Android/Win (Phones & Tablets)",
      "url": "https://www.udemy.com/course/java-for-mobile-devices/",
      "bio": "Build cross platform native mobile applications using Codename One on: IntelliJ/IDEA, NetBeans or Eclipse",
      "objectives": [],
      "course_content": {
        "Introduction - This is an optional \"theory\" section": [
          "Introduction",
          "Creating a hello world App",
          "What is Codename One",
          "Core Concepts of Mobile Development"
        ],
        "Basics - UI and hello world \"to do list\" app": [
          "Layout Basics",
          "Theme Basics",
          "Adapting a UI Design"
        ],
        "How Do I?": [
          "Work with Multi-Images",
          "Create a List of Items",
          "Customize Component Borders & Backgrounds",
          "Use Storage, File System & SQL",
          "Use HTTP, WebSockets & Invoke REST Webservices",
          "Internationalization & Localization - Support multiple languages",
          "Understand Properties in Codename One",
          "Access Native Device Functionality - Invoke a Native Interface",
          "Debug and Run on Device/Native IDE"
        ]
      },
      "requirements": [
        "Basic understanding of the Java programming language",
        "Ability to work with one of the major Java IDE's NetBeans, Eclipse or IntelliJ/IDEA"
      ],
      "description": "Learn how to build native iOS/Android/Windows applications using your existing Java programming skills and your IDE of choice. This course teaches the basics of Codename One, an open source tool for mobile development in Java.\n\nThis is an introductory course that also explains the core concepts of mobile development and some of the more complex notions. The course builds a good looking \"TODO\" app with a cool title area animation effect.\nMost of the lessons in the course are completely standalone and don't require a sequence so you can just jump back and forth between the modules.",
      "target_audience": [
        "A developer who knows Java and is interested in applying those skills to mobile devices"
      ]
    },
    {
      "title": "Learn to Build iOS9 Apps : The Complete Course for Coders",
      "url": "https://www.udemy.com/course/learn-to-build-ios9-apps-the-complete-course-for-coders/",
      "bio": "Start building your iOS 9 Apps and learn real iOS development skills with this feature packed tutorial.",
      "objectives": [
        "Create applications and games optimized for ios9",
        "Learn new ioS9 features",
        "Learn Swift language from Scratch",
        "Get practical skills to start building professional apps for the App store"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic tools and IOS Ecosystem": [
          "Introduction to IOS programming",
          "Xcode - Download, Setup and Main features"
        ],
        "Swift primer": [
          "Intro",
          "Programming basics - Variables and Constants",
          "Strings",
          "Arrays and Dictionaries",
          "Looping Through Arrays",
          "Looping Through Dictionaries",
          "Control Statements",
          "Enums",
          "Functions - Basics",
          "Functions Continued",
          "Closures",
          "Summary"
        ],
        "Object oriented programming": [
          "Intro",
          "Classes and Properties",
          "Class Functions",
          "Optionals and Forced Unwrapping",
          "Guard Statement",
          "Summary"
        ],
        "IOS Programming basics": [
          "Intro",
          "MVC programming in IOS",
          "IOS App Design principles",
          "Views and View types in IOS",
          "Segues",
          "Pickerviews",
          "Summary"
        ],
        "Delegation And Protocols": [
          "Intro",
          "Delegation and Protocols",
          "Extensions",
          "Summary"
        ],
        "IOS Controllers TableViews": [
          "Intro",
          "Controllers",
          "Table Views",
          "Editing in Table Views",
          "Summary"
        ],
        "Stackview": [
          "Intro",
          "Stackview",
          "Prep coredata",
          "Keyboard",
          "Working with core data",
          "Integrating Core Data Into A Tableview",
          "Summary"
        ],
        "Safari view controller": [
          "Intro",
          "Webcontent",
          "Animation",
          "Summary"
        ],
        "IOS9 App project": [
          "A complete project in iOS9 - Presidents List & links wikipedia"
        ]
      },
      "requirements": [
        "Basic programming knowledge is must for this course"
      ],
      "description": "Apple’s dedicated OS has constantly been giving head to head competition to Android, even though Android’s market share greatly surpasses that of iOS. However, in terms of innovation, iOS is often labeled as a hands-down winner and app developers make more money on the Apple platform.\nWith the growing number of users on a steady basis, Apple has made it easier to make and distribute apps on their App Store for any developer with the knack of developing apps. They have also introduced the new programming language, Swift, to make this daunting task easier.\nWith iOS9, Apple hopes to bring their technology into the hands of the creative masses. iOS9 was recently introduced and came packed with many new features. These features include a significantly faster processor, battery improvement and under-the-hood optimizations. Other features that could be found on the OS included the ability to divide your screen into two, adding images and photos to notes, maps including public transports, 3D touch that allows the ability to peak and pop, and even Live Photos. This has opened the market up for many different innovative apps that can now incorporate these brilliant technologies.\nThis course is the perfect course to get your ios development started. Learn how to develop iOS applications from scratch and start making your own applications with ease. This comprehensive course has been created keeping in mind the beginners as well as advanced developers and breaks down simple concepts before taking the learner on the journey to more complex constructs.\nThe course will cover new technologies such as UIStack View and SFSafari View Controller and will also include basics of iOS 9, Swift, and iOS9 features (guard statement, optionals, forced unwrapping). The iOS9 tutorial has been designed to break down basics as well as advanced concepts and includes defining terms such as different kinds of loops, constants and variables, arrays and dictionary, conditional flows, Enums and etc. Our course will also help you learn to design a full-functional app from scratch by helping you make the app along with the instructor.\nWith iOS being one of the most preferred operating systems, it is no wonder that a lot of people are jumping on the bandwagon to learn developing for iOS platforms. So what are you waiting for, enroll now and start creating your own iOS apps.",
      "target_audience": [
        "Course is great for iOS developers who want to get the most out of iOS9",
        "Beginners who want to get started with iOS development"
      ]
    },
    {
      "title": "Mastering React Native - Complete Guide to App Development",
      "url": "https://www.udemy.com/course/mastering-react-native-complete-guide-to-app-development/",
      "bio": "Dive into app development with React Native and build cross-platform applications efficiently.",
      "objectives": [
        "Fundamentals of React Native Development: Understand the core concepts and principles of React Native, including JSX syntax, components, state management.",
        "Setting Up Development Environment: Learn how to set up and configure a development environment for React Native on both macOS and Windows platforms.",
        "Building User Interfaces: Master the art of designing and creating responsive and dynamic user interfaces using React Native components and styling techniques.",
        "Navigation and Routing: Implement efficient navigation and routing within your mobile applications using React Navigation.",
        "Data Management: Integrate APIs and manage data within your React Native apps using tools like Axios for making HTTP requests and handling responses.",
        "User Authentication: Implement user authentication and authorization using Firebase authentication services and secure user data management.",
        "State Management: Explore advanced state management techniques using Redux to manage application-wide state and streamline data flow.",
        "Optimizing Performance: Learn strategies for optimizing React Native app performance, including code splitting, image optimization, and minimizing bundle size.",
        "Testing and Debugging: Gain proficiency in testing and debugging React Native applications to ensure robustness and reliability.",
        "Deployment: Understand the process of deploying React Native applications to the App Store and Google Play Store, including code signing and release management"
      ],
      "course_content": {
        "React Native - Login And Registration Feature Application": [
          "Introduction to Project",
          "Intro Quiz",
          "Project Setup",
          "Project Setup Continue",
          "Running Project",
          "Running Project Continue",
          "Quiz on project Setup and Running Project",
          "Simple Locking Page",
          "Important Stuffs",
          "State Value",
          "Color Change",
          "Login Screen Validation",
          "Registration Page",
          "Registration Page Continue",
          "Registration Inline Validation",
          "Registration Inline Validation Continue",
          "Registration Email and Phone no Validation",
          "Demo with Login and Registration Part 1",
          "Demo with Login and Registration Part 2",
          "Demo with Login and Registration Part 3",
          "Demo with Login and Registration Part 4",
          "Registration API Connectivity Part 1",
          "Registration API Connectivity Part 2",
          "Registration API Connectivity Part 3",
          "Login API Connectivity"
        ],
        "React Native - Product and Profile Application": [
          "Introduction to Project",
          "Product Detail Part 1",
          "Product Detail Part 2",
          "Product Detail Part 3",
          "Product Detail Part 4",
          "Product Detail Part 5",
          "Product Detail Part 6",
          "Profile Screen Part 1",
          "Profile Screen Part 2",
          "Profile Screen Part 3",
          "Profile Screen Part 4",
          "Profile Screen Part 5",
          "Profile Screen Part 6",
          "Profile Screen Part 7",
          "Profile Screen Part 8",
          "Profile Screen Part 9",
          "Profile Screen Part 10",
          "Profile Screen Part 11",
          "Profile Screen Part 12",
          "Profile Screen Part 13",
          "Profile Screen Part 14",
          "Profile Screen Part 15",
          "Forgot Password",
          "Update Password",
          "Forgot Password API",
          "Forgot Password API Continue"
        ],
        "React Native - Product Listing Application": [
          "Introduction to Project",
          "Project Setup",
          "Flat List",
          "Slide Menu",
          "Slide Menu Continue",
          "More on Slide Menu",
          "Product List",
          "Product Listing",
          "Product Listing with API",
          "Product List Customization",
          "Product List Customization Continue",
          "Slide Menu Custom",
          "Slide Menu Custom Continue",
          "More on Slide Menu Custom",
          "Custom Product List Part 1",
          "Custom Product List Part 2",
          "Custom Product List Part 3",
          "Custom Product List Part 4",
          "Custom Product List Part 5",
          "In fine Scrolling",
          "In fine Scrolling Continue",
          "Search List",
          "Search List Continue",
          "More on Search List",
          "Product Listing with Animation",
          "Product Listing with Animation Continue"
        ]
      },
      "requirements": [
        "Basic Programming Knowledge: A fundamental understanding of JavaScript programming is essential. This includes variables, functions, loops, conditionals, and data structures like arrays and objects.",
        "HTML and CSS Knowledge: Familiarity with HTML tags and CSS stylesheets will be beneficial for understanding how React Native components are structured and styled.",
        "React Basics (Recommended): While not mandatory, having a basic understanding of React js concepts such as components, state, props, and JSX syntax will facilitate quicker comprehension of React Native.",
        "Development Environment Setup: Students should be comfortable with setting up and navigating their development environment, including installing Node js, npm (Node Package Manager), and a code editor such as Visual Studio Code.",
        "Mobile Development Interest: A keen interest in mobile app development and a willingness to learn new technologies and frameworks is crucial for successfully completing the course."
      ],
      "description": "Welcome to the React Native Mastery Course, where you will embark on a journey to master mobile application development using React Native. This comprehensive course is designed to equip you with the skills and knowledge needed to build robust and scalable mobile apps for both iOS and Android platforms.\nThroughout this course, you will learn from scratch how to set up your development environment, configure projects, and leverage React Native's powerful capabilities to create engaging user interfaces and seamless user experiences. Whether you're a beginner or an experienced developer looking to expand your mobile development skills, this course will provide you with practical, hands-on experience and insights into building real-world applications.\nBy the end of this course, you will have the expertise to develop and deploy your own React Native applications, integrate APIs for data retrieval, implement navigation and user authentication features, and optimize performance for mobile devices. Join us on this journey and unlock the potential of React Native to build the next generation of mobile apps!\nSection 1: React Native - Login And Registration Feature Application\nIn this section, you will delve into the world of React Native development with a focus on creating a secure and efficient login and registration feature application. You will learn essential concepts and techniques that form the foundation of modern mobile app development. Throughout this section, you will progressively build the login and registration functionalities. Starting with project setup and environment configuration, you will move on to designing and implementing the user interface for login screens, registration forms, and validation mechanisms. Emphasis will be placed on user experience and ensuring data integrity through robust validation techniques. Here, you will integrate backend APIs to handle user registration and authentication. You will learn how to securely communicate with servers to validate user credentials, manage session states, and handle error scenarios gracefully. This section will equip you with skills essential for real-world mobile application development.\nSection 2: React Native - Product and Profile Application\nThis section focuses on extending your React Native skills to develop a product and profile application. You'll begin with an introduction to the project scope and setup, followed by detailed sessions on building product detail screens and customizing profile views. Throughout these lectures, you'll learn to implement complex UI components, handle API integrations for fetching product details, and manage user profiles effectively. By the end of this section, you'll be proficient in creating dynamic and interactive mobile applications with React Native.\nSection 3: React Native - Product Listing Application\nIn the final section of the course, you'll concentrate on building a product listing application using React Native. Starting with project setup and basic UI components like flat lists and slide menus, you'll progress to more advanced topics such as customizing product lists and implementing search functionalities. You'll also explore animation techniques to enhance the user experience when navigating product listings. By mastering these skills, you'll be well-equipped to develop scalable and feature-rich mobile applications using React Native.\nEach section builds upon the previous one, ensuring a comprehensive learning experience that equips you with practical skills to develop React Native applications from scratch.\nConclusion By the end of this course, you will have a comprehensive understanding of building sophisticated login and registration features using React Native. You will be capable of developing secure, responsive, and scalable mobile applications, making you proficient in leveraging React Native for future projects.\nThis course is designed for developers looking to enhance their skills in React Native and mobile app development, providing hands-on experience in building essential features for modern applications.",
      "target_audience": [
        "Beginner Developers: Individuals new to mobile app development who want to learn how to build cross-platform applications using React Native.",
        "Web Developers: JavaScript developers interested in expanding their skill set to include mobile app development without needing to learn platform-specific languages like Swift or Java.",
        "Students and Enthusiasts: Students or hobbyists keen to explore mobile app development as a career or personal project.",
        "Entrepreneurs and Tech Enthusiasts: Those looking to build their own mobile apps or prototypes efficiently using a popular and powerful framework.",
        "Professionals Seeking Career Growth: Developers aiming to enhance their skill set with a sought-after technology to advance their career prospects in the rapidly growing mobile app development industry."
      ]
    },
    {
      "title": "Android UI/UX for Developers: Build Stylish & Beautiful Apps",
      "url": "https://www.udemy.com/course/android-ui-ux/",
      "bio": "The complete cookbook on how to build stunning, responsive and usable Android User Interfaces for Phones and Tablets.",
      "objectives": [
        "Implement Google's Material Design Guidelines",
        "Use various Android Widgets",
        "Create Snazzy Animations",
        "Customize Android UI elements",
        "Write Custom Views for Android",
        "Make use of styles and themes",
        "Build UIs for Andoid devices with different Screen Sizes",
        "Handle UI backward compatibility for older Android versions",
        "Improve UI/UX for their Applications"
      ],
      "course_content": {
        "Introduction": [
          "A note to my students"
        ],
        "Using Navigation Drawers": [
          "Integrating a navigation drawer to your Activity",
          "Summoning the drawer using a \"Hamburger\" menu button",
          "Handling click events inside the drawer & handling the back button",
          "Using the drawer with a backward compatible ActionBar",
          "Pairing a drawer to a Toolbar",
          "Displaying the drawer under the Toolbar",
          "Changing the Toolbar text while the drawer opens & closes",
          "Having fun with multiple drawers"
        ],
        "First Custom View - Circular Progress Bar": [
          "Circular Progress Bar - Beginning with the end in mind",
          "Getting Information from a Reference Design",
          "View measurements - The right way to do it!",
          "Drawing the Progress Bar",
          "Centre the Progress Bar inside the View",
          "Inflating your Custom View from XML",
          "Updating values and redrawing the Progress Bar",
          "Custom View Electric Quiz - Zaaaaaaaap #1",
          "Displaying the progress value text",
          "Animating the Progress Bar using a Value Animator",
          "Making it real with Interpolators",
          "Adding additional XML attributes to the Custom View",
          "Making it snazzier - Animating Colors",
          "Will this run on older Androids? - Handling backward compatibility",
          "Custom View Electric Quiz - Zaaaaaaaap #2"
        ]
      },
      "requirements": [
        "Android Development Basics",
        "Basic Android UI Skills"
      ],
      "description": "36,500+ students have already enrolled in *Learn by Doing - Android for Beginners*\nHow do users decide which app to download? Simple - they check the SCREENSHOTS. Yeah, screenshots!\nBuilding high quality, highly functional, rapidly evolving rock solid applications is one thing. However, success also depends upon the number of eyeballs your app captures and the kind of UX it delivers.\nUsers perceive quality of an app, primarily based on how it looks. To build great apps for your audience, you need to acquire the skills of an artisan who can create polished and responsive UIs.\nWhat will I learn from this course?\nGoogle's new Material Design\nWhen and how to use and customize Android UI widgets\nAdd flair to your application using Animations\nBuilding responsive layouts for different screen sizes\nUse Android Graphic APIs\nCreate awesome custom views\n\n\nIs this course for me?\nIf you are a developer who has some Android experience or has completed an Android development course, then this course is definitely for you! :)\n\n\nWho am I?\nA passionate Android developer and entrepreneur. I've been developing for Android since 2010. I have worked as an independent developer for organizations like Tiffany, Mizuno, Glenlivet, Tata Information Systems among several others. I have also authored several open-source libraries that are being used by organizations like Wikipedia and Zappos. Of all my open-source projects, Android Saripaar is the leading UI validation library that is available for Android till date.\nWhat are you waiting for? Let's get started!",
      "target_audience": [
        "Anyone with previous Android Development experience",
        "Students who have completed an Android course",
        "NOT for Students / Developers without prior Android experience"
      ]
    },
    {
      "title": "Build a Powerful Document Scanner with SwiftUI",
      "url": "https://www.udemy.com/course/build-a-powerful-document-scanner-with-swiftui/",
      "bio": "A Complete Guide to build end to end production ready app",
      "objectives": [
        "How to integrate Vision Document Scanner for detecting and capturing documents with precision in SwiftUI.",
        "Techniques to create, edit, and manage PDF files using PDFKit.",
        "Effective use of FileManager to store and organize scanned documents.",
        "Building a polished and user-friendly SwiftUI app with modern design principles."
      ],
      "course_content": {
        "PDF Scanner in SwiftUI": [
          "Introduction",
          "Project Setup",
          "Scanned Document Model",
          "Document List View Model",
          "Document Row View",
          "Empty State View",
          "PDFKit View",
          "PDF Page View",
          "Share Sheet",
          "Scanner View",
          "Document Detail View",
          "Document List View",
          "Bug Fixes and Wrap Up"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift and SwiftUI is recommended, but no prior experience with Vision, PDFKit, or FileManager is required."
      ],
      "description": "Build a fully functional Document Scanner app with SwiftUI in this hands-on course designed for iOS developers of all levels. Whether you're looking to enhance your SwiftUI skills or explore tools like Vision, PDFKit, and FileManager, this course provides everything you need to create a polished, professional app.\nYou'll start by integrating the Vision framework to enable advanced document detection and scanning capabilities, learning how to guide users to capture high-quality scans. From there, you’ll dive into PDFKit to create and manage PDF documents seamlessly, including merging and annotating files. Using FileManager, you’ll organize and store files securely, ensuring a smooth user experience.\nThis course also emphasizes the power of SwiftUI, enabling you to design an intuitive, modern interface that makes document scanning and management effortless. You’ll gain practical experience building a real-world app while mastering best practices for coding, design, and file handling.\nBy the end of this course, you’ll have a production-ready document scanner app and a deeper understanding of iOS development tools. Whether you’re a beginner looking to grow or an experienced developer expanding your expertise, this course will empower you to create apps that stand out.\nLet’s build something incredible together! join us in this course",
      "target_audience": [
        "This course is for iOS developers eager to build functional apps with SwiftUI, including document scanning and file management features."
      ]
    },
    {
      "title": "Demystifying Linked Lists: A Practical Approach",
      "url": "https://www.udemy.com/course/demystifying-linked-lists-a-practical-approach/",
      "bio": "Finally understand linked lists without the academic jargon. Learn how they work and how to code them—in Swift",
      "objectives": [
        "Understand the structure and behavior of singly linked lists and how they differ from arrays in memory management and traversal.",
        "Create linked list nodes using Swift generics, allowing for reusable, type-safe data structures.",
        "Implement common linked list operations including insertion, deletion, and traversal from scratch.",
        "Reverse a singly linked list in-place, using pointer manipulation and without additional data structures.",
        "Detect and handle cycles in a linked list using Floyd’s Cycle Detection Algorithm (Tortoise and Hare approach).",
        "Find the middle node of a linked list efficiently with fast and slow pointers.",
        "Remove the nth node from the end of a linked list using a one-pass two-pointer technique.",
        "Check whether a linked list is a palindrome by reversing and comparing segments of the list.",
        "Merge two sorted linked lists in linear time without creating new nodes.",
        "Apply Swift’s reference type behavior to safely and effectively manipulate linked list nodes and avoid common pointer errors."
      ],
      "course_content": {
        "Introduction": [
          "What is a Linked List and why is it important?",
          "Mastering Linked Lists in Swift: Build a Strong Foundation in Data Structures",
          "Why use a Singly Linked-List",
          "What is 0(n) and 0(1)",
          "How to create LinkNodes for a Linked List",
          "How to modify a Linked List. Inserting and Deleting",
          "Understanding Pointers before Accomplishing a Linked List Reversal",
          "What are Pointers and what do they do?",
          "How to do a Linked List Reversal",
          "Coding the Linked List Reversal"
        ],
        "Generic Types in Linked Lists": [
          "Creating a Generic Type for a Linked List"
        ],
        "Linked List Cycles": [
          "What is a Linked List Cycle",
          "Coding a function to detect a Cycle in a Linked List"
        ],
        "Coding Challenges with in-depth Explanations": [
          "Find the middle value",
          "Coding the implementation and solution to the problem.",
          "Explaining Pointer Manipulation (just to make sure that you understand it)",
          "Remove the Nth Node from the End of a Linked List.",
          "Here's the coding for removing the Nth Node from the end of a Linked List.",
          "Challenge: Detect if a Linked List is a Palindrome",
          "The Code Solution and Explanation: Detect if a Linked List is a Palindrome",
          "Coding the solution to: Detect if a Linked List is a Palindrome",
          "Merge Two Sorted Linked Lists",
          "Solution: Merge Two Sorted Linked Lists",
          "Coding the Solution: Merge Two Sorted Linked Lists"
        ]
      },
      "requirements": [
        "Basic familiarity with the Swift programming language, including variable declarations and data types.",
        "Understanding of Swift control flow, such as if, while, and for statements.",
        "Knowledge of functions in Swift, including how to define and call them.",
        "Understanding of classes and objects, especially how reference types behave in Swift.",
        "Experience working with optional values and optional chaining in Swift.",
        "Basic understanding of generics (e.g., ListNode<T>), or willingness to learn them early in the course.",
        "Comfort using Xcode or Swift Playgrounds for writing and testing Swift code.",
        "Ability to read and trace simple Swift programs, especially those involving loops and conditionals.",
        "Willingness to learn about memory references and pointers, as they relate to linked list behavior.",
        "A macOS environment with Xcode installed, or access to an alternative Swift compiler for practice."
      ],
      "description": "Tired of Linked List tutorials that talk at you instead of to you?\nMost courses on data structures are designed by incredibly smart, highly academic instructors—who unfortunately seem more interested in proving how much they know than helping you actually learn. They talk over your head, breeze past the hard parts, and leave you wondering if you're the problem. You're not.\nThis course is different.\nThis is a course built for developers who want clarity, not confusion.\nI’ve been where you are. I’ve watched those same videos that make linked lists sound way more complicated than they need to be. That’s why this course was created—for real people who want to really understand how linked lists work, in a way that makes sense.\nWe’ll go step-by-step, building each concept from scratch, writing Swift code you’ll actually use. You’ll learn how to:\nCreate and traverse a linked list\nInsert, delete, and reverse nodes\nUse pointer logic without needing a degree in computer science\nSolve interview-style problems using practical Swift solutions\nBy the end, you'll not only understand linked lists—you’ll be confident building them.\nThis course is for learners, not show-offs. If you’ve ever felt left behind by other tutorials, give this one a try. You deserve to learn in a space where your growth matters more than someone else’s credentials.",
      "target_audience": [
        "Beginner to intermediate Swift developers looking to strengthen their understanding of data structures.",
        "iOS developers preparing for technical interviews that include algorithm and data structure questions.",
        "Computer science students who want to practice linked list problems using Swift rather than lower-level languages.",
        "Self-taught programmers building a solid foundation in how data is stored and managed in memory.",
        "Developers transitioning from other languages to Swift who want to deepen their understanding of reference types and pointer-like behavior.",
        "Anyone studying for coding interviews at companies that test core algorithmic skills.",
        "Swift learners building their first portfolio of algorithms, such as reversals, merges, and search techniques.",
        "Educators and tutors seeking a clear and practical example of teaching data structures with a modern language.",
        "iOS bootcamp participants who need a deeper dive into algorithmic problem solving outside of UIKit or SwiftUI.",
        "Developers interested in writing more efficient Swift code, particularly by understanding the memory and performance implications of list-based structures."
      ]
    },
    {
      "title": "Learn To Build iOS Apps From Ground Up",
      "url": "https://www.udemy.com/course/learn-to-build-ios-apps-from-ground-up/",
      "bio": "The practical course to help you build your next iOS app in record time.",
      "objectives": [
        "Learn the ios app development from ground up",
        "Master the core concepts of ios app development",
        "Learn all the tools and features available in Xcode",
        "Build and deploy your first app"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Section Overview",
          "Downloading Xcode",
          "Creating a Project",
          "Project familiarization",
          "Storyboards",
          "Section summary"
        ],
        "Programming Basics": [
          "Section Overview",
          "Introduction to Programming",
          "Constants, Variables and Comments",
          "Arrays",
          "Loops",
          "Functions and If statements",
          "Section Summary"
        ],
        "Designing UI": [
          "Section Overview",
          "Storyboard constraints",
          "Connecting to the View Controller",
          "Tab bar and Navigation controllers",
          "Programmatic UI",
          "Section Summary"
        ],
        "Stack, Table, and Collection views": [
          "Section Overview",
          "Introduction to TableViews",
          "Custom TableView Cells",
          "Collection Views",
          "Stack Views",
          "Section Summary"
        ],
        "Firebase": [
          "Section Overview",
          "Observers",
          "Logging In",
          "How to create user accounts",
          "Batched writes",
          "Section Summary"
        ],
        "PROJECT": [
          "Section Overview",
          "News API",
          "Calling an API",
          "News Article class",
          "News Feed UI",
          "Article Page UI",
          "Section Summary"
        ],
        "News app continued!": [
          "Section Overview",
          "Storing user data",
          "Retrieving user data",
          "Automatic login",
          "Uploading comments",
          "Viewing comments",
          "Section Summary"
        ]
      },
      "requirements": [
        "Basic programming knowledge is sufficient to complete the course"
      ],
      "description": "Learn iOS programming by developing applications in real-time!\nWith over 2 million applications in the Apple Store with over hundreds of billions of downloads, the iOS industry has seen nothing but a constant uptrend. iOS apps are not only the most sophisticated but also easy to use, secure, & stable.\nMoreover, iOS development isn’t only limited to programmers, but as the recent data shows, there’s a significant surge in the number of students, writers, & creative professionals showing their interests in learning iOS development.\nConsidering the interest, and in order to help people learn iOS app development, here’s an exclusive course that will not only teach you iOS programming but will also help you to develop a complete iOS app from scratch.\nWhy Should You Learn iOS App Development?\n- iOS developers are increasing in demand\n- Average iOS developer salary is higher than others\n- Apple programming language is easier to learn & understand\nHow This Course Can Help You?\nIt is the perfect course for anyone who wants to learn iOS programming and iOS app development with Xcode. This iOS app development online course will first teach you all the basics including Xcode setup, creating a project, & storyboards. As the course unfolds, it will give you insights into iOS programming, UI designing, working on Firebase, and so much more.\nIn the end, this course also includes 2 in-depth sessions on iOS app development. You will develop a NEWS app that will include article class, Feed UI, Page UI, data storage, data retrieval, comments section, and so much more.\nMajor Topics Covered\n- Xcode\n- iOS programming\n- UI design, Programmatic UI\n- Table, collection, stack views\n- Working with Firebase\n- iOS app development\nStart upskilling today to learn the core of iOS app development in real-time!",
      "target_audience": [
        "Beginners who want to learn IOS programming will find this course very useful"
      ]
    },
    {
      "title": "Train ML Regression Models & Build Predictive Android Apps",
      "url": "https://www.udemy.com/course/android-linear-regression-house-price-prediction-app/",
      "bio": "Build Data-Driven Android Apps Using Machine Learning, Tensorflow, TensorFlow Lite, and Predictive Modeling in 2025",
      "objectives": [
        "Train Machine Learning models for Android Applications",
        "Analysing & using advance regression models in Android Applications",
        "Train a machine learning model and build a house price prediction Android Application",
        "Train a machine learning model and build a fuel price prediction Android Application",
        "Integrate Machine Learning models in Android Applications",
        "Use of Tensorflow Lite models in Android",
        "Train Any Prediction Model & use it in Android Applications",
        "Data Collection & Preprocessing for model training for Android App Development",
        "Basics of Machine Learning & Deep Learning for Android App Development",
        "Understand the working of artificial neural networks for model training",
        "Basic syntax of python programming language",
        "Use of data science libraries like numpy, pandas and matplotlib"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Machine Learning & Deep Learning Introduction": [
          "What is Machine Learning",
          "Supervised Machine Learning",
          "Regression and Classification",
          "Unsupervised Machine Learning & Reinforcement Learning",
          "Deep Learning and Neural Network Introduction",
          "Neural Network Example",
          "Basic Deep Learning Concepts"
        ],
        "Python: A simple overview": [
          "Google Colab",
          "Python Introduction & its datatypes",
          "Python Numbers",
          "Python Strings",
          "Lists in Python",
          "Dictionary and Tuples in Python",
          "Loops and Conditional Statements in Python",
          "File Handling In Python"
        ],
        "Data Science Libraries : Numpy, Pandas, Matplotlib": [
          "Numpy Library",
          "Numpy Functions and Generating Random Values",
          "Numpy Operators",
          "Matrix Multiplications and Sorting in Numpy",
          "Pandas library",
          "Loading CSV Files in Pandas",
          "Handling missing values in Pandas dataset",
          "Matplotlib library",
          "Images in Matplotlib"
        ],
        "Tensorflow and Tensorflow Lite": [
          "Tensorflow : Variables & Constants",
          "Tensorflow: Shapes & Ranks of Tensors",
          "Ragged Tesnors & Matrix Multiplication in Tensorflow",
          "Tensorflow Operations",
          "Random Values in Tensorflow",
          "Tensorflow Checkpoints: Save ML models",
          "Tensorflow Lite Introduction & Advantages"
        ],
        "Train a simple Regression Model and build Android Application": [
          "Training a simple regression model for mobile devices",
          "Model Testing and Conversion into Tensorflow Lite",
          "Tensorflow Lite Model Training Overview",
          "Analysing trained tflite model",
          "Creating a new Android Studio Project and GUI of Application",
          "Adding Tensorflow Lite Library In Android & Loading Tensorflow Lite Model",
          "Passing Input to Tensorflow Lite Model in Android and Getting Output",
          "Using basic tflite regression model in Android overview"
        ],
        "Fuel Efficiency Prediction: Training an advance regression model": [
          "Section Introduction",
          "Data Collection: Finding Fuel Efficiency Prediction Dataset",
          "Loading Dataset in Python for Model Training",
          "Handling missing Values in Fuel Efficiency Prediction Dataset",
          "Handling Categorical Columns in Dataset for Model Training",
          "Normalization Introduction",
          "Dataset Normalization",
          "Training Fuel Efficiency Prediction Model in Tensorflow",
          "Testing Trained Model and converting it to Tensorflow Lite Model",
          "Training Fuel Efficiency Prediction Model Overview"
        ],
        "Fuel Efficiency Prediction Android Application": [
          "Setting up Android Application for fuel efficiency prediction",
          "Starter Application Overview",
          "Loading Tensorflow Lite models in Android",
          "Data Normalization in Android",
          "Passing input to Tensorflow Lite model in Android and getting output",
          "Testing fuel efficiency prediction android application",
          "Fuel Efficiency Prediction Android App Overview"
        ],
        "Training a house price prediction Model": [
          "Section Introduction",
          "Getting dataset for training house price prediction model",
          "Loading dataset for training tflite model",
          "Training & Evaluating house price prediction model",
          "Retraining House Price Prediction Model"
        ],
        "Building House Price Prediction Android Application": [
          "Setting Up Android Studio Project",
          "What we have done so far",
          "Data Normalization in Android",
          "Passing Input to house price prediction model in Android",
          "Testing house price prediction Android Application"
        ]
      },
      "requirements": [
        "Android studio installed in your PC"
      ],
      "description": "Do you want to train different Machine Learning models and build smart Android applications then Welcome to this course.\n\n\nRegression is one of the fundamental techniques in Machine Learning which can be used for countless applications. Like you can train Machine Learning models using regression\nto predict the price of the house\nto predict the Fuel Efficiency of vehicles\nto recommend drug doses for medical conditions\nto recommend fertilizer in agriculture\nto suggest exercises for improvement in player performance\nand so on. So In this course, you will learn to train your custom machine-learning models for Android and build smart Android Applications.\n\n\nI'm Muhammad Hamza Asif, and in this course, we'll embark on a journey to combine the power of predictive modeling with the flexibility of Android app development. Whether you're a seasoned Android developer or new to the scene, this course has something valuable to offer you\n\n\nCourse Overview: We'll begin by exploring the basics of Machine Learning and its various types, and then delve into the world of deep learning and artificial neural networks, which will serve as the foundation for training our regression models in Android.\n\n\nThe Android-ML Fusion: After grasping the core concepts, we'll bridge the gap between Android and Machine Learning. To do this, we'll kickstart our journey with Python programming, a versatile language that will pave the way for our regression model training\n\n\nUnlocking Data's Power: To prepare and analyze our datasets effectively, we'll dive into essential data science libraries like NumPy, Pandas, and Matplotlib. These powerful tools will equip you to harness data's potential for accurate predictions.\n\n\nTensorflow for Mobile: Next, we'll immerse ourselves in the world of TensorFlow, a library that not only supports model training using neural networks but also caters to mobile devices, including Android\n\n\nCourse Highlights:\nTraining Your First Regression Model:\nHarness TensorFlow and Python to create a simple regression model\nConvert the model into TFLite format, making it compatible with Android\nLearn to integrate the regression model into Android apps\nFuel Efficiency Prediction:\nApply your knowledge to a real-world problem by predicting automobile fuel efficiency\nSeamlessly integrate the model into an Android app for an intuitive fuel efficiency prediction experience\nHouse Price Prediction in Android:\nMaster the art of training regression models on substantial datasets\nUtilize the trained model within your Android app to predict house prices confidently\n\n\nThe Android Advantage: By the end of this course, you'll be equipped to:\nTrain advanced regression models for accurate predictions\nSeamlessly integrate regression models into your Android applications\nAnalyze and use existing regression models effectively within the Android ecosystem\n\n\nWho Should Enroll:\nAspiring Android developers eager to add predictive modeling to their skillset\nEnthusiasts seeking to bridge the gap between Machine Learning and mobile app development\nData aficionados interested in harnessing the potential of data for real-world applications\n\n\nStep into the World of Android and Predictive Modeling: Join us on this exciting journey and unlock the potential of Android and Linear Regression. By the end of the course, you'll be ready to develop Android applications that not only look great but also make informed, data-driven decisions.\nEnroll now and embrace the fusion of Android and predictive modeling!",
      "target_audience": [
        "Beginner Android Developer who want to build Machine Learning based Android Applications",
        "Aspiring Android developers eager to add predictive modeling to their skillset",
        "Enthusiasts seeking to bridge the gap between Machine Learning and mobile app development.",
        "Machine Learning Engineers looking to build real world applications with Machine Learning Models"
      ]
    },
    {
      "title": "Android Development Android App Development from Scratch",
      "url": "https://www.udemy.com/course/app-development-in-android-studio-41/",
      "bio": "Learn java, android, android studio, android development and android app development with Android, become a developer",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform.",
        "Learn Android App Development step by step",
        "Learn Java",
        "We continually update the course, so you’ll learn the very latest as Android Oreo ( Android 8 )",
        "Android 13",
        "No programming knowledge required!"
      ],
      "course_content": {
        "How to download and install android studio": [
          "How to download and install android studio"
        ],
        "How to Install Java JDK on Windows ( with JAVA_HOME )": [
          "How to Install Java JDK on Windows ( with JAVA_HOME )"
        ],
        "How to create new android studio project": [
          "How to create new android studio project"
        ],
        "Hello World App_ How to make hello world android app": [
          "Hello World App_ How to make hello world android app"
        ],
        "Create user interface with java _How to develop interface of android application": [
          "Create user interface with java _How to develop interface of android application"
        ],
        "Top Tips for Android studio _Important things to learn about android studio": [
          "Top Tips for Android studio _Important things to learn about android studio"
        ],
        "Create Android Virtual Device Emulator for Android Studio": [
          "8.Create Android Virtual Device Emulator for Android Studio"
        ],
        "9.Overview_ How an Android Application works": [
          "9.Overview_ How an Android Application works"
        ],
        "Activity Lifecycle_ What is android Activity lifecycle": [
          "Activity Lifecycle_ What is android Activity lifecycle"
        ],
        "Example of Understanding activity Lifecycle changing": [
          "Example of Understanding activity Lifecycle changing"
        ]
      },
      "requirements": [
        "No programming knowledge required!",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Learn Android App Development step by step",
        "Android is the most used operating system on the planet"
      ],
      "description": "Hi there,\nWelcome to Android Development: Android App Development from Scratch course.\nLearn java, android, android studio, android development and android app development with Android 13, become a developer\n\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nDo you want to improve your career options by learning android?\nDo you want to learn android app development from Scratch?\nDo you want to learn android development from Scratch?\nDo you want to be an android studio master?\nDo you want to build your first app?\nIf your answer is “yes” to these questions and if you want more, you are at the right place!\nAndroid is the most used operating system on the planet. In fact, it’s almost omnipresent in the mobile ecosystem and Android 13 has become the most popular Android version.\n\n\nYou will learn android development step-by-step with hands-on demonstrations. In this course, we will learn to build and publish 2 major apps. During the lectures, we will also be practicing with more than 10 examples.\nFirst of all, I will teach the java programming language that we will use while developing an android application. Java programming is a very old and widely used language. Developing an android application with java will make your job much easier. Thus, you will be able to easily develop your Android apps.\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download.\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer. If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++. Java and Kotlin are popular with a number of organizations that build their app natively. C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work. Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart. If you are working with React Native, you will most likely also need JavaScript programming knowledge.\nIs Android Development a good career?\nWith over 2.5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various organizations across a broad range of industries. When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++. You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native. Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded.\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android. If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals. You should note that in some cases, employers may seek out Android developers that have Java programming skills. For example, if you plan on joining an organization that already has an Android app, they may already be using Java. If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin. Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill.\n\nI really like the approach of this course about the Android app. It first teaches you Java which is highly important for designing apps in Android. Next, the instructor focuses on the Android SDK to teach you how to build beautiful applications for smartphones. As the course title indicates, it is the complete guide to learn android application development.\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market. As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand.\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS). Because Android is an open-source project, developers have easy access to the Android software development kit (SDK). Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps. The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an .apk suffix. One APK file contains all Android app contents used by devices to install your app. When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download for android game development.\nWhat’s important\nThere’re a lot of people out there teaching Android 8 who are not developers. We’re developers with many years’ fields experience with the Android platform. So, you will learn from an expert who has great knowledge of Android. This course is expertly designed to teach everyone from complete beginners, right through to professionals as a refresher.\nMy \"Android Development: Android App Development From Scratch\" course will take you from beginner to advanced level.\nIn this course you will learn;\nJava Environment Setup\nJava Development Environment\nJava Syntax\nJava Object Oriented Concept\nJava Strings\nAndroid Environment Setup - Download, install and configure the necessary software\nCreating a New Project\nAndroid Studio\nAndroid Components\nComponents and Life Cycles\nPublishing Your App on Google Play and more\nandroid app development\nandroid studio\nandroid studio java\nandroid development\nandroid\nandroid app development from scratch\nandroid app development java\nbecome an android developer from scratch\napp development\nandroid app development using java\napp development\nandroid app development using java\nInstalling\nWorking\nCreate UI (User Interface) for apps\nVirtual device\nActivity lifecycle\nAdding Widgets\nGrid layout\nEvent handling\nGesture\nFragment\nWorkout advisor\nOverflow menu\nList view\nSQLite\nDatabase\nPlaying audio and video\nCapturing photos\nDebugging and running\nShared preference\nAdding launcher icon\nCreate APK file\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching.\nOAK Academy based in London is an online education company. OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons. OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise.\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate. New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow the latest trends.\nVideo and Audio Production Quality\nAll our contents are created/produced as high-quality video/audio to provide you the best learning experience.\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions.\nSee you in the course!",
      "target_audience": [
        "A total beginner, with a curious mind and wants to be an app developer",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who has no previous coding experience but wants to become expert Anyone who wants to learn Android 13 ( Android Tiramisu )",
        "Anyone who wants to become a computer programmer like android kotlin"
      ]
    },
    {
      "title": "How to Make an iPhone App - Use a Pre-Existing Slot Machine",
      "url": "https://www.udemy.com/course/iphoneapps/",
      "bio": "Learn the complete process of reskinning an iOS Slot Machine app using Xcode, from the first test to final submission.",
      "objectives": [
        "By the end of the course, you will be able to take a source code and edit it in Xcode to reskin it and publish it into the App Store",
        "Learn how to create certificates in the iOS development center",
        "Learn how to create provisioning profiles so you can test your app",
        "Learn how to create an app in the iOS development center and iTunes Connect",
        "Learn how to register your devices to test the app on, create test accounts, and test your first app in Xcode",
        "Learn the basics of Xcode and what you need to change in a source code to reskin it",
        "Learn how to set up In App Purchases",
        "Learn how to set up ads to monetize your app",
        "Learn how to submit your app to the App Store for review"
      ],
      "course_content": {
        "Welcome!": [
          "Introduction"
        ],
        "Steps for Brand New iOS Developer Accounts": [
          "Creating Certificates",
          "Adding Test Devices and Test Accounts"
        ],
        "Setting Up a New App": [
          "Prepare the App for Testing: App ID, iTunes Connect, and 2 Provisioning Profiles",
          "Testing the App"
        ],
        "Reskin It!": [
          "Change the Images",
          "Change the Theme and Content",
          "In-App Purchases",
          "Ads"
        ],
        "Submit It!": [
          "Submitting an App to the App Store for Review"
        ]
      },
      "requirements": [
        "Mac with Xcode (Xcode can be downloaded for free in the App Store)",
        "iOS Developer account ($99/year through Apple)",
        "iTunes Connect account (free)",
        "Highly recommended: a source code to work with, if not the exact one used in the course"
      ],
      "description": "Like this course, but can't afford it? Try our Bingo course for free.\nThis process has generated us thousands of dollars in revenue very quickly. Slot machine apps are a great source of revenue, and this course will show you exactly what you need to do to reskin a specific source code in Xcode so that you can create your own Slot Machine app for iPhone, iPad, or iPod Touch very quickly and inexpensively to start making money almost immediately.\nYou will see every single edit necessary to launch an app, and in less than 2 hours. This includes the very first steps you take after you get your hands on a source code (learning how to test the app) to editing the app in Xcode, and all the way to submitting the app to the App Store for review. The tutorial uses a REAL source code example and completes every single step necessary to reskin the app from start to finish, and is structured in that way. While this uses a specific code (that you can purchase), the course is still very useful for reskinning any app. It will give you the knowledge necessary to understand documents that come with source codes that you can purchase at very low prices.\nThis is perfect for any beginner that is interested in entering the world of app development, but does not want to spend a ton of money or time creating an app from scratch and hiring developers. Instead, you can focus on monetization through in-app purchases and ad networks, which, by the way, is part of this course. You can literally reskin one source code 100 times using this tutorial to generate large profits incredibly quickly.",
      "target_audience": [
        "Beginners interested in creating a profitable iOS app",
        "\"Do It Yourself\"-types interested in low cost and fast app development",
        "Little to no experience in App Development"
      ]
    },
    {
      "title": "The 2025 Exhaustive Android App Development Course with Java",
      "url": "https://www.udemy.com/course/the-2022-exhaustive-android-app-development-course-with-java/",
      "bio": "This is the 2025 Exhaustive Android App Development Course! Check out the description for more details below.",
      "objectives": [
        "Gain an understanding of Java, and how to apply it to Android Development",
        "Acquire a strong foundation of Android Studio, and how it works",
        "Create basic android apps using widgets and RecyclerView",
        "Design Android Apps to look appealing for the user",
        "Develop complex apps by applying firebase & other libraries",
        "Learn to publish your own app to the Google Play Store"
      ],
      "course_content": {
        "Introduction": [
          "Introduction-Thank you!"
        ],
        "Setting Up Android Studio": [
          "Downloading Android Studio On Mac",
          "Downloading Android Studio On Windows"
        ],
        "Java Fundamentals": [
          "ArrayLists",
          "For & While Loops",
          "Logical Operators In Java",
          "Practical",
          "Objects & Classes",
          "Java Fundamentals"
        ],
        "Introduction To Android Studio": [
          "Different Files",
          "Views",
          "Layouts",
          "Implementing Java",
          "Android Studio Quiz"
        ],
        "Calculator App": [
          "Designing the UI",
          "Implementing the code"
        ],
        "Introduction To Firebase": [
          "What Is Firebase?",
          "Applying it to Android Studio"
        ],
        "Social Media App": [
          "Designing the sign up UI",
          "Log in screen & setting up the app",
          "Functionality of log in/sign up",
          "Creating the SocialMedia main page",
          "Logging out & Adding new posts",
          "Final Touches",
          "Adding Timestamps to Posts"
        ],
        "How to publish your own app": [
          "The Publishing Process",
          "Successfully Deploying Your Android App"
        ],
        "Additional Important Skills": [
          "News API App Introduction",
          "News API Recycler View",
          "API Fetching",
          "Notification Channels",
          "Notification Scheduling"
        ]
      },
      "requirements": [
        "No prior programming experience or familiarity with Android App Development required."
      ],
      "description": "An exhaustive course on android app development w/Java containing:\nBasic Java Fundamentals required for learning Android App Development\nA complete walkthrough of Android Studio\nDevelop simple android apps with in-built features of Android Studio\nWorking with Firebase and integrating it into your Android Apps\nDevelop more complex android apps using different API’s & libraries\nCreating apps which look appealing to the user\nPublishing your own app on the Google Play Store\nFirst off, we're going to dive into Java. We'll learn about ArrayLists, loops, logical operators, objects/classes, and also do a quick quiz to test your understanding of the content.\nNext, we're going to break-down Android Studio. The platform may look intimidating at first, but once we go through each part of it, step-by-step, it becomes a lot easier to understand. We'll look at what each file does/how to use it, views, layouts, and implementing java(from the previous section) into Android App Development.\nIt's time for our first app--the calculator app! We'll be developing a complete calculator, with functions like dividing, multiplying, subtracting, and adding. We'll get our first glance at designing the UI in Android Apps--which is quite fun!\nBefore we develop the social media app--a complicated, intricate app--we'll need to gain a foundation of Firebase. Hence, we'll be breaking down what exactly Firebase is, and how we can use it to our advantage in Android App Development.\nFinally, we'll be developing our social media app. Comprising of several, broken-down lectures, it will allow you to understand how complex apps are developed. We'll also be talking about how to publish your own app to the Google Play Store, so you can start applying your new knowledge right away!",
      "target_audience": [
        "Beginner programmers with little, or no familiarity in programming.",
        "Prior developers curious to expand their knowledge and learn about Android App Development"
      ]
    },
    {
      "title": "Master Android Studio in 2 hours - The IDE from Google",
      "url": "https://www.udemy.com/course/introduction-to-android-studio/",
      "bio": "Get up to speed with the main Android development IDE by Google, Android Studio.",
      "objectives": [],
      "course_content": {
        "Course Introduction": [
          "What is Android Studio ?",
          "Installing Java JDK on Windows",
          "Installing Java JDK on Mac OS X",
          "Downloading and installing Android Studio",
          "Updating Android Studio",
          "Installing Additional Components"
        ],
        "Android Studio IDE": [
          "Creating and Running your first App",
          "Navigating the Project Panel",
          "Customizing the User Interface",
          "Working with emulators and real devices",
          "Importing Non-Android Studio projects",
          "Menus and toolbars",
          "Searching for files and content",
          "Other Android Studio tools and Windows",
          "Playing with Windows",
          "Gradle build process and dependecies",
          "Installing Git on Windows",
          "Create a GitHub account and repository",
          "Pushing the project on GitHub",
          "Restoring a project from GitHub",
          "Creating and refactoring new classes and packages",
          "Debugging the application",
          "Building the release version of your App",
          "Where to go from here?"
        ],
        "What's New in Android Studio": [
          "What's new in Android Studio 2.2 - Updated 11/2016",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Android development"
      ],
      "description": "*** Course updated on 11/15/2016 with lecture 26. What's new in Android Studio 2.2 ***\nGet up to speed with the latest Android IDE developed by Google. We are covering tips, tricks, customization of the UI, main functionality and lot of other things.\n\nThis course will introduce you to the Android Studio world and Android programming in general. Want to become an Android developer? Start by learning the tools of the trade in order to achieve your goal faster.\n\nAlready an Android developer? Learn the No.1 Android IDE today in order to gain new skills and develop Android applications faster. By taking this course you will be able to develop Android applications more efficiently while using the main Android IDE.\nForget about Eclipse, Android Studio is the new Android IDE in town! Beginner to advanced user topics will be covered starting with the main UI components to the Version Control Systems like Git.\nStart by creating your first Android application with Android Studio. At the end of the course you will be able to generate the release version of your app in order to publish it on the Google Play Store.\nStop wasting time! Learn the nitty-gritty of Android Studio today!",
      "target_audience": [
        "Anyone willing to learn the new Android IDE from Google",
        "New and seasoned Android developers will find useful information",
        "Just starting with Android development? Enroll the course NOW in order to make your development experience more efficient by using the right tools",
        "Eclipse user? We've got you covered! Android Studio is the new Android IDE in town and is here to stay!"
      ]
    },
    {
      "title": "eSim Technology – Complete beginner's guide",
      "url": "https://www.udemy.com/course/introduction-to-esim-technology/",
      "bio": "eSIM Technology + RSP Remote SIM Provisioning Ecosystem + Multi Profile in IoT + GSMA Standards + M2M",
      "objectives": [
        "eSIM Technology Basics - Foundational Understanding and Overview",
        "eSIM Remote Provisioning Techniques - Efficient Methods and Strategies",
        "eSIM Multi-Profile Management in IoT - Expert Control and Optimization",
        "eSIM GSMA Standards Overview - High-Detailed Knowledge and Compliance",
        "eSIM Wireless Technology Insights - Comprehensive Solutions and Applications",
        "eSIM IoT Ecosystems Applications - Practical Skills and Implementation",
        "eSIM Smart Cities Innovations - Cutting-Edge Use Cases and Trends",
        "eSIM Consumer Communication Systems - User-Focused Expertise and Design",
        "eSIM M2M Integration Strategies - Advanced Approaches and Connectivity",
        "Security Techniques for eSIM - Robust Protection and Safeguards"
      ],
      "course_content": {
        "eSIM Basics and Historical Context": [
          "eSIM Introduction Agenda - Course Outline and Table of Contents",
          "eSIM Evolution History - Transition from Physical SIMs",
          "eSIM Basics Quiz - Multi-Choice Assessment"
        ],
        "eSIM Technical Foundations": [
          "eSIM Subscriber Profiles - Information Storage Details",
          "eSIM Multi-Profile Use Cases - Practical Applications",
          "Multi Choice Quiz on eSIM Concepts"
        ],
        "eSIM - Remote SIM Provisioning Ecosystem": [
          "eSIM GSMA References - RSP Models Overview",
          "eSIM M2M Architecture - RSP Eco System Design",
          "eSIM Consumer Architecture - RSP Eco System Framework",
          "eSIM IoT Architecture - RSP Eco System Structure",
          "eSIM Provisioning Section Assessment"
        ],
        "eSIM Practical Applications and Ecosystems": [
          "eSIM M2M Applications - RSP Eco System Use Cases",
          "eSIM Consumer Applications - RSP Eco System Examples",
          "eSIM IoT Applications - RSP Eco System Implementations",
          "eSIM Smart Cities Example - Real-Time Parking System",
          "eSIM Applications - Quiz Assessment"
        ],
        "Security and Future of eSIM": [
          "eSIM Security Protocols - Privacy and Provisioning",
          "eSIM Technology Pros - Advantages and Challenges",
          "eSIM Summary Insights - Conclusions and Overview",
          "eSIM Course Quiz - Comprehensive Assessment"
        ]
      },
      "requirements": [
        "Interest in eSIM Applications",
        "Basic Wireless Technology Knowledge"
      ],
      "description": "Note: This isn’t just a basic eSIM course; it dives deep into multi-profile management, practical applications in IoT and smart cities, and delivers up-to-date knowledge based on GSMA standards, preparing you for real-world eSIM implementation across industries.\n· What is eSIM technology and how does it differ from traditional SIM cards?\n· How does remote SIM provisioning work to connect devices easily?\n· Why is eSIM important for everyday devices and IoT projects?\nThis course equips you with hands-on skills in eSIM technology, from understanding remote SIM provisioning to exploring its role in consumer devices and IoT ecosystems. You’ll learn practical strategies for M2M integration, security protocols, and innovative applications. It’s designed to bridge theory and real-world use cases effectively.\nHeadlines:\neSIM Technology Basics - Foundational Understanding and Overview\neSIM Remote Provisioning - Efficient Methods and Strategies\neSIM Multi-Profile Management - Expert Control and Optimization in IoT\neSIM GSMA Standards - High-Detailed Knowledge and Compliance\neSIM Wireless Technology - Comprehensive Solutions and Applications\neSIM IoT Ecosystems - Practical Skills and Implementation\neSIM Smart Cities - Cutting-Edge Use Cases and Trends\neSIM Consumer Systems - User-Focused Expertise and Design\neSIM M2M Integration - Advanced Approaches and Connectivity\neSIM Security Techniques - Robust Protection and Safeguards\n\n\nEnroll in this course right now and take your first step toward mastering eSIM! If you have any questions during the course, feel free to ask—I’m here for 24/7 support to help you become a pro in this field quickly",
      "target_audience": [
        "Telecom Professionals",
        "Network Engineers",
        "IoT Device Specialist",
        "Tech Enthusiasts",
        "Students in Telecom",
        "Industry Leaders",
        "Business Strategists",
        "M2M Developers",
        "Smart City Planners",
        "Security Analysts",
        "Wireless Tech Experts",
        "GSMA Standards Specialists",
        "Consumer Device Designers",
        "RSP System Engineers",
        "IT Project Managers",
        "Innovation Consultants",
        "4G/5G Network Engineers",
        "4G/5G Service Designers",
        "4G/5G Connectivity Specialists",
        "4G/5G Infrastructure Analysts"
      ]
    },
    {
      "title": "Build Mobile App Like Uber with Flutter + Source Code (2025)",
      "url": "https://www.udemy.com/course/uberlike-app-development-product-to-get-you-at-speed/",
      "bio": "Learn to Build a Complete Ride-Hailing App: Build & Launch Your Own Uber/InDrive Clone with Full Source Code!",
      "objectives": [
        "Learn the core components of apps like Uber and InDrive.",
        "Install and configure necessary tools for mobile app development.",
        "Implement login and registration features using Firebase or a backend service.",
        "Create an intuitive and professional app layout.",
        "Implement Google Maps for real-time tracking.",
        "Build a request system where riders can find nearby drivers.",
        "Set up dynamic pricing and integrate a payment gateway.",
        "Enable in-app messaging for better communication.",
        "Use Firebase, MySQL, or MongoDB to store and manage user data.",
        "Package and publish your app for public use.",
        "Receive the complete project code and learn how to modify it."
      ],
      "course_content": {
        "App Development": [
          "Demo of the App",
          "Download Source code for Passenger App",
          "Download Source code for Driver App",
          "Ful Source Code (Admin Panel + Driver + Passenger) - Optional",
          "Loading the source code to Android Studio",
          "Connecting Mobile App to firebase",
          "Adding firebase options to our App",
          "Enable authentication and database for our app",
          "Adding Google Map SDK",
          "Enable Geocoding API",
          "Working on DropOff Location",
          "Connecting firebase to Driver's App",
          "Enabling Firebase Messaging for our App",
          "Get Direction Details from API",
          "How to calculate trip amount",
          "Implementing Access Token for Passenger App",
          "Push Notification for Passenger App",
          "Implementing needed changes on Trips Page and other pages",
          "Wrapping up with implementation",
          "Full Source Code (Admin Panel + Driver + Passenger) with Chat System - Not free",
          "New Update Admin Panel - Not Free"
        ]
      },
      "requirements": [
        "Basic knowledge of programming (Java, Kotlin, Flutter, or React Native is a plus).",
        "A computer (Windows or macOS) with an internet connection.",
        "Familiarity with Firebase, MySQL, or any backend service is helpful but not required.",
        "A Google Developer account (optional, for app deployment).",
        "Willingness to learn and build a real-world mobile app."
      ],
      "description": "Build a Mobile App Like Uber/InDrive with Flutter + Full Source Code!\nDo you want to build your own ridesharing app like Uber or InDrive?  This hands-on course will teach you how to develop a fully functional ride-hailing app like Uber or Indrive using Flutter, a powerful cross-platform framework. This course is for people with some knowledge of mobile app developmet and want leverage of the provided source code to learn and customize a mobile app like Uber or Indrive for your own project or business!\nWhat You’ll Learn:\n- How to set up Flutter & build a ridesharing app like Uber or Indrive\n- User authentication (sign-up, login, and profile management)\n- Real-time location tracking using Google Maps API\n- Driver & rider matching system for seamless ride requests\n- Ride fare calculation & payment integration\n- In-app chat system for communication between drivers and riders\n- Backend setup using Firebase or other database services\n- App deployment to the Google Play Store\n- How to customize the source code to fit your own needs\n\n\nWhy Take This Course?\nGet Full Source Code – Save time by using a pre-built, production-ready project\nLearn by Doing – Hands-on lessons with real-world implementation\nCustomize & Scale – Modify the app to fit your business or startup idea\nNo Coding Limits – Flutter allows you to build for both Android & iOS\nBy the end of this course, you’ll not only understand how ridesharing apps work, but you’ll also have your own fully functional app ready for launch!\nEnroll now and start building your Uber/InDrive clone today!",
      "target_audience": [
        "Aspiring mobile app developers who want to build a ridesharing app like Uber or InDrive.",
        "Entrepreneurs & startup founders looking to create their own ride-hailing service.",
        "Freelancers & software engineers who want to expand their skills and offer ridesharing app development services.",
        "Anyone interested in getting a fully functional ridesharing app with source code for customization or business purposes."
      ]
    },
    {
      "title": "Swift Charts for iOS Developers: Build Better Data-Driven UI",
      "url": "https://www.udemy.com/course/swift-charts-for-ios-developers-build-better-data-driven-ui/",
      "bio": "Master Swift Charts to Build Powerful, Data-Driven Interfaces in Your iOS Apps",
      "objectives": [
        "Build interactive and visually compelling charts using the Swift Charts framework in SwiftUI.",
        "Visualize real-time or static data using LineMark, BarMark, AreaMark, PointMark, and more.",
        "Customize axes, labels, gridlines, and chart styles for maximum clarity and aesthetics.",
        "Integrate Swift Charts into real-world iOS apps with dynamic data and view models.",
        "Use RuleMark and RangeMark for showing thresholds, targets, or value spans.",
        "Compare multiple data series in a single chart using grouping and overlays.",
        "Display chart annotations, tooltips, and formatted legends for better context."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to SwiftUI Charts",
          "Prerequisites and Tools",
          "All Major Chart Types Available in Swift Charts"
        ],
        "Coding the Pie Chart Example": [
          "How to Extrapolate a Swift Model from a JSON File (Step-by-Step)",
          "Understanding JSON Syntax to Build Swift Models in Swift",
          "Record Segment Explanation",
          "The Boxer's Record App - Pie Charts and Bar Charts",
          "Swift Chart - Implementing the Service and Protocol",
          "Swift Chart - Implementing the View Model",
          "Swift Chart - Implementing the View",
          "Swift Chart - Coding the Chart Explanation"
        ],
        "Live Updating to Charts": [
          "SwiftUI App: Live-Updating Boxer Visualization",
          "A Walk-Through of the LiveUpdateCharts Application",
          "Coding the Live-Update Charts Mock Networking Service",
          "Coding the View Model for the Live-Update Charts Application",
          "Coding the View for the Live-Update Charts Application"
        ],
        "Other Technical Aspects of Swift Charts": [
          "Swift Charts: Using RuleMark and RangeMark",
          "Swift Charts: Comparing Multiple Data Series Using Grouping and Overlays",
          "Swift Charts: Displaying Annotations, Tooltips, and Formatted Legends for Better"
        ]
      },
      "requirements": [
        "A Mac running macOS capable of installing the latest Xcode.",
        "Xcode 16 (or the latest stable release) installed.",
        "Swift 5.10 or later.",
        "Basic familiarity with Swift syntax.",
        "Basic experience building views in SwiftUI.",
        "An Apple Developer account (free tier is sufficient).",
        "A willingness to explore modern, data-driven UI practices.",
        "Familiarity with MVVM architecture (helpful but not required).",
        "A simulator or physical device to run and test apps.",
        "Enthusiasm to learn new tools in Apple’s evolving development ecosystem."
      ],
      "description": "In today’s data-driven world, creating visually engaging and informative interfaces is essential for product teams, analysts, and educators working in mobile environments. This course, “Swift Charts for iOS Developers: Build Better Data-Driven UI,” is designed to equip you with the tools and skills needed to transform complex datasets into clear, actionable visualizations using Swift Charts and SwiftUI.\nWhether you're building dashboards, monitoring tools, or educational apps, you’ll learn to harness Swift Charts to produce compelling visuals such as bar charts, line graphs, scatter plots, area charts, and more. With a practical, example-based approach, you'll develop proficiency in configuring charts, customizing axes and annotations, and working with dynamic data.\nWe’ll be using the most up-to-date version of Swift and Xcode, so you can stay current with Apple's rapidly evolving frameworks. You’ll leave this course confident in your ability to craft intuitive, modern data interfaces that integrate seamlessly into any iOS app.\nBy the end of the course, you'll be able to:\nDesign and implement various types of Swift Charts.\nIntegrate live or static data into your UI effectively.\nCustomize visuals for clarity, accessibility, and performance.\nApply these skills to real-world apps across education, business, and analytics.\nThis course is ideal for developers seeking to bridge the gap between raw data and polished user experience using Apple’s newest visualization tools.",
      "target_audience": [
        "iOS developers looking to enhance their apps with advanced data visualization techniques.",
        "SwiftUI developers interested in integrating the Swift Charts framework into real-world projects.",
        "Mobile engineers building dashboards, analytics tools, or admin interfaces.",
        "Designers or developers who want to turn data into compelling and readable visualizations.",
        "Developers curious about combining SwiftUI and data-driven UI techniques.",
        "Intermediate-level Swift developers ready to level up with new frameworks from Apple.",
        "Anyone who wants to stay up to date with the latest additions to SwiftUI and iOS development.",
        "Educators, analysts, or product teams working with mobile data presentation."
      ]
    },
    {
      "title": "Flutter Mastery 2024:Premium Interview Prep & Practice Tests",
      "url": "https://www.udemy.com/course/flutter-mastery-2024premium-interview-prep-practice-tests/",
      "bio": "Master Flutter Development, Ace Interviews, and Excel in 2024 with Premium Content, Practice Tests for Interviews.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Embark on a comprehensive journey through Flutter development with our premium course, designed to equip you with the skills needed to excel in interviews and real-world projects in 2024 and beyond.\nIn the Flutter Fundamentals section, you'll delve into the core concepts of Flutter, covering Widget Basics, State Management, Flutter Layouts, and Responsive Design. These foundational skills will provide you with a solid understanding of Flutter's architecture and how to create stunning user interfaces.\nAdvance your knowledge further with the Advanced Flutter Concepts section, where you'll explore advanced topics such as Animations, Custom Painters, Flutter Packages, and Flutter Plugins. Learn how to add dynamic elements and enhance the functionality of your Flutter applications.\nMaster the Dart Programming Language in the dedicated section, where you'll learn Dart Syntax and Features, Asynchronous Programming, Error Handling, and how to utilize Dart Libraries effectively within your Flutter projects.\nPut your skills into practice with Practical Projects, where you'll build UI Applications, integrate APIs, establish Database Connectivity, and even delve into Full-Stack Flutter Projects to create robust, end-to-end solutions.\nPrepare yourself for interviews with our Interview Preparation section, which covers Common Flutter Interview Questions, Problem Solving in Flutter, Best Practices, and Patterns, as well as Debugging and Performance Optimization techniques.\nLastly, hone your skills with Practice Tests and Real-world Challenges, including Mock Interviews, Coding Challenges, Project Assignments, and Industry-Relevant Problem Solving tasks. This hands-on approach will solidify your understanding and prepare you for success in the fast-paced world of Flutter development.",
      "target_audience": [
        "Individuals eager to master Flutter for mobile app development.",
        "Developers interested in creating cross-platform applications with Flutter.",
        "Those gearing up for Flutter-specific job interviews in 2024 and beyond.",
        "Developers seeking to broaden their skill set with advanced Flutter concepts.",
        "Professionals already in mobile app development looking to transition to Flutter.",
        "Students and recent graduates pursuing a career in mobile app development.",
        "Individuals passionate about coding, UI/UX, and building scalable mobile applications."
      ]
    },
    {
      "title": "Android application, practical and Project-oriented",
      "url": "https://www.udemy.com/course/android-application-practical-and-project-oriented/",
      "bio": "How to make and develop an Android application, practical and Project-oriented with the use of Java and Android Studio",
      "objectives": [
        "this tutorial will help you how to launch a quality and easy a Android studio application.",
        "will get just about 1.30 hours from your time with fair price",
        "with teach you to find a way to launch the app without risk",
        "By making a chart you can manage and understand the project"
      ],
      "course_content": {
        "Application plan": [
          "Application plan"
        ],
        "how to start makeing application": [
          "Makeing application"
        ],
        "Application UI": [
          "How to use figma for make UI"
        ],
        "Implement UI in application": [
          "Implement UI"
        ],
        "Full Tutorial": [
          "Start coding full tutorial"
        ]
      },
      "requirements": [
        "Android studio",
        "java",
        "rest full api",
        "chat gpt"
      ],
      "description": "How to make and develop an Android application, practical and Project-oriented with the use of Java and Android Studio:\nShort video\nPractical\nUse ChatGPT\nAndroid Studio\nJava as a language\nFull REST API\nPostman\nFigma\nIn this comprehensive Udemy course, you will learn how to create and develop an Android application using a project-oriented approach. The course includes short, practical videos to help you grasp key concepts quickly and efficiently. By leveraging ChatGPT for assistance and guidance, you'll be able to streamline your development process. The course focuses on using Android Studio as the primary development environment and Java as the programming language.\nYou'll also learn how to integrate full REST APIs into your application, with hands-on practice using Postman for testing and debugging. Additionally, you'll explore UI/UX design principles using Figma, ensuring your application is not only functional but also user-friendly and visually appealing.\nThroughout the course, we'll emphasize practical, real-world examples and projects to help you understand the development process from start to finish. By the end of this tutorial, you'll be equipped with the knowledge and skills needed to develop and launch your Android application quickly and efficiently. Whether you're a beginner or an experienced developer, this course offers valuable insights and techniques to enhance your Android app development journey.",
      "target_audience": [
        "Beginner java and mobile developers curious about data science"
      ]
    },
    {
      "title": "Build a SaaS Mobile App with React Native & Expo - 2025",
      "url": "https://www.udemy.com/course/build-a-saas-mobile-app-with-react-native-expo-2025/",
      "bio": "Build a Professional SaaS Mobile App from Scratch with React Native: Expo, Prisma, Clerk, Stripe, Cloudinary, and More!",
      "objectives": [
        "Learn how to build a fully functional SaaS mobile application using React Native and Expo, from project setup to deployment.",
        "Understand how to integrate authentication (Clerk) and subscription-based payments (Stripe) to manage user access and monetization.",
        "Learn how to work with Prisma and integrate AI-based background removal APIs into a React Native Expo application to process uploaded images.",
        "Explore best practices for structuring your SaaS app, optimizing Expo API calls, managing state effectively, and ensuring smooth performance."
      ],
      "course_content": {
        "Preview of the course": [
          "Why you need to take this course?",
          "Intro and Demo of the app",
          "Quick Note"
        ],
        "SaaS App Development": [
          "Github Repository (Source Code)",
          "Setup Project",
          "VS Code Extensions",
          "Testing our App on LD Player",
          "Configuring our App",
          "Installing NativeWind",
          "Working on tailwind.config.js",
          "Adding Professional Folder Structure for our Project",
          "Initializing Clerk Authentication",
          "Developing On-Boarding Screen",
          "Developing Custom Components",
          "Developing Signin and Signup Screens",
          "Fixed Error of White Screen - Clerk Authentication",
          "Completing Signin and Signup Screens",
          "Testing Expo API Endpoints",
          "Initializing Prisma ORM with Expo API routes to save the user on our Database",
          "Custom Component for Errors and Empty States and Developing Database Schema",
          "Developing Dashboard Screen",
          "Developing Create Screen",
          "Integrating Backend for Create Screen",
          "Developing Create Screen UI",
          "Integrating Cloudinary to store user's generations",
          "Fixing Cloudinary Error",
          "Dashboard Screen - Subscribe now button",
          "Developing Subscribe Screen",
          "Showing Subscribe Screen to New Users",
          "Integrating Logic of the App",
          "Initializing Stripe Payment Gateway",
          "Fixing Stripe Error",
          "Working with Stripe - Updated",
          "Developing Custom Loading State",
          "Developing Generations Card in Dashboard Screen",
          "Adding Signout Button in Header",
          "Updating the Create Screen"
        ]
      },
      "requirements": [
        "Computer with internet",
        "Basic knowledge of React native and Expo is enough",
        "Basic Knowledge of working with Prisma ORM"
      ],
      "description": "In this course, you will learn how to build a professional SaaS mobile application from scratch using React Native and Expo. From project setup to final deployment, you’ll gain hands-on experience in creating a fully functional, scalable, and monetizable SaaS mobile app using modern tools and best practices.\nYou will integrate essential services like Clerk for authentication, Stripe for payment processing, Prisma for database management, and Cloudinary for image handling. Additionally, you’ll explore AI-based background removal APIs to enhance image uploads with automated processing, making your app more dynamic and user-friendly.\nThis course will guide you through state management, API optimization, and performance enhancements to ensure your app runs smoothly. You will also learn how to implement secure authentication flows, handle subscriptions and payments, manage databases efficiently, and structure your code for scalability and maintainability.\nBy the end of this course, you will have the expertise to build, optimize, and deploy a SaaS mobile app that can be monetized through a subscription-based model. Whether you are a beginner looking to expand your React Native knowledge or an experienced developer aiming to build a full-scale SaaS product, this course will provide you with real-world skills and industry best practices to launch a high-quality, production-ready mobile application.",
      "target_audience": [
        "This course is suitable for both beginners and experts as well"
      ]
    },
    {
      "title": "Interactive 3D Preview App: Build AR Quick Look with SwiftUI",
      "url": "https://www.udemy.com/course/interactive-3d-preview-app-build-ar-quick-look-with-swiftui/",
      "bio": "Transform Your Ideas into Interactive AR Apps with SwiftUI and AR Quick Look",
      "objectives": [
        "Integrate AR Quick Look",
        "Build Engaging Interfaces",
        "Develop apps that display 3D models in augmented reality",
        "SwiftUI"
      ],
      "course_content": {
        "AR Quick Look - View in 3D using ARKit": [
          "Introduction",
          "Item enum",
          "QLPreviewController Intro",
          "ARQuickLookView",
          "Content View",
          "Running App on Physical Device"
        ]
      },
      "requirements": [
        "Knowledge of Swift"
      ],
      "description": "Step into the world of augmented reality (AR) and learn how to create stunning, interactive apps using AR Quick Look and SwiftUI. Whether you’re an aspiring developer or an experienced programmer looking to expand your skills, this course will guide you through the fundamentals of building AR-enabled apps in a practical, hands-on way.\nAR Quick Look is a powerful tool that simplifies the integration of 3D models and AR experiences into apps. Combined with the intuitive and declarative SwiftUI framework, it enables developers to create seamless and engaging user experiences. This course breaks down these technologies into easy-to-follow steps, empowering you to turn your ideas into fully functional AR applications.\nThroughout this course, you’ll learn how to integrate AR Quick Look into SwiftUI apps to display 3D models in real-world environments. You’ll master the basics of SwiftUI to design clean and dynamic interfaces, understand how to prepare and optimize 3D assets for AR, and explore advanced techniques to enhance your app’s performance and usability.\nBy the end of this course, you’ll have built your own AR-enabled app and gained the skills to confidently use AR Quick Look and SwiftUI in your projects. Whether your goal is to create innovative AR applications for the App Store or to expand your expertise in cutting-edge technologies, this course is the perfect starting point.\nKey Features:\nHands-on projects to reinforce learning.\nStep-by-step tutorials suitable for beginners and intermediate developers.\nBest practices for AR optimization and app deployment.\nInsights into leveraging AR for real-world applications.\nEnroll now and unlock the potential of AR development with SwiftUI and AR Quick Look!",
      "target_audience": [
        "Learn how to seamlessly incorporate AR Quick Look into SwiftUI apps for interactive 3D and AR experiences."
      ]
    },
    {
      "title": "The Complete iOS App Development Bootcamp - Zero to Hero!",
      "url": "https://www.udemy.com/course/the-complete-ios-app-development-bootcamp-zero-to-hero/",
      "bio": "From Beginner to iOS App Developer with Just One Course!",
      "objectives": [
        "You will learn by doing, where every lesson is incorporated into a real-world app project",
        "Start your own app based business",
        "After the course, you will be able to build any app you want",
        "Become a digital nomad by working as a freelance iOS developer",
        "Master iOS App Development from scratch",
        "Go from a complete beginner - even with no previous programming experience - to a real iOS App Developer"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction to the Course"
        ],
        "Setting up iOS App Development Environment": [
          "Download and Install Xcode Compatible with your Running macOS",
          "Run Your App on iOS Simulator",
          "A Interface Walkthrough of Xcode Development Enviroment"
        ],
        "Getting Started": [
          "Create a First Brand New Xcode Project"
        ]
      },
      "requirements": [
        "No programming experience needed - I'll teach you everything you need to know",
        "No paid software required - all apps will be created in XCode (which is free to download)",
        "I'll walk you through, step-by-step how to get XCode installed and set up",
        "A Mac with access to the internet"
      ],
      "description": "Important Note Before You Buy This Course: This is not a course that is just for the purpose of selling it to you for profit. Of course, I made this course and want to sell it to you for profit, but that is not the first reason I made this course! I made this course for myself first. The main purpose of making this course is that it is like a notebook for my programming career path, firstly. In this notebook, I will always take notes of the experiences that I have learned during my study and work. The content of the course will always be updated by me in the way I keep a daily and weekly diary. I also want to share this notebook of mine with you by selling this course. Coming to this course, you will have a notebook recording all the experiences in the learning and working process of a developer in the profession (that's me - up to now I have more than 10 years working in the programming profession), and moreover, you will have this course will continue to be updated until I am still on this programming career path. Rest assured, I will stick with this programming path for a very long time, because it can be seen that I have been attached to it for more than 10 years, it has become an important part, a hobby, a passion in my life. If you are also curious or interested in this course, I invite you to open this diary of mine. Sincerely, thank you!\n\nThe Complete iOS App Development Bootcamp – Zero to Hero!\nDo you want to become a professional iOS developer and build powerful apps for iPhone and iPad? Whether you are a complete beginner or have some programming experience, this course will guide you step by step through everything you need to know to master iOS development.\nIn this hands-on bootcamp, you’ll start from the very basics and progress to building fully functional, real-world apps. You’ll learn Swift programming, understand the iOS development environment (Xcode), and explore modern frameworks that make app building efficient and fun. By the end of the course, you’ll have the confidence and skills to create, test, and publish your own apps on the App Store.\nWhat you will learn:\nSwift programming language from fundamentals to advanced concepts\nSetting up and navigating Xcode, Apple’s official IDE\nDesigning beautiful and responsive user interfaces with UIKit and SwiftUI\nWorking with data, APIs, JSON, and persistent storage\nHandling user input, navigation, and app lifecycle events\nDebugging, testing, and optimizing your apps for performance\nDeploying apps to the App Store and sharing them with the world\nWho this course is for:\nBeginners with no prior coding experience who want to learn iOS development\nStudents or developers looking to add Swift and iOS skills to their portfolio\nAnyone who wants to build and launch their own iPhone or iPad apps\nAspiring mobile developers aiming to start a career in iOS app development\nWhy take this course?\nThis bootcamp is designed to be practical, engaging, and beginner-friendly. Each section includes coding exercises, real projects, and step-by-step explanations to ensure you fully understand the concepts. By the time you finish, you’ll have a solid foundation and a portfolio of apps that demonstrate your skills.\nJoin now and start your journey to becoming an iOS developer — from Zero to Hero!\nThis course is assisted by Artificial Intelligence (AI) tools.",
      "target_audience": [
        "If you are an absolute beginner to coding, then take this course.",
        "If you are a seasoned programmer, then take this course to to get up to speed quickly with iOS native app development. We'll get you familiar with iOS development in no time!",
        "If you are switching from Object-C to Swift then this is a fast-track way of doing it. You can get started straight away with the Intermediate Swift Language module.",
        "Aspiring app developers looking to create a portfolio of apps, land a job, or launch their own iOS apps on App Store."
      ]
    },
    {
      "title": "Mastering Unit Testing in SwiftUI: Build a Task Tracker",
      "url": "https://www.udemy.com/course/mastering-unit-testing-in-swiftui-build-a-task-tracker/",
      "bio": "Build a real SwiftUI app with full unit testing and architecture skills used by professional iOS teams.",
      "objectives": [
        "Build a complete to-do list app using SwiftUI and MVVM architecture.",
        "Write unit tests for models, view models, and storage layers in a SwiftUI app.",
        "Learn how to use dependency injection to make code more testable and modular.",
        "Create and use mock objects to isolate logic and write predictable unit tests.",
        "Implement a progress-tracking feature that updates as tasks are completed.",
        "Use XCTest to write assertions, verify app behavior, and prevent regressions.",
        "Structure and organize your Swift project for scalability and maintainability.",
        "Configure Xcode to collect and analyze code coverage metrics.",
        "Understand the difference between unit tests, integration tests, and UI tests.",
        "Develop the testing mindset required for mid- to senior-level iOS engineering roles."
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the project",
          "What the Habit Tracker looks like and how it actually operates."
        ],
        "Follow Along with the Coding": [
          "Creating the Model",
          "Creating the HabitStorage Service and Protocol in Swift",
          "Building the HabitViewModel in SwiftUI (MVVM)",
          "Building the SwiftUI View for the Habit Tracker App"
        ],
        "Unit Testing and Quality Control": [
          "Why unit tests are important",
          "Unit Tests vs. Integration Tests",
          "Writing Unit Tests for EnumerationValues in Swift",
          "Creating Integration Tests for HabitStorage in Swift",
          "Testing Extensions with HabitTrackerExtensionTests in Swift",
          "Writing Unit Tests for the Habit Model in Swift - part 1",
          "Writing Unit Tests for the Habit Model in Swift - part 2",
          "Unit Testing in Swift: HabitTrackerViewModelTests Explained"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift programming (variables, functions, optionals, control flow).",
        "Familiarity with SwiftUI fundamentals such as Views, State, and Bindings.",
        "Comfort using Xcode (creating projects, navigating the interface, running simulators).",
        "Experience building simple SwiftUI apps (no need for production experience).",
        "Understanding of MVVM architecture basics is helpful but not mandatory.",
        "Mac with Xcode installed (preferably the latest stable version).",
        "Access to a macOS environment capable of running Xcode and iOS simulators.",
        "Basic familiarity with Git and source control is a plus for managing changes.",
        "Willingness to learn professional development workflows, including testing and debugging.",
        "Some prior exposure to writing tests in any language is helpful but not required—testing concepts will be explained from the ground up."
      ],
      "description": "Like many self-taught iOS developers, I’ve taken my share of online courses — and I’ve noticed a frustrating pattern: most courses either skip unit testing entirely or cover it in abstract, unrealistic ways. You’re shown how XCTest works in isolation, but never how it fits into an actual app. This course fixes that.\nIn this course, you’ll build a fully functional SwiftUI to-do list app with all the real-world features you’d expect: task management, progress tracking, persistent storage, and completion toggles. But what sets this course apart is the testing. You won’t just “learn” unit testing — you’ll apply it meaningfully inside a real architecture, with a proper ViewModel, mocking, and dependency injection.\nEvery unit test in this course serves a purpose. I walk you through how and why to test each part of the system — not just happy paths, but edge cases, error handling, and persistent state. You’ll gain an intuition for when tests matter and how to write them so they’re fast, clear, and maintainable.\nIf you’re tired of courses that barely scratch the surface or leave testing as an afterthought, this course is for you. There isn’t a more realistic or comprehensive course on unit testing in SwiftUI available today.\nBy the end, you’ll not only have a polished, production-grade app in your portfolio — you’ll also have the testing skills that set real iOS developers apart from the crowd.",
      "target_audience": [
        "iOS developers seeking to deepen their understanding of unit testing within SwiftUI.",
        "Junior developers working toward mid-level roles who want real-world project experience.",
        "Developers transitioning from UIKit to SwiftUI looking to adopt modern development and testing workflows.",
        "Bootcamp graduates who received little or no training in software testing.",
        "Self-taught programmers who want to build testable, maintainable SwiftUI apps.",
        "Freelance iOS developers who need to produce professional-grade applications for clients.",
        "Computer science students aiming to strengthen their practical knowledge before entering the job market.",
        "Mid-level developers preparing for senior roles by improving their code quality and testing discipline.",
        "Developers working in teams with CI/CD pipelines who need reliable automated test suites.",
        "Anyone who has built SwiftUI apps and now wants to learn how to properly test them."
      ]
    },
    {
      "title": "Apple TV apps. Convert an iPhone app to Apple TV using TVOS",
      "url": "https://www.udemy.com/course/apple-tv-apps-convert-an-iphone-app-to-apple-tv-using-tvos/",
      "bio": "Get to publish your own Apple TV app by following this step by step hands-on guide. All source code and images included",
      "objectives": [
        "Publish your very own Apple TV app to the iTunes app store",
        "Sell your Apple TV app in the iTunes app store",
        "brag to your friends and family about the fact that you own an Apple TV app",
        "Go through the whole process of publishing an app to the Apple TV app store",
        "Learn how to use the Apple TV programming language Objective-C and its frameworks",
        "Familiarize yourself with the Apple TV and the Apple TV simulator",
        "Become an Apple TV app developer"
      ],
      "course_content": {},
      "requirements": [
        "Have a MAC or a MAC virtual machine from macInCloud"
      ],
      "description": "*** BONUS ***\nThis course is the first of its own that shows you how to integrate videos advertising within your Apple TV apps so that you can get a smart passive income while players use your game.\n***************\nHello, My name is Yohann I will be your instructor\nIn this course you will learn how to convert an iPhone app into an Apple TV app.\nWe will start working from the source code of an iPhone classic game called Tic Tac Toe and then I will drive you through every single step to convert this app so that it works on the Apple TV.\nAll the steps are shown with video lectures so you can't possibly miss a step. You can always pause the videos, rewind and play again at your own pace.\nNow contrary to any other course from other instructors, the Tic tac toe app is already published in the Apple TV app store. Go look for it, the name of the app is \"tic tac toe for TV\".\nYou will be given the source code of the game so that you can follow along and you will also be given the final project so that you can publish your own version in the TV app store yourself!\nThis course gives you all the tools to get your app into the Apple TV app store. So don't wait any longer and come have your own app published in the TV app store and show it to your friends and family members.\nInvest in yourself, learn how to make apple TV apps today.\n\n\nWHAT YOU WILL GET AFTER COMPLETING THE COURSE ?\nYou will have your very own Apple TV game in the Apple TV iTunes app store ), ready to bring in revenues from each sale.\nYou will be able to get all free resources, including the source code with an unlimited license.\n\nYou can publish games every weekend, using the same source code, included within this course as a bonus, for free.\nYou will have the potential to make a lot of passive income, it's time to awaken the entrepreneur in you.\n\n\n************ READ ON ! **************\n\nLooking to boost your income as a App developer? Or maybe you're seeking a career change that gives you more free time and flexibility?\nThen this is the right course for you.\nYOU CAN BECOME AN APPLE TV APP DEVELOPER\nTV-OS has a huge platform where you can sell your games and apps and potentially make a lot of money . This course will take you from the very basic concepts of game development using the free software given by Apple.\nHOW MUCH DO YOU HAVE TO SPEND?\nThere is actually no more expenses except signing up besides getting the iOS developer license ($99/year). And we will show you the places from where you can get the resources we want without spending a single dollar.\n*********** HOW MUCH YOU CAN EARN *******\nYou can earn more than you think. I am the one example of that after studying this method i could create and publish game app every week . So i could make a lot of money without putting more effort . Join this course and follow me and you will make a lot money than you think.\nENROLL THE COURSE NOW AND PUBLISH YOUR VERY FIRST APPLE TV GAME, all it takes is one free afternoon.",
      "target_audience": [
        "anyone interested in owning an Apple TV app",
        "entrepreneurs wanting to make Apple TV apps",
        "side entrepreneur, people wanting to generate revenue on the side",
        "computer students",
        "techies",
        "geeks"
      ]
    },
    {
      "title": "Firebase Unlocked: Mastering Security Rules & Automation",
      "url": "https://www.udemy.com/course/firebase-unlocked-mastering-security-rules-automation/",
      "bio": "Secure your Flutter apps with Firebase Security Rules, Cloud Functions, and advanced automation techniques.",
      "objectives": [
        "Quick setup of Firebase projects and connecting them to Flutter.",
        "Understanding the Firebase console for Auth, Firestore, and Functions.",
        "Master the syntax: match, allow, read, write (create, update, delete).",
        "Secure data access based on user authentication (request.auth).",
        "Write rules that are both secure and efficient, minimizing Firestore reads.",
        "Effectively use get() and exists() for cross-document validation.",
        "Test your rules using the Firebase Rules Playground",
        "Implement robust Role-Based Access Control (RBAC).",
        "Validate incoming data and existing data.",
        "Set up your local Node.js environment for Firebase Functions.",
        "Write, deploy, and test various types of Cloud Functions: HTTP Triggers: Create API-like endpoints for your Flutter app.",
        "Firestore Triggers: React to data changes (onCreate, onUpdate, onDelete, onWrite) for automation, notifications, and data consistency.",
        "Understand asynchronous operations, Promises, and error handling in Node.js.",
        "Build features for the \"TeamHub Productivity Suite\" Flutter app, including user management, task tracking, and inventory control.",
        "Implement real-world scenarios: sending notifications, data aggregation, input sanitization, and background processing.",
        "Learn best practices for structuring your code, managing dependencies, and monitoring your functions.",
        "Tips for cost optimization and security."
      ],
      "course_content": {
        "Introduction - Getting Started with Firebase and Flutter": [
          "Introduction",
          "Create Firebase App And Startup App",
          "Connect Flutter App to Firebase",
          "Add FirebaseAuth, Firestore and Storage"
        ],
        "User Authentication & Firestore Security": [
          "Register User method",
          "Basic Users Rules and User Sign Up",
          "Login User and Authstate Change part 1",
          "Authstate Fix",
          "Users Collections Rules - Create",
          "Users Collection Rules - Update",
          "Users Collection Rules - admin Access"
        ],
        "Building and Managing User Profiles": [
          "Display user Data part 1 Profile",
          "Display user Data part 2 Profile",
          "Edit Profile Screen",
          "Edit User Data"
        ],
        "Project & Task Management Security Rules": [
          "Create Projects Rules overview",
          "Projects - Read Rules",
          "Projects Read Rules Part 2",
          "Projects - Create and Update Rules",
          "Create First Project",
          "Projects List Screen",
          "Projects List part 2",
          "Task - Read Rules",
          "Task - Create, Update and Delete Rules"
        ],
        "Implementing Project & Task UI": [
          "Task Screen Show Tasks from database",
          "Task Screen Show Tasks from database 2",
          "Task Screen add some Tasks",
          "Vibe code Dashboard and Task Screen",
          "Some minor fixes"
        ],
        "Advanced Automation with Cloud Functions & Custom Claims": [
          "Add Cloud Functions",
          "Cloud Functions Docs overview",
          "Add Custom claim Function",
          "Update firestore rule with custom claims",
          "UI Checks for user access"
        ]
      },
      "requirements": [
        "Any IDE of choice for Development",
        "Basic understanding of Flutter and Dart.",
        "Familiarity with Firebase Authentication and Firestore basics is helpful but not strictly required for the initial modules.",
        "A willingness to learn and experiment!"
      ],
      "description": "Are you a Flutter developer who finds Firebase security rules confusing or intimidating? Do you want to build powerful, secure, and scalable apps without leaving critical security loopholes? Welcome to Firebase Unlocked: Mastering Security Rules & Automation!\nThis ongoing, project-based course is designed to demystify Firebase security and empower you with the skills to protect your application's data effectively. We'll move beyond the basics and dive deep into writing granular security rules for authentication, user data, and complex data structures like projects and tasks.\nIn this course, you will learn to:\nSecure User Data: Master the art of writing Firestore security rules for user sign-up, login, and profile management, ensuring only authorized users can access and modify their information.\nBuild Complex Rule Structures: Learn how to secure related data collections, implementing rules for projects and tasks that are linked to specific users.\nAutomate with Cloud Functions: Step into the world of backend automation by writing and deploying Firebase Cloud Functions to handle tasks like assigning user roles.\nImplement Role-Based Access: Use Cloud Functions to set custom claims (e.g., 'admin') on users and then use those claims in your security rules to create powerful, role-based permissions.\nBuild a Real-World Application: Apply everything you learn in a hands-on Flutter project, from initial setup to advanced security implementation.\nThis course is for Flutter developers who have a basic understanding of Firebase but want to gain true mastery over its security and automation features.\nThis is a living course! By enrolling now, you get access to a comprehensive foundation and will receive regular updates. Future sections will cover advanced Cloud Functions for notifications, creating social features like discussion groups, and much more. Start your journey to becoming a Firebase security expert today!",
      "target_audience": [
        "Flutter developers who want to build secure and scalable backends with Firebase.",
        "Developers who have used Firebase but want a deeper understanding of Security Rules and Cloud Functions.",
        "Anyone looking to implement robust Role-Based Access Control in their applications.",
        "Developers aiming to automate backend tasks and build more dynamic applications."
      ]
    },
    {
      "title": "Build Strava Clone in iOS using MapKit, Realm and UIKit",
      "url": "https://www.udemy.com/course/build-strava-clone-in-ios-using-mapkit-realm-and-uikit/",
      "bio": "Build Run Tracker of Your Own and Keep Run Logs",
      "objectives": [
        "MapKit",
        "UIKit",
        "Building Custom Controls",
        "Complete App Development",
        "Location Tracking",
        "Realm Database",
        "TableView Controller",
        "MapView and Its delegates"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Creation and Programmatic View Controller Launch"
        ],
        "Run Awesome App Part 1": [
          "Tabbar setup",
          "Gradient Layer",
          "Circular Button",
          "Home ViewController",
          "CurrentRun ViewController UI Elements",
          "CurrentRun ViewController Slider Controls",
          "History ViewController"
        ],
        "Run Awesome App Part 2": [
          "Realm Integration and Next Steps",
          "Realm Installation",
          "Realm Object Modeling",
          "Run History Cell Configuration",
          "Add Run To Realm Database",
          "Previous Run ViewController and Map Overlay"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Knowledge of Xcode",
        "Knowledge of iOS Programming"
      ],
      "description": "In this course we will build a mini Strava clone from scratch. This app will allow you to track user's location using core location along with displaying their location inside a map. You will be building custom controls from scratch while learning about various reusable components. You will learn to build components in code.\n\n\nComplete app is written programmatically so we will not be using any storyboard or nib or xib files to create our views. You will learn about programmatic autolayout constraints.\n\n\nYou will learn about CoreLocation, location tracking while user is running and you will learn to keep track of user's location on the Map using MapKit. You will learn to build custom annotations and add custom annotations into map view to show user's start and end locations. You will learn about mapkit and its delegate functions.\n\n\nWe will use realm database to store previous run data so you will learn how to integrate realm into your project using Cocoapods. You will learn to model objects for your realm database so you data can be represented in table format with one to may relationships.\n\n\nWe will also build a component to add shimmer effect to a label which will have a custom slider control to end the current run.",
      "target_audience": [
        "Students who wants to build complete app from scratch."
      ]
    },
    {
      "title": "Reverse Engineering games & applications Reverse Engineering",
      "url": "https://www.udemy.com/course/reverse-engineering-games-app-reverse-engineering-process/",
      "bio": "Take the easy & fast way to earn Money by creating your own games & apps using Reverse Engineering process !",
      "objectives": [
        "Use successful tricks to make a great android app/game without any investment.",
        "Create a game/app from zero to hero step by step.",
        "Save time by creating games/apps in less than 2 days.",
        "You will be able to make indie games for major marketplaces as android and iOS"
      ],
      "course_content": {
        "introduction & Objectives": [
          "introducing Reverse Engineering Course For Andoid Applications/Games"
        ],
        "How to create Gmail account,Admob account & Adsense account": [
          "How to create Gmail account,Admob account & Adsense account"
        ],
        "How to create google play developer console Account": [
          "Googleplay Developper Console Account"
        ],
        "What is better & profitable : Games or Apps & why !": [
          "What is Profitable Games or Apps !"
        ],
        "How to find some profitable Niches for Games/Apps:": [
          "How to find some profitable Niches for Games/Apps step-by-step:"
        ],
        "Basics Games & Apps ASO (App Store Optimization) ?": [
          "Games & Apps App Store Optimization."
        ],
        "How to find the APK who use only google Ads !": [
          "How to choose & download APK from googleplay without risks"
        ],
        "Paied & Free Resources to upload Assets (images,sounds,graphics...)": [
          "How to find some Free and paied resources images,graphics,sounds"
        ],
        "How to get keywords to write your description for your Game/App ?": [
          "Tips for How to get keywords Methode 1 and 2"
        ],
        "How to make a great discreption easy & useful in just 5 minutes ?": [
          "DescriptionTips : Part 1",
          "DescriptionTips : Part 2"
        ]
      },
      "requirements": [
        "Be able to use a computer at a beginner level.",
        "Be famillial with developping basics.",
        "Some knowledge about reskinning apps or games development"
      ],
      "description": "Hi Students,\nFall in love with learning with our course from $11.99. New Year , Cyber Monday, Black Friday & Thanksgiving Day Deals Are here again,don't miss !\nin Step by Step  today\nIn this Reverse Engineering games & app-reverse engineering process training course, The expert author  will teach you about common reverse engineering software and how to find them, as well as how to reverse engineering techniques between various operating reverse engineering programs systems.\nThis reverse engineering course is designed for beginners who are looking to get started in App Re skinning & game development, penetration testing, and reverse engineering.\nLearn how to create your games using reverse engineering tools, the free-to-use game development tool,in our case we will learn how to use APK tools Advanced.\nWe start super simple so you need no prior experience or reverse engineering of coding! With our online types of engineering courses tutorials, you'll be amazed what you can achieve.\nYou will have access to a course forum where you can discuss topics on a course-wide basis, or down to the individual and unique videos.\n\nSo,the question is  : what is reverse engineering?\n\n\nYou will start by learning about reversing compiled Android applications,  using APK tool Advanced Tools.\nFrom there, we will teach you how to reverse engineer  Android applications.\nThose videos tutorials also covers how to find other profitable niches to help you increase high profit with less investment.\nFinally, you will learn about simple reverse engineering examples, making games & apps, create tens of successful games & apps in short time .\n\nOnce you have completed this engineering course, you will be fully capable of finding your way in developing more ideas by making your own applications than publish them on google play and other stores such as Amazon store.\nWorking files are included, allowing you to follow along with the author throughout the lessons.\nOh, and it's just bigger and better than the competition. See the length and the reviews.\nFor each demo game you build you will follow this process...\nBe challenged to Reskin the entire game yourself.\nBe shown step-by step how to Reverse your Application from existing APKs.\nBe challenged to apply, and re-apply your knowledge regularly.\nYou will get full lifetime access for a single one-off fee.\nDive in now, you won't be disappointed!\n\n\nWhat will i Learn ?\n\nLearn more about APK reversing tools.\nLearn more about finding the must profitable APK from google play\nYou will be able to create tens of Applications/Games & earn money from them.\nYou will become more familiar with simple Step by Step Course, games reskin.\nBe sure you will earn your first dollars by following those Steps.\nA live case study using an aleatoire APK from google play.\nAt the end of couse you will get a PDF file countain all details you need to start as soon as possible.",
      "target_audience": [
        "Anyone who wants to learn how to code and how to reskin android games.",
        "Anyone who is interested in making apps and games taking advantage of existing ones.",
        "Anyone who is seeking a profitable source for cash through reskin apps and games"
      ]
    },
    {
      "title": "The Introduction to Kotlin course for android developer 2025",
      "url": "https://www.udemy.com/course/the-introduction-to-kotlin-course-for-android-developer-2025/",
      "bio": "Val, var, String templates, Type alias, Casting, This keyword, when, let, Foreach, The !!, Elvis operator, Polymorphism",
      "objectives": [
        "val, var and some basic types in Kotlin",
        "Basic type and introduction to package",
        "Import Renaming",
        "string templates",
        "type alias",
        "ranges",
        "Loops and if-else",
        "Exception handling",
        "casting",
        "equality",
        "this keyword",
        "foreach",
        "When",
        "How to write a swap function using the also function",
        "Operators and Operator overloading",
        "let keyword",
        "The !! in kotlin",
        "The Elvis operator",
        "The Pair and triple keyword",
        "What is \"is\" in Kotlin",
        "What is \"_\" in Kotlin",
        "What is lazy in kotlin",
        "function",
        "What is single expression function",
        "The top level and local function",
        "How to use named arguments in function",
        "How to pass variable arguments to a function",
        "What is tail recursive function",
        "What is inline function",
        "What is higher-order function",
        "What are function references?",
        "What are function-literal receivers",
        "what are function composition",
        "How to filter and map using lambda expressions",
        "What are classes",
        "what are properties",
        "What is the primary and secondary constructor",
        "When to use primary and secondary constructor",
        "What is init function",
        "How to specify default values in functions",
        "Getting classes",
        "How to declare a static function?",
        "How to type check an object",
        "What is enum class",
        "How to work with enums",
        "What is sealed class",
        "What is class delegation?",
        "What are overriding rules in Kotlin",
        "How to iterate over a class properties",
        "How to work with nested class",
        "Using the use keyword",
        "How to create geter/ setter",
        "what is data class",
        "What is inheritance in Kotlin",
        "what are interface classes",
        "How to implement complicated interfaces with multiple overriden methods",
        "What is object keyword",
        "What is companion object keyword",
        "How to work with Generics in Kotlin",
        "What is polymorphism",
        "What is Currying and Partial Application",
        "What is Type variance",
        "What is bounded polymorphism",
        "What is parameterized functions",
        "How to use Optional in Kotlin",
        "What are closures?",
        "What is Memoization",
        "What are collections?",
        "How to merge 2 collections",
        "How to split original collection into pair of collections",
        "How to sort a collection in descending order",
        "How to sort collection by multiple fields in Kotlin",
        "What are observables",
        "How to parse a JSON response using Gson",
        "What is reflection",
        "What are annotation in Kotlin",
        "How to sort a list of objects and keep null objects at the end",
        "What are algebraic data types",
        "What is Type reification",
        "what is type erasure?",
        "How to pad a string in Kotlin",
        "How to flatten an array or map",
        "How to use limit in Kotlin list",
        "How to create an 2D array in Kotlin",
        "How to read from files using InputReader",
        "How to read all lines in a file using InputReader",
        "Reading line by line using InputReader",
        "Reading all lines in a file using BufferedReader",
        "How to read line by line using BufferedReader",
        "What are string and floating point matchers",
        "Introduction to thread",
        "Concurrency in Kotlin",
        "What are inceptors in Kotlin",
        "Introduction to property testing",
        "Introduction to table-driven testing in Kotlin",
        "Introduction to Tags, conditions and config in Kotlin",
        "What are executors?",
        "How to inject dependencies in Kotlin",
        "Introduction Coroutines",
        "Introduction to Suspending Functions",
        "Introduction to Structured concurrency",
        "Introduction to Job",
        "Introduction to Context and scope",
        "what are Cancellation and failure"
      ],
      "course_content": {
        "Introduction": [
          "Course structure",
          "Download IntelliJ",
          "What is Kotlin and why do we need to learn Kotlin"
        ],
        "Basic Kotlin": [
          "What are val, var and some basic types in Kotlin",
          "Basic type and introduction to package",
          "Introduction to Import Renaming",
          "Introduction to string templates",
          "what is type alias",
          "Introduction to ranges",
          "Introduction to Loops and if-else",
          "Assignment 1: Practice for loop",
          "Assignment 2: Practice if-else statement",
          "Introduction to Exception handling",
          "What is casting",
          "what is equality",
          "What is this keyword",
          "What is foreach?",
          "what is When",
          "How to write a swap function using the also function",
          "Introduction to Operators and Operator overloading",
          "The let keyword",
          "The !! in kotlin",
          "The Elvis operator",
          "Assignment 3: Practicing Elvis operator",
          "The Pair and triple keyword",
          "What is \"is\" in Kotlin",
          "What is \"_\" in Kotlin",
          "What is lazy in kotlin"
        ],
        "Intermediate Kotlin": [
          "function",
          "What is single expression function",
          "What is top level and local function",
          "How to use named arguments in function",
          "How to pass variable arguments to a function",
          "What is tail recursive function",
          "What is inline function",
          "Assignment 4: Practice functions",
          "What is higher-order function",
          "Assignment 5: Practice higher-order function",
          "What are function references?",
          "What are function-literal receivers",
          "what are function composition",
          "How to filter and map using lambda expressions",
          "What are classes",
          "what are properties",
          "What is the primary and secondary constructor",
          "When to use primary and secondary constructor",
          "What is init function",
          "How to specify default values in functions",
          "Getting classes",
          "How to declare a static function?",
          "How to type check an object",
          "What is enum class",
          "How to work with enums",
          "What is sealed class",
          "What is class delegation?",
          "What are overriding rules in Kotlin",
          "How to iterate over a class properties",
          "How to work with nested class",
          "Using the use keyword",
          "How to create geter/ setter",
          "what is data class",
          "What is inheritance in Kotlin",
          "what are interface classes",
          "How to implement complicated interfaces with multiple overriden methods",
          "What is object keyword",
          "What is companion object keyword",
          "How to work with Generics in Kotlin",
          "What is polymorphism"
        ],
        "Advanced Kotlin": [
          "What is Currying and Partial Application",
          "What is Type variance",
          "What is bounded polymorphism",
          "What is parameterized functions",
          "How to use Optional in Kotlin",
          "What are closures?",
          "What is Memoization",
          "What are collections?",
          "How to merge 2 collections",
          "How to split original collection into pair of collections",
          "How to sort a collection in descending order",
          "How to sort collection by multiple fields in Kotlin",
          "What are observables",
          "How to parse a JSON response using Gson",
          "What is reflection",
          "What are annotation in Kotlin",
          "How to sort a list of objects and keep null objects at the end",
          "What are algebraic data types",
          "What is Type reification",
          "what is type erasure?",
          "How to pad a string in Kotlin",
          "How to flatten an array or map",
          "How to use limit in Kotlin list",
          "How to create an 2D array in Kotlin"
        ],
        "More advanced concepts in Kotlin": [
          "How to read from files using InputReader",
          "How to read all lines in a file using InputReader",
          "Reading line by line using InputReader",
          "Reading all lines in a file using BufferedReader",
          "How to read line by line using BufferedReader",
          "What are string and floating point matchers",
          "Introduction to thread",
          "Concurrency in Kotlin",
          "What are inceptors in Kotlin",
          "Introduction to property testing",
          "Introduction to table-driven testing in Kotlin",
          "Introduction to Tags, conditions and config in Kotlin",
          "What are executors?",
          "How to inject dependencies in Kotlin",
          "Introduction Coroutines",
          "Introduction to Suspending Functions",
          "Introduction to Structured concurrency",
          "Introduction to Job",
          "Introduction to Context and scope",
          "what are Cancellation and failure"
        ],
        "Thank you": [
          "Thank you"
        ]
      },
      "requirements": [
        "A Windows, Mac or Linux Computer",
        "No Programming knowledge required - I'll teach you everything you need to know"
      ],
      "description": "Are you a Java developer wondering if you need to learn Kotlin?\nMaybe you are an experienced Java developer who wants to learn Kotlin quickly, to be prepared for future project work.\nPerhaps instead, you're an Android app developer who knows Java well, but you want to be able to move forward with Kotlin for new Android development work.\nWell, with Google's recent focus on Kotlin for Android app development, this language has been launched into the mainstream, and you can be sure you will be seeing a lot more about it. It's also highly likely that you will be working with Kotlin in your Java projects in the near future.\nBecause Kotlin works anywhere Java works, and can even be called from Java code (and vice-versa), this brings with it a massive opportunity for Java developers. Being able to work with both Java and Kotlin is going to give you a massive advantage over other programmers.\n\nThis course was designed to teach Java developers how to use Kotlin in the shortest possible time.\n\nI will be your course instructor, is an experienced Java and Kotlin developer, with many years of software development experience. I am uniquely qualified to teach you how to use this powerful and exciting language.\nWhile you won't learn Android app development in this course, you will learn Kotlin, and also the key differences between Kotlin and Java.\nIn addition, the Kotlin syntax is explored in detail.\nOver 12 hours of videos are included in the course, making it one of the most comprehensive courses on the language. The course highly focus on Kotlin from complete basic to advanced concepts which will not be covered in any other courses.\nNow is the perfect time for you to learn Kotlin, while it's relatively new. It has been around for a while, but only now is it being thrust into the limelight.\n\nIt's absolutely vital for Java developers to learn Kotlin to maximize future career opportunities. Objective-C developers who failed to transition to Swift, or were too slow doing so, were left behind. Don't make the same mistake they did!\nIf you are ready to greatly increase your career prospects by adding Kotlin experience to your skills and knowledge, then sign up for the course today.",
      "target_audience": [
        "If you have no idea about programming and want to get started, then this course is for you.",
        "If you don't want to waste any time becoming a developer, this is the right fast track course for you.",
        "If you want to become a Kotlin Developer then take this course",
        "If you want to become an expert in Kotlin then take this course"
      ]
    },
    {
      "title": "SwiftUI QuizApp with MVVM",
      "url": "https://www.udemy.com/course/swiftui-quizapp-with-mvvm/",
      "bio": "Learn how SwiftUI works with MVVM by making a beautiful QuizApp",
      "objectives": [
        "Learn how to create SwiftUI Quiz Game with SwiftUI",
        "Learn how to implement MVVM with SwiftUI",
        "Learn the concept of @State, @ObservableObject, @Published & @ObservedObject",
        "Learn SwiftUI basics like VStack, HStack and ZStack",
        "Learn how to use LazyVGrid",
        "Learn how to create Timer in SwiftUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Demo",
          "Base Project",
          "Base Project Description",
          "Basics of SwiftUI"
        ],
        "Quiz App UI": [
          "Quiz game - Background View UI",
          "VStack & Reusable Text View",
          "Options Grid View"
        ],
        "Game Logic & MVVM Explanation": [
          "Using @State for simple logic",
          "SwiftUI MVVM Explanation",
          "Game Logic with MVVM",
          "Time UI and Complete Game",
          "Source Code",
          "Bonus - Additional Resources"
        ]
      },
      "requirements": [
        "You should have basic Swift programming language knowledge"
      ],
      "description": "Want to learn how to build a SwiftUI QuizApp with MVVM?\n\n\nThen you are in the right place.\n\n\nSwiftUI is a UI framework by Apple for building beautiful and fast native apps. SwiftUI helps you build great-looking apps across all Apple platforms with the power of Swift — and as little code as possible. Apple introduced SwiftUI in 2019 and the framework has been evolving at a rapid pace ever since.\n\n\nSince the introduction of SwiftUI, the MVVM pattern has seen a new renaissance. Many developers believe that this particular pattern fits well with the SwiftUI data flow. We are going to learn how to implement the powerful MVVM design pattern in SwiftUI applications that are leveraging the Combine framework. The combination of these 3 concepts will be the standard of iOS app architecture for the years to come, so it’s really important to set up a solid groundwork when it comes to designing Swift apps going forward\n\n\nIn this course you will learn SwiftUI with MVVM. We will learn how to create a beautiful and intuitive Quiz App. And through the process we will learn how MVVM design pattern works with SwiftUI. We will learn base concepts of SwiftUI Combine.\n\n\nCourse Overview -\nCreate SwiftUI Quiz Game with SwiftUI + Combine\nImplement MVVM with SwiftUI using Combine\nConcept of @State, @ObservableObject, @Published & @ObservedObject\nSwiftUI basics like VStack, HStack and ZStack\nLazyVGrid\nCreate Timer in SwiftUI",
      "target_audience": [
        "iOS Mobile app developer, Swift and SwiftUI developers"
      ]
    },
    {
      "title": "Developing High Quality Android Applications",
      "url": "https://www.udemy.com/course/developing-high-quality-android-applications/",
      "bio": "Learn How To Build Powerful Android Applications",
      "objectives": [
        "Learn the skills needed to create commercial Android Applications",
        "Learn how to write efficient Android code that reduces defects and errors in your program"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "Why Develop Maintainable Apps?",
          "About The Author",
          "Course Overview"
        ],
        "Android Libraries": [
          "Choosing The Right Library",
          "Choosing An Image Library - Part 1",
          "Choosing An Image Library - Part 2",
          "Choosing An Image Library - Part 3"
        ],
        "Domain Design Challenges": [
          "Domain Design Challenges In Android"
        ],
        "Software Design Principles": [
          "Software Design Principles",
          "Single-Responsibility",
          "Separation Of Concerns",
          "Law Of Demeter"
        ],
        "Architecting The Presentation Layer": [
          "Architecting The Presentation Layer"
        ],
        "Model View Presenter Pattern - MVP": [
          "Model View Presenter Pattern",
          "Migrating To MVP Pattern - Part 1",
          "Migrating To MVP Pattern - Part 2"
        ],
        "Static Code Analysis": [
          "Static Code Analysis"
        ],
        "Checkstyle": [
          "Overview Of Checkstyle",
          "Getting Set Up",
          "Cleaning Up Your Code"
        ],
        "PMD": [
          "Overview Of PMD",
          "Getting Set Up",
          "Cleaning Up Your Code"
        ],
        "FindBugs": [
          "Overview Of FindBugs",
          "Getting Set Up",
          "Cleaning Up Your Code"
        ]
      },
      "requirements": [
        "This course is designed for users that already have a basic working knowledge of developing Android applications.",
        "Training can be used on PC or MAC"
      ],
      "description": "In this Developing High Quality Android Applications training course, expert author Annyce Davis teaches you how you can reduce defects and create maintainable software. This course is designed for users that already have a basic working knowledge of developing Android applications.\n\nYou will start by learning about Android libraries, then jump into learning about software design principles, including separation of concerns and Law of Demeter. From there, Annyce will teach you how to architect the presentation layer. This video tutorial also covers topics such as model view presenter pattern, static code analysis, PMD, FindBugs, and Android Lint. You will also learn about unit testing, unit testing with JUnit, and user interface testing. Finally, you will learn about user interface testing with Espresso.\n\nOnce you have completed this computer based training course, you will have gained the knowledge necessary to develop high quality Android applications. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Ideal for students who would like to gain a solid working knowledge of creating Android Applications"
      ]
    },
    {
      "title": "Learn to Consume GraphQL Api's in .NET MAUI",
      "url": "https://www.udemy.com/course/learn-to-consume-graphql-apis-in-net-maui/",
      "bio": "Learn to make Real World App .NET MAUI App with GraphQL",
      "objectives": [
        "Be able to build .NET MAUI applications with GraphQL",
        "Learn the complete fundamentals of GraphQL",
        "Deploy Graphql Project to Microsoft Azure",
        "Deploy Graphql Project to Third Party Hosting Service",
        "Test Graphql Endpoints",
        "Create Notes Application",
        "Create Restaurant Table reservation application"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "GraphQL Fundamentals": [
          "Querying Data with GraphQL",
          "Understanding Arguments",
          "Working with Schemas",
          "Leveraging Aliases",
          "Reusable Query Components with Fragments",
          "Variables in GraphQL",
          "Modifying Data with Mutations"
        ],
        "Configure Application Backend": [
          "How to get GraphQL Api's",
          "Create Azure Web App",
          "Create Azure SQL Db",
          "Publish Web App to Azure",
          "Test Graphql Endpoints"
        ],
        "Building the Notes-Taking App": [
          "Create a new Project",
          "Install Nuget Packages",
          "Create Model Classes",
          "Get All Notes",
          "Notes List Page",
          "Get Note By Id",
          "Note Detail Page",
          "Insert Note",
          "Add Note Page",
          "Refresh Note List",
          "Update Note",
          "Delete Note"
        ],
        "Configure Backend for Restaurant Table App": [
          "Get Source Code",
          "Create Website and Database",
          "Create Database Tables",
          "Deploy Graphql Project Code",
          "Test the Endpoint"
        ],
        "Building the Restaurant Table Reservation App": [
          "Overview Restaurant App",
          "Create Model Classes Restaurant App",
          "Create Api Service Class",
          "Categories List Page",
          "Menu List Page",
          "Reservation Page",
          "Source Code",
          "Bonus Lesson"
        ]
      },
      "requirements": [
        "You should be familiar with C# , Xamarin Forms or .NET MAUI.",
        "At least 3-6 months experience with Xamarin Forms / .NET MAUI and XAML",
        "Visual Studio 2022 with Windows Edition"
      ],
      "description": "Welcome to the First Graphql course with .NET MAUI. In this comprehensive course, you will learn everything you need to know about consuming Graphql inside Android and iOS apps using .NET MAUI.\nOur course covers all the fundamentals of Graphql, including Arguments , Schemas , Aliases , Fragments , Variables and Mutations.\nYou will also learn how to create a range of different apps, including:\nNotes Application with .NET MAUI & Graphql\nRestaurant Table Reservation application using .NET MAUI & Graphql\n\n\nPrerequisites\nTo successfully complete this course, you should have a basic understanding of C# and XAML.\n\n\nRemember\nPlease note that we will be using Windows machines to develop the .NET MAUI applications. Although you can build applications for Android and Windows on a Windows machine, you will need an iPhone to test IOS applications. However, if you have a Mac OS, you can also test IOS applications.\n\n\nWhat you'll get from this course ?\nBy the end of the course, you will receive all the Application Source Code and helpful materials such as code snippets and assets. We understand the value of your time, and that's why we have designed this course to be short, comprehensive, and easy to understand.\nSo, why wait? Join our  Course today and start building amazing apps with .NET MAUI and Graphql !",
      "target_audience": [
        "If you've a 3 to 6 months .NET MAUI experience , then take this course.",
        "If you are a .NET MAUI developer and want to learn more advanced concepts like consume Graphql endpoints then take this course."
      ]
    },
    {
      "title": "Flutter Crash Course: From Beginner to Pro",
      "url": "https://www.udemy.com/course/flutter-course-for-beginners-simple-professional/",
      "bio": "Unlock the Power of Flutter: Your Path to Mastering App Development from Scratch!",
      "objectives": [
        "Learn Flutter and Dart Basics in Three Simple Modules",
        "1 - Flutter and Dart Basics",
        "2 - Design Flutter Apps using Stateless Widgets",
        "3 - Add Logic using Flutter Stateful Widgets"
      ],
      "course_content": {
        "Flutter and Dart Basics": [
          "Introduction",
          "Install flutter in Android Studio",
          "Create a First Flutter App - Part 1 Basics",
          "First Flutter App - Part 2 - Widgets",
          "Organize Your Flutter Code - Flutter Fat Arrows",
          "Add Logic in Flutter"
        ],
        "Stateless Widgets": [
          "Exploring Widgets in Flutter",
          "Image in Flutter - Asset Image | Network Image",
          "Add Material and Font Awesome Icons",
          "Create / Design a Container in Flutter",
          "Create and Design Buttons in Flutter",
          "Create an Appbar in Flutter",
          "Flutter Row, Column, and Expanded Widget",
          "Flutter Static List View and List Tile Widget",
          "Dynamic List View using ListView.builder()",
          "Create and Design a Navigation Drawer",
          "Floating Action Button - FAB",
          "Flutter Stack and Positioned Widget",
          "Custom Reusable Widgets in Flutter"
        ],
        "Stateful Widgets": [
          "Flutter Stateful Widgets - Stateless VS Stateful",
          "Navigate to a new screen using Push and Pop",
          "Flutter TextField or TextFormField - Get values using Controller or onChanged",
          "Flutter Checkbox and CheckboxListTile Widget",
          "Create and Design Radio Button",
          "DropDown Button & DropdownFormField Buttons",
          "Create a Form in Flutter with Form Validation"
        ]
      },
      "requirements": [
        "No flutter or dart experience needed. You will learn everything you need to know"
      ],
      "description": "Embark on a journey to master Flutter with our comprehensive Crash Course! Whether you're a complete beginner or looking to enhance your skills, this step-by-step guide is tailored for everyone eager to dive into Flutter app development in 2022.\nCourse Highlights:\nFrom Basics to Professional-Level Development: Start from the fundamentals and progress seamlessly to advanced Flutter app development. By the end of this course, you'll have the skills to create fully functional Flutter apps with confidence.\nStructured Learning Path: Our Flutter Crash Course 2022 is thoughtfully divided into three sections, ensuring a clear and structured learning path for all participants.\nSection 1: Installing Flutter on Android Studio\nGet started by setting up your development environment with a detailed guide on installing Flutter on Android Studio.\nSection 2: Building the Foundation\nDelve into the basics of Flutter and Dart, creating your first app. Learn to organize code, add logic, and create widgets that form the backbone of any Flutter application.\nSection 3: Mastering the Flutter Backend\nTake a deep dive into Flutter app backend development. Explore screen navigation, text fields, checkboxes, radio buttons, dropdowns, form creation, and data passing. Learn to design a complete Flutter app with ease.\nWhat You'll Learn:\nInstallation and setup of Flutter on Android Studio\nBasics of Flutter and Dart\nCreation of widgets, including Stateless Widgets\nAdvanced widget design with Material and Font-Awesome Icons\nLayout widgets, such as ROW & Column, Expanded Widget, and more\nNavigation techniques, including Push & Pop in Flutter\nForm creation, data passing, and display in a list\nBuilding a complete Flutter app from scratch\nWhy Take This Course:\nBeginner-friendly and step-by-step guidance\nStructured learning with real-world examples\nPractical hands-on exercises for better retention\nIn-depth coverage of Flutter backend development\nLearn from an experienced Flutter developer with a passion for teaching\nDon't miss out on this opportunity to learn Flutter comprehensively and build powerful apps effortlessly. Enroll now and let's start coding together!",
      "target_audience": [
        "Absolute Beginners who are passionate about learning modern and cross platform development",
        "Beginners who want to amaze their clients with amazing design skills"
      ]
    },
    {
      "title": "600+ iOS Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/ios-interview-questions-practice-test/",
      "bio": "iOS Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "iOS Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nAre you preparing for an iOS developer interview and looking for a comprehensive practice test to assess your knowledge? Look no further! Our iOS Interview Questions Practice Test is designed to help you thoroughly prepare for your upcoming interviews by covering a wide range of topics commonly asked in iOS developer interviews. With six sections and detailed subtopics, this course provides an in-depth review of essential concepts and challenges you might encounter during your interview.\nSection 1: Swift Programming Language In this section, you'll dive into the fundamental concepts of the Swift programming language, including basics, optionals, error handling, closures, generics, and memory management. Each subtopic is carefully crafted to test your understanding and proficiency in Swift, ensuring you're well-prepared to tackle any coding-related questions during your interview.\nSection 2: iOS App Architecture Understanding different app architectures is crucial for building robust and scalable iOS applications. This section covers topics such as MVC, MVVM, delegation, singleton pattern, and protocol-oriented programming. By mastering these concepts, you'll demonstrate your ability to design and architect iOS apps effectively.\nSection 3: User Interface (UI) Development Creating intuitive and visually appealing user interfaces is essential for delivering a great user experience. In this section, you'll explore auto layout, storyboards, view controller lifecycle, UIKit components, navigation controllers, and custom views. Through practice questions, you'll sharpen your UI development skills and learn how to create stunning iOS interfaces.\nSection 4: Networking and Data Persistence iOS apps often rely on network requests and data persistence to interact with servers and store user data locally. This section covers URLSession, JSON parsing, Core Data, UserDefaults, RESTful APIs, and background tasks. By mastering these topics, you'll be equipped to handle data management and network communication challenges in your interviews.\nSection 5: Debugging and Testing Debugging and testing are essential aspects of iOS development to ensure app stability and reliability. This section covers debugging tools in Xcode, unit testing with XCTest, UI testing, code profiling, memory leaks, and continuous integration. By practicing these questions, you'll gain confidence in troubleshooting and testing your iOS applications effectively.\nSection 6: Advanced Topics In this final section, you'll explore advanced iOS topics that demonstrate your depth of knowledge and expertise. Topics include Core Graphics, Core Animation, Core Location, push notifications, multithreading with Grand Central Dispatch, and SwiftUI. By mastering these advanced concepts, you'll showcase your readiness to tackle complex iOS development challenges.\n\n\nSample Practice Test Questions:\nQuestion: What is the purpose of optionals in Swift?\nA) To handle unexpected errors during runtime\nB) To force unwrap values and avoid nil crashes\nC) To indicate that a value may be missing or nil\nD) To make code more concise and readable\nExplanation: The correct answer is C) To indicate that a value may be missing or nil. Optionals are a key feature in Swift that allows variables and properties to represent either a value or nil, indicating the absence of a value. By using optionals, developers can handle scenarios where a value may or may not exist, preventing runtime crashes caused by accessing nil values. Optionals provide a safer and more expressive way to work with uncertain data and are essential for writing robust Swift code.\n\n\nQuestion: What is the main advantage of using the MVVM (Model-View-ViewModel) architecture in iOS app development?\nA) It simplifies the code structure and reduces boilerplate code\nB) It provides a clear separation of concerns between components\nC) It allows for better performance optimization and memory management\nD) It offers built-in support for asynchronous data fetching\nExplanation: The correct answer is B) It provides a clear separation of concerns between components. MVVM is a design pattern that divides an app's architecture into three main components: Model, View, and ViewModel. One of the primary advantages of MVVM is its ability to separate concerns, allowing developers to manage business logic and UI presentation separately. This separation enhances code maintainability, testability, and scalability, making it easier to understand and maintain complex iOS apps.\n\n\nQuestion: Which technique is commonly used to handle asynchronous network requests in iOS development?\nA) Callbacks\nB) Synchronous functions\nC) Generics\nD) Singleton pattern\nExplanation: The correct answer is A) Callbacks. Asynchronous network requests in iOS development are typically handled using callback functions or closures. Callbacks allow developers to define code blocks that are executed when the asynchronous operation, such as a network request, completes. By using callbacks, developers can perform tasks asynchronously without blocking the main thread, ensuring smooth app performance and responsiveness.\n\n\nQuestion: What is the purpose of Auto Layout in iOS user interface development?\nA) To automatically generate UI elements based on data models\nB) To manage user interactions and gestures\nC) To dynamically adjust the layout of UI elements based on screen size and orientation\nD) To synchronize data between different views and controllers\nExplanation: The correct answer is C) To dynamically adjust the layout of UI elements based on screen size and orientation. Auto Layout is a powerful layout engine provided by UIKit for dynamically positioning and sizing UI elements in iOS apps. It allows developers to create adaptive and responsive user interfaces that adapt to various screen sizes and orientations, ensuring consistent layout across different iOS devices. By defining constraints between UI elements, Auto Layout automatically adjusts the layout based on changes in screen size or orientation, providing a flexible and scalable approach to UI design.\n\n\nQuestion: Which testing framework is commonly used for writing unit tests in iOS development?\nA) XCTest\nB) JUnit\nC) Espresso\nD) PyTest\nExplanation: The correct answer is A) XCTest. XCTest is the default testing framework provided by Apple for writing unit tests in iOS, macOS, watchOS, and tvOS development. It offers a comprehensive set of features for writing, running, and managing unit tests within Xcode, Apple's integrated development environment. XCTest supports various testing paradigms, including assertion-based testing, performance testing, and asynchronous testing, making it the preferred choice for testing iOS applications. XCTest integrates seamlessly with Xcode, allowing developers to easily create and execute unit tests to ensure the correctness and reliability of their code.\n\n\nOur iOS Interview Questions Practice Test is meticulously designed to simulate real-world interview scenarios and help you assess your readiness for iOS developer roles. Whether you're a beginner or an experienced developer preparing for your next interview, this course will provide valuable insights and practice opportunities to enhance your skills and land your dream job.\nEnroll now and ace your iOS developer interview with confidence!",
      "target_audience": [
        "Aspiring iOS Developers: If you're new to iOS development and looking to kickstart your career in mobile app development, this course will provide you with essential knowledge and practice opportunities to prepare for iOS developer interviews.",
        "Experienced Developers Transitioning to iOS: Experienced developers from other platforms or backgrounds who are transitioning to iOS development will benefit from this course by familiarizing themselves with iOS-specific concepts and interview preparation strategies.",
        "Students and Graduates: Students enrolled in computer science or software engineering programs who wish to specialize in iOS development can use this course to supplement their academic studies and gain practical insights into the interview process.",
        "Self-taught Developers: Self-taught developers who have been learning iOS development independently will find this course valuable for consolidating their knowledge, filling in any gaps, and preparing for job interviews in the iOS development field.",
        "Job Seekers and Career Changers: Job seekers and career changers aiming to secure positions as iOS developers will find this course indispensable for honing their skills, assessing their readiness, and increasing their chances of success in the competitive job market.",
        "Professional Developers Seeking Career Advancement: Experienced iOS developers looking to advance their careers or transition to senior-level roles can use this course to refresh their knowledge, stay updated with industry trends, and prepare for advanced technical interviews."
      ]
    },
    {
      "title": "iOS App Development using Swift with iOS Mobile App Projects",
      "url": "https://www.udemy.com/course/ios-app-development-using-swift-with-ios-mobile-app-projects/",
      "bio": "SwiftUI with CoreData, Firebase, API Integration, App Store and multiple iOS Mobile App Projects with Resume & Job Guide",
      "objectives": [
        "You will develop multiple iOS apps (such as Space Flight News app, Meeting Notes app, Realtime Photo Gallery & Sharing app, etc.)",
        "You will understand Swift and SwiftUI for modern app development following Apple's guidelines",
        "You will work with modern Apple technologies such as CoreData, Video players, API Integration and Firebase",
        "You will understand how to build from scratch to archive and release apps on TestFlight and App Store"
      ],
      "course_content": {
        "Swift Programming Language": [
          "Introducing Apple's Swift Programming Language"
        ],
        "Apple's UI Frameworks: UIKit and SwiftUI": [
          "A Comparative Study on UIKit and SwiftUI"
        ],
        "Tour of Xcode: Apple's IDE": [
          "Exploring Xcode Options"
        ],
        "Variables, Constants, Functions & Guard in the Swift Programming Language": [
          "Custom Functions, Variables, Constants & Guard Statement"
        ],
        "Data Types in the Swift Programming Language": [
          "Swift's Data Types"
        ],
        "Conditional in the Swift Programming Language": [
          "Set Conditionals & Logic"
        ],
        "Events & Actions": [
          "Perform Actions & Events"
        ],
        "Buttons in Swift": [
          "Implement Five Different Buttons"
        ],
        "TabView, Images & Assets": [
          "Assets, Images & TabView"
        ],
        "Text, TextField & Menu": [
          "Menu, TextField & Text"
        ]
      },
      "requirements": [
        "No programming experience is necessary - I shall guide you from scratch to release on the App Store.",
        "A macOS running computer or laptop is required"
      ],
      "description": "Welcome to the latest iOS mobile app development course \"iOS App Development using Swift with iOS Mobile App Projects\".\nFrom Beginner to iOS Developer with one course - this course is the latest and updated (in 2025) course on iOS app development as it shows you how to develop efficient iOS apps using Apple's modern framework SwiftUI tested on iOS versions 16 and 17 with several live iOS projects.\n\nBy the end of this course, you will have your portfolio of your own apps by developing iOS app projects, including Space Flight News iOS app, Meeting Notes iOS app, Realtime Photo Gallery & Sharing iOS app projects etc.\n\nAnd you will easily be able to implement:\n\n1. Swift Programming Language (History, Data Types, Variables, Functions, Guard, Conditionals and more with live examples)\n2. Xcode: Get hands-on Xcode options to build, archive and upload iOS apps to App Store & TestFlight\n3. Comparative study of UIKit and SwiftUI: Features, advantages & Examples of both\n4. Developing UI screens: Splash screen, TextField, Menu, VStack, HStack, ZStack, Spacing and other widgets\n5. Designing screens: Using images (offline and online both), video player (offline and online both), foreground & background colors, buttons with events & actions\n6. APIs: Understanding how APIs function and hands-on experience with free software such as Postman, Quicktype etc.\n7. Integrating APIs into iOS apps: Using Unsplash API, Space Flight API etc.\n8. Firebase: Exploring, integrating and configuring Google Firebase into iOS apps\n9. Offline Storage: Developing iOS app using CoreData to add, save and delete data without internet\n10. Swift's Other Uses: Learn where else Swift is used (such as competitive programming & online contest sites)\n11. Multithreading DispatchQueue & Thread: Learn how DispatchQueue produces background threads to perform heavy tasks\n12. Quiz & Coding Exercise: Multi-question quiz & coding exercise to test the progress with answers for correction.\n13. App Store Release: Review Guidelines to publish your app accurately on the Apple App Store according to Apple's Official Requirements\n14. Marketing: iOS App Marketing Tools to share the app and attract new users\n15. Prepare for iOS Job Interview: Curated interview questions to assist you in preparing for iOS App Developer Job Interview\nLearn iOS App Development with Swift in this hands-on course! Build real-world iOS mobile app projects and master core skills like Swift programming, SwiftUI framework, CoreData, API and Xcode. Perfect for beginners and aspiring iOS app developers looking to create professional iOS apps. Start your journey to becoming an iOS developer today!\nUnlock your potential in iOS app development with our comprehensive Swift course! Dive into hands-on iOS Mobile App Projects, learning from scratch to advanced techniques. Master Swift programming, Swift UI design and iOS app deployment by building 5 iOS mobile app projects. Perfect for beginners and intermediate developers aiming to develop stunning, functional iOS apps. Enroll now to build your portfolio with real-world projects and become an iOS pro developer!\n\nGet Extra: Standard iOS Resume Making Tips to prepare an industry-standard Resume to apply for iOS Developer Jobs",
      "target_audience": [
        "If you are a beginner or student, take this course",
        "If you want to switch from Objective-C to Swift, take this course",
        "If you want to move from UIKit to SwiftUI, take this course",
        "If you are a programmer or developer intending to learn Apple's latest iOS App Development, take this course"
      ]
    },
    {
      "title": "iOS 7 Option Screens for UIView or Sprite Kit Based Apps",
      "url": "https://www.udemy.com/course/ios-7-option-screens-for-uiview-or-sprite-kit-based-apps/",
      "bio": "Learn how to make incredible looking Option menus for any iOS 7 project. Games or App, Sprite Kit or UIView-based.",
      "objectives": [
        "Create a fully functioning option or preferences screen for an iOS app."
      ],
      "course_content": {
        "Introduction and Initial Setup": [
          "Introduction to the course",
          "AppData Singleton",
          "Creating the Options Screen",
          "Using a UIButton to Launch the OptionScreen",
          "Opening and Closing the Options Screen",
          "NSTimer / SKAction for Fading and Tinting"
        ],
        "UISwitches, UISliders, UISegmented Controls and More": [
          "UISwitches",
          "UISliders",
          "UISegmentedControls",
          "UIButton Groups"
        ],
        "The UIPickerView": [
          "Introduction",
          "UIPickerView with a Single Component Wheel",
          "Using a Property List to Populate the UIPickerView",
          "Switching to Three Component Wheels",
          "Spinning to Default Values Based on the Property List",
          "Interconnected and Independent Wheels",
          "Testing from the Main Class for a Change in the UIPickerView",
          "Return to Game Button"
        ],
        "NSUserDefaults and NSNotifications": [
          "NSUserDefaults",
          "NSNotifications"
        ]
      },
      "requirements": [
        "Mac with Xcode 5 or higher"
      ],
      "description": "In this tutorial, we will focus entirely on creating an Options or Preferences screen, using a Single View Application (or UIView based project) or Sprite Kit based project. We'll create UISwitches, UIButtons, UISliders, UISegmentedControls (and groups of buttons that act like segmented controls), and finally, a UIPickerView. Picker views can be made up of single or multiple columns of \"spin-able\" data (for example, Apple's Clock app has a Timer function made up of a double column UIPickerView).\nIn our hypothetical project we will create a 3-column picker view which populates itself using data from a Property List file. This data is split into a column for the level name (\"Ocean, Bad Lands, etc\"), a column for the mode of game play (\"Kill X\" number of enemies, \"Collect X\" number of coins, or \"Beat the Clock\") and third column for a number parameter to tweak the difficulty of each game mode (for example, you could add more time to the \"Beat the Clock\" mode or add more enemies to kill). We will make the wheels interconnected as well. So if you spin the first wheel to set the level, it will change the other two wheels to default to the settings defined in the Property List for the level. If you spin the middle wheel to change the game mode, it will automatically change the third wheel to use a different range of numbers (one mode of play might be best with a small range like 1-15, but another might work better in increments of ten, like 60-300).\nAll of our data is stored in a singleton AppData class, which serves as a go-between to use (or test) our preference variables with any other class. You'll see how to test any changes made in the OptionScreen class with the main game / app class.\nThe source projects are saved in increments throughout the tutorial series, and uploaded in the Supplemental Materials tab at notable breakpoints. You'll get both UIView and Sprite Kit based projects. The images to use are included as well.",
      "target_audience": [
        "Anyone already developing an iOS app or planning to."
      ]
    },
    {
      "title": "Create a Live Update chat app with Swift IOS8 and Xcode.",
      "url": "https://www.udemy.com/course/swiftprogramming/",
      "bio": "One on one tutorials on how to develop a cloud storage, Live Update chat app with Swift Programming language in IOS8.",
      "objectives": [],
      "course_content": {
        "Live Update Development with Parse SDK": [
          "Introducing Parse IOS SDK",
          "Adding parse to Xcode project"
        ],
        "Getting our hands dirty.": [
          "Creating connection between parse and app.",
          "Views and Viewcontrollers",
          "Auto-layout",
          "User registration page",
          "Seques"
        ],
        "Working with the backend": [
          "Storing user objects in parse.",
          "Creating user status objects in parse",
          "Working with table views",
          "Populating table views",
          "Getting status from server to app.",
          "Logout users",
          "Login users and more authentication.",
          "Sharing data between view controllers"
        ],
        "Source Code": [
          "Source Code"
        ]
      },
      "requirements": [
        "Mac",
        "Xcode",
        "Basic to none Swift programming skills"
      ],
      "description": "Welcome to this Swift programming course where you will learn how to develop a cloud powered Live Update chat application.\nMy Name is Ronny and I am a software developer at Team App Creative. I have been programming online for over 5 years where I Initially started with PHP and Wordpress plugin development.\nCurrently I am focused in programming with Java, Swift, Android and IOS applications.\nI designed to course first of all because I love to teach. I have an extensive list of videos on youtube teaching different programming languages. Secondly, it is for those seeking to learn and develop an IOS application regardless of programming skills and/or background. newbies, pros, students, entrepreneurs e.t.c.\nWe will be using a common software development methodology known as Model view controller (MVC) pattern where we will separate data from view and controllers and see how to make them interact appropriately.\nAside from the IOS course in Swift, I also include a FREE and COMPLETE video course for the same app but in Android using Java. You will learn everything it took to get this same app up and running in Android. In short, you are getting a complete mobile developer package program for pennies if you ask me.\nThe IOS course covers everything you need to know on how to start and deploy a working chat application. Along the process, you will learn how to work with button, textfield, table view, view controllers, views, parse, segues, auto-layout and many more.\nJoin now as you have 30 day days no question money back guarantee by Udemy. If at any moment you feel unhappy about any video, you can request a refund within the 30 days of enrollment. You really have nothing to lose.\nSee you inside!\nregards,\nRonny Kibet.",
      "target_audience": [
        "Students",
        "Enterprenuers",
        "Web and mobile developers",
        "Swift programming enthusiasts."
      ]
    },
    {
      "title": "A-Z Android App Development : AdMob, Firebase, Figma.",
      "url": "https://www.udemy.com/course/a-z-android-development-also-learn-admob-firebase-figma/",
      "bio": "Comprehensive A-Z Android Course: Play Console, AdMob, Firebase, Figma, Android Studio, JSON. Learn, Build and Publish.",
      "objectives": [
        "Android Studio Mastery: You'll become proficient in Android Studio, the industry-standard integrated development environment (IDE) for Android app development.",
        "Java and Kotlin Proficiency: Gain a deep understanding of both Java and Kotlin, the primary programming languages for Android development. Choose the language t",
        "User Interface Design with Figma: Discover the art of creating captivating user interfaces using Figma, a powerful design tool. From wireframing to prototyping,",
        "Firebase Integration: Leverage the capabilities of Firebase to supercharge your Android apps. Explore authentication, real-time database, cloud storage, and mor",
        "Monetization with AdMob: Learn how to monetize your apps through Google's AdMob platform. Implement ads strategically and maximize your revenue potential.",
        "Data Storage and Management: Master various techniques for data storage, including SQLite databases, shared preferences, and Firebase Realtime Database. Ensure",
        "Material Design Implementation: Implement Google's Material Design principles to create modern, visually appealing, and user-friendly apps that adhere to indust",
        "Publishing on Google Play Store: Understand the process of preparing, testing, and publishing your Android apps on the Google Play Store, reaching millions of p",
        "Advanced Topics: Delve into advanced topics based on your interests, including push notifications, background processing, in-app purchases, and more.",
        "App Testing and Debugging: Learn effective testing strategies and debugging techniques to ensure your apps are free of bugs and provide a smooth user experience",
        "Career Development: Receive guidance on building a strong portfolio, crafting résumés, and exploring job opportunities in the Android app development field.",
        "App Marketing Strategies: Discover strategies for marketing your apps and gaining visibility on the Play Store."
      ],
      "course_content": {
        "Introduction": [
          "Welcome and Course Overview",
          "Course Structure and Curriculum"
        ],
        "JAVA": [
          "Features of Java",
          "Setting up Intellij",
          "Variables",
          "Data Types",
          "Operators",
          "if-else statement",
          "switch statement",
          "Odd or Even",
          "Day of the week",
          "Looping with for",
          "Looping with while",
          "Looping with do-while loops",
          "Calculating Compound Interest",
          "User Authentication",
          "Positive Number",
          "CheckerBoard",
          "Arrays and ArrayLists",
          "Maps and HashMaps",
          "Sets and HashSets",
          "Lists and LinkedLists",
          "Sum Numbers",
          "ArrayList Name Manipulation",
          "Word Frequency Counter",
          "Basic HashMap Usage",
          "Elemental Set Exploration",
          "Average Calculator",
          "Linked List Problem",
          "try-catch Blocks",
          "Iterators",
          "Introduction to Object-Oriented Programming (OOP)",
          "Classed and Objects",
          "Encapsulation",
          "Inheritance",
          "Polymorphism - Method overriding",
          "Polymorphism - Method Overloading",
          "Abstraction",
          "Interfaces",
          "final and static",
          "Custom Exception",
          "enums",
          "Inner Classes",
          "QUIZ - OOPs Theory",
          "QUIZ - OOPs Code"
        ],
        "Introduction to Android Development": [
          "Understanding the Android ecosystem",
          "Setting up development environment"
        ],
        "Widgets": [
          "TextView",
          "EditText",
          "Button",
          "ImageView",
          "CheckBox",
          "RadioButton",
          "Switch",
          "SeekBar",
          "Spinner",
          "RatingBar",
          "WebView"
        ],
        "Image Loading and Caching Libraries": [
          "Glide",
          "Picasso"
        ],
        "Layouts": [
          "Linear Layout",
          "Relative Layout",
          "Constraint Layout",
          "Frame Layout",
          "Grid Layout",
          "Table Layout",
          "Scroll View"
        ],
        "Intent": [
          "Explicit Intents",
          "Parcelable",
          "Implicit Intents"
        ],
        "Recycler View - LinearLayoutManagement": [
          "ListView",
          "Item design",
          "Model and Adapter",
          "Full integration"
        ],
        "Animations": [
          "Animation - Intent",
          "Animation - Widgets",
          "Lottie Animation"
        ],
        "Material Design": [
          "Material Theme",
          "Material Icons",
          "Floating Action Button",
          "Snackbar",
          "TextInputEditText"
        ]
      },
      "requirements": [
        "Beginners with No Coding Experience: If you've never written a line of code in your life, don't worry. We'll start from scratch, introducing you to the fundamentals of programming and gradually guide you through the intricacies of Android app development.",
        "Device for Development: Access to a computer (Windows or macOS) is required for running Android Studio, the primary development environment for Android apps. Ensure your computer meets the minimum system requirements for Android Studio.",
        "Internet Connection: A reliable internet connection is essential for downloading software, SDK components, and course materials. High-speed internet is recommended for smoother downloads and updates.",
        "Enthusiasm and Dedication: A passion for learning and dedication to mastering Android app development are invaluable. Be prepared to invest time and effort into practicing, building projects, and troubleshooting.",
        "Computer Specifications: While Android app development can be done on a wide range of hardware, having a computer with at least 8GB of RAM and a multi-core processor will provide a more comfortable development experience.",
        "Android Device (Optional): While not mandatory, having access to an Android device for testing your apps on physical hardware is advantageous. Alternatively, you can use the Android Emulator provided by Android Studio."
      ],
      "description": "Embark on a transformative journey through our A-Z Android Development course, where each module is designed to elevate your expertise and empower you with hands-on skills.\n\n\nAdMob Mastery:\nMonetize your apps effectively with in-depth AdMob integration.\nFirebase Dynamics:\nHarness the power of Firebase for dynamic and feature-rich applications.\nFigma Design Proficiency:\nDesign seamless and intuitive user interfaces using Figma.\nAndroid Studio Expertise:\nDive into the core of Android app development with Android Studio.\nSQLite Data Handling:\nExplore data handling with SQLite for efficient storage and retrieval.\nJSON Manipulation:\nGrasp JSON for effective data interchange and manipulation.\nPlay Console Deployment:\nNavigate the intricacies of deploying apps using the Google Play Console.\nComprehensive Learning Journey:\nFrom novice to expert, master the entire Android development ecosystem.\nHands-On Practical Insights:\nGain practical, hands-on insights into each facet of the development process.\nBuild, Optimize, and Publish:\nEquip yourself with the skills needed to confidently build, optimize, and publish Android applications.\nJoin us in crafting real-world projects such as a Calculator app, Chat app, Currency Converter, Todo app, Weather app, Atlas, and Torch app. These projects offer tangible applications of the skills you acquire, ensuring that you not only learn but also create impactful Android applications. Let's build together and unleash the potential of Android app development.",
      "target_audience": [
        "Are you ready to dive into the exciting world of Android app development? Our Comprehensive Android App Development course is designed to take you from a beginner to a confident Android app developer in no time. Whether you're looking to build your own innovative apps, advance your career in software development, or start a new business venture, this course is your gateway to achieving your goals.",
        "Beginners with No Coding Experience: If you've never written a line of code in your life, don't worry. We'll start from scratch, introducing you to the fundamentals of programming and gradually guide you through the intricacies of Android app development.",
        "Students and Tech Enthusiasts: Whether you're a high school or college student eager to learn app development or a tech enthusiast looking for a new hobby, this course provides a solid foundation.",
        "Software Developers Switching to Android: Are you a web developer, iOS developer, or software engineer looking to expand your skillset? Android app development is an excellent choice. We'll help you transition smoothly.",
        "Entrepreneurs and Business Owners: If you have a brilliant app idea that could revolutionize the market, understanding Android app development will give you the insight and skills to bring your concept to life.",
        "Career Advancers: For those seeking career advancement, Android development is a valuable skill in high demand. Enhance your résumé and open up new job opportunities."
      ]
    },
    {
      "title": "SpriteKit Essentials for iOS Game Development",
      "url": "https://www.udemy.com/course/spritekit-essentials-for-ios-game-development-beta/",
      "bio": "Create interactive 2D games using Swift, physics bodies, and SKActions",
      "objectives": [
        "Understand and implement physics bodies and gravity to create realistic interactions in SpriteKit scenes",
        "Use SKActions effectively to animate nodes with movements, rotations, scaling, fading, and color changes",
        "Configure and manipulate scene elements such as background images, positioning, and centering nodes for polished game layouts",
        "Implement collision detection and physics interactions to create responsive and dynamic game behavior"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started with SpriteKit: Building Our First Scene": [
          "Introduction to SpriteKit",
          "Game Settings",
          "Let's make a Scene",
          "Creating a Custom Game Scene",
          "Change Square Colors with a Custom Color Picker",
          "Counting the Number of Taps",
          "Introducing Gravity and Physics Body",
          "Adding a Static Floor with Physics Body",
          "Adding Sound Effects using SKAction",
          "Adjusting View Rotation and Gravity Dynamics",
          "Introducing Randomness to Square Rotations with zRotation",
          "The Splash Screen"
        ],
        "SpriteKit Code Snippets": [
          "SpriteKit + SwiftUI- Building a Blue Square and Boilerplate for Our Snippet",
          "SpriteKit Basic Code Snippet",
          "Background Node with Alpha Component",
          "Setting up a Background Image",
          "Center Node",
          "Falling Ball Snippet",
          "Ground Physics Body"
        ],
        "SKAction": [
          "Introduction and Setting up the Project",
          "Position and Orientation Demo",
          "Scale Action Demo",
          "Fading",
          "Colorize",
          "Real-World Gaming Example using SKAction",
          "EXERCISE - Randomly Spawn Nodes",
          "SOLUTION - Randomly Spawn Nodes"
        ],
        "Animations using SpriteKit and Particle Emitters": [
          "Introduction to Exploring Animations with SpriteKit and Particle Emitters",
          "Text with Background Shape",
          "Creating the Particle Emitter",
          "Animated Sprite Text View",
          "Left and Right Sprites",
          "Creating the Animations"
        ],
        "Match the Target Game": [
          "Introduction",
          "Organizing State and Project Structure",
          "Downloading Images and Sound Effects",
          "Game Type Enum",
          "Game Settings",
          "Game Scene Structure, Init and Defining the Shape Class",
          "Implementing the Shape Class",
          "Implementing didMove and Populating the Grid",
          "Create Shape",
          "Rendering the Game Grid in the Content View",
          "Building the Game Info Panel",
          "Presenting the Game Over Sheet",
          "Game Over View",
          "Reset Game",
          "Create Shape Correct vs Incorrect Answer",
          "Handling Incorrect Answers",
          "Handling Correct Answers",
          "Update Target",
          "Get Random Shape",
          "Adding Game Reset Functionality and Assigning a Scene ID"
        ],
        "Collisions & Contacts": [
          "Introduction and Project Setup",
          "Creating a Physics Category",
          "Implementing didMove",
          "Creating the Static Layer",
          "Start Spawning Shapes",
          "Circles and Triangles in Action",
          "Reset Shapes",
          "Get a Sound Effect",
          "Circle and Square Contact",
          "Triangle Fill Shader"
        ],
        "Snake Game": [
          "Introducing the Snake Game",
          "Setup the Project with a Gradient Background",
          "Sound, Image and Particle Resources",
          "Setup Physics",
          "Structure of Setup Game",
          "Reset Values in Setup Game",
          "Adding the Grid to the Game Layer",
          "Create the Buttons",
          "Create Score Label",
          "Add Snake Part",
          "Spawn Food",
          "Add a breathing animation",
          "Adding a Snake Body",
          "Refactor and Organize Your Code",
          "Adjusting Setup Physics to Snake Body",
          "Add Snake Head",
          "Compute Next Head Position",
          "Move Snake",
          "Update Snake Position",
          "Adjusting Collision Bit Mask of Food",
          "Contact with didBegin",
          "Game Over",
          "Background Music",
          "Using touchesEnded to Respond to Button Tap",
          "Toggle, Increase and Decrease Volume",
          "Eat Sound Action",
          "Spawn Particle",
          "Creating the Particle Emitter",
          "Eating Sound Effects in Action",
          "Creating the Splash Screen",
          "Adding the Splash Screen to the Content View"
        ]
      },
      "requirements": [
        "Basic familiarity with Swift programming (preferably SwiftUI basics)",
        "A Mac computer with Xcode installed",
        "No prior experience with SpriteKit is required"
      ],
      "description": "Welcome to the amazing SpriteKit Essentials for iOS Game Development, a hands-on course designed to help you master the core features of Apple’s SpriteKit framework and create compelling, visually impressive 2D games on iOS. Whether you’re an aspiring game developer or an experienced Swift programmer wanting to expand your skill set, this course provides a practical, step-by-step approach to game development using SpriteKit.\nThroughout the course, you’ll explore how to work with physics bodies and gravity to simulate realistic interactions, and use SKActions to animate game objects with smooth movements, rotations, scaling, fading, and color effects. You’ll also learn how to set up scenes by adding background images and positioning nodes precisely to build polished, professional game environments. Importantly, you will implement collision detection and physics interactions to create responsive and dynamic gameplay experiences.\nThis course is perfect for beginners with basic Swift knowledge who want to dive into the exciting world of iOS game development. No prior experience with SpriteKit is required! Create a snake game using background music, sound effects, shaders, SKActions, particle effects, animations, collision detection and more advanced techniques.\nEnroll now and start building interactive, fun, and engaging games with SpriteKit today!\nEnjoy the course and Happy Coding!",
      "target_audience": [
        "Swift programmers looking to expand their skills by adding game development techniques to their toolkit.",
        "Anyone curious about game development who wants a practical introduction to SpriteKit with hands-on examples and code snippets."
      ]
    },
    {
      "title": "Blackberry 10 Native Development using Cascades",
      "url": "https://www.udemy.com/course/blackberry-10-native-development-using-cascades/",
      "bio": "A guide to making amazing Blackberry10 apps",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introducing BB10 native development"
        ],
        "Setting Up your environment": [
          "Request a Blackberry id and Vendor account",
          "Installing Blackberry Momentics IDE and SDKs",
          "Install a Blackberry Simulator",
          "Setup your own device for development"
        ],
        "Introducing QML": [
          "Your first app: Hello World! and the Application file structure",
          "QML Fundamentals I: Containers",
          "QML Fundamentals II: Object names and IDs",
          "QML Fundamentals III: Signal Handlers",
          "QML Fundamentals IV: JavaScript",
          "App: Image Opacity",
          "ImageOpacity.qml"
        ],
        "APP: BMI Calculator": [
          "App: BMI Calculator",
          "App: BMI Calculator II - Implementing Design",
          "App: BMI Calculator - Design II",
          "App: BMI Calculator III - Responding to Events",
          "bmicalculator.qml",
          "Bmifunctions.js"
        ],
        "QML: Navigation": [
          "Page",
          "Sheet",
          "Navigation Pane",
          "Tabbed Pane",
          "Menu",
          "App: Updated BMI Calculator",
          "App: Updated BMI Calculator II",
          "BmiCalculator.qml"
        ],
        "QML: Custom Components": [
          "Custom components",
          "Custom Properties",
          "Custom Signals"
        ],
        "C++ and QML": [
          "Structure of a Blackberry Native program - C++",
          "Defining a class - Header file",
          "Implementing a class: Source file",
          "Variables",
          "Functions",
          "Control Structures",
          "Arrays",
          "Pointers",
          "Pass values from C++ to QML",
          "Access C++ objects from QML"
        ],
        "QML: List and Data Models": [
          "List",
          "List view",
          "SQLite",
          "Filling List with Database",
          "Saving to Database"
        ],
        "Designing for mutilple devices": [
          "Static Assets Selection",
          "Space Quotas",
          "Design Units"
        ],
        "Submitting you App to Blackberry world": [
          "bar-descriptor.xml: Icons, Splash screens, Permissions, etc",
          "Packaging your app",
          "Vendor Portal"
        ]
      },
      "requirements": [
        "We will guide you through the steps to download and install your environment",
        "Windows, Linux or Mac OSx machine"
      ],
      "description": "Blackberry 10 Development: Learn by making native apps is the most complete Blackberry 10 course on Udemy. Starting from scratch, you will learn how to make stunning apps for this platform.\nYou will be introduce to programming 3 languages: QML, C++ and Javascript\nLooking for a course to start Blackberry Development, you will be pleased with what this course has to offer.\nThe Curriculum includes:\nBlackberry ID creation\nEnvironment setup\nMomentic IDE\nQML\nJavascript in QML\nButtons, Text, Images\nLayouts and views\nNavigation\nC++ and QML integration\nData storage and persistence\nAudio, video and camera\nSensors\nLocalization\nApp submission\nWe will start with the basics. Setting up you environment, device and simulator and building a simple app.\nWe will then move to learning QML and see how Javascript is integrated. We will cover the UI elements such as buttons, text, etc.\nThen we will see the navigation in an Blackberry app before going to the heavy stuff, namely C++ integration.\nWe will progress to more advanced features such as data storage, audio & video and device sensors.\nYou will get plenty of knowledge from this course. Come on and join!",
      "target_audience": [
        "This course is meant for anyone looking to learn Blackberry 10 native development with QML, Javascript and C++. No programming experience is needed. However, having some programming background is a plus"
      ]
    },
    {
      "title": "Android Freelance Masterclass",
      "url": "https://www.udemy.com/course/android-freelance-masterclass/",
      "bio": "Android Mastery: Freelance Success in Design, Networking, Project Management, and Client Relations",
      "objectives": [
        "Learn how to make money online by building apps",
        "Master the art of client attraction strategies",
        "Establish a full-time or part-time business",
        "Navigating the Freelance Ecosystem"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Android Freelancing landscape",
          "Exploring opportunities and trends in the market"
        ],
        "Setting Up Your Freelance Business": [
          "Legal considerations and business registration",
          "Creating a professional online presence"
        ],
        "Client Acquisition and Marketing": [
          "Crafting a compelling freelancer profile",
          "Strategies for finding and attracting clients",
          "Effective use of social media and online platforms"
        ],
        "Project Scoping and Proposal Writing": [
          "Understanding client requirements",
          "Writing clear and persuasive project proposals",
          "Negotiating terms and setting expectations"
        ],
        "Client Communication and Collaboration": [
          "Establishing effective communication channels",
          "Managing client expectations throughout the project",
          "Collaborative tools for remote work"
        ],
        "Freelance Project Management": [
          "Time management and task prioritization",
          "Setting realistic project timelines",
          "Handling multiple projects simultaneously"
        ],
        "Pricing and Contracts": [
          "Setting competitive and fair rates",
          "Drafting freelance contracts and agreements",
          "Invoicing and payment processing"
        ],
        "Building Client Relationships": [
          "Nurturing long-term client relationships",
          "Handling client feedback and revisions",
          "Providing excellent customer service"
        ],
        "Freelancer's Toolkit": [
          "Essential tools for freelance Android developers",
          "Version control and collaborative coding platforms"
        ],
        "Staying Competitive and Upskilling": [
          "Keeping up with industry trends",
          "Continuous learning and skill development",
          "Building a personal brand in the freelance space"
        ]
      },
      "requirements": [
        "Android Development Basics"
      ],
      "description": "Embark on a journey to excel in freelance Android development. This masterclass equips you with efficient coding practices, powerful networking strategies, and adept project management skills. Navigate the intricacies of client relations, emerging with the skills needed for success in the competitive freelance landscape. Elevate your career with comprehensive training in the core aspects of Android freelance mastery.\nAt the end of the course, you will receive a certificate!\nWhat will the course cover:\n•  Freelance Android Development\n•  Setting Up Your Freelance Business\n•  Client Acquisition and Marketing\n•  Project Scoping and Proposal Writing\n•  Client Communication and Collaboration\n•  Freelance Project Management\n•  Pricing and Contracts\n•  Building Client Relationships\n•  Freelancer's Toolkit\n•  Staying Competitive and Upskilling\nCourse requirements:\n•   Have knowledge of Android development\n•   You need a computer, either a PC (Windows, Linux) or a Mac, with an internet connection\nAbout the instructor:\nI am an Android developer with 6 years of experience. I have successful apps in Google Play (150k+ downloads). I am willing to help and guide anybody who wants to learn how to become a great Android freelancer!\nWhether you're looking to advance your career or start your Android Freelance adventures, the Android Freelance Masterclass course is an essential resource for anyone looking to succeed in the highly competitive world of Android development. Don't let your lack of preparation hold you back from your dreams in Android development.\nEnroll now and take the first step toward achieving your career goals!\nClick the BUY NOW button and start learning.",
      "target_audience": [
        "Aspiring Android Developers: Individuals starting their journey in Android app development.",
        "Freelance Enthusiasts: Those interested in freelancing with Android development skills.",
        "Junior Developers: Recent graduates or junior developers seeking practical guidance.",
        "Career Switchers: Professionals transitioning into Android development and freelancing.",
        "Self-Motivated Learners: Individuals motivated to learn at their own pace online."
      ]
    },
    {
      "title": "Explaining Programmatic UILayouts for UIKit",
      "url": "https://www.udemy.com/course/explaining-programmatic-uilayouts-for-uikit/",
      "bio": "Build UIKit screens in pure Swift: Auto Layout, Stack Views, Diffable Tables & Search — no storyboards.",
      "objectives": [
        "Build UIKit screens entirely in code; remove storyboards and set the root in SceneDelegate.",
        "Master Auto Layout anchors & layout guides; correctly wire UIScrollView content/frame guides.",
        "Compose responsive UIs with UIStackView using proper spacing, alignment, and distribution.",
        "Create a small Theme (colors, spacing, radii) for visual consistency and reuse.",
        "Implement reusable card components and buttons, configured via lightweight structs and closures.",
        "Display lists with UITableView + Diffable Data Source; update via snapshots with animations.",
        "Add live search using UISearchController and filter results without duplicating arrays.",
        "Apply accessibility, Dynamic Type, and Dark Mode–friendly styling across components.",
        "Organize code with MVVM and dependency injection; swap Mock/Live APIs easily.",
        "Debug layout issues: ambiguous constraints, safe-area mistakes, and performance pitfalls."
      ],
      "course_content": {
        "Introduction": [
          "Ensuring the Your App Doesn't Use the Storyboard.",
          "Creating the first basic Stock Display App",
          "What is the programmatic approach of coding in UIKit vs using the Storyboard?",
          "The Basics of using Storyboard for UIKit.",
          "Advantages of Creating Views Programmatically in UIKit",
          "What is a UIStackView?",
          "Coding the StackView",
          "Advantages of the function 'private func createStockLabel'",
          "Coding the app programmatically using MVC Design Pattern"
        ],
        "UIViews and UIViewControllers": [
          "UIViews vs UIViewControllers and how they work.",
          "Composable UIKit Cards: A Clean Pattern for Scalable UIs",
          "Composing the UIKit Cards"
        ],
        "UIKit Controls": [
          "Lecture: Displaying Car Data in CarSearchViewController (UIKit + Diffable)",
          "Coding the CarSearchViewController"
        ]
      },
      "requirements": [
        "A Mac with Xcode 15+ installed.",
        "Basic Swift syntax: variables, functions, structs/classes, optionals.",
        "Familiarity with UIKit (views + view controllers).",
        "Comfort with Auto Layout; stack views experience is helpful.",
        "iOS 15+ simulators installed (an iPhone device is optional).",
        "Know how to create and run a new Xcode project.",
        "Basic table view and navigation controller concepts.",
        "Willingness to build UI without storyboards (programmatic UI).",
        "Ability to read Apple docs and debug build errors.",
        "Optional: basic Git (clone/commit) to pull sample code."
      ],
      "description": "“Explaining Programmatic UILayouts for UIKit” is a hands-on, live-coded course that teaches you how to build iOS interfaces entirely in Swift—clean, testable, and production-ready. We start by removing the storyboard and bootstrapping the app via SceneDelegate, then lay out views with anchors, layout guides, and UIStackView so your screens adapt to different devices and Dynamic Type.\nYou’ll create a small design system (Theme for colors/spacing/radii) and reusable components (CardView, PrimaryButton, ActionCard). From there we build a real feature: a Car Search screen powered by a CarAPI (mocked for the course). You’ll wire a programmatic UITableView, use a Diffable Data Source with snapshots for smooth updates, and integrate a UISearchController to filter results without duplicating arrays. We’ll also cover scroll view best practices (contentLayoutGuide vs. frameLayoutGuide), empty/error states, currency formatting, keyboard behavior, and Dark Mode.\nArchitecture stays pragmatic: MVVM-style view models and dependency injection so you can swap the mock for a live API later. Along the way, you’ll see common pitfalls and how to debug them—ambiguous constraints, safe-area mistakes, and the classic init(coder:) crash when removing storyboards.\nBy the end, you will be able to:\nLaunch apps without storyboards and structure screens programmatically.\nCompose responsive layouts with anchors and stack views.\nRender lists with diffable data sources and update via snapshots.\nAdd fast, user-friendly search using UISearchController.\nShip consistent UIs with reusable components and a simple Theme.\nIf you’re an iOS dev who wants fewer Interface Builder headaches and more control, this course is for you.",
      "target_audience": [
        "iOS devs who want to ditch storyboards and build UIs fully in code.",
        "UIKit developers seeking reusable components and a small design system.",
        "SwiftUI-first devs who must interop with or maintain UIKit codebases.",
        "Bootcamp/CS students prepping for iOS interviews (tables, diffable, search).",
        "Indie makers building production-ready apps quickly with clean patterns.",
        "Engineers new to teams that rely on UITableView + DiffableDataSource.",
        "Developers who struggle with Auto Layout, stack views, and scroll views.",
        "Web/Android engineers transitioning to iOS and wanting practical UIKit.",
        "Tech leads standardizing programmatic UI patterns (MVVM, DI) across a team.",
        "Designers/PMs who prototype directly in UIKit and want scalable structure."
      ]
    },
    {
      "title": "Learn to integrate HealthKit in SwiftUI",
      "url": "https://www.udemy.com/course/learn-to-integrate-healthkit-in-swiftui/",
      "bio": "Build health stats app while learning how to query Apple HealthKit Store",
      "objectives": [
        "HealthKit Integration",
        "Query HealthKit Store",
        "SwiftUI",
        "MVVM"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Setup"
        ],
        "Models": [
          "Models"
        ],
        "HealthKit & Repository": [
          "HealthKit Auth",
          "HealthKit Permissions & Repository"
        ],
        "App UI": [
          "Tile UI",
          "Chart View",
          "Detail View View Model",
          "Detail View"
        ]
      },
      "requirements": [
        "Knowledge of SwiftUI",
        "Knowledge of Swift"
      ],
      "description": "Apple introduced HealthKit back in iOS 8 and it has been improving the framework ever since. Apple has introduced many different features and now its supported on all platforms. In Apple's own terms health kit is defined as \"HealthKit provides a central repository for health and fitness data on iPhone and Apple Watch. With the user’s permission, apps communicate with the HealthKit store to access and share this data.\"\nSwiftUI makes it easy to develop apps to serve customers. SwiftUI is now in its 3rd iteration and team has been adding new features every single release. SwiftUI is fun way to create user interfaces. It makes it super easy to create UI for your apps that are supported on multiple different platforms.\nIn this course, we will combine these two powerful technologies together to bring something amazing. We will build a health stats app which will display information about your workout and other health related routines. HealthKit gathers its information from various different ways and stores that information inside HealthKit store on iOS platform. We will build an app that will query this store to pull information out from the store and display them in a much more user friendly way.\nYou will build a tile view for the app's home page which will list various different categories for stats. Upon selection of those categories, app will take user into detail screen where they will be able to look at past week's stats in a chart view along with a table listing out all the entries.\nWe will create our own small chart framework that will have capability to capture any kind of data into it and display that data in graphical format. We will build all this while following MVVM design pattern and clean coding style. You will also learn to structure your code for better organizations and we will use repository pattern to pass on aggregated content between views.",
      "target_audience": [
        "Students who wants to learn healthKit integration in SwiftUI by building real iOS App"
      ]
    },
    {
      "title": "iOS 14 WidgetKit in SwiftUI: Xcode 12",
      "url": "https://www.udemy.com/course/ios-14-widgetkit-in-swiftui-xcode-12-beta/",
      "bio": "Let's explore iOS 14's coolest feature introduced in WWDC 20: WidgetKit",
      "objectives": [
        "Swiftui",
        "WidgetKit",
        "iOS 14",
        "App Development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Building Widgets for Your App": [
          "Build Simple Widget",
          "Build Weather Widget: Download Data from API",
          "Build Weather Widget: Extend to Small, Medium and Large Family",
          "Update: XCode 12 Beta 6 Weather Widget",
          "Expense Tracking Widget: Configurable Widget",
          "Update: XCode 12 Beta 6 Expense Widget",
          "Live Quotes and Exchange Rate Widget: Creating Widget Bundle",
          "Update: XCode 12 Beta 6 Quotes and Exchange Rate Widget"
        ]
      },
      "requirements": [
        "Knowledge of SwiftUI",
        "Knowledge of Xcode"
      ],
      "description": "WWDC 20 introduced new and cool extension to your apps in form of WidgetKit. With app widget you can provide useful information about your app directly to your user's home screen. With this course you will learn all about widgets and what they have to offer.\nWe will build various widgets in this course so we can learn by doing.\nJoin us in this journey and learn all about widget kit. You will learn simple widgets to configurable widgets. You will build real weather app widget which will download weather information from API and display that in small, medium and large size widgets.\nYou will also work with Timelines and how to schedule widget updates to display dynamic content on app widgets.\n\n\nAccording to Apple widgetkit is:\nEasily build widgets and make them available across iOS, iPadOS, and macOS using the WidgetKit framework and the new widget API for SwiftUI. Widgets now come in multiple sizes, and users can visit the new widget gallery to search, preview sizes, and place them anywhere on the Home screen to access important details at a glance. They can also add Smart Stacks — sets of widgets that use on-device intelligence to surface the right widget at the right moment, based on factors like time, location, and activity.",
      "target_audience": [
        "Developers who wants to learn about new iOS 14 WidgetKit",
        "Developers who wants to learn iOS 14 and SwiftUI"
      ]
    },
    {
      "title": "Rapid Prototyping with Ionic: Build a Data-Driven Mobile App",
      "url": "https://www.udemy.com/course/learn-ionic-framework-build-a-stock-market-mobile-app/",
      "bio": "Retrieve data from multiple API's; d3js charting, caching, databasing, RSS feeds, notes, (un)follow functionalities.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "You should already be familiar with HTML and CSS, as well as very basic JavaScript.",
        "Highly recommended to commit fully to completing 100% of the course — this is an information-dense course and you may need to pause and rewind often in order to catch everything as you code simultaneously.",
        "Highly recommended to commit to putting in extra effort to research and find explanations of programming concepts, which you don't fully understand throughout the course.",
        "Highly, highly recommended to use a Mac throughout the course. Using Windows or any other OS will be fine, but there are no instructions specific to those operating systems. All of the course material is designed for Mac."
      ],
      "description": "Learn how to build an app that's featured on Ionic's Showcase!\nRapid Prototyping with Ionic: Build a Data-Driven Mobile App —\nThis course contains step-by-step lectures and implementations of HTML5, CSS3, and JavaScript web technologies on AngularJS and the Ionic framework to create a complete stock market mobile application.\nContent and Overview:\nTake advantage of the advancement of web technologies and build a mobile application that's rich with functionality yet simple to understand.\nYou will be provided with how-to videos and text material, guiding you through the process of creating a hybrid native mobile application for iOS (easily adjusted for Android too!) with coding techniques that anyone with any experience making websites can master.\nWhat you'll get from this course:\n• Valuable lectures and hours of coding tutorials\n• A full mobile application with source code to use at your discretion\n• Cutting edge and highly marketable programming skills\n• Increased confidence in your ability to make applications on your own\n• Gateway into the billion dollar mobile apps industry\nThe value of this course:\nMobile app development skills link you to a billion dollar market. This course leaves you ready to create high quality applications whether you are a programming veteran or just getting into web development.\nCourse structure and teaching style:\nYou will be taken through every step of setting up your development tools, being introduced to the coding languages to be used, and taken through the development phases of a functional mobile application, as I explain every aspect in a conversational and contextual manner without skipping a single line of code, resulting in a complete, full featured stock market app.\nLike all Udemy courses, the course itself is broken up into sections and lectures. The sections represent broad, headline subjects. Under each section, you'll find multiple lectures: this is the meat of the course. You'll see that lectures can come in various formats — screen recordings, presentations and talking head style videos, and text.",
      "target_audience": [
        "This course is meant for: (1A) web developers, front- and back-end, and/or designers with an interest in or any basic experiences with JavaScript, who want to try building hybrid mobile apps;",
        "(1B) Developers of other technologies who want to try building hybrid mobile apps using HTML5, CSS3, Sass, JavaScript, and more with AngularJS and the Ionic Framework;",
        "(1C) Beginner web developers and designers who learn at a fast pace and wish to expand their knowledge base by building and styling a simple, yet powerful and performant hybrid mobile app from the ground up;",
        "(1D) Hobby coders who want to try out AngularJS and the Ionic Framework by using HTML5, CSS3, and JavaScript to build a data-driven hybrid mobile app;",
        "Especially (1E) Tech-savvy or fast-learning entrepreneurs who need to build their own MVP mobile app at a fast pace, but don't have native programming skills, as well as (1F) anyone, with any programming background, just getting started with AngularJS and/or Ionic development who hasn't totally grasped either framework — you will build a full Ionic app from start to finish, resulting in a foundational code base, which you have written yourself, that you will be able to study, use, and improve upon in the future.",
        "This course is probably not for beginner coders who just started working with HTML and CSS, and have not yet had hands on experience with JavaScript.",
        "This course is not for anyone who has never worked hands on with HTML, CSS or any other functional coding languages."
      ]
    },
    {
      "title": "Wechat Programming from Entry to Practice",
      "url": "https://www.udemy.com/course/wechat-programming/",
      "bio": "Introduction and mastery of wechat program",
      "objectives": [
        "WeChat mini program development"
      ],
      "course_content": {
        "hello WeChat mini program": [
          "Course Introduction",
          "Course Introduction 2",
          "WeChat applet development platform and account registration",
          "Hello World applet",
          "tabBar configuration items",
          "test 1"
        ],
        "Exercise case development": [
          "Course content introduction",
          "Psychological test applet installation",
          "Add options and modify the question bank",
          "C language test logic modification",
          "Add question result",
          "test 2"
        ],
        "My page module development": [
          "Course content introduction",
          "wx.login() method to realize small program login",
          "Authorize login page development",
          "WeUI basic style library",
          "Page layout of the registration page",
          "Registration page function implementation",
          "Basic realization of my page",
          "Media component image attributes",
          "test 3"
        ],
        "Information modification module development": [
          "Course Introduction",
          "myinfo page adjustment",
          "change page layout",
          "perfect change page",
          "Add event handler submit",
          "Gender modification",
          "Use of configuration files",
          "test 4"
        ],
        "Course page module development": [
          "Course Introduction",
          "Application course number",
          "Course information module page layout",
          "Course exercise module page layout",
          "Request to join the course",
          "Get current course information",
          "test 5"
        ],
        "Course practice module development": [
          "Quote driving school test questions to do the page",
          "Complete the practice module",
          "Show the number of questions",
          "Collection module",
          "Wrong question module",
          "test 6"
        ],
        "Sign-in and ranging module development": [
          "New sign-in page tab",
          "Select location api",
          "Get current location api",
          "Clever use of button's disable attribute",
          "realizes longitude and latitude ranging(English version)",
          "test 7"
        ],
        "Initial backend and database": [
          "Installation of Wampserver and Sublime",
          "Build a local environment",
          "api realizes front-end and back-end interaction",
          "Query and increase of database records",
          "Deletion and modification of database records",
          "test 8"
        ],
        "Interface development and cloud platform": [
          "View the problem situation front-end page development",
          "Add and get the problem data table to do the problem data api development",
          "Update problem data api development",
          "Perfect front-end code",
          "New cloud application",
          "svn implements code management",
          "test 9"
        ],
        "Initial cloud development and actual combat": [
          "My first cloud development applet",
          "Cloud Development Database Guidelines",
          "Quickly create a cloud function",
          "To-do list case explanation",
          "Listening, speaking, reading and writing case explanation",
          "test 10"
        ]
      },
      "requirements": [
        "Have some programming foundation"
      ],
      "description": "This course consists of 30 instructional micro-videos, divided into 10 chapters, with content to be completed, 10 quizzes, and a total video duration of 213 minutes.\nThe course content is divided into two modules: the first module focuses on front-end development of mini-programs; the second module covers the setup of the backend environment. The accompanying offline textbook is \"WeChat Mini-Program Development from Entry to Practice: Micro-Course Video Edition,\" published by Tsinghua University Press (November 2019).\nFeatures and Highlights\nThe course team is composed of 4 teachers and over 10 undergraduate students from various grades, along with 4 graduate students, forming an online teaching team for WeChat mini-programs. Team members are proficient in languages such as PHP, HTML, CSS, and JS. Drawing on the team's years of experience in cultivating talent for WeChat applications, the course \"WeChat Mini-Program Project Development from Entry to Practice\" has been developed. This course teaches readers about WeChat mini-program development and cloud services, using the case study of the DouDou Cloud Assistant mini-program, which was developed and operated by the team. This approach aims to inspire learners' enthusiasm for mini-program development through imitation and enable them to quickly master the development of cloud-based WeChat mini-program functionalities.",
      "target_audience": [
        "Interested in WeChat applet development"
      ]
    },
    {
      "title": "Pre-Flutter & Dart: Everything To Know Before You Start!",
      "url": "https://www.udemy.com/course/pre-google-flutter-and-dart-everything-you-need-to-know/",
      "bio": "The Only Course You Need Before You Begin Learning Flutter & Dart! Can It Lead To A Career For You?",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "What You’ll Learn From This Course?",
          "What is Flutter?",
          "What is Dart?"
        ],
        "The History of Mobile App Development": [
          "Knowing Your App History"
        ],
        "Why Use Flutter?": [
          "Understanding why you should consider using Google Flutter."
        ],
        "How to Install Flutter?": [
          "Installing Flutter for Windows, Linux, and macOS"
        ],
        "Benefits of Flutter": [
          "Benefits of Flutter"
        ],
        "How Much Experience as an App Developer Should I have to use Flutter?": [
          "How Much Experience as an App Developer Should I have to use Flutter?"
        ],
        "Knowing About Dart": [
          "What is Dart and Why Use It?"
        ],
        "Why You Should Consider Learning Dart in 2018": [
          "Should You Consider Learning Dart in 2018 and Beyond?"
        ],
        "Why Does Flutter use Dart?": [
          "Why did Flutter Decide to Use Dart?"
        ],
        "Frequently Asked Questions About Flutter": [
          "What is inside the Flutter SDK?",
          "Does Flutter come with a framework?",
          "Does Flutter come with widgets?",
          "How does Flutter run my code on Android?",
          "How does Flutter run my code on iOS?"
        ]
      },
      "requirements": [
        "You just need to know how to use a computer. Basic understanding of certain computer languages is a bonus."
      ],
      "description": "Before you go on start to Learn Flutter & Dart. Is it really worth learning ?\nI will give you the basic information you need to know before you dive in deep to learn Flutter & Dart.\nAs the title states, this is a Pre-Google Flutter course which means that I will go over the basics and essentials you should know about if you are curious about Google Flutter.\nApp development has gained a lot of popularity over the years and it is predicted to continue growing. There seems to be an app for everything. And this is why many people are entering this field. If you are interested, you should consider learning more about Google Flutter and Dart to see how they can help you in your app development journey.\nYou will see that the entire course has been divided into sections to make sure I’m able to convey all of the information in the easiest manner possible. The basic flow that this course follows is… first I will explain about Flutter and why it is a Software Development Kit or SDK you should know about. Then I will talk about Dart which is an object-oriented and class-defined language. I will go over benefits of both, help you understand the history of mobile app development, and most importantly I will go over the job opportunities you can have as an app developer who knows Google Flutter and Dart.\nWondering about career opportunities linked to your skills is a valid question to have. If you are considering to learn Google Flutter you should know how much money you will be able to make because of it. In this course, I have gone over the opportunities you will get as a freelancer as well as a traditional hire. There is money to be made in both paths. It all comes down to what you wish to accomplish.\nSo, in short I will go over:\nWhat is Google Flutter\nWhat is Dart\nBenefits of Google Flutter and Dart\nWhy Flutter decided to use Dart\nCareer path - Freelancing as a Google Flutter developer or as a regular hire\nAnd more!\nAgain, I thank you for considering to select this course I have created about Google Flutter and Dart. I hope it is able to provide you the information you have been looking for.",
      "target_audience": [
        "Anyone interested in learning about the basics of Google Flutter and Dart and if it can lead to a career for them."
      ]
    },
    {
      "title": "30 Days of Swift: Learn the Basics & Build an iOS App.",
      "url": "https://www.udemy.com/course/30-days-of-swift/",
      "bio": "For the next 30 days, here's your chance to jump into to programming mobile apps with Swift and iOS. Made for all levels",
      "objectives": [
        "Code in Swift",
        "Build basic iOS Apps",
        "Understand Programming Basics"
      ],
      "course_content": {
        "Welcome & Introduction": [
          "Welcome",
          "What will we build? Our iOS App Overview",
          "Getting Help"
        ],
        "Swift & Programming Basics": [
          "Day 1: Installation",
          "Day 2: Strings",
          "Day 3: Basic Math",
          "Day 4: String Substitution",
          "Day 5: Conditionals",
          "Day 6: While Loops",
          "Day 7: UI Image View",
          "Day 8: Dictionaries, Arrays, and Optionals Part 1",
          "Day 9: Dictionaries, Arrays, and Optionals Part 2",
          "Day 10: Switch Statements",
          "Day 11: Functions",
          "Day 12: Variables and Constants",
          "Day 13: Classes"
        ],
        "iOS Development Basics": [
          "Day 14: UI Table View",
          "Day 15: UI Color",
          "Day 16: UI Button",
          "Day 17: Segues",
          "Day 18: Table View Details",
          "Day 19: Image Button & Gesture Recognizer",
          "Day 20: ScrollView",
          "Day 21: Web View",
          "Day 22: Custom NavBar",
          "Day 23: Animate",
          "Day 24: Tab Bar Controller"
        ],
        "Create a Simple App in Swift": [
          "Day 25: Simple - UI Collection View",
          "Day 26: Simple - MapKit",
          "Day 27: Simple - Custom Class for Data",
          "Day 28: Contact WebView",
          "Day 29: Menu Item Details",
          "Day 30: Simple"
        ],
        "Next Steps & Thank you!": [
          "Next Steps & Thank you!"
        ]
      },
      "requirements": [
        "Mac OS X with Yosemite Installed",
        "Eagerness to build apps!",
        "See lecture for Windows/Linux Support"
      ],
      "description": "Work Alongside Me & Learn Exactly How to Code in Swift and build an iOS App. (Last Updated: Dec-20-2014)\n\nNever coded before? No problem. We've worked with over 150,000 students just like you!\nThe need to learn to code today is much like the need to learn to read when the printing press was introduced the year 1377.\nThe printing press? Yes. It was an innovation that made books widely available and 100x easier to pick up a book and read... that is, if you knew how.\nNow, we have computers. And lots of them. Many of us have computers in our pockets, multiple ones in our homes, at our jobs, and even in our TVs. We have more power in our mobile devices today than top of the line computers did 10 years ago all for a fraction of the cost.\nFurthermore, is the power these mobile devices give us. We now have amazing ability to do things that was previously thought unimaginable. Get this, a person in Kenya today has more access to information than the United States President, Bill Clinton, did in 1995. That's thanks to two things: (1) The Internet and (2) Mobile Devices.\nThe Internet is a collection of powerful computers that talk to each other. How do they talk? Through CODE. The power of the computers is increasing exponentially while the cost is decreasing exponentially everyday thanks to Moore's Law.\nSince building computers, even basic ones, can be very expensive, learning to Code and Coding apps have become king.\nIn this course, we're going to take you through the fundamentals of Coding, also known as Programming, through a programing language called Swift. This is a new language created by Apple in an effort to get more people coding, more quickly, and more powerfully than ever before.\nWhere's the next Instagram coming from? The next SnapChat? The next What's App? Start learning to code today and it may come from you.\nApps are the result of Ideas in Action written in Code.\nAfter completing this course you will have a strong foundation in:\nSwift\niOS Development (the Cocoa Touch UI Framework)\nProgramming Fundamentals\nThe Xcode Application (the code-editor for writing our application on Apple)\nThere are many reasons to learn to code, here are a few:\nBuild new, 21st century, skills\nA new way of thinking due to the logical nature of coding\nCoders are in high demand, especially iOS developers.\nEverything in every industry is up for grabs. Uber and AirBNB are examples of this.\nWhatever can be automated will be and automation requires code and coders.\nCreate an app business\nBecome an Technology consultant for untapped industries.\nEmployment for Coders is BOOMING, everywhere, in every industry.\nOnce you know 1 language well, the world of programming is your oyster. That means learning Python, Ruby, Objective-C, Java, Javascript, and many more is a crazy amount easier.\nMany, many more.\nCourse includes:\nRelated source code (what you learn to write to made programs)\nHD video screencasts showing you step-by-step how to code on a real computer\nLive Support from Instructor and Community\n24/7 Streaming\n30 Day Money-back Guarantee\nHours of Content with Free Video Updates\nEmail Support from Instructor",
      "target_audience": [
        "New mobile app developers",
        "New to coding (in general) or just new to Swift"
      ]
    },
    {
      "title": "Flutter chat application with firebase",
      "url": "https://www.udemy.com/course/flutter-chat-application-with-firebase/",
      "bio": "Build a complete mobile chat application using Flutter, Firebase and Shared Preference.",
      "objectives": [
        "Flutter Chat App using Firebase Firestore",
        "Flutter Backend Development",
        "Firebase Firestore",
        "Flutter Frontend Development",
        "Shared Preferences in Flutter"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started": [
          "Create flutter project and install dependencies",
          "Create firebase project and setup",
          "Initilalize Firebase Project"
        ],
        "Authentication": [
          "Sign Up Screen",
          "Login Screen",
          "Shared Preferences/User Model/Constants",
          "Firebase firestore User collection",
          "Sign Up Functions",
          "Login Function",
          "Complete Authentication"
        ],
        "All Chat Screen": [
          "All Chat Screen Part 1",
          "All Chat Screen Part 2"
        ],
        "Seach Module": [
          "Search Screen Part 1",
          "Search Screen Part 2",
          "Search Function",
          "Firestore Chat Room Collection",
          "Create Chat Room Function",
          "Create Chat Room Function Test"
        ],
        "Conversation": [
          "Conversation Screen Part 1",
          "Conversation Screen Part 2",
          "Conversation Function",
          "Conversation Function Test"
        ],
        "Wrap Up All": [
          "Get Chat Rooms to All chat Screen",
          "Complete Course"
        ]
      },
      "requirements": [
        "Basic things with Flutter"
      ],
      "description": "You don't need to learn Android/ Java and iOS/ Swift to build real native mobile apps!\nFlutter - a framework developed by Google - allows you to learn one language (Dart) and build beautiful native mobile apps in no time. Flutter is a SDK providing the tooling to compile Dart code into native code and it also gives you a rich set of pre-built and pre-styled UI elements (so called widgets) which you can use to compose your user interfaces.\n\n\nFlutter is extremely trending and gets used for major Google apps like their Adwords app - it's now marked as \"ready for production\", hence now is the time to jump in and learn it!\n\n\nWHAT WILL WE BE BUILDING?\nIn this course, we are going to build a flutter chat application using firebase as the backend of this application.\nWHAT ARE THE FEATURES IN THIS APP?\nGood looking Real-time Messaging Application\nFinding other Users by searching\nRealtime Messaging\nAuthentication\nState Management\nHandling and validating user input\nAt the end of this course you will get clear idea about how to use flutter with firebase and how to manage use shared preferences inside an application. Also you will know what are the main important concepts like Future Builders, Stream Builders and etc.\nWe hope you will get good experience about flutter and this course will lead you to be a mobile developer. Good Luck All !!!\n\n\nThis course is for you if ...\nYou're interested in building real native mobile apps for the two most popular mobile platforms - iOS and Android\nYou want to explore the full set of features Flutter offers\nDon't want to spend hours learning two completely different languages\nCourse prerequisites:\nBasic programming language knowledge will help a lot but is not a hard requirement\nYou DON'T need to know Flutter or Dart\nYou DON'T need to know iOS (Swift/ObjectiveC) or Android (Java)",
      "target_audience": [
        "Beginners for flutter"
      ]
    },
    {
      "title": "Mastering Core Image with iOS 15 and UIKit",
      "url": "https://www.udemy.com/course/mastering-core-image-with-ios-15-and-uikit/",
      "bio": "Learn Core Image and Advanced Usage of CIFilters in iOS by Example",
      "objectives": [
        "Learn image processing in iOS",
        "Build image processing pipeline using Core Image Framework",
        "Build complex image effects using Core Image Filters",
        "Learn to combine, and build complex Core Image Filter Effects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Project Setup",
          "App UI Setup"
        ],
        "Deep Dive into Core Image Framework": [
          "Core Image Intro",
          "Depth Map and CGImage",
          "CIFilter Intro",
          "Image Processing Pipeline",
          "CIFilter BuiltIns",
          "Save Processed Images",
          "Image processing to create portrait effect",
          "Blend Images to Build Color Pop Effect",
          "Use Generation Filters to Generate QR code and Stipe Pattern Effect"
        ]
      },
      "requirements": [
        "Knowledge of iOS",
        "Knowledge of UIKit",
        "Knowledge of Swift"
      ],
      "description": "Core Image Framework was introduces in iOS 5 and it's been evolving ever since. Apple has put together more than 200 filters in place that can help you build complex image processing pipeline which work efficiently on still as well as video frames.\nCore image framework is metal backed and it has potential to run on both GPU and CPU. Core image optimizes image processing by applying low level techniques to get the processed image results as fast as milliseconds.\n\n\nIn this course, you will learn to use core image framework in UIKit. We will build a simple UI, in order to keep our focus on learning core image and image processing. You will learn to use various core image filters by applying them on real images. We will learn to extract depth data from image so we can process that to build complex image effects.\n\n\nYou will also learn as how to combine various different filters to build effects like Color Pop, Background Blur AKA Portrait Mode, Mosquito Net Effect. You will also learn to generate QR code using just Core Image filter.\n\n\nCourse comes with complete code so you can learn and follow along or learn the course and grab snippets from the completed code base.\n\n\nJoin me in this course and learn about this exciting framework. thank you!",
      "target_audience": [
        "Developers who wants to learn and build metal backed image processing pipeline using Core Image Framework"
      ]
    },
    {
      "title": "Learn Android Volley:Manipulating Databases Using PHP &MySQL",
      "url": "https://www.udemy.com/course/programming-with-android-volley-library-using-php-and-mysql/",
      "bio": "Develop with Android Volley library by building real world projects that manipulate databases using PHP and MySQL",
      "objectives": [
        "Install and configure Android Studio",
        "Download and setup Android Volley and Picasso libraries",
        "Install and configure Xampp server",
        "Use get and post requests using php",
        "Make a get or post requests from android using several types of Android Volley classes",
        "Process the server response in string, json and json array format",
        "Request a picture stored in the server using Picasso library",
        "Query MySQL database from Android app"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installing android studio": [
          "Hardware and software requirements",
          "Hardware and software requirements",
          "Installing android studio",
          "Downloading system images and creating android virtual device",
          "Downloading system images and creating android virtual device"
        ],
        "Android app and environment": [
          "Creating a simple app",
          "Creating a simple app",
          "Android studio development environment",
          "Essential components of android app"
        ],
        "Downloading & Setting up Volley library, Installing & configuring Xampp server": [
          "Downloading Volley library",
          "Setting up and verifying Volley library",
          "Downloading, Installing and configuring Xampp Server",
          "Downloading & Setting up Volley library, Installing & configuring Xampp server"
        ],
        "Requesting xampp server using a basic request": [
          "Creating a basic network request - Part I",
          "Creating a basic request - Part II",
          "Requesting xampp server using a basic request"
        ],
        "Requesting Xampp server and processing Json object response": [
          "Making a request to Xampp server with get method - Part I",
          "Making a request to Xampp server with get method - Part II",
          "Making a request to Xampp server with get method - Part III",
          "Making a request to Xampp server with get method - Part IV",
          "Making a request to Xampp server with get method - Part V",
          "Making a request to Xampp server with post method"
        ],
        "Requesting Xampp server and processing Json array object response and pictures": [
          "Making a request to Xampp server and processing JSON Array and images - Part I",
          "Making a request to Xampp server and processing JSON Array and images - Part II",
          "Making a request to Xampp server and processing JSON Array and images - Part III",
          "Making a request to Xampp server and processing JSON Array and images - Part IV",
          "Making a request to Xampp server and processing JSON Array and images - Part V",
          "Project Challenge : Planet information app"
        ]
      },
      "requirements": [
        "Beginner programmer with android programming",
        "Beginner programmer with java programming",
        "Beginner programmer with php and MySQL"
      ],
      "description": "This course takes you to the intermediate level of programming with Android Volley library. At First, It shows how download and install android studio, then how to be familiar with the development environment. Next, it explains how to  download, set up and configure  Android volley library as well as how to install and configure Xampp server.\nAfter that and by using in the server side php language and MySQL database ,  you make from Android app a several types of requests to Xampp server using Android Volley library classes such as StringRequest, JsonObjectRequest and JsonArrayRequest classes. Also, this courses discusses how to receive and process the response from Xampp server such as string, json or json array format. Finally, this course explains how to request a picture stored in the server side using the powerful library Picasso.",
      "target_audience": [
        "Anyone who wants to program with android volley library",
        "Anyone who wants to move to the intermediate android level",
        "Anyone who want to develop an android app that communicates with a remote database",
        "Anyone who want to request a picture stored in the server from android apps",
        "Anyone who want to develop with php,MySQL in server side and android volley library in the client side",
        "Anyone who want to manipulate json object and array"
      ]
    },
    {
      "title": "Learn to build educational apps in XCode 6 with Swift and C",
      "url": "https://www.udemy.com/course/learn-to-build-educational-apps-in-xcode-6-with-swift-and-c/",
      "bio": "Learn how to build fantastic education apps and upload them to the app store.",
      "objectives": [
        "Build 12 educational apps in Xcode 6",
        "Learn how to produce apps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Course format"
        ],
        "Very simple addition app for kids": [
          "01. Introduction to making a simple app for kids",
          "02. Designing the app",
          "03. Adding in the code to the swift file",
          "04. Adding in variables",
          "05. Adding a function to make the code easier to read",
          "06. Adding in the random numbers",
          "07. Adding in the button logic function",
          "08. Printing the answer to the random button",
          "09. Adding in the wrong answers to the button",
          "10. Adding in the correct choice logic",
          "11. Making the buttons work",
          "12. Making the next question button work",
          "13. Make sure there are no duplicate answers",
          "14. Designing the app",
          "15. Conclusion and challenge"
        ],
        "Make a small addition app": [
          "01. Making a small kids addition game",
          "02. Adding in the items",
          "03. Setting up the code",
          "04. Adding in a separate function for ease",
          "05. Testing the app and adding variables",
          "06. Selecting random numbers",
          "07. Adding in the answer logic",
          "08. Adding in the correct button logic",
          "09. Adding an if statement",
          "10. Testing and adding more functionality",
          "11. Adding in multiple choice logic",
          "12. Adding in the button logic part 1",
          "13. Adding in the button logic part 2",
          "14. Rearranging the app",
          "15. Adding in the reset button",
          "16. Fixing the GUI and testing the app",
          "17. Testing the app and fixing the button problem part 1",
          "18. Fixing the usibility portion of the app",
          "19. Fixing the if statement",
          "20. Testing the app to make sure it works before design",
          "21. Designing the app",
          "22. Course conclusion and challenge"
        ],
        "OSX Kids addition game": [
          "01. Introduction to the OSX addition game for kids",
          "02. Designing the app",
          "03. Hooking up the .h and the .m file",
          "04. Adding in the game logic void",
          "05. Adding in a void to make programming easier",
          "06. Assigning random numbers",
          "07. Printing the numbers to the screen",
          "08. Adding in the answer to the program",
          "09. Setting up the correct button logic",
          "10. Adding in the incorrect numbers",
          "11. Adding in the correct button logic",
          "12. Adding the correct answer logic",
          "13. Adding in the final stages",
          "14. Course conclusion and challenge"
        ],
        "OSX Subtraction Game for kids": [
          "01. Introduction to the kids subtraction game",
          "02. Designing the app",
          "03. Setting up the .h file and the .m file",
          "04. Adding a void to make coding easier",
          "05. Adding in the variables",
          "06. Randomizing the numbers and printing the variables",
          "07. Adding in an answer and fixing the problem",
          "08. Adding in the button answer",
          "09. Printing the correct button with the correct answer",
          "10. Adding in the icorrect answers",
          "11. Adding in the corret button boolean",
          "12. Printing the rest of the logic",
          "13. Course conclusion and challenge"
        ],
        "OSX Make an algebra addition game": [
          "01. Introduction to the Algebra addition game",
          "02. Designing the app",
          "03. Hooking up the code to the .h and the .m file",
          "04. Adding .in a void to make programming easier",
          "05. Adding in variables",
          "06. Adding in the random numbers",
          "07. Setting up the x logic",
          "08. Printing the random numbers",
          "09. Adding in the correct button",
          "10. Adding in the incorrect answers",
          "11. Adding in the correct button logic",
          "12. Adding in the button logic",
          "13. Course conclusion and challenge"
        ],
        "OSX subtraction algebra game": [
          "01. Introduction to the Algebra subtraction game",
          "02. Designing the app",
          "03. Setting up the .h and the. m file",
          "04. Adding in the variables",
          "05. Randomizing the numbers",
          "06. Adding in the x logic",
          "07. Adding in the correct answer to the button",
          "08. Adding in the incorrect button logic",
          "09. Adding in the correct button boolean",
          "10. Finishing the game",
          "11. Making sure there are no negative nubmers",
          "12. One final fix",
          "13. Course conclusion and challenge"
        ],
        "Algebra addition game": [
          "01. Introduction to the multiplication game",
          "02. Designing teh app",
          "03. Hooking up the swift file",
          "04. Adding in the variables",
          "05. Assigning random numbers",
          "06. Printing the variables to the screen",
          "07. Adding in the correct button answer",
          "08. Adding in the incorrect answer",
          "09. Setting the boolean variable",
          "10. Adding in the rest of the button logic",
          "11. Designing the app",
          "12. Course conclusion and challenge"
        ],
        "Small Subtraction app": [
          "01. Introduction to the subtraction game",
          "02. Adding in the items to the storyboard",
          "03. Adding in the code to the swift file",
          "04. Adding in the variables",
          "05. Adding in a fucntion for ease of use",
          "06. Adding in the random numbers",
          "07. Adding in some more saftey logic",
          "08. Adding the answer and",
          "09. Adding in the button logic",
          "10. Making the other buttons show wrong answers",
          "11. Filling out the other if statements with code",
          "12. Adding the if satement to the buttons",
          "13. Filling out the if satements",
          "14. Testing and adding in the reset function",
          "15. Adding in the reset logic",
          "16. Fixing the random number generator",
          "17. Designing the app",
          "18. Course conclusion and challenge"
        ],
        "Multiplication app for kids": [
          "01. Introduction to the multiplication game",
          "02. Designing the app",
          "03. Adding in the code to the swift file",
          "04. Adding in a function for extra ease",
          "05. Adding in variables",
          "06. Setting up random numbers",
          "07. Adding in the correct button logic",
          "08. Addingin the button logic",
          "09. Adding another function to make the code easier to read",
          "10. Adding in the button logic",
          "11. Adding in the button logic",
          "12.Clearing the button title",
          "13. Adding in the next question logic",
          "14. Fixing the random number and testing the app",
          "15. Designing and coloring the app",
          "16. Course conclusion"
        ]
      },
      "requirements": [
        "To know how to use a mac computer",
        "Need to have a mac for XCode"
      ],
      "description": "Have you ever wanted to learn how to build apps? This course is for you! This course will show you how to build educational apps for iOS and OSX in Xcode 6! Learn how to build apps for a very lucrative area of the app store!\nThis course will show you how to code in Swift and Objective - C. This course is for complete beginners and not experienced programmers. Learn how to build apps for yourself, your kids or somebody you know.\nJohn Bura is one of the 10 highest grossing Udemy instructors. Recently the top 10 instructors have sold over 10 million dollars of courses collectively. John Bura has been programming games since 1997 and teaching since 2002. John is the owner of the game development studio Mammoth Interactive. This company produces XBOX 360, iPhone, iPad, android, HTML 5, ad-games and more. Mammoth Interactive recently sold a game to Nickelodeon! John has been contracted by many different companies to provide game design, audio, programming, level design and project management. To this day John has 40 commercial games that he has contributed to. Several of the games he has produced have risen to the top 10 in the Apple's app store. In his spare time John likes to play ultimate Frisbee, cycle and work out.",
      "target_audience": [
        "Complete beginners",
        "NOT experienced programmers"
      ]
    },
    {
      "title": "Interesting Android Libraries.",
      "url": "https://www.udemy.com/course/interesting-android-libraries/",
      "bio": "Checkout some interesting Android Libraries.",
      "objectives": [],
      "course_content": {
        "Android Libraries": [
          "Text Scanner App",
          "Chrome Like Tab Switcher",
          "App Intro Animation Library",
          "App Intro Library",
          "Circular ImageView",
          "Fab Loading Animation",
          "Opening Instagram Directly from your Android App"
        ],
        "Android Activity LifeCycle": [
          "Android Activity LifeCycle"
        ]
      },
      "requirements": [
        "Basic Android Development Knowledge."
      ],
      "description": "Here we discuss some Android libraries that you can use in your Android Projects and make awesome Apps. In case you have any library that you would like to get featured here, do let me know. We will discuss your project and let everyone learn together. See you in the course!",
      "target_audience": [
        "Android Developers"
      ]
    },
    {
      "title": "Birthday App using Core Data with CRUD : iOS 16 & SwiftUI 4",
      "url": "https://www.udemy.com/course/birthday-app-using-core-data-with-crud-ios-16-swift-ui-4/",
      "bio": "Build Birthday App following MVVM Design Pattern and Core Data with UI in SwiftUI",
      "objectives": [
        "You will learn SwiftUI",
        "You will learn MVVM Design Pattern",
        "You will learn Core Data",
        "Learn complete development by building an app"
      ],
      "course_content": {
        "Introduction": [
          "App Intro",
          "Setup"
        ],
        "Birthday App: Core Data Logic": [
          "Core Data Model File",
          "Persistence Controller",
          "Fetch Birthdays from CoreData",
          "Save Birthday To CoreData",
          "Update Birthday Data in CoreData",
          "Remove Birthday Data"
        ],
        "Birthday App: View and View Models": [
          "Birthday ViewModel",
          "Birthday List ViewModel",
          "Birthday List View",
          "Add New Birthday View",
          "Birthday Cell",
          "Update Birthday ViewModel",
          "Update Birthday View",
          "Source Code"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Basics of iOS Development"
      ],
      "description": "Let's build a birthday reminder app from start to end in SwiftUI. In this video, you will learn about Core Data and how you can persist changes into the disk using Core Data. We will follow MVVM design pattern so you can make your UI independent of business logic so you have a decoupled architecture.\nBy the end of this series, you will have app that's ready to be released to the app store.\nAbout SwiftUI in Apple's own term:\n\"SwiftUI helps you build great-looking apps across all Apple platforms with the power of Swift — and as little code as possible. With SwiftUI, you can bring even better experiences to all users, on any Apple device, using just one set of tools and APIs.\n\n\nWhat’s new in SwiftUI\nAdvanced app experiences and tools\nEnhance your apps with new features, such as improved list views, better search experiences, and support for control focus areas. And gain more control over lower-level drawing primitives with the new Canvas API, a modern, GPU-accelerated equivalent of drawRect.\nAccessibility improvements\nSpeed up interactions by exposing the most relevant items on a screen in a simple list using the new Rotor API. The current accessibility focus state, such as the VoiceOver cursor, can now be read and even changed programmatically. And with the new Accessibility Representation API, your custom controls easily inherit full accessibility support from existing standard SwiftUI controls.\nSwiftUI improvements on macOS\nNew performance and API availability improvements, including support for multicolumn tables, make your macOS apps even better.\nAlways-On Retina Display support\nOn Apple Watch Series 5 and later, the Always-On Retina Display allows watchOS apps to stay visible, even when the watch face is dimmed, making key information available at a glance.\nWidgets for iPadOS\nNow widgets can be placed anywhere on the Home screen and increased to a new, extra-large widget size.",
      "target_audience": [
        "Students Who Wants to Learn SwiftUI",
        "Students Who Wants to Learn MVVM Design Pattern",
        "Students Who Wants to Learn Core Data"
      ]
    },
    {
      "title": "Paging 3 Android Library",
      "url": "https://www.udemy.com/course/paging-3-android-library/",
      "bio": "Build an Android app using Paging 3 library",
      "objectives": [
        "Paging 3",
        "Retrofit",
        "Room",
        "Flow",
        "RxJava",
        "MVVM"
      ],
      "course_content": {
        "Introduction": [
          "Paging 3 library overview",
          "Project File",
          "Base Project Walk through",
          "Add Permission",
          "Add Endpoint",
          "Create Response Model",
          "Build Network Service",
          "Create Retrofit Object",
          "Create Paging Model and Mapper"
        ],
        "Paging Source Flow": [
          "Create Paging Source For Flow",
          "Flow PagingSource Repository",
          "Create ViewModel",
          "Create ViewModelProvider Factory",
          "Implement ViewModel",
          "Add Application Class",
          "Create PagingDataAdapter",
          "Implement RecyclerView",
          "Adaptor LoadStateListener"
        ],
        "Paging Source RxJava": [
          "Create Paging Source For RxJava",
          "RxJava PagingSource Repository",
          "Create ViewModel",
          "Implement ViewModel",
          "Implement RecyclerView",
          "Adaptor LoadStateListener"
        ],
        "Room Database": [
          "Create Entity For Task and Key",
          "Flow Doa For Task and Key",
          "RxJava Doa For Task and Key",
          "Database Service",
          "Entity Mapper"
        ],
        "Flow Remote Mediator": [
          "Flow RemoteMediator - Part1",
          "Flow RemoteMediator - Part2",
          "Flow RemoteMediator - Part3",
          "Flow RemoteMediator - Part4",
          "Flow RemoteMediator Repository",
          "Flow RemoteMediator ViewModel",
          "Implement Flow RemoteMediator ViewModel",
          "RecyclerView Adaptor",
          "Implement Adaptor",
          "Implement RecyclerView",
          "Adaptor Load State"
        ],
        "RxJava Remote Mediator": [
          "RxJava RemoteMediator - Part1",
          "RxJava RemoteMediator - Part2",
          "RxJava RemoteMediator - Part3",
          "RxJava RemoteMediator Repository",
          "RxJava RemoteMediator ViewModel",
          "Implement RxJava RemoteMediator ViewModel",
          "Implement RecyclerView Adaptor",
          "Adaptor LoadState",
          "CompositeDisposable"
        ],
        "Adaptor Load State": [
          "Create LoadState ViewHolder",
          "Create LoadState Adaptor",
          "Implement LoadState Adaptor"
        ],
        "UI Model": [
          "Create UI Model",
          "Create Task Item ViewHolder",
          "Create Separator Item ViewHolder",
          "Create UI Model Adaptor",
          "Implement UI Model in ViewModel",
          "Implement UI Model Adaptor",
          "Project File"
        ]
      },
      "requirements": [
        "Basic Of Android Development",
        "Basic Of Kotlin",
        "Basic Of Kotlin Flow",
        "Basic Of RxJava"
      ],
      "description": "The Paging 3 library helps you load and display pages of data from a larger dataset from local storage or over network. This approach allows your app to use both network bandwidth and system resources more efficiently. The components of the Paging 3 library are designed to fit into the recommended Android app architecture, integrate cleanly with other Jetpack components, and provide first-class Kotlin support.\nBy the end of this course, you will have a good understanding of Paging 3 library and will be able to implement it in your own project. We will cover the topic on Paging Source, Remote Mediator, Load State, Header, Footer, UI Models etc. We well cover both Kotlin Flow and RxJava with Paging 3 library.\nThis course is fully practical and we will build an Android application from scratch. We will be using a MVVM architecture and we will use the Android library like Retrofit, Room, Coroutines, Flow, RxJava, Timber etc.\nThe Paging 3 library includes the following features:\nIn-memory caching for your paged data. This ensures that your app uses system resources efficiently while working with paged data.\nBuilt-in request deduplication, ensuring that your app uses network bandwidth and system resources efficiently.\nConfigurable RecyclerView adapters that automatically request data as the user scrolls toward the end of the loaded data.\nFirst-class support for Kotlin coroutines and Flow, as well as LiveData and RxJava.\nBuilt-in support for error handling, including refresh and retry capabilities.",
      "target_audience": [
        "Android Developer"
      ]
    },
    {
      "title": "IONIC 4 | Design Hybrid Mobile Applications | IOS & Android",
      "url": "https://www.udemy.com/course/hybrid-mobile-applications-with-ionic4/",
      "bio": "Zero To Hero in Designing Hybrid Mobile Applications in latest version of Ionic 4 Neutronium",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic understanding of mobile apps",
        "basic understanding of angular, html, css",
        "basic understanding of javascript/typescript"
      ],
      "description": "This course is mainly focused on the latest version of ionic 4 which has the latest update Neutronium and i have discussed all the components of ionic 4 an update this course on regular basis with live demonstration and live coding with Project based examples.\nWe will cover:\nIonic 4 Components\nAngular\nTypeScript\nWhy This Course:\nClean Coding Style\nPractical Implementation\nProject Demos",
      "target_audience": [
        "Students who want to learn mobile app development",
        "web designers and developers"
      ]
    },
    {
      "title": "Design a Quiz App with Android Studio - a Beginner's Guide",
      "url": "https://www.udemy.com/course/design-a-quiz-app-with-android-studio-a-beginners-guide/",
      "bio": "An easy, fun, step-by-step guide to designing an app with XML in Android Studio",
      "objectives": [],
      "course_content": {
        "Introduction to the Project": [
          "Introducing the App Design Project",
          "Setting Up Android Studio"
        ],
        "Introduction to Android studio": [
          "Starting and Navigating Android Studio"
        ],
        "Starting with designing the app": [
          "Adding Layout, Background, and Text in XML",
          "Creating the Linear Layout and Adding Buttons"
        ],
        "Finishing the design": [
          "Formatting Answer Buttons",
          "Adding the Question",
          "Add the submit button"
        ]
      },
      "requirements": [
        "No experience with building apps is required."
      ],
      "description": "This is a simple, beginner project that is perfect for you if:\n\n\nThis is your first time designing an app in Android Studio\nThis is your first time designing an app with a markup coding language in general\nYou want to get familiar with Android Studio app development\nYou want to get familiar with markup coding languages (in this case, XML)\nIn this project, you will learn how to design the user interface of an app as you design the components of a simple quiz app in a platform called Android Studio.\n\n\nAndroid Studio is a platform that is used by many professional developers to develop Android apps. You can use several programming languages to build the front-end and back-end of an app in Android Studio, including XML and Java. This project will show you how to design an app in XML in easy, broken down steps, and then prepare for you to build the back-end of the app in Java.\n\n\nYou will be walked through a tutorial on how to design the app throughout this entire project. I will first introduce Android Studio and how it is structured, and then I will design the app with XML from scratch, explaining the code and steps along the way.",
      "target_audience": [
        "Beginner coders curious about how to design the front-end of an app from scratch"
      ]
    },
    {
      "title": "600+ Kotlin Interview Questions Practice Test",
      "url": "https://www.udemy.com/course/kotlin-interview-questions-practice-test/",
      "bio": "Kotlin Interview Questions and Answers Preparation Practice Test | Freshers to Experienced | Detailed Explanations",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Kotlin Interview Questions and Answers Preparation Practice Test | Freshers to Experienced\nWelcome to the most comprehensive and detailed Kotlin Interview Questions and Practice Test course on Udemy. Whether you're a budding developer eager to dive into the world of Kotlin or an experienced programmer aiming to brush up on your skills before an interview, this course is designed to elevate your understanding and readiness to the next level.\nKotlin, a modern programming language that runs on the Java Virtual Machine (JVM), is renowned for its concise syntax, interoperability with Java, and null safety features. It's the preferred language for Android development and is rapidly gaining popularity across backend and web development domains. Recognizing Kotlin's growing importance, we've meticulously crafted this course to cover everything from basic concepts to advanced programming techniques, spread across six essential sections, each filled with targeted practice test questions.\nSample Questions:\nQuestion 1: What is the primary purpose of the lateinit keyword in Kotlin?\nA) To declare a variable that can be initialized later\nB) To initialize a variable at the time of its declaration\nC) To mark a variable as nullable\nD) To define a constant value\nCorrect Answer: A) To declare a variable that can be initialized later.\nExplanation: The lateinit keyword is used in Kotlin for late initialization of variables. It allows you to declare non-nullable properties without immediately initializing them, providing the flexibility to initialize them later in the lifecycle of the program. This is particularly useful in situations where a proper value can only be determined after the object's construction, such as dependency injection or setting up test mocks. It's important to note that attempting to access a lateinit variable before it has been initialized will result in a special exception, highlighting the need for careful management of its initialization state.\n\n\nQuestion 2: In Kotlin, which of the following is the correct way to create a single-expression function that returns the square of a number?\nA) fun square(n: Int): Int = n * n\nB) fun square(n: Int): Int { return n * n }\nC) fun square(n: Int) => n * n\nD) square(n: Int): Int = n * n\nCorrect Answer: A) fun square(n: Int): Int = n * n\nExplanation: Kotlin supports single-expression functions, which allow you to define functions in a more concise way when they only contain a single expression. Option A is the correct syntax for defining a single-expression function that calculates and returns the square of an integer. This syntax omits the curly braces and the return keyword, making the code more concise and readable. While option B is also a valid function definition, it is not considered a single-expression function due to the use of curly braces and the return keyword. Options C and D demonstrate incorrect syntax and do not follow Kotlin's function declaration rules.\n\n\nQuestion 3: Which feature of Kotlin helps to avoid null pointer exceptions?\nA) Extension functions\nB) Data classes\nC) Null safety\nD) Inline functions\nCorrect Answer: C) Null safety\nExplanation: Kotlin's null safety feature is designed to eliminate the risk of null pointer exceptions, a common issue in many programming languages, including Java. This is achieved through the explicit handling of nullable and non-nullable types. In Kotlin, types are non-nullable by default, meaning you cannot assign null to a variable unless you explicitly declare it as nullable by adding a ? after the type. This approach forces developers to deal with nullability explicitly, either by performing null checks or using safe calls (?.) and the Elvis operator (?:), thereby significantly reducing the chances of encountering null pointer exceptions at runtime.\n\n\nQuestion 4: What is the purpose of the companion object in a Kotlin class?\nA) To create static methods\nB) To initialize class properties\nC) To implement singleton pattern\nD) To declare extension functions\nCorrect Answer: A) To create static methods\nExplanation: In Kotlin, the concept of static members from languages like Java is replaced by companion objects. A companion object is declared within a class to hold functions and properties that are tied to the class rather than instances of it, allowing them to be accessed directly through the class name, similar to static methods in Java. This is particularly useful for factory methods, constants, and utility functions that should be accessible without creating an instance of the class. Although Kotlin does not have a static keyword, companion objects fulfill a similar role, ensuring that you can include functionalities within a class that can be accessed statically.\n\n\nQuestion 5: How does Kotlin handle default arguments in function definitions?\nA) By using the default keyword\nB) By overloading functions\nC) By specifying default values in the function signature\nD) By using optional parameters\nCorrect Answer: C) By specifying default values in the function signature\nExplanation: Kotlin simplifies function calls with default arguments by allowing you to specify default values for one or more parameters directly in the function's signature. This feature enables you to call a function without providing all the arguments, with the missing arguments taking their default values. This is particularly useful for reducing the need for overloaded functions, as it allows a single function to handle multiple cases where different arguments might be omitted. Unlike some languages that may require annotations or additional keywords to specify default arguments, Kotlin's approach is straightforward and integrated directly into the parameter declaration, enhancing code readability and maintainability.\n\n\nThese questions and explanations are designed to cover a range of topics and provide a deep understanding of Kotlin's features, syntax, and best practices.\n\n\nJoin Us and Transform Your Career\nEnroll today and start your journey to becoming a Kotlin expert. Whether you're preparing for an interview or looking to enhance your programming skills, this course offers a deep dive into the world of Kotlin, equipping you with the knowledge and confidence to tackle any challenge. With our comprehensive practice tests, you'll not only learn Kotlin inside and out but also be well-prepared to impress in your next job interview.\nUnlock your potential and take the first step towards mastering Kotlin. Enroll now and become part of a community of developers who are leading the charge in modern software development.",
      "target_audience": [
        "Beginners with a Passion for Programming",
        "Android Developers",
        "Students Preparing for Technical Interviews",
        "Professionals Seeking Career Advancement"
      ]
    },
    {
      "title": "Learn UI Mobile App Design & Game Mechanics in Construct 2",
      "url": "https://www.udemy.com/course/learn-ui-mobile-app-design-game-mechanics-in-construct-2/",
      "bio": "Includes FREE book! This is our ULTIMATE course. Design real iOS apps in Swift. Make 60 complete games in Construct 2.",
      "objectives": [
        "Navigate Xcode 9's interface.",
        "Code in Apple's programming language, Swift 4.0.",
        "Build apps for the iPhone from start to finish.",
        "Make the code AND art for projects.",
        "Learn how to build simple games from scratch in Construct 2"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Course Trailer!",
          "Construct Game Engine Inspiration"
        ],
        "Introduction to Xcode 9": [
          "Introduction to This Course",
          "Top 10 Reasons Why This Course is Awesome!",
          "How to Use this Course",
          "How to Download Xcode 9",
          "Updates"
        ],
        "Swift 4 - Language Basics": [
          "Language Basics Topics List"
        ],
        "Swift 4 - Language Basics 01) Variables and Constants": [
          "Learning Goals",
          "Intro to Variables and Constants",
          "Primitive Types",
          "Strings",
          "Nil Values",
          "Tuples",
          "Type Conversions",
          "Assignment Operators",
          "Conditional Operators",
          "Source Code"
        ],
        "Swift 4 - Language Basics 02) Collection Types": [
          "Topics List and Learning Objectives",
          "Intro to Collection Types",
          "Creating Arrays",
          "Common Array Operations",
          "Multidimensional Arrays",
          "Ranges",
          "Source Code"
        ],
        "Swift 4 - Language Basics 03) Control Flow": [
          "Topics List and Learning Objectives",
          "Intro to If and Else Statements",
          "Else If Statements",
          "Multiple Simultaneous Tests",
          "Intro To Switch Statements",
          "Advanced Switch Statement Techniques",
          "Testing for Nil Values",
          "Intro to While Loops",
          "Intro to For...In Loops",
          "Intro to For...In Loops (Cont'd)",
          "Complex Loops and Loop Control Statements",
          "Source Code"
        ],
        "Swift 4 - Language Basics 04) Functions": [
          "Topics List and Learning Objectives",
          "Intro to Functions",
          "Function Parameters",
          "Return Statements",
          "Parameter Variations - Argument Labels",
          "Parameter Variations - Default Values",
          "Parameters Variations - InOut Parameters",
          "Parameter Variations - Variadic Parameters",
          "Returning Multiple Values Simultaneously",
          "Source Code"
        ],
        "Swift 4 - Language Basics 05) Classes, Structs and Enums": [
          "Topics List and Learning Objectives",
          "Intro to Classes",
          "Properties as Fields - Add to Class Implementation",
          "Custom Getters and Setters",
          "Calculated Properties",
          "Variable Scope and Self",
          "Lazy and Static Variables",
          "Behavior and Instance Methods",
          "Class Type Methods",
          "Class Instances as Field Variables",
          "Inheritance, Subclassing and SuperClassing",
          "Overriding Initializers",
          "Overriding Properties",
          "Overriding Methods",
          "Structs Overview",
          "Enumerations",
          "Comparisons between Classes, Structs and Enums",
          "Source Code"
        ],
        "Introduction to XCode": [
          "Intro and Demo",
          "General Interface Intro",
          "File System Introduction",
          "ViewController Intro",
          "Storyboard File Intro",
          "Connecting Outlets and Actions",
          "Running an Application",
          "Debugging an Application",
          "Source Code"
        ],
        "Simple Calculator App (Swift 4 Project)": [
          "Intro and Demo",
          "Building the UI",
          "Connecting Outlets and Actions",
          "Implementation Planning",
          "Storing Input Values and Choosing Operation",
          "Implementing Calculate and Clear Function",
          "Error Checking and Handling",
          "Beautifying App and Finishing Touches",
          "Source Code"
        ]
      },
      "requirements": [
        "To follow along in Xcode 9, you must have a Mac computer or MacOS software.",
        "Must have the pro version of Construct 2."
      ],
      "description": "Do you want to learn a new skill no one can take away from you? Sign up now for our course.\nCode in Swift with practical projects! Design apps from scratch. Learn to make games in Construct 2.\nIn Part 1 of this course you learn how to make apps in Xcode 9. This course is project-based -- you follow along with your instructor to build real projects.\nThe best way for you to learn how to make your own app is to follow project-based training content. You can put the apps you make in this course in your portfolio!\n\nLearn to develop for the biggest company in the world\nXcode is Apple's FREE software for app development. Xcode is user-friendly and allows you to make complex and creative apps.\n\nXcode is accessible for beginners who want to make simple apps. Swift 4.0 is the programming language to learn if you want to make apps for Apple products.\nYour teachers will teach you practical skills using real-world examples. Take this course to build your portfolio today.\nIn Part 2, you build 60 2D games in Construct 2. This course is unique because we make both the code and the art for the game from scratch.\nWe teach you the fundamentals of designing and coding a game.\n\nDon't worry if you've never coded before. We start simple and add more to the game as the course goes on.\nIncluded in this course is material for beginners to get comfortable with the interfaces. Please note that we reuse this content in similar courses because it is introductory material. You can find some material in this course in the following related courses:\nC# Unity and Swift 4 Masterclass: Make Games and Apps\nXamarin Start to Finish Android & iOS Apps (& Learn to Code)\niOS 11 & Swift 4.0 - A Beginner's Guide with Projects\nThe Ultimate iOS 11 & Swift 4 Course. Learn to Build Apps!\nCode in Kotlin & Java for Android and Complete 5 iPhone Apps\nFinish 26 Games & Apps Quickly (GameMaker: Studio & Xcode)\nSwift 4 and ELM Masterclass | Make iOS 11 apps and web apps!\nComplete Construct 2 and Angular: Make 60 Games and Web Apps\nBuild 60 Games in Construct 2\nThis course is for you\nUsually it takes a whole team of people to build a project like a game or web app. But creators Thomas Happ and Eric Barone developed and designed their games by themselves. Now they're millionaires. You can do it, too.\n\nYou get full lifetime access to this course for a single one-time fee.\nYour purchase includes the best-selling  e-book \"The Ultimate iOS 10, Xcode 8 Developer Book. Build 30 apps!\" by Mammoth Interactive.\nEnroll right now to join the awesome community of Mammoth Interactive",
      "target_audience": [
        "Absolute beginners to mobile development who want an introduction to Swift 4 and Xcode 9.",
        "People who want to make games."
      ]
    },
    {
      "title": "Android Development Using C# and Visual Studio 2012",
      "url": "https://www.udemy.com/course/android-development-using-c-and-visual-studio-2012-vtc/",
      "bio": "Learn to create mobile applications for Android using Mono and C# in this introductory course.",
      "objectives": [
        "This course will serve as an introduction on how to create applications for Android using Mono and C#."
      ],
      "course_content": {
        "Welcome": [
          "Introduction",
          "Course Overview",
          "Mono in Visual Studio 2012",
          "Hello World",
          "Deploying to a Device"
        ],
        "User Interface": [
          "Views and Layouts",
          "Table Layouts",
          "Relative Layouts"
        ],
        "Basic User Interface Widgets": [
          "Text View",
          "Edit View",
          "AutoComplete Edit",
          "Button",
          "Image Button",
          "Spinner",
          "Checkbox",
          "Radio Buttons and Groups",
          "Date and Time Pickers",
          "Clocks",
          "Images"
        ],
        "Advanced User Interface": [
          "Tabs",
          "Action Bars",
          "Menus",
          "Keyboards",
          "Basic Lists",
          "Simple List Adapters",
          "Grids",
          "Custom List Adapters",
          "Expandable List Adapters",
          "Using Expandable List Adapters",
          "Localization"
        ],
        "Activities / Intents and Services": [
          "Activities and Intents",
          "Activity Life Cycle",
          "Services",
          "Content Providers",
          "Broadcast Receivers",
          "Alarms",
          "Passing Data between Activities"
        ],
        "Data": [
          "Options for Data",
          "Creating a SqlLite Database",
          "CRUD Operations",
          "Using Data in Lists",
          "Remote Data - WCF",
          "Remote Data - JSON"
        ],
        "File System": [
          "File Storage",
          "Preferences"
        ],
        "Media": [
          "Using the Camera",
          "Embedding the Camera in an Application",
          "Playing Audio",
          "Recording Audio",
          "Playing Video",
          "Recording Video",
          "Media Store"
        ],
        "Using Other Applications": [
          "Email",
          "Sending an SMS",
          "Receiving an SMS",
          "Making a Phone Call",
          "Monitoring the Phone",
          "T Browser",
          "Maps",
          "YouTube",
          "Displaying Contacts",
          "Editing Contacts",
          "Download Manager"
        ],
        "Location Services": [
          "Retrieving Current Location",
          "GPS in the Emulator",
          "Geocoding",
          "Google Maps"
        ]
      },
      "requirements": [
        "Microsoft Visual Studio (recommended)"
      ],
      "description": "Mobile development has become increasingly important and popular. There are two platforms that own most of the current market share: Android and IOS. Microsoft has not been successful to date in the mobile market, and developers that are comfortable using Microsoft tools may feel left behind. It is possible, however, to create mobile applications for both Android and IOS using Microsoft Visual Studio and the Mono framework. This course will serve as an introduction on how to create applications for Android using Mono and C#. It will cover basic setup, UI development, options for working with data, interfacing with other Android features, like audio, camera and GPS, and publishing the application to Google Play. This title is a self-paced software training course delivered via pre-recorded video. We do not provide additional information outside of the posted content.\nWork files for this course can be downloaded from the first lecture.",
      "target_audience": [
        "Mobile Developers"
      ]
    },
    {
      "title": "React Native + Expo: From Beginner to Expert [2022]",
      "url": "https://www.udemy.com/course/react-native-expo-from-beginner-to-expert-2022/",
      "bio": "Learn how to build apps using React Native. Push notifications, navigation, Hooks, AppState, and more.",
      "objectives": [
        "Learn everything you need to know to be a React Native developer.",
        "Learn navigation, push notifications, text inputs, hooks, and more.",
        "Learn UX/UI app design principles.",
        "Build a complete note-taking app that you could publish to the Apple or Google app store."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Getting Started: Environment Setup": [
          "Installing Node.js and React Native Expo CLI",
          "React Native Environment Explained",
          "App File Structure",
          "Hooks, Global AppState, & Props",
          "React Navigation",
          "Styling Setup",
          "Push Notifications",
          "Passing Down Props"
        ],
        "Let's Build a Note-Taking App": [
          "Styling Essentials; Building the Header and Footer",
          "Vector Icons, Text Fonts, Text Components, Text Styling",
          "ScrollViews",
          "TextInputs",
          "AsyncStorage; Buttons (TouchableOpacity); More on TextInputs",
          "useEffect; Spread Operators in Hooks; Creating the Note Saving Functionality",
          "useIsFocused",
          "Keyboard Events; KeyboardAvoidingView",
          "App Icons & Splash Screens; Editing Notes; More Styling",
          "Deleting Notes; splice function; forceUpdate function",
          "Conditional (Ternary) Operator in Styling; Footer Styling"
        ],
        "Create Build App files for the Google Play Store and the Apple App Store": [
          "Build App files; Alert Component"
        ],
        "Congratulations!": [
          "Conclusion"
        ]
      },
      "requirements": [
        "No React Native experience needed. You will learn all you need to know about React Native from this course.",
        "You should have some basic knowledge of HTML, CSS, JavaScript, and React."
      ],
      "description": "In this course, you'll learn everything you need to know to be a React Native developer. You'll also learn about app UX/UI design principles. By the end of this course, you'll not only know how to build React Native apps, but also how to design React Native apps well.\nIn this course you will build a fully functioning React Native note-taking app. You'll be able to create, edit, and delete notes. Your note files will save automatically to your device's local storage so the notes will still be in your app if you close your app and return to your app later.\nYou'll learn about push notifications, navigation, Hooks, AppState, Local Storage, and more.\nHere is an overview of the course:\nInstalling Node.js and React Native Expo CLI\nReact Native Environment Explained\nApp File Structure\nHooks, Global AppState, & Props\nReact Navigation\nStyling Setup\nPush Notifications\nPassing Down Props\nStyling Essentials; Building the Header and Footer\nVector Icons, Text Fonts, Text Components, Text Styling\nScrollViews\nTextInputs\nAsyncStorage; Buttons (TouchableOpacity); More on TextInputs\nuseEffect; Spread Operators in Hooks; Creating the Note Saving Functionality\nuseIsFocused\nKeyboard Events; KeyboardAvoidingView\nApp Icons & Splash Screens; Editing Notes; More Styling\nDeleting Notes; splice function; forceUpdate function\nConditional (Ternary) Operator in Styling; Footer Styling\nBuild App files; Alert Component\nBy the end of this course, you will go from beginner to pro!",
      "target_audience": [
        "Everyone who wants to become a React Native developer.",
        "React developers who want to learn React Native."
      ]
    },
    {
      "title": "Ionic 8+ & Supabase Full-Stack Mastery: Build Real-Time Apps",
      "url": "https://www.udemy.com/course/build-a-scalable-quiz-app-with-ionic-supabase-dynamic-for/",
      "bio": "Master Ionic 8+ & Supabase for building full-stack real-time apps with dynamic content management for Android, iOS & Web",
      "objectives": [
        "Build and deploy a full-stack dynamic app using Ionic 8+ and Angular with Supabase backend.",
        "Manage real-time data synchronization using Supabase’s scalable backend services.",
        "Implement user authentication and authorization with Supabase Auth for secure apps.",
        "Use Excel file uploads and dynamic Angular forms to simplify and automate content management.",
        "Create advanced app features such as timers, score tracking, etc.",
        "Develop responsive, cross-platform apps for iOS, Android, and web using Capacitor 7+.",
        "Architect modular, clean, and maintainable frontend and backend codebases.",
        "Handle real-time database querying, data storage, and API interactions using Supabase.",
        "Understand and implement best practices for full-stack app deployment and maintenance."
      ],
      "course_content": {
        "Introduction": [
          "App Promo",
          "Get in touch with us"
        ],
        "Quiz App UI": [
          "Design Quiz form",
          "Prepare form with proper validation.",
          "form submission and navigation",
          "prepare excel sheet upload for quiz questions",
          "Insert multiple questions via reactive form",
          "Preparing Quiz Layout using SwiperJS",
          "Prepare Options design with functionality",
          ".Managing Back button alert",
          "Handle hardware back button for quiz",
          "Execute timer functionality (Start and Stop)",
          "implementing Quiz buttons functionality",
          "Calculate and show the result",
          "Prepare Result Modal",
          "Replay quiz functionality",
          "Prepare View Answers Modal with filtered data",
          "View Answer Component (show correct, wrong, skip)",
          "implementing mark answer functionality",
          "Implementing review modal functionality",
          "Fix ion-fab design",
          "Setup Supabase, prepare Database and insert categories",
          "Upload questions excel sheet using Supabase query",
          "Adding multiple questions to Supabase using forms",
          "Fetch random questions from supabase",
          "Prepare icons and splash screens for android and ios platforms",
          "Running in android and ios",
          "Source code"
        ]
      },
      "requirements": [
        "Basic knowledge of web development including HTML, CSS, and JavaScript is recommended.",
        "Familiarity with Angular basics and TypeScript will be helpful but is not mandatory.",
        "Basic Understanding of SQL is needed for Supabase",
        "Basic understanding of Ionic and Angular is required",
        "A computer with a working development environment (Node.js, npm, and Ionic CLI) installed.",
        "A free Supabase account for backend setup and testing.",
        "Willingness to write code and follow along with project-based learning."
      ],
      "description": "Unlock comprehensive full-stack app development skills by mastering both the powerful Ionic 8+ frontend and the real-time capabilities of Supabase backend. This course is designed to equip you with the skills to build modern, scalable, real-time applications using Angular 20+, Capacitor 7+, and Supabase's cloud-first backend services.\nRather than focusing solely on one type of app, this course teaches you how to develop dynamic, real-time business applications with features like Excel uploads for seamless content management, dynamic multi-question forms, real-time updates, advanced timers, and score tracking. Gain confidence in building apps that work fluidly on iOS, Android, and web platforms.\nThis holistic course covers everything from the UI and user experience layers to backend database design and authentication, empowering you to engineer scalable production-ready apps.\nWhat You’ll Learn\nBuild complex, full-stack real-time applications with Ionic 8+, Angular, and Supabase.\nManage application data dynamically with Excel uploads and multi-question forms.\nImplement essential features like timers, score tracking, and live updates.\nLeverage Supabase for authentication, database, and backend services.\nDeploy cross-platform apps effectively on iOS, Android, and Web using Capacitor 7+.\nWrite clean, maintainable code and architect full-stack applications from start to finish.\nWho This Course is For\nDevelopers seeking to learn full-stack Ionic and Supabase development beyond basic tutorials.\nFreelancers and entrepreneurs building dynamic real-time apps with ease.\nAngular developers aiming to unlock the power of full-stack app development.\nAnyone interested in mastering modern tech stacks for scalable cross-platform applications.\nAbout Me\nI’m Nikhil Agarwal, a full-stack developer and educator behind several top-rated Udemy courses. My focus is hands-on, project-based learning to prepare you for real career challenges. Join me in mastering Ionic 8+ and Supabase to build apps that truly stand out.\nStart your full-stack mastery journey today with Ionic 8+ & Supabase!",
      "target_audience": [
        "Developers eager to become proficient full-stack developers using the modern Ionic 8+ frontend and Supabase backend technology stack.",
        "Angular developers wanting to level up by building real-time, scalable full-stack applications.",
        "Freelancers and entrepreneurs looking to develop, deploy, and monetize cross-platform apps with a unified codebase.",
        "Anyone interested in mastering dynamic data management with Excel uploads and real-time backend sync.",
        "Web and mobile developers seeking hands-on skills for launching apps on web, iOS, and Android with Capacitor.",
        "Beginners with basic web knowledge who want comprehensive and project-based full-stack learning.",
        "Professionals aiming to add full-stack cloud backend expertise using Supabase to their skillset."
      ]
    },
    {
      "title": "Build A TodoList with Spring Boot, Java and React Native",
      "url": "https://www.udemy.com/course/build-a-todolist-with-spring-boot-java-and-react-native/",
      "bio": "Build a Full Stack Todolist Application Fast and Easy",
      "objectives": [
        "The student will learn the basics of RESTful API development with java Spring Boot",
        "How to create a Full Stack Todo List Application",
        "Learn how to use the Hibernate ORM with JPA",
        "Learn to consume JSON with React Native"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Install Java"
        ],
        "Create Java Spring Boot Todo API": [
          "Create Java Project",
          "Create Spring Boot Project",
          "Create Spring Boot Database Connection",
          "Create Spring Boot JPA Entity",
          "Spring Spring Boot Flyway Migrations",
          "Create Spring Boot Java Controller",
          "Build Get Requests in Spring Boot",
          "Build Update Requests in Spring Boot",
          "Build Delete Requests in Spring Boot"
        ],
        "Create React Native Todo Application": [
          "Install React Native",
          "Install UI Kitten Framework",
          "Demo UI Kitten",
          "Project Directory Structure",
          "Build Todo Service",
          "Build TodoList Component",
          "Create Todo Item Component",
          "Create Todo Accessory Component",
          "Build TodoList UI",
          "Build Todo Form",
          "Fix Todo Delete Button"
        ]
      },
      "requirements": [
        "Understand basic Java",
        "Be familiar with Spring Boot",
        "Some familiarity with SQL"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use Java, Spring Boot, and React Native. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a React Native Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, Java, Java, Basic SQL, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nReact Hooks\nReact Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nJava Programming Language\nSpring Boot\nDatabase Migrations\nORMs\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with React Native, Java, and Spring Boot.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "A Complete Guide to Creating Mobile Apps Using Thunkable",
      "url": "https://www.udemy.com/course/a-complete-guide-to-creating-mobile-apps-using-thunkable/",
      "bio": "Master Thunkable and build dynamic mobile apps, learning UI design and block coding",
      "objectives": [],
      "course_content": {
        "Coding with Thunkable": [
          "Course Overview and Introduction:",
          "Getting Started with Thunkable",
          "App Development Basics",
          "Building Interactive User Interfaces",
          "Quiz App - Design Challenge",
          "Fundamentals of App Development with Block Coding",
          "Working with Data and Variables",
          "Integrating Device Features",
          "Advanced Coding Practice",
          "Publishing and Distribution",
          "Final Project and Wrap-up",
          "Final Project - Creating Your Very Own App!"
        ]
      },
      "requirements": [
        "No prior programming experience is needed!"
      ],
      "description": "Welcome to the ultimate Thunkable course! Whether you're a beginner or looking to enhance your app development skills, this comprehensive course is designed to take you from zero to hero. Dive into the world of Thunkable and unleash your creativity as you learn to build stunning and interactive mobile apps.\nThroughout this immersive learning journey, you'll delve into the core concepts that form the foundation of app development. From mastering the art of designing visually appealing and user-friendly interfaces with essential components like buttons, labels, images, and text inputs, to exploring the magic of variables and functions, and how to manipulate data to create dynamic apps that respond seamlessly to user interactions.\nIn our advanced coding practice, you'll embrace thrilling challenges, building a powerful translation app and an intriguing number guessing game. These hands-on exercises will elevate your skills to new heights and empower you to create functional and engaging apps that transcend boundaries.\nBy the end of this course, you'll be well-equipped with the skills, knowledge, and confidence to create your own innovative mobile apps, ready to showcase your achievements to the world. Don't miss this opportunity to embark on a transformative learning experience that will unlock a world of possibilities in app development. Enroll now and let's embark on this exciting journey together!",
      "target_audience": [
        "This course is tailored for individuals who are enthusiastic about app development and want to create mobile apps without extensive coding knowledge. It is perfect for beginners and aspiring app developers who are eager to explore the world of app creation using Thunkable. Whether you are a student seeking new skills, or an entrepreneur with app ideas to bring to life, this course is designed to cater to your specific needs. By the end of this course, you will be equipped with the skills and knowledge to build interactive and feature-rich mobile apps using Thunkable, empowering you to turn your ideas into reality."
      ]
    },
    {
      "title": "Build Instagram to Master SwiftUI and Firestore",
      "url": "https://www.udemy.com/course/build-instagram-to-master-swiftui-and-firestore/",
      "bio": "Learn about Social Networking App while building Instagram using SwiftUI and Firestore",
      "objectives": [
        "Comprehensive knowledge and understanding of Swift 5, SwiftUI Framework & Xcode",
        "Best Coding Practices",
        "Firebase & SwiftUI integration",
        "Implement the MVVM system",
        "Advanced level programming and app development skills",
        "Create professional UI and UX",
        "Implement custom subclasses for clean and reusable code",
        "Deep programming, create extensions and functions for clean"
      ],
      "course_content": {
        "Introduction": [
          "Walkthrough",
          "Install XCode",
          "Get Started with SwiftUI: New Xcode Project"
        ],
        "Authentication: Design Sign In Scene": [
          "Adding Sign In Scene - Customize Sign In Part 1",
          "Adding Sign In Scene - Customize Sign In Part 2",
          "Adding Sign In Scene - Customize Sign In Part 3",
          "Adding Sign In Scene - Customize Sign In Part 3",
          "Best Coding Practices 1: Extract SubView",
          "Best Coding Practices 2: Create Custom Modifiers"
        ],
        "Authentication: Design Sign Up Scene": [
          "Adding Sign Up Scene - Customize Sign Up",
          "Navigation in SwiftUI"
        ],
        "Get started with Cloud Firestore - SignUp": [
          "Introduction Firebase, and How to Integrate Firebase SDK to Our App",
          "Sign Up View: Interact with the photo library with SwiftUI",
          "SignUp Function"
        ],
        "Refactor Code": [
          "Sign Up Scene: Refactor",
          "MVVM Design Pattern",
          "Refactor Part 1",
          "Refactor Part 2"
        ],
        "Authentication - SignIn": [
          "Lecture 19. SignIn Function",
          "Lecture 20. Switch View",
          "Lecture 21. Store The User Session"
        ],
        "Main App: Design Home View": [
          "Lecture 22. Adding TabView",
          "Lecture 23. Building Story View",
          "Lecture 24. Home View",
          "Lecture 25. Refactor Code",
          "Lecture 26. Navigation Link"
        ],
        "Main App: Design Comment View": [
          "Lecture 27. Adding Comment View"
        ],
        "Main App: Design Discover View": [
          "Lecture 28. Adding Discover View Part 1",
          "Lecture 29. Adding Discover View Part 2"
        ],
        "Main App: Design Camera View": [
          "Lecture 30: Adding Camera View"
        ]
      },
      "requirements": [
        "No previous coding or design knowledge is needed.",
        "An Apple MacBook laptop or iMac."
      ],
      "description": "What are we building?\n\nIn this course, we will learn how to build our own Instagram clone with SwiftUI framework. Throughout the process, you will develop high level programming, app design and app development skills.\nAt the completion of the course, you will get all knowledges of social apps creation, building strong logics of app, app customization, app designing, social app features programming and many many many more.\nWhat will you learn?\nComprehensive knowledge and understanding of Swift 5 & Xcode\nSwiftUI Framework\nFirebase & SwiftUI integration\nImplement the MVVM system\nAdvanced level programming and app development skills\nCreate professional UI and UX\nWork with backend server\nAdvanced level back end engineering\nHow to monitor events in a database\nStructure data for optimum performance\nHow to build a fully functioning social network\nHow to build a direct messaging feature with Firestore\nBest Coding Practices\nImplement custom subclasses for clean and reusable code\nDeep programming, create extensions and functions for clean and reusable code.\nWhat features are included?\nHome feed\nSearch feed with posts and ability to search for users\nCreate users, make posts, like posts, comment on posts\nDirect messaging\nFollow/Unfollow users\nView followers/following users\nAbility to see who has liked posts\nLogging in and logging out\nWho this course is for:\nAnyone that wants to learn how to code or learn how to build high level full stack iOS Mobile Applications.\nAnyone wanting to learn how to build full Social Network app\niOS developers who want to learn about the new SwiftUI Framework.\nSwift developers who wants to learn about SwiftUI Framework.",
      "target_audience": [
        "Anyone that wants to learn how to code or learn how to build high level full stack iOS Mobile Applications.",
        "Anyone wanting to learn how to build full Social Network app",
        "iOS developers who want to learn about the new SwiftUI Framework.",
        "Swift developers who wants to learn about SwiftUI Framework."
      ]
    },
    {
      "title": "Donation App UI from Scratch with Flutter",
      "url": "https://www.udemy.com/course/donation-app-ui-from-scratch-with-flutter/",
      "bio": "Build an awesome donation app ui all from scratch with flutter",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "UI Walkthrough": [
          "Initial Setup and Appbar",
          "Starting with the body of HomeScreen",
          "Working on the GridViewItem Widget",
          "Working on the final Widget"
        ],
        "Final Output": [
          "Final Output"
        ],
        "Access the Code": [
          "Access the Code"
        ]
      },
      "requirements": [
        "Basic object oriented programming knowledge",
        "Basic flutter knowledge"
      ],
      "description": "Welcome to the Donation App UI from Scratch course with Flutter, your ultimate guide for developing a UI project with flutter.\nGoogle’s interface (UI) design tool, Flutter, has brought with it a raft of new perspectives with regard to application development. The Flutter toolkit has opened a gateway to allow for a multitude of UI/UX and, by using its own source code, evading platform limitations. All good so far!\nThroughout this course, you will be learning various essential things that are mostly used by a flutter developer when he/she is working at some firm.\nThis course will help you learn the different components which are involved in making a UI and we will be working on donation app UI with Flutter. In this app, I have used the basic flutter architecture to work on the UI and implement various different things in it. If you are unaware of the advanced file architecture in flutter then you can check my course Flutter 101, where I have explained various available flutter architectures.\nIn this course, you will learn everything in detail. After completing this course you will be able to work on UI's for various different apps and can develop them all by yourself from scratch.\n\n\nThis UI app/project will also help you enhance your CV along with flutter development skills.\n\n\nHappy Learning!!",
      "target_audience": [
        "Begineers",
        "Flutter developers",
        "flutter ui developers",
        "Intermediate",
        "flutter begineer developer",
        "intermediate flutter developer"
      ]
    },
    {
      "title": "50 Projects in 50 Days : Android App Development I Kotlin",
      "url": "https://www.udemy.com/course/10-days-10-projects-android-studio-i-kotlin/",
      "bio": "Master Android Development with 50 Hands-On Projects: From Basics to Advanced Using Kotlin",
      "objectives": [
        "Learn Kotlin basics for Android development.",
        "Design UI components like buttons, image views, and progress bars.",
        "Build 50 real-world Android projects from scratch.",
        "Create apps like calculators and rating systems.",
        "Master XML for layouts in Android Studio."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Toast Message Demo": [
          "1. Toast Message Demo MainActivity XML File",
          "2. Toast Message Demo MainActivity Kotlin File"
        ],
        "Counter App": [
          "1. Counter App MainActivity XML File",
          "2. Counter App MainActivity Kotlin File",
          "3. Counter App Testing"
        ],
        "Text Input and Display": [
          "1. Text Input and Display MainActivty XML File",
          "2. Text Input and Display MainActivity Kotlin File"
        ],
        "ImageView Display": [
          "1. ImageView Display MainActivty XMl File",
          "2. ImageView Display MainActivty Kotlin File"
        ],
        "Checkbox Toggle App": [
          "1. Checkbox Toggle App MainActivity XML File",
          "2. Checkbox Toggle App MainActivity Kotlin File"
        ],
        "Radio Button Group": [
          "1. Radio Button Group MainActivity XML File",
          "2. Radio Button Group MainActivity Kotlin File"
        ],
        "Rating Bar Demo": [
          "1. Rating Bar Demo MainActivity XML File",
          "2. Rating Bar Demo MainActivity Kotlin File"
        ],
        "SeekBar Slider Demo": [
          "1. SeekBar Slider Demo MainActivity XML File",
          "2. SeekBar Slider Demo MainActivity Kotlin File"
        ],
        "Simple Addition Calculator": [
          "1. Simple Addition Calculator MainActivity XML File",
          "2. Simple Addition Calculator MainActivity Kotlin File"
        ]
      },
      "requirements": [
        "Basic computer operating skills.",
        "No prior coding experience is required, but basic programming knowledge is helpful."
      ],
      "description": "Do you want to learn Android app development and create real-world projects in just 50 days? This course is your ultimate guide to mastering Android Studio and Kotlin through hands-on projects that take you from basics to advanced skills!\n\n\nIn this course, you’ll start by learning the fundamentals of Kotlin, the preferred programming language for Android development. We’ll dive into Android Studio, where you’ll create user-friendly interfaces using buttons, image views, progress bars, and other essential UI components.\n\n\nEach day, you’ll work on a new project, starting with simple apps and gradually moving to advanced-level applications like a functional calculator and an app rating system. By the end of 50 days, you’ll have built 50 fully functional Projects and gained the confidence to design and develop your custom Android projects.\n\n\nWhat makes this course unique?\n\n\nIt’s project-focused: You learn by doing, not just watching.\n\n\nIt’s beginner-friendly: Even if you’ve never coded before, you can start here.\n\n\nIt covers a wide range of topics: From UI design to functionality and debugging.\n\n\n\n\nHere’s what you’ll gain from this course:\n\n\nA solid foundation in Android development using Kotlin.\n\n\nHands-on experience creating apps that solve real-world problems.\n\n\nKnowledge of designing and customizing UI components.\n\n\nThe ability to debug, optimize, and build user-friendly applications.\n\n\nA portfolio of 50 completed projects to showcase your skills.\n\n\n\n\nThis course is perfect for beginners who want to start their Android development journey and intermediate learners looking to refine their skills. Whether you’re a student, freelancer, or hobbyist, this course will set you up for success in app development.",
      "target_audience": [
        "Beginners interested in Android development using Kotlin.",
        "Students who want hands-on experience with real-world projects.",
        "Developers looking to strengthen their skills in Android Studio.",
        "Intermediate learners seeking structured practice in Kotlin and XML."
      ]
    },
    {
      "title": "Flutter Auto Orientation",
      "url": "https://www.udemy.com/course/flutter-auto-orientation/",
      "bio": "Set the device orientation programmatically for iOS and Android",
      "objectives": [
        "Flutter Auto Orientation"
      ],
      "course_content": {
        "Flutter Auto Orientation": [
          "1- introduction for this tutorial",
          "2- Install and Import Package in Code",
          "3- Create Example Code Part 1",
          "4- Create Example Code Part 2",
          "5- Create Example Code Part 3 and Finish"
        ]
      },
      "requirements": [
        "Any VS Code & Android Studio Program",
        "Basics of Flutter"
      ],
      "description": "Flutter Auto Orientation:\nSet the device orientation programmatically for iOS and Android\n\n\nIn this tutorial, we are going to create Flutter Auto Device Orientation to the landscape from portrait and vice versa automatically when we rotate the android OR IOS device it sets it’s orientation automatically here we no need to select the device.\nThe Flutter auto device orientation works for both Android and IOS devices for both the directions from left to right OR right to left direction..",
      "target_audience": [
        "Geeks",
        "Students",
        "Any Person using Flutter in projects"
      ]
    },
    {
      "title": "Build a Full-stack Mobile App [MERN, React-Native, Node.js ]",
      "url": "https://www.udemy.com/course/fullstack-react-natve-app-by-stanislav-kadyrov/",
      "bio": "Build a production ready mobile app from scratch with React-Native and Node.js, then deploy it with free services!",
      "objectives": [
        "Learn how to create full stack mobile applications from scratch",
        "Develop a deep understanding of working with cloud databases using the Mongoose ORM.",
        "Master the complete process of user creation and authentication using Passport js and JWT flow.",
        "Execute CRUD operations efficiently with complex objects.",
        "Learn to upload and work with images, and manage static folders on the server.",
        "Explore the process of deploying the server on free hosting.",
        "Acquire skills in mobile app development using React Native.",
        "Implement secure data storage for tokens.",
        "Configure and utilize the smartphone's camera for taking and saving images.",
        "Create a centralized store for application data using the Redux Toolkit library.",
        "Choose between different UI development approaches, such as Expo options and the NativeBase component library.",
        "Learn to build the architecture of the application from scratch, understanding its components and their interactions.",
        "Demonstrate the ability to use the application by creating a sample record, including saving clothing choices and capturing an outfit photo.",
        "View and manage records effectively.",
        "Understand how to retrieve and review weather information for the day a record was created.",
        "Gain a skillset that distinguishes you as a full-stack mobile developer, ready to bring your unique app ideas to life.",
        "Successfully complete the course with a fully functional project that can be showcased to colleagues, clients, or potential employers."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Let's setup Environment",
          "App Architecture Overview"
        ],
        "Build a Server Side": [
          "Server initialization",
          "Server Structure",
          "Authentication routes",
          "Record Routes",
          "Start with using Postman",
          "Install New npm Packages",
          "Start With Database. MongoDB.",
          "Connect to MongoDb",
          "Authentication Section on Server. SignUp controller.",
          "Authentication Section on Server. Check User Uniqueness.",
          "Authentication Section on Server. Create New User.",
          "Authentication Section on Server. Start with SignIn.",
          "Routes Guarding",
          "Start with Records Controllers.",
          "Handle Create New Record(1st Part).",
          "Handle Create New Record(2nd Part).",
          "End with Server. Testing."
        ],
        "Build a Client Side with React Native.": [
          "Intro to Client Side",
          "Expo overview",
          "Start Expo Project",
          "Auth Screens Design Overview",
          "Implementing Frist Screens",
          "Auth Screens Logic Overview",
          "SignUp Screen",
          "SignUp Screen Validation",
          "SignUp Screen Layout and Abstracion",
          "Auth Client Flow",
          "Auth Client Services",
          "Auth Section Testing and Finish",
          "HomeScreen Layout",
          "Forecast Screen Layout",
          "Start Working With Real API",
          "Create Weather Data Util Handler",
          "Finish with Weather Screens",
          "Start Working with Records",
          "Create New Record",
          "Start With Camera Screen",
          "Add Camera Service",
          "Start with Record List Screen",
          "Record List Screen Data Fetching Process",
          "Record Details Screen: Show Record Info",
          "Record Details Screen: Finish WIth Delete Button",
          "Auth Navigation Flow"
        ],
        "Deployment and Final Improvements": [
          "Deploy Back End",
          "Deploy Client and Finish"
        ],
        "Outro": [
          "Outro"
        ]
      },
      "requirements": [
        "Novice JavaScript knowlege",
        "Novice React knowlege",
        "The process of creating an application will be shown from scratch, you will be able to learn everything in the process"
      ],
      "description": "Ready to embark on an exciting coding journey? Check out this exceptional course on building a full-stack application with Node.js and React Native, brought to you by Stanislav, a senior developer, mentor, and technical interviewer. Whether you're a seasoned JavaScript developer or a junior/middle frontend enthusiast looking to expand your horizons, this course has something special for you!\nWhat to Expect: Weather-Tracking App: Learn to create an app that lets users check the current weather and save clothing preferences for various weather conditions. No more guessing what to wear – your outfit choices are just a tap away!\nExciting Features: Discover the app's core functionalities, including storing outfit details, viewing weather forecasts, and even snapping outfit selfies!\nWhat You'll Master:\nBackend Mastery: Dive into the backend world with hands-on experience in cloud database management using the Mongoose ORM, user authentication with Passport.js and JWT, and advanced CRUD operations.\nMobile App Development: Get comfortable with React Native for mobile app development, secure data storage, smartphone camera integration, and crafting a seamless user interface using Redux Toolkit and the NativeBase component library.\nBuild It from Scratch: Learn to create an application architecture from the ground up and deploy the server on free hosting. You'll gain essential skills to bring your ideas to life.\nAnd that's just the beginning! This course offers much more, all designed to turn you into a full-stack mobile developer. You'll be well-prepared to create any application you dream of.\nJoin this thrilling coding adventure today, and when you complete the course, proudly call yourself a full-stack mobile developer. Don't miss out on the opportunity to set yourself apart in the tech world. See you in the course!",
      "target_audience": [
        "Beginner front-end developers who want to develop app from scratch and practice",
        "Experienced front-end developers who want to try themselves as mobile developers",
        "Experienced front-end developers who want to try themselves as full-stack developers"
      ]
    },
    {
      "title": "Kotlin Android App Development - Build 5 Kotlin Android Apps",
      "url": "https://www.udemy.com/course/kotlin-android-development-build-5-real-kotlin-android-apps/",
      "bio": "Android App Development with Kotlin | Boost your Mobile App |; Android Development skills with real Kotlin Android apps",
      "objectives": [
        "You will reinforce your existing android information by applying.",
        "Using SQLite database, you will understand how to work with external databases.",
        "You will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "You will be able to develop modern Android apps",
        "Applying Dark theme to the App",
        "CRUD operations with Room Persistence Library",
        "Saving Data using Shared Preferences",
        "Creating and Using a timer",
        "Creating Android Game",
        "Understanding the MVVM (Model-View-ViewModel) architecture",
        "Animations in Android",
        "Navigation",
        "Creating Splash Scrren with Animations and new Splash Screen API",
        "Fragments",
        "Data Transfer Between Screens",
        "And much more about Android"
      ],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Android and Kotlin is required.",
        "Determination to learn and patience",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "We preferred Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Watching the course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to \"Kotlin Android App Development - Build 5 Kotlin Android Apps\" course\nAndroid App Development with Kotlin | Boost your Mobile App & Android Development skills with real Kotlin Android apps\n\nKotlin is popular for both Android developers and Java developers. Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language, OAK academy has a top-rated course to help you achieve your goals.\n\n\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform My android development course on OAK Academy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nDo you want to improve your career options by learning android?\nDo you want to develop real android apps from Scratch with Kotlin?\nDo you want to strengthen your CV by making Android applications?\nDo you want to be an android studio master?\nDo you want to learn Android by developing applications?\nDo you want to build your first android app with Kotlin?\nIf your answer is “yes”, you are at the right place!\nThanks to this course, you will reinforce your android knowledge with hands-on Android applications and you will take your place in the android world In this course, we will develope five Android apps, and the difficulty level is from easy to difficult Also, since the applications are prepared in a certain index, you will not experience any disconnection between the videos Thanks to this course, you will learn how to develop modern android applications in the simplest way and increase your self-confidence\n\n\nIf you want to develop yourself in Android Apps, this course is for you Improve yourself with different android applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part This course is designed to fill this gap\n\n\nIn this course;\nYou will reinforce your existing android information by applying\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room)\nYou will be able to develop user-friendly interfaces using Material Design principles and components\nYou will be able to develop modern Android apps\nApplying Dark theme to the App\nCRUD operations with Room Persistence Library\nSaving Data using Shared Preferences\nCreating and Using a timer\nCreating Android Game\nUnderstanding the MVVM (Model-View-ViewModel) architecture\nAnimations in Android\nCreating Splash Screen with Animations and new Splash Screen API\nNavigation\nFragments\nData Transfer Between Screens\nAnd much more about Android\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\n\nIs Android Development a good career?\nWith over 2,5 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow latest trends\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions\nSee you in the \"Kotlin Android App Development - Build 5 Kotlin Android Apps\" course\nAndroid App Development with Kotlin | Boost your Mobile App & Android Development skills with real Kotlin Android apps",
      "target_audience": [
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing android knowledge.",
        "Those who want to develop applications using the Kotlin programming language.",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Architectural Components (View Model, Live Data, Room) and SQLite."
      ]
    },
    {
      "title": "Introduction to Android Volley Programming",
      "url": "https://www.udemy.com/course/introduction-to-android-volley-programming/",
      "bio": "Introduction to Android Volley Programming",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Installing and configuring Android Studio": [
          "Pre-installing Android Studio",
          "Pre-installing Android Studio",
          "Installing Android Studio",
          "Creating AVD and running an app",
          "Creating AVD & Running an app",
          "Overview about Android Studio IDE"
        ],
        "Downloading and Setting up volley library": [
          "Downloading Android Volley library",
          "Setting up Android Volley library",
          "Downloading & Setting up Android Volley library"
        ],
        "Using Volley library classes and methods": [
          "Creating basic network request I",
          "Creating basic network request II",
          "Processing XML Data",
          "Using volley library classes and methods",
          "Assignment",
          "Understanding and using Singleton Pattern",
          "Conclusion",
          "Bonus Lecture: Learn Android Volley : Manipulating Databases Using PHP & MySQL"
        ]
      },
      "requirements": [
        "Beginner programmer with android programming",
        "Beginner programmer with java programming"
      ],
      "description": "This intermediate level course takes you to the first steps of programming with android volley library. At First, It shows how download and install android studio, then how to prepare and to be familiar with the development environment. After that, it explains how to download, set up and configure Android volley library. Finally, It discuss classes and methods of android library especially those that make a request or receive a response from internet server",
      "target_audience": [
        "Anyone who wants to start android intermediate level",
        "Anyone who wants to program with android volley library"
      ]
    },
    {
      "title": "Create a Game in Flutter/Dart",
      "url": "https://www.udemy.com/course/create-a-game-in-flutter-dart/",
      "bio": "Learn how to create a 2 player WiFi connected mobile game using Flutter and Dart.",
      "objectives": [
        "How to develop in Flutter and Dart.",
        "How to develop a WiFi connected game in Flutter/Dart."
      ],
      "course_content": {
        "Introduction and Background": [
          "Long Introduction",
          "Short Intro",
          "Background",
          "Flutter"
        ],
        "Section 2: Conception and Preparation": [
          "The Idea of the Game",
          "Create a New Flutter Project",
          "Add the Flame Package"
        ],
        "Create and Add the Images": [
          "Create the Ball Image",
          "Create the Pad Image",
          "Add the Images to the Project"
        ],
        "Creating the Game Objects": [
          "The Ball Class 1",
          "The Ball Class 2",
          "The Pad Class 1",
          "The Pad Class 2",
          "The Pad Class 3",
          "The Pad2 Class 1",
          "The Pad2 Class 2",
          "The Pad2 Class 3"
        ],
        "Test Version of the Game": [
          "The Test Game Class",
          "The Test Main Method",
          "Run the Test Version on an AVD",
          "Run the Test Verion on a Real Device"
        ],
        "Single Player Version of the Game": [
          "Add Some Properties",
          "Add Sensors Package",
          "Add Constants",
          "Determine Screen Size",
          "_init() Method",
          "resize() Method",
          "render() Method",
          "_drawBackground Method",
          "update() Method",
          "_movePad() Method",
          "bounce() Method 1",
          "bounce() Method 2",
          "Testing 1",
          "Testing 2"
        ],
        "Adding Sound": [
          "Adding Sound 1",
          "Adding Sound 2",
          "Adding Sound 3"
        ],
        "Connecting the Game": [
          "Add Constants",
          "Udp Class",
          "Udp Class - initData()",
          "Udp Class - sendData()",
          "main.dart",
          "game.dart",
          "game.dart - _bounce()",
          "game.dart - _sendData()",
          "game.dart - _processData()",
          "game.dart - _setPosData()",
          "Fixing Problems - main, pad2, udp",
          "Fixing Problems - consts.dart",
          "Fixing Problems - game.dart",
          "Fixing Problems - game.dart - _playSoundClient() 1",
          "Fixing Problems - game.dart - _playSoundClient() 2",
          "A Few Optimizations - consts.dart",
          "Run on Server and Client",
          "Check Server and Client"
        ],
        "Scoring in the Game": [
          "consts.dart",
          "txtBox.dart",
          "game.dart",
          "game.dart - _placeText()",
          "game.dart - getScoreText()",
          "game.dart - _checkScore()",
          "game.dart - _processScore()",
          "game.dart - other",
          "udp.dart",
          "udp.dart - initScoring()",
          "udp.dart - sendScore()"
        ],
        "The User Interface": [
          "Intro",
          "main.dart - App Class",
          "HomePage Class",
          "_HomePageState Class",
          "_HomePageState Class - build() 1",
          "consts.dart",
          "_HomePageState Class - build() 2",
          "_HomePageState Class - build() 3",
          "_HomePageState Class - build() 4",
          "_HomePageState Class - build() 5",
          "_HomePageState Class - build() 6",
          "_HomePageState Class - build() 7",
          "_HomePageState Class - build() 8",
          "_HomePageState Class - build() 9",
          "_HomePageState Class - showMessage()",
          "_HomePageState Class - showMessages()",
          "_HomePageState Class - changeColor()",
          "_HomePageState Class - showScore()",
          "_HomePageState Class - dispose()",
          "Udp Class",
          "Udp Class - initMessaging()",
          "Udp Class - sendMessage()",
          "Game Class",
          "Game Class - getWinText()",
          "Game Class - reset()",
          "Fixing Stuff - consts, txtBox, udp",
          "Fixing Stuff - main.dart",
          "Fixing Stuff - game.dart",
          "Running on Server and Client Devices",
          "Testing on Server and Client Devices"
        ]
      },
      "requirements": [
        "Very basic programming knowledge: Knowing what variables, functions and classes are."
      ],
      "description": "In this course you will learn how to create a 2 player WiFi connected mobile game using Flutter and Dart. While learning how to create the game, you will learn a lot about Flutter and Dart.\nMovement in the game will be controlled by sensor input. Accelerometer input to be exact.\nOnly minimal programming knowledge is required, like knowing what variables and functions and classes are. We won’t waste much time on history, installation and other boring topics, and we’ll try to stick to the fun, interesting and cool stuff.\nIn this course we will go through everything that is needed to create this game. The course will be divided into the following sections:\nIntroduction and Background\nConception and Preparation\nCreate and Add the Images\nCreating the Game objects\nTest Version of the Game\nSingle Player Version of the Game\nAdding Sound\nConnecting the Game\nScoring in the Game\nThe User Interface\nReviewing All the Code\nIdeas for Improving the Game\nWe will start with a little bit of background. Then we’ll go through the idea of the game. Next we’ll get a better idea of what we want to achieve. En suite we’ll start coding a single player version of the game. Then we’ll add functionality for the second player and connect everything to WiFi. Finally, when the game is working as expected, it will be time for the user interface. First we’ll plan on what it should look like, and then we’ll just do it.\nDuring the course, we’ll spend most of our time coding. Everything will be explained and you will have access to all the code. You will also have access to a PDF file containing all the external links that we referred to in the course.\nYour feedback is very important to me in order to improve this course in the future. You will automatically have access to any new or improved future content - forever.\nIf there is something that is not clear, please let me know, so that I can make a video explaining is. Because if something is not clear to you, chances are that it is not clear to someone else as well. And if you have any questions, feel free to contact me through the Udemy page.",
      "target_audience": [
        "Beginner to more experienced developers interested in creating a game."
      ]
    },
    {
      "title": "Project-Based iOS 10 App Development - Build a Real App",
      "url": "https://www.udemy.com/course/ios-8-app/",
      "bio": "Become a professional iOS App Developer by building beautiful Real-World apps",
      "objectives": [
        "By the end of this project you will be able to build your own iOS 10 Apps",
        "Know all the secrets & the entire process behind building a great iOS 10 App",
        "Implement beautiful designs and animations",
        "Know how to use top networking libraries in your own iOS 10 App"
      ],
      "course_content": {
        "Introduction": [
          "Project Overview"
        ],
        "Initial Setup": [
          "Setting up the blog",
          "Setting up the project",
          "Configure the UITableView"
        ],
        "Custom UITableViewCell": [
          "Subclassing UITableViewCell",
          "Customizing the cell"
        ],
        "Fetching the Blog's Feed": [
          "Downloading the posts"
        ],
        "Displaying the Blog Posts": [
          "Display the Blog Posts",
          "Add custom fonts & Style the Cell"
        ],
        "Adding Animations and Styling": [
          "Animating the favorited posts",
          "How to deal with bugs"
        ],
        "Displaying the Posts Content": [
          "Implementing the posts content"
        ],
        "Finishing the app": [
          "Final retouches & changes"
        ],
        "Conclusion": [
          "Wrapping up the project"
        ]
      },
      "requirements": [
        "Mac OS 10.6+",
        "Xcode 4+",
        "Basic Objective-C programming experience"
      ],
      "description": "Become a professional iOS 10 app developer by building Real-World projects.\nIn this project-based course you'll learn how to build a beautiful and elegant iOS 10 Blog Reading app that fetches content from a Wordpress site.\nBlog reading apps are one of the most common use cases and if you become a full-time iOS developer you will surely come across this requirement. We'll guide you step by step into building this entire app from total scratch.\nJoin the 45,000 students that are learning new skills in our Udemy courses!\nThis course is authored by Sebastian Dobrincu, professional iOS developer and trainer with over 5 years of experience.\nWhat you'll learn in this Learn by Doing training:\nCreating an elegant iOS 10 app using Objective-C and Xcode.\nUsing Xcode's drag and drop tools to build beautiful User Interfaces.\nImplement sleek animations and transitions inside your app.\nFetch data from a Wordpress site, using the Wordpress API plugin.\nPutting it all together to make a complete Real-World app\nWordpress powers around 40% of the Internet, and iOS 10 is the hottest tech to learn. This course allows you to combine the two and build an awesome portfolio!",
      "target_audience": [
        "Anyone who wants to build mobile apps",
        "Beginners into the programming world",
        "Experienced developers who want to refresh their knowledge"
      ]
    },
    {
      "title": "Voice Changer Android Java app/Arnold Schwarzenegger's voice",
      "url": "https://www.udemy.com/course/voice-changer-android-java-app/",
      "bio": "The android app that let's you say anything in Schwarzenegger's voice",
      "objectives": [
        "Make a Voice Changer Android Java app that uses Arnold Schwarzenegger's voice"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Setting up the Project",
          "Creating the UI",
          "Connecting the Views to the Activity",
          "Creating the API Request",
          "Handling Errors",
          "Writing the Response to Disk",
          "Playing the audio",
          "Serializing Model Parameters",
          "Running the App",
          "Thank you!"
        ]
      },
      "requirements": [
        "Basic Android and Java knowledge"
      ],
      "description": "The Schwarzenegger Voice Changer app is an Android app that we will write in Java, using Android Studio. The app uses an API that takes in a String message, and in turn, it returns an audio file with the message said in Schwarzenegger's voice.\n\nWe are going to learn how to :\n- setup the new project\n- design and create the UI\n- create a Model class and an Interface\n- use Retrofit to send a POST request to the API\n- parse the response\n- write the audio file to disk\n- play the audio using MediaPlayer\n\nAfter this course, you will know how to create a new app, from start to finish.\n\nHappy coding!",
      "target_audience": [
        "Beginner and Intermediate Android developers"
      ]
    },
    {
      "title": "Android Material Design Slidenerd Style",
      "url": "https://www.udemy.com/course/android-material-design-zero-to-hero/",
      "bio": "Learn to build material design apps from null to stackoverflow",
      "objectives": [],
      "course_content": {
        "Material Design Basics": [
          "Setup Material Design",
          "Using Colors in Material Design",
          "Adding a Toolbar to your app",
          "Customize the Toolbar Appearance",
          "Add Actions To The Toolbar",
          "Navigation Drawer: The Design Guidelines",
          "Navigation Drawer: The Layout Structure",
          "Navigation Drawer: Integrating With The Toolbar",
          "Navigation Drawer: Finishing the Setup",
          "Types of Navigation Drawers In Material Design",
          "The Translucent Status Bar",
          "Translucent Status Bar Hack"
        ],
        "Displaying Lists with RecyclerView": [
          "RecyclerView: Architecture",
          "RecyclerView: Setup Adapter",
          "RecyclerView: Setup ViewHolder",
          "RecyclerView: Displaying Data",
          "How to Match Your Design With Code",
          "Handling Click And Delete in RecyclerView"
        ],
        "Android Touch Framework And RecyclerView": [
          "Android Touch Framework Overview",
          "The Touch Event Lifecycle",
          "How To Process Touch Events By Your ViewGroup",
          "How to Block Touch Events",
          "Handling Item Clicks For RecyclerView From Adapter",
          "Handling Item Clicks For RecyclerView From Activity or Fragment"
        ],
        "All Things Material Part 1": [
          "How To Add Ripple Effect",
          "How To Make Tabs With SlidingTabLayout",
          "How To Make Tabs With Custom Icons",
          "How To Make Swipe Tabs And Scroll Tabs",
          "What is JSON",
          "Android Volley LIbrary Architecture",
          "Setup Networking With Volley Library",
          "Getting Movie Lists From Rotten Tomatoes API",
          "How to Add Vector Drawables To Your App",
          "Run Vector Drawables On Older Devices",
          "How To Animate Vector Drawables In Android",
          "How To Download JSON Feed With Volley Library?",
          "How To Parse JSON Feed?",
          "Dsiplay JSON Data Inside RecyclerView",
          "How to Code Defensively While Dealing With JSON",
          "How To Handle Volley Errors"
        ],
        "All Things Material Part 2": [
          "How To Add A Floating Action Button In Your App?",
          "How To Add A Floating Action Menu In Your App?",
          "How To Use Parcelable In Android?",
          "The JobScheduler Service API",
          "JobScheduler Service Example",
          "RecyclerView + SQLite + JobScheduler + Volley",
          "Fixing Bugs",
          "RecyclerView Item Animators",
          "RecyclerView Appearance Animations",
          "How To Add Swipe To Refresh",
          "How To Create Sections In RecyclerView",
          "Fixing Bugs: Reference To JSONObjectRequest Is Ambiguous",
          "Android Transition API",
          "Android Content Transition Between Two Activities",
          "Android Shared Element Transition Between Two Activities",
          "Hide Floating Action Button When Drawer Is Open",
          "Android AppCompat Activity"
        ]
      },
      "requirements": [
        "Object Oriented Java",
        "Basics of Android (Intents/SQLite/Networking/ListViews)"
      ],
      "description": "Material Design in Android is the new and future way of designing and developing apps. It involves new APIs that not only enhance the visual perception of your apps but also the functionality in terms of how you create them and how the user perceives them.\nThis course walks through the process of building a simple app that displays list of movies but dives into absolute detail while building the app.\nThe concepts learnt through this course can be applied to any other app you plan to design using material design terminology.\nYou will be able to make apps that use Navigation Drawer, Toolbar, Transitions, RecyclerView, Animations, Ripple Effects, Material Tabs, Vector Drawables, JSON Parsing, Volley library, JobScheduler API and several other fixes after completing this course.\nLearn how to validate your design with your code with thirdy party APIs and libraries discussed in the course\nWhat are the requirements?\nYou need to be familiar with Object Oriented Java and Basic Android programming concepts like Intents, Activities, Fragments, ListView\nHave Android Studio IDE installed\nWhat will I get from this course?\nOver 50 lectures in Material Design , worth over 20 hours of content\nBecome proficient in Material Design APIs\nLearn to build apps that use RecyclerView instead of ListView\nLearn to integrate database with background data processing\nUnderstand libraries like Volley for background data processing\nWho is the target audience?\nAnyone who wants to build apps with material design and has some basic knowledge in Java and Android",
      "target_audience": [
        "If you want to make an app that uses material design, this course dives deeper than most others",
        "if you want to use custom animations, touch handling, recyclerviews, dynamic data , networking libraries, animation libraries, in material design, this course is perfect for you",
        "This course does not dive deep into the designing aspect of making an app such as using PhotoShop or Illustrator, hence not suited if you want to be a designer after completing this course"
      ]
    },
    {
      "title": "Learn Swift 4 in 1 Hour in 2020",
      "url": "https://www.udemy.com/course/learn-swift-4/",
      "bio": "Learn the fundamentals of Swift 4, programming language from Apple",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "READ ME"
        ],
        "Learn Swift 4": [
          "How To Download Xcode",
          "Building Our First Simple App",
          "Strings in Swift 4",
          "Numbers in Swift 4",
          "Boolean & Conditional Logic/Constants & Logical Operators in Swift 4",
          "Arrays in Swift 4",
          "Loops in Swift 4"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "Requires a computer running macOS Sierra or Mojave"
      ],
      "description": "The goal of this course is to introduce you to the techniques used to develop applications for iPhone, iPad, and iPod Touch using the iOS 11 operating system, the Swift programming language, version 4, and Xcode. By the end of the course, you will be able to write simple iOS applications using Swift.\nThe main course topics include:\nHow To Download Xcode\nBuilding Our First Simple App\nStrings in Swift 4\nNumbers in Swift 4\nBoolean & Conditional Logic in Swift 4\nConstants & Logical Operators in Swift 4\nArrays in Swift 4\nLoops in Swift 4",
      "target_audience": [
        "People new to programming",
        "Existing programmers who want to learn Swift 4",
        "Anyone who wants to build iOS apps",
        "Anyone who wants to get a job as an iOS developer",
        "Students and teenagers",
        "Business owners and startups"
      ]
    },
    {
      "title": "Simple Game Programming From Scratch with libGDX and java",
      "url": "https://www.udemy.com/course/game-programming-with-libgdx-and-java/",
      "bio": "With this course, we are going to build a \"flappy bird like\" game by libgdx and java from scratch!",
      "objectives": [],
      "course_content": {
        "let's start!": [
          "libgdx setup",
          "opengameart"
        ],
        "coding stuff": [
          "background",
          "bird initialize",
          "gravity",
          "jumping bird",
          "enemy",
          "enemy but continuously",
          "understanding hitbox",
          "detecting the overlaps",
          "score",
          "adding fonts",
          "adding sound and end",
          "source code"
        ]
      },
      "requirements": [
        "basic java knowledge is required."
      ],
      "description": "This course is for the ones who has java knowledge or just interested in game development. You can enroll this course as a beginning point of your game developer career. You will learn basic concepts of game development like, where to find the game graphics and how to manuple those graphics for your games by building that enjoyable project.",
      "target_audience": [
        "ones who are interested about game programming.",
        "ones who are interested about libgdx."
      ]
    },
    {
      "title": "Flutter: Build Multi-Platform Apps with a Shared Codebase",
      "url": "https://www.udemy.com/course/mastering-flutter-multi-platform-apps-with-shared-codebase/",
      "bio": "Have you ever needed to build multiple Flutter applications with different purposes but share a common reusable codebase",
      "objectives": [
        "Design and build enterprise-grade Flutter applications with a shared codebase",
        "Develop three Flutter projects: Two fully functional apps for phones, tablets, and web, and one reusable Flutter package",
        "Implement a modular architecture to share code efficiently across multiple applications",
        "Integrate and retrieve data from different RESTful APIs in each app",
        "Build apps that support iOS, Android, and Web platforms",
        "Ensure seamless adaptive UI for phones, tablets, and web",
        "Optimize for portrait, landscape, and split-screen layouts on tablets and web",
        "Implement dark and light mode for better user experience",
        "Add search functionality to filter and display data dynamically"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Who is your instructor?",
          "Resources - Course Setup"
        ],
        "Shared Package": [
          "Importing and Reviewing the Shared Single Codebase Package",
          "Creating Classes and Widgets"
        ],
        "Users Project": [
          "Opening & Reviewing",
          "Creating Services and Pages"
        ],
        "Products Project": [
          "Opening and Reviewing",
          "Creating Services and Pages"
        ],
        "Summary": [
          "Summary"
        ]
      },
      "requirements": [
        "Basic understanding of Flutter & Dart",
        "Familiarity with RESTful APIs and JSON data, but not necessary"
      ],
      "description": "Have you ever needed to build multiple Flutter applications—for phones, tablets, and web—that serve different purposes but share a common, reusable codebase? If so, this course is for you!\n\n\nIn this course, you'll develop three projects:\nA shared codebase containing reusable logic and widgets\nUsers App (for phones, tablets, and web)\nProducts App (for phones, tablets, and web)\n\n\nYou’ll start by analyzing common features across applications and designing a modular shared codebase to maximize reusability. Then, you’ll build the Users App, which retrieves data from a RESTful API and implements:\nAdaptive UI for phones, tablets, and web\nSplit-screen layout for tablets and web\nDark & light mode\nNavigation between list and detail pages\nSearch functionality to filter data\n\n\nNext, you'll develop the Products App, which mirrors the Users App’s functionality but fetches data from a different RESTful API—demonstrating how multiple applications can seamlessly share the same codebase.\nBy the end of this course, you’ll have mastered the patterns and best practices for building enterprise-level, large-scale Flutter applications that efficiently share logic and UI components across multiple projects.\n\n\nFirst App: Shared package\nThe Shared package holds all of the common reusable codebase, and widgets to be accessed by individual Flutter projects. This package will be accessed by two separate Flutter projects, the users and the products applications.\n\n\nSecond App: Users projects\nThe Users Flutter project is a completely separate iOS, Android, and Web application that will access and utilize the shared package, reusable codebase.\n\n\nThird App: Products projects\nThe Products Flutter project is a completely separate iOS, Android, and Web application that will access and utilize the shared package reusable codebase.",
      "target_audience": [
        "Flutter developers looking to build scalable, multi-platform applications",
        "Mobile & web app developers who want to share code efficiently across projects",
        "Intermediate Flutter learners ready to take their skills to the next level",
        "Software engineers & architects designing large-scale applications with modular architecture",
        "Anyone interested in code sharing between Flutter apps and packages"
      ]
    },
    {
      "title": "Android App Development with Parse and Android Studio IDE",
      "url": "https://www.udemy.com/course/android-app-development-with-parse-and-android-studio-ide/",
      "bio": "Videos course for developing a live status update Android Mobile Application using Android Studio IDE.",
      "objectives": [],
      "course_content": {
        "Introduction and Getting Started!": [
          "The Android Application",
          "Android Studio IDE",
          "Intergrating Genymotion Emulator with Android Studio",
          "Cloud Storage Backend. Parse",
          "Including parse library to Android studio."
        ],
        "Getting our hands dirty!": [
          "Parse Walkthrough.",
          "Registration Form Design",
          "Storing Registered Users",
          "Login Form Design",
          "Authenticating Users",
          "Updating Status and Logout.",
          "Organizing our Activities.",
          "Homepage Listview.(Status Updates)",
          "Custom Adapter",
          "Populating Homepage With Custom Adapter"
        ],
        "Customizations.": [
          "Customizing Adapter's Layout Part 1.",
          "Customizing Adapter's Layout Part 2.",
          "Customizing the ActionBar",
          "Customizing a single row.",
          "On List Item Click.",
          "Status Detail View",
          "More Customization.",
          "App Launcher Icon."
        ]
      },
      "requirements": [
        "Java Knowledge",
        "Basic android development skills",
        "Basic XML"
      ],
      "description": "In this Android course, we are going to use the new Android Studio IDE provided by Google to develop a live user's status update application. User's will be able to sign up for an account, Log in, then start posting status update as well as viewing other user's updates in a Listview. Download the App. Live Update.\nWe will be using the MVC pattern, where the xml will be used for creating views and java code as the controller. Our data will be stored in a cloud server, Parse website.\nThere is a lot to cover so let's get started.",
      "target_audience": [
        "Mobile App Developers",
        "Entrepreneur",
        "Mobile Software Development Students"
      ]
    },
    {
      "title": "Professional App Developer",
      "url": "https://www.udemy.com/course/professional-app-developer/",
      "bio": "Build an app in 15 Minutes",
      "objectives": [
        "Design user-friendly and responsive UI/UX with Bootstrap Studio software",
        "Export design to HTML, CSS, JS and Bootstrap assets",
        "Create functionality of designs with JS and use Google Sheets API to use as Database",
        "Publish website with GitHub private repository and publish via Netlify",
        "Create mobile app structure Kodular and add convert website to webapp via WebView component",
        "Export as APK or AAB and publish at Play Store"
      ],
      "course_content": {
        "Introduction": [
          "Why You Should Enroll in This Course",
          "Intro to Bootstrap Studio"
        ],
        "Mastering Bootstrap Studio": [
          "Export Bootstrap Studio to HTML, CSS and JS, and Publish it Online with Netlify",
          "Exporting from BSD and Publishing to Netlify via GitHub"
        ],
        "Integrating Data with Google Sheets": [
          "Using Google Sheets API to Connect a Database with Front-end Designs",
          "Using Google Forms to Push Data to Spreadsheet from App",
          "Using the Google Sheets API"
        ],
        "Building and Publishing Hybrid Apps": [
          "Using Kodular.io to Convert Website to Hybrid Webapp and Export to APK or AAB",
          "Publish App to Google Play Store"
        ]
      },
      "requirements": [
        "HTML",
        "CSS",
        "JavaScript"
      ],
      "description": "In this comprehensive course, you will master the art of rapid app development using Bootstrap Design software, JavaScript, and Kodular, a powerful drag-and-drop editor for creating mobile applications. Through a series of structured lessons, hands-on exercises, and practical projects, you will learn how to design user-friendly and responsive user interfaces, export designs to HTML, CSS, JS, and Bootstrap assets, implement functionality using JavaScript, utilize Google Sheets API as a database, publish websites via GitHub private repositories and Netlify, create mobile app structures with Kodular, convert websites to web apps using the WebView component, and finally, export your mobile apps as APK or AAB files and publish them on the Google Play Store.\n\n\nCourse Detail:\n1. Introduction to Rapid App Development:\n- Overview of the course objectives and learning outcomes.\n- Introduction to Bootstrap Design software and its significance in creating responsive UI/UX.\n- Overview of JavaScript and its role in adding dynamic behavior to web applications.\n- Introduction to Kodular as a drag-and-drop editor for mobile app development.\n\n\n2. Designing Responsive UI/UX with Bootstrap:\n- Understanding the principles of responsive design.\n- Hands-on exercises to create user-friendly layouts using Bootstrap Design software.\n- Techniques for designing visually appealing interfaces that adapt to different screen sizes and devices.\n\n\n3. Exporting Designs and Implementing Functionality:\n- Exporting designs to HTML, CSS, JS, and Bootstrap assets for web development.\n- Implementing functionality using JavaScript to add interactive features and enhance user experience.\n- Exploring Google Sheets API and integrating it into your projects as a simple database solution.\n\n\n4. Website Deployment and Mobile App Development:\n- Publishing websites using GitHub private repositories and deploying them via Netlify for easy sharing and collaboration.\n- Introduction to Kodular's drag-and-drop interface for creating mobile app structures without coding.\n- Converting websites into mobile web apps using the WebView component in Kodular.\n\n\n5. Publishing Mobile Apps on Google Play Store:\n- Export your mobile apps as APK or AAB files from Kodular.\n- Step-by-step guide to publishing your apps on the Google Play Store.\n- Best practices for optimizing app listings and reaching a wider audience.\n\n\n6. Conclusion and Next Steps:\n- Recap of key learnings and achievements throughout the course.\n- Guidance on further resources and advanced topics for continued learning in app development.\n- Encouragement to apply the acquired skills to real-world projects and explore the limitless possibilities of app development.\n\n\nBy the end of this course, you will have the knowledge and skills to rapidly design, develop, and deploy web and mobile applications using Bootstrap, JavaScript, and Kodular, empowering you to bring your app ideas to life in just 15 minutes.",
      "target_audience": [
        "Creative people who want to create an app with almost no coding experience or time"
      ]
    },
    {
      "title": "Flutter Beyond Basics: Build Faster, Smarter & Scalable Apps",
      "url": "https://www.udemy.com/course/flutter-beyond-basics-build-faster-smarter-scalable-apps/",
      "bio": "Level up your Flutter skills with pro practices in just 2 hours",
      "objectives": [
        "Create and reuse custom widgets to reduce repetition and simplify UI development.",
        "Handle forms and validation the right way to improve user input and app reliability.",
        "Write clean, organized code with proper naming conventions, commenting, and file structuring.",
        "Use helper methods, mixins, and constructor techniques to improve code readability and reduce boilerplate."
      ],
      "course_content": {
        "Introduction": [
          "Getting Started: Setting Up Your Flutter Development Environment"
        ],
        "Mastering Flutter UI, Navigation & State Management": [
          "Building UI in Flutter: When to Use Stateful and Stateless Widgets",
          "Effortless State Management in Flutter Using GetX",
          "Flutter Navigation Made Easy Named Routes Explained",
          "Level Up Your UI Mastering Advanced Flutter Widgets"
        ],
        "Mastering API Integration: Timeout, Network Errors & Unified API Class": [
          "Setting Up the API Backend",
          "Structuring a Unified API Layer for Your Flutter App",
          "Integrating Our Unified API Layer To UI Class"
        ],
        "Structuring UI & Reusability in Flutter": [
          "Building Forms and Handling Validation in Flutter",
          "Sharing Data Across Screens Static Constructors SharedPreferences",
          "Flutter Custom Widgets Build Once Reuse Everywhere",
          "Stylize Your App Adding Custom and Google Fonts in Flutter"
        ],
        "Writing Smarter Flutter Code with Reusability & Patterns": [
          "Helper Methods in Flutter Write Less Do More",
          "Using Flutter Packages Custom Widgets to Tackle UI Challenges",
          "Simplifying Flutter Code with Named Constructors and Parameters",
          "Mixins in Dart Add Functionality Without Inheritance"
        ],
        "Code Clarity, Best Practices & AI for Smarter Development": [
          "Write Clean Code Naming Conventions in Flutter and General Development",
          "Commenting in Flutter Best Practices and Types Explained",
          "Problem Solving with ChatGPT A Developer's Assistant"
        ],
        "Refactor, Debug & Maintain Flutter Apps Like a Pro": [
          "Reusing and Extending Flutter Model Classes with Extra Fields",
          "Responsive Debugging Test Flutter Layouts in Chrome DevTools",
          "Simplify and Organize"
        ]
      },
      "requirements": [
        "You should have basic knowledge of Flutter and Dart — this course is ideal for intermediate developers looking to level up."
      ],
      "description": "Welcome to Flutter Beyond Basics: Build Faster, Smarter & Scalable Apps — a powerful and streamlined course built specifically for intermediate Flutter developers who are ready to break out of the basics and start building like a pro.\nI’m Shivam, a professional mobile developer with over 5 years of industry experience in both Android and Flutter development. Throughout my career, I’ve worked on production-level apps, scalable architectures, and fast delivery cycles — and now, I’m sharing all of those insights with you in this action-focused, 2-hour course.\n\n\nIn this course, you’ll learn the real-world practices that experienced developers rely on to:\nWrite clean, reusable, and maintainable code\nStructure your apps for performance and scale\nImprove your development speed and workflow efficiency\nAvoid common anti-patterns and technical debt traps\nImplement scalable state management and architecture strategies\nDeliver apps that are easy to maintain, test, and expand\n\n\nThis course is NOT about creating another basic to-do app. It’s about giving you tools, patterns, and confidence to build scalable and professional Flutter applications — whether you're working for clients, your company, or building your own product.\nAnd the best part? It’s just 2 hours long — so you’ll get the value you need without wasting your time.\n\n\nBut we’re not stopping here.\nMore content is coming! Expect frequent updates, new modules, and advanced lessons based on real-world use cases as Flutter continues to grow.\nIf you're ready to level up your skills, build better apps, and join the next generation of high-performing Flutter developers — this course is for you.",
      "target_audience": [
        "Flutter developers who already know the basics and want to take their skills to the next level",
        "Self-taught or junior developers looking to write cleaner, more scalable, and maintainable code",
        "Mobile developers transitioning from native Android to Flutter who want efficient, real-world development practices"
      ]
    },
    {
      "title": "React Native Course For React Developers With Projects(2023)",
      "url": "https://www.udemy.com/course/react-native-full-course/",
      "bio": "Learn React Native And Build Real World Projects With Navigation, Data Storing, React Native Paper, HTTP Requests",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Building Application": [
          "Creating React Native Expo App",
          "Designing App Mockup",
          "Building Header",
          "Designing Homepage",
          "Managing Screens To Be Rendered",
          "Designing Back Button",
          "Working On Add Note Screen",
          "Storing Items In State",
          "Designing List Of Items",
          "Optimization - Removing Back Button On Home Screen",
          "Summary"
        ]
      },
      "requirements": [
        "Basic ReactJS Knowledge Is Required"
      ],
      "description": "Welcome.\nHere in this course, we have a complete tutorial on React Native With Project Focused Approach\nAbout React Native: React Native is an open-source UI software framework created by Meta Platforms, Inc. It is used to develop applications for Android, Android TV, iOS, macOS, tvOS, Web, Windows, and UWP by enabling developers to use the React framework along with native platform capabilities.\nYou Will Learn\nReact Native Apps With EXPO\nStyling React Native Apps\nBuilding Real World Apps\nReact Native Navigation and Routing System\nStoring Data In Device Storage\nReact Native Paper Design\nBuilding Responsive Android And IOS Applications\nUse Libraries Like Navigation\nUse Designing Libraries\nBuilding Responsive Android And IOS Applications\n\n\nAbout The Project 1\n\n\nLearn React Native Inputs\nLearn Fundamentals From Project\nLearn Core Components Of React Native\nLearn How To Make Your Apps Better With React Native\nLearn Lists and Flatlists\nLearn text Inputs\nUser Inputs\nApplications with multiple screens\nAnd Much More\n\n\nAbout The Project 2 ( News App With React Native:\n\n\nNavigation and Routing\nPassing Data Between Multiple Routes\nDesigning App With React Native Paper\nLearn Storing Data In React\nLearn to handle API Operations\n\n\nApplications with multiple screens\nAnd Much More\nLet's see you in the course now.\nIf you are facing any issues in the project then make sure you send a mail to our team regarding help\nAnd our team is also available in chat and comments if you are having any issue\n\n\nHere we are delivering the best content on Udemy with a time-saving approach to learning i.e. building real-world apps with the React Native",
      "target_audience": [
        "Beginner React / JavaScript Developers Who Wants To Learn Mobile Cross Platform Development"
      ]
    },
    {
      "title": "ARKit & AI Crash Course: Build iOS 18 Apps with SwiftUI",
      "url": "https://www.udemy.com/course/arkit-ai-crash-course-build-ios-18-apps-with-swiftui/",
      "bio": "Build immersive AR applications with SwiftUI and AI-driven image generation techniques for iOS 18",
      "objectives": [
        "Fundamentals of Augmented Reality: Understand the principles of augmented reality and how ARKit integrates with iOS to create immersive experiences.",
        "Introduction to ARKit and SwiftUI: Gain proficiency in using ARKit 6 alongside SwiftUI to build modern, interactive AR applications.",
        "3D Object Manipulation: Learn how to create, display, and manipulate 3D models in an AR environment, including techniques for rendering and animating objects.",
        "Scene Understanding: Explore how to detect and interact with real-world surfaces, including horizontal and vertical planes, to place virtual objects accurately.",
        "User Interaction: Implement user interactions in AR, such as tapping on virtual objects, dragging them, or responding to gestures.",
        "Image Recognition and Tracking: Master the use of image tracking configurations to overlay virtual content on recognized images, enhancing user engagement.",
        "Combining Technologies: Discover how to integrate Core ML with ARKit for advanced features like object recognition and machine learning capabilities.",
        "Project Development: Complete hands-on projects that involve building functional AR applications from scratch, applying learned concepts in practical scenarios."
      ],
      "course_content": {
        "Introduction & Setup": [
          "Welcome to the Course",
          "Accessing Projects"
        ],
        "Hand Gesture Detector": [
          "Starting the Project",
          "Further configuration",
          "Create ARViewContainer",
          "Create SessionHandler",
          "SessionHandler continuation",
          "Vision Framework",
          "Adding mesh instance",
          "Final project 1"
        ],
        "ARChitect": [
          "Obtaining API key for HuggingFace",
          "Obtaining API key for Stability.AI",
          "Starting the Project",
          "Start writing views and logic",
          "Introduce InputView",
          "Introduce EntityService",
          "Display sample glb file",
          "Introduce FileService",
          "Introduce URLSessionHandler",
          "Introduce MeshRepository",
          "Fine tuning"
        ]
      },
      "requirements": [
        "Familiarity with iOS development"
      ],
      "description": "Unlock the potential of augmented reality and artificial intelligence with our ARKit & AI Crash Course! This comprehensive course guides you through the development of two innovative applications using the latest technologies in iOS 18 and SwiftUI.\n\n\nCourse Overview\nHand Gesture Detector App: Dive into the world of ARKit and Vision as you create a hand gesture detector that seamlessly integrates virtual objects into the augmented reality space. Learn how to utilize gesture recognition to enhance user interaction, making your AR experiences more intuitive and engaging.\nARChitect App: Explore the cutting-edge capabilities of AI in architecture with the ARChitect app. This project allows users to input text prompts, which are then processed by Stable Diffusion to generate stunning images. With a touch of prompt engineering, you'll transform these images into 3D models using advanced techniques from Stability AI, bringing your creative visions to life.\nWhat You Will Learn\nARKit Fundamentals: Understand the core components of ARKit and how to implement them in your projects.\nVision Framework: Leverage Apple's Vision framework for effective hand gesture detection.\nStable Diffusion: Discover how to use Stable Diffusion for image generation based on user input, enhancing your app's functionality.\n3D Model Generation: Learn the process of converting generated images into 3D models through prompt engineering and AI tools.\nWho This Course Is For\nThis course is ideal for developers looking to expand their skill set in augmented reality and artificial intelligence. Whether you're a beginner or have some experience with SwiftUI and ARKit, this course will equip you with the knowledge and tools needed to create innovative applications that blend the physical and digital worlds.Join us on this exciting journey to master ARKit and AI technologies, and take your app development skills to new heights!",
      "target_audience": [
        "Basic Programming Knowledge: Students should have a foundational understanding of programming concepts, particularly in Swift, as the course will involve coding in this language.",
        "Familiarity with iOS Development: A basic understanding of iOS app development and familiarity with Xcode is recommended. This includes knowledge of how to create and run simple iOS applications.",
        "Understanding of SwiftUI: Familiarity with SwiftUI is beneficial, as the course will leverage this framework for building user interfaces.",
        "Device Requirements: Students will need a compatible iOS device (iPhone or iPad) that supports ARKit, preferably running iOS 18 or later, to test and run their augmented reality applications."
      ]
    },
    {
      "title": "iPhone Product Creation For Beginners: Fast Track Training",
      "url": "https://www.udemy.com/course/iphone-product-creation-for-beginners-fast-track-training/",
      "bio": "The Simple Process To Create Info-products Using Your iPhone - From Start To Finish",
      "objectives": [
        "How To Create A Product In Hours With Your iPhone",
        "No Fancy Software Or High-tech Equipment Required",
        "Brand New Over-The-Shoulder Video Series",
        "The Simple Process To Create Info-product Using Your iPhone - From Start To Finish."
      ],
      "course_content": {
        "Overview": [
          "Overview"
        ],
        "Setting Up Your iPhone Equipment": [
          "Minimum iPhone Equipment Adapter",
          "Hardwiring-Your-iPhone-to The Ethernet",
          "Minimum Camera Equipment"
        ],
        "Alternative Sound Equipment": [
          "Alternative Sound Equipment",
          "6 - Speech To Text Content",
          "Editing Written Content",
          "Dragon Anywhere App Alternative"
        ],
        "Recording Your iPhone Screen": [
          "Recording Your iPhone Screen",
          "Taking Talking Head Videos",
          "Recording Live Video",
          "Editing Video"
        ],
        "Recording Audio": [
          "Recording Audio",
          "Editing Multi Track Audios"
        ],
        "Creating Presentations": [
          "Creating PDFs and-Screenshots",
          "Creating Presentations",
          "Displaying Presentations"
        ],
        "File Management": [
          "File Management - Part 1",
          "File Management - Part 2"
        ],
        "Conclusion": [
          "Conclusion"
        ],
        "Bonus Lecture: My New Product List": [
          "Bonus Lecture: My New Product List"
        ]
      },
      "requirements": [
        "An iPhone with internet access",
        "A willingness to learn and take action"
      ],
      "description": "iPhone Product Creation For Beginners: Fast Track Training\nYour iPhone can make you money...\nBrand New Over-The-Shoulder Video Series On How To Create A Product In Hours With Your iPhone.\nDo you have an iPhone? Then you've everything you need to start making money online.\nWith it, you can create your own info-product.\nWhy an info-product?\nFirst it has a wider profit margin than physical products.\nIt's cheap to create and you can sell it for almost the same price as a physical product.\nYou Can Make A Big Profit!\nAs you can see, it's extremely profitable and you can get started very quickly.\nNo need to worry about the delivery process and other things like that. Just upload the products to your site and you can automate everything.\nYou Can Do It With Your iPhone.\n“If it's so profitable and easy then why only a few people do it?\"\nThe answer is simple.\nIt's because most people think creating info product is hard.\nThe misconception is that people believe they need expensive equipment and software or even need to set up a home studio.\nThat's completely wrong!\nIn fact, you can create your own info product today using your own iPhone.\nNo fancy software and high-tech equipment's are required.\n...and I can show you how to do it starting today.\nWhy You Need To Get Started Now:\nIf you're interested to learn how to quickly and easily create info products with your iPhone, then you get started today.\nIn some niches, there are still only a few people who already created info products. That means it's easier for you to make a big profit.\nMany people are interested to create info products but they don't know it can be by just using their iPhones. It's EASY.\nThere's no better time to start making more money than today. If you let this opportunity pass you by, you may forget about it, and you’ll be missing out completely.\nIf you still don't have a solid online business, then sell info-products is the fastest path to success.\nYou don't need to be an expert. Just gather information online, use it to create your own product, and start making more money.\nAnd the list goes on and on.\nListen...\nI decided to come up with this unique over the shoulder video series to get you started very quickly with it.\nIntroducing…\nCreate A Product With iPhone:\nQuickly & Easily Create Info-Products Starting Today!\nThere’s nothing like this video series.\nWatch as I show you how you can use your iPhone to create your first info-product and sell it for passive income.\nI reveal my best tips for using some unknown tactics that only a few elite few knows.\nYou get to see everything. I explain everything to you.\nThere will be no guesswork.\nAll you need is just a short hour of your time to learn everything and you’d be ready to get started with it instantly.\nHere’s What You’ll Discover Inside This Video Training:\nA quick overview of how to create products with your iPhone.\nDiscover all the powerful apps to create info products, which you can download for free. (You probably use some of these apps but you never realized it could be used to create products. Prepare yourself to be shocked)\nThe simple process to create an info-product using your iPhone - from start to finish.\nHow to create products in audio format, and edit it like a pro, with no computer and no expensive audio editing software at all.\nThe secretly-guarded method I personally used to create a video training anytime anywhere with my own iPhone.\nThe fastest way to do a research for your info products, and use it as a source for your own products.\nAll the overlooked features of iPhone that could be used to create products, which looks professional as it was creating using expensive tools.\nHow creating products on your iPhone will make the creation process faster and easier than on a computer.\n--------------------------------------------------------------------\niPhone Product Creation For Beginners: Fast Track Training\n\n\nSection 1: Overview\n1 - Overview\n\n\nSection 2: Setting Up iPhone Equipment\n2 - Minimum iPhone Equipment Adapter\n3 - Hardwiring-Your-iPhone-to The Ethernet\n4 - Minimum Camera Equipment\n\n\nSection 3: Alternative Sound Equipment\n5 - Alternative Sound Equipment\n6 - Speech To Text Content\n7 - Editing Written Content\n8 - Dragon Anywhere App Alternative\n\n\nSection 4: Recording Your iPhone Screen\n9 - Recording Your iPhone Screen\n10 - Taking Talking Head Videos\n11 - Recording Live Video\n12 - Editing Video\n\n\nSection 5: Recording Audio\n13 - Recording Audio\n14 - Editing Multi Track Audios\n\n\nSection 6: Creating Presentations\n15 - Creating PDFs and-Screenshots\n16 - Creating Presentations\n17 - Displaying Presentations\n\n\nSection 7: File Management\n18 - File Management - Part 1\n19 - File Management - Part 2\n\n\nSection 8: Conclusion\n20 - Conclusion",
      "target_audience": [
        "Professionals, Business Owners, Internet Marketers, Entrepreneurs, Hobbyists",
        "Anyone With An iPhone Who Would Like To Start An Online Business"
      ]
    },
    {
      "title": "Flutter & Dart for Beginners: Complete Course [2023 Latest]",
      "url": "https://www.udemy.com/course/flutter-latest-course/",
      "bio": "Learn cross-platform mobile development to build a career as a Flutter Developer in 2022",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Dart Programming": [
          "Introduction to Dart & its Types",
          "Introduction to Dart Functions",
          "Introduction to Dart Conditionals",
          "Introduction to Dart Loops"
        ],
        "Installation of Flutter": [
          "Installation of Flutter"
        ],
        "Flutter Fundamentals": [
          "Creating your first Flutter project",
          "Hello World app in Flutter",
          "Introduction to Widgets",
          "Creating Widgets and layouts"
        ],
        "Building a Flutter Project - HTTP requests, JSON parsing and more!": [
          "Building an app in Flutter",
          "Setting up the project",
          "Navigation in Flutter",
          "Parsing JSON in Flutter",
          "Showing data in UI",
          "Improving the UI",
          "Using http for API calls in Flutter",
          "Updating with a Stateful Widget"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "No prior experience is required. All concepts would be taught from scratch!"
      ],
      "description": "Welcome to Complete Course in Flutter App Development!\n\n\nThis course is for beginners and anyone curious to learn cross-platform mobile development in 2023.\nThe course is new and updated to the latest version!\n\n\nEnroll now and get access to:\nOver 1.5 hours of exclusive Flutter content to help you get started as a cross-platform developer.\nDedicated section to Dart programming to learn essential concepts.\nAdvance topics on HTTP requests, JSON parsing, Navigation, and more in the same course.\n\n\nFrom Beginner to Flutter Developer with Just One Course\nWe know that you're here because you value your time. If you wanted to watch someone program for hours and hours without explaining what they're doing, you'd be on YouTube.\nBy getting this course, you can rest assured that the course is carefully thought out and edited. There are beautiful animations that explain all the difficult concepts and we're always on hand to answer student questions.\n\n\nSo by the end of the course, you'll completely understand:\nFundamental Flutter concepts e.g. Stateful vs. Stateless Widgets, Widget tree, and much more.\nFundamental Dart concepts e.g. lists, maps, and more.\nControl Structures: Using If/­Else clauses, and logic to control the flow of execution.\nSoftware Design: How to organize and format code for readability.\nNetworking: How to make asynchronous API calls, store and retrieve data from the cloud, and use the JSON format for server communication.",
      "target_audience": [
        "Anyone interested in building mobile applications",
        "Learners curious to build cross-platform apps using Flutter"
      ]
    },
    {
      "title": "Introduction to Swift 2 with Xcode 7",
      "url": "https://www.udemy.com/course/introduction-to-swift-2-with-xcode-7/",
      "bio": "This course teaches the basics of version 2 of the Swift language with Xcode 7.",
      "objectives": [
        "Learn the fundamentals of Swift 2, programming language from Apple",
        "Get complete knowledge of Swift 2 with Xcode 7",
        "Become and expert in App development with iOS9",
        "Learn by example by walking you through real live projects step by step"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "The Xcode Interface - Part 1",
          "The Inspector Panel - Interface - Part 2",
          "The Editor - Interface - Part 3",
          "Hello World App - Part 1",
          "Hello World App - Part 2",
          "Hello World App - Part 3"
        ],
        "String, Types and Tuples": [
          "Variables and Constants",
          "Int, Double and their Subtypes",
          "Optional Types and Nil",
          "Strings and Characters",
          "Boolean Type",
          "Tuples",
          "Excercises"
        ],
        "More on Arrays, Loops, Directories": [
          "Fixing Unresponsive Playgrounds",
          "Correcting the Command Line Tools Version",
          "Arrays",
          "Sets",
          "Dictionaries",
          "For, for-in, while, and repeat loops",
          "If, guard, and switch",
          "Unit Excercise"
        ],
        "Functions, References and Closures": [
          "Basic Function Syntax",
          "Default and Variadic Parameters",
          "Value and Reference Type Parameters",
          "Function Types and Nested Functions",
          "Closures",
          "Unit Excercise"
        ],
        "Enumerations in iOS": [
          "Intro to Enumerations",
          "Enumerations - Raw Values",
          "Associated Types",
          "Initialization in Enumerations",
          "Mutation Functions in Enumerations",
          "Unit Excercise"
        ],
        "Classes, Structures & Methods": [
          "Classes and Structures",
          "Computed Properties",
          "Property Observers",
          "Lazy Stored Properties",
          "Type Properties and Methods",
          "Inheritance",
          "Unit Excecise"
        ]
      },
      "requirements": [
        "Knowledge of some Scripting Language Preferred, but Not Necessary.",
        "We assume you have some basic knowledge of programming."
      ],
      "description": "This course teaches the basics of version 2 of the Swift language. Swift is a powerful language used to develop applications for iPhone, iPad, and OS X. In this course, you’ll learn about Xcode 7 (Apple’s integrated development environment), and learn to write short programs in Swift, which will prepare you to start learning to develop full applications for Macs and Apple’s mobile devices.\nThe course contains over 5 hours of video demos and many source code examples. It is divided into six units:\n\nUnit 1: Xcode - covers the various parts of the Xcode interface and how to use them\n\nUnit 2: Swift types - covers variables and constants and the various basic data types in Swift, along with a full discussion of optionals.\n\nUnit 3: Collections and control structures - learn about arrays, sets, and dictionaries, which are used to group basic types into collections. Also covers loops and decision constructs in the Swift language.\n\nUnit 4: Functions - beginning with a discussion of value and reference types, we explore Swift function syntax, which forms the basis for methods in object oriented code. We’ll also discuss closures, and give examples of when and how to use them.\n\nUnit 5: Enumerations - Forget those simple C enums: Swift’s enumerations can contain methods, and the members of an enum may have underlying values, no values at all, or may be of different values altogether!\n\nUnit 6: Structures and Classes - In Swift, structures (as well as classes) may have both properties and methods defined. We’ll focus mainly on the property syntax here (the method syntax is the same as function syntax, covered in Unit 4). A full discussion of stored and computed properties, property observers, lazy and static properties. We’ll conclude with a demo on inheritance.\n\nAll units have full source code and exercises (along with answers) to test your knowledge.",
      "target_audience": [
        "Students wish to upgrade their Swift programming language to Swift 2",
        "Students wish to develop full applications for Macs and Apple’s mobile devices",
        "Beginners and advanced level developers who want to learn the new and trending Swift 2 and iOS9"
      ]
    },
    {
      "title": "Build A BeReal Clone-SwiftUI",
      "url": "https://www.udemy.com/course/swiftui-ultimate-bootcamp/",
      "bio": "Construct a BeReal, Twitter, and Instagram User Interface",
      "objectives": [
        "Learn SwiftUI",
        "Learn how to create the User Interface Skeleton for Twitter",
        "Learn how to create User Interface Skeleton for BeReal",
        "Learn how to create the User Interface Skeleton for Instagram",
        "Learn how to make a Custom Search Bar UI",
        "Learn everything to do with Text, Images, Padding, Spacing",
        "Learn Alerts, ContextMenu, ConfirmationDialog",
        "Learn everything to do with Buttons",
        "Learn how to create a TabView",
        "Learn everything to do with NavigationView, NavigationLink, Toolbar",
        "Learn Sheets and FullScreenCover",
        "Learn how to make Apps suitable for Dark MODE",
        "Learn how to make Lists, Sections, and Groups",
        "Learn how to make a Scrollview"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Curriculum": [
          "Texts, Images, Padding, Spacing",
          "Stacks - Zstack, Vstack, Hstack",
          "Buttons",
          "NavigationView, NavigationLink, Toolbar",
          "Sheets & Full Screen Cover"
        ],
        "Curriculum 2": [
          "Alert, ContextMenu, ConfirmationDialog",
          "TabView",
          "Lists",
          "Sections & Groups",
          "Scrollview"
        ],
        "Twitter UI Skeleton": [
          "Intro/MainTab Set Up",
          "Post Cell UI",
          "Feed Views / Floating Button UI",
          "Feed Filter Button UI",
          "Finishing Home Page UI",
          "Profile Page UI",
          "Custom Search Bar and Search Page UI",
          "Upload Post View UI",
          "App Icon and Wrap Up"
        ],
        "BeReal UI Skeleton": [
          "Intro & NavigationBar UI",
          "Post Cell UI",
          "ScrollView UI",
          "Profile Page UI",
          "Custom Search Bar UI",
          "User Cell and Search Page UI",
          "Current User Post UI",
          "Comment View UI",
          "Displaying Profile From Post",
          "Dark Mode Support",
          "App Icon and Wrap Up"
        ],
        "Instagram UI Skelelton": [
          "Introduction & MainTab Set Up",
          "PostCell View UI",
          "Feed View UI",
          "Comments View UI",
          "Custom Back Button UI",
          "Notification Cell & Page UI",
          "Comment Input View UI",
          "Post Grid View & Profile Filter Button UI",
          "Creating the Profile Page UI",
          "Upload Post UI",
          "Custom Search Bar",
          "User List View & Finishing Search Page",
          "App Icon and Course Wrap Up"
        ]
      },
      "requirements": [
        "Mac/MacBook",
        "XCode",
        "SF Symbols",
        "Bakery",
        "Basic understanding of Swift"
      ],
      "description": "In this course you will be taught virtually all the fundamentals of SwiftUI needed to construct beautiful user interfaces for IOS applications all over a 5 hour time span. It builds on my last course tremendously. These fundamentals will be utilized to later construct the user interface skeleton clones of Twitter, BeReal, and Instagram. When constructing the interfaces you will learn a lot and see all the skills you have learned truly come together. This course assumes that you have a basic understanding of Swift. There will not be any functionality, just user interfaces, although some times there will be a small usage of Swift. If you do not know Swift, it is also okay, you will learn some fundamentals in this course. The course requires a few things before starting. You must have a Mac or MacBook with Xcode, SF Symbols, and Bakery downloaded. These can all be found on the App Store on your Mac or MacBook and they are all free! In this course we will utilize all of them and you will become extremely familiar with them all. At the end of this course I hope you all have a great understanding of SwiftUI and I hope you guys can go on and create beautiful user interfaces by yourself. Enjoy the course you guys!.",
      "target_audience": [
        "Beginner level SwiftUI/Swift developers"
      ]
    },
    {
      "title": "iOS App Development with Cocos2d (v1 or v2) and Xcode",
      "url": "https://www.udemy.com/course/cocos_2d/",
      "bio": "Learn to build games or apps for the iPhone or iPad using Xcode and Cocos2d.",
      "objectives": [
        "By the end of this course, you will be able to build a complete iOS app."
      ],
      "course_content": {
        "UPDATES FOR XCODE 5": [
          "Quick Xcode 5 Tour and Adding Source to Your Project"
        ],
        "THE BASICS OF XCODE 4 AND COCOS2D": [
          "Introduction (and Source Files for ALL projects)",
          "Installing Xcode and Cocos2d",
          "Quick Xcode Tour and Adding Source to Your Project",
          "Differences between the Cocos2d v1 and v2 Template",
          "So what is this App you will be building?",
          "App Identifiers and Provisioning Profiles",
          "Cocos2d Basics",
          "Accelerometer, Touch Events and CCActions",
          "Base SDK Missing Warning"
        ],
        "BASIC EBOOK": [
          "Introduction",
          "Building the Ebook",
          "In App Purchases to Unlock the Book"
        ],
        "MORE BASICS AND A WAVE ATTACK GAME": [
          "Animation Methods",
          "Custom Animation Class",
          "Sprite Sheet Animations",
          "Simple Sound Engine",
          "Custom Fonts",
          "Target Practice Game",
          "Wave Game",
          "Wave Game Continued"
        ],
        "BOX 2D": [
          "Intro to the Box 2D Template",
          "Changing the Template for Retina Display (for Cocos2d v1)",
          "Box2d Project",
          "The BodyNode and Ninja Class",
          "Box2D Sensors and Contact Listeners"
        ],
        "GAME CENTER (MOSTLY)": [
          "CCActions in a Fight Game",
          "Game Center",
          "Wrap Up and Review"
        ],
        "PROPERTY LISTS": [
          "Introduction",
          "Property Lists Part 1",
          "Property Lists Part2"
        ]
      },
      "requirements": [
        "Mac with Xcode"
      ],
      "description": "Learn to build an App, for whatever your reason. Got a killer idea for a game? Do you want to make an app to amuse yourself, your classroom, or your kids? Does your resume need a boost? What if you had a hobby that could make you money?\n\nThese are all great reasons to learn. Hundreds of students have already begun this course to better their careers or to simply make better use of their free time.",
      "target_audience": [
        "anyone"
      ]
    },
    {
      "title": "Learn Android 4.0 Programming in Java",
      "url": "https://www.udemy.com/course/android-tutorial/",
      "bio": "Learn to write real, working Android applications quickly and effectively, from the ground up.",
      "objectives": [],
      "course_content": {
        "Nuts and Bolts: The Basics of Android Programming": [
          "Nuts and Bolts Introduction",
          "Setting Up Your System",
          "Creating An Emulator",
          "Hello World",
          "The EditText View",
          "Buttons And Linear Layouts",
          "Responding To Button Clicks",
          "Important Notes",
          "Debugging With DDMS And Logcat",
          "Saving Files To Internal Storage",
          "Reading Files From Internal Storage",
          "String Resources and Localization",
          "Creating Launcher Icons",
          "Running On Your Phone",
          "Saving Program Data: Preferences",
          "Toasts: Alerting the User",
          "Adding a New Activity",
          "Displaying Images with the ImageView View",
          "Getting Touch Coordinates",
          "Alert Dialogs",
          "The Event-Listener (aka Observer) Pattern",
          "Creating a Database",
          "Adding Data to a Database",
          "Retrieving Data from Databases",
          "Asynchronous Tasks: Running Stuff in the Background",
          "Verifying the Passpoints: Getting Return Values From Asynchronous Tasks",
          "Supporting Different Screen Resolutions",
          "Intents and Launching Activities",
          "Nesting ViewGroups",
          "Option Menus",
          "Passing Data to Activities",
          "Sub-Activites",
          "Taking Photos",
          "Saving and Displaying Photos",
          "List Views",
          "Dynamically Populating Lists",
          "Formatting List Items: Custom Adapters",
          "Using Icons in Views",
          "Styles and Themes",
          "Selectors",
          "Relative Layouts",
          "Browsing the Gallery",
          "Retrieving an Image from the Gallery",
          "The Activity Lifecycle and Saving Data",
          "Pre-Publication Checks",
          "Taking Screenshots of Your App",
          "Signing and Exporting Your App",
          "Publishing Your App"
        ],
        "More Useful Stuff": [
          "Using 3rd Party APIs",
          "Action Bars",
          "Responding to Action Bar Menu Clicks"
        ],
        "Communication": [
          "Downloading Text Data from the Internet",
          "Internet Communication Overview",
          "A Simple Server (Java Servlet) Program",
          "Sending Small Amounts of Data to a Server",
          "URL Escaping",
          "Introducing JSON with Twitter and The Onion",
          "Decoding JSON",
          "Encoding Data as JSON",
          "Responding to POST Requests in a Servlet",
          "Posting JSON Data to a Server"
        ],
        "Layout Techniques": [
          "Introducing Fragments",
          "Using ListFragment to Display Lists",
          "Formatting Items in ListFragment",
          "Fragment Communication",
          "Managing Fragments"
        ],
        "Games and Animation": [
          "Animation Introduction",
          "SurfaceView",
          "Images and Sound: POV Ray and Psycle",
          "Drawing Images",
          "Detecting Surface Changes",
          "The Animation Thread (Game Loop)",
          "The Game Class",
          "A Sprite Class",
          "Animating the Sprite",
          "Making the Ball Bounce",
          "Bring Out the GIMP: Autocropping",
          "Adding the Bats",
          "Randomising the Ball Position",
          "Controlling the Player's Bat (Touch Events)",
          "Simulating Intelligence",
          "Collision Detection",
          "Drawing Text",
          "Game States",
          "Playing a Sound",
          "Playing Multiple Sounds",
          "Adjusting the Volume"
        ],
        "Map Applications with Android V2 API": [
          "Installing Google Play Services",
          "Creating and Signing a Map Application",
          "Getting the Map Demo Running",
          "Adding Markers to Maps"
        ],
        "Appendix 1: Source Code": [
          "Nuts and Bolts Source Code",
          "Communication Source Code",
          "Layout Techniques Source Code (Fragments)",
          "Games and Animation Source Code",
          "Maps Source Code"
        ]
      },
      "requirements": [
        "You should ideally already know some Java before taking this course."
      ],
      "description": "A practical guide to Android development. Learn to create Android programs using Java, and create the app of your dreams!",
      "target_audience": [
        "Anyone who wants to create Android apps"
      ]
    },
    {
      "title": "Swift Singletons. The Difference When Using Class & Structs",
      "url": "https://www.udemy.com/course/swiftui-singletons/",
      "bio": "Created by iOSBFree. Understanding the differences between class and struct singletons in Swift iOS.",
      "objectives": [],
      "course_content": {
        "Welcome": [
          "This Course",
          "Download Our Sample Code",
          "Free Online Course",
          "Free Stuff On iOSBFree.com"
        ],
        "Why Use A Singleton?": [
          "Why use the singleton design pattern?"
        ],
        "Struct Singletons Explained": [
          "The struct singleton",
          "Breaking architecture"
        ],
        "Class Singletons Explained": [
          "The class singleton",
          "Non-breaking architecture"
        ]
      },
      "requirements": [
        "Basic knowledge of iOS"
      ],
      "description": "Learn From One Of The 1st iOS Developers In The World\nOur instructor Matt, has 13 years of experience in iOS and created the world's first iPhone, iPad and Apple Watch apps. Now, he dedicates his time to recording courses for iOSBFree (pronounced \"iOS Be Free\").\n\n\nIn This Course\n1. We create two singletons in a Playground.\n2. Each singleton is created using either a struct or a class.\n3. We examine the advantages and disadvantages of each approach\n\n\nLearning Objectives\n· What is a singleton\n· The behaviour of a struct singleton\n· The behaviour of a class singleton\n\n\nThe Goal Of A Singleton\nTogether, we’ll examine the behaviour of two different approaches when creating singletons. The more classic approach is to create each singleton using a class due to its memory management - when the singleton is created it will exist in only one area of memory and never be duplicated. However, the opposite can be true when dealing with struct singletons.\n\n\nOur Recommendation\nOur recommendation would be to always use a class singleton due to the principle of a singleton itself, which is to maintain only one of its kind within the system. One manager handles the inflow and outflow of certain behaviour. If we want to ensure that we don’t duplicate our singleton, we should stay away from struct value types that use such behaviour by default.\n\n\nSample Code\nSample Code Is Always Included and attached to each video. You can download the same project used in each episode of the course.\n\n\n\nThis Course Is Free\nThis course is free. We aim to publish as many short courses as we can to help new iOS Developers apply for jobs in iOS and enter a high paying profession. We want those developers to write great apps that are robust, work correctly, and are maintainable. By supplying this information for free we hope we can reach as many people studying in the pandemic as we can.\n\n\nOur Service (iOSBFree Ltd)\nWe are a unique career-building service sharing over 13 years of successful experience shaping the iOS industry into what it is today. Our unique information, point-of-view and service can be utilised to build highly successful and profitable careers in iOS.\n\n\nA Career In iOS\niOS developers are the most sought after developers in the world! They can earn over £100,000 per year, work remotely and B in high demand for their skills! Subscribe to our YouTube channel and let us reveal all our insider secrets completely for free.\n\n\nWhat We Teach\nCareer building, CV writing, interviewing skills, industry secrets, industry stories, real-life experience, iOS fundamentals, ARC memory management, Swift, architecture and best engineering practices.\nPlease show your support by enrolling in our course!\n\n\n\nWhat Is SwiftUI?\nSwiftUI is a newly released UI Framework introduced to iOS. It aims to solve a lot of problems with apps, such as running on all platforms, reducing bugs, improving stability and bringing more developers to iOS - because it's EASIER to write apps!\nLearning SwiftUI is an absolute must for any iOS developer looking to develop a career over the next 5 years.\n\n\nThe Instructor\nCheck out our Instructor profile (just briefly) and glance over Matt's incredible unparalleled experience. After 13 years of specialising in iOS, he created a company helping people build their own successful and profitable careers in iOS too.\nOur unique information cannot be found anywhere else on any platform. We not only teach code, syntax and architecture but we provide tried & tested strategies to boost your career forwards and build a better life!\n\n\n\nWant To Learn More Topics?\nPlease send us an email with the topic you would like to learn in a swift playground and we will happily record, edit and publish it for you. Absolutely for free. Simply email community@iOSBFree.com with the subject heading, \"Topic I Want To Learn\".\n\n\nFirst In The World\nNot only is our instructor one of the first iOS developers in the world, but our service is also the first of its kind in the world!\niOSBFree is a truly unique one-of-a-kind service. There is no single other service offering Matt’s level of experience in any other coding course, software engineering tutorial, or career-building service anywhere in the world.\n\n\nMore From iOSBFree\n· Download Our FREE CV Template\n· Download Our Career BOOSTER Pack\n· Enrol In FREE Online Courses (iOS & Swift)\n· Read Our Blog\n\n\nMuch love.\nThe iOSBFree team.\nBuild a profitable iOS career with iOSBFree!",
      "target_audience": [
        "Beginners who want to advance in their career - we help with that!"
      ]
    },
    {
      "title": "Building a Photo and Video Sharing Application for Android",
      "url": "https://www.udemy.com/course/building-a-photo-and-video-sharing-application-for-android/",
      "bio": "Android Social Share APIs, Photo APIs, FileSystem APIs, Video APIs and Much More",
      "objectives": [
        "Video APIs",
        "Social Sharing APIs",
        "Interface Design",
        "Photo APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What you should know?"
        ],
        "First look of Photo Sharing App": [
          "Demo"
        ],
        "Getting Started": [
          "Starting from Scratch",
          "Creating and Aligning Buttons for the Interface",
          "Adding Launcher Icon, Text View and Image View to the Interface",
          "Adding Background Image and Seekbar to the Interface"
        ],
        "Setting the Framework for the App": [
          "Concepts that will be Discussed",
          "Declaring Views - Buttons, ImageView and Seekbar",
          "Instantiating Views - Buttons, ImageView and Seekbar",
          "Giving a Finishing Touch to the Framework"
        ],
        "Implementation of Photo Capture": [
          "Using Photo Button to launch Android Camera",
          "Adding Picture to the ImageView",
          "Applying Color Filter on the Image",
          "Saving Image to the Gallery of the Phone",
          "Sharing Image with Social Media Platforms"
        ],
        "Implementation of Video Capture": [
          "Working with Video",
          "Creating a File for Saving the Video",
          "Appending TimeStamp with File Name",
          "Toasting messages to users regarding background activity",
          "Using sharing Intent to share video",
          "Checking the Implemented code on Emulator"
        ],
        "Conclusion": [
          "Facebook SDK for Android",
          "Conclusion"
        ],
        "Exercise Files": [
          "Downloadable Files"
        ]
      },
      "requirements": [
        "Android Phone or Emulator for Testing",
        "Mac or Windows"
      ],
      "description": "With \"Building a Photo and Video Sharing Application for Android\", you will learn everything about video and photo sharing apps, even if you've never build one before!\nThe full course has several video lectures, divided into several chapters. Each chapter will give you a new level of knowledge in android app development. We'll start from the basics of photo and video sharing app development to more advanced and the most popular techniques used now a days.\n\"Building a Photo and Video Sharing Application for Android\" will give you a new perspective on how the Apps and Web-Services work And after you completed the course you will be able to create your own photo and video sharing app with the latest technology and technique. Hope you enjoy!\nNOTE: In order to keep you up to date in the world of App Development all the chapters will be updated regularly with new lectures, projects, quizzes and any changes in future versions of all the programming languages covered on the course.",
      "target_audience": [
        "Anyone who wants to build a photo and video app",
        "All levels of android developers"
      ]
    },
    {
      "title": "React Redux Firebase Authentication with CRUD Application",
      "url": "https://www.udemy.com/course/react-redux-firebase-authentication-with-crud-application/",
      "bio": "Implement Social Media Authentication along with CRUD, Sort, Search & Filter feature using React, Redux and Firebase",
      "objectives": [
        "You will learn Firebase authentication in React with Redux",
        "You will learn to write varity of Firebase query in React",
        "You will understand Redux and Redux-thunk concept",
        "You will learn to write Firebase Query inside Redux-thunk",
        "Implementing CRUD feature with Firebase Query",
        "Performing Searching, Sorting & Filtering using Firebase Query",
        "You will also learn how to protect route",
        "You will also learn some ES6 syntax"
      ],
      "course_content": {
        "Introduction": [
          "Intro",
          "App Preview"
        ],
        "Redux": [
          "What is redux ?",
          "Redux Flow Diagram",
          "Understand Redux-thunk"
        ],
        "Project Set-up": [
          "Set-up Environment",
          "Creating our React Project",
          "Installing Dependency",
          "Set-up Bootstrap & Font Awesome in Project",
          "Structuring our Project",
          "Set-up Firebase Project",
          "Configure Firebase in Our App",
          "Set-up Redux"
        ],
        "Working on Login & Register Form": [
          "React Router v6 Update",
          "Basic Set-up For Login & Register",
          "Working on Login Form",
          "Fixing Styling Issue on Login Form",
          "Working on Register Form",
          "Working on Home Page"
        ],
        "Firebase Sign Up with Redux": [
          "Creating Action Type, Actions & Reducer for User Register",
          "Enable User Register Functionality on UI"
        ],
        "Firebase Sign In with Redux": [
          "Creating Actions, Action Type & Reducer",
          "Enable Login Functionality on UI"
        ],
        "User Sign Out & Persisting with Redux": [
          "Creating Actions, Action Type & Reducer",
          "Enable User Logout on UI",
          "Handling Redirect with Custom Route",
          "Persisting Logged In User"
        ],
        "Social Media Authentication": [
          "Google Sign In Action, Action Type & Reducer",
          "Enable Google Sign-in on UI",
          "Configure Facebook",
          "Facebook Action, Action Type & Reducer",
          "Enable Facebook Sign In on UI"
        ],
        "Firebase CRUD Operation": [
          "Fiebase v9 Update",
          "Configure Firebase DB",
          "Working on Header",
          "Adding Other Route",
          "Fixing Issue on Header",
          "Adding React Toastify",
          "Creating Form",
          "Adding Contact with Firebase",
          "Build Table to Display Contact",
          "Deleting Contact with Firebase",
          "Updating Contact with Firebase",
          "View Single Contact in Card"
        ],
        "Searching with Firebase": [
          "Adding Search Input Field",
          "Firebase Search Query",
          "Handling No Search Result"
        ]
      },
      "requirements": [
        "Basic of HTML, CSS and JavaScript knowledge required.",
        "Basic of understand of ES6 module",
        "Basic of React knowledge will added an advantage.",
        "Redux knowledge required little bit but I will explain everything from scratch.",
        "No prior working experience required with Firebase"
      ],
      "description": "Wanted to build React application with the help of Redux & Firebase? This is the course for you.\nThis course is perfect for someone who has little knowledge of HTML, CSS and Javascript. We are not saying that you need to be master in javascript but the concepts like Loops and functions should be familiar to you. If you know ES6 that’s great, if not, don’t worry, ES6 is also covered in this course.\nIn this course, we’ll see how to bring React Hooks and Firebase as well as Redux together to build a complete CRUD application along with Authentication and it also include features like Searching, Sorting & Filtering.\nWe’ll cover tons of concepts throughout the process of making it - how to enable social media authentication with Redux & Firebase in React Application , fetching, adding, creating, deleting, updating, searching, sorting & filtering data with our Firebase realtime database, writing different firebase query to perform this task in our app and much more concept to learn.\nBy the end of the course, you will have built a sophisticated Contact Management Web Application with React, Redux and Firebase. This is a powerful application will impress even the most senior developers and ensure you have hands on skills in React and Redux that you can bring to any project or company.\nThis course will show you how to:\nBuild a sophisticated Contact Management Web Application with React, Redux and Firebase\nUse Redux to manage fierebase authentication like Google & Facebook.\nConnect your application to Firebase, a powerful database.\nUse React Router v6 to navigate through your application\nHandled Route protection with updated React Router v6\nCreate Functional Components\nUse JSX to build your User Interface\nUse Props to pass Data\nUse of bootstrap & font-awesome to design our Login & Register page.\nUse our own CSS to design different pages in our App.",
      "target_audience": [
        "Beginner developers wanting to learn a front-end framework like React.",
        "Beginner React developers wanting to increase their React knowledge",
        "Intermediate & advanced React developers wanting to learn how to implement Firebase Social Media Authentication using React & Redux"
      ]
    },
    {
      "title": "Decoding Dictionaries: From Basics to Interview-Ready",
      "url": "https://www.udemy.com/course/decoding-dictionaries-from-basics-to-interview-ready/",
      "bio": "Learn Swift dictionaries from the ground up—perfect for beginners, job prep, and real iOS project work.",
      "objectives": [
        "Understand how to create and access Swift dictionaries effectively.",
        "Safely unwrap and work with optional dictionary values.",
        "Use default values to avoid crashes when accessing keys.",
        "Group data using dictionaries for real-world scenarios.",
        "Merge, map, and filter dictionaries in Swift.",
        "Solve common interview problems using dictionaries.",
        "Decode JSON into dictionaries using Swift’s Codable system.",
        "Build dynamic lookup tables using key-value storage.",
        "Reverse dictionary mappings with confidence.",
        "Apply dictionary logic to SwiftUI and state management."
      ],
      "course_content": {
        "Why you should focus on learning about dictionary centered challenges.": [
          "Introduction",
          "Why dictionaries matter.",
          "Grouping Values by a Property",
          "Coding Challenge: Student Gradebook",
          "Coding Challenge: Inventory Tracker",
          "Advanced Coding Challenge: Inventory by Warehouse",
          "Coding Challenge: Most Active Users",
          "Coding Challenge: Top Performer by Subject",
          "Solution: Top Performers by Subject",
          "Coding Challenge: Normalize Event Logs",
          "Solution: Normalize Event Logs",
          "Coding Challenge: Team Points Leaderboard",
          "Solution: Team Points Leaderboard",
          "Coding Challenge: Highest Sale by Salesperson",
          "Solution: Highest Sale by Salesperson",
          "Coding Challenge: Most Common Reaction Per Post",
          "Solution: Most Common Reaction Per Post",
          "Coding Challenge: First Responder Tracker",
          "Solution: First Responder Tracker",
          "Coding Challenge: Course Completion Tracker",
          "Solution: Course Completion Tracker",
          "Coding Challenge: Average Rating by Product",
          "Solution: Average Rating by Product",
          "Coding Challenge: Employee Project Tracker",
          "Solution: Employee Project Tracker",
          "Coding Challenge: Word Frequency by Author",
          "Solution: Word Frequency by Author",
          "Coding Challenge: Longest Message by User",
          "Solution: Longest Message by User",
          "Coding Challenge: Daily Expense Tracker",
          "Solution: Daily Expense Tracker"
        ]
      },
      "requirements": [
        "Basic understanding of Swift syntax (variables, conditionals, loops).",
        "Familiarity with arrays and simple data structures in Swift.",
        "Experience writing functions and working with optionals.",
        "Ability to run Swift code in Xcode or a Swift Playground.",
        "Some exposure to how JSON data is structured (helpful but not required).",
        "Comfort reading documentation and exploring examples independently.",
        "A Mac with Xcode installed (version 13 or higher recommended).",
        "No need for UIKit or SwiftUI experience—this course is logic-focused.",
        "Ideal for beginners with a few weeks of Swift behind them.",
        "No prior experience with dictionaries required—this course starts at the foundation."
      ],
      "description": "Dictionaries are one of the most essential tools in Swift, yet most iOS development courses barely scratch the surface. They show up in passing, but few—if any—courses are dedicated to mastering them. This course is different.\nDecoding Dictionaries: From Basics to Interview-Ready is the only course on the market that puts Swift dictionaries front and center, showing you how to manipulate, transform, and solve real problems with them. In the world of iOS development, being able to group, filter, restructure, and decode dictionary-based data is not just helpful—it’s critical.\nMost online courses are built around what sells. This course is built around what you actually need to know to succeed as a mobile developer. If you’re serious about building clean, efficient, and interview-ready Swift code, this course gives you the skills that hiring managers quietly expect but few bootcamps or tutorials ever teach.\nWhat You’ll Learn:\nCreating and safely accessing key-value data\nGrouping, merging, mapping, and filtering dictionary content\nBuilding dictionary-powered algorithms for real-world use\nSolving common interview-style coding challenges using dictionaries\nParsing and decoding JSON into dictionaries using Codable\nUsing dictionaries to manage view state, model data, and more\nCoding Challenges Include:\nGrouping articles by tags\nCounting word frequency from text input\nReversing a dictionary’s key-value pairs\nFiltering based on nested keys and optional values\nBuilding lookup tables dynamically\nCustom decoding of nested JSON dictionaries\nBy the end of this course, you’ll have the fluency and confidence to use dictionaries not just to pass coding challenges—but to build production-ready features and think like a professional Swift developer.",
      "target_audience": [
        "Swift beginners who struggle with understanding dictionaries.",
        "iOS developers preparing for technical interviews involving data manipulation.",
        "Self-taught developers who feel their foundation in Swift is incomplete.",
        "Students looking to improve their problem-solving skills with real coding challenges.",
        "Developers transitioning from another language who need to master Swift dictionaries.",
        "Junior iOS engineers who want to write cleaner, more efficient Swift code.",
        "Programmers overwhelmed by JSON decoding and key-value data handling.",
        "Learners who are confident with arrays but unsure how to leverage dictionaries.",
        "Developers seeking practical, hands-on Swift practice outside of UI-heavy courses.",
        "Anyone tired of surface-level tutorials and ready to go deeper with Swift fundamentals."
      ]
    },
    {
      "title": "GenAI for Flutter - Claude, ChatGPT, Perplexity, Grok & More",
      "url": "https://www.udemy.com/course/genai-for-flutter-claude-chatgpt-perplexity-grok-gemini-deepseek/",
      "bio": "Perplexity, Grok, ChatGPT, Claude, Gemini & DeepSeek - Create Writing Coach, Research Assistant & 10+ AI Applications",
      "objectives": [
        "Master ChatGPT, Claude, Gemini, DeepSeek, Grok & Perplexity API integration in Flutter applications",
        "Build 10+ production-ready AI chatbots and assistant apps from scratch using real-world projects",
        "Implement text-to-speech (TTS) and speech recognition features for voice-enabled AI interactions",
        "Create multi-modal AI applications supporting text, image, audio, document, and video processing",
        "Develop a Writing Coach app using Claude's advanced writing and editing capabilities",
        "Build a Real-time Fact Checker using Grok's live data access and verification features",
        "Create a Research Assistant bot leveraging Perplexity's internet search and analysis powers",
        "Design a comprehensive ChatGPT Super App with text, image, document, and audio AI features",
        "Construct a Diet Meal Planner and Language Tutor using Gemini's multi-modal capabilities",
        "Build a Medical Advisor and Resume Builder using DeepSeek's specialized AI models",
        "Develop a Customer Support Bot with natural language processing and automated responses",
        "Create AI-powered content creation tools for writing, editing, and document generation",
        "Understand each AI platform's pricing, rate limits, and cost optimization strategies",
        "Learn when to use specific AI platforms based on their unique strengths and capabilities",
        "Create responsive and adaptive UI designs that work across different device sizes and orientations"
      ],
      "course_content": {
        "Introduction": [
          "GenAI Revolution in Mobile Apps",
          "What is Flutter"
        ],
        "Flutter Setup on macOS: Build Android & iOS Apps": [
          "Installing the Flutter SDK: Step-by-Step Guide",
          "Android Studio Installation Guide for Flutter Developers",
          "Setting Up Xcode for Building iOS Apps with Flutter",
          "Flutter Project Setup: Running Your App on the iOS Simulator",
          "Setting Up the Android Emulator to Run Flutter Projects"
        ],
        "Flutter Setup on Windows": [
          "Installing Flutter SDK on Windows: Step-by-Step Guide",
          "Setting Up Android Studio for Flutter on Windows",
          "Setting Up an Android Emulator (AVD) for Flutter Apps"
        ],
        "Create a New Flutter Project & Build Chat App UI (Google Gemini)": [
          "Create a New Flutter Project & Build Chat App UI (Google Gemini)",
          "What is Application Programming Interface",
          "Components of API",
          "Exploring Google AI Studio for Gemini API Integration",
          "Making Gemini API Calls in Flutter: Send Input & Get Output",
          "Building Q&A Chatbot in Flutter with Google Gemini",
          "GUI & Logic Improvements in Flutter",
          "Using Different Google Gemini Models in Flutter",
          "Using Gemini’s Advanced Reasoning (Thinking) Feature in Flutter",
          "Using System Instructions with Google Gemini in Flutter"
        ],
        "Building Chat App UI in Flutter": [
          "Updating AppBar and Send Bar in Flutter Chat App",
          "Adding DashChat and Displaying Messages in Flutter Chat App",
          "Displaying Received Messages in Correct Order in Flutter Chat App"
        ],
        "Chat: Let's Talk": [
          "Introduction to Chat Feature in Flutter with Google Gemini",
          "Adding Chat Feature in Flutter App with Google Gemini",
          "Adding Service Class for Google Gemini Integration in Flutter"
        ],
        "Text-to-Speech in Flutter: Give Voice to Gemini Chatbot": [
          "Adding Text-to-Speech (TTS) Library in Flutter Chat App",
          "Using Text-to-Speech (TTS) in Flutter Chat App",
          "Enable and Disable Text-to-Speech (TTS) in Flutter Chat App",
          "Adding Multi-Language Support to TTS in Flutter Gemini App",
          "Customizing Chatbot Voice: Different TTS Voices in Flutter Gemini App"
        ],
        "Image Generation & Editing in Flutter": [
          "Generate Images with Google Gemini in Flutter",
          "Combine Text & Image Generation in Flutter",
          "Displaying Generated Images in Flutter Gemini App",
          "Image Generation Overview with Google Gemini in Flutter",
          "Choosing an Image for Editing in Flutter with Google Gemini",
          "Flutter Gemini App: Display Selected Images & Improve Workflow",
          "Exploring Image Editing API Documentation",
          "Displaying Edited Images in Flutter by Converting Base64 Output",
          "Flutter Gemini App: Text, Image & Editing Features",
          "Displaying Progress Indicator in Flutter Gemini App"
        ],
        "Image Understanding: Explore and Search": [
          "Image Understanding in Flutter Apps with Gemini – Demo",
          "Setting Up GUI for Understanding Feature in Flutter Gemini App",
          "Building Image Understanding Workflow in Flutter with Gemini",
          "Passing Images to Google Gemini in Flutter"
        ],
        "Documents in Flutter with Gemini": [
          "Document Understanding in Flutter Apps with Gemini – Demo",
          "Flutter Gemini App: Setup File Picker for selecting documents",
          "Using Google Gemini for Document Understanding in Flutter Apps"
        ]
      },
      "requirements": [
        "A computer running Windows 10/11 or macOS (Intel or Apple Silicon) for Flutter development",
        "No prior AI or Machine Learning experience required - we start from fundamentals",
        "Enthusiasm to learn cutting-edge AI integration techniques in mobile development"
      ],
      "description": "Build 10+ AI-Powered Flutter Apps Using Every Major AI Platform - Complete Hands-On Course\nTransform your Flutter development skills and master AI integration with this comprehensive course that teaches you to build custom chatbots and intelligent assistant apps using all major generative AI platforms. Learn to harness the power of ChatGPT, Claude, Gemini, Grok, Perplexity, and DeepSeek to create specialized AI applications that solve real-world problems.\nWhat You'll Build:\nPlatform-Specific AI Applications:\nClaude Writing Coach - Leverage Claude's superior writing capabilities for content creation and editing assistance\nGrok Fact Checker - Utilize real-time data access for instant fact verification and news validation\nPerplexity Research Assistant - Build a powerful research tool using advanced search and analysis features\nChatGPT Super App - Create a comprehensive app with text, image, document, and audio AI features\nGemini Multi-Purpose Suite - Develop a diet meal planner, customer support bot, and language tutor\nDeepSeek Medical Advisor & Resume Builder - Specialized healthcare guidance and professional resume creation tools\nAdvanced Flutter AI Features:\nText-to-Speech (TTS) integration for natural voice responses\nSpeech Recognition for voice-activated AI interactions\nMulti-modal AI support (text, chat, image, audio, document, video)\nReal-time AI streaming responses\nCustom UI/UX for each AI platform's strengths\nCross-platform deployment (iOS & Android)\nComplete Learning Path:\nFlutter Environment Setup:\nWindows development environment configuration\nmacOS development environment setup\nIDE optimization for AI development\nPlatform-specific SDK installation and configuration\nAI Platform Integration:\nOpenAI ChatGPT - GPT-4, DALL-E, Whisper API integration\nAnthropic Claude - Advanced reasoning and writing assistance\nGoogle Gemini - Multi-modal AI capabilities and Google ecosystem\nX-AI Grok - Real-time information and social media insights\nPerplexity AI - Internet-connected search and research\nDeepSeek - Cost-effective AI with specialized capabilities\nTechnical Skills Covered:\nRESTful API integration with HTTP clients\nAsynchronous programming with Dart Futures and Streams\nState management for AI applications (Provider, Riverpod, or Bloc)\nCustom Flutter widgets for AI interfaces\nError handling and retry mechanisms for API calls\nLocal storage and caching strategies\nAudio recording and playback implementation\nImage processing and display optimization\nDocument parsing and text extraction\nVideo handling and multimedia integration\nKey Learning Outcomes:\nMaster AI Integration - Learn to integrate and optimize every major AI platform in Flutter apps Build Production-Ready Apps - Create polished, user-friendly AI applications ready for app stores Platform-Specific Optimization - Understand each AI platform's strengths and build specialized use cases Advanced Flutter Skills - Master complex UI/UX patterns, state management, and multimedia handling Real-World Problem Solving - Develop AI solutions for writing, research, fact-checking, health, and more Cross-Platform Development - Deploy your AI apps on both iOS and Android platforms Voice & Speech Integration - Implement natural voice interactions in your AI applications Multi-Modal AI Development - Work with text, image, audio, document, and video AI models\nPerfect For:\nFlutter Developers looking to add AI capabilities to their skill set\nMobile App Developers wanting to build cutting-edge AI applications\nEntrepreneurs seeking to create AI-powered mobile solutions\nStudents & Professionals interested in practical AI application development\nAnyone wanting to build custom chatbots and AI assistants without backend complexity\nPrerequisites:\nBasic Flutter and Dart knowledge\nUnderstanding of mobile app development concepts\nNo prior AI/ML experience required - we start from fundamentals\nCourse Highlights:\n13+ Hours of hands-on video content\n10+ Complete AI Applications built from scratch\nSource Code for all projects included\nStep-by-Step Tutorials for environment setup on Windows & Mac\nReal API Integration with live AI services\nBest Practices for production AI app development\nDeployment Guides for app store submission\nStart building the future of mobile AI applications today! Join thousands of developers who are already creating intelligent, voice-enabled, and multi-modal AI experiences in Flutter.",
      "target_audience": [
        "Flutter beginners with basic to intermediate experience who want to integrate cutting-edge AI capabilities",
        "Mobile developers seeking to increase their market value with in-demand AI development expertise",
        "Freelancers and consultants looking to offer AI chatbot and assistant app development services",
        "Mobile app developers looking to build the next generation of intelligent, AI-powered applications",
        "Startup founders who want to build AI-powered mobile products without hiring expensive AI specialists",
        "Computer science students interested in practical AI application development beyond theory",
        "Web developers wanting to transition into mobile AI development with transferable programming skills",
        "IT professionals seeking to pivot into the high-growth AI development sector",
        "Healthcare IT professionals wanting to build AI-powered medical advisor and health assistant apps"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/text-recognition-ai-android/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "SwiftUI and SpriteKit Particle Systems",
      "url": "https://www.udemy.com/course/swiftui-and-spritekit-particle-systems-ios-16/",
      "bio": "Unleash the Power of SwiftUI and SpriteKit Particle Systems to build amazing animation projects",
      "objectives": [
        "Work with the SwiftUI Framework and learn new coding techniques",
        "Learn to work with the SpriteKit Framework",
        "Integrate Particle Systems into your SwiftUI projects",
        "Create stunning animations in your SwiftUI projects"
      ],
      "course_content": {
        "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources": [
          "Marks Awesome Animated SwiftUI Books & Other Great SwiftUI Resources"
        ],
        "Introduction - Who this course is for - How to use this course": [
          "Introduction"
        ],
        "Project 1 - Pipe Smoke": [
          "Part 1 - SpriteKit and Particle Emitters - Setting up the smoke",
          "Part 2 - Integrating the particle emitter into a SwiftUI view"
        ],
        "Project 2 - Coffee Steam": [
          "Coffee Steam"
        ],
        "Project 3 - Rocket Fire": [
          "Rocket Fire"
        ],
        "Project 4 - Snow and Wind": [
          "Part 1 - Creating the two particle files",
          "Part 2 - Creating the Wind effect"
        ],
        "Project 5 - Making rain - Puddles - Raindrop collision": [
          "Making rain - Puddles - Raindrop collision"
        ],
        "Project 6 - Magic Wand": [
          "Magic Wand"
        ],
        "Project 7 - Beaming Animation": [
          "Part 1 - Creating the beams of light",
          "Part 2 - Adding the Particle animation",
          "Part 3 - Adding the Ring animation"
        ],
        "Project 8 - Explosions": [
          "Part 1 - Creating the particle file and the broken image file",
          "Part 2 - Creating the ExplosionView file and adding sound effects"
        ]
      },
      "requirements": [
        "A working knowledge of Swift and SwiftUI are required"
      ],
      "description": "NOTE - This advanced course is specifically designed for developers who have a strong foundation in the Swift programming language and know how to use the SwiftUI framework. It is not suitable for beginners, as it dives deep into the intricacies of SwiftUI and the SpriteKit Particle System, offering unique insights and advanced coding techniques. If your a beginner to programming in Swift and SwiftUI, please check out my other course thats teaches beginning developers how to code in Swift and how to use the SwiftUI framework: \"SwiftUI - The Complete iOS 17 Developers Resource  / Bible\".\nMaster SwiftUI and SpriteKit Particle Systems to create stunning animations.\nWelcome to the SwiftUI and SpriteKit Particle Systems  course - your ultimate guide to creating awe-inspiring animation projects that captivate your audience. If you have a passion for SwiftUI and want to elevate your skills by exploring the boundless possibilities of the SpriteKit Particle System, this course is tailor-made for you.\nThroughout the course, you will master the art of combining SwiftUI with the SpriteKit Particle System, as we utilize all of the particle system templates to breathe life into your projects. You'll learn how to create mesmerizing animations that range from simple, elegant designs to complex multi particle system projects.\nThe course features comprehensive, step-by-step tutorials that will guide you through the process of building each  project. You'll gain hands-on experience working with advanced SwiftUI coding techniques, and by the end of the course, you'll be able to create your own show-stopping animations with ease.\nHere's what you can expect from the course:\nIn-depth exploration of SwiftUI and SpriteKit Particle System integration\nDetailed breakdown of the particle system templates\nAdvanced SwiftUI coding techniques to maximize efficiency and performance\nReal-world examples of breathtaking animation projects\nExpert tips and tricks to help you create truly unique animations\nLifetime access to course materials, including future updates\nAs a bonus, you'll also gain access to an exclusive community of like-minded developers, where you can share ideas, collaborate on projects, and seek assistance from fellow students and instructors.\nLets embark on this exhilarating journey with the SwiftUI and SpriteKit Particle Systems course, and discover the endless possibilities that await you in the world of SwiftUI and SpriteKit animation. Transform your creative vision into a visual masterpiece, and leave your mark on the ever-evolving landscape of app development.\nEnroll now and take the first step towards mastering the art of SwiftUI and SpriteKit Particle System animations!",
      "target_audience": [
        "This course is for those who understand the Swift programming language and are familiar with the SwiftUI framework",
        "No SpriteKit or Particle System experience is needed as we cover that in the course"
      ]
    },
    {
      "title": "Geolocation - Google Maps API - HTML5 for mobile - AulaGEO",
      "url": "https://www.udemy.com/course/geolocation-with-html5-and-google-maps-for-mobile-apps/",
      "bio": "Learn how to implement google maps in your mobile applications with phonegap and google javascript api",
      "objectives": [
        "Create application with phonegap",
        "Add maps to the mobile application",
        "Hide and show map controls",
        "Add bookmarks to the map",
        "Customize bookmarks",
        "Geolocation",
        "Search for places on the map",
        "Navigate on the map with the cell phone gps"
      ],
      "course_content": {
        "Introduction": [
          "Introduction and welcome"
        ],
        "Creating an app with phonegap": [
          "Installing Phonegap, node js and phonegap developer",
          "Creating apps with Phonegap"
        ],
        "Starting with maps": [
          "Add the map to the project",
          "Hide and show controls of map"
        ],
        "Interacting with markers": [
          "Add markers to the map",
          "Change the markers by custom icons",
          "Click in markers for auto zoom of map",
          "Animation of markers",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic level of javascript",
        "Basic level of html",
        "basic programming"
      ],
      "description": "In this course you will discover how to make a mobile application with Google Maps and phonegap\nSuitable for beginners. Do you want to learn how to develop a mobile application and add maps from Google maps APIs?\nGoogle Maps is an application server for maps on the web that belongs to Alphabet Inc. This service facilitates images of scrollable maps, as well as satellite photographs of the world, and even, the route between different locations or images at street level with Google. Street View\nGoogle Maps is one of the most used APIs in the world, had a change in that already started charging for their services.\n#AulaGEO But do not worry about the billing because in mobile applications it's free.\nWhy should I take this course?\nYou can create a mobile application\nSupports client systems, iOS, Android, Windows Phone.\nI have many questions.\nAsk questions in the video. And have answers in the shortest possible time\nUpdating content continuously.\nWhat you will learn\nCreate application with phonegap\nAdd map to the application\nHide and show map controls\nAdd bookmarks to the map\nCustomize bookmarks\nGeolocation\nSearch for places on the map\nNavigate on the map with the cell phone gps\nSign up for the Geolocation course with HTML5 and Google Maps in Mobile Apps, do not miss the time,\nSign up now!\n\n\nThe course is in English, and contains subtitles in the following languages, German, Arabic, Chinese, Korean, Danish, French, Greek, Dutch, Hebrew, Indonesian, Italian, Japanese, Portuguese, Polish, Persian, Russian, Swedish, Thai , Turkish and Vietnamese.",
      "target_audience": [
        "Mobile application developers",
        "GIS and geospatial begining in development",
        "Enthusiasts for creating their first application",
        "Software developers",
        "Systems students",
        "System engineers"
      ]
    },
    {
      "title": "Learn to build caltech-101 image classifier mobile app",
      "url": "https://www.udemy.com/course/learn-to-build-caltech-101-image-classifier-mobile-app/",
      "bio": "Learn how to build caltech-101 image classifier app using computer vision and apple's create ml and core ml package",
      "objectives": [
        "Learn to build caltech-101 image classifier mobile app"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Introduction to create ML",
          "About Author"
        ],
        "Deep learning fundamentals": [
          "What is deep learning?",
          "What is difference between AI, ML and DL?",
          "Challenges and Wins",
          "Cost Function",
          "Gradient Descent"
        ],
        "Deep Learning networks": [
          "Linear Regression",
          "Logistic regression",
          "MLP",
          "CNN"
        ],
        "Model Training": [
          "Training Model",
          "Accuracy, recall , precision and F1 score (Optional)"
        ],
        "Model Inference": [
          "Creating XCode Project",
          "Importing Model",
          "Enabling Permission",
          "Capturing Image from Camera or Photo Library",
          "Using CoreML and Vision API",
          "Running app",
          "Next Steps"
        ]
      },
      "requirements": [
        "Basic Swift"
      ],
      "description": "Course Description\nLearn to build Caltech-101 image classifier iPhone app using Apple's crate ML and core ML SDK.  Deep learning is popular where a machine can be trained to detect objects in images.  Once trained, it can be used to detect objects in any image. The app does not require any wifi or cellular connectivity.  It uses deep learning to train the model from scratch on your own image dataset. The model can then be used inside an mobile app using Apple's coreML SDK. We'll build this app in this course. Since the app does not send your images or vides to remote service, it maintains your privacy and data secured.\n\n\nBuild a strong foundation in pose detection engines  with this tutorial for beginners.\nUnderstanding fundamentals of CreateML and CoreML\nUnderstanding fundamentals of deep learning and CNN\nTrain a model on your own dataset using create ML SDK and XCode\nBuild a real life object detection mobile application  using coreml and swift\n\n\nA Powerful Skill at Your Fingertips  Learning the fundamentals of object detection  puts a powerful and very useful tool at your fingertips. swift, create ml and coreml are free, easy to learn, has excellent documentation.\nNo prior knowledge of CNN or deep learning is assumed. I'll be covering topics like CNN from scratch.\nJobs in computer vision area are plentiful, and being able to learn object detection will give you a strong edge.\nLearning object detection will help you become a computer vision developer which is in high demand.\n\n\n\n\nContent and Overview\nThis course teaches you on how to build object detection engine using open source create ml, coreml and swift .  You will work along with me step by step to build following answers\nTrain Object Detection model\nBuild Mobile object detection app using trained model\n\n\nWhat am I going to get from this course?\nLearn object detection from professional trainer from your own desk.\nOver 10 lectures teaching you how to build  object detection engine\nSuitable for beginner programmers and ideal for users who learn faster when shown.\nVisual training method, offering users increased retention and accelerated learning.\nBreaks even the most complex applications down into simplistic steps.\nOffers challenges to students to enable reinforcement of concepts. Also solutions are described to validate the challenges.",
      "target_audience": [
        "Beginner iOS developers who would like to build mobile apps using deep learning"
      ]
    },
    {
      "title": "NativeScript - prepare, optimise and publish app",
      "url": "https://www.udemy.com/course/nativescript-publish-app-on-markets/",
      "bio": "Preparing, optimising and publishing NativeScript app on Apple Store and Google Play",
      "objectives": [
        "How to build and optimize nativescript app",
        "How to prepare assets for the app",
        "How to release app on Goole play store",
        "How to release app on Apple store",
        "How to use a sidekick and NativeScript CLI"
      ],
      "course_content": {
        "Preparing app": [
          "Tools Needed",
          "Assets",
          "Metadata"
        ],
        "Android Release": [
          "Build Android APK",
          "Optimising app",
          "Play Store",
          "Making Release",
          "Final Release"
        ],
        "iOS Release": [
          "Overview of a process",
          "Creating certificates",
          "Identifiers and devices",
          "Provisioning Profiles",
          "App Store Connect",
          "iOS Assets",
          "Build IPA file",
          "Submit for review",
          "Final Remarks",
          "Bonus"
        ]
      },
      "requirements": [
        "Know how to create NativeScript app",
        "Have already a working app",
        "Having apple developer account on google developer account"
      ],
      "description": "First we will prepare our application for a release. We will set a various metadata for the app: name, unique ID, version number and name. We will also prepare assets for the app: icons and splash screen graphics. We will build our firs app file for Google play store and also I will show how to optimize it to reduce file size and make it run faster. We will publish our NativeScript app on Google Play store for android. Once we deal with google, we will move to Apple developer account and I will explain quite complicated process of having certificates, identifiers, devices and provisioning profiles. When all done and prepared, we will create our file and publish it in Apple Store connect.",
      "target_audience": [
        "Anyone who wants to know how to publish apps on both markets",
        "How to optimize nativescript app for file size and performance"
      ]
    },
    {
      "title": "ZK Web And Mobile Apps From Scratch Using Java",
      "url": "https://www.udemy.com/course/zk-webmobile-apps/",
      "bio": "ZK is a UI framework that enables you to build amazing web and mobile apps without having to learn JavaScript or ajax",
      "objectives": [],
      "course_content": {
        "Getting Started": [
          "What is ZK Framework ?",
          "Setting Up Your System",
          "Creating First Project ZK With Tomcat Server",
          "Learn About Welcome File",
          "ZK \"Hello World\"",
          "ZK \"Hello Word\" (Source Code)"
        ],
        "Basic ZK": [
          "Say Hello in Ajax way",
          "Say Hello In AJax Way (Source Code)",
          "A component is a POJO",
          "A component is a POJO (Source Code)",
          "Simple Example About variable resolver and EL expressions",
          "EL expressions (Source Code)",
          "Define UI in pure Java",
          "Define UI in pure Java (Source Code)"
        ],
        "Learn ZK in 10 Minutes": [
          "Registration Form Example 'ZUL' Part",
          "Registration Form Example 'ZUL' Part (Description)",
          "Registration Form Example 'JAVA' Part",
          "Registration Form Example 'JAVA' Part (Description & Source Code)"
        ],
        "Let's See Some Common Uses And Why ZK Is Rich": [
          "Simple Input Example 'ZUL' Part",
          "Simple Input Example 'JAVA' Part",
          "Input Form Description & Source Code",
          "Simple Grid Example",
          "Simple Grid (Source Code)",
          "Simple Listbox Example",
          "ListBox (Description & Source Code)",
          "Simple Tree Example 'ZUL' Part",
          "Tree (Description & Source Code)",
          "Simple Multi Drag & Drop",
          "Multi Drag & Drop (Description & Source Code)",
          "Simple Upload Exapmle",
          "Upload Image (Descrition & Source Code)"
        ],
        "Include CSS Style Using ZK": [
          "Simple Menu And Toolbar Example Include CSS In 'ZUL' Part",
          "Simple Menu And Toolbar Example Include CSS In 'JAVA' Part",
          "Menu And Toolbar (Description & Source Code)"
        ],
        "See Some Features In The New ZK Advance Course About PE And EE": [
          "Grid Master Example",
          "Grid Grouping"
        ],
        "Where Now ?": [
          "Some Final Word & New Advanced Course About ZK Framework"
        ],
        "From Me To You": [
          "Login Page Example With MVC"
        ]
      },
      "requirements": [
        "Basic Java And XML knowledge"
      ],
      "description": "Wanna become a Web and Mobile developer easily ?\n1-Features of ZK:\nZK is a component-based UI framework.\nZK enables you to build Rich Internet Application (RIA) and mobile applications without having to learn JavaScript or AJAX.\nZK helps to build highly-interactive and responsive AJAX web applications in pure Java.\nZK provides hundreds of components which are designed for various purposes\nZK is a multi browser platform\n2- Course description\nThis course includes 38 videos lectures (8 sections), and can be accomplished in 5 hours! including introduction, and then learning basics, css styles , ZK features and much more.\nZK is recommended for all students and entreprises wishing to build their Web/Mobile application by their selves.",
      "target_audience": [
        "Java programmers who want to learn web programming skills",
        "Java beginners who want to learn more Java and new Framework",
        "Anyone who wants to create Web And Mobile Apps",
        "Java beginners who want to learn more About Java and new Framework"
      ]
    },
    {
      "title": "Learn Mobile Programming By Example With Codename One",
      "url": "https://www.udemy.com/course/learn-mobile-programming-by-example-with-codename-one/",
      "bio": "A walkthru of real mobile application demos that shows you how you too can build an elaborate mobile app from scratch",
      "objectives": [],
      "course_content": {
        "Basics": [
          "Creating a hello world app",
          "Core Concepts of Mobile Development",
          "What is Codename One",
          "Anatomy of a Codename One Application",
          "Internationalization & Localization"
        ],
        "User Interface": [
          "Layout Basics",
          "Theme Basics",
          "Adapting a UI Design"
        ],
        "Storage, File System & SQL": [
          "Storage, File System & SQL"
        ],
        "Threading & The EDT": [
          "Threading & The EDT"
        ],
        "Advanced Topics": [
          "Properties",
          "Push Notification",
          "Native Interfaces",
          "Include Source"
        ],
        "Introducing Codename One": [
          "Codename One By Example",
          "Introducing Codename One"
        ],
        "Introducing Dr. Sbaitso": [
          "Introduction To Dr. Sbaitso - the demo app we will be building",
          "Dr. Sbaitso running on the device"
        ],
        "The Welcome Screen": [
          "Building the welcome form",
          "The Image Capture & Rounding logic"
        ],
        "The Main UI": [
          "The Main UI",
          "Answer And Say Methods"
        ],
        "The Designer Tool": [
          "The designer tool"
        ]
      },
      "requirements": [
        "Students need to be reasonably familiar with Java",
        "Students will need an IDE, ideally NetBeans but Eclipse or IntelliJ will also work",
        "All of the above IDE's include the Codename one plugin that students should install via the plugin update center"
      ],
      "description": "This is a Codename One crash course that uses existing demos: Dr. Sbaitso & PropertyCross to explain the various features of Codename One and in the process teaches you how to build a simple mobile app for iOS, Android etc...\nThis course is intended for Java developers and fans who are interested in building mobile apps and want to get a general sense of how this can be done. The course is structured as a code review that explains the demo in great details.",
      "target_audience": [
        "This course is tailored for software developers who have some Java experience",
        "Mobile experience isn't required"
      ]
    },
    {
      "title": "Build 5 iPhone Games with Xcode 8 and Swift 3",
      "url": "https://www.udemy.com/course/build-5-iphone-games-with-xcode-8-and-swift-3/",
      "bio": "Develop 5 simple beginner iOS games using the SpriteKit framework and Swift 3. Learn coding fundamentals and app dev!",
      "objectives": [
        "Build 2D Games with SpriteKit",
        "Deal with Collisions and Physics",
        "Organize Project And Animate Sprites",
        "Program And Solve Complicated Problems Using Swift",
        "SpriteKit Fundamentals",
        "Create Scenes In The Scene Editor",
        "Create and Work with Game Scenes"
      ],
      "course_content": {
        "Avoid Spikes Game": [
          "Avoid Spikes Game preview",
          "Setting up the game",
          "Adding sprites to the title screen",
          "Adding in the angles to the game",
          "Setting up the buttons",
          "Finishing up the TitleScene",
          "Spawning the objects",
          "Adding in the controls and the spike logic",
          "Setting up the physics",
          "Resetting the game",
          "Making a cool tech circle and spike",
          "Adding the art to Xcode",
          "Fixing the titlescene and adding score",
          "Adding in the main sprite and the player rotation"
        ],
        "Chroma Avoid Game": [
          "Chroma Avoid Game Preview",
          "Starting the game",
          "Setting up the player and the controls",
          "Spawning the two blocks",
          "Adding in the score labels and testing the app",
          "Adding in the spawning timers",
          "Setting up the color change logic",
          "Adding in the countdown timer",
          "Adding in the physics part 1",
          "Adding in physics part 2",
          "Adding in physics part 3",
          "Adding in a title scene",
          "Moving between scenes",
          "Implementing the scene change logic and Timer",
          "Making the dark Ship",
          "Making the light ship and the collectibles",
          "Importing the art",
          "Setting up an animated title scene part 1",
          "Setting up an animated title scene part 2"
        ],
        "Block Spawn then collect Game": [
          "Block Spawn then collect Game Preview",
          "Setting up the game",
          "Setting up the floor",
          "Setting up the blocks",
          "Optimizing the drop logic",
          "Adding in the labels",
          "Setting up the countdown timer and physics bounds",
          "Setting up the game over logic 1",
          "Setting up the game over logic 2",
          "Setting up the TitleScene",
          "Optimizing the title page",
          "Setting up a shadow",
          "FInishing off the game"
        ],
        "Click as fast as you can Game": [
          "Click as fast as you can Game Preview",
          "Starting the game",
          "Setting up the game objects",
          "Setting up a game timer",
          "Adding in the reset logic",
          "Finishing the game and adding cycling colors"
        ],
        "Collect squares game": [
          "Collect squares game preview",
          "Starting the game",
          "Setting up the start logic and the player",
          "Setting up the collectibles and the timers",
          "Setting up the player controls",
          "Adding in the physics",
          "Setting up the repeat logic",
          "Finalizing the gameplay",
          "Making the art in Photoshop and illustrator",
          "Wrapping up the game"
        ]
      },
      "requirements": [
        "A Mac computer (Xcode is only compatible on Mac.)",
        "Xcode 8 (Free)",
        "Swift coding experience is helpful"
      ],
      "description": "Learn to build 5 games for iPhone in Swift 3 with SpriteKit! Learn to build effective cash earning games by learning the secrets of development. Take your skills to a whole new level.\nYou will build this app from scratch! You don't have to have any prior experience in game development.\nThe course is structured so that it begins slowly, and with each lecture, you will understand more and more fundamentals about developing games with SpriteKit.\nThis course is project based so you will not be learning a bunch of useless coding practices. At the end of this course you will have real world apps to use in your portfolio. We feel that project based training content is the best way to get from A to B. Taking this course means that you learn practical, employable skills immediately.\nFive of the top ten highest grossing apps on the iOS App Store are games. If you ever had an idea for an amazing game and needed a clear, step-by-step course from a friendly teacher, this course is for you.\nOne of the best features is that you can watch the courses at any speed you want. This means you can speed up the or slow down the video if you want to.\nYou can use the projects you build in this course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearning how to code is a great way to jump in a new career or enhance your current career. Coding is the new math and learning how to code will propel you forward for any situation. Learn it today and get a head start for tomorrow. People who can master technology will rule the future.",
      "target_audience": [
        "Complete Beginners",
        "Anyone Who Wants To Learn iOS Game Development Using SpriteKit"
      ]
    },
    {
      "title": "Making Chatbot & Voice Apps (with Dialogflow v1)",
      "url": "https://www.udemy.com/course/making-chatbot/",
      "bio": "Learn building chatbot and voice applications for Google Assistant, facebook, slack using Dialogflow & firebase",
      "objectives": [],
      "course_content": {
        "phase 1": [
          "Hello World",
          "Understanding intent",
          "Getting started with firebase functions",
          "Understanding fulfilment",
          "Use firebase functions as fulfilment webhook",
          "Using database in fulfilment webhook",
          "Understanding Action identifier",
          "Understand FollowUp Intent",
          "Understanding Custom Entity",
          "Preparing to deploy",
          "Deploy on google assistant",
          "Deploy on facebook messenger platform",
          "Deploying on slack"
        ]
      },
      "requirements": [
        "You should be able to understand basic javascript and little knowledge of nodejs is plus point"
      ],
      "description": "ATTENTION, this course uses Dialogflow v1, since Dialogflow v2 is released every new Dialogflow agent is set to v2 by default, please don't forget to move your agent to v1 otherwise you may not get the expected results.\nATTENTION, firebase functions are not free anymore, you will have to have a paid plan activated to get free quota\n\n\nIn this course, I will tell you how to make chatbots for a website or mobile apps\nI will also tell you how to take advantage of google assistant and google home and how to make conversational apps for these devices using Dialogflow\nI will tell you how to take advantage of Docker and Kubernetes to make your chatbot highly scalable.\n\nCourse Outline:\n\nphase 1:\n\"\"\"\"\"\"\"\"\"\"\n1) Hello World\n2) Understanding Intent\n3) Custom entity\n4) Getting started with firebase functions\n5) Understanding fulfillment\n6) Using Firebase functions as fulfillment webhook\n7) Using database in fulfillment webhook\n\nPhase 2: (Comming Soon...)\n\"\"\"\"\"\"\"\"\"\"\n1) Account linking (Google assistant)\n2) Making User Level Entity for a personalized experience\n3) Rich Responses (suggestions chips, list, card, images, etc.)\n4) Understanding Context\n5)\nI will add more...\n\n\nJoin our slack channel to engage with other students of this course:\nSee Announcement section for Slack channel Invite link\n\n\n\n\n\n\n\n\n____                              ____\no8%8888,                          o8%8888,\no88%8888888.                      o88%8888888.\n8'-    -:8888b                    8'-    -:8888b\n8'         8888                   8'         8888\nd8.-=. ,==-.:888b                 d8.-=. ,==-.:888b\n>8 `~` :`~' d8888                 >8 `=` :`=' d8888\n88         ,88888                 88         ,88888\n88b. `-~  ':88888                 88b` `--  ':88888\n888b ~==~ .:88888                 888b -==- .:88888\n88888o--:':::8888                 88888o--:':::8888\n`88888| :::' 8888b                `88888| :::' 8888b\n8888^^'       8888b               8888^^'       8888b\nd888           ,%888b.            d888           ,%888b.\nd88%            %%%8--'-.         d88%            %%%8--'-.\n/88:.__ ,       _%-' ---  -       /88:.__ ,       _%-' ---  -\n'''::===..-'   =  --.  `          '''::===..-'   =  --.  `",
      "target_audience": [
        "Anyone who want to get start with conversational apps"
      ]
    },
    {
      "title": "QR Code Login Like Whatsapp Webapp With Angular 7 + Ionic 4",
      "url": "https://www.udemy.com/course/qr-code-login-like-whatsapp-webapp-angular-ionic-spring-boot/",
      "bio": "Whatsapp Webapp, With Ionic 4 Hybrid Mobile Application and Spring Boot 2.1.4. Angular 7, Ionic 4, Hibernate, Liquibase",
      "objectives": [
        "QR Code Login",
        "Spring Boot 2.1.4",
        "Ionic 4",
        "Angular 7"
      ],
      "course_content": {},
      "requirements": [
        "Basic Java Knowledge"
      ],
      "description": "In this cource, we will learn QR Code Login with mobile + web application.\nMobile application will be constructed with Ionic 4 hybrid (IOS and Android) framework.\nWeb application will be constructed using with Java, Angular and Spring Framework.\nImportant Topics:\nQR Code Login\nIonic 4 Mobile Application\nAngular Model View Controller\nSpring Framework Messaging\nHibernate\nMysql\nSpring Boot 2.1.4\nJava 1.8\nModel-view-controller\nAngular 7\nI hope that cource will be so helpful for all developers.",
      "target_audience": [
        "All developers curious about QR Code Login With Spring Boot, Angular And Ionic"
      ]
    },
    {
      "title": "This Is How You Make iPhone Apps - iOS Development Course",
      "url": "https://www.udemy.com/course/iosdevelopment/",
      "bio": "Learn every step in iOS App Development with iOS app development tutorial, from creating to submitting to app store.",
      "objectives": [],
      "course_content": {
        "Getting Started": [
          "Lesson 1 - What You Need To Start Making Apps"
        ],
        "Your First App": [
          "Lesson 2 - Getting The Tools You Need And Building Your First iPhone App",
          "Lesson 2 Challenge Solution",
          "Lesson 2 Assets"
        ],
        "Learning To Code": [
          "Lesson 3 - Learning To Write Code In Objective-C",
          "Lesson 3 Challenge Solution",
          "Lesson 3 Project File"
        ],
        "Creating A Tip Calculator App": [
          "Lesson 4 - Creating a Tip Calculator App",
          "Lesson 4 Challenge Solution",
          "Lesson 4 Tip Calculator App Images",
          "Completed Tip Calculator Project"
        ],
        "Creating A Food Journal App": [
          "Lesson 5 - Fun With TableViews, Arrays, and More",
          "Lesson 5 Challenge Solution"
        ],
        "Expanding Our Food Journal App": [
          "Lesson 6 - Updating Food Diary to save data and show a detail view",
          "Lesson 6 Challenge Solution",
          "Food Diary Lesson 6 Starting Point"
        ],
        "Adding Geo-Location And Maps to Our Food Journal App": [
          "Lesson 7 - Updating Food Diary to add Geo-Location And Map Views",
          "Food Diary Lesson 7 Starting Point"
        ],
        "Creating A Multi-Touch Photo-based App": [
          "Lesson 8 - A new app! Photos, touches, gestures, animations, and sound",
          "Lesson 8 Challenge Solution",
          "Lesson 8 Photo Touch Images and Sound File"
        ],
        "Submitting To The App Store": [
          "Lesson 9 - Submitting Your App To The App Store",
          "Lesson 9 PhotoTouch Icon Files"
        ]
      },
      "requirements": [],
      "description": "I'll teach you how to make iPhone apps with this complete iOS development tutorial. You'll learn how to create apps using the same tools and techniques used to make the top apps in The App Store.\nNo coding experience? No problem. We'll create our first app in Lesson 2 without writing a single line of code. Then in Lesson 3 of this iOS app development tutorial, we'll learn how to write code in Apple's Objective-C programming language.\nOnce we've gotten the hang of programming, we'll create three more apps as we explore Apple's iOS software development kit. I'll walk you through every detail of developing the apps from project creation, through every line of code, and on to testing the app.\nFinally, in the last lesson I'll let you watch over my shoulder as I submit an app to The App Store.\nTake the course now, learn iOS development now and have your first fully functional iPhone app before the end of the day.",
      "target_audience": []
    },
    {
      "title": "React Native Basic",
      "url": "https://www.udemy.com/course/react-native-basic/",
      "bio": "React Native Basic for beginners",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "basics of javascript"
      ],
      "description": "Hii Guys i hv been working as full stack developer from last 4 years and have worked in IT industry as MERN stack developer and also been working as tutor on udemy teaching development and courses related to\ndevelopment.\nIn this course u will learn everything about react native and how to use them.\nreact native make your app development process really very easy and simple as they have there own advantages.\nIn this course structure  i have already added\nbottom tab\nscreen navigations\nto do list app\nframework introduction\n\n\ni will be providing the source code along with the course to refer the code.\nplease learn all the hook before starting with the react js it  is important to know all the hook .\nreact native learning also involves learning HTML and CSS and JS as well which u will can learn in my other courses which i hv already uploaded if u hv also doubt in finding them do message me ill let u know.\nonce u are done with react native u can start with node js after which u can start as full stack app developer.\nin frontend u can use react native and in backend u can use node js.",
      "target_audience": [
        "anyone interested in learning react native",
        "anyone interested in learning app development",
        "anyone interested in learning mobile development"
      ]
    },
    {
      "title": "Introduction to Xamarin.Forms",
      "url": "https://www.udemy.com/course/introduction-to-xamarinforms/",
      "bio": "Learn the foundations of building cross-platform apps in C# with Xamarin.Forms",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Familiar with C# and .NET, Visual Studio with Xamarin installed, Mac Build host if you want to test on iOS, and/or Android Emulator to test on Android. Android and iOS devices optional"
      ],
      "description": "Xamarin.Forms is perfect for cross-platform applications that display \"forms over data\" where the primary goal of the application is to display data in a standardized way. This course focuses on the foundations of building Xamarin.Forms applications that target iOS, Android and Windows. In this course you will define a single UI that you share across all your supported platforms.  You will also see how to access platform-specific features such as the phone dialer or camera.",
      "target_audience": [
        "Experienced .NET developers with an interest in using their skill to build mobile applications"
      ]
    },
    {
      "title": "Mastering Android Development in 5 hours!",
      "url": "https://www.udemy.com/course/mastering-android-development/",
      "bio": "From Beginner to Pro: Comprehensive Jetpack Compose Android Development Course in under 5 hours!",
      "objectives": [
        "The fundamentals of Jetpack Compose and how to leverage its features for efficient UI development.",
        "Best practices in modern Android development, including MVVM design principles.",
        "How to manage state and navigate between different screens in your app.",
        "Techniques for integrating with REST APIs and handling dynamic data.",
        "Utilizing multiple thread with SideEffects and Coroutines.",
        "Building a beautiful scalable application with animation and the latest in mobile technology."
      ],
      "course_content": {
        "Introduction": [
          "What's included in our journey",
          "Demonstration of Smart Tasks",
          "Project overview",
          "Prepare project"
        ],
        "Base Structure": [
          "Network configuration",
          "Database configuration",
          "Create Home UI"
        ],
        "Functionality": [
          "Data handling",
          "Detail screen part 1",
          "Detail screen part 2",
          "Task complete"
        ],
        "Add-ons": [
          "Show status on Home screen",
          "Add comments to task details",
          "Polish and shine"
        ]
      },
      "requirements": [
        "Understanding of basic Android development",
        "Familiarity of Android Studio",
        "Internet Access"
      ],
      "description": "Unlock your potential as an Android developer and dive into the captivating world of mobile app creation with our unparalleled course! This immersive journey will empower you to master **Jetpack Compose** by guiding you through the development of **SmartTasks**, a sophisticated demo task app featuring advanced, real-world functionalities. Our highly engaging curriculum is designed to mirror an actual app development processes, where you'll receive detailed user stories and updates that drive the building experience. Beginning with a clear guideline and evolving with iterative updates, you'll gain invaluable insights and practical skills, transforming amateur aspirations into professional capabilities.\n\n\nWhy This Course?\nIn the rapidly evolving world of Android development, staying up-to-date with the latest tools and technologies is crucial. Whether you're an aspiring developer or looking to enhance your current skill set, this course offers practical, hands-on experience with **Jetpack Compose**, Google's modern toolkit for building native user interfaces, Retrfot2, and Room database to build a modern Android application.\nWhat is SmartTasks?\nSmartTasks is a powerful demo application that we will build together, showcasing all the essential tricks and techniques used in the realm of Android app development. By the end of this course, you will have a robust understanding of how to create dynamic, data-driven applications that feel alive and responsive to user interactions.\nKey Features:\n- **Custom Splash Screen:**\nDesign an attractive splash screen to captivate users upon launching the app.\n\n\n- **Dynamic Data Handling:**\nIntegrate data dynamically using Retrofit2, Room Database, and an endpoint to simulate real-world API interactions.\n\n\n- **Multi-day Task Management:**\nLearn to manage tasks across multiple days, enhancing organizational capabilities within your app.\n\n\n- **Navigation:**\nImplement smooth and intuitive navigation between different screens and dialogs.\n\n\n- **Detailed Task Views:**\nCreate a secondary screen to display detailed task information passing in an argument using jetpack compose navigation.\n\n\n\n\n\n\nCourse breakdown:\n\n\nIntro A\nWhat’s included in learning journey (FREE) 1\nDemo of the SmartTasks App (FREE) 2\nProject Overview, read UserStory below 3\nPrepare Project (Start new project, import dependencies, setup theme, and Nav) 4\n\n\nBase Structure B\nNetwork configuration (including models) 1\nDatabase configuration (including new tasks only logic) 2\nCreate Home UI + Task Item UI and display all tasks 3\n\n\nFunctionality C\nOrganize list to show today’s only, and sort by priority and date 1\nDetail Screen (passing in argument) 2\nTask Completed logic + status visibility on detail screen 3\n\n\nAdd-Ons D\nShow status of task on Home Screen 1\nAllow user to add a comment to task when marking as completed 2\nAdd app icon and Splash Screen 3\n\n\n\n\nUser Story\nEmployees often have different tasks during the day which they need to complete. Because there\nare plenty of off-desk workers who don’t have managers supervision on-site, manager needs to\ngive them tasks which they need to accomplish for that day.\nEmployee needs to note somewhere that particularly task is finished, and add comment what\nhas been done, or what has been a potential problem.",
      "target_audience": [
        "**Aspiring Android Developers:** This course is perfect for beginners who want a comprehensive introduction to Android development.",
        "**Intermediate to Advanced Developers:** If you already have some experience but want to master Jetpack Compose, this course will take your skills to the next level.",
        "**Tech Enthusiasts:** Anyone interested in cutting-edge technologies and modern app development methodologies.",
        "Ignite your learning journey with this exciting project, guided by a seasoned Android Developer who will share valuable insights and practical tips. Enroll now and take the first step towards creating dynamic, impactful Android applications!"
      ]
    },
    {
      "title": "Learn Flutter GetX Course 2024",
      "url": "https://www.udemy.com/course/learn-flutter-getx-course-2024/",
      "bio": "Master The Dynamic World Getx in Flutter",
      "objectives": [
        "Learn Flutter Getx In 2024",
        "Learn Routing And Navigation with Getx",
        "Api Intergration with Getx",
        "Building Real World Apps With Getx"
      ],
      "course_content": {
        "Introduction": [
          "Flutter GetX Introduction",
          "Showing Snackbar using GetX Library",
          "Show Dialog with GetX Library",
          "GetX - by using Obx and Custom Class"
        ],
        "Routing and Navigation": [
          "Route Navigation for Un-named Routes using GetX Library",
          "Route Navigation for named Routes using GetX Library"
        ],
        "Dependency Injection With Getx": [
          "Implementation",
          "Dependency Injection Get.put - Get.lazyPut - Get.putAsync - Get.create",
          "Flutter GetX Service"
        ],
        "Api integration": [
          "Fetch & Display API Data in Flutter using GetX",
          "Flutter Get Storage and Email Validation",
          "Fetch API Data with GetConnect & StateMixin in GetX"
        ],
        "Flutter GetX Todo App": [
          "Flutter GetX Todo App",
          "Flutter GetX Todo App || Data fetch code in Provider & Controller",
          "Display Fetched Data From Server in Todo App",
          "Display Fetched Data From Server in ListView Part",
          "Implementing ListView Pagination",
          "Saving Data to Server using GetX GetConnect Part",
          "Updating Data to Server using GetX GetConnect",
          "Delete Data From Server using GetX Connect Part",
          "Check & Listen for Internet Connectivity Changes using GetX and Connectivity Pkg"
        ],
        "Packing in Flutter with Getx": [
          "Image Picker from Camera & Gallery using GetX",
          "Emoji Picker in Flutter using GetX",
          "Date Picker in Flutter using GetX",
          "Time Picker in Flutter using GetX",
          "Text Extractor from Image using Firebase ML Kit and GetX",
          "Image Label using Firebase ML Kit and GetX"
        ]
      },
      "requirements": [
        "Basics of Flutter and Dart"
      ],
      "description": "Embark on a transformative journey into the world of Flutter development with our comprehensive \"Learn Flutter GetX Course 2024.\" This cutting-edge course is meticulously designed to equip you with the skills and knowledge needed to leverage the power of GetX, a state-of-the-art Flutter package that simplifies and enhances your development workflow.\nWhat You'll Gain:\nSolid Foundations: Start with a robust introduction to GetX Flutter, setting the stage for a seamless learning experience.\nInteractive User Feedback: Explore the art of displaying Snackbars and creating dynamic dialogs using GetX for instant and engaging user interactions.\nAdvanced State Management: Dive deep into advanced state management techniques with Obx and custom classes, unlocking the full potential of reactive programming in your Flutter applications.\nHands-On Experience: This course goes beyond theoretical concepts, offering hands-on implementation and practical exercises. Build real-world applications, reinforce your learning, and gain the confidence to tackle complex Flutter projects.\n\n\nKey Concept :\nGetx intro\nRouting and navigation with Getx\nDependency Injection with Getx\nApi Integration\nFetching Api Data in different formats\nObx and Class\nFirebase ML Kit\nReal World TO_DO App\nLaravel Api\nUpload ,Update ,Delete , Save Data in Server\nCourse Highlights:\nEngaging video lectures with clear explanations and live coding demonstrations.\nReal-world examples and projects to apply your knowledge.\nExpert insights and best practices for efficient Flutter development.",
      "target_audience": [
        "Everyone who intrested Flutter Beginner and Junior developer who wants to master flutter Flutter developers who still need more"
      ]
    },
    {
      "title": "Mastering the Time Profiler in Instruments with SwiftUI",
      "url": "https://www.udemy.com/course/mastering-the-time-profiler-in-instruments-with-swiftui/",
      "bio": "Optimize SwiftUI Performance: Master Time Profiler in Xcode Instruments",
      "objectives": [
        "How to Use Time Profiler in Instruments – Understand how to navigate and interpret the Time Profiler tool to analyze CPU performance.",
        "Detecting and Fixing CPU Bottlenecks – Identify inefficient code that causes high CPU usage and learn how to optimize it.",
        "Understanding Symbolication – Learn how to properly symbolicate crash logs and stack traces to debug issues effectively.",
        "Analyzing Call Trees – Break down call tree data to pinpoint performance-heavy functions and improve execution efficiency.",
        "Profiling SwiftUI Animations – Measure and optimize animations in SwiftUI to ensure smooth performance without unnecessary CPU strain.",
        "Reducing Unnecessary Background Processing – Identify and eliminate background tasks that unnecessarily consume processing power.",
        "Using Dispatch Queues Efficiently – Understand how to balance work across different threads to improve concurrency and responsiveness.",
        "Handling High CPU Usage in Loops and Recursion – Detect and resolve performance issues caused by inefficient loops and recursive calls.",
        "Minimizing Rendering Overhead in SwiftUI – Optimize view updates and state changes to prevent excessive re-renders.",
        "Debugging and Fixing Symbolication Issues – Learn troubleshooting techniques to ensure Instruments correctly maps function names in stack traces.",
        "Best Practices for Writing Efficient Swift Code – Improve coding habits to write cleaner, more performant SwiftUI applications.",
        "Real-World Debugging Scenarios – Work through practical examples of performance issues in SwiftUI apps and learn how to resolve them efficiently."
      ],
      "course_content": {
        "Introduction": [
          "Xcode Instruments Explained: A Deep Dive into Performance & Debugging Tools",
          "Introduction to the Instruments Time Profiler in Xcode",
          "Explaining the 'Heaviest Stack' Component in Time Profiler",
          "What is DSYM? (Debug Symbols in Xcode)",
          "App Binaries, DSYM UUIDs to Facilitate Symbolication",
          "Using the Time Profiler to Find the Function that Uses Too Much CPU"
        ],
        "Debugging Symbolication": [
          "Debugging Guilde"
        ]
      },
      "requirements": [
        "Basic Knowledge of Swift – Familiarity with Swift syntax and concepts such as variables, loops, and functions.",
        "Understanding of SwiftUI – Prior experience with SwiftUI layout, views, and state management is helpful but not mandatory.",
        "Mac Computer with Xcode Installed – You’ll need a macOS device with the latest version of Xcode to run Instruments and analyze performance.",
        "Familiarity with Debugging in Xcode – Basic understanding of Xcode’s debugging tools, such as breakpoints and the debug console.",
        "Experience Running iOS Simulators – Knowing how to launch and test apps on the iOS Simulator within Xcode.",
        "Fundamental Programming Knowledge – General programming concepts such as conditionals, loops, and functions will be useful.",
        "Basic Multithreading Concepts – Some exposure to Grand Central Dispatch (GCD) or async/await will help in understanding performance improvements.",
        "Willingness to Analyze and Debug Code – A problem-solving mindset to investigate performance issues and optimize code execution.",
        "No Prior Instruments Experience Needed – This course will introduce and guide you through Instruments, making it beginner-friendly.",
        "Ability to Read Stack Traces – Some experience looking at error logs and understanding stack traces will be beneficial.",
        "Interest in Improving App Performance – Developers who want to create smooth and efficient apps will benefit the most from this course.",
        "No Third-Party Libraries Required – The course focuses on native Swift and SwiftUI development, so no external dependencies are needed."
      ],
      "description": "Unlock the Secrets to SwiftUI Performance Optimization with Time Profiler in Instruments\nStruggling with laggy animations, slow app performance, or high CPU usage in SwiftUI? The Time Profiler in Instruments is one of the most powerful debugging tools in Xcode, but many developers find it difficult to extract meaningful insights from it.\nIn this course, you will learn from real-world debugging sessions and discover the exact steps to:\nSet up the Time Profiler correctly to capture meaningful performance data\nIdentify inefficient code that consumes too much CPU and slows down execution\nSymbolicate stack traces to see which Swift functions are causing bottlenecks\nAnalyze expensive computations and optimize them for better performance\nResolve slow animations and UI stutters using profiling techniques\nUse proper debugging workflows to streamline the optimization process\nBy following a structured approach, you will learn how to diagnose and fix slow-performing SwiftUI code using real-world profiling techniques. After completing this course, you will have the skills to make your apps run faster and more efficiently. Whether you're a beginner learning SwiftUI or an experienced iOS developer looking to refine performance, this course will provide valuable insights into using Instruments effectively. Debugging performance issues can be challenging, but with the right tools and techniques, you will be able to optimize your app like a pro. You will gain hands-on experience and learn industry best practices to ensure that your apps run smoothly, efficiently, and without unnecessary CPU overhead.",
      "target_audience": [
        "iOS Developers – Anyone developing iOS apps who wants to optimize performance and eliminate CPU bottlenecks.",
        "SwiftUI Developers – Those working with SwiftUI who need to ensure smooth animations and efficient UI updates.",
        "Junior iOS Engineers – Beginners looking to improve their debugging skills and gain a deeper understanding of app performance.",
        "Mid-Level & Senior Developers – Experienced developers who want to fine-tune their apps for efficiency and responsiveness.",
        "Freelance iOS Developers – Those who need to optimize their client projects and ensure high-performance applications.",
        "Mobile App Performance Engineers – Developers focusing on optimizing CPU, memory usage, and app responsiveness.",
        "Developers Transitioning to iOS – Engineers coming from other platforms who want to learn iOS-specific performance debugging tools.",
        "Students & Aspiring iOS Developers – Those studying Swift and iOS development and looking to improve their app debugging skills.",
        "Indie App Developers – Solo developers working on their own apps who need to optimize their performance for better user experience.",
        "Technical Leads & Engineering Managers – Leaders who need to understand performance issues and guide their teams in debugging and optimization.",
        "QA Engineers & Testers – Professionals responsible for identifying performance issues and ensuring apps run smoothly.",
        "Anyone Frustrated with Slow Apps – If you’ve ever struggled with laggy interfaces or unresponsive apps, this course will help you fix those problems efficiently."
      ]
    },
    {
      "title": "Android NDK Programming: Master Class",
      "url": "https://www.udemy.com/course/android-ndk-programming-master-class/",
      "bio": "Android apps development use C/C++ code",
      "objectives": [
        "Android NDK programming",
        "Write High performance Android APP",
        "Android programming using C/C++",
        "Build FFmpeg for Android from source code",
        "Using FFmpeg in AndroidStudio project"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to NDK",
          "Installation and Setup",
          "Use NDK log"
        ],
        "NDK with C/C++": [
          "JNI with C",
          "JNI with C++",
          "JNI with C C++ Mixture"
        ],
        "Call NDK method": [
          "Passing Primitives",
          "Passing Strings",
          "Passing Array of Primitives"
        ],
        "Accessing Object’s Variables and Methods": [
          "Accessing Object's Instance Variables",
          "Accessing Class's Static Variables",
          "Callback Instance Methods and Static Methods",
          "Callback Overridden Superclass' Instance Method"
        ],
        "Creating Objects and Object Arrays": [
          "Creating Java Objects in Native Code",
          "Creating Java Array of Objects in Native Code"
        ],
        "Build and Use FFmpeg in Android Project": [
          "Build FFmpeg for Android",
          "Use FFmpeg in Android Studio Projects",
          "Play Video on Android use FFmpeg"
        ]
      },
      "requirements": [
        "Android Programming",
        "C/C++",
        "Java"
      ],
      "description": "This is a practical class about Android NDK programming. After learning this class, you will be able to write high performance program with C/C++ code for your Android Apps. And you can integrate existing C/C++ libraries into your Android Apps.\nThis course has two prerequisites. Firstly, basic Java programming skills is required as most Android apps are developed in Java code. Secondly, basic C/C++ programming skills is recommended. It will be helpull if you hava some basic Android development experience.\nThe Android NDK is a set of tools allowing you to embed C or C++ (“native code”) into your Android apps. The ability to use native code in Android apps can be particularly useful to developers who wish to do one or more of the following:\nPort their apps between platforms.\nReuse existing libraries, or provide their own libraries for reuse.\nIncrease performance in certain cases, particularly computationally intensive ones like games.\nJNI is the Java Native Interface. It defines a way for the bytecode that Android compiles from managed code (written in the Java or Kotlin programming languages) to interact with native code (written in C/C++). JNI is vendor-neutral, has support for loading code from dynamic shared libraries, and while cumbersome at times is reasonably efficient.\nThis lecture will teach you setup Android NDK develop environment and create your first NDK program.\nFFMPEG is one of the most popular or powerful media processing library with multiple platform support and it is capable of doing Most of Media processing task. You will learn Compile/Build Latest ffmpeg for Android and Use it in Android Studio.",
      "target_audience": [
        "Beginner Android developers",
        "Beginner C/C++ developers",
        "Beginner FFmpeg developers"
      ]
    },
    {
      "title": "Android Beginners Guide To Create A Weather Forecast App",
      "url": "https://www.udemy.com/course/android-beginners-weather-forecast-app/",
      "bio": "Learn Android by creating a weather forecast app from OpenWeatherMap API using Volley Library",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Overview",
          "Weather API Overview"
        ],
        "Let's Create The App": [
          "Create New Project",
          "Create User Interface",
          "Add Images",
          "Write Code To Update Text Into UI",
          "Get Weather Data From An API",
          "Populate Rest of The UI Views",
          "Display Weather Status Image"
        ],
        "How It Works": [
          "Current date and time",
          "Weather Icons"
        ],
        "Downloadable Resources": [
          "Background Images & Weather Icons",
          "Source Code"
        ]
      },
      "requirements": [
        "You should have basic Java programming knowledge",
        "You should have Android Studio installed in your computer with Internet connection"
      ],
      "description": "In this course I will introduce you to Android App Development. We are going to learn how to develop a beautiful weather forecast app from the scratch. This training is for those who has some knowledge on Java and thinking to start Android App Development.\nInstead of going through all the technical terms and components of an Android app, I will start by creating an app right away. This will give you a quick overview of creating a complete app and will boost your confidence. You may not understand all the topics at first, in this case just finish watching all lectures. Then try to do all the steps by yourself. You will have better understanding of the app once you will have hands on experience.\nI have attached the source code of the app, so that you can review and learn from there.",
      "target_audience": [
        "Anyone new at Android app development",
        "Anyone who wants to learn how to create an app using a RESTFul Web Service"
      ]
    },
    {
      "title": "Practical UICollectionView in iOS and Swift",
      "url": "https://www.udemy.com/course/practical-uicollectionview-in-ios-and-swift/",
      "bio": "Learn to harness power of UICollectionView and take control of your app's layout",
      "objectives": [
        "Learn to use Collection Views in you app",
        "Learn to add, delete move items in Collection Views",
        "Learn to move item cells in Collection Views",
        "Learn to create Collection Views programmatically",
        "Learn to create custom layout for Collection Views",
        "Learn to code layout screens with Swift 5"
      ],
      "course_content": {
        "Introduction": [
          "Your very first collection view",
          "Setting number of columns and rows",
          "Handling cell selection",
          "Master Detail Screens",
          "Adding new data and refresh control",
          "Alternate approach for new data insert",
          "Cell deletion plan",
          "Custom cell in Collection Views",
          "Cell editing mode",
          "Cell selection in edit mode part 1",
          "Cell selection in edit mode part 2",
          "Cell deletion",
          "Moving cells around"
        ],
        "Advanced Collection View": [
          "Programmatic Collection Views - Data Model",
          "Modeling Collection View Data Source",
          "Programmatic Collection View Cell",
          "Programmatic Collection View"
        ],
        "UICollectionView Custom Layout": [
          "Snappy Custom Layout Demo",
          "Setting up Programmatic View Controller",
          "Custom CollectionView Layout Class",
          "Custom CollectionView Final Wrap up"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift",
        "Basic Knowledge of Xcode",
        "Basic Knowledge of iOS Development"
      ],
      "description": "A collection view is a way to present an ordered set of data items using a flexible and changeable layout. The most common use for collection views is to present items in a grid-like arrangement, but collection views in iOS are capable of more than just rows and columns.\nIn this course you will learn to harness the power of Collection Views. Build an app from scratch, and customize it by creating and manipulating custom collection view cells. You will also learn how to create UICollectionViews programmatically and add supplemental views to display custom header for each section of your collection view.\nThis course is designed for anyone who wants to create flexible grid layout using collection views. This course takes practical approach by teaching you each aspect in order to create an efficient collection view along with tip and tricks associated with collection views.",
      "target_audience": [
        "Anyone with basic knowledge on iOS app development",
        "Anyone who wants to use Collection Views in their app",
        "Anyone who wants to learn Collection Views and its usage in Swift 5"
      ]
    },
    {
      "title": "Beginners Swift Programming For iOS Development",
      "url": "https://www.udemy.com/course/beginners-swift-programming-for-ios-development/",
      "bio": "Learn how to program with iOS Apps with Swift. A easy to follow course for the beginner",
      "objectives": [
        "A easy to follow course aimed at the beginner to Swift. Learn how to make iOS applications quickly",
        "This course teaches practical skills that translate easily to real-world development"
      ],
      "course_content": {
        "Introduction To Swift": [
          "Important - Download These First - Working Files",
          "Welcome To The Course",
          "Introduction To Swift",
          "Swift Vs Objective-C",
          "How To Access Your Working Files",
          "Xcode Playgrounds"
        ],
        "Getting Started With Swift": [
          "Defining Constants With Let",
          "Defining Variables With Var",
          "Type Annotations And Inference",
          "Defining Functions",
          "Function Parameters",
          "In/Out Parameters",
          "Tuples",
          "Conditional Statements: If",
          "Conditional Statements: Switch",
          "Loops: For",
          "Loops: For-In",
          "Loops: While",
          "Control Flow Statements"
        ],
        "Swift Language Features": [
          "Automatic Reference Counting Overview",
          "Strong And Weak References In Arc",
          "Closures Overview",
          "Closure Capturing Values",
          "Trailing Closures",
          "Array Collections",
          "Dictionaries"
        ],
        "Swift Classes And Inheritance": [
          "Classes",
          "Class Initializers",
          "Class Methods",
          "Class Properties",
          "Inheritance",
          "Type Casting",
          "The Anyobject",
          "Defining Protocols",
          "Implementing Protocols",
          "Class Extensions"
        ],
        "Swift Enumerations, Structures, Generics And Operators": [
          "Enumerations",
          "Associated Values",
          "Enumeration Raw Values",
          "Structures",
          "Generic Functions",
          "Generic Types",
          "Optional Chaining",
          "Bitwise Operators",
          "And, Or, Xor",
          "Overloading Operators"
        ],
        "Swift In Action": [
          "Master View: Task List",
          "Detail View: Task Edit"
        ],
        "Conclusion": [
          "Review"
        ]
      },
      "requirements": [
        "Apple Mac"
      ],
      "description": "This new Swift programming language from Apple makes building iOS applications easy. Learn all you need to know about programming in Swift with this Infinite Skills course.\nThis Learning to Program with Swift training course from Infinite Skills will teach you how to program with Swift for iOS and Mac OS. This course is designed for beginner and experienced developers, and knowledge of Java, C#, or other modern languages is recommended.\n\nYou will start with an introduction to Swift, including learning how to define constants and variables and learning about conditional statements and control flow statements. From there, Rogers will teach you about the Swift language features. This video tutorial will also cover Swift classes and inheritance, as well as enumerations, structures, generics, and operators. Finally, you will see Swift in action as you watch Rogers demonstrate a Master-Detail application.\n\nOnce you have completed this computer based training course, you will be fully capable of using Swift’s modern features to program for iOS and Mac OS. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "This course is aimed at the beginner and covers the core essentials of programming in Swift"
      ]
    },
    {
      "title": "Become an iOS Developer from Scratch",
      "url": "https://www.udemy.com/course/the-art-of-real-ios-programming/",
      "bio": "A step-by-step iOS development tutorial for aspiring developers with no coding or Objective-C experience.",
      "objectives": [],
      "course_content": {
        "01. Introduction": [
          "Working Files - Download These First",
          "What You Will Learn",
          "iOS Platform Overview",
          "Using The iOS Dev Center"
        ],
        "02. Getting Started": [
          "Getting The SDK",
          "Hello iOS",
          "Understanding The Skeleton App",
          "iPhone iPad And Universal Apps",
          "Provisioning Your Device"
        ],
        "03. Tools Overview": [
          "Xcode Overview",
          "Customizing Xcode",
          "Using Interface Builder",
          "Using The Simulator",
          "Using The Organizer",
          "Key Xcode Tips"
        ],
        "04. Objective-C Essentials": [
          "Objective-C_Overview",
          "Creating Classes",
          "Declaring And Implementing Methods",
          "Sending Messages",
          "Memory Management",
          "Creating Object Instances",
          "Automatic Reference Counting",
          "Declared Properties",
          "Coding Conventions"
        ],
        "05. Using The Foundation Framework": [
          "Working With Strings",
          "Extending With Categories",
          "Using The Xcode Debugger",
          "Working With Numbers",
          "Collections - Part 1: Arrays",
          "Collections - Part 2 Dictionaries"
        ],
        "06. View Controllers": [
          "Understanding MVC",
          "View Controller Overview",
          "Installing Custom Xcode File Templates",
          "Creating The iMusic App",
          "Understanding View Loading",
          "Responding To Display Related Callbacks",
          "Target-Action Pattern",
          "Presenting Modal View Controllers"
        ],
        "07. Views": [
          "Understanding Views",
          "Creating Views Programmatically",
          "Building The Main User Interface",
          "Defining IBOutlets",
          "Working With Images And Image Views",
          "Handling Images On Retina Devices",
          "Creating Pattern Images",
          "Customizing Buttons"
        ],
        "08. Data Management": [
          "Building The Data Model",
          "Archiving Data",
          "Understanding Protocols",
          "Adopting NSCoding",
          "Persisting The Data Model",
          "Advanced Data Options"
        ],
        "09. Table Views": [
          "Using iOS Table Views",
          "Introducing A Navigation Controller",
          "Building The Music List View Controller",
          "Providing The Table Data",
          "Enabling Behavior With Delegation",
          "Adding Swipe To Delete",
          "Deleting An Album"
        ],
        "10. Storyboards": [
          "Storyboarding iMusic",
          "Adding A Custom Music List Cell",
          "Animating The Cell's Delete Behavior",
          "Building The Detail View UI",
          "Building The Detail View Controller",
          "Passing Data Between Scenes",
          "Opening The Album In iTunes",
          "Prototyping The Search UI - Part 1",
          "Prototyping The Search UI - Part 2"
        ]
      },
      "requirements": [],
      "description": "A step-by-step guide to building an iPhone or iPad app for Beginners.This is a course designed for beginners who have never coded in Objective-C or build an iOS app.\nIn this iOS development video-based training course, expert developer and trainer Bob McCune teaches you how to build iOS apps using the iOS SDK from Apple. iOS is the standard SDK (software development kit) for iPad, iPhone and iPad devices. Using the SDK, Bob walks you through creating a fully functional app, and applying the tools and techniques available to you.\nIn this iOS development tutorial, you start by accessing, downloading and setting up the SDK from Apple. Next, you will explore and setup Xcode to build your App. You will cover essential Objective-C topics, such as classes, methods, building objects, and coding conventions. Jumping right into development, you will work with strings, controllers, manage application data, create views and other UI elements, and work with iCloud. You will learn how to create a universal project, and create specific interfaces for each device.\nBy the completion of this iOS development tutorial course you will be able to create a fully functioning iPhone or iPad app.",
      "target_audience": [
        "Business and/or non-technical people who want to learn the basics of iPhone app development. This is a step by step beginners course for aspiring developers and people who are new to iOS development, including:",
        "Product Managers",
        "Designers",
        "Marketers",
        "Aspiring Developers (note advanced developers will likely find this class too elementary)",
        "Startup Founders"
      ]
    },
    {
      "title": "Design Grid Layouts for iPhone apps using Collection Views",
      "url": "https://www.udemy.com/course/iphone-custom-grid-layouts-for-every-ios-app-design/",
      "bio": "Display multimedia content in a scrollable grid (Pinterest) using the UICollectionView with Objective C for iOS7",
      "objectives": [
        "Learn Apple's UICollectionView Classes",
        "Display Pictures, Options, or Help Screens"
      ],
      "course_content": {
        "Introduction": [
          "Introduction with a Real World Example"
        ],
        "Custom Views": [
          "2.0 Tutorial - PageViewController Custom User Interface with a UICollectionView",
          "3.0 Tutorial - Connecting the UICollectionViewDataSource for Scrollable Content"
        ],
        "Custom Classes": [
          "4.0 Tutorial - Custom PageCell Class to Display our Tutorial Screens",
          "5.0 Tutorial - PageData Class and NSMutableArray for Data Storage"
        ],
        "Setting Up Controls": [
          "6.0 Tutorial - PageControl Setup for Page Numbers when Scrolling",
          "7.0 Tutorial - Real Data for Our PageViewController and Color Cleanup",
          "8.0 Tutorial - Delegate Protocol to Dismiss Tutorial Screen"
        ],
        "Defaults and Data": [
          "9.0 Tutorial - NSUserDefaults and Hiding the Status Bar",
          "10.0 Tutorial - Adding and Removing Data for the UICollectionView"
        ],
        "Closing": [
          "Bonus"
        ]
      },
      "requirements": [
        "Knowledge of Objective-C"
      ],
      "description": "Display your content using grid layout's and write less code. This course teaches you how to layout your app's dynamic or static content. This course will teach you how you can adapt Apple's powerful UICollectionView classes for your apps to display pictures, options, or help screens.\nYou will learn the easiest way to get things done with code examples that include building a custom help screen that scrolls between pages of content. The UICollectionView is powerful because you can display the same content in different ways.\nThis is the best course to get started with the power of grid layouts in iOS 7 and Objective C. Signup today!",
      "target_audience": [
        "People who want to make Apps with Custom Displays"
      ]
    },
    {
      "title": "Harness iPhone Touch Gesture Input for Games or Apps in iOS7",
      "url": "https://www.udemy.com/course/iphone-touch-gesture-input-will-make-you-smile/",
      "bio": "Using Xcode and Objective C you can make your iOS7 apps interactive. Move it, swipe it, zoom it, tap it, rotate it.",
      "objectives": [
        "Learn iOS Gestures",
        "UIGestureRecognizer Basics",
        "Gesture States (i.e. your status message)",
        "Pan Gesture - Drag an image with your finger",
        "Pinch Gesture - Zoom or shrink a photo",
        "Rotate Gesture - Twirl text or images",
        "Screen Edge Pan Gesture - Slide on panels like Control Center"
      ],
      "course_content": {
        "Introduction": [
          "1 Lecture - Multitouch Gestures on iPhone Introduction"
        ],
        "UITapGesture": [
          "2 Tutorial - UITapGestureRecognizer for Touch Input and Tap Behaviours"
        ],
        "UIPanGesture": [
          "3 Tutorial - UIPanGestureRecognizer for Finger Drag Input and Panning"
        ],
        "Moving": [
          "4 Tutorial - Move a UIView or UIImageView around using the UIPanGestureRecognize"
        ],
        "Zooming": [
          "5 Tutorial - Zoom a UIView or UIImageView with the UIPinchGestureRecognizer"
        ],
        "Rotate": [
          "6 Tutorial - Rotate a UIView or UIImageView with the UIRotationGestureRecognizer"
        ],
        "Bugfix": [
          "7 Tutorial - Bugfix for PanGesture Translation and Rotation Gesture Anchor Point"
        ],
        "Simultaneous Gestures": [
          "8 Tutorial - Enable Simultaneous Gestures to Make User Interaction Smooth"
        ],
        "Hide and Show Panels": [
          "9 Tutorial - Hide or Show Panels using the UIScreenEdgePanGesture"
        ],
        "Photo Collage App": [
          "10.0 Challenge - Make a Photo Collage App",
          "10.1 Challenge - Adding Pictures to the Photo Collage",
          "10.2 Challenge - Adding UILabels to the Collage with Gestures",
          "10.3 Challenge - Resizing Labels using Font Sizes for Crisp Fonts"
        ]
      },
      "requirements": [
        "Knowledge of Objective-C"
      ],
      "description": "You can use Apple's code to make it easy to enable finger interaction with your apps.\nThis course is awesome. It will save you time.\nYou won't spend weeks trying to get it to work right. The code samples are taken from two of my published iPhone apps, Photo Table and Artwork Evolution.\nYou'll learn how to create a touch friendly app. Many apps use gestures to make the app fun to use.\nDownload Flipboard, Clear, Paper | FiftyThree, Paper | Stories from Facebook. Slide your finger, drag some text, swipe up and down. Each of these apps makes people smile because they use touch gestures to make complex tasks easy and convenient.\nAt the end of the course you can test your knowledge and build a working picture and text collage app.\nTopics\nUIGestureRecognizer Basics\nGesture States (i.e. your status message)\nPan Gesture - Drag an image with your finger\nPinch Gesture - Zoom or shrink a photo\nRotate Gesture - Twirl text or images\nScreen Edge Pan Gesture - Slide on panels like Control Center",
      "target_audience": [
        "Intermediate iOS developers",
        "Gestures beginners"
      ]
    },
    {
      "title": "Create your first 3 fully apps with .NET MAUI",
      "url": "https://www.udemy.com/course/dotnet-maui-apps/",
      "bio": "Learn how to create a series of real applications with .NET MAUI and C# from scratch.",
      "objectives": [
        "Using controls in .NET MAUI to create applications",
        "Implementing business logic in apps with .NET MAUI",
        "Use of tools for development with .NET MAUI",
        "Creation of 3 real applications from scratch"
      ],
      "course_content": {
        "Application - Body Mass Calculator": [
          "App overview",
          "Explanation of the sample application",
          "Installing XAML Styler",
          "Removing the default code",
          "Creating de UI",
          "Performing the calculations",
          "Restricting data entry",
          "Reinforce your knowledge with more content"
        ],
        "Application - Pomodoro": [
          "App overview",
          "Creating the UI - Creating the Grid",
          "Creating the UI - Adding the pomodoro element",
          "Creating the UI - Customizing the control",
          "Creating the UI - Change the FontFamily",
          "Creating the UI - Adding the button",
          "Adding pomodoro logic - Implementing time reversal",
          "Establishing whether the pomodoro is running or not",
          "Implementing the alarm sound",
          "Adding pomodoro logic - Final adjustments"
        ],
        "Application - Amiibopedia": [
          "Introduction",
          "Creating the base UI",
          "Creating the AmiiboModel class",
          "Creating the ViewModel and getting the Amiibos",
          "Replacing static data with real data",
          "Assigning a different background color for each element",
          "Implementing Amiibo search"
        ],
        "Bonus Section: Improve your career": [
          "Get more knowledge"
        ]
      },
      "requirements": [
        "Basic knowledge of C#"
      ],
      "description": "Do you want to get into the world of multi-platform development but do not know where to start?\nWhat I recommend is to take practice and start creating applications from scratch. With this you will learn the process on how to develop a cross-platform application, that is, for Android, iOS and Windows, as well as other platforms such as MacOS and Tizen.\nIn this course, you will create your first three applications with .NET MAUI from zero, which are:\n\n\nApplication #1: Body Mass Index (BMI) Calculator.\nThis is the first application you will develop. It is a simple calculator for body mass index, it will help you understand the concept of layouts and controls. We will start creating the graphical interface, personalizing things like background color and controls. Then, we'll move on to the code behind and add the logic needed to perform the calculations. Finally, you will see a simple way to restrict the data entered in the application.\n\n\nApplication # 2: Pomodoro\nThe second application we will build is a Pomodoro application. With this application, you will learn how to handle other types of layouts such as grids, plus you will see simple ways to add an amazing design to the controls without the need to customize them or create complex code. You will also learn how to change the font family, how to handle timers for countdown, how to run sounds in the application and how to add some constraints to have a fully functional application.\n\n\nApplication # 3: Amiibopedia\nThe last application is an app to look up Amiibo information. In this application, you will learn how to create an attractive graphical interface, how to use the MVVM pattern by creating Models and ViewModels, how to consume REST services, how to display different layouts based on converters and how to implement a search in a list.\n\n\nWith a duration of approximately one hour per application, this course is a great way to get started in the world of mobile development with .NET MAUI.\n\n\nWhat are you waiting for? See you in the course.",
      "target_audience": [
        ".NET developers who want to learn how to create applications with .NET MAUI",
        "Developers of other technologies who wish to create cross-platform applications"
      ]
    },
    {
      "title": "Flutter 3 Non-Consumable In-App Purchase for IOS Platform",
      "url": "https://www.udemy.com/course/flutter-non-consumable-in-app-purchase-for-ios-platform/",
      "bio": "Unlock the Power of In-App Purchases in Flutter: Effortlessly Implement and Monetize Non-Consumable Product with Ease!.",
      "objectives": [
        "Discover how to seamlessly integrate one-off purchase options into your Flutter app for iOS, enabling users to make single purchases effortlessly.",
        "Effortlessly restore user purchases across devices for a seamless user experience.",
        "Learn how to effectively check and manage product availability on App Store Connect, ensuring your products are accessible and up-to-date for your users.",
        "Learn strategies to prevent backend issues and safeguard purchase records and user accounts."
      ],
      "course_content": {
        "Environment Set Up": [
          "Environment Set Up and Account Creation",
          "Set Up App Bundle on Xcode",
          "Upload Initial App To App Store"
        ],
        "Create RevenueCat Account": [
          "RevenueCat Account Creation"
        ],
        "Adding Product to AppStore and Revenuecat": [
          "Adding Product to AppStore and Revenuecat"
        ],
        "Adding Payment Package to Flutter": [
          "Adding Payment Package to Flutter"
        ],
        "Implementing Payment and Adding Sandbox User": [
          "1 Implementing Payment and Adding Sandbox User",
          "2 Implementing Payment and Adding Sandbox User"
        ],
        "Access In App Purchase on Another Device": [
          "Access In App Purchase on Another Device"
        ],
        "Conclusion on In App Purchase Development": [
          "1 Conclusion",
          "2 Conclusion"
        ]
      },
      "requirements": [
        "Basic understanding of Flutter and Dart"
      ],
      "description": "Welcome to the ultimate Flutter course that will take your mobile app development skills to the next level!\nAre you ready to harness the potential of in-app purchases and monetize your Flutter apps like a pro? Look no further, as this comprehensive Udemy course is designed to equip you with the knowledge and skills needed to effortlessly implement and monetize non-consumable products within your Flutter applications.\nIn today's mobile app ecosystem, in-app purchases play a pivotal role in revenue generation and enhancing user experiences. Whether you're a seasoned Flutter developer or just getting started, this course will provide you with a step-by-step roadmap to master the art of integrating in-app purchases seamlessly into your Flutter projects.\nHere's what you can expect from this course:\nUnderstanding In-App Purchases: We'll start from the basics, ensuring you have a solid foundation of how in-app purchases work, the types of products available, and their significance in mobile app monetization.\nEffortless Implementation: Dive into hands-on tutorials that will guide you through the entire process of integrating in-app purchases into your Flutter app. We'll cover everything from setting up your project to handling transactions.\nNon-Consumable Products: Learn how to create and manage non-consumable products, such as products. You'll discover strategies to maximize revenue from these products.\nTesting and Debugging: Discover how to thoroughly test and debug your in-app purchases to ensure they work flawlessly across various devices and scenarios.\nLegal and Compliance: Understand the legal and compliance aspects of in-app purchases, including privacy regulations and terms of service considerations.\nReal-World Examples: Throughout the course, we'll provide real-world examples and case studies to illustrate key concepts and inspire your own creative implementations.\nBy the end of this course, you'll be empowered to implement in-app purchases with confidence, making your Flutter apps not only functional but also profitable.\nJoin us on this journey to Unlock the Power of In-App Purchases in Flutter, and start monetizing your apps effectively today! Enroll now and take the first step towards becoming a proficient Flutter developer and a successful app entrepreneur.",
      "target_audience": [
        "Flutter developers who want to monetize their app through in-app purchases",
        "App developers who want to add one off payment to their app"
      ]
    },
    {
      "title": "RxJava | RxAndroid - II",
      "url": "https://www.udemy.com/course/rxjava-rxandroid-ii/",
      "bio": "Beginner guide to RxJava and RxAndroid With Kotlin",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How To Get Course Project File"
        ],
        "RxJava Operators": [
          "FlatMap Operator",
          "GroupBy Operator",
          "Merge Operator",
          "Concat Operator",
          "StartWith Operator",
          "Zip Operator"
        ],
        "Observables and Observers": [
          "Type Of Observables and Observers",
          "Observabl and Observer",
          "Single and SingleObserver",
          "Maybe and MaybeObserver",
          "Completable and CompletableObserver",
          "Flowable"
        ],
        "Disposables": [
          "Disposables in RxJava and RxAndroid"
        ],
        "Conclusion": [
          "What Next ?"
        ]
      },
      "requirements": [
        "Basic of Kotlin",
        "Basic of Android development",
        "RxJava | RxAndroid - I (Student should complete part I of this course)"
      ],
      "description": "This is a RxJava and RxAndroid beginner course Part II. The aim of this course is to teach fundamental concepts of RxJava that takes you from a novice to intermediate RxJava developer. Every concept is explained in detailed manner with code examples.\nIf you have some basic experience in developing Android application with Kotlin then this course is for you. By the end of this course you should be able to implement  Rxjava in your Android application.",
      "target_audience": [
        "Android developer who want to learn RxJava and RxAndroid"
      ]
    },
    {
      "title": "Hands-On Python & Xcode Image Processing: Build Games & Apps",
      "url": "https://www.udemy.com/course/hands-on-python-xcode-image-processing-build-games-apps/",
      "bio": "Coding masterclass - Learn the Python coding language. Learn image manipulation & recognition techniques for iOS apps.",
      "objectives": [
        "Program in Python.",
        "Use lists, loops, sets, and dictionaries in Python.",
        "Handle input and output.",
        "Create classes.",
        "Import in Python.",
        "Create a Blackjack game.",
        "Handle errors.",
        "Apply common filters like Sepia and Blur to the images in your app. Test distortion and transition effects! See what happens when you combine multiple filters.",
        "Use Facial Recognition software that is available in Swift to detect facial features such as eyes and smiles in photographs. Detect text found in images.",
        "Develop an interface that will allow you to load, modify, and save CIImages. Learn the different ways to load images from multiple sources into an iOS app. Knowing how to save images in a photo album opens a whole slew of possibilities!",
        "Superimpose images onto other images. Let a user place an image from a Camera Roll to the location where you tap on an app.",
        "Let a user zoom and pan on your app's images. This functionality is especially useful for users to interact with images like maps."
      ],
      "course_content": {
        "Introduction to Python": [
          "Course Trailer",
          "Course Highlights",
          "Downloading and installing Anaconda",
          "Basics of Programming - Part 1",
          "Basics of Programming - Part 2",
          "Basics of Programming - Part 3"
        ],
        "Lists": [
          "Lists"
        ],
        "Loops": [
          "Loops 1",
          "Loops 2",
          "Loops 3",
          "Loops 4",
          "Loops 5"
        ],
        "Sets and Dictionaries": [
          "Sets and Dictionaries 1",
          "Sets and Dictionaries 2"
        ],
        "Input and Output": [
          "Input and Output 1",
          "Input and Output 2",
          "Input and Output 3",
          "Input and Output 4",
          "Input and Output 5",
          "Input and Output 6",
          "Input and Output 7"
        ],
        "Classes": [
          "Classes 1",
          "Classes 2",
          "Classes 3",
          "Classes 4",
          "Classes 5",
          "Classes 6"
        ],
        "Importing": [
          "Importing 1",
          "Importing 2",
          "Importing 3",
          "Importing 4",
          "Importing 5",
          "Importing 6"
        ],
        "Blackjack": [
          "Blackjack 1",
          "Blackjack 2",
          "Blackjack 3",
          "Blackjack 4",
          "Blackjack 5",
          "Blackjack 6"
        ],
        "Error Handling": [
          "Error Handling"
        ],
        "Introduction to Core Image": [
          "How to Get Core Image",
          "Don't Have a Mac Computer?"
        ]
      },
      "requirements": [
        "You will need to install Python. Python is compatible with Mac and PC.",
        "You will need Xcode, Apple's free software for making apps for iOS, macOS, tvOS, and watchOS. Xcode is only available on a Mac or with MacOS software.",
        "These tutorials were recorded on a Mac computer using Python 3.5 and Xcode 8."
      ],
      "description": "\"Clear as crystal\" ⭐⭐⭐⭐⭐\nAre you ready to learn to code and manipulate images in an engaging and practical course? Sign up now to meet us!\nIn Part 1, you learn how to code in the Python 3.5 programming language. Whether you have or have not coded before, you can learn how to use Python. Python is a popular programming language that is useful to know because of its versatility.\nPython is easy to understand and can be used for many different environments. Cross-platform apps and 3D environments are often made in Python.\nWe cover basic programming concepts for people who have never programmed before. This course covers key topics in Python and coding in general, including variables, loops, and classes. Moreover, you learn how to handle input, output, and errors.\nTo learn how to use Python, we create our own functioning Blackjack game! In this game, you receive cards, submit bets, and keep track of your score.\nBy the end of this course you'll be able to use the coding knowledge you gained to make your own apps and environments in Python.\nIn Part 2, you learn how to add unique features to the images in your apps. A CIImage is a representation of an image that can be altered with Core Image filters. These filters allow users to change and interact with images in cool and useful ways. CIImages provide a lot of power that other image types do not.\n\nWhy Xcode?\nXcode is Apple's FREE software for app development. Xcode is user-friendly and has the tools you need to make apps for the iPhone, iPad, Mac, Apple Watch, and Apple TV.\nLearn with us how to add User Interface (UI) elements, including text fields, sliders, and buttons, to make an app. You learn to code in Swift 3.0, Apple's programming language, to make the app function.\nIncluded in this course is material for beginners to get comfortable with the interfaces. Please note that we reuse this material in similar courses because it is introductory material. You can find some material in this course in the following related courses:\nMastering Core Image: XCode's Image Framework\nAlter images in Xcode and create 3D characters for games\nMake 22 GameMaker: Studio Games & 5 Image Data UI Projects\nCore Image Filters and SVG with HTML, CSS and Javascript\nEverything You Need to Know About Angular & Image Processing\nC# & Image Processing Masterclass: Make Mobile Games & Apps\nUltimate Python Beginner Course. Learn to code today!\nStart to Finish Unity Games and Python Coding\nHands-On Python & Xcode Image Processing: Build Games & Apps\nBuild 25 Games in Python and GameMaker (and Learn to Code)\nBuild 23 Games in Python and Construct 2 (and Learn to Code)\n\"Is this course for me?\" Yes!\nBy taking this course, you will gain the tools you need continue improving yourself in the field of app development. You will be able to apply what you learned to further experiment in Xcode and make your own apps able to perform more.\nLet's get started!",
      "target_audience": [
        "Complete beginners who want to learn to code in Python.",
        "App developers who want to learn how to add image manipulation, recognition, and processing to their iOS apps."
      ]
    },
    {
      "title": "Get 10x Returns: Make a Photo App With a Top-Performing Code",
      "url": "https://www.udemy.com/course/get-10x-returns-make-a-photo-app-from-a-top-performing-code/",
      "bio": "In the last 9 months I made $34,000 off apps while still a full-time college student. I’m excited to teach you how.",
      "objectives": [],
      "course_content": {
        "Make $100 / Day with Apps": [
          "Make $100 / Day with Apps"
        ],
        "Make an App": [
          "Save $1,000 Reskinning an App",
          "Get Viral Artwork for Free",
          "Make an Icon to Drive Downloads",
          "Make an Attractive Launch Image",
          "Generate 30 Custom Files in 3 Minutes",
          "Create Your App in iTunes Connect",
          "Add Stickers Into Your App",
          "Set the App’s Display Name",
          "Change a Couple Quick Attributes",
          "Start Making Money",
          "Archive and Submit Your App, Learn How to Get 1,000+ Free Images",
          "Test Your New App"
        ],
        "Create Screenshots and Submit to Apple": [
          "Make Sure Apple Approves Your App",
          "Choose Keywords to Help Users Find Your App",
          "Write a Great App Description",
          "Find Free Photos to Use for Screenshots",
          "Make 5 Beautiful and Fun iPhone Screenshots",
          "Resize Screenshots for other Devices",
          "Upload Screenshots",
          "Increase Downloads 40% with iPad and Submit Your App"
        ],
        "Produce an App Preview Video": [
          "Stand Out On the App Store",
          "Record a Preview Video",
          "Edit Your Video",
          "Add Free High Quality Music",
          "Save Your Video for Other Devices",
          "Render and Upload Your Videos",
          "Conclusion",
          "Course Update: Adding Chartboost and AdMob Ads + Making a Paid App"
        ]
      },
      "requirements": [
        "Make sure you have a Mac and iOS Developer account. You can enroll in the Apple Developer Program here: https://developer.apple.com/programs/",
        "Install Xcode and set up your Developer account. You can install Xcode for free from the Mac App Store.",
        "To get the most out of the course, I recommend downloading the source code \"Angry Eyes\" and following along with the tutorial as you make your own photo stickers app. You can get the code here: http://www.whartonanimation.com/angry-eyes/"
      ],
      "description": "**Promo codes are no longer available for this app. I made promo codes a year ago to allow the first reskinners a chance to try out the source code. At this point, I have no intention of changing the price in the foreseeable future. The Udemy course is free. The source code is $39. This is the best value you will get if you want to make a photo app with my source code.**\nStarting with this code, I made a business earning $100/day with apps. With this code, you can launch your own successful photo/video app this week on the App Store.\n\n“Hipstacam\", originally made with this code, was featured in the Yahoo News article “8 Awesome Paid iPhone Apps You Can Get Free Right Now\".\n“StupidFox\", originally made with this code, received 2,000+ likes and 100+ shares on it's first day on the App Store.\nAfter over 100 transactions, I have received 100% positive customer feedback from anyone who has ever bought a code from me. Search Flippa for \"WhartonApps\".\nYou can test the source code we'll be working from on the App Store. It's iOS 8 and 64-bit compatible, and optimized for iPad, iPhone 6 and 6 Plus. Search the App Store for \"Angry Eyes Photo Editor\".\nBoth the Udemy video and the source code come with a full-refund, 30-day money-back guarantee.\nThis course will provide concepts, skills, and practical knowledge to produce your own stickers apps at $0 variable cost per app. I demonstrate everything in front of you on the computer.\nYou will also learn rarely-discussed ways to market your apps and monetize them.\nIn 3 hours from now, you can transform your app business, or get one started. There is still time to get in on the $25 billion app marketplace. With the 30-day money-back guarantee, you have nothing to lose, and everything to gain.\nWhile you can learn about app reskinning by just watching the course, to get the most out of the course, I recommend getting the source code \"Angry Eyes\" and following along with the tutorial as you make your own photo stickers app.\nGoogle \"Wharton Animation Angry Eyes\" to get the source code that accompanies this tutorial.",
      "target_audience": [
        "People interested in a fast way to launch 10+ iPhone / iPad apps in the photo/video category.",
        "People who want to earn passive income on mobile apps, or earn $1,000’s by selling their apps on Flippa.com.",
        "People who want to learn the app development process, not pay others $1,000’s for a few hours of work."
      ]
    },
    {
      "title": "Mastering the IOS Interview with 400+ Most Asked Questions",
      "url": "https://www.udemy.com/course/mastering-the-ios-interview-with-400-most-asked-questions/",
      "bio": "Crack the IOS Interview with Confidence: 400+ Most Asked Unique Interview Questions with Answers",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you gearing up for an iOS interview and feeling the pressure of mastering a wide array of topics? Look no further! Welcome to \"Mastering the IOS Interview with 400+ Most Asked Questions,\" the comprehensive course designed to prepare you thoroughly for your iOS job interviews.\nIn this course, we dive deep into the intricacies of iOS development, covering a vast range of topics to ensure you are well-equipped to tackle any interview challenge. With a focus on both conceptual understanding and practical application, this course is meticulously crafted to boost your confidence and knowledge.\nCourse Highlights:\niOS Architecture: Understand the foundational layers of iOS development, including the crucial role of the App Delegate, view controllers, and the iOS stack, setting a strong groundwork for your understanding.\nUser Interface (UIKit): Explore the essentials of creating engaging user interfaces, covering view controllers, UI elements, table views, collection views, auto layout, and animations, providing you with the skills to design seamless and intuitive user experiences.\nProgramming Languages (Obj-C and Swift): Master the syntax and principles of both Objective-C and Swift, including objects, classes, methods, data types, control flow, functions, closures, and generics, enabling you to write efficient and robust iOS code.\nFoundation Framework: Dive into the foundational components of iOS development, including strings, arrays, dictionaries, dates and times, regular expressions, and file handling, equipping you with the tools to manipulate data effectively.\nData Management: Explore advanced topics such as Core Data, memory management, and data persistence, ensuring you can efficiently manage and store data in your iOS applications.\nAdvanced Topics: Delve into networking, security, Grand Central Dispatch, and testing methodologies, providing you with a comprehensive understanding of handling network requests, ensuring data security, managing concurrent tasks, and validating your code through robust testing practices.\nPrepare to tackle your iOS interviews with confidence, armed with in-depth knowledge, practical skills, and the ability to answer over 400 of the most asked iOS interview questions. Enroll now and let's journey together toward your iOS career success!",
      "target_audience": [
        "Aspiring iOS Developers: Individuals keen on mastering iOS development and securing job opportunities in the field.",
        "Programming Enthusiasts: Anyone passionate about programming and eager to specialize in iOS app development.",
        "Job Seekers: Individuals preparing for iOS-related job interviews, aiming to sharpen their skills and boost their employment prospects."
      ]
    },
    {
      "title": "Build a Google Drive Clone with Flutter, Firebase and Getx",
      "url": "https://www.udemy.com/course/build-a-google-drive-clone-with-flutter-firebase-and-getx/",
      "bio": "Complete masterclass on building a real world google drive clone with flutter , firebase and getx",
      "objectives": [
        "Full Stack mobile Application",
        "User authentication with Firebase",
        "Google sign in authentication",
        "Uploading images, videos , files to firebase",
        "Showing the files back in UI",
        "Storing data in firebase",
        "Getx statemanagement",
        "Playing video and audio files",
        "Working with images , videos and audios",
        "Good file structure",
        "Efficient and neat programming",
        "Calculating file size",
        "Showing recently uploaded files",
        "Showing files in folders",
        "Deleting files",
        "Downloading files to device"
      ],
      "course_content": {
        "Getx crashcourse": [
          "Getx state management overview",
          "Getbuilder",
          "Getx and Obx",
          "Getx navigation"
        ],
        "Project setup": [
          "Getting packages",
          "Firebase setup",
          "Files configuration"
        ],
        "Google Sign-In Authentication": [
          "Login screen UI",
          "Finishing up UI",
          "Google sign-in configuration",
          "Auth controller with getx",
          "Authenticating with google sign-in",
          "Saving user data in firestore",
          "Navigating depending on auth state"
        ],
        "Storage screen UI": [
          "Customized tab bar",
          "Widgets for storage screen",
          "Storage container UI",
          "Bottom storage options",
          "Getx state for tab bar"
        ],
        "Files screen UI": [
          "Widgets for files screen",
          "Recent files widget",
          "Folders section widget",
          "Add folder or files button",
          "Add folder dialog"
        ],
        "Creating and showing folders": [
          "Add folder to firebase",
          "Creating folder model",
          "Get folders from firebase",
          "Show item count of folders"
        ],
        "Uploading files to database": [
          "Pick files with file picker",
          "Filter file type and name",
          "Compressing the file",
          "Uploading files to firebase"
        ],
        "Displaying files in recent files section": [
          "Creating file model",
          "Query recent files from firebase",
          "Show files from database in recent files",
          "Show icon depending on file type"
        ],
        "Adding and displaying files in folders": [
          "Creating display files screen",
          "Adding option to add file in folders",
          "Files widget UI in folders screen",
          "Bottom sheet for download or remove options",
          "Getx controller for files screen",
          "Displaying files in folders",
          "Icon depending on file type"
        ],
        "Files in options section": [
          "Showing files in file options screens"
        ]
      },
      "requirements": [
        "Basic knowledge about Flutter and Dart",
        "Flutter , Dart and IDE installed",
        "Good Internet Connection and a Laptop"
      ],
      "description": "You have learned flutter and want to gain practical experience ? You wanna add an awesome real world app to your resume ? Then this is the perfect course for you .\nThis is a complete masterclass on building a google drive clone with flutter , cloud firestore and getx. We will start from authenticating users with google sign-in to then the add the ability for adding files , images , videos, audios excel files , word files and all files. Users can also add folders , and in those folders add particular files. We will also add the ability for viewing all files , deleting them and downloading them. Furthermore users can see recent files and also click on particular categories for viewing only particular files. We will also compress the files , so that we dont have to upload large amount of file size to firebase. And also users can see how much space they used and how much more space is left for use. Mostly all the feautures from google drive are implemented. There are many more features which are explained in detail in the intro video. For state management we are gonna use the getx package. It offers us navigation, dialogues and reactive state. Getx is really trendy now and for people who dont have any experience in getx, there is also a optional getx crash course at the beginning of the course\nSo as you can see, this course is a complete masterclass on building a real world app. One can learn any technology by only building practical projects. And I am sure this course will help you get much better in flutter. Beginner learners, intermediate and advanced coders, all are welcome. Because this is a step by step course. So what are you waiting for, just step in to the course",
      "target_audience": [
        "Flutter devs who want to gain practical knowledge in flutter",
        "Developers who want to build real world apps",
        "Beginner Flutter developers looking to build bigger applications",
        "Flutter devs who want to learn getx by building apps"
      ]
    },
    {
      "title": "Java & Kotlin Android App Development with 10 Practical Apps",
      "url": "https://www.udemy.com/course/java-kotlin-android-app-development-with-10-practical-apps/",
      "bio": "Master Android App Development with 10 projects in Java and Kotlin. Build real java and kotlin android apps step by step",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "In this course, we will building 5 different Android Apps from scratch together.",
        "Android applications' levels in this course are from easy to difficult",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "You will reinforce your existing Android information by applying.",
        "Using SQLite database, you will understand how to work with external databases.",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase.",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "android",
        "android app development",
        "android development",
        "android studio",
        "mobile app development",
        "mobile development",
        "Android app",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "You will learn to develop applications by getting real-time data from the Internet.",
        "You will have 5 different applications that you will publish on Google Play.",
        "CRUD operations with Room Persistence Library",
        "Saving Data using Shared Preferences",
        "Applying Dark theme to the App",
        "Creating and Using a timer",
        "Creating Android Game",
        "Understanding the MVVM (Model-View-ViewModel) architecture",
        "Animations in Android",
        "Navigation",
        "Creating Splash Scrren with Animations and new Splash Screen API",
        "Fragments",
        "Data Transfer Between Screens",
        "And much more about Android"
      ],
      "course_content": {
        "Project 1 : Calculator Application for Android (Java)": [
          "Introduction to Android App",
          "Project Files",
          "The Android Application Design-1",
          "The android application Design-2",
          "The android application Design-3",
          "Printing Numbers to the Screen in android",
          "Printing Parentheses to the Screen in android",
          "Writing the Necessary Codes for Operators",
          "Writing the Necessary Codes for Button Dot",
          "Writing the Necessary Codes for Button AC and Delete",
          "Making Calculation - Part 1",
          "Making Calculation - Part 2",
          "Making Calculation - Part 3",
          "Making Calculation - Part 4",
          "Applying Dark Theme",
          "Saving Data",
          "Quiz"
        ],
        "Project 2 : Flag Quiz to Android 11": [
          "Introduction to Flag Quiz App",
          "Project Files",
          "Splash Screen",
          "Home page Design",
          "Quiz Page Design",
          "Result Page Design",
          "Navigation",
          "Database Operations - Creating Database",
          "Database Operations - Adding Database to App",
          "Database Operations – Creating DAO – Part 1",
          "Database Operations – Creating DAO – Part 2",
          "Database Operations – Retrieving Data",
          "Showing Data – Part 1",
          "Showing Data – Part 2",
          "Controlling the Correct and Wrong Answers",
          "Controlling the Empty Answers",
          "Showing Results on Bar Chart",
          "Quiz"
        ],
        "Project 3 : Weather App": [
          "Introduction to Weather App",
          "Project Fİles",
          "Reviewing the Website",
          "The Application Design-1",
          "The Application Design-2",
          "Request Permission - Part 1",
          "Request Permission - Part 2 - Creating Bottom Sheet Dialog",
          "Request Permission - Part 3 - Checking Location Settings",
          "Request Permission - Part 4 - Permission Control Mechanism",
          "Changing the UI of Weather Activity",
          "Creating Model Class",
          "Creating Retrofit Service",
          "Creating View Model",
          "Finding User's Location",
          "Getting Current Weather Data by Location",
          "Getting Current Weather Data by City Name",
          "Checking Network Connection - Part 1",
          "Checking Network Connection - Part 2",
          "Quiz"
        ],
        "Project 4 : Photo Album App": [
          "Introduction to Android Application",
          "Project Files",
          "Adding the Necessary Libraries in android app",
          "Creating the Entity Component in android",
          "Creating the DAO Interface in android app",
          "Creating the Database Class in android development",
          "Creating the Repository Class",
          "Creating the View Model Class",
          "The Application Design-1",
          "The Application Design-2",
          "The Application Design-3",
          "Creating The Adapter Class in android",
          "Request Permission in android app",
          "Selecting Image",
          "Reducing the Size of the Selected Image",
          "Saving the Data in app development",
          "Deleting The Data in android app development",
          "Updating The Data-1",
          "Udating The Data-2 in android",
          "Open the Database Using the Database Browser for SQLite",
          "Quiz"
        ],
        "Project 5 : Chat Application to Android": [
          "Introduction to Android App 5",
          "Project Fİles",
          "Integration with Firebase",
          "The Login Page Design",
          "Authenticaiton With Email and Password",
          "Signup Page",
          "Picking a Profile Photo - Part 1",
          "Picking a Profile Photo - Part 2",
          "Creating User Account",
          "Uploading Profile Photo to Cloud Storage",
          "Saving User Data to Realtime Database",
          "Enabling Sign Out Functionality",
          "Update User Profile - Part 1",
          "Update User Profile - Part 2",
          "Listing the Users - Part 1",
          "Listing the Users - Part 2",
          "Messaging Screen - Part 1",
          "Messaging Screen - Part 2",
          "The Messaging Process",
          "Displaying the Sent Message-1",
          "Displaying the Sent Message-2",
          "Deleting Messages",
          "Quiz"
        ],
        "Section 6: Calculator Application (Kotlin)": [
          "Introduction to Calculator App",
          "Calculator Application - Project Files",
          "Application Design – Part 1",
          "Application Design – Part 2",
          "Application Design – Part 3",
          "Printing Numbers to the Screen",
          "Creating Calculation Functions",
          "Performing Calculation",
          "Deleting Data on the Screen",
          "Showing Calculation Steps",
          "Fixing Errors – Part 1",
          "Fixing Errors – Part 2",
          "Applying Dark Theme",
          "Saving All Data",
          "Quiz"
        ],
        "Section 7: Number Guessing Game": [
          "Introduction to Number Guessing Game",
          "Number Guessing Game - Project Files",
          "Splash Screen with Animation – Part 1",
          "Splash Screen with Animation – Part 2",
          "Home Page – Part 1",
          "Home Page – Part 2",
          "The Game Page Design",
          "Creating Game Logic",
          "Showing Results with Dialog Message",
          "Quiz"
        ],
        "Section 8: Flag Quiz App": [
          "Introduction to Flag Quiz App",
          "Flag Quiz App - Project Files",
          "Splash Screen",
          "Home page Design",
          "Quiz Page Design",
          "Result Page Design",
          "Navigation",
          "Database Operations - Creating Database",
          "Database Operations - Adding Database to App",
          "Database Operations – Creating DAO – Part 1",
          "Database Operations – Creating DAO – Part 2",
          "Database Operations – Retrieving Data",
          "Showing Data – Part 1",
          "Showing Data – Part 2",
          "Controlling the Correct and Wrong Answers",
          "Controlling the Empty Answers",
          "Showing Results on Bar Chart"
        ],
        "Section 9: Balloon Popping Game": [
          "Introduction to Balloon Popping Game",
          "Balloon Popping Game - Project Files",
          "Game Page Design",
          "Result Page Design",
          "Creating Countdown Timer",
          "Increasing the Score",
          "Moving the Balloon",
          "Adding Popping Sound",
          "Mute and Unmute the Popping Sound",
          "Saving the Highest Score",
          "Speeding Up the Game",
          "Playing Again and Quitting the Game",
          "Quiz"
        ],
        "Section 10: Photo Album Application": [
          "Introduction to Photo Album App",
          "Photo Album App - Project Files",
          "Adding Necessary Libraries",
          "Creating Entity",
          "Creating DAO",
          "Creating Database",
          "Creating Repository",
          "Creating ViewModel",
          "Application Design – Part 1",
          "Application Design – Part 2",
          "Application Design – Part 3",
          "Creating Recycler Adapter",
          "Request Permission",
          "Selecting Image",
          "Converting Image to String",
          "Saving Data",
          "Deleting Data",
          "Updating Data – Part 1",
          "Updating Data – Part 2",
          "Quiz"
        ]
      },
      "requirements": [
        "To have basic android and java programming knowledge",
        "Determination to learn and patience",
        "Having a working computer and internet.",
        "Watching the course videos completely, to the end and in order.",
        "No prior Android knowledge is required!",
        "Desire to learn Android Application Development",
        "No programming Android App Development knowledge required!",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today for build android app"
      ],
      "description": "Hello there,\nWelcome to \"Java & Kotlin Android App Development with 10 Practical Apps\" course.\nMaster Android App Development with 10 projects in Java and Kotlin. Build real java and kotlin android apps step by step\n\n\nKotlin is popular for both Android developers and Java developers. Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language, OAK Academy has a top-rated course to help you achieve your goals.\nKotlin is a very new and up-to-date programming language. Kotlin android is accepted by Google as the official language for Android development. Therefore, it is a language that everyone who wants to be an android developer should know. In this course, we teach Kotlin programming language from beginner to advanced level, considering the importance of Kotlin.\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.\n\n\nIn this course, you will learn to build 10 different Android Applications from scratch with hands-on examples wtih java and kotlin\n\nOnline course platforms have Android Application Development courses, but we still think that most of them are missing the hands-on application part This course is designed to fill this gap\n\n\nThis course is one of the most awesome OAK Academy courses which teach step by step and follow the methodology in introducing concepts and demos ( learn by doing ) to the students so that they can learn with ease Java and learn the core Java skills needed to apply for Java developer positions.\n\n\nLearn android, android app development, android development, android studio from scratch and become an android developer\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course on  OAK Academy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more.\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nDo you want to improve your career options by learning android?\nDo you want to develop real android apps from Scratch with Java and Kotlin?\nDo you want to strengthen your CV by making Android applications?\nDo you want to be an android studio master?\nDo you want to learn Android by developing applications?\nDo you want to build your first android app with Java and Kotlin?\nIf your answer is “yes”, you are at the right place!\n\n\nThanks to this course, you will reinforce your android knowledge by applying and you will take your place in the android world There are ten Android applications in our course, and the difficulty level is from easy to difficult Also, since the applications are prepared in a certain index, you will not experience any disconnection between the videos Thanks to this training, you will learn how to develop modern Android applications in the simplest way and improve your self-confidence\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\n\nIs Android Development a good career?\nWith over 25 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\n\n\nIn this course;\nYou will reinforce your existing android information by applying\nYou will learn to develop applications by getting real-time data from the Internet\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Room Persistence Library and Architecture Components (ViewModel, LiveData)\nYou will learn how to make a messaging app using Firebase\nWith Firebase, you will be able to develop real-time applications\nYou will be able to develop user-friendly interfaces using Material Design principles and components\nYou will be able to develop modern Android apps\nApplying Dark theme to the App\nCRUD operations with Room Persistence Library\nCRUD operations with Firebase Realtime Database\nSaving Data using Shared Preferences\nGetting Data from internet\nChecking Network Connection\nPermission Control Mechanism\nBottom Sheet Dialog\nUnderstanding the MVVM (Model-View-ViewModel) architecture\nCreating Splash Screen with Animations and new Splash Screen API\nNavigation\nFragments\nData Transfer Between Screens\nAnd much more about Android\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\n\n\nIn this course, you need basic android and java programming knowledge\nThis course will take you from a beginner to a more experienced level\nWe will take you from beginner to advance level You will learn step-by-step with hands-on demonstrations\n\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow latest trends\n\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nWe offer full support, answering any questions\n\n\nDive in now \"Java & Kotlin Android App Development with 10 Practical Apps\" course.\nMaster Android App Development with 10 projects in Java and Kotlin. Build real java and kotlin android apps step by step",
      "target_audience": [
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing android knowledge.",
        "Those who want to develop applications using the Java programming language.",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite.",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications",
        "Anyone who wants to learn Android",
        "Those who want to develop an Android mobile application.",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Anyone who become an android developer from scratch"
      ]
    },
    {
      "title": "Ultimate Flutter and Dart Course of 2024",
      "url": "https://www.udemy.com/course/ultimate-flutter-and-dart-course-of-all-time/",
      "bio": "Unlock the Power of Mobile App Development with Comprehensive Flutter and Dart Training",
      "objectives": [
        "Students will acquire a solid understanding of Dart programming language basics, including variables, data types, control flow structures, functions, and OOPS",
        "Participants will learn how to design and create user interfaces using Flutter's rich set of widgets and layouts, along with styling techniques",
        "Students will explore various state management approaches in Flutter, including setState, Inherited Widget and Provider.",
        "Students will delve into advanced Flutter concepts such as animations, custom painting, responsive design, and accessibility features.",
        "Participants will gain proficiency in creating custom Flutter widgets for reusability, enabling them to design modular and maintainable user interface component",
        "Students will learn how to build, test, and deploy Flutter apps",
        "Students can able to make apps like Chat Application, Currency Converter, Weather Application, Notes App, etc."
      ],
      "course_content": {
        "Introduction to Dart": [
          "Welcome to This Course!",
          "Overview of Dart programming language and its features",
          "Setting up Dart development environment",
          "Writing your first Dart program: Hello World",
          "Understanding variables, data types, and basic syntax in Dart"
        ],
        "Dart Fundamentals": [
          "Control flow structures: if-else, switch-case, loops",
          "Functions in Dart: defining functions, parameters, return types",
          "Object-oriented programming (OOP) concepts: classes, objects, inheritance, etc",
          "Error handling and exception handling in Dart"
        ],
        "Introduction to Flutter": [
          "Overview of Flutter and its ecosystem",
          "Setting up Flutter development environment",
          "Dart programming basics for Flutter",
          "Writing your first Flutter app: Hello World"
        ],
        "Flutter UI Development": [
          "Understanding Flutter widgets and layouts",
          "Styling Flutter apps with themes and customizations",
          "Handling user input and gestures",
          "Navigation and routing in Flutter apps"
        ],
        "State Management in Flutter": [
          "Exploring different state management approaches in Flutter",
          "Managing state using set State, Inherited Widget, Provider"
        ],
        "Responsive Design": [
          "Responsive design techniques for various screen sizes"
        ],
        "Building Custom Flutter Widgets": [
          "Creating custom Flutter widgets for reusability",
          "Best practices for designing and organizing custom widgets"
        ],
        "Flutter Packages and Plugins": [
          "Exploring the Flutter package ecosystem",
          "Adding third-party packages and plugins to Flutter projects"
        ],
        "Flutter Testing and Debugging": [
          "Debugging and testing Flutter apps",
          "Performance profiling and optimization techniques"
        ],
        "Deployment and App Distribution": [
          "Building and testing Flutter apps for release"
        ]
      },
      "requirements": [
        "No prior programming experience required, but basic understanding of programming concepts is beneficial.",
        "No Development Knowledge is Required",
        "At least 10Gb of free space required in Hard Disk"
      ],
      "description": "Dive into the exciting world of mobile app development with our comprehensive course on Flutter and Dart. Whether you're a complete beginner or have some experience with app development, this course will guide you through everything you need to know to become a proficient Flutter developer.\nStarting from the basics, we'll walk you through setting up your development environment and understanding the fundamentals of Dart programming language, the backbone of Flutter. As you progress, you'll delve deeper into Flutter, learning how to design beautiful user interfaces using Flutter's rich set of widgets, manage app state efficiently, and implement navigation and routing to create seamless user experiences.\nBut we won't stop there. Our course goes beyond the basics to cover advanced topics such as handling network requests, integrating with APIs, implementing animations, and optimizing performance for both iOS and Android platforms.\nWith hands-on projects, real-world examples, and expert guidance, you'll gain practical experience and develop the skills needed to build high-quality, cross-platform mobile apps that meet modern industry standards.\nWhether you're looking to start a career in mobile app development, enhance your existing skills, or bring your app ideas to life, this course is your ultimate guide to mastering Flutter and Dart.\nEnroll now and unlock the full potential of mobile app development with Flutter and Dart",
      "target_audience": [
        "This course is ideal for individuals with little to no programming experience who want to kickstart their journey into mobile app development. By starting with Dart basics and gradually progressing to Flutter, beginners will gain the necessary skills to build their first mobile applications.",
        "If you're already familiar with other programming languages and frameworks but new to Flutter and Dart, this course provides a comprehensive overview tailored to your needs. You'll quickly grasp the unique features of Flutter and Dart, enabling you to leverage your existing skills in a new and exciting domain.",
        "Whether you're a student, a working professional, or a hobbyist, if you're intrigued by the prospect of building high-quality mobile applications that run on both Android and iOS platforms, this course offers a practical and accessible entry point into cross-platform development with Flutter and Dart."
      ]
    },
    {
      "title": "Apple Swift step by step: create apps for iOS, watchOS, MacOS",
      "url": "https://www.udemy.com/course/swiftdeveloper/",
      "bio": "Learn how to develop apps for iOS8 using Swift, the new programming language from Apple, including a Flappy Bird clone",
      "objectives": [
        "Learn how to download and use the tools for Swift programming",
        "Learn the basics of Swift language",
        "After mastering the basics you will learn about more exotic topics like protocols or extensions",
        "Learn how to access Cocoa and Cocoa Touch APIs from Swift",
        "Once you have mastered the programming language, you'll put what you have learned into practice by actually developing apps for iOS using Xcode and Swift",
        "Develop a Flappy Bird sibling using Sprite Kit"
      ],
      "course_content": {
        "Getting started": [
          "Welcome to Swift",
          "Extending the curriculum",
          "Why should I use Swift ?",
          "Get the tools to play",
          "Current state of Xcode 6",
          "The first playground",
          "More about playgrounds"
        ],
        "Some fundamentals": [
          "Notes about the syntax",
          "Constants and variables",
          "Arrays",
          "Dictionaries",
          "Operators",
          "Working with strings",
          "Optional values and nil",
          "Tuples"
        ],
        "Loops and control structures": [
          "Loops",
          "Iterations in arrays and collections",
          "If statements",
          "Switch",
          "While loops"
        ],
        "Functions": [
          "Functions and Swift",
          "Functions with input parameters",
          "Functions with return values",
          "Variadic parameters",
          "More about function parameters"
        ],
        "Classes and structures": [
          "Introduction",
          "Structures",
          "Classes",
          "Enumerations"
        ],
        "Bridging to Cocoa": [
          "What is Cocoa ?",
          "First contact with Cocoa",
          "Cocoa and Swift Playgrounds"
        ],
        "Building your first app": [
          "Leaving playgrounds",
          "The Xcode workspace",
          "Hello World : the first app"
        ],
        "App delegates": [
          "Understanding delegates",
          "Do I need to worry about them ?"
        ],
        "Flappy Bird's Swift twin": [
          "Preparing your project",
          "It's a small world: SpriteKit scenes",
          "Create the bird",
          "Setting and animating the environment",
          "Creating the columns",
          "Rise and fall of the bird",
          "Detecting collisions",
          "Resetting the game"
        ]
      },
      "requirements": [
        "A Mac with mac OS X 10.9.3 or better is recommended to test the code and the examples",
        "An Apple Developer account is needed in case you want to test your apps on a physical device or publish you apps on the app store"
      ],
      "description": "# last update oct 5th 2014\nWelcome to Swift, the brand new programming language from Apple. If you approached iOS development and always felt that Objective-C was a bit too complicated, then Swift will make your life a lot easier.\nAccording to Wired \"it will instantly remake computer programming\" and it will be the core of iOS8 programming and further.\nEven if you already know Objectve-C you will find great productivity advantages in starting to use Swift.\nThe only pre-requisite is to have familiarity with basic programming concepts (i.e. what is a variable, what is a control structure, etc.); we'll take care of the rest along the course.\nMore sophisticated concepts related to object-oriented programming will be dealt with in the curriculum.\nThe course will keep growing along time with new topics added. As new more advanced topics are added, the price will increase; so the sooner you enroll, the less you pay ! You will get all future updates at no extra cost.\nThe plan is to keep adding two new topics per month; these could be real app examples or explanations of Cocoa frameworks.\nAfter a few months of beta testing Swift has finally reached version 1.0: this means you can develop and submit real apps to the App Store. After studying the language basics, it will be time to learn dealing with the Cocoa and Cocoa Touch APIs; finally you will be introduced to building real apps using Xcode. For a Flappy Bird alike game is used to get into the inner workings of Sprite Kit.\nAlmost every language module is conceived as two parts: an introductory and theoretical session with slides, followed by practical programming examples.\nOf course we need and we appreciate your feedback to improve the course. And if you feel like we missed some topics or you'd like some explained, just let us know !",
      "target_audience": [
        "Anyone who wants to learn Swift",
        "Very basic-level programmers that would like to learn how to develop Apps for iOS or Mac OS without having to deal with the intricacies of Objective-C",
        "Developers who already used Xcode and Objective-C but want to learn this new programming language"
      ]
    },
    {
      "title": "FFMPEG in React Native | Video to Audio Trimmer App",
      "url": "https://www.udemy.com/course/ffmpeg-in-react-native-video-to-audio-trimmer-app/",
      "bio": "Elevate Your React Native Projects with FFMPEG Video Manipulation.",
      "objectives": [
        "Understand how to seamlessly integrate FFMPEG, a powerful multimedia processing tool, into React Native projects.",
        "Dive into the process of extracting audio from videos, opening up a world of possibilities for audio-centric applications.",
        "Leverage the power of Typescript to enhance the development process, ensuring robust and type-safe code.",
        "Apply your knowledge by building a complete Video to Audio Trimmer App, showcasing your proficiency in FFMPEG integration."
      ],
      "course_content": {
        "Environment Setup": [
          "Windows (Only Android)",
          "Running App (Windows)",
          "Important Note",
          "Homebrew (Mac)",
          "How to Access Terminal?",
          "Mac (Android)",
          "Ruby",
          "xCode",
          "New Project Update",
          "New Project (Mac)"
        ],
        "Project Setup": [
          "App Init",
          "02 Navigation.mp4",
          "Stack Navigator",
          "Custom Button",
          "Using Vector Icons"
        ],
        "Video Convert": [
          "Image Picker",
          "Android Permissions",
          "Selecting Video File",
          "Fixing Type Problem",
          "Video Convert UI",
          "Setting FFMPEG",
          "Extracting File Name From URI",
          "Unique File Name",
          "React Native FS",
          "Copying File To Cache",
          "Video to Audio Convert",
          "Getting Stats",
          "Calculating Progress",
          "Progress Bar",
          "React Native Re Animated",
          "Animating Progress",
          "Few More Options",
          "Saving as Audio",
          "Convert Another Option"
        ],
        "Trimming Audio": [
          "Digital Audio",
          "Reading Audio Samples",
          "Extracting RMS Level",
          "Mapping RMS Levels to Height",
          "Preventing From NaN",
          "Navigating to Audio Trim",
          "Audio Trim Timeline",
          "Audio Trim Timeline UI",
          "Audio Picks Refactor",
          "Audio Trimming Thumbs",
          "Audio Trim IN-OUT Icons",
          "Gesture Events",
          "Max Thumb Gesture",
          "Clamping Thumb Values",
          "Updating Trimmer Width",
          "Calculating Value With Min Slider",
          "Min Max Change Handler",
          "Timestamp Start End UI",
          "Calculating Timestamps",
          "Final UI",
          "Exporting Trimmed Audio"
        ],
        "The Final Project": [
          "Source Code",
          "Bonus"
        ]
      },
      "requirements": [
        "Typescript (Basic)",
        "React Native (Basic)"
      ],
      "description": "Are you a React Native developer looking to add powerful video processing capabilities to your projects? Look no further! Welcome to \"FFMPEG in React Native | Video to Audio Trimmer App,\" a comprehensive course designed to empower you with the skills and knowledge needed to integrate FFMPEG seamlessly into your React Native applications.\n\n\nUnleash the Power of FFMPEG in React Native:\n\n\nFFMPEG, a versatile multimedia processing tool, is now at your fingertips for React Native development. In this course, I'll guide you through harnessing the full potential of FFMPEG to manipulate video content right within your mobile applications. From extracting audio from a video to trimming audio file, the possibilities are boundless.\n\n\nWhat You'll Learn:\n\n\nIn-Depth FFMPEG Integration: Gain a solid understanding of integrating FFMPEG into your React Native projects.\n\n\nAudio Trimming and Saving: We will not just extract audio from video, we will also learn how to use file system to save final export.\n\n\nThis course is not just theory. You'll embark on a hands-on journey to build a Video to Audio Trimmer App, where you'll put your newfound skills to work. By the end of this course, you'll have a fully functional application that showcases your proficiency in FFMPEG integration.\n\n\nElevate your React Native projects to a whole new level with the power of FFMPEG. Enroll now and start building impressive video processing applications that stand out in the world of mobile development.\n\n\nThis course is not for complete beginners; you should have basic knowledge of React Native with Typescript.",
      "target_audience": [
        "This course is not for complete beginners; you should have basic knowledge of React Native with Typescript."
      ]
    },
    {
      "title": "Mobile Application Development using Android",
      "url": "https://www.udemy.com/course/mobile-application-development-using-android/",
      "bio": "Mobile Application Development using Android",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction - My First Hello World Program using Android"
        ],
        "Develop an application that uses GUI components, Font and Colours": [
          "GUI Components"
        ],
        "Develop an application that uses Layout Managers and event listeners": [
          "Develop the app using the following codes"
        ],
        "Write an application that draws basic graphical primitives on the screen": [
          "How to create Mobile app that draws basic graphics primitives"
        ],
        "Develop a mobile app for simple calculator implementation": [
          "Develop mobile app for simple calculator implementation"
        ],
        "Develop a mobile app for working with database": [
          "Mobile App for Database connectivity"
        ],
        "Multithreading in Android": [
          "Multithreading"
        ],
        "GPS Location Information": [
          "GPS Location Information"
        ],
        "SD Card": [
          "SD Card"
        ],
        "Alert message creation": [
          "Alert message creation"
        ]
      },
      "requirements": [
        "No"
      ],
      "description": "This course gives a brief overview of how to develop and run mobile apps using Android Studio. This course will helpful for Anna University Chennai and its affiliated college students from India. There are up to 11 programs described. The first program gives a sample execution of hello world program demonstration using Android Studio, and how to make apk file which is android executable file in any devices such as laptops or tablets, etc. The main requirements for running Android Studio is that our system must have a minimum of 8GB RAM support with virtualization enabled as true from the BIOS setup of our system. Due to these requirements, this course gives additional information of how to run apk file online with the help of apk file generated. For every program, apk file is also added in the resources field so that every user without any interruption can run the corresponding apk file by themselves. A guidance video is added in the course of how to write and run android app using android studio and also how to run the given apk file using online emulator. Finally it is also provided teh entire codings for students reference. Good luck to all and thanks for enrolling in this course.",
      "target_audience": [
        "Computer Science and Information Technology Students"
      ]
    },
    {
      "title": "Node.js Backend for Flutter Beginners",
      "url": "https://www.udemy.com/course/nodejs-backend-for-flutter-beginners/",
      "bio": "Building Custom Backend Solutions with MongoDB and Provider",
      "objectives": [
        "Understand the fundamentals of Node js and its role in building backend systems for Flutter applications",
        "Learn how to leverage MongoDB as a powerful NoSQL database for data storage and retrieval",
        "Master the implementation of CRUD (Create, Read, Update, Delete) operations",
        "Develop the ability to write server-side code in Node js for handling API requests and responses",
        "Acquire knowledge of deploying a Node js backend application using platforms like Railway App",
        "Understand the benefits of using a custom backend solution over third-party services like Firebase"
      ],
      "course_content": {
        "Node Server Configuration": [
          "Setup a Node js Project",
          "Creating Routes",
          "Setup MongoDB Atlas",
          "Connect Node app to MongoDB"
        ],
        "Working on Routes": [
          "Creating Note Model",
          "Route for Adding Note",
          "Get Notes by User Id",
          "Route for Update and Delete",
          "Organise our Routes"
        ],
        "Deploy to Railway": [
          "Push Code to GitHub",
          "Deploy your Repository"
        ],
        "Flutter Configuration": [
          "Create a Flutter Project",
          "Create Note Model",
          "Home Page UI",
          "Add a Note UI"
        ],
        "Implement Provider": [
          "Creating Notes Provider",
          "Show Notes in Home page",
          "Work on Edit Note page"
        ],
        "MongoDB API Integration": [
          "Function to Add Note",
          "Functionality to Update and Delete",
          "Function to Fetch Notes"
        ],
        "Install SharedPreferences": [
          "Function to store userid",
          "Test the Complete Application",
          "Download the Complete Code"
        ]
      },
      "requirements": [
        "Basic Understanding of Flutter and Dart",
        "Familiarity with Node js",
        "Understanding of RESTful API",
        "Flutter SDK and VS Code installed"
      ],
      "description": "Node js Backend for Flutter Beginners is an essential course that empowers Flutter developers to create customized backend solutions using Node js and MongoDB freeing themselves from the potential limitations and expenses associated with Firebase. In this comprehensive guide, you'll dive deep into the process of building a robust server codebase and seamlessly deploying it with the help of Railway App. Although authentication is not covered, you'll explore the popular Provider package as your go to state management tool.\n\n\nWith step-by-step instructions and practical examples, you'll learn the ins and outs of CRUD operations, allowing you to develop a solid foundation in backend development. By harnessing the power of Node js and MongoDB, you'll gain full control over your data and enjoy the flexibility to tailor your backend to suit your specific needs.\n\n\nMoreover, this book emphasizes the importance of avoiding vendor lock-in by opting for a custom backend solution. While Firebase offers convenience, it can become costly in the long run, especially as your application scales and the amount of data processed increases. By leveraging Node js and MongoDB, you'll not only reduce your expenses but also gain the freedom to optimize your backend infrastructure according to your unique requirements.",
      "target_audience": [
        "Flutter developers looking to enhance their skills with custom backend development using Node js",
        "Entrepreneurs and startup founders wanting to build cost-effective and customizable backend solutions for their apps",
        "Freelancers and independent app developers aiming to offer comprehensive app development services, including backend development",
        "Students and tech enthusiasts eager to explore backend development using Node js specifically for Flutter applications"
      ]
    },
    {
      "title": "Apache Cordova - Build Mobile App with HTML CSS & JavaScript",
      "url": "https://www.udemy.com/course/apache-cordova-bootcamp/",
      "bio": "Learn how to create Web, Android and iOS Mobile Apps using HTML, CSS, JavaScript and Bootstrap with the Apache Cordova",
      "objectives": [
        "How to create and build (compile and package) a Cordova project using the CLI (Command Line Interface).",
        "How to use several Cordova APIs such as Geolocation, Contacts, and Camera.",
        "How to handle specific mobile challenges such as touch events, scrolling, styling, page transitions, etc.",
        "To publish the app on Google Play Store & App Store",
        "Introduction to Other Mobile App Development Method i.e, React Native, Flutter"
      ],
      "course_content": {
        "Section 1: Building a Calculator Android App with Cordova (Hands-on Project)": [
          "Introduction",
          "Create Calculator App using Cordova, HTML, CSS & JavaScript",
          "Important Commands to create Cordova Application",
          "Run Android App on Android Mobile using Android Studio",
          "Interview Question on HTML, CSS & JavaScript - 1"
        ],
        "Create Cordova Custom plugin": [
          "Introduction",
          "How to create Cordova Custom plugin part 1",
          "How to create Cordova Custom plugin part 2"
        ]
      },
      "requirements": [
        "To complete this workshop, all you need is a code editor, a modern browser, and a connection to the Internet.",
        "A working knowledge of HTML and JavaScript is assumed, but you don't need to be a JavaScript guru."
      ],
      "description": "Learn how to create cross-platform mobile apps using HTML, CSS, JavaScript, and Bootstrap with the powerful Apache Cordova framework. Discover efficient techniques for building native-like experiences for both Android and iOS devices.\n\nApache Cordova is an open-source mobile development framework. It allows you to use standard web technologies such as HTML5, CSS3, and JavaScript for cross-platform development, avoiding each mobile platform's native development language. Applications execute within wrappers targeted to each platform, and rely on standards-compliant API bindings to access each device's sensors, data, and network status.\"\n\nBy Cross-Platform, we mean that the application codebase can be written once using HTML5, CSS3 & JavaScript and it can be run across multiple target mobile platforms such as Android, iOS, Windows, Firefox, Ubuntu mobile.\nThe web development community has been continually innovating and with the recent development of frameworks such as Angular, IONIC, jQuery, and React, the traditional web applications have now almost become indistinguishable from their native platform-specific peers in terms of functionality.\n\nApache Cordova can be extended with native plug-ins, allowing developers to add more functionalities that can be called from JavaScript, making it communicate directly between the native layer and the HTML5 page. These plugins allow access to the device's accelerometer, camera, compass, file system, microphone, and more.\nHowever, the use of Web-based technologies leads some Apache Cordova applications to run slower than native applications with similar functionality.\nHere’s how to get started with Apache Cordova.",
      "target_audience": [
        "Job Seeker, Developer, Web Designer, Project Manager, Product Owner, Students , Professors",
        "A mobile developer and want to extend an application across more than one platform, without having to re-implement it with each platform's language and tool set.",
        "Business man / Startup – owners, Entrepreneur, Any Computer Programmer, , and more",
        "Anyone who has interest in hybrid mobile application development"
      ]
    },
    {
      "title": "Flutter Intermediate - Camera, Location, Device-Storage",
      "url": "https://www.udemy.com/course/flutter-intermediate-camera-location-riverpod_camera_location_sqflite/",
      "bio": "Learn to use flutter_riverpod, location, geocoding, camera, sqflite",
      "objectives": [
        "Learn to use the device camera",
        "Learn to get access to your location",
        "Learn to persist your data",
        "Learn to work with flutter_riverpod"
      ],
      "course_content": {
        "Intro": [
          "Intro"
        ],
        "Building The App": [
          "Initial App Setup",
          "Getting Place Title",
          "Getting Place Image",
          "Getting Place Location",
          "Persisting Data"
        ]
      },
      "requirements": [
        "Some Basic with Flutter and flutter_riverpod is required"
      ],
      "description": "Learn to build a Flutter app that lets you take picture, get device location and save it in SQFlite. Alongside use flutter_riverpod package to build this super amazing app. After this project students will be able to use camera, sqflite and device location for their own projects.\n\n\nWho is this course for\nIntermediates\nAdvanced\n\n\nWhat does this course teach\nflutter_riverpod\ncamera\nlocation\nsqflite\n\n\nPlease Note - This course teaches you with an open_source map solution, hence you don't need credit card to use google maps. This is an amazing opportunity to learn and use maps inside of your flutter apps.\n\n\nAfter finishing this course you will have a solid foundation on how to use the device camera which you would use to take pictures directly form camera or from the gallery, take videos and do with it as you please. After that you will learn to work with device location using the location package to get your current lat, lng and than use that in geocoding to get a human readable address. Now lastly you will start to save and read data from sqflite package, where I will teach you to save images in a more permanent space and than add all data to the database.",
      "target_audience": [
        "Intermediates"
      ]
    },
    {
      "title": "iPhone Product Creation Advanced: Fast Track Training",
      "url": "https://www.udemy.com/course/iphone-product-creation-advanced-fast-track-training/",
      "bio": "The Simple Process To Create Info-products Using Your iPhone - From Start To Finish",
      "objectives": [
        "How To Create A Product In Hours With Your iPhone",
        "No Fancy Software Or High-tech Equipment Required",
        "Brand New Over-The-Shoulder Video Series",
        "The Simple Process To Create Info-product Using Your iPhone - From Start To Finish."
      ],
      "course_content": {
        "Overview": [
          "Overview"
        ],
        "Setting Up Your iPhone Equipment": [
          "Minimum iPhone Equipment Adapter",
          "Bluetooth Connection Management",
          "Manage Device Storage"
        ],
        "Managing Online Storage & File Management": [
          "Managing Online Storage",
          "Backing Up Your iPhone",
          "Downloaded File Management",
          "Editing Graphics"
        ],
        "Wordpress Based Sales & Membership Pages": [
          "Wordpress Based Sales Pages",
          "Cloud Based Sales Page Systems",
          "Managing Membership Pages",
          "Cloud Based Delivery Systems"
        ],
        "Monitoring Your Help & Managing Emails": [
          "Monitoring Your Help",
          "Writing And Managing Emails"
        ],
        "Managing Payments & Webinars": [
          "Managing Payments - Part 1",
          "Managing Payments - Part 2",
          "Hosting and Recording Client Meetings and Webinars"
        ],
        "Client Scheduling": [
          "Client Scheduling - Part 1",
          "Client Scheduling - Part 2"
        ],
        "Conclusion": [
          "Conclusion - Password Manager"
        ]
      },
      "requirements": [
        "An iPhone with internet access",
        "A willingness to learn and take action"
      ],
      "description": "iPhone Product Creation Advanced: Fast Track Training\nUpgrade Your Skills And Expertise With Our Advanced Video Training…\nHere's What You'll Learn In These Upgraded Video Series:\nSimple but very effective way to make your videos look professional\nUnknown tricks used by gurus to capture super high quality videos from their iPhone.\nWhat is the best conversion software to use for your videos.\nPreparing your info-products for delivery - fast and convenient.\nThe step by step method to ensure your info-product is appealing.\nAdvanced tips and tricks about product creation that only a handful of people know about.\nYour iPhone can make you money...\nBrand New Over-The-Shoulder Video Series On How To Create A Product In Hours With Your iPhone.\nDo you have an iPhone? Then you've everything you need to start making money online.\nWith it, you can create your own info-product.\nWhy an info-product?\nFirst it has a wider profit margin than physical products.\nIt's cheap to create and you can sell it for almost the same price as a physical product.\nYou Can Make A Big Profit!\nAs you can see, it's extremely profitable and you can get started very quickly.\nNo need to worry about the delivery process and other things like that. Just upload the products to your site and you can automate everything.\nYou Can Do It With Your iPhone.\n“If it's so profitable and easy then why only a few people do it?\"\nThe answer is simple.\nIt's because most people think creating info product is hard.\nThe misconception is that people believe they need expensive equipment and software or even need to set up a home studio.\nThat's completely wrong!\nIn fact, you can create your own info product today using your own iPhone.\nNo fancy software and high-tech equipment's are required.\n...and I can show you how to do it starting today.\nWhy You Need To Get Started Now:\nIf you're interested to learn how to quickly and easily create info products with your iPhone, then you get started today.\nIn some niches, there are still only a few people who already created info products. That means it's easier for you to make a big profit.\nMany people are interested to create info products but they don't know it can be by just using their iPhones. It's EASY.\nThere's no better time to start making more money than today. If you let this opportunity pass you by, you may forget about it, and you’ll be missing out completely.\nIf you still don't have a solid online business, then sell info-products is the fastest path to success.\nYou don't need to be an expert. Just gather information online, use it to create your own product, and start making more money.\nAnd the list goes on and on.\nListen...\nI decided to come up with this unique over the shoulder video series to get you started very quickly with it.\nIntroducing…\nCreate A Product With iPhone:\nQuickly & Easily Create Info-Products Starting Today!\nThere’s nothing like this video series.\nWatch as I show you how you can use your iPhone to create your first info-product and sell it for passive income.\nI reveal my best tips for using some unknown tactics that only a few elite few knows.\nYou get to see everything. I explain everything to you.\nThere will be no guesswork.\nAll you need is just a short hour of your time to learn everything and you’d be ready to get started with it instantly.\nHere’s What You’ll Discover Inside This Video Training:\nA quick overview of how to create products with your iPhone.\nDiscover all the powerful apps to create info products, which you can download for free. (You probably use some of these apps but you never realized it could be used to create products. Prepare yourself to be shocked)\nThe simple process to create an info-product using your iPhone - from start to finish.\nHow to create products in audio format, and edit it like a pro, with no computer and no expensive audio editing software at all.\nThe secretly-guarded method I personally used to create a video training anytime anywhere with my own iPhone.\nThe fastest way to do a research for your info products, and use it as a source for your own products.\nAll the overlooked features of iPhone that could be used to create products, which looks professional as it was creating using expensive tools.\nHow creating products on your iPhone will make the creation process faster and easier than on a computer.\n--------------------------------------------------------------------\niPhone Product Creation Advanced: Fast Track Training\n\n\nSection 1: Overview\n1 - Overview\n\n\nSection 2: Setting Up Your iPhone Equipment\n2 - Minimum iPhone Equipment Adapter\n3 - Bluetooth Connection Management\n4 - Manage Device Storage\n\n\nSection 3: Managing Online Storage & File Management\n5 - Managing Online Storage\n6 - Backing Up Your iPhone\n7 - Downloaded File Management\n8 - Editing Graphics\n\n\nSection 4: Wordpress Based Sales & Membership Pages\n9 - Wordpress Based Sales Pages\n10 - Cloud Based Sales Page Systems\n11 - Managing Membership Pages\n12 - Cloud Based Delivery Systems\n\n\nSection 5: Monitoring Your Help & Managing Emails\n13 - Monitoring Your Help\n14 - Writing And Managing Emails\n\n\nSection 6: Managing Payments & Webinars\n15 - Managing Payments - Part 1\n16 - Managing Payments - Part 2\n17 - Hosting and Recording Client Meetings and Webinars\n\n\nSection 7: Client Scheduling\n18 - Client Scheduling - Part 1\n19 - Client Scheduling - Part 2\n\n\nSection 8: Conclusion\n20 - Conclusion - Password Manager",
      "target_audience": [
        "Anyone With An iPhone Who Would Like To Start An Online Business",
        "Professionals, Business Owners, Internet Marketers, Entrepreneurs, Hobbyists"
      ]
    },
    {
      "title": "MVVM Chat App for Android with Ktor & Jetpack Compose",
      "url": "https://www.udemy.com/course/mvvm-chat-app-for-android-with-ktor-jetpack-compose/",
      "bio": "Learn how to create modern chat apps with MVVM Clean Architecture, Jetpack compose and Ktor framework as backend",
      "objectives": [
        "Build a Chat app",
        "MVVM architecture in Android development",
        "Ktor basics with WebSockets",
        "Design Modern Chat UI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Downloading the necessary programs"
        ],
        "Building the Server": [
          "Initial Project Setup",
          "Creating the Data Layer",
          "What are WebSockets?",
          "Creating the Chat Controller",
          "Managing Sessions",
          "Routing",
          "Testing the Chat Server"
        ],
        "Building the App": [
          "InitialProjectSetup",
          "Creating the Data Layer",
          "Dependency Injection",
          "Username Screen",
          "Chat Screen",
          "Testing the App"
        ],
        "Final Section": [
          "What to do next?",
          "Congratulations!"
        ]
      },
      "requirements": [
        "General knowledge of Android development",
        "Jetpack Compose basics",
        "Kotlin basics"
      ],
      "description": "Have you ever wanted to create your own chat app? Well, this is for you!\nThis course will teach you everything you need to know to build your dream chat app. You will learn how to create the server backend and also you will create an Android client app following MVVM Clean Architecture.\nThe course will use Jetpack Compose,  a modern toolkit for building native Android UI, making development on Android easier and faster.\nKtor Server is a Kotlin framework that allows developers to write server applications. With its help in this course, we will develop a complete group chat server using WebSockets.\nAlong Ktor Server Side, the Android app will use Ktor Client in order to connect the application to the server with WebSockets. Retrofit will also be used to make HTTP requests to the Chat API.\nThe demand for Android developers who know Jetpack Compose and have backend knowledge is skyrocketing and if you know them, you will have a higher chance of getting your dream job.\nWhat you will learn:\n•   Ktor Server - HTTP requests, WebSockets\n•   MongoDB\n•   Jetpack Compose\n•   Dependency Injection with Dagger Hilt\n•   Retrofit\n•   Ktor Client\n•   MVVM Clean Architecture\n•   How to make high-quality apps connected to your own backend!\nAt the end of the course, you will receive a certificate!\nCourse requirements:\n•   You want to make Android apps\n•   You know the basics of Jetpack Compose\n•   You need a computer, either a PC (Windows, Linux) or a Mac, with an internet connection\nAbout the instructor:\nI am an Android developer with 5 years of experience. I have successful apps in Google play (120k+ downloads). I am willing to help and guide anybody who wants to learn how to become a great Android developer!\nEnroll today and accelerate your career!\nClick the BUY NOW button and start learning. The world needs your apps!",
      "target_audience": [
        "Developers who want to learn how to create modern chat apps",
        "Developers who want to learn how to create a REST API with Ktor",
        "Developers who love learning new things"
      ]
    },
    {
      "title": "Unity & AR: Make a Unity Game & an AR App for iOS",
      "url": "https://www.udemy.com/course/unityaugmentedreality/",
      "bio": "A hands-on guide to learning C#, augmented reality, Swift & Xcode! You also get a 700-page book & 6 bonus tech webinars",
      "objectives": [
        "Make a sidescrolling runner game in Unity!",
        "Code in Swift for augmented reality.",
        "Get free book and 6 webinars!"
      ],
      "course_content": {
        "Course Trailer": [
          "Course Trailer"
        ],
        "Unity Introduction": [
          "Have Unity experience? Jump to Section 6!",
          "Unity Introduction",
          "Unity Editor",
          "Moving a Cube - Unity",
          "Materials - Unity",
          "Lights - Unity",
          "Particle Systems - Unity",
          "Applying Physics - Unity",
          "Unity Asset Store"
        ],
        "Coding - Unity Introduction": [
          "Coding - Unity Introduction",
          "Variables - Unity",
          "Methods - Unity",
          "If Blocks - Unity",
          "Loops - Unity"
        ],
        "Inputs - Unity Introduction": [
          "Inputs - Unity Introduction",
          "Key Presses - Unity",
          "Moving a Player - Unity",
          "Jumping - Unity",
          "Moving Forward - Unity",
          "Cycling Cameras - Unity"
        ],
        "Prefabs - Unity Introduction": [
          "Let's Talk About Prefabs",
          "Prefabs - Unity Introduction",
          "FAQ on Instantiating Objects",
          "Random Angles - Unity",
          "FAQ on Destroying Objects",
          "Explosion Effects - Unity",
          "Adding Explosion Effects - Unity"
        ],
        "(Files) Unity Game Source Code": [
          "(Files) Unity Game Source Code"
        ],
        "(Project) 2D Horror Game - Unity": [
          "Organizing Unity Project",
          "Player Physics - Unity",
          "Moving Player Horizontally - Unity",
          "Make Character Jump - Unity",
          "Following Player with Camera - Unity",
          "Making Platform - Unity",
          "Creating Enemy - Unity",
          "Circle Enemy - Unity",
          "Wave Enemy - Unity",
          "Worm Logic - Unity",
          "Destroying Objects Far Away - Unity",
          "Canvas and Events - Unity",
          "Throwing Weapons - Unity",
          "Throwing Directions - Unity",
          "Limited Ammo Script - Unity",
          "Making Whip Weapon - Unity"
        ],
        "Photoshop Introduction": [
          "Have Photoshop experience? Jump to Section 9!",
          "Build a New Photoshop File",
          "Navigational Controls - Photoshop",
          "Basic Photoshop Tools (Rundown)",
          "Using Basic Photoshop Tools",
          "Basic Secondary Tools - Photoshop",
          "Basic Layers - Photoshop",
          "(Project) Painting - Photoshop",
          "Adjustment Layers - Photoshop",
          "Adjustment Layers (ii) - Photoshop",
          "Adjustment Layers (iii) - Photoshop",
          "Transform Tool - Photoshop",
          "Transform Tool (Advanced) - Photoshop",
          "Selecting Color Range - Photoshop",
          "Image Settings - Photoshop",
          "Adjusting Image - Photoshop",
          "Photoshop Fun",
          "Photoshop Fun (Continued)",
          "Ruler Usage - Photoshop"
        ],
        "(Files) Unity Game Art Assets": [
          "(Files) Unity Game Art Assets"
        ],
        "(Projects) Making Photoshop Game Art": [
          "Setting up Photoshop for Game Art",
          "Background Wall - Photoshop",
          "Broken Background Wall - Photoshop",
          "Window - Photoshop",
          "Old Curtain - Photoshop",
          "Dungeon Torch - Photoshop",
          "Floor - Photoshop",
          "Floating Platform - Photoshop",
          "Pillar - Photoshop",
          "Battle Axe Weapon - Photoshop",
          "Dagger Weapon - Photoshop",
          "Whip Weapon - Photoshop",
          "Ghost - Photoshop",
          "Vampire Bat - Photoshop",
          "Main Character - Photoshop",
          "Running Character - Photoshop",
          "Running Stills - Photoshop",
          "Running Animation - Photoshop",
          "Throwing Animation - Photoshop",
          "Whipping Animation - Photoshop",
          "Exporting Photoshop Assets"
        ]
      },
      "requirements": [
        "Unity (free) for game development!",
        "Photoshop (or free alternative) for game design.",
        "Xcode 9 (free, requires Mac or MacOS alternative) for iOS projects.",
        "Blender (free) for augmented reality model."
      ],
      "description": "Make a sidescrolling 2D runner game in Unity 2017 with Photoshop game art. Learn to code for Apple's programming language and implement augmented reality into an iOS app.\nA #1 project on Kickstarter funded this course\nWhy start tomorrow when you can start today? Get a head start on the rest of your life with our career-boosting Mammoth Interactive course.\nThis Mammoth Interactive course is project based so you will not be learning a bunch of useless coding practices. This course will build your portfolio.\nCode in C# and Swift 4.\nNavigate the #1 game engine Unity.\nMake your own beautiful art from ground zero in Photoshop.\nBe able to make apps for Apple.\nUse Xcode with ARKit, a unique new feature to make your apps stand out.\nImport a 3D model from Blender into your augmented reality app.\nProject-based training content is the best way to reach your goals. Take this course to get practical & employable skills right now with Mammoth Interactive.\nIncluded in this course you'll find a 713-page eBook \"The Ultimate iOS 10, Xcode 8 Developer Book. Build 30 apps\" by Mammoth Interactive.\nIncluded in this course is material for beginners to get comfortable with the interfaces. Please note that we reuse this content in similar courses because it is introductory material. You can find some material in this course in the following related courses:\nBuild a 2D CastleMania Horror Unity® Game with Sound Effects\nUnity & AR: Make a Unity Game & an AR App for iOS\nComplete 35 Projects: Unity VR Games with C# & iPhone Apps\niOS 11 & Swift 4.0 - A Beginner's Guide with Projects\nThe Ultimate iOS 11 & Swift 4 Course. Learn to Build Apps!\nC# Unity and Swift 4 Masterclass: Make Games and Apps\nXamarin Start to Finish Android & iOS Apps (& Learn to Code)\nCode in Kotlin & Java for Android and Complete 5 iPhone Apps\nFinish 26 Games & Apps Quickly (GameMaker: Studio & Xcode)\nSwift 4 and ELM Masterclass | Make iOS 11 apps and web apps!\nLearn UI Mobile App Design & Game Mechanics in Construct 2\nIncluded also you'll find 6 webinars recorded by our founder John Bura:\nIntro to Kotlin: Java’s Replacement for Android App Development\nIntro to Android Studio and Java\nCore Data: Learn to Use Xcode’s Database\nGoogle Maps and Xcode: Build a Maps-Focused Project\nParse JSON Data: Build a Weather App\nIntro to SpriteKit Games: Build a Simple Pong Clone\nYou can use the projects you build in this Mammoth Interactive course to add to your LinkedIn profile. Give your portfolio fuel to take your career to the next level.\nLearn these powerful tools today & get a head start for tomorrow. People who can master technology will rule the future.\nI promise that this course will be better & more effective than reading books. I show how to master technology through the use of video. This course will give you everything you need to thrive in our technological society.\nEnroll right now to start learning with Mammoth Interactive",
      "target_audience": [
        "No experience necessary!",
        "People who want to make games",
        "People who want to make augmented reality iOS apps."
      ]
    },
    {
      "title": "The Complete Guide to Integrating JSON API with SwiftUI",
      "url": "https://www.udemy.com/course/the-complete-guide-to-integrating-json-api-with-swiftui/",
      "bio": "Covers JWT authentication, refresh tokens, SwiftUI built-in architecture, generic networking layer, maps and more.",
      "objectives": [
        "How to fetch and display live data from any JSON API using SwiftUI",
        "How to decode JSON into Swift models with Codable",
        "How to build a reusable, type-safe networking layer with async/await",
        "How to implement JWT authentication and store tokens securely with Keychain",
        "How to display API-driven locations on a map using MapKit",
        "How to structure SwiftUI apps with clean, modular architecture for scalability and maintenance"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Exercise Files"
        ],
        "Platzi Store API Integration with SwiftUI App": [
          "SwiftUI Registration Flow with Validation & Async API Integration",
          "Performing Login and Persisting Access and Refresh Tokens",
          "Implementing Generic HTTP Client",
          "Refresh Access Token",
          "Switching Screens for Logged-In User",
          "Displaying Categories",
          "Adding Categories",
          "Displaying Products by Category",
          "Show Product Details",
          "Adding Products",
          "Deleting Products",
          "Displaying Locations",
          "Displaying Location Details",
          "Profile Screen and Sign out"
        ],
        "Conclusion": [
          "Bonus"
        ]
      },
      "requirements": [
        "Basic understanding of the Swift programming language (variables, functions, conditionals)",
        "Familiarity with SwiftUI fundamentals (views, state, and bindings)",
        "Xcode installed on a Mac running macOS compatible with the latest SwiftUI version",
        "An active internet connection for downloading API data and testing integrations",
        "No prior experience with APIs or networking in Swift is required — everything will be taught from scratch"
      ],
      "description": "The Complete Guide to Integrating JSON API with SwiftUI\nStop building static apps. Learn how to connect your SwiftUI projects to real-world JSON APIs and create dynamic, data-driven experiences your users will love.\nIn this hands-on course, you’ll learn how to:\nFetch and display live data by integrating any RESTful JSON API into your SwiftUI app\nDecode JSON into Swift models using Codable\nImplement a generic, reusable networking layer with async/await\nAdd secure authentication with JWT and Keychain token storage\nDisplay API-powered locations on a map using MapKit\nBuild a complete project from API call to polished SwiftUI interface\nWhy this course will help you succeed:\nModern apps thrive on live data, and employers want developers who can integrate APIs seamlessly. This course equips you with:\nReal-world skills to work with APIs, authentication, and secure storage\nA reusable architecture for clean, maintainable networking code\nPortfolio-ready projects to showcase to clients or hiring managers\nAbout the Instructor\nThis course is taught by Mohammad Azam, a renowned instructor with over 100,000 students worldwide. Many of his students have gone on to work at top companies, including Apple, JP Morgan Chase, and other leading organizations.\nBy the end, you’ll confidently integrate JSON APIs into SwiftUI apps, backed by a solid networking architecture that scales with your projects.",
      "target_audience": [
        "iOS developers who want to learn how to integrate JSON APIs into SwiftUI apps",
        "SwiftUI beginners who are comfortable with the basics and want to build real-world, data-driven applications",
        "Developers looking to implement a clean, reusable networking layer for scalable projects",
        "Programmers who want to strengthen their skills in authentication, secure storage, and working with external data sources",
        "Students and professionals aiming to add portfolio-ready, API-powered projects to their resume"
      ]
    },
    {
      "title": "Flutter - Concurrency & Parallelism",
      "url": "https://www.udemy.com/course/flutter-concurrency-parallelism/",
      "bio": "Learn to build a better performance Flutter app with concurrency & parallelism",
      "objectives": [
        "Concurrency",
        "Parallelism",
        "Isolate",
        "Compute",
        "Async and Await"
      ],
      "course_content": {
        "Introduction": [
          "Advance Flutter Course",
          "Source Code",
          "Getting Started with Asynchronous Programming",
          "Practical Guide To Async and Await",
          "Concurrent Programming – Part 1",
          "Concurrent Programming – Part 2",
          "Compute Function",
          "Isolate Parse Json Response From Api",
          "Isolate Error handling",
          "Create Isolate with Isolate.run()",
          "Async vs Isolates",
          "Understanding Isolate and Event Loop"
        ]
      },
      "requirements": [
        "Basic of Flutter and Dart"
      ],
      "description": "In the beginner friendly course we will learn about the Concurrency & Parallelism in Flutter and Dart. We will get started with a beginner friendly topic and slowly move to more advance topic, by the end of this course you will be confident in using Concurrency & Parallelism in you own Flutter app.\n\n\nYou must have a basic knowledge on Flutter and Dart development to understand this course clearly, if you have never written a Flutter and Dart course this course is not for you.\n\nDart supports concurrent programming with async-await, isolates, and classes such as Future and Stream. This page gives an overview of async-await, Future, and Stream, but it’s mostly about isolates.\nWithin an app, all Dart code runs in an isolate. Each Dart isolate has a single thread of execution and shares no mutable objects with other isolates. To communicate with each other, isolates use message passing. Many Dart apps use only one isolate, the main isolate. You can create additional isolates to enable parallel code execution on multiple processor cores.\nAlthough Dart’s isolate model is built with underlying primitives such as processes and threads that the operating system provides, the Dart VM’s use of these primitives is an implementation detail that this page doesn’t discuss.",
      "target_audience": [
        "Flutter Developer"
      ]
    },
    {
      "title": "RealityKit Workshop Recording - Building AR Apps",
      "url": "https://www.udemy.com/course/realitykit-workshop-recording-building-ar-apps/",
      "bio": "Master RealityKit Development and Propel Your AR Creations into the Future",
      "objectives": [
        "Gain a comprehensive understanding of key concepts such as entities, components, and anchors, laying a solid foundation for building AR applications.",
        "Dive into practical exercises and projects designed to reinforce theoretical knowledge, allowing students to develop real-world skills in crafting immersive AR",
        "Explore advanced techniques and best practices for optimizing performance, enhancing user experience, and pushing the boundaries of AR development with RealityK",
        "Develop problem-solving skills through troubleshooting common issues and challenges encountered during AR development, empowering students to overcome obstacles"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites"
        ],
        "Watch the Recording": [
          "The Complete Workshop Recording",
          "Source Code"
        ],
        "Congratulations! You are finished!": [
          "Bonus"
        ]
      },
      "requirements": [
        "A fundamental understanding of programming concepts, preferably in Swift or a similar language, will be beneficial for grasping the concepts covered in the course.",
        "Prior experience with Xcode, Apple's integrated development environment (IDE), will help students navigate through the development environment and follow along with the practical exercises effectively.",
        "Since RealityKit development is primarily done using Xcode, students will need access to a Mac computer to install and run the necessary software tools.",
        "To test and deploy AR applications built with RealityKit, students will need a Mac compatible with ARKit, Apple's augmented reality framework, for running simulations and testing on device."
      ],
      "description": "Welcome to the RealityKit Applications Workshop, where we invite you to embark on an immersive journey into the realm of augmented reality (AR) development. In this comprehensive course, we will delve deep into the fundamental concepts and practical techniques necessary for creating captivating AR experiences using RealityKit.\n\n\nThroughout this workshop, you will gain a solid understanding of the core elements that form the backbone of RealityKit applications. From entities to components and anchors, each concept will be meticulously explored, ensuring you have a firm grasp of how to leverage these building blocks to breathe life into your AR projects.\n\n\nBut this course isn't just about theoretical knowledge. We believe in learning by doing, which is why you'll also have ample opportunities to put your newfound skills into practice. Through hands-on exercises and projects, you'll hone your abilities to design, develop, and deploy immersive AR environments that push the boundaries of what's possible.\n\n\nMoreover, this workshop doesn't stop at RealityKit alone. By mastering the intricacies of RealityKit development, you'll also be laying a strong foundation for advancing into Vision Pro development. Whether you're a seasoned developer looking to expand your skill set or a newcomer eager to dive into the exciting world of AR, this course has something for everyone.\n\n\nJoin us as we unlock the potential of RealityKit and embark on a journey to bring your virtual creations to life in the dynamic realm of augmented reality. Enroll now and start building the future of interactive experiences!",
      "target_audience": [
        "Individuals who are interested in delving into the field of augmented reality development and want to learn how to create immersive AR experiences using RealityKit.",
        "iOS developers who want to expand their skill set and explore the possibilities of AR development on the Apple platform, leveraging their existing knowledge of Swift and Xcode.",
        "Students studying computer science, software engineering, or related fields, as well as enthusiasts with a keen interest in technology and innovation, who want to gain hands-on experience in AR development.",
        "Creatives and designers who are eager to explore new mediums for expressing their creativity and storytelling, and want to learn how to integrate AR elements into their projects."
      ]
    },
    {
      "title": "Build your first mobile game for iPhone Swift/iOS having fun",
      "url": "https://www.udemy.com/course/how-to-make-iphone-game/",
      "bio": "Learn Swift, iOS and SpriteKit while having fun, learn programing from the ground up every and learn while playing games",
      "objectives": [
        "Create a fully functional game",
        "Have a deeper understand of the problems that can happen while coding and how to solve it",
        "Student will be able to create code easy to understand, test and scale"
      ],
      "course_content": {
        "Start Here": [
          "Introduction",
          "Stay hungry, Stay foolish",
          "Introduction to the course"
        ],
        "Introduction to SpriteKit": [
          "Create a SpriteKit project and understand the boiled plate code"
        ],
        "Creating Extensions": [
          "Creating UIColor Extensions to make developing and specially changes easier"
        ],
        "Starting the game, initializers and new classes": [
          "Creating PadLoackSKShapeNode class",
          "Using PadLoackSKShapeNode class",
          "Adding a pin class to the PadLockSKShape"
        ],
        "Add animation to our game": [
          "Add rotatition to the pin"
        ],
        "Add helper functions": [
          "A little maths in the getNewTarget function"
        ],
        "Creating a target and make it fun": [
          "Setup the target first and just call the getNewTarget function later",
          "Create new targets on demand",
          "Setup the target first and just call the getNewTarget function later",
          "Creating some space between two given targets"
        ],
        "Lets see now how easily we can change your game": [
          "Minute of appreciation for what we build so far"
        ],
        "The game cycle": [
          "Creating some space between the targets",
          "Create a SKNode to keep our target as children",
          "Collision detection setting up PhysicsBody",
          "Using booleans to create a \"switch\" in part of the expressions"
        ],
        "Making the code more useful, more reliable and expandable": [
          "Refactoring, creating a GameController to isolate the game logic"
        ]
      },
      "requirements": [
        "Students must have XCode installed and working",
        "Basic knowledge about XCode and programming"
      ],
      "description": "Have you ever imagine yourself as a spy, breaking codes, picking locks? In this game you will have to crack the secret code to pop the lock, and more you will have to build this game from scratch if you want to play it and learn a lot about Swift, SpriteKit and iOS while doing so.\n\nThe game is fun to play and watch others playing, however it is just a fun way for me to teach you all you need to know to be a excellent Swift/iOS developer.\nTrougth the course of this course we will learn about:\n\nSpriteKit Framework and its boiled plate code\nExtensions, what is and how to use\nHow to encapsulate our code and use private variables, getters and setter and why\nHow to refectory your code as you go, what is refectory and why you should always do it\nLoops, different kinds of loops, with one to use for different scenarios and why\nInheritance, including initializers, convenience, required, overriden how to do it right\nProperties, including property observers and computed properties, what it is and how to use\nProtocols, I know you hear about it before, but do you really understand what it is and how to use?\nIn this course we will cover one topic at the time as we need we will discuss itm examine the options and add to our game to make it more and more awesome",
      "target_audience": [
        "Anyone looking to learn or deeper it's knowledged in Swift, iOS or SpriteKit",
        "Anyone that want to learn while having fun making a game",
        "Anyone open minded that want to be leading and not following"
      ]
    },
    {
      "title": "Learn Android Wear Programming",
      "url": "https://www.udemy.com/course/learn-android-wear-programming/",
      "bio": "Guide to learn and create Android Wear Programs using Android Studio and Eclipse",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic to average knowledge of Android programming / Java programming is required to join this course on Android Wear Programming."
      ],
      "description": "SchoolSteps(.in) is a team of 7 professionals having an average experience of 12+ years. Our core strength is Java/J2EE, Web and Android Programming and we have been doing rigorous R&D in Android Wear Programming since the API has been introduced. Through this series, we thought of sharing our knowledge with you.\nThe series contains 6+ hours of video tutorials with maximum focus on programming. The series do focus on some theoretical concepts to make the base for you to learn wear programming.\nThe series starts your learning journey with the basics like what is android wear, design principles, android SDK installation, using android studio etc and then moves to the interesting concepts like building notifications for android wear, adding page to a notification, voice input for notifications and notification stacking etc.\nNext it takes you to world of Custom UIs, where you learn to create layouts, cards, list , 2D pickers, confirmations etc for the Android Wear.\nEventually, it takes you through the advanced concepts where you learn to send and receive messages, sync data items, transferring assets, designing android wear faces etc.\nLast but not the least, you will experience a LIVE EXAMPLE, using Google Play Store, on how to package and distribute your Android Wear App.\nThe prerequisite for this course is to have basic to average knowledge of Java/J2EE. Knowledge of Android programming is good to have.",
      "target_audience": [
        "Software Developer / Programmers having basic to average knowledge of Android Programming / Java Programming should join this course",
        "Fundamentals of Application Development"
      ]
    },
    {
      "title": "The Art of Doing: A Beginners Look at Android Studio",
      "url": "https://www.udemy.com/course/the-art-of-doing-a-beginners-look-at-android-studio/",
      "bio": "Begin your Android development journey today!",
      "objectives": [],
      "course_content": {
        "Installation and Setup": [
          "Installation and Introduction",
          "Creating A Project",
          "Using A Virtual Device",
          "Using A Physical Device"
        ],
        "Exploring Android Studio": [
          "Exploring Android Studio",
          "Exploring the Manifest",
          "Exploring The Main Activity",
          "Exploring the Layout",
          "Exploring Lifecycle Methods"
        ],
        "Bonus Lecture": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "A computer capable or running Android Studio (please see system requirements).",
        "A computer capable of running the Android Emulator (please see system requirements) or a physical android device for testing."
      ],
      "description": "Have you always wanted to make your own mobile apps but never knew where to begin?  Consider taking this FREE course which will start you on your journey to making your own Android applications using Android Studio.  We will walk through all the steps to get Android Studio up and running on your computer, virtual emulators created for you to test your apps, and even set up physical devices for you to use as well so you can take your apps with you and show them off to friends and family.\nThe focus of this FREE course will then be to explain what Android Studio creates for you when you open up a new project.  We will take a look at the files created and explain what each file does and how they work together to get an app to load on your mobile device.  In particular we will explore:\nThe Manifest\nThe Main Activity\nThe Layout\nVarious Lifecycle Methods of the Main Activity Using Logcat\nTry this course out for free to get a foundational knowledge, and if you are interested in continuing, you can purchase the full course which is previewed in our last video.  Thank you for considering taking the course and all the best!",
      "target_audience": [
        "Beginner Android students looking to understand Android application development with Kotlin.",
        "Anyone interested in learning!"
      ]
    },
    {
      "title": "Mobile App Development for Beginners",
      "url": "https://www.udemy.com/course/mobile-app-development-for-beginners-k/",
      "bio": "Beginner’s Guide to Mobile App Development – Learn Tools, Design, Building, and Publishing Basics",
      "objectives": [
        "Understand what mobile apps are and how they work.",
        "Identify different types of mobile apps and development approaches.",
        "Set up and install the necessary tools for app development.",
        "Build a simple “Hello World” app from scratch.",
        "Add basic interactivity to an app.",
        "Apply fundamental app design principles for better user experience.",
        "Prepare and publish an app on app stores.",
        "Plan next steps to continue learning and improving app development skills."
      ],
      "course_content": {
        "Introduction to Mobile App Development": [
          "Welcome & Course Overview",
          "Understanding Mobile Apps"
        ],
        "Getting Started – Tools & Setup": [
          "Choosing the Right Development Approach",
          "Installing Tools"
        ],
        "Building Your First App": [
          "Understanding App Structure",
          "Creating a “Hello World” App",
          "Adding Simple Interactivity"
        ],
        "App Design & Publishing Basics": [
          "Designing Your App",
          "How to Publish Your App"
        ],
        "Wrapping Up & Next Steps": [
          "Final Words & Learning Path"
        ]
      },
      "requirements": [
        "No prior coding or technical experience is required.",
        "Basic computer skills, such as downloading and installing software.",
        "Eagerness to learn and explore mobile app development."
      ],
      "description": "Mobile app development is one of the most in-demand and rewarding skills in today’s digital world. From social media platforms to productivity tools, entertainment apps, and e-commerce solutions, mobile applications have become an integral part of our daily lives. This beginner-friendly course is designed to guide you step-by-step through the fundamentals of mobile app development, even if you have no prior coding or technical experience. By the end of this course, you will not only understand how mobile apps work but also have the confidence to start creating and publishing your own.\nWe begin with a clear introduction to the world of mobile applications, exploring what they are, how they function, and the different types of apps you can develop. You will gain insight into native apps, hybrid apps, and progressive web apps, understanding the advantages and limitations of each. This foundational knowledge will help you make informed decisions about the right development approach for your own projects. The first section will also give you an overview of the course structure, so you know exactly what to expect and how each step builds toward creating your first app.\nOnce you have a strong understanding of the basics, we move into the practical side of things — setting up the tools and environment you need to begin development. This includes choosing the right development approach based on your goals, platform preferences, and technical comfort level. We will guide you through installing the essential software and development tools, ensuring that your setup is ready for building real apps. This section is designed to make the process simple and beginner-friendly, removing any technical barriers that might hold you back.\nThe heart of the course focuses on building your first mobile application from scratch. You will learn how apps are structured and what goes on behind the scenes to make them work. Starting with a simple “Hello World” application, you’ll take your first steps into app creation, gaining hands-on experience in bringing ideas to life. From there, we’ll add basic interactivity so you can see how user input can influence the app’s behavior. This practical learning approach will help you connect the theory with real-world application, ensuring you truly understand each concept.\nIn addition to development, we will also cover essential app design principles to make your applications visually appealing and user-friendly. You will learn the basics of layout design, color schemes, and navigation flow, ensuring that your apps are not only functional but also enjoyable to use. A great app is more than just code — it’s about delivering a smooth and engaging experience to users. We will show you how to achieve that balance even as a beginner.\nPublishing your app is a crucial step in your journey, and this course will guide you through the process. You will learn what’s required to publish on popular app stores, how to prepare your app for submission, and what to expect during the review process. We will also discuss the importance of app updates and how to keep improving your app after launch.\nFinally, we wrap up the course with a roadmap for your next steps in mobile app development. Whether you want to continue learning advanced coding techniques, explore cross-platform development, or dive deeper into app monetization strategies, you will have a clear direction on how to keep growing your skills. The final words will inspire you to keep building, experimenting, and improving, so you can turn your ideas into fully functional apps.\nThis course is more than just an introduction — it’s the start of your mobile app development journey. With a balance of theory and hands-on practice, you will gain the confidence to create simple apps, understand the development process, and take the first step toward a career or hobby in this exciting field. Whether your goal is to build apps for personal use, share them with friends, or publish them for the world, this course equips you with the knowledge and skills to get started.",
      "target_audience": [
        "Absolute beginners who want to learn mobile app development.",
        "Students or hobbyists interested in building their first mobile app.",
        "Anyone curious about how mobile apps are created, designed, and published.",
        "Individuals looking to explore app development as a career or side project.",
        "Creators who want to turn their app ideas into reality without prior experience."
      ]
    },
    {
      "title": "Flutter Chatbot with Gemini",
      "url": "https://www.udemy.com/course/flutter-chatbot-with-gemini/",
      "bio": "Building Intelligent Conversational Agents",
      "objectives": [
        "Flutter",
        "Gemini",
        "Chatbot",
        "Image To Text"
      ],
      "course_content": {
        "Introduction": [
          "What We Are Going To Build?",
          "Become a Pro Flutter Developer",
          "Project Source Code"
        ],
        "Chatbot": [
          "Setup Dependencies",
          "Setup Screens",
          "Setup Gemini API",
          "Chat Box UI",
          "Chat Message UI",
          "Send Chat",
          "Chat Response"
        ],
        "Image To Text": [
          "Message Model",
          "Image Text ChatBox UI",
          "Image Text Screen UI",
          "Pick Image Method",
          "Send API Request Method",
          "Fix Permission",
          "Show Selected Image",
          "Send API Request",
          "Bug Fix"
        ]
      },
      "requirements": [
        "Basic of Dart/Flutter"
      ],
      "description": "In today's digital world, chatbots have become an essential tool for enhancing user engagement, providing customer support, and automating routine tasks. With the rise of Flutter, a popular framework for building cross-platform mobile applications, it has become even easier to create chatbots that can seamlessly integrate into any mobile or web application.\nIn this comprehensive course on Flutter Chatbot with Gemini, you will learn how to build intelligent conversational agents using the power of Flutter and the Gemini framework. Gemini is a powerful natural language processing (NLP) library that enables you to create conversational experiences that are engaging, interactive, and personalized.\nBy the end of this course, you will have mastered the art of creating chatbots with Gemini. You will start by understanding the fundamentals of conversational AI, including the principles of natural language processing and machine learning. Then, you will dive into the world of Flutter and learn how to build dynamic and visually appealing chat interfaces using Flutter widgets.\nAs you progress, you will learn how to implement Gemini into your Flutter chatbot to enable it to understand and respond to user queries. You will explore techniques such as intent classification, entity extraction, and dialogue management to create engaging conversations.",
      "target_audience": [
        "Flutter Developer"
      ]
    },
    {
      "title": "Circle 2.0 - Your App Business in a Box",
      "url": "https://www.udemy.com/course/your-app-business-in-a-box/",
      "bio": "Get from Zero to the App Store in just 5 days",
      "objectives": [
        "Learn how easy it is to submit an app to the App Store",
        "Find out how to create a sustainable App Business"
      ],
      "course_content": {
        "Tours of the Games You Will Make": [
          "Cloud Avoiding Tour",
          "Color Challenge Tour",
          "Find the Pair Tour",
          "Flappy Pet Tour",
          "Gatherer Tour",
          "Group Them Tour",
          "One Color Tour",
          "Pop Me Tour",
          "Sky Diving Tour",
          "Slide to Me Tour",
          "Throw the Ball Tour",
          "Whack Till You Can Tour"
        ],
        "Launch it!": [
          "Day 1 - First Steps",
          "Downlaodable",
          "Day 2 - Images",
          "Day 3 - The Level System",
          "Day 4 - Icons, Defaults and Music",
          "Day 5 - AdMob",
          "Day 6 - Chartboost",
          "Day 7 - ironSource (Supersonic) & Fyber",
          "Day 8 - The Developer Center",
          "Day 9 - iTunes Connect",
          "Day 10 - Submit for Review"
        ],
        "The 5 Days System": [
          "Day 11 - Create Your images",
          "Day 12 - Create Your Images – Level System",
          "Day 13 - Ad Networks Setup",
          "Day 14 - Member Center Setup",
          "Day 15 - Submit for Review"
        ],
        "Bonus": [
          "Help! My App Got Rejected",
          "Ready for Sale Setup",
          "Extra 10 More Games",
          "How to Build Your App Business"
        ]
      },
      "requirements": [
        "You need to have a Mac – You can publish iOS apps only in an OSX environment. If you do not already have a Mac consider buying one or using a service like MacInCloud.",
        "Enroll in the Apple Developer Program – You may develop and test iOS apps but if you do want to publish them on the App Store than you will need to be enrolled. It’s $99/year and you can enroll on the official Apple Developer Portal.",
        "Xcode installed – All iOS apps are built in Xcode."
      ],
      "description": "Update (15.09.2016): All source codes in this course are now updated to iOS10, Swift 3 and Xcode8!\nUpdate: now you get a total of 12 source codes with this course!!! (see lecture 18 for extra codes)\nHave you ever wished that you could just set your eye on an iOS source code, reskin it and in 5 days the app would be live on your App Store Portfolio? Yes? Than today is your lucky day.\nBecause all of us have busy lives I have created this course to be easily followed if you have at most 1 hour a day. Each day you complete a lesson and you'll be on your way to App Store success. Of course if you wish you can complete the course in one take. It all depends on the amount of time you have for this activity.\nA few of the many reasons why you want to join Circle 2.0 today:\n1. Get from Zero to the App Store in just 5 days. Learn everything you need to do to put your app on the App Store in 5 days.\n2. You’ll get your hands on 12 source codes (worth $179 each). In Circle 1.0 a total of 14 reskins were featured by Apple. You will get the exact same source codes:\n✔︎ Whack Till You Can\n✔︎  Gatherer\n✔︎  Color Challenge\n✔︎  Cloud Avoiding\n✔︎  Find the Pair\n✔︎  Flappy Pet\n✔︎  Group Them\n✔︎  One Color\n✔︎  Pop Me\n✔︎  Sky Diving\n✔︎  Slide to Me\n✔︎  Throw the Ball\nYou will get a Multiple App License: you will be allowed to create as many reskins as you like/can.\n3. Learn exactly how to reskin in a Step By Step Video Course (worth $899). Once you purchase you are not left on your own wondering what to do with these source codes! These videos will guide you every step of the way from zero to App Store.\n4. Get the best support on the marketplace. I answer to all of your questions within 24 hours, but mostly after 3-4 hours.\nThat's $3047 worth of source codes and tutorials for only $200!!!\nBuilding your app portfolio was never so easy! You will not find a deal close to this anywhere on the internet.\nThese games are money-making machines with AdMob banner, Chartboost and SupersonicAds interstitial and 33 levels of stickiness and activity. They can be set up in under 15 minutes.\nNo Coding Skill Required. Start your own app business today. Source code and step by step video tutorials are provided.\nThe course is structured in 3 modules. The first module takes you through 10 days and teaches you step by step what you need to do to set up and put your first app on the App Store. The second module repeats the process in under 5 days. This way you will learn how to do it faster. The last module has some tips and tricks and gives you the third source code that you can add to your App Empire. All you will have to do next is repeat the steps with several more designs.\nThis course takes you by hand and shows you how you can build a sustainable App Business. I have been an iOS App Developer for more than 7 years now. I have done these exact steps hundreds of times and I have thought these steps to thousands of students. Now it's your time to learn how you too can take your App Empire to the next level!",
      "target_audience": [
        "This course is meant for anyone who would like to create a passive income from running an App Business. No coding skills or prior knowledge is required. Everything you need to know is detailed in the course. All you need to have is to be enrolled in the Apple Developer Program ($99/year) and a few spare hour per day. This course is NOT for you if you do not want to spend at least one hour a day building your App Business."
      ]
    },
    {
      "title": "Master Android App Development: Beginner to Advanced",
      "url": "https://www.udemy.com/course/complete-android-development-course-from-basics-to-advanced/",
      "bio": "Step-by-Step Android App Development for Beginners to Experts",
      "objectives": [
        "Learn how to set up Android Studio and work with both emulators and real devices.",
        "Understand the core components of Android apps, including project structure, manifest files, and UI elements.",
        "Gain hands-on experience with Kotlin programming, including variables, functions, and object-oriented concepts",
        "Master UI design, including layouts, views, RecyclerView, and building interactive forms like login screens.",
        "Build complete Android apps, handle user input, and learn advanced topics like event handling, Toast, and Snackbar."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What is Android Development": [
          "What is Android Development"
        ],
        "System Requirements for Android Studio": [
          "System Requirements for Android Studio"
        ],
        "Downloading & Installing Android Studio (WindowsMacLinux)": [
          "Downloading & Installing Android Studio (WindowsMacLinux)"
        ],
        "Setting Up the Emulator & Real Device Testing": [
          "Setting Up the Emulator & Real Device Testing"
        ],
        "Understanding Android SDK & Tools": [
          "Understanding Android SDK & Tools"
        ],
        "Creating Your First Android Project and First Look at Android Studio Interface": [
          "Creating Your First Android Project and First Look at Android Studio Interface"
        ],
        "Understanding Project File Structure": [
          "Understanding Project File Structure"
        ],
        "FAQs & Common Issues Beginners Face": [
          "FAQs & Common Issues Beginners Face"
        ],
        "Introduction to UI in Android": [
          "Introduction to UI in Android"
        ]
      },
      "requirements": [
        "No prior experience with Kotlin or Android is required—this course covers everything from the ground up!"
      ],
      "description": "Welcome to the Android Development Full Course: From Basics to Advanced! This course is your ultimate guide to learning Android app development with Kotlin—one of the most powerful and modern programming languages for Android development. Whether you’re completely new to Android or looking to upgrade your skills, this course is designed for anyone who wants to become a proficient Android developer.\nThroughout this course, you will master everything from setting up Android Studio to building real-world apps. We start with the basics and work our way through advanced concepts, focusing on both theory and hands-on practice. By the end of this course, you'll not only be comfortable with Android development tools and frameworks but also capable of developing your own fully functional Android applications that are ready for release!\nWhat You Will Learn:\nIntroduction to Android Development\nOverview of the Android ecosystem and mobile app development landscape.\nSetting up Android Studio and configuring your development environment.\nInstalling and configuring Emulators and using Real Devices for testing.\nUnderstanding the Android SDK (Software Development Kit) and tools.\nDeep Dive into Android Project Structure\nExploring the Project File Structure of an Android app.\nUnderstanding the role of Manifest Files in Android apps.\nWorking with XML Layouts, Java, and Kotlin in Android projects.\nAnalyzing key components like Activities, Fragments, and Services.\nUser Interface Design (UI) in Android\nDifferences between XML-based and Code-based UI design.\nCreating and managing Layouts: LinearLayout, RelativeLayout, ConstraintLayout.\nDesigning interactive and responsive UI Elements such as Buttons, TextViews, and EditText.\nImplementing dynamic lists using RecyclerView and ViewHolder pattern.\nUsing Toasts, Snackbars, and Dialogs to enhance user experience.\nBuilding a professional Login/Signup screen with input validation and error handling.\nGetting Started with Kotlin Programming\nIntroduction to Kotlin and how it’s used for Android development.\nLearning Variables, Data Types, Constants, and Type Safety in Kotlin.\nMastering Control Flow: If statements, When expressions, and Loops.\nWriting Functions, Lambda Expressions, and understanding Higher-Order Functions.\nExploring Object-Oriented Programming (OOP) concepts such as Classes, Objects, and Constructors.\nDelving into Null Safety and Extension Functions in Kotlin.\nAdvanced Android Development\nHandling User Input efficiently and managing Click Events.\nUsing Intents for navigation between activities and Passing Data between them.\nUnderstanding Fragments and their role in building flexible UIs.\nApp Resources Management: Handling strings, colors, and drawables efficiently.\nImplementing Menus (Context and Options) for user navigation.\nUsing SharedPreferences, SQLite, and Room Database for local data storage.\nWorking with external APIs and implementing Network Calls using Retrofit or Volley.\nManaging Background Tasks using Services, AsyncTasks, and WorkManager.\nUI/UX Best Practices\nUnderstanding the importance of Material Design for modern Android apps.\nImplementing Responsive Layouts for different screen sizes and orientations.\nDesigning apps with Accessibility and Localization in mind.\nUsing Themes and Styles to create a consistent user experience.\n\n\nBy the end of this course, you will:\nHave a deep understanding of Android development concepts, tools, and best practices.\nBe proficient in Kotlin and confident in writing clean, efficient Android code.\nBe able to build a variety of Android apps, from simple UI-based apps to complex data-driven apps.\nGain expertise in UI/UX design, networking, data storage, and multithreading in Android.\nUnderstand how to test, debug, and optimize Android applications for smooth performance.\n\n\nWho is this course for?\nBeginners who want to start their journey in Android development and Kotlin programming.\nAspiring Android Developers looking to gain real-world skills in building mobile apps.\nProgramming Enthusiasts with basic programming knowledge who want to specialize in Android.\n\n\nThis course is your one-stop-shop to becoming a proficient Android developer, no matter your starting point. Join now and start building your Android apps with Kotlin, one step at a time!",
      "target_audience": [
        "Beginners who are new to Android development and want to learn how to build Android apps from scratch.",
        "Aspiring mobile developers looking to gain practical skills in Kotlin and Android Studio.",
        "Programming enthusiasts who are interested in learning Kotlin and building Android applications."
      ]
    },
    {
      "title": "How to make your first iOS 7 iPhone app BOOTCAMP",
      "url": "https://www.udemy.com/course/how-to-make-your-first-iphone-app-bootcamp/",
      "bio": "This course will teach you everything to need to know to publish your first iPhone app.",
      "objectives": [
        "To have published your first iPhone / iPad app to iTunes"
      ],
      "course_content": {
        "Introduction": [
          "Bootcamp Introduction"
        ],
        "Learning from others": [
          "Things you need to know starting your app business"
        ],
        "The importance of education to your success": [
          "The importance of an app education"
        ],
        "Getting started with developer accounts": [
          "Register with Apple",
          "Photoshop",
          "How to get free Microsoft Software",
          "How to make an app website",
          "Downloading xCode",
          "Register accounts online"
        ],
        "Finding great source code": [
          "Should you make or buy source code?"
        ],
        "Finding a great developer": [
          "Hiring great developers"
        ],
        "Finding a great artist and amazing images": [
          "Finding great artists"
        ],
        "How to manage your team": [
          "Team management"
        ],
        "What you need to know about iTunesConnect": [
          "iTunes Connect"
        ],
        "The Apple review process": [
          "The Apple review process"
        ]
      },
      "requirements": [
        "Enthuasism",
        "Curiousity"
      ],
      "description": "So you have decided you want to start to make iOS 7 iPhone apps but you're not sure where to start? Our 100% online training courses teach app entrepreneurs like you how to set up and grow your mobile app business.\nElaine Heney is the founder of www.thechocolatelabapps.com app developer blog and publisher of over 200 apps with 3+ million downloads. She created the renouned Chocolate Lab Online Learning App Courses, founder of Chocolate Lab Radio and is the bestselling author of two #1 books on app development and publishing. Elaine offers advice and practical knowledge to app publishers and developers around the world to make great apps, maximise downloads and revenue in her series of much raved about app courses.\nWe know you have got big questions like these:\n- What do I need to know to start making my first app?\n- Where do I need to sign up?\n- How to I find a great app idea?\n- Where do I hire iPhone developers and not get ripped off?\n- How can I upload my app to Apple?\n- Where can I find great app store keywords?\n- Can I really make money from this?\nThis course has all of the answers. Created by App Guru Elaine Heney from www.thechocolatelabapps.com Learn from someone who has done it already. This course is the ultimate education to get you moving fast.\n__________________________________________________\nCOURSE CONTENTS:\n- The importance of an app education\n- How to register in the Apple developer program as a iPhone developer\n- Why you NEED Photoshop! And where to get it.\n- FREE Microsoft software\n- Why you need an app website and how to make it fast & cheap!\n- The magic of iOS xCode\n- Real life examples of where to buy great source code\n- How to find a great developer (PRO TIPS)\n- How to find a great artist (EVEN MORE PRO TIPS)\n- Team management\n- How to navigate through iTunesconnect\n- App Store Optimization\n- The Apple review process and what you NEED to know.\n__________________________________________________\nFAST SIGN UP BONUS:\nGet Episode 1 of Chocolate Lab Radio which includes:\nPRESENTER: ELAINE HENEY, CEO Chocolate Lab Apps.\n- A “Behind the Scenes” look at the Chocolate Lab Apps\n- Why stress is normal in the app business\n- 2 hardest things I’ve learned to do when making apps\n- What you have to quit to be successful in this industry\n- 5 things you need to do to grow your app startup\n- Student Q&A\n- Over 1 hour of advice from App CEO Elaine Heney\n__________________________________________________\nGet started on your APP ADVENTURE today!\nBONUS: Get your FREE weekly app report from #1 Bestselling Author Elaine Heney at chocolateappexpress.com\nStill curious?\nCheck us out at the Chocolate Lab Apps blog.",
      "target_audience": [
        "Anyone who has not yet published an iPhone app"
      ]
    },
    {
      "title": "Creating Android App for Checking IP-Info",
      "url": "https://www.udemy.com/course/creating-android-app-for-checking-ip-info/",
      "bio": "Android Application in Java to get IP-Info and details.",
      "objectives": [
        "How to work with Android Studio",
        "Developing android application",
        "Fetch JSON Data from api to our android app",
        "Basic understanding of app development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to Android and Android Studio",
          "Course Introduction"
        ],
        "Setting up Android Studio": [
          "Installing Android Studio",
          "Creating new project",
          "Installing AVD"
        ],
        "Design the layout for app (How the app should look)": [
          "Layout for the app"
        ],
        "Writing the Logic (Java)": [
          "Code to get IP Address",
          "Code to get more information about IP Address"
        ],
        "Extra Insight": [
          "Adding logo shortcut",
          "Important Announcement"
        ]
      },
      "requirements": [
        "Basic understanding of Java is required"
      ],
      "description": "This Android Application Development in Java course is designed to help students understand and develop a basic Android application that can retrieve IP information and details.\nAndroid is an operating system for mobile devices, such as smartphones and tablets, that is based on the Linux kernel. It was first released in 2008 and is now the most widely used mobile operating system in the world. With Android, you can access the Google Play Store and download thousands of apps to your device.\nAndroid Studio is the official Integrated Development Environment (IDE) for Android development and is developed by Google. It’s free to download and use, and it has many features that make it easier to develop Android apps, such as a visual layout editor, a code editor, and a debugging tool.\n\n\nThe course will cover the following topics:\n\n\nIntroduction to Android and Android Studio\nSetting up an Android project and designing the user interface\nUnderstanding Intents, Activities and the Android lifecycle\nMaking HTTP requests to retrieve IP information and parsing JSON data\nDisplaying IP information in the app using UI elements\nDebugging and testing the app on an emulator or a physical device\nThe application developed will be able to get your IP address and some of the details related to the IP address.\nBy the end of the course, students will have a basic understanding of Android development and will have created a functioning app that can retrieve IP information. They will also have the foundation to continue learning and developing more complex Android applications.",
      "target_audience": [
        "Beginners interested in learning android app development"
      ]
    },
    {
      "title": "Build and Design Mobile App with Typescript & React Native",
      "url": "https://www.udemy.com/course/build-and-design-mobile-app-with-typescript-react-native/",
      "bio": "Learn how to build productivity task management and document scanner mobile apps using Typescript and React Native",
      "objectives": [
        "Learn the basic fundamentals of React Native, such as getting to know its use cases and technical limitations",
        "Learn how to build productivity task management app using Typescript and React Native",
        "Learn how to build document scanner app using Typescript and React Native",
        "Learn how to create app home screen layout",
        "Learn how to import dependencies and define data types",
        "Learn how to build app main components and state management",
        "Learn how to create functions to create, edit, and delete tasks",
        "Learn how to build productivity analytics dashboard",
        "Learn how to design app user interface",
        "Learn how to create task list display",
        "Learn how to create calendar component",
        "Learn how to style app components",
        "Learn how to create optical character recognition system using Tesseract JS",
        "Learn how to perform functional and performance testing"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction",
          "Table of Contents",
          "Whom This Course is Intended for?"
        ],
        "Tools & Resources": [
          "Tools & Resources"
        ],
        "Introduction to React Native": [
          "Introduction to React Native"
        ],
        "Creating Project Folder & Installing React Native": [
          "Creating Project Folder & Installing React Native"
        ],
        "Creating App Home Screen Layout": [
          "Creating App Home Screen Layout"
        ],
        "Importing Dependencies & Defining Data Types": [
          "Importing Dependencies & Defining Data Types"
        ],
        "Building App Main Components & State Management": [
          "Building App Main Components & State Management"
        ],
        "Creating Functions to Create, Edit, and Delete Tasks": [
          "Creating Functions to Create, Edit, and Delete Tasks"
        ],
        "Building Productivity Analytics Dashboard": [
          "Building Productivity Analytics Dashboard"
        ],
        "Designing App User Interface": [
          "Designing App User Interface"
        ]
      },
      "requirements": [
        "No previous experience in React Native is required",
        "Basic knowledge in Typescript and App Development"
      ],
      "description": "Welcome to Building and Designing Mobile App with Typescript & React Native course. This is a comprehensive project based course where you will learn how to build two mobile applications, the first one is a productivity task management app and the second one is a document scanner app. This course is a perfect combination between mobile app development and mobile app design, making it an ideal opportunity to practice your programming skills while improving your technical knowledge in Typescript. In the introduction session, you will learn the basic fundamentals of React Native, such as getting to know its use cases, technical limitations, and documentation. Then, in the next section, we will start the first project. We are going to build a productivity app that facilitates users to manage their daily tasks efficiently. This app will have three main features. The first feature is task creation and management, which allows users to create, edit, complete, and delete tasks, add task descriptions, assign a status such as not started, in progress, completed, and also set deadlines. This feature enables users to stay organized by keeping track of their responsibilities in a structured and customizable format. The second feature is Calendar for Deadline Reminder, which integrates a visual calendar to help users schedule and view task deadlines. This feature allows users to manage their time effectively by receiving timely reminders for upcoming tasks and due dates. The third feature is progress tracking analytics, which displays visual summaries and statistics that reflect task completion trends, including the percentage of tasks that are not started, in progress, and completed, based on that data, the system will assign productivity score for the users. This feature enables users to monitor their productivity levels by analyzing their task distribution over time, helping them identify patterns and improve time management based on real data. Afterward, in the second project, we are going to build a document scanner app that is able to extract text from images of documents using Optical Character Recognition technology. This mobile app will allow users to upload a photo or take a picture of a physical document, and then automatically detect and convert the content into editable and searchable text using Tesseract JS which is an open source OCR library that is well known for its high accuracy. The system will preprocess the uploaded image by adjusting contrast, removing noise, and converting it to grayscale. Once the text is extracted, it will be displayed in a clean, editable interface where users can review, modify, or copy the text. Lastly, at the end of the course, we will perform functional and compatibility testing to make sure the mobile apps have been fully functioning and all features are working as expected.\nFirstly, before getting into the course, we need to ask this question to ourselves, why should we build mobile apps using React Native? Well, here is my answer, React Native allows developers to write one codebase that runs on both iOS and Android. By having a shared codebase and UI components for both platforms, it significantly reduces development time and cost. It also offers a rich ecosystem of libraries, components, and community support, making it easier to build high quality apps with cutting edge features. Additionally, React Native provides a near native performance and seamless integration with native device functionalities, making it a great choice for both startups and enterprise level applications.\nBelow are things that you can expect to learn from this course:\nLearn the basic fundamentals of React Native, such as getting to know its use cases and technical limitations\nLearn how to build productivity task management app using Typescript and React Native\nLearn how to build document scanner app using Typescript and React Native\nLearn how to create app home screen layout\nLearn how to import dependencies and define data types\nLearn how to build app main components and state management\nLearn how to create functions to create, edit, and delete tasks\nLearn how to build productivity analytics dashboard\nLearn how to design app user interface\nLearn how to create task list display\nLearn how to create calendar component\nLearn how to style app components\nLearn how to create optical character recognition system using Tesseract JS\nLearn how to perform functional and performance testing",
      "target_audience": [
        "App developers who are interested in building productivity and document scanner apps using Typescript and React Native",
        "Tech entrepreneurs who are interested in building and launching their own mobile app"
      ]
    },
    {
      "title": "Best tools and practices of Xamarin Forms",
      "url": "https://www.udemy.com/course/best-tools-and-practices-of-xamarinforms/",
      "bio": "Chapters of Xamarin Forms development like MVVM, Prism, Data binding, Dependecy Injection, REST API and Plugins",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Data binding in Xamarin.Forms": [
          "The simple way",
          "How to update the UI with observables?",
          "Binding commands",
          "A nice pattern to handle ViewModels"
        ],
        "Comfortable coding with Prism": [
          "Automatic context creation and navigation",
          "Navigation with parameters",
          "How to bind an event to command with behaviors?",
          "Dependency injection in Prism"
        ],
        "Working with REST API": [
          "The Lazy way",
          "A well-designed approach"
        ],
        "Create a multilingual application": [
          "Reading localised text in C# code",
          "Using translated resources in XAML"
        ],
        "Plugins": [
          "Toast notification",
          "Geolocation",
          "Battery",
          "GSM and network information",
          "Onboard sensors",
          "Fingerprint"
        ],
        "Legal": [
          "List of creative commons"
        ],
        "BONUS": [
          "BONUS: RevDeBug 1-year long personal license"
        ]
      },
      "requirements": [
        "Basic programing in C#",
        "Basics of XAML",
        "Understanding of classes, objects and interfaces"
      ],
      "description": "Do you like mobile development? Android? IOS? Why not both? Once you decided to go cross-platform with Xamarin Forms - I offer you a nice collection of tools and practices. My expapnding course shows you the tips and tricks of Xamarin development and MVVM pattern. You will learn how to apply Data binding, viewmodel locator, and commands in XAML and C#.\nBy the end of the course you will:\nMaster data binding in Xamarin\nApply ViewModel Locator\nBind events to commands\nUse Prism framework\nBuild MVVM arhitectured software with or without Prism\nExploit the device capabilities like GPS, read network information, battery state, scan fingerprint etc...\nIf you would like me to add any topic to the list above, feel free to throw me a message.\nThank you for your time!",
      "target_audience": [
        "Any C# developer who wants to learn Xamarin",
        "Native Xamarin developers who are about to learn Xamarin Forms",
        "Former Android or IOS developers who want to go cross-platform"
      ]
    },
    {
      "title": "React Native Course: 7 Days To Complete App",
      "url": "https://www.udemy.com/course/7-days-of-code-react-native/",
      "bio": "Plan and build the entire app in 7 days! Use Javascript and React (React Native) to achieve that. No 3rd party dep used.",
      "objectives": [
        "Use React Native to create mobile apps fast",
        "Learn to plan the application from an idea to the complete product",
        "Improve coding skills in the mobile development",
        "Develop strong problem-solving skills for real-world scenarios"
      ],
      "course_content": {
        "Introduction": [
          "Preview",
          "Requirements",
          "How to approach the Lectures",
          "Planning",
          "Planning Addition"
        ],
        "Day 1 - App Layout": [
          "Introduction",
          "Setup Project",
          "Activity item and timer",
          "Home screen",
          "Data and Flat list",
          "Place the content to the top",
          "Add variables and container padding",
          "Override Text",
          "Highlight View",
          "Row and more stylings",
          "Timer color and Status Panel",
          "Pan handler Animation",
          "Spring to original position"
        ],
        "Day 2 - Activation": [
          "Introduction",
          "Monitor gesture state",
          "Activation callback",
          "Async storage",
          "Check if storage enabled",
          "Activate item",
          "Visual activation change",
          "One activation at the time",
          "Save data to storage",
          "Loading dots animation",
          "Loading dots improvements"
        ],
        "Day 3 - Timer": [
          "Introduction",
          "Tick function",
          "Accumulate time",
          "Stop timer",
          "Check for previous item",
          "Display timer",
          "Store updated time",
          "UX Improvements",
          "Handle browser refresh",
          "Handle mobile device saving"
        ],
        "Day 4 - Item Create": [
          "Introduction",
          "Flow Modal",
          "Add input to modal",
          "Reusable button",
          "Get new item data",
          "Display error and disable button",
          "Close and show the modal",
          "Add new item",
          "Max width of container",
          "Add button icon",
          "Disable scroll"
        ],
        "Day 5 - Item Detail": [
          "Introduction",
          "Item detail screen",
          "Full screen modal",
          "Detail screen layout",
          "Handle double click",
          "Set focused item",
          "Pass time into detail",
          "Delete Button Style"
        ],
        "Day 6 - Item Update/Delete": [
          "Introduction",
          "Editing Mode",
          "Item edit works",
          "Fix button position",
          "Prompt modal",
          "Prompt handler functions",
          "Delete works",
          "Display current date"
        ],
        "Day 7 - Tutorial and Wrap-up": [
          "Introduction",
          "Tutorial Screen",
          "Stepping",
          "Preview Item",
          "Swiping right",
          "Animation restart",
          "Handle step 2",
          "Preview item activity",
          "Timeout to restart state",
          "Step 3 Double tap",
          "Disable controls",
          "Hide tutorial",
          "Store watch status to storage",
          "Recap & Course End"
        ]
      },
      "requirements": [
        "Javascript or other OOP language basics needed!"
      ],
      "description": "What is React Native?\nReact Native is an open-source framework by Facebook for building cross-platform mobile apps using JavaScript and React. It allows developers to use a single codebase to create native-like experiences on iOS and Android, making it efficient and cost-effective.\n\n\nWhat application will you create?\nActivity tracker application. A user can create, manage, and track activities.\n\n\nIs this course right for me?\nYes, If you want to learn how to set goals and create the entire app in 7 days. Also, it would be best if you had an understanding of Javascript or React JS. This course is not for complete beginners.\n\nDay 1: Setting Up and Adding Animations\nOn the first day, we'll build our app layout using React Native. We'll focus on making it look good and add animations to activate and deactivate activities. By the end of the day, you'll have a visually appealing foundation for your mobile app.\n\n\nDay 2: Making Things Work and Saving Progress\nDay two is about making the app do things – activating and deactivating activities. We'll also learn to save our work, so even if we close the app, it remembers what we did. This ensures a seamless experience for users who want to pick up where they left off.\n\n\nDay 3: Keeping Track of Time\nOn the third day, we'll learn how to track time in our app. We'll use a simple method to measure how long we spend on each activity, providing valuable insights into time management for users.\n\n\nDay 4: Adding New Activities\nDay four is all about adding new activities to our app. We'll create a way for users to put in information about a new activity, and it will show up in the app. This enhances the app's versatility, allowing users to customize their experience.\n\n\nDay 5: More Details about Activities\nOn the fifth day, we'll make a page that shows more details about an activity when you tap on it. You can also delete activities from this page. This ensures users have a comprehensive view of their activities and the ability to manage them easily.\n\n\nDay 6: Editing and Deleting Activities\nDay six focuses on making our app better. We'll add a way to edit activity details and confirm if you want to delete an activity. This additional functionality enhances the user's control and interaction with the app.\n\n\nDay 7: Wrapping Up with a Tutorial\nThe last day is a big one! We'll create a tutorial to show people how to use our app in three simple steps: starting activities, stopping them, and checking the details. This tutorial not only concludes our course but equips users with a clear understanding of how to navigate and maximize the app's features.",
      "target_audience": [
        "Anybody interested in how to build an app in 7 days.",
        "People looking for a practical development guide",
        "This course is for everyone eager to understand how to build an app from scratch"
      ]
    },
    {
      "title": "iOS Development: Video, Audio & Image Integration with Swift",
      "url": "https://www.udemy.com/course/ios-development-video-audio-image-integration-with-swift/",
      "bio": "Integrate and manipulate images, videos, and audio in iOS apps using Swift, AVKit, AVFoundation, and SwiftUI.",
      "objectives": [
        "Beginner iOS Developers – Developers who have basic Swift knowledge and want to learn how to integrate multimedia features into their apps.",
        "Intermediate Swift Developers – Programmers who have experience with Swift and SwiftUI but want to explore media integration with AVKit and AVFoundation.",
        "Mobile App Developers – Developers looking to add audio, video, and image functionalities to their iOS apps for a richer user experience.",
        "Tech Entrepreneurs & Startup Founders – Entrepreneurs interested in building media-rich applications like TikTok, Spotify, or Instagram.",
        "Content Creators & Social Media App Developers – Developers who want to create video-sharing, podcasting, or live-streaming apps.",
        "Game Developers – Swift developers looking to integrate audio and video components into their mobile gaming projects.",
        "Freelance Developers & Consultants – Professionals who want to offer advanced media integration as a service to clients.",
        "Students & Aspiring App Developers – Computer science or software engineering students looking to gain practical experience in multimedia development.",
        "Developers Transitioning to iOS Development – Programmers from other languages or platforms (Android, web, etc.) looking to specialize in iOS media features.",
        "Educators & Trainers in Mobile Development – Instructors and mentors who want to expand their knowledge and teach students about media integration in iOS."
      ],
      "course_content": {
        "Introduction": [
          "Image Management and Display in iOS Apps",
          "Explain DispatchQueue and Queue Priority"
        ],
        "Manipulating and Displaying Images via Networking Service": [
          "Securing Your First Bearer Token and API key for the API Call",
          "Display Multiple Images from an API Call in a List.",
          "Loading Images Lazily in a List: The Correct Way",
          "Caching Images and Displaying in a List",
          "Explanation of Cancellables",
          "Display a List of Images Horizontally"
        ],
        "Displaying Video in an iOS App": [
          "Explanation of the Info.plist for Video",
          "Understanding AVKit",
          "Understanding VideoPlayer and AVPlayer",
          "Methods and Modifiers You Can Use with VideoPlayer",
          "How to Use 'addPeriodicTimeObserver' for AVPLayer",
          "How to Stream Video So That You Don't Wait for the Complete Download",
          "Creating a Scrolling Video Display: Understanding '_player' in the Initializer"
        ],
        "Working with Audio in an iOS App": [
          "Overview of Managing Audio in an iOS App",
          "Adding FeedKit to your project.",
          "AVPlayer and AVAudioPlayer",
          "Swift Package Manager (SPM) – Explained",
          "Streaming a Podcast with AVPlayer",
          "Conclusion and Course Summary"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift programming – You should have a foundational understanding of Swift syntax and basic programming concepts.",
        "Familiarity with Xcode – Experience with Xcode, including installing and running iOS apps on a simulator or device, is recommended.",
        "Mac Computer with macOS installed – A Mac is required to run Xcode and develop iOS applications.",
        "Basic understanding of iOS development – Knowing how to create simple iOS apps using UIKit or SwiftUI will help you grasp the course concepts faster.",
        "No prior multimedia experience required – You don’t need any prior experience with AVKit, AVFoundation, or media frameworks—everything will be taught from scratch.",
        "An Apple Developer Account (optional but recommended) – While not required, having an Apple Developer Account allows you to test apps on a physical iPhone or iPad.",
        "Curiosity and willingness to learn – This course is designed to help you build engaging iOS media apps, so enthusiasm and a problem-solving mindset are great assets.",
        "Stable internet connection – Since you’ll be working with media streaming, a good internet connection is helpful for testing video and audio playback.",
        "Xcode (latest version) installed – You’ll need Xcode installed to follow along with the coding exercises and projects.",
        "No prior iOS development experience? No problem! – While some Swift experience is helpful, beginners can follow along with guided lessons and hands-on exercises to learn everything from the ground up.",
        "Familiarity with SwiftUI (optional but helpful) – While not required, some experience with SwiftUI will make it easier to follow along with UI-related lessons.",
        "No advanced math or algorithms required – This course focuses on practical media integration, so you won’t need deep knowledge of data structures or algorithms.",
        "iPhone or iPad for testing (optional) – While the iOS simulator in Xcode is sufficient, having a real device will enhance your learning experience.",
        "Basic understanding of Object-Oriented Programming (OOP) – Concepts like classes, structs, and functions in Swift will be useful for structuring your projects.",
        "Patience and a hands-on approach – Working with multimedia can involve debugging playback issues, handling buffering, and optimizing performance—so a hands-on, problem-solving mindset is key!"
      ],
      "description": "Unlock the Power of Media in iOS Apps with Swift\nIn today’s mobile world, rich media experiences—including images, video streaming, and audio processing—are essential for engaging users. Whether you're building a TikTok-style video feed or a podcasting app, this course will teach you how to seamlessly integrate AVKit, AVFoundation, and SwiftUI into your iOS projects.\nThrough hands-on coding exercises, you will gain practical skills to build dynamic, high-performance media applications.\nWhat You’ll Learn\nWorking with Images in SwiftUI\nDisplay, edit, and manipulate images\nImplement lazy image loading for performance optimization\nIntegrating Video Playback & Streaming\nUse AVPlayer and VideoPlayer to play local and remote videos\nStream HLS videos for seamless playback\nImplement vertical scrolling video feeds similar to TikTok\nAutomatically play and pause videos when scrolling\nBuilding an Audio-Powered iOS App\nUse AVAudioPlayer to play local audio files\nImplement AVPlayer for streaming podcasts\nAdjust playback speed, seek through audio, and manage buffering\nBest Practices for Performance and Security\nOptimize media loading for smooth user experiences\nManage App Transport Security (ATS) settings in Info.plist\nProperly handle memory usage when dealing with media files\nWho Is This Course For?\niOS developers looking to enhance their apps with multimedia features\nSwift developers interested in video streaming, podcasting, and real-time audio effects\nCreators wanting to build interactive media apps like TikTok, Instagram, or Spotify\nBy the end of this course, you will have the skills to create powerful, media-rich iOS applications and take your Swift development to the next level.\nStart learning today and build engaging media experiences in iOS apps with Swift.",
      "target_audience": [
        "Aspiring iOS Developers – If you’re just starting your iOS development journey and want to learn how to integrate media features into your apps, this course is for you.",
        "Intermediate Swift Developers – Developers who already know the basics of Swift and want to expand their skills by integrating images, video, and audio into their iOS applications.",
        "iOS Developers Looking to Enhance Their Apps – If you’re an iOS developer looking to add multimedia functionality like video streaming, podcast playback, or interactive media, this course covers it all.",
        "Freelance Developers & Consultants – If you build iOS apps for clients, learning how to implement media features will help you deliver richer, more engaging applications.",
        "Students & Computer Science Learners – If you’re a student learning Swift or mobile development, this course provides practical, real-world applications of multimedia programming.",
        "Startup Founders & Entrepreneurs – If you have an idea for a media-rich app like TikTok, Instagram, or Spotify and want to understand how to implement video and audio functionality, this course is a great start.",
        "Self-Taught Developers Looking to Specialize – If you’ve been learning Swift through tutorials and personal projects and want to specialize in multimedia development, this course will deepen your expertise.",
        "Developers Transitioning to iOS – If you have experience in Android, web, or other platforms and want to break into iOS development with a focus on media-rich applications, this course is ideal.",
        "App Designers & UI/UX Enthusiasts – If you’re a designer interested in how video, audio, and images can be integrated into interactive experiences, this course provides practical insights.",
        "Educators & Trainers in Mobile Development – If you teach Swift or mobile development and want to add media-related topics to your curriculum, this course provides structured learning materials.",
        "Game Developers Working with iOS – If you're creating games and need to integrate audio effects, background music, or video content, this course offers essential multimedia techniques.",
        "Tech Hobbyists & Tinkerers – If you love experimenting with new technologies and want to build fun, engaging iOS apps with media integration, this course is a perfect learning resource."
      ]
    },
    {
      "title": "Android App Development : Build Modern Radio / Music Player",
      "url": "https://www.udemy.com/course/build-radio-music-player-from-scratch-android-studio-2024/",
      "bio": "Create Your Own Radio and Music Apps for Android: A Complete Tutorial | JAVA",
      "objectives": [
        "Designing Industry-Grade UI: Learn to craft polished user interfaces for professional-grade online radio apps.",
        "Implementing Online Music Streaming: Master the techniques to seamlessly stream music and radio content from online sources.",
        "Perfecting Coding Skills: Develop expertise in writing clean, efficient code for robust and reliable app functionality.",
        "Advanced App Development Techniques: Explore additional features and optimizations to elevate your online radio app to the next level.",
        "Managing Large-Scale Projects: Gain insight into effective project management strategies tailored for handling substantial endeavors like building a comprehensi"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting Up Your Android Studio Project for Radio App Development": [
          "Setting Up Your Android Studio Project for Radio App Development"
        ],
        "Designing the Bottom Navigation for Radio App": [
          "Designing the Bottom Navigation for Radio App"
        ],
        "Implementing Fragments in Radio App": [
          "Implementing Fragments in Radio App"
        ],
        "Handling Bottom Navigation Bar Clicks in Radio App": [
          "Handling Bottom Navigation Bar Clicks in Radio App"
        ],
        "Adding Images to Radio App Project": [
          "Adding Images to Radio App Project"
        ],
        "Designing the Home Screen UI": [
          "Designing the Home Screen UI Part 1",
          "Designing the Home Screen UI Part 2",
          "Designing the Home Screen UI Part 3"
        ],
        "Implementing Station Playback Functionality": [
          "Implementing Station Playback Functionality"
        ],
        "Designing the Player Screen UI for Radio App": [
          "Designing the Player Screen UI for Radio App"
        ],
        "Setting Up the Player Screen in Radio App": [
          "Setting Up the Player Screen in Radio App"
        ]
      },
      "requirements": [
        "No programming expertise required! Everything you need to know, from UI design to advanced coding techniques, is covered in this course.",
        "A Computer with Good Internet Connection"
      ],
      "description": "Welcome to the ultimate Android app development course where you will learn how to create your very own online radio and music player app from scratch. Whether you’re a beginner or have some experience in app development, this course is designed to take you through every stage, ensuring you gain practical knowledge and essential skills in building functional mobile applications.\nIn this step-by-step course, we will teach you how to use Android Studio and Java to design and develop an intuitive, user-friendly radio app. From creating a visually appealing layout to adding advanced features like play controls, volume adjustments, and a customizable equalizer, you will learn how to enhance the user experience and functionality of your app.\nWe will dive deep into streaming radio stations and integrating online content, helping you understand the core aspects of building a streaming application. By the end of this course, you will be able to stream live stations, manage media controls, and ensure smooth user interactions.\nThis course is packed with practical exercises and real-world examples that will help you apply your learning directly. We’ll also cover best practices, performance optimization, and essential Android development concepts that will prepare you to build any app in the future.\nWhether you want to build a personal project, freelance, or even create apps for clients, this course will equip you with everything you need to create polished, professional Android radio apps.\nEnroll now and start mastering Android app development with hands-on projects that will make you feel confident and ready for the real world.\n\n\nKey Features:\nLearn to create a fully functional radio app from scratch\nMaster Android Studio and Java for app development\nAdd interactive features like play controls, volume adjustments, and equalizers\nStream live radio stations and handle online content integration\nBuild a professional-looking app with user-friendly UI design\nHands-on coding exercises and real-world app development experience\nPerfect for beginners and intermediate developers\n\n\nWhy Choose This Course?\nIn this course, you’ll not only learn how to create a music player or radio app, but also gain in-depth knowledge of Android development practices. We focus on practical skills and offer clear, easy-to-understand lessons. Whether you're creating an app for fun or as part of your portfolio, you'll finish this course with the expertise to develop apps that stand out.",
      "target_audience": [
        "Perfect for beginner Java and Android developers eager to dive into Android Studio, this course guides you through creating music player and online radio apps from scratch."
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/reskinning-monetize-your-app-hands-on-major-advertising-networks/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Mastering SwiftData in iOS 18 & SwiftUI",
      "url": "https://www.udemy.com/course/mastering-swiftdata-in-ios-18-swiftui/",
      "bio": "Build Data-Driven iOS 18 Apps with SwiftData & SwiftUI Mastery\"",
      "objectives": [
        "Data Management with SwiftData: How to effectively use SwiftData for managing data in iOS 18 apps, covering data storage, fetching, and updating techniques.",
        "SwiftUI Integration: Techniques for seamlessly integrating SwiftData with SwiftUI to build dynamic, data-driven UIs.",
        "Advanced Data Handling: Best practices for handling large data sets, implementing complex data relationships, and optimizing data performance in iOS apps.",
        "Real-World Project Applications: Hands-on experience in creating and managing data-heavy projects, focusing on creating efficient, scalable, and maintainable iO"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "SwiftData vs CoreData"
        ],
        "Grocery App": [
          "Data Model",
          "Model Container",
          "Model Context Configuration",
          "Insert operation : Add New Grocery Item",
          "Fetch Data using Query"
        ],
        "ToDo App": [
          "SwiftData with Previews",
          "Insert Operation in Mock Container"
        ],
        "Contact List App": [
          "Preview Modifier & Data Model",
          "Preview Provider Traits & Contact List"
        ]
      },
      "requirements": [
        "Knowledge of SwiftUI",
        "Knowledge of Swift"
      ],
      "description": "Unlock the power of data-driven iOS app development with Mastering SwiftData in iOS 18 & SwiftUI! This course takes a deep dive into SwiftData, Apple's latest framework introduced at WWDC23 and more capabilities added in WWDC24, designed for seamless data management and effortless integration with SwiftUI. As iOS applications continue to evolve, efficient data handling has become a critical component for delivering exceptional user experiences. Whether you’re an experienced developer or an intermediate iOS enthusiast, this course will give you hands-on expertise to harness the full potential of SwiftData in your iOS 18 projects.\nStarting with the fundamentals, we’ll explore the core principles of SwiftData and how it simplifies the complexities of data storage, fetching, and updating. Moving forward, you'll learn how to integrate SwiftData with SwiftUI to create responsive and dynamic interfaces. The course emphasizes building real-world applications, where you’ll gain practical experience managing complex data relationships, optimizing performance, and applying best practices to ensure your apps run smoothly.\nWe’ll also cover advanced data handling techniques discussed at WWDC24, providing you with insight into handling large data sets, implementing custom data models, and optimizing data queries to enhance app performance. By the end, you'll be able to confidently architect scalable and maintainable iOS apps with SwiftData at their core.\nThis course is perfect for those who want to stay up-to-date with the latest advancements from WWDC24, using iOS 18’s cutting-edge features to elevate their development skills. By learning how to leverage SwiftData with SwiftUI, you’ll be prepared to build modern, efficient, and data-rich applications that meet the demands of today’s users. Join us and take a significant step forward in mastering data-driven app development on Apple’s latest platform!",
      "target_audience": [
        "This course is ideal for iOS developers who want to deepen their expertise in data management with SwiftData and take full advantage of iOS 18's latest features. It’s perfect for those familiar with Swift and SwiftUI who are looking to build more efficient, data-driven applications. Whether you’re an experienced developer aiming to expand your skills in data handling or an intermediate developer ready to elevate your SwiftUI projects, this course provides hands-on experience and best practices for real-world applications. By course end, you'll be equipped to create highly performant, scalable iOS apps leveraging SwiftData and SwiftUI together."
      ]
    },
    {
      "title": "Introduction to Flutter",
      "url": "https://www.udemy.com/course/introduction-to-flutter/",
      "bio": "Flutter basics",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basics of any language"
      ],
      "description": "Deliverables\nThis course will give you an understanding of how can we create a mobile application using Flutter. The following are some of the topics covered in this course:\nSetting up environment\nBuilding basic UI\nAdding logic to the code\nKnow basic Widgets used in Flutter\nForm elements, validation and submission\nNavigation through screens\nWorking with JSoN data\nBuilding a complete application\nWhat you’ll learn\nDart\nFlutter\nAre there any course requirements or prerequisites?\nNo requirements.",
      "target_audience": [
        "Beginner flutter enthusiasts"
      ]
    },
    {
      "title": "The Complete Android Oreo(8.1) , N ,M and Java Development",
      "url": "https://www.udemy.com/course/the-complete-android8-oreo-nougat-m-java-development/",
      "bio": "Learn Android App Development with Android 8 Oreo by building real apps . Migrating existing app to Android Oreo ,Nougat",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Welcome Message"
        ],
        "Download Android Studio and project setup": [
          "Introduction to Android Studio",
          "Prerequiste Software tools for studio set up",
          "Download and Install JDK (java development Kit)",
          "How to get Android Studio Installer for Windows, Mac and Linux",
          "Download and Install Android Studio IDE",
          "Configuring essential packages for Android Studio",
          "Studio features vs Eclipse"
        ],
        "Android Studio Code Development Tour": [
          "Create first Project in Android Studio",
          "Navigate Project elements and debug code in Studio",
          "Project View Android Studio Project files",
          "Tips for using shortcuts during code development in Studio"
        ],
        "Device Creation for running Android App": [
          "How to Create Android Virtual Device for app",
          "What is GenyMotion -Installation and Configuration for Android App",
          "Virtual Device Creation to run GenyMotion Device manager",
          "Integrate GenyMotion with Android Studio to run app on various mobile devices",
          "Create different Android devices in GenyMotion to run app"
        ],
        "Java Programming for Android App Development": [
          "Introduction to Java modules",
          "Writing first Java class in Android Studio",
          "Execute Java class , Debug and Fix errors in Android Studio",
          "Introduction of Java Variables in Java Class files",
          "Implementation of String Variable in Java Class file",
          "Int Variable implementation and Error fixing in Java Class",
          "Introduction to double variable and Concatenation of String , Int and double Var",
          "Java Coding Standards ,Commenting and Refactoring the code",
          "Conditional Statements IF/ ELSE in Java code",
          "Boolean Variable for IF/ELSE condition in Java Code",
          "Understanding Classes and Objects by writing Java Code",
          "Create Java class to calculate Bank Account details of different Holders",
          "Create different Objects and another Class for Bank Account class",
          "Constructors in Java and using it in Bank Account Java class",
          "Introduction of Arrays in Java",
          "Implement Single Dimensional Array in Java code-Part 1",
          "Array Implementation and fixing errors -Part 2"
        ],
        "Build Quiz App in Android": [
          "Course goals for Quiz App Development",
          "Introduction to Quiz App",
          "Project set up for Quiz App",
          "How to embed methods for Quiz App development",
          "Set up methods Oncreate for Quiz app",
          "Accessing Views and Auto Import implementation for Quiz App",
          "Integrate layout with Java class and Text view configuration",
          "Adding OnClicklistener to a Button for populating answers",
          "Create another Java class to store Answers",
          "Introduction to layout types for app development",
          "Different Layout types and usage",
          "Implementing Linear layout",
          "What is Relative layout",
          "Configuring Relative layout for Quiz App",
          "Introduction to Table layout",
          "Designing Calculator App using Table layout",
          "Frame Layout Implementation in App",
          "Run Quiz App in AVD",
          "Run Quiz App in GenyMotion for different Mobile devices"
        ],
        "Whats new in Android M": [
          "Introduction to Android M,N and O section",
          "What all we will cover for Android M , N and O",
          "Android API set up in Studio for Android M",
          "Introduction to Android M features",
          "Permission Model for Android M phones",
          "Smart Link ,Memory Management ,Doze features",
          "FingerPrint API, Backup and Text Select ,Delete"
        ],
        "Build CheckPermission App for Android M, N and O": [
          "Sequence of Steps for App development",
          "How Check Permission App works to get device location",
          "Project set up for Android M , N and O",
          "Configuring layout file for CheckPermission App",
          "Construct Activity file for App",
          "Integrate Activity and Layout files and run it emulator"
        ],
        "Android N features and Execute App for Nougat Devices": [
          "What is Android N",
          "Android N feature highlights",
          "Implement App shortcut feature",
          "Implement New professional Emojis,Storage Manager Intent",
          "Background Optimization and Screen Zoom",
          "Execute App in Android N platform"
        ],
        "What's new in Android O -August 2017 release": [
          "Introduction to Android O",
          "What is Android Go",
          "Android O highlights -Final release"
        ]
      },
      "requirements": [
        "No previous programming experience,only your ENTHUSIASM to learn",
        "A Windows or Mac with at least 10 GB of free space",
        "OS version - Windows 10/8/7 (32- or 64-bit)",
        "Minimum 3GB RAM, 8 GB RAM recommended",
        "Free Disk space 500 MB for Android Studio installation",
        "At least 1.5 GB for Android SDK, emulator system images, and caches"
      ],
      "description": "Do you want to be Android 8 Oreo , Android 7 Nougat ,Android 6 Marshmallow App developer. You don't need to worry at all , the apps I will build will be for all Android's latest versions i.e. Android O, N and M.I am going to cover everything from scratch from very basic Android app development and then move to building  advanced app .I will also be telling you Java from Android development perspective and how you can do app development. So for my course you don't need any prior coding experience as I am going to cover everything in my course which is required to become an advanced Android App developer. I already have build many android apps which are live on on Google playstore and  earning very good  revenue about which I will be discussing in my tutorials.",
      "target_audience": [
        "Anyone who wants to be an Android Oreo , Nougat , Marshmallow app developer",
        "Anyone who wants to learn Java from Android development prespective",
        "Anyone who is a beginner and had no coding experience",
        "Anyone who is a advanced developer and has good coding experience"
      ]
    },
    {
      "title": "Become an Android Developer from Scratch",
      "url": "https://www.udemy.com/course/become-an-android-developer-from-scratch/",
      "bio": "Simply the best place to start learning Android Development.",
      "objectives": [],
      "course_content": {
        "Welcome Video": [
          "Welcome Video",
          "Why Android Studio?",
          "The Best Tools To Develop Your App",
          "Getting the most out of this course"
        ],
        "Reading Java: Find the clues in the code (WEEK 1A)": [
          "Say Goodbye to \"Hello World\"",
          "From Applications to code",
          "Files, Packages, Classes, Methods",
          "Syntax Symbols",
          "Method Signatures",
          "Data Types, Variables",
          "What does a \"code detective\" do?",
          "Visualizing Java"
        ],
        "Computer Memory: Think like your machine (WEEK 1B)": [
          "Memory Lockers",
          "Introduction to Computer Memory",
          "Computer Memory: Primitives",
          "Computer Memory: References And Null",
          "Android Studio: Out Of The Box",
          "Android Studio: First Look",
          "APP DEMO: Bartalk and Android Studio Setup Instructions",
          "APP DEMO: Delta Bookshelf"
        ],
        "Data Structures And Collections: Know your stuff (WEEK 2)": [
          "Arrays",
          "Lists",
          "Sets",
          "Maps",
          "Objects and \"new\"",
          "Constructors and Allocation",
          "Garbage Collection and \"null\""
        ],
        "Control Flow: Stop time and direct traffic (WEEK 3)": [
          "Operators and Assignments: bitwise and unary",
          "The \"return\" statement",
          "The if Statement",
          "else/elseif",
          "The \"for\" loop",
          "Nested for loops",
          "The \"while\" loop",
          "The \"break\" and \"continue\" statements",
          "The \"switch\" statement",
          "Compiling and Debugging",
          "What's first, next, now, later: Interpreting control flow statements",
          "Stack Versus Heap",
          "Control Flow Visual Aids",
          "CHALLENGE: Pangrams!",
          "CODE ALONG: Pangrams!"
        ],
        "Object Orientation: Recycle code (WEEK 4)": [
          "Encapsulation and Thisness",
          "Scope and Accessibility Keywords",
          "Setters, Getters and Autogeneration",
          "Inheritance, Polymorphism, \"@Overide\" and \"super\"",
          "The \"static\" and \"final\" keywords",
          "Using Enhanced for loops (for each loops) In Collections",
          "Objects Visual Aids",
          "CHALLENGE: Make A Comedian Robot",
          "CODE ALONG: Make A Comedian Robot"
        ],
        "Data Manipulation: Write independent, dependable code (WEEK 5)": [
          "All These Powerful Tools!",
          "Abstract Classes",
          "Interfaces",
          "Callbacks With Interfaces",
          "Typecasting",
          "Generics",
          "CHALLENGE: Making the Switch",
          "CODE ALONG: Making the Switch",
          "APP CHALLENGE: Update the Pet Adoption App",
          "CODE ALONG: Update the Pet Adoption App"
        ],
        "Android UI: Know your user (WEEK 6)": [
          "The Super 6: Mobile Design Principles",
          "XML Basics",
          "Introduction to Layouts",
          "Linear Layouts",
          "Relative Layouts",
          "Margins and Padding",
          "Gravity and Layout Gravity",
          "Adding Images",
          "Event Listeners Using Anonymous Classes",
          "CHALLENGE: Change the Button",
          "CHALLENGE: Make a Full Android UI",
          "CODE ALONG: Make a Full Android UI"
        ],
        "Activities and Intents: Know your Android OS (WEEK 7A)": [
          "Activities and Intent Basics",
          "The Activity Lifecycle",
          "APP DEMO: Activity Lifecycle Watcher",
          "CHALLENGE: Switching Activities",
          "CODE ALONG: Switching Activities",
          "Passing Data With Intents",
          "CHALLENGE: Data Mover",
          "CODE ALONG: Data Mover",
          "Intent Filters and Implicit Intents",
          "CHALLENGE: Harnessing The Android App Ecosystem",
          "CODE ALONG: Harnessing The Android App Ecosystem"
        ],
        "Listviews: Get your scroll on! (WEEK 7B)": [
          "Introduction To Listviews",
          "List View Visual Aid",
          "Basic Listviews",
          "CHALLENGE: Build a Basic ListView",
          "CODE ALONG: Build a Basic ListView",
          "Listviews With Custom Adapters",
          "CHALLENGE: Build a Custom ListView",
          "CODE ALONG: Build a Custom ListView",
          "Using The Holder Pattern and View Tags",
          "CHALLENGE:Build Professionally Smooth ListViews",
          "CODE ALONG: Build Professionally Smooth Listviews"
        ]
      },
      "requirements": [
        "Modern laptop or computer"
      ],
      "description": "Do you want to build applications for the most popular operating system in the world?\nDo you want the opportunity to put your apps on over 1 billion devices?\n\"Become An Android Developer From Scratch” is designed to be the best first step to launching your career as an Android Developer. Whether you've never programmed before or are coming to mobile development for the first time, if you're truly inspired to learn Android Development, this is where you need to start.\nThis course has been in development for over two years, continuously perfected through research and testing in training bootcamps throughout the US. It represents a collaboration between a professional educator with over 20 years of experience in helping people learn and a professional mobile developer who has helped companies like Sony, Verizon, and nVidia build stunning mobile applications.\nStarting with how the Java programming language works and progressing all the way to advanced Android concepts, you will get expertly produced instruction, visually descriptive explanations of deep concepts, screencasts that talk you through not just the “how” but also the “why,” and code challenges to test yourself and mark your progress.\nHere’s what students are saying:\n“Very clean and well done. Covers everything that you need to know for getting started whether you know how to code starting out or not. If you are at a loss trying to start making android apps this is the course for you.”\n“I like this course, this would transform any normal person to a full fledged android developer.”\n“This one is, by far, the most comprehensive, easy-to-follow, and genuinely well put together one of the bunch.”\n“Inspirational! - got me over the hump (complete android beginner)”\nWhy it’s working...\nOne of the things we're most excited to offer with this course is access to the inner workings of the mind of a professional mobile developer. Throughout the course you will be able to listen in as our Learning Scientist teases apart all the thoughts that run through a professional mobile developer’s mind as he’s writing the code you will learn to create. It’s like sitting down in a movie with the writer, director, and lead actor. But in this case, it’s all in support of your transformation from novice to professional.\nYou will build several applications throughout the course, and the starting point for each project (as well as solutions to each challenge) will be available for download. You will also get all the visuals and info-graphics used throughout the course for reference and study.\n\"Become An Android Developer From Scratch\" will give you a new, richer perspective on how mobile devices work. After you’ve completed this rigorous, challenging, and super fun course, you will be able to create your own apps, deploy to the Google Play store, and even interview for a job anywhere in the world.\nThe real value...\nThe most important thing you will get from completing this course is the confidence to say “I’m an Android Developer!” You’ll be able to interact with other students and professionals in the Android community with pride and self-assuredness. You’ll also become an independent learner, able to discern where to go for information and how to continue advancing your skills.\nNo course is going to make you into an expert. It’s up to you to challenge yourself and find your path to making the apps you dream about. Become an Android Developer from Scratch is the best place to begin. Are you ready to get started?",
      "target_audience": [
        "Beginners",
        "Web developers looking to get into mobile",
        "Programmers who haven't programmed in Java",
        "Aspiring Android developers",
        "Anyone with a good idea and the drive to create it"
      ]
    },
    {
      "title": "SwiftUI 6 & MVVM Bootcamp: Build a RESTful iOS 18 App",
      "url": "https://www.udemy.com/course/swiftui-6-and-mvvm-creating-restful-ios-18-applications/",
      "bio": "Master SwiftUI 6, MVVM Architecture & Concurrency by Building a Real iOS App",
      "objectives": [
        "Build modern iOS 18 apps using SwiftUI 6 and MVVM architecture",
        "Integrate RESTful APIs using SwiftUI concurrency and async/await",
        "Design dynamic, responsive UIs with lists, carousels, grids, and animations",
        "Structure real-world apps with scalable, maintainable code patterns"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "xCode Intro",
          "SwiftUI Intro"
        ],
        "Basics of SwiftUI": [
          "Section Overview",
          "Text",
          "Image",
          "Shapes",
          "Stack",
          "Grid",
          "Buttons",
          "State",
          "Binding",
          "Animation",
          "List",
          "Navigation Stack"
        ],
        "MVVM": [
          "Section Overview",
          "What is MVVM?",
          "MVVM with SwiftUI iOS 16",
          "MVVM With SwiftUI iOS 16 Example",
          "MVVM with SwiftUI 6 and iOS 17 and above",
          "MVVM with SwiftUI 6 and iOS 17 and above example"
        ],
        "SwiftUI Concurrency": [
          "Section Overview",
          "Swift Concurrency",
          "SwitfUI Concurrency with Restful API example"
        ],
        "Real World App": [
          "Section Overview",
          "Flags Explorer Main - Background view",
          "Flags Explorer Main Card UI",
          "Flags Explorer Carousel - Model & ViewModel",
          "Flags Explorer Carousel - View",
          "Flags Details View - Background view",
          "Flags Details View - Header & Footer",
          "Flags Details View - Model & ViewModel",
          "Flags Details View - Grid View",
          "Quiz View - Background View",
          "Quiz View - Model & ViewModel",
          "Quiz View - Game UI",
          "Quiz View - Game Completion UI",
          "Source Code - Final Project"
        ],
        "Thank You!!": [
          "Bonus - Additional Resources",
          "Thank You!"
        ]
      },
      "requirements": [
        "Basic knowledge of Swift programming"
      ],
      "description": "Build a production-ready iOS 18 app with SwiftUI 6, MVVM, and async/await – all in under 5 hours.\nWhether you're a budding iOS developer or looking to upgrade your SwiftUI skills, this focused bootcamp will help you master modern app architecture and real API integration — fast.\nWhat you’ll learn:\nMaster modern MVVM structure (including SwiftUI 6’s enhancements)\nFetch data from real RESTful APIs using Swift’s async/await\nBuild dynamic, animated UIs with SwiftUI 6\nComplete a portfolio-ready project to impress clients or hiring managers\nAre you ready to build modern, scalable iOS applications using the latest SwiftUI 6 and MVVM architecture? This hands-on course is designed for developers who want to take their skills to the next level by creating production-ready apps compatible with iOS 18 and beyond.\nYou'll start with a quick tour of Xcode and SwiftUI fundamentals — including text, images, navigation, lists, and animations — before diving into the MVVM pattern. We’ll explore both iOS 16-style MVVM and SwiftUI 6’s new data-driven enhancements introduced in iOS 17+.\nNext, you'll learn how to fetch and display live data using Swift’s modern concurrency model (async/await), enabling clean, responsive networked applications.\nFinally, you’ll bring it all together by building a real-world app — Flags Explorer — with:\nA sleek card-based UI\nAnimated carousels and grid views\nInteractive detail pages\nA dynamic quiz feature with scoring logic\nYou’ll also gain real-world iOS development patterns used by professionals, along with best practices for app architecture, code structure, and SwiftUI design.\nBonus: This course will be updated with future iOS versions to keep your skills current and market-ready.\nHere's what you'll build and practice:\nSwiftUI 6 fundamentals: Views, state, bindings, and animations\nMVVM architecture (classic + SwiftUI-enhanced)\nRESTful API integration with async/await\nFull-featured app with clean code and reusable components\nInterview-ready and App Store-ready codebase\nBy the end of this course, you'll be confidently building clean, modern iOS apps using the latest SwiftUI tools — ready to showcase in interviews, client demos, or your developer portfolio.",
      "target_audience": [
        "This course is ideal for iOS developers who already have a basic understanding of Swift and want to level up by building real-world, modern iOS applications using SwiftUI 6 and MVVM architecture."
      ]
    },
    {
      "title": "App Store Optimization Masterclass: Rank & Grow Fast",
      "url": "https://www.udemy.com/course/aso-masterclass/",
      "bio": "Learn proven ASO strategies to boost visibility, increase organic downloads, and grow your app to the top charts.",
      "objectives": [
        "Master the full ASO lifecycle—from keyword research to conversion rate optimization—across both iOS and Android platforms.",
        "Design high-converting app store listings using proven strategies for metadata, visuals, and localized content that drive organic installs.",
        "Leverage real-world ASO tools like AppTweak, Sensor Tower, MobileAction, and more to analyze competitors. uncover growth opportunities, and automate optimizatio",
        "Develop and execute a scalable ASO strategy that integrates with your broader growth and monetization efforts to reach 1M+ downloads."
      ],
      "course_content": {
        "ASO Foundations (Beginner Level)": [
          "What Is ASO? Why It Matters in 2025",
          "How the App Store & Google Play Algorithms Work",
          "Key Metrics That Define ASO Success",
          "Types of ASO: Organic vs Paid Impact",
          "Case Study: The Rise of Top ASO-Optimized Apps"
        ],
        "Keyword Mastery": [
          "Keyword Research Fundamentals",
          "Keyword Tools Deep Dive (AppTweak, SensorTower, MobileAction)",
          "Search Volume vs Competition: Choosing the Right Keywords",
          "Creating a Keyword Strategy from Scratch",
          "Real-Time Keyword Tracking & Analysis"
        ],
        "Metadata That Converts": [
          "Crafting the Perfect App Title & Subtitle",
          "Writing High-Converting Descriptions (iOS vs Android)",
          "Localizing Metadata for Global Reach",
          "A/B Testing Metadata for Maximum CTR",
          "Common Metadata Mistakes That Kill Downloads"
        ],
        "Visual Optimization": [
          "Icon Psychology: Designing for Taps",
          "Creating Scroll-Stopping Screenshots",
          "App Preview Videos: How to Nail the First 5 Seconds",
          "Design Trends That Boost Install Rates",
          "Visual Localization: Adapting Creatives by Country"
        ],
        "Ratings, Reviews & Retention": [
          "How Ratings Affect Rankings",
          "Getting Reviews Ethically & at Scale",
          "Managing Negative Reviews like a Pro",
          "Boosting Retention to Support ASO",
          "Leveraging User Feedback for Iterative ASO"
        ],
        "Advanced Tools & Data": [
          "Google Play Console & App Store Connect Essentials",
          "Custom Product Pages & In-App Events",
          "Cohort Analysis for ASO Success",
          "Tracking Attribution & Uninstall Data",
          "ASO Dashboards: Automating Your Reports"
        ],
        "Competitive Intelligence & Trends": [
          "Spying on Competitors’ ASO Tactics",
          "Emerging ASO Trends in 2025",
          "Integrating ASO with Paid UA (User Acquisition)",
          "Launch Strategy for New Apps (ASO from Day One)",
          "What ASO Looks Like in Soft Launch vs Global Launch"
        ],
        "Scaling & Monetization": [
          "App Monetization Models That Support ASO",
          "Scaling to 1M+ Downloads Sustainably",
          "Building an ASO Team or Agency",
          "Creating a Recurring Growth Framework",
          "The ASO Blueprint: Your 12-Month Game Plan"
        ]
      },
      "requirements": [
        "No prior ASO experience needed—this course starts from the ground up and guides you all the way to expert level.",
        "A basic understanding of how mobile apps work and are distributed (iOS or Android).",
        "Access to a mobile app (yours or a client’s) to apply what you learn is recommended, but not required.",
        "Optional: Access to ASO tools like AppTweak, Sensor Tower, or MobileAction for advanced modules. Free trial versions are sufficient."
      ],
      "description": "Unlock Explosive Organic Growth with the Most Complete ASO Course Ever Created\nAre you struggling to get your app noticed in the crowded app stores? Tired of spending on ads that don’t deliver long-term growth? You’re not alone—and that’s exactly why this course exists.\nApp Store Optimization Masterclass: Rank & Grow Fast is the most comprehensive, up-to-date ASO course on the market—taught by the #1 ASO expert you’ll ever learn from (yes, that’s you). Whether you’re launching your first app or managing a portfolio of products, this course gives you the exact blueprint to dominate the App Store and Google Play rankings, drive more organic installs, and scale sustainably.\nThis course contains the use of artificial intelligence, to boost your learning experience.\nInside, you’ll go from fundamentals to advanced strategy. You’ll learn how the app store algorithms actually work, how to uncover high-impact keywords, and how to design visuals that convert at first glance. You’ll master tools like AppTweak, Sensor Tower, and MobileAction—and learn how to analyze competitors, track performance, and iterate faster than anyone else in your category.\nBy the end of this course, you’ll have a fully operational ASO system that brings in downloads every single day—without buying ads.\nWhat You’ll Learn:\nHow to craft metadata and visuals that boost visibility and conversion\nStep-by-step keyword research using pro-level ASO tools\nHow to earn and manage reviews that skyrocket your rankings\nGlobal localization strategies to tap into new markets\nHow to launch and scale apps with ASO-first strategies\nWho This Course Is For:\nApp developers, indie creators, marketers, and founders\nAgencies and teams managing multiple apps\nAnyone looking to build long-term, organic mobile growth\nNo Experience? No Problem.\nYou’ll start with the basics and level up fast. No prior ASO experience is required. All you need is a drive to grow and either an app—or the intention to build one.\nWhether you’re a solo indie dev or scaling the next big startup, this masterclass gives you every tool, tactic, and strategy you need to win the ASO game in 2025 and beyond.\nEnroll now and build an ASO engine that runs 24/7—while your competitors are still guessing.",
      "target_audience": [
        "App developers, indie creators, and product managers who want to drive more organic installs without relying solely on paid ads",
        "Mobile marketers and growth teams looking to master the latest ASO strategies to improve rankings, conversion rates, and user retention",
        "Startup founders and solopreneurs launching new apps and needing a clear, proven ASO playbook from day one",
        "ASO professionals and agencies ready to upgrade their skills, scale their results, and stay ahead of the competition in 2025 and beyond"
      ]
    },
    {
      "title": "iPhone App Development in 2 Hours",
      "url": "https://www.udemy.com/course/iphone-app-development-in-2-hours/",
      "bio": "Get a taste of iPhone app development in Xcode on less than 2 hours.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Xcode",
          "iPhone Simulator",
          "Interface Builder",
          "Accessing UI Outlets",
          "Buttons",
          "Image Views",
          "break",
          "Classes and Objects",
          "Touches Moved",
          "Animation Blocks",
          "Maps",
          "Web View",
          "Outro"
        ]
      },
      "requirements": [
        "Basics understanding of the use of computers",
        "You MUST have a Mac computer"
      ],
      "description": "This short course is an introduction to developing iPhone and iPad apps using Xcode. Throughout the course, I will use Swift to get you started with some of the basics of developing iOS apps, such as interface builder, accessing the device's camera, adding maps, or basic animation. This course should give enough confidence to begin working on your iPhone apps and learn through longer courses. The course content is as follows:\nIntroduction\nXcode\niOS Simulator\nInterface Builder\nAccessing UI Outlets\nButtons\nImage Views\nbreak\nClasses and Objects\nTouches Moved\nAnimation Blocks\nMaps\nWeb View\nFinal thoughts",
      "target_audience": [
        "Beginner mobile app developers",
        "Beginner iPhone app developer",
        "Entrepreneurs planning to develop their own apps"
      ]
    },
    {
      "title": "Introduction To MIT App Inventor: Make No Code Mobile Apps",
      "url": "https://www.udemy.com/course/intro-to-mit-app-inventor/",
      "bio": "Build Mobile App Development Without Coding, Mobile Apps Development",
      "objectives": [
        "Create Android Apps using MIT App Inventor",
        "Learn about components of MIT App Inventor",
        "Learn about sensors, media, and layout of MIT App Inventor",
        "Build 5+ Apps including Audio/Video Player, QR Code Reader, Sensor-based, etc",
        "Learn How to store data in the web database",
        "Learn how to build Apps & Games by using block coding (No need to write a code)",
        "Make Apps like AI based web browser etc..."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What do you need to get started ?",
          "Tour of the platform"
        ],
        "Components": [
          "Components Overview"
        ],
        "UI Components": [
          "Overview",
          "Screen",
          "Label",
          "Button",
          "CheckBox",
          "DatePicker",
          "Image",
          "Assignement-01: Gif in Image Component",
          "ListPicker",
          "ListView-MainText",
          "ListView-MainText, DetailedText",
          "ListView-Image, MainText",
          "Notifier",
          "PasswordText",
          "Assignment-02: Allow only limited tries on entering Password",
          "Assignment-02: Solution",
          "Slider",
          "Slider Color Right property does not work",
          "Spinner",
          "Switch",
          "TextBox",
          "TimePicker",
          "WebViewer"
        ],
        "Layout Components": [
          "Overview",
          "HorizontalArrangement",
          "HorizontalScrollArrangement",
          "VerticalArrangement",
          "VerticalScrollArrangement",
          "TableArrangement"
        ],
        "Media Components": [
          "Overview",
          "Player",
          "Sound",
          "SpeechRecognizer",
          "TextToSpeech",
          "Translator",
          "VideoPlayer"
        ],
        "Sensor Components": [
          "Overview",
          "BarcodeSensor",
          "ClockSensor",
          "LightSensor",
          "PedometerSensor"
        ],
        "Storage": [
          "Overview",
          "TinyDB",
          "TinyWebDB",
          "Google Spreadsheet-Write/Store Data",
          "Google Spreadsheet-Read/Get Data"
        ],
        "App - 01: Increment Decrement Counter": [
          "Application: Increment Decrement Counter",
          "Part 01: Make a UI",
          "Part 02: Integrate the functionality"
        ],
        "App - 02: Age Calculator": [
          "Application: Age Calculator",
          "Part 01: Make a UI",
          "Part 02: Integrate the functionality"
        ],
        "App - 03: Number Conversion (Decimal to Binary/Hex)": [
          "Applicatoin: Number Conversion (Decimal to Binary/Hex)",
          "Part 01: Make a UI",
          "Part 02: Integrate the functionality"
        ]
      },
      "requirements": [
        "A computer with an internet connection",
        "Mobile/Tablet to test Apps & Games",
        "No programming experience required"
      ],
      "description": "Welcome to the \"Introduction To MIT App Inventor\"  course, a course that will give you enough confidence to make Mobile Applications and games with no code.\n\n\nMaking mobile is not that hard nowadays, thanks to MIT App Inventor which makes our job, even more, simpler, you don`t even need to learn Java or Swift programming languages, you just need to understand the basics of making apps and you are good at go on making apps & games.\n\n\nI will give you step-by-step guidance to make sure you can make any Apps & Games upon completing this course.\n\n\nWe will go through all the components that MIT App Inventor offers us :\nScreen\nLabel\nButton\nCheckBox\nDatePicker\nImage\nListPicker\nListView\nNotifier\nPasswordText\nSlider\nSpinner\nSwitch\nTextBox\nTimePicker\nWebViewer\nAnd many more...\n\n\nThen we are going to learn how to use layout and arrange our components.\n\n\nWe will also learn how to use Sensors in our applications/games, not only that but we will also play with media files as well.\n\n\nThis course covers many things you need to learn to start making Apps & Games for mobile devices.\n\n\nAlong the course, we will make many applications.\n\n\nApplications :\nApp - 01: IncDec Counter\nApp - 02: Age calculator\nApp - 03: Number Conversion:(Decimal to Binary/Hex)\nApp - 04: Calculator\nApp - 05: ColorPicker\n\n\nYou will get lifetime access to all the lectures.\n\n\nBest of all, we will learn by actually DOING IT! At the end of the course, you will have a solid portfolio of 5+ Apps that you would make along the course.\n\n\nEnroll Now and let's start making creative and useful mobile Apps.\n\n\nI will see you on the course!",
      "target_audience": [
        "Anyone who wants to create mobile Apps & Games",
        "Anyone who wants to learn MIT App Inventor",
        "Any person who wants learn the basics of programming without writing a code",
        "Programmers who know any programming language and want to use it to make Apps & Games"
      ]
    },
    {
      "title": "React Native: Build Powerful Cross-Platform Mobile Apps",
      "url": "https://www.udemy.com/course/react-native-mobile-development/",
      "bio": "Architect and develop engaging mobile apps for iOS and Android using React Native, master core concepts, best practices.",
      "objectives": [
        "Understand the React Native ecosystem: Grasp the fundamentals of React Native, its advantages, and how it compares to other mobile development frameworks.",
        "Set up a development environment: Confidently install and configure the necessary tools (Expo, Android Studio) for React Native development.",
        "Master core React Native components: Utilize essential components like Text, Image, TextInput, Button, ScrollView, and FlatList to build user interfaces.",
        "Implement navigation and data passing: Structure multi-screen applications using React Navigation and seamlessly pass data between screens.",
        "Manage application state: Learn to manage complex application state using both React Hooks (like useState) and Redux.",
        "Fetch and persist data: Retrieve data from APIs using Fetch or Axios and store data locally with AsyncStorage.",
        "Style React Native applications: Apply styling techniques, including inline styles, StyleSheet API, and styled-components, to create visually appealing apps.",
        "Implement animations & gestures: Bring apps to life by adding animations and incorporating gesture handling using the Animated API and react-native-reanimated.",
        "Access device features: Utilize device APIs to integrate functionalities like camera access, location tracking, and sensor data into applications.",
        "Incorporate push notifications: Learn to integrate push notifications into React Native apps using Expo's notification services.",
        "Build and deploy applications: Gain the skills to build, sign, and publish React Native apps on both the Google Play Store and Apple App Store.",
        "Extend React Native with native code: Learn when & how to integrate native code (iOS & Android) to extend React Native's capabilities for many functionalities."
      ],
      "course_content": {
        "Introduction to React Native": [
          "Introduction to React Native"
        ],
        "Getting Started with React Native": [
          "Getting Started with React Native"
        ],
        "Mobile Development Basics": [
          "Mobile Development Basics"
        ],
        "Comparison between Native and React Native": [
          "Comparison between Native and React Native"
        ],
        "Android Studio": [
          "Android Studio"
        ],
        "Set up Expo CLI and Run the First Expo Project": [
          "Set up Expo CLI and Run the First Expo Project"
        ],
        "Styling with React Native": [
          "Styling with React Native"
        ],
        "Text, View and Image Components": [
          "Text, View and Image Components"
        ],
        "TextInput Component": [
          "TextInput Component"
        ],
        "State with useState Hook": [
          "State with useState Hook"
        ]
      },
      "requirements": [
        "Enthusiasm and determination to make your mark on the world!"
      ],
      "description": "A warm welcome to the React Native: Build Powerful Cross-Platform Mobile Apps course by Uplatz.\n\n\nReact Native is an open-source framework developed by Facebook that allows developers to build mobile applications using JavaScript and React. It enables the creation of native-like mobile apps for both iOS and Android platforms using a single codebase. Instead of compiling into web components, React Native components directly compile into native mobile UI elements, providing high performance and a seamless user experience.\n\n\nHow React Native Works\nReact Native is a popular framework for building cross-platform mobile apps using JavaScript. Let's take a deep-dive into how it works:\n\n\n1. JavaScript and Native Code\nReact Native allows you to write the logic of your app using JavaScript, while the user interface is rendered using native components. This means your app looks and feels like a native app, even though it's built with JavaScript.\n2. The Bridge\nReact Native utilizes a \"bridge\" to connect your JavaScript code with the native code of the target platform (iOS or Android). This bridge facilitates communication between the two, allowing JavaScript to access native APIs and UI elements.\n3. Threads\nMain Thread: This is the primary thread responsible for handling user interface updates and interactions.\nJavaScript Thread: This thread executes your JavaScript code, managing the application's logic and state.\nShadow Thread: This thread calculates the layout of the UI using Yoga, a layout engine that translates Flexbox layouts into native layouts.\nNative Modules Thread: This thread provides access to platform-specific APIs, such as camera, location, and sensors.\n4. UI Rendering\nWhen you write UI code in React Native using JSX (a syntax extension to JavaScript), it's not directly translated into HTML like in React web development. Instead, React Native maps your JSX components to their corresponding native UI components on the platform. This ensures a native look and feel.\n5. Communication Flow\nWhen a user interacts with the app, the main thread sends an event to the JavaScript thread via the bridge.\nThe JavaScript thread processes the event and updates the application's state.\nThese updates are then sent back to the main thread, which re-renders the UI with the new changes.\n\n\nImagine you have two people speaking different languages who need to communicate. The bridge acts as a translator, allowing them to understand each other. In React Native, the bridge translates JavaScript instructions into native code that the mobile device can understand, and vice versa.\nThis architecture allows React Native to provide a truly native experience while leveraging the flexibility and efficiency of JavaScript development.\n\n\nKey Features of React Native\n\n\nCross-Platform Development – Write one codebase that works across both iOS and Android.\nNative Performance – Uses native components for rendering, ensuring near-native performance.\nHot Reloading – Allows developers to see changes in real time without restarting the application.\nReusable Components – Leverages reusable UI components to build apps efficiently and reduce development time.\nLarge Ecosystem – Supports third-party libraries and has a rich ecosystem of plugins and tools.\nActive Community – Backed by a strong developer community and maintained by Facebook, ensuring constant improvements.\n\n\nWhy is it Beneficial to Learn React Native?\n\n\nEfficiency - By developing for both platforms with one codebase, it reduces development time and cost.\nHigh Demand - Companies are increasingly adopting React Native due to its versatility, making it a valuable skill in the job market.\nScalability - React Native's architecture makes it easy to scale apps, from simple projects to complex mobile applications.\nGrowing Ecosystem - The framework continues to evolve with a strong community and vast resources, ensuring support for both new and experienced developers.\nNative-like Experience - Provides the performance and user experience of native apps, making it a top choice for cross-platform development.\n\n\nReact Native - Course Curriculum\n\n\n1. Introduction to React Native\nOverview of React Native and comparison with other mobile frameworks.\n2. Getting Started with React Native\nInstalling Expo and creating your first React Native app.\n3. Mobile Development Basics\nUnderstanding the mobile app development lifecycle.\n4. Native vs React Native\nPros and cons of native app development vs React Native.\n5. Setting Up Android Studio\nDownload and install Android Studio and set up a virtual device.\n6. Styling in React Native\nExploring different styling techniques for React Native apps.\n7. Core Components: Text, Image, and Input\nLearn to use the Text, Image, and TextInput components in React Native.\n8. Managing State with Hooks\nIntroduction to state management using the useState hook.\n9. Working with Buttons and Touch Events\nLearn to implement interactive buttons and touch gestures.\n10. Scrollable Views\nImplementing ScrollView, FlatList, and SectionList.\n11. Building a To-Do List App\nCreate a simple To-Do List app using FlatList and styles.\n12. React Navigation\nImplementing navigation using React Navigation with stack and tab navigators.\n13. Passing Data Between Screens\nLearn how to pass data across different app screens.\n14. Handling Navigation States\nManaging navigation state in complex apps.\n15. Working with Nested Navigators\nUsing nested navigators in a multi-screen app.\n16. Customizing Navigation\nCustomizing headers and navigation options for a unique app feel.\n17. State Management with Redux\nIntroduction to Redux and its use in React Native for state management.\n18. Fetching Data from APIs\nUsing Axios or Fetch to retrieve data from external APIs.\n19. Persisting Data with AsyncStorage\nLearn to persist data locally using AsyncStorage.\n20. Building Data-Driven Apps with Redux\nBuilding scalable apps driven by Redux and Context API.\n21. Advanced Styling with Styled-Components\nSetting up and creating reusable styled components.\n22. Animations in React Native\nIntroduction to animations using the Animated API, including fade, scale, and translate animations.\n23. Handling Gestures\nImplement complex animations and gestures using react-native-reanimated.\n24. Working with Device APIs\nAccess device features like the camera, location, accelerometer, and gyroscope.\n25. Push Notifications with Expo\nLearn to set up and handle push notifications in React Native apps.\n26. Playing and Recording Media\nWorking with audio and video files, and recording media in React Native.\n27. SQLite and Local Databases\nLearn to create and manage local databases using SQLite.\n28. User Authentication\nImplement login, logout, and user authentication in React Native apps.\n29. Optimizing Performance\nTechniques for improving app performance and profiling with Expo.\n30. Building and Deploying Apps\nSteps to build, sign, and publish your React Native app to Google Play and the App Store.\n31. Ejecting from Expo\nWhen and why to eject from Expo to the bare workflow.\n32. Native Code Integration\nWorking with native code in React Native for both iOS and Android.",
      "target_audience": [
        "Beginner to intermediate programmers: Individuals with some basic programming knowledge, especially in JavaScript, who want to learn mobile app development.",
        "Mobile app developers: Those experienced in native mobile development (iOS or Android) who want to learn a cross-platform framework.",
        "Web developers with React experience: Developers familiar with React who want to leverage their skills to build mobile apps.",
        "Front-end engineers: Expanding skillset to include mobile app development with React Native.",
        "Full-stack engineers: Adding cross-platform mobile development to their repertoire for end-to-end project ownership.",
        "Entrepreneurs and business owners: Individuals with app ideas who want to learn how to build their own apps.",
        "Anyone aspiring for a career in mobile app development",
        "Students and those looking to upskill: Anyone interested in expanding their skillset and entering the mobile app development field.",
        "UI/UX designers: Gaining a better understanding of the technical implementation of their designs in a React Native environment.",
        "QA engineers: Learning React Native to better understand the framework and write more effective tests."
      ]
    },
    {
      "title": "Mastering SwiftUI 4: Bootcamp Style",
      "url": "https://www.udemy.com/course/mastering-swiftui-4-bootcamp-style/",
      "bio": "Learn to Build iOS Apps Using SwiftUI 4 and iOS 16. Most Comprehensive Course that Covers Basic to Advance Topics",
      "objectives": [
        "App Development using SwiftUI 4",
        "iOS App Development",
        "Learn iOS Development by Examples",
        "Build Complete Projects from Start to Finish"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "SwiftUI Architecture",
          "SwiftUI Project & Xcode Walkthrough",
          "View Protocol",
          "View Layout Intro"
        ],
        "Text View - Deep Dive": [
          "Getting Started with Text View",
          "Formatter Initializers of Text View",
          "Date Style Initializer for Text View",
          "AttributedString Initializer",
          "Date Initializer",
          "Verbatim Initializer",
          "Bold Modifier",
          "Font Modifier",
          "Font Weight Modifier",
          "Font Design Modifier",
          "Font Width Modifier",
          "Text Capitalization Modifier",
          "Italic Modifier",
          "Foreground Color Modifier",
          "Kerning Modifier",
          "Tracking Modifier",
          "Foreground Style Modifier",
          "Monospaced Modifier",
          "Monospaced Digit Modifier",
          "Strikethrough Modifier",
          "Underline Modifier",
          "Line Limit Modifier",
          "Line Spacing Modifier",
          "Multiline Text Alignment Modifier",
          "Allows Tightening Modifier",
          "Minimum Scale Factor Modifier",
          "Truncation Mode Modifier",
          "Baseline Offset Modifier",
          "Custom Font using Font Modifier",
          "Custom Imported Font with Font Modifier",
          "Scaled Metric Property Wrapper",
          "Dynamic Type Size",
          "Markdown Support",
          "Text Case Modifier",
          "Text Selection Modifier",
          "Text Formatters",
          "Date Style",
          "Date Formatter",
          "Date Formatter Objects",
          "List Formatter",
          "Measurement Formatter",
          "Person Name Formatter",
          "Byte Formatter",
          "Currency Formatter"
        ],
        "Image View - Deep Dive": [
          "Image View Intro",
          "Resizable Modifier",
          "Aspect Ratio",
          "Scaled To FIt",
          "Scaled To Fill",
          "Clipped Modifier",
          "ClipShape Modifier",
          "CGImage",
          "Interpolation",
          "Rendering Mode",
          "Scaled Metric",
          "SF Symbol",
          "SF Symbol Rendering Mode",
          "SF Symbol Variant",
          "SF Symbol Foreground Style",
          "SF Symbol with Materials",
          "Dynamic Types with SF Symbol"
        ],
        "Labels: Deep Dive": [
          "Labels Intro",
          "Label Customizations",
          "Label with Image",
          "Label Configurations Part 1",
          "Label Configurations Part 2",
          "Label Styles",
          "Label In List"
        ],
        "VStack - Deep Dive": [
          "VStack Intro",
          "VStack Frame",
          "VStack Alignments",
          "VStack Spacing",
          "VStack Complex Layout"
        ],
        "HStack - Deep Dive": [
          "HStack Intro",
          "HStack Static Views",
          "HStack Spacing",
          "HStack Alignments",
          "HStack Layout Priorities"
        ],
        "ZStack - Deep Dive": [
          "ZStack Intro",
          "ZStack Alignment",
          "Custom PopUp View using ZStack",
          "Custom UI with FAB using ZStack",
          "Animated FAB using ZStack"
        ],
        "LazyVStack - Deep Dive": [
          "Intro",
          "Spacing Difference between VStack & LazyVStack",
          "Alignment in LazyVStack",
          "Pinned Views in LazyVStack"
        ],
        "Custom UI Components": [
          "Pie Chart using Canvas"
        ],
        "New in SwiftUI 4": [
          "Charts",
          "Expandable Bottom Sheet",
          "Multi Date Picker",
          "Navigation Stack",
          "Navigation Split View",
          "Share Link",
          "Tables in iPadOS",
          "Expanding Text Field",
          "Gauge View",
          "View That Fits",
          "Gradient and Shadows",
          "Grid View",
          "AnyLaout",
          "Tap Location in TapGesture",
          "Interactive Keyboard Dismiss"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Knowledge of Xcode"
      ],
      "description": "Since the introduction of SwiftUI, iOS and Apple platform app development has changed drastically. More apps are being released to the App Store. Developer productivity has improved, with SwiftUI app development is not only fast but it is fun too. SwiftUI is easy to learn.\n\n\nIn this course, you will learn SwiftUI 4 from scratch. We will look at various components one by one to understand SwiftUI better. You will learn about basic level views, modifiers and view compositions that makes up SwiftUI's library of collection. You will learn to apply these concepts in real world with practical examples.\n\n\nWe will also take deep dive in some of the views to understand them better so when it comes for you to use those in real app, you are ready and prepare to build a truly awesome app.\n\n\nThis course covers SwiftUI controls and views in detail so you have all the knowledge you need to make an informed decision while build your own unique app.\n\n\nThis course gives you a closer and in-depth look at the iOS App Development with SwiftUI while building out knowledge by building examples for real apps. This course will prepare you to develop and release your next awesome idea. So Join me in this course to learn about SwiftUI 4.",
      "target_audience": [
        "Students who wants to learn App Development using SwiftUI 4"
      ]
    },
    {
      "title": "Windows Phone - Programming for Advanced",
      "url": "https://www.udemy.com/course/windows-phone-programming-for-advanced/",
      "bio": "Gain prestige Microsoft Certified Proffesional Developer title (MCPD).",
      "objectives": [
        "Learn how to use multiple languages on the WP platform",
        "Learn how to master gestures like multitouch and sensors",
        "Discover how to handle notifications and multimedia",
        "You will learn URI mapping",
        "Discover how to debug code using Visual Studio functions",
        "Find out how to use WP animations with ease",
        "Learn how to use background agents and background audio",
        "Find out how to create your own pointers",
        "You will see ways of displaying advertisements in applications",
        "Learn to create advanced Live Tile",
        "Understand push notification mechanism handling rules.",
        "Understand libraries, which you can use to create your own applications",
        "Learn how to use Silverlight validation"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Multilingual",
          "Mulitilingual - additional notes"
        ],
        "Gestures and sensors": [
          "Gestures - additional notes",
          "Gestures",
          "Sensors - additional notes",
          "Sensors"
        ],
        "Multimedia": [
          "Notifications",
          "Notifications - additional notes",
          "Multimedia part 1",
          "Multimedia - additional notes",
          "Multimedia part 2",
          "Mapping URI - additional notes",
          "Mapping URI",
          "Camera"
        ],
        "Making Trial Version and Debbuging": [
          "Trial Version - additional notes",
          "Trial Version",
          "Animation",
          "Debbuging - additional notes",
          "Debbuging"
        ],
        "Background": [
          "Background Agents - additional notes",
          "Background Agents",
          "Background Audio - additional notes",
          "Background Audio"
        ],
        "Advanced Implementation": [
          "User and Custom Control - additional notes",
          "User and Custom Control",
          "Advertisements - additional notes",
          "Advertisements",
          "Advanced Live Tile - additional notes",
          "Advanced Live Tile",
          "Push Notification - additional notes",
          "Push Notification",
          "Data Validation - additional notes",
          "Data Validation"
        ],
        "Creating the application": [
          "Application part 1",
          "Application part 2",
          "Windows Phone 8 - additional notes",
          "Windows Phone 8"
        ],
        "Bonus section": [
          "Thank you for joining"
        ]
      },
      "requirements": [
        "Visual Studio"
      ],
      "description": "LAST UPDATED: 02/2022\nThis course Windows Phone - Programming for Advanced and Windows Phone - Programming for Beginners will help you to prepare for following exams:  (70-506), (70-516), (70-599)\n\n\nWindows Phone - Programming for Advanced is the continuation of our basic course. You will acquire knowledge and skills needed to attain the position of mobile application developer, you will create advanced applications. You will see the ways of displaying advertisements and you will find out how to earn from them! More about the course content in the section: What am I going to get from this course?\n\n\nAre you a beginner in programming or you can already program on iOS or Android platform, but you want to be multiplatform developer and expand your skills? This course is for you!\n\n\nComprehensive knowledge and solid base for everyone\n\n\nCompletion of the course provides a solid base and a comprehensive understanding of the key issues of programming for Windows Phone. Additionaly lecturer is an experienced programmer and Nokia Developer Certified Trainer!\n\n\nIt's one and only course for Windows Phone developers that you'll find on Udemy. Full of theory and practice. Create advanced application with Educativo - Nokia Developer Certified Trainer!! Try it now!\n\n\nCompletion of the course provides a solid base and a comprehensive understanding of the key issues of programming for Windows Phone. Additionaly lecturer is an experienced programmer and Nokia Developer Certified Trainer!",
      "target_audience": [
        "intermediate and advanced Windows Phone developers",
        "for anyone who wants programming for Windows Phone platform",
        "for developers preparing to Microsoft exams"
      ]
    },
    {
      "title": "Hive Offline Database in Flutter | Android & IOS",
      "url": "https://www.udemy.com/course/hive-offline-database-in-flutter-android-ios/",
      "bio": "Master the art of storing data locally in users device in Flutter using Hive",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Dart Basics",
        "Flutter Basics",
        "Eagerness to learn"
      ],
      "description": "Storing data locally and persisting between app launches is one of the fundamental concepts of any mobile app development process. Almost every app requires that you handle data — from storing customer information for a food delivery app, to the number of points scored in a game or a simple value to understand whether the user has turned on dark mode during their last visit.\nHive is a quick, lightweight, NoSQL database for flutter and dart applications. Hive is truly helpful if you need a straightforward key-value database without numerous relations and truly simple to utilize. It is an offline database(store data in local devices). It has no native dependencies (it runs on Flutter Web!) can be the ideal choice. Hive bolsters all stages upheld by Flutter.\nWe will explore the Hive DataBase With TypeAdapter In Flutter. We will also implement a demo program, create a todo app using hive packages, and use them in flutter applications.\n\n\nWhy Hive DataBase?:\nIt’s the most efficient database in terms of speed and performance compared to SQFlite and SharedPrefrences.\nIt provides a straightforward way to perform basic (CRUD) operations.\n\n\nAdvantages:\nCross-platform: since there are no native dependencies on pure Dart — mobile, desktop, browser.\nHigh performance.\nBuilt-in strong encryption.\nNO native dependencies.",
      "target_audience": [
        "Beginner Flutter Developer",
        "Intermediate Flutter Developer"
      ]
    },
    {
      "title": "Dynamic Android App Development (Using Java and PHP)",
      "url": "https://www.udemy.com/course/android-app-development-fullstack-real-apps-dev-phpmysql/",
      "bio": "Learn Android App Development From Scratch. Design Front & Backend with DB Connectivity with Web Services Integration",
      "objectives": [
        "You will learn Android App Development using Java with PHP",
        "You will learn About JSON Web Service Development",
        "You will learn About Libraries in Android Apps",
        "You will learn about Locations Integration in Android Apps and Capturing Location",
        "You will learn to create CRUD application by updating user details and modifying them",
        "You will learn to integrate notifications in app",
        "You will learn about publishing app on Google Play Store"
      ],
      "course_content": {
        "What you will get in this Course?": [
          "What the course will cover?"
        ],
        "Basics of Java Programming": [
          "Introduction to Java Programming",
          "Setup Java Environment & First Java Program",
          "Intellij IDE for Java Programs",
          "Variables and Data Types",
          "Conditionals Statements",
          "Comments in Java",
          "Arrays",
          "Loops",
          "Java Classes & Objects",
          "Methods / Functions",
          "Constructors in Java",
          "Exception Handling (Try and Catch)",
          "OOPS (Object Oriented Programming Introduction)",
          "OOPS (Object Oriented Programming Introduction) -2",
          "OOPS (Object Oriented Programming Introduction) -3",
          "OOPS (Object Oriented Programming Introduction) -4"
        ],
        "Introduction to Android": [
          "Basics of Android",
          "Android Studio Setup Windows",
          "Android Studio Setup Mac",
          "Creating Sample Project (First App)",
          "Components of Android Application (res, manifest, src )",
          "Understanding the App Code",
          "Running App on Virtual Device (Emulator or AVD)",
          "Android Studio Features",
          "What is an Activity & Its Lifecycle"
        ],
        "Android User Interface-2 (Widgets / Controls)": [
          "Buttons",
          "Text View",
          "Edit Text",
          "Switches",
          "ImageButton",
          "RatingBar",
          "CheckBox",
          "Radio Buttons & Radio Group",
          "ToggleButton",
          "ImageView",
          "WebView",
          "VideoView",
          "CalenderView",
          "DatePicker and Time Picker",
          "ProgressBar",
          "SeekBar",
          "Android - Alert Dialog",
          "Spinner",
          "ListView",
          "AutoCompleteTextView",
          "CardView",
          "ScrollView & HorizontalView",
          "Snackbar (Displaying Acknlowledgement Messages)"
        ],
        "Intents and Fragments": [
          "Intents (Implicit & Explicits)",
          "Passing Data with Intents",
          "Introduction to fragments & Lifecycle",
          "Create Fragments Automatically"
        ],
        "Navigation Via Drawers in Android": [
          "Side Navigation Drawer",
          "Bottom Navigation Drawer"
        ],
        "Permissions, Session Management , and Animations": [
          "Permissions in Android",
          "Shared Preferences (Sessions Management)",
          "Android Animations"
        ],
        "Local Databases": [
          "Sqlite Database (Local Storage) Introduction",
          "SQL Database Methods",
          "Inserting Data in SQLite Database",
          "Reading Data in SQLite Database"
        ],
        "WebServices (Introduction to PHP & MYSQL)": [
          "What is XAMPP?",
          "Installation of XAMPP for PHP Local Server",
          "Basic Syntax in PHP",
          "Printing Statements in PHP",
          "Declaring Variables in PHP",
          "Conditional Statements in PHP",
          "Loops in PHP",
          "Introduction to MYSQL Database",
          "Connecting PHP & MYSQL",
          "PHP Webservices Introduction",
          "Introduction to JSON",
          "Fetching Data in form JSON from MYSQL Using PHP"
        ],
        "Google Map Integration": [
          "Google Map Integration"
        ]
      },
      "requirements": [
        "Just Basic Programming Understanding"
      ],
      "description": "Learn Android App development from Zero knowledge to be Expert. You will be trained from very Basic to Expert. In this course you will be learning to develop Android App front end to back end. You will learn PHP & MySql along the course to create your own web services as well how to host your service live to use them in your phone. At the end of the course you will be Front End and Back end Android Developer. We will learn if you have project assigned in your company or you want to be Android Developer what all things you need. I am sharing you all my experience in this course related to make you Android Developer. You alone will be able to do all things in Android App as Fullstack Android Developer.\nYou will basics of web services and how to create web services using PHP and MySql. We will learn basics of Photoshop also for making graphics for our App which we will need to use while publishing it on Play Store.\nYou just need to know basics of programming nothing else. You will be able to develop any Android app in future without anyone help after finishing the course. You just have follow the flow.\nHappy Learning.",
      "target_audience": [
        "Anyone who want to Learn Android App Development",
        "If you want to become full stack Android App Developer"
      ]
    },
    {
      "title": "React Native IOS and Android App Development for Beginners",
      "url": "https://www.udemy.com/course/react-native-tutorial/",
      "bio": "Learn the basics of react native in nice and easy way. Get ready to start building real apps for IOS and Android.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Understanding of JavaScript",
        "Basics of ReactJs",
        "Capable to follow documentation to install simulators(softwares) in your computer",
        "Comfortable using terminal/command prompt"
      ],
      "description": "Have you ever wanted to build mobile apps for IOS and Android platforms? With this course, you will be able to get up and running with react native in very short time.\nWith react native you will be able to build an app for both platforms using a single codebase. If you already know the basics of react, getting started with react native is really easy.\nEven if you have no prior knowledge of react, I will show you how you can prepare yourself for this course.\nThis course is also great for web developers who want to dive into the field of mobile app development.\n\n\nThis course will help you get up and running with react native so that you can learn how to build UI components in react native. You will learn to build multiple screens and implement navigation too.\n\n\nYou will also learn to implement WebView, which will allow you to wrap your existing website in your app so that you can serve your website as an app to your users with any real effort of re-creating the entire app in react native. That sounds amazing right?\n\n\nThere are many real world use cases used in this course that you can use while building any other react native apps in future. For example taking user input, creating signup and signin screens, learning reactive state management, creating reusable components, customizing splash screen, learning flexbox CSS for creating desired layout etc.\n\n\nWe will also be using expo to build react native apps which makes things even more easier. Using IOS and Android simulators is also covered in this course so that you can run your app in simulators in your computer however real device (your iphone/android phone) can also be used to test your app.\n\n\nJoin me in this course and take your excitement of learning react native to build IOS/Android apps to reality.",
      "target_audience": [
        "React developers wanting to learn React Native",
        "Interested to learn React Native to build IOS and Android Apps"
      ]
    },
    {
      "title": "Introduction to Xamarin.Android",
      "url": "https://www.udemy.com/course/introduction-to-xamarinandroid/",
      "bio": "Learn the foundations of building Android app in C# with Xamarin",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Familiar with C# and .NET, Visual Studio with Xamarin installed, Android Emulator"
      ],
      "description": "This course introduces Xamarin.Android development using Visual Studio. Build Android applications using C# and .NET that take advantage of the entire Android API surface to provide a fully native experience. Topics include the Activities, Intents, and navigation and how to update your development environment. Students will build and deploy two Xamarin.Android applications.",
      "target_audience": [
        "Experienced .NET developers with an interest in using their skill to build mobile applications"
      ]
    },
    {
      "title": "Apple WatchKit - Essential Training",
      "url": "https://www.udemy.com/course/apple-watchkit-essential-training/",
      "bio": "This course teaches everything you need to develop compelling Apple Watch Apps using the WatchKit Framework & Swift.",
      "objectives": [
        "Become a Master in Developing Compelling Apps for Apple Watch using the WatchKit Framework",
        "Weekly updates to keep you engaged with latest features."
      ],
      "course_content": {
        "Requirements and First Steps": [
          "Introduction to WatchKit",
          "Preparing an App for WatchKit",
          "The WatchKit Interface",
          "Finishing the HelloWatch App",
          "Assignments"
        ],
        "WatchKit Interface Controllers": [
          "WatchKit Interface Controller - Part 1",
          "How to Set up a Simple Navigation Interface, step by step",
          "How to Set up a Simple Modal interface",
          "Initialization and pushing new controllers with contexts",
          "Presenting Modal Interface Controllers and Page Groups",
          "WatchKit Interface Controller - Part 2 (Segues)",
          "Segueing to a Single Interface Controller",
          "Segueing Modally to a Page-based Collection of Interface Controllers",
          "Assignment"
        ],
        "The WatchKit interface, continued": [
          "Groups Discussion",
          "Groups, Adding a Group to a Button Demo",
          "Context Menus Discussion",
          "Context Menus, Adding Items in Code Demo",
          "Text Input Discussion",
          "Getting Text Input from the User Demo",
          "Communication with Parent App Discussion",
          "Demo of Sending and Receiving Data to/from Parent App",
          "Assignments"
        ],
        "WatchKit Glances": [
          "Communication Between WatchKit and the App",
          "Tables in WatchKit",
          "Sample Table View",
          "Responding to Cell Selection"
        ],
        "WatchKit Calculator Application": [
          "Storyboard",
          "Digit Entry",
          "Operators And Equals",
          "Source Code"
        ]
      },
      "requirements": [
        "We assume you have some basic knowledge of programming."
      ],
      "description": "A Revolution On Your Wrist !\n\nThe worlds largest company with a valuation of almost One Trillion Dollars, continues to amaze everyone.\n\nApple never ceases to impress averyone with their incredible vision to come up with game-changers that literally dominate and spawn a whole new industry and eco-systems.\n\nAnd this time, its in the wearables industry.\nWith the introduction of the Apple Watch, Apple stands to disrupt and revolutionize the smartwatch wearables industry. Reports have confirmed that Apple has manufactured and plans to sell over 15 million AppleWatch's in its initial launch in mid-April 2015.\n\nSo, if you're making Mobile Apps - this is potentially a MASSIVE opportunity for you!\n\nAs with all new technologies, those who move first and adapt rapidly get the early-mover advantage. Those who don't, are left behind trying to play the catch-up game.\nFortunately and unfortunately, thats the reality of how technology evolves and works. Getting in early helps you get initial traction faster than late comers, and lets you dominate your app niches quickly.\n\nBy learning Apple WatchKit development, you are literally opening up the doors to massive opportunuities for you as a developer.\n\nAnd, because this really is \"new\" territory behind which Apple is putting all its might and magic - the size of the opportunity stands to mushroom into unprecendented dimensions.\n\n\n\nThe questions you should be asking yourself are...\n- Am I bold and fast enough to seize this opportunity?\n\n- Do I want to have a shot at making the next wildly successful Apple Watch App?\n- Do I want to share similar successes of the makers of FlappyBird, Angry Birds and the likes?\n\n\nThe Apple WatchKit Framework and Development Environment\nApple Watch gives developers an opportunity to interact with users in an entirely new way.\nApple Watch development is fairly simple, thanks to the WatchKit Framework and the new version of Xcode.\nAdding a WatchKit extension to an existing app is a simple matter of adding a WatchKit target to the app. You may also create a new app and add a WatchKit extension immediately.\nA WatchKit App is organized into three parts\n\nthe app that runs on iPhone distinct from the watch environment,\nthe WatchKit app itself, which exists only on the watch, and contains storyboards but no code,\nthe WatchKit extension, which runs on the iPhone and contains the controllers for the watch app. The extension also communicates between the phone app and the watch app.\n\nThere are three types of things which may be displayed on the watch\nA WatchKit application, which presents an interface to an iPhone app to the user\nA Glance, which is a single simple screen of information presented to the user by the app.\nNotifications, which can be sent to the user's watch from an app either in the foreground or background state.\n\n\nIn our Apple WatchKit Essential Training course, we cover all three of these in great detail.\n\nHow The Apple WatchKit is Different...\nEven though the watch app itself runs no code, the watch contains a reasonably full set of hardware devices, such as an accelerometer, gyro-meter, and a heartbeat sensor.\n\nData from these devices can be sent to the iPhone app that hosts the watch app and is processed. By combining this data with the phone's Wifi or GPS and other sensor data, a complete picture can be gained of the user's location, current activity level, compass direction, and more.\nApple Watch also uses a completely new touch engine, which senses the force of a user's touch as well as the fact that the user is just touching the screen.\n\nThis might be used to develop code that handles a wider variety of touchscreen gestures, or brings up different information depending on now, not only where but how the screen is touched.\n\nOf course, the screen the user is touching is a full retina display, which makes presenting high-quality interfaces in your apps a breeze.\n\n\n\nWhat You Will Learn\n\nThis course teaches everything you need to develop compelling apps for Apple Watch using the WatchKit framework and the Swift programming language.\n\n\nYou will learn all of the following topics...\n\nRequirements and First Steps - Adding a WatchKit target to an existing iPhone app. The WatchKit environment, and the function of the Extension and WatchKit app itself. First steps in user interface development, including a HelloWatch app.\nThe WatchKit interface - Pushing new interface controllers and presenting them modally, with and without segues. The context object and its role in communicating data. Getting input from the user. Communicating between the watch app and the iPhone app that hosts it. Table views on Apple Watch. We'll also discuss view groups as a way to manage the positioning of user interface controls.\nGlances - A glance is a static view on the watch that gives an update to the user about something that's happening in a phone app. We'll learn all about glances in this unit. How to bring up a watch app when the user taps a glance.\nNotifications - We'll cover the difference between static and dynamic notifications and how to display both. We'll also learn how users can interact with these notifications.\n\n\n\nStructure of the Course Units\n\nAll the material in the course is presented at a very high level by necessity, and will help you get started and master all the essential concepts you need to know for Apple WatchKit development.\n\n\n[Unit 1] Requirements and First Steps.\nAdding a WatchKit target to an existing iPhone app. The WatchKit environment, and the function of the Extension and WatchKit app itself. First steps in user interface development, including a HelloWatch app.\n[Unit 2] The WatchKit interface.\nPart one of a discussion of WKInterfaceController (the main View Controller class used in WatchKit. Pushing new interface controllers and presenting them modaly, with and without segues. The context object and its role in communicating data.\n*** Sections below will be added every week.***\n\n[Unit 3] The WatchKit interface, continued.\n\nPart two of the WKInterfaceController discussion. Getting input from the user. Communicating between the watch app and the iPhone app that hosts it. Table views on Apple Watch. We'll also discuss view groups as a way to manage the positioning of user interface controls.\n[Unit 4] Glances.\nA glance is a static view on the watch that gives an update to the user about something that's happening in a phone app. We'll learn all about glances in this unit. How to bring up a watch app when the user taps a glance.\n[Unit 5] Notifications.\nWe'll cover the difference between static and dynamic notifications and how to display both. We'll also learn how users can interact with these notifications.\nBonus Webinars\nYou also get to see the replays of 2 Bonus Live Webinars.\nAgenda for Webinar #1 (1.5 hrs) - Learn how Apple WatchKit integrates into the iOS environment for developers. See how Rick integrates a real App live!\n\nSetting up a new watch kit project\nAn overview of the technology\nDesigning a watch app interface\nBasic watch controls (label, button, slider, and switch) and how to use them\nSending data to the watch and responding to control interaction\nA full demo app: a Calculator for Apple Watch.\nOpen Q&A Session\nAgenda for Webinar #2 (1.5 hrs) - To Be Announced, but will cover all aspects of the top WatchKit apps and insider feedback from developer community etc. You don't want to miss this one!\n\nPre-Requisites\nIn the course, we focus on how to develop watch apps, and we assume that you already have experience with iOS 8 and Swift.\n\nIf you do not know these technologies, a good place to learn them is from our Complete iOS 8 development with Swift course.",
      "target_audience": [
        "Beginners and advanced level developers who want to learn WatchKit Framework"
      ]
    },
    {
      "title": "Android App Development: Hands-on Android Apps with Java",
      "url": "https://www.udemy.com/course/android-app-development-hands-on-android-apps-with-java/",
      "bio": "Build 5 different Android Apps from scratch. Learn Android App development with real-life examples, improve your skills!",
      "objectives": [
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Android development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android.",
        "Due to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform. My android development course.",
        "In this course, we will building 5 different Android Apps from scratch together.",
        "Android applications' levels in this course are from easy to difficult",
        "Learn how to develop modern Android Apps in the simplest way and improve your self-confidence",
        "You will reinforce your existing Android information by applying.",
        "Using SQLite database, you will understand how to work with external databases.",
        "You will be able to develop Android applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "With Firebase, you will be able to develop real-time applications",
        "You will learn how to make a messaging app using Firebase.",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "You will be able to develop modern Android apps",
        "This course is built to help beginners to start making applications in Android",
        "android",
        "android app development",
        "android development",
        "android studio",
        "mobile app development",
        "mobile development",
        "Android app",
        "Android app, android application development",
        "app android",
        "android application development",
        "android app design",
        "android ecommerce app",
        "android game development",
        "The tools you will use for Android development depend on how you would like to focus your career as an Android developer.",
        "Android development is a valuable skill that can help you enhance your career. Android development skills are in-demand around the world with various.",
        "If you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android.",
        "You will learn to develop applications by getting real-time data from the Internet.",
        "You will have 5 different applications that you will publish on Google Play."
      ],
      "course_content": {
        "Project 1 : Calculator Application for Android": [
          "Introduction to Calculator App",
          "FAQ About Android App Development",
          "Project Files",
          "Application Design – Part 1",
          "Application Design – Part 2",
          "Application Design – Part 3",
          "Printing Numbers to Screen",
          "Printing Parentheses to Screen",
          "Writing Necessary Codes for Operators",
          "Writing Necessary Codes for Button Dot",
          "Writing Necessary Codes for Button AC and Delete",
          "Making Calculation – Part 1",
          "Making Calculation – Part 2",
          "Making Calculation – Part 3",
          "Making Calculation – Part 4",
          "Applying Dark Theme",
          "Saving Data",
          "Quiz"
        ],
        "Flag Quiz App": [
          "Introduction to Flag Quiz App",
          "Project Files",
          "New Splash Screen",
          "Home Page Design",
          "Quiz Page Design",
          "Result Page Design",
          "Creating Navigation Graph",
          "Creating Database",
          "Database Operations – Adding Database to App",
          "Database Operations – Creating Dao – Part 1",
          "Database Operations – Creating Dao – Part 2",
          "Retrieving Data From Database",
          "Showing Data – Part 1",
          "Showing Data – Part 2",
          "Control of the Correct and Wrong Answers",
          "Control of the Empty Answers",
          "Showing Result on Bar Chart",
          "Quiz"
        ],
        "Project 3 : Weather App": [
          "Introduction to Weather App",
          "Project Files",
          "Reviewing the Website",
          "Application Design – Part 1",
          "Application Design – Part 2",
          "Request Permission – Part 1",
          "Request Permission – Part 2 – Creating Bottom Sheet Dialog",
          "Request Permission – Part 3 – Checking Location Settings",
          "Request Permission – Part 4 – Permission Control Mechanism",
          "Changing the UI of the Weather Activity",
          "Creating Model Class",
          "Creating Retrofit Service",
          "Creating View Model",
          "Finding User’s Location",
          "Getting Current Weather Data by Location",
          "Getting Current Weather Data by City Name",
          "Checking Network Connection – Part 1",
          "Checking Network Connection – Part 2",
          "Quiz"
        ],
        "Project 4 : Photo Album App": [
          "Introduction to Photo Album App",
          "Project Files",
          "Adding the Necessary Libraries in android app",
          "Creating the Entity Component in android",
          "Creating the DAO Interface in android app",
          "Creating the Database Class in android development",
          "Creating the Repository Class",
          "Creating the View Model Class",
          "The Application Design-1",
          "The Application Design-2",
          "The Application Design-3",
          "Creating Adapter Class in android",
          "Request Permission in android app",
          "Picking a Photo",
          "Reducing the Size of the Selected Image",
          "Saving the Data in app development",
          "Deleting The Data in android app development",
          "Updating The Data-1",
          "Udating The Data-2 in android",
          "Open the Database Using the Database Browser for SQLite",
          "Quiz"
        ],
        "Project 5 : Chat Application to Android": [
          "Introduction to Chat App",
          "Project Files",
          "Android Studio – Integration with Firebase",
          "Login Page",
          "Authentication with Email and Password",
          "Signup Page",
          "Picking a Profile Photo – Part 1 – Permission Control Mechanism",
          "Picking a Profile Photo – Part 2",
          "Creating User Account",
          "Uploading Profile Photo to Firebase Cloud Storage",
          "Saving User Data to Realtime Database",
          "Enabling Sign Out Functionality",
          "Updating User Profile – Part 1",
          "Updating User Profile – Part 2",
          "Listing Users – Part 1",
          "Listing Users – Part 2",
          "Messaging Screen – Part 1",
          "Messaging Screen – Part 2",
          "Message Sending Process",
          "Showing Messages – Part 1",
          "Showing Messages – Part 2",
          "Deleting Messages",
          "Quiz"
        ],
        "Extra": [
          "Android App Development: Hands-on Android Apps with Java"
        ]
      },
      "requirements": [
        "To have basic android and java programming knowledge",
        "Determination to learn and patience",
        "Having a working computer and internet.",
        "Watching the course videos completely, to the end and in order.",
        "No prior Android knowledge is required!",
        "Desire to learn Android Application Development",
        "No programming Android App Development knowledge required!",
        "Watching the Android course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today for build android app"
      ],
      "description": "Hello there,\nWelcome to \"Android App Development: Hands-on Android Apps with Java\" course!\nBuild 5 different Android Apps from scratch. Learn Android App development with real-life examples, improve your skills!\n\n\nThis course is designed specifically for beginners who want to get started with Android app development. In it, you'll build 5 fully functional mobile apps from scratch using Java and Android Studio. By working on real-world applications, you'll quickly bridge the gap between theory and practical experience, gaining the skills needed to develop your own apps confidently.\n\n\nWhile many online courses on Android development focus heavily on theory, this course stands out by providing a hands-on approach. You'll not only understand Android's core concepts, but also apply them in real-time projects. Whether you're learning Java for Android development or want to explore Android app development with Kotlin, you'll build a solid foundation in Android Studio and be ready to create your own innovative mobile applications.\nWorking with Android means continually adapting and learning, as the platform evolves. This course will keep you ahead of the curve, offering practical insights into Android operating systems, tools, and best practices.\n\n\nThe Android platform is one of the dominant forces in the global smartphone market, and as more businesses develop mobile apps for customer engagement, Android development skills will remain in high demand.\n\n\nDo you want to improve your career options by learning android?\nDo you want to develop real android apps from Scratch with Java?\nDo you want to strengthen your CV by making Android applications?\nDo you want to be an android studio master?\nDo you want to learn Android by developing applications?\nDo you want to build your first android app with Java?\n\n\nIf your answer is “yes”, you are at the right place!\nThanks to this course, you will reinforce your android knowledge by applying and you will take your place in the android world There are five Android applications in our course, and the difficulty level is from easy to difficult Also, since the applications are prepared in a certain index, you will not experience any disconnection between the videos Thanks to this training, you will learn how to develop modern Android applications in the simplest way and improve your self-confidence\n\n\nIn this course;\nYou will reinforce your existing android information by applying\nYou will learn to develop applications by getting real-time data from the Internet\nUsing SQLite database, you will understand how to work with external databases\nYou will be able to develop applications with powerful architecture using Room Persistence Library and Architecture Components (ViewModel, LiveData)\nYou will learn how to make a messaging app using Firebase\nWith Firebase, you will be able to develop real-time applications\nYou will be able to develop user-friendly interfaces using Material Design principles and components\nYou will be able to develop modern Android apps\nApplying Dark theme to the App\nCRUD operations with Room Persistence Library\nCRUD operations with Firebase Realtime Database\nSaving Data using Shared Preferences\nGetting Data from internet\nChecking Network Connection\nPermission Control Mechanism\nBottom Sheet Dialog\nUnderstanding the MVVM (Model-View-ViewModel) architecture\nCreating Splash Screen with Animations and new Splash Screen API\nNavigation\nFragments\nData Transfer Between Screens\nAnd much more about Android\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\n\nIs Android Development a good career?\nWith over 25 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\n\n\nIn this course, you need basic android and java programming knowledge\nThis course will take you from a beginner to a more experienced level\nWe will take you from beginner to advance level You will learn step-by-step with hands-on demonstrations\n\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, it’s crucial to stay on top of the latest knowledge. With this course, you will always have a chance to follow latest trends\n\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nWe offer full support, answering any questions\n\n\nDive in now into \"Android App Development: Hands-on Android Apps with Java\" course!\nBuild 5 different Android Apps from scratch. Learn Android App development with real-life examples, improve your skills!",
      "target_audience": [
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing android knowledge.",
        "Those who want to develop applications using the Java programming language.",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Firebase Real-Time Database, Architectural Components (View Model, Live Data, Room) and SQLite.",
        "Anyone who wants to learn to Android code",
        "Anyone who wants to become an Android Developer",
        "Programmers who are interested in building Android apps",
        "Anyone who wants to create Android Applications",
        "Anyone who wants to learn Android",
        "Those who want to develop an Android mobile application.",
        "Anyone who wants to become a computer programmer like android kotlin",
        "Anyone who become an android developer from scratch"
      ]
    },
    {
      "title": "How to Create Android Mobile Apps: No Coding Required",
      "url": "https://www.udemy.com/course/android-apps-reskin-development-course-a-detail-approach/",
      "bio": "Learn how to Upload Mobile Apps to Play store and earn",
      "objectives": [
        "Students will learn how to Reskin Mobile Apps.",
        "Students will learn how to Create Mobile Apps.",
        "Students will learn how to Modify existing Android Studio Source Code.",
        "Students will learn how to Create Website and convert it to Mobile Apps.",
        "Students will learn how to Design UX/UI in Android Studio."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Check Android Studio Versions",
          "How to install AVD Emulator",
          "Download AS",
          "Android Studio Introduction"
        ],
        "Build App Demo": [
          "Introduction",
          "App Demo Name the Project",
          "App Demo Start Emulator and Test App",
          "App demo Add Gradient, Radius and Shape",
          "First Project Create a Mobile App as a Project",
          "First Project test and Run the project",
          "App Creation"
        ],
        "Create Buttons, Animations and Top Toolbar": [
          "Introduction",
          "How to Create Background Animation",
          "How to Create Multiple Buttons Apps part 1",
          "How to Create Multiple Buttons Apps part 2",
          "How to Test Multiple Buttons App",
          "How to Create a ToolBar in Android Studio j",
          "Test a Created Toolbar in Android Studio",
          "Button, Animation and ToolBar."
        ],
        "Reskin and Modify Video chat App": [
          "Introduction",
          "Import and Run Video Chat App",
          "Connect Video Chat App with BackEnd",
          "Test Video Chat App and Change Background",
          "Update Video Chat App and Run final Test",
          "Video Chat App quiz"
        ],
        "Reskin and Modify Clone Xender App": [
          "Introduction",
          "Import Clone Xender and Start Emulator",
          "Test the App on Emulator and Change Color",
          "Change, Resize and Compress Android App Images",
          "Change launcher, Description and Package Name",
          "Test Project App after Package name change",
          "Xender or Share it Clone Reskin Quiz"
        ],
        "Reskin and Modify Clone SnapChap App": [
          "Introduction",
          "Import, Build and Install Social Media App",
          "Import and Reskin Clone SnapChat Views",
          "Rename Package and Add Google-Services file",
          "Integrate Project with Firebase and Test the App",
          "Firebase Authenticate SignIn and RealTime Database",
          "SnapChat Clone Modify Quiz"
        ],
        "Create a Mobile App with Admin Panel": [
          "Introduction",
          "Integrate Admin Code to XAMPP Backend",
          "Connect Admin Panel locahost to phpMyAdmin",
          "Import Material Project and Link Admin Dashboard",
          "Update Admin Panel and Edit Items Categories",
          "Admin Panel Mobile App"
        ],
        "Convert Website to Responsive Mobile App with URL address": [
          "Introduction",
          "Convert Website to Mobile App with URL address k",
          "Convert Website to App with Splash Screen",
          "Convert Blog to Mobile App with Blog API",
          "Create blogspot from Scratch for Mobile App",
          "Connect Blog Mobile App to Blogger API",
          "Update Blog Post and Test Mobile App again",
          "Convert WordPress to Android Application",
          "Rename Package and Connect with Firebase",
          "Convert Website to App"
        ],
        "Create Login Page App with Backend": [
          "Introduction",
          "Create Login App with Back4App Backend",
          "Test Login App with Back4App as Backend",
          "Create Login App with FireBase as Backend",
          "Run Login App with FireBase as Backend",
          "Create Login Backend for Android App"
        ],
        "Create Currency App and add Codes": [
          "Introduction",
          "Create Currency App and add Codes",
          "Create another Layout of Currency App",
          "Change Dollars to Pounds with Rate",
          "Correct When EditText is empty Errors",
          "Add Share Button to Currency Converter App",
          "Resoource",
          "Currency converter"
        ]
      },
      "requirements": [
        "A Windows PC, Mac, Linux, or Chrome computer.",
        "No Programming Knowledge, you will learn everything."
      ],
      "description": "You will learn the best way to select Android studio versions you need as a Mobile App Developer.\nThe learner will learn how to install an Android studio with Emulator and the best approach to use.\nThe Android Apps Reskin Development Course: A Detail Approach breaks these followings:-\n-How to name an Android project app.\n-How to use Android Virtual Device Emulator to test your project app.\n-How to add gradient Radius and color in the project app.\n-How to compile and run your project app for testing purposes.\n-How to create a background image, multiple button app, to design Top Toolbar.\nYou will learn how to Reskin a video chat app, connect it to the background server, test the app on an emulator, and update it.\nModify and Reskin a clone Xender, import the Xender/ShareIt into Android studio, test Emulator. Change, resize, and compress the app images. Change the description and package name run the final test on Emulator.\nThe course demonstrated:- how to Reskin SnapChat, import, rebuild dependencies, rename the package name, integrate the app with firebase, authenticate the firebase login run the final test on AVD Emulator.\nThe course makes it easy for you to understand:- How to Reskin a Mobile app, with an admin panel - integrate the admin code with a server (backend) connect the app with the admin dashboard. Import admin panel (project panel) into Android Studio. Update the admin panel and edit items on the dashboard.\nStudents will learn how to convert websites to the android app.\nThis course gives a student the basic understanding of being a Mobile App Developer and Reskin Android Studio project codes. This course is taught by a professional who not only has experience but has developed several mobile applications.\n\n\nThe course demonstrates how to create a blogger website from scratch and use the API to convert the website to a responsive android app.\nStudents will learn to create a login backend page for mobile apps.\nStudents will understand how to create the most common everyday app called currency converter. The knowledge of currency converter will demonstrate how to create other similar apps like Love Calculator etc.\nThis course also demonstrates how to create, modify, and Reskin an app called Picture-in-Picture\nThe course discusses in detail how to create VPN, FCM, and Reskin Music App.\nStudents will learn how to use Git, Github, and apply Flutter in The knowledge acquired in this course will enable students to use Android Studio to create both android and iOS apps.",
      "target_audience": [
        "Any one that has a knowledge of Computer.",
        "Beginners in Android App Development.",
        "Anybody that wants to be Mobile App developer.",
        "Tech enthusiastic that is curious about being Mobile App developer.",
        "Those that want to make money from side hobby."
      ]
    },
    {
      "title": "ChatGPT Clone App | In-App Purchase | Firebase | Swift6 |",
      "url": "https://www.udemy.com/course/chatgpt-clone-app/",
      "bio": "ChatGPT Clone App Swift In-App Purchase Subscription Firebase OpenAI API REST Chat AI Onboarding",
      "objectives": [
        "To learn how a social media application can be designed at an advanced level and its functional features.",
        "Firebase Database and Authentication.",
        "Sending a request with RestAPI (OpenAI)",
        "In-app purchases with Storekit",
        "Auto layout UI design with Storyboard"
      ],
      "course_content": {
        "Intro": [
          "Welcome to ChatGPT Clone App"
        ],
        "Saving Data with Firebase": [
          "Firebase installation and registering unique id with Userdefaults.",
          "Save messages to Firebase",
          "Observe saved messages in Table View Cells"
        ],
        "Auto Layout & UI Design": [
          "Create Settings View and Tap Gesture Recognizer",
          "Create Premium View",
          "Gradient Border Color to Selected View"
        ],
        "In-App Purchase | AppStore Connect": [
          "AppStore Connect Operations, Installing the app on Testflight, Subscriptions",
          "Creating a Subscription and Saving the Premium to the Firebase Database",
          "Unlock some features by Observing the Premium in the Firebase Database",
          "Delete all messages"
        ]
      },
      "requirements": [
        "You must have one of the Macbook Pro and Air models or install Xcode on your Windows computer",
        "No programming language knowledge is required.",
        "Xcode 13 and later is required.",
        "Apple Developer Account"
      ],
      "description": "Experience the future of conversational interfaces firsthand with my groundbreaking Swift-based chatbot seamlessly integrated with the cutting-edge OpenAI API. Designed with meticulous attention to detail and crafted to deliver an exceptional user experience, this innovative application sets the standard for modern chat interfaces.\n\n\nFrom the moment users embark on their journey, they are greeted with intuitive onboarding screens featuring page control and collection view components. These elements guide users seamlessly through the initial setup process, ensuring they quickly familiarize themselves with the app's features and functionalities.\n\n\nOnce past the onboarding phase, users are seamlessly transitioned into the chat interface, where they can engage in dynamic conversations powered by the state-of-the-art GPT-3.5 turbo model from OpenAI. The chat experience is enhanced by fluid keyboard interactions and an aesthetically pleasing autolayout design, which elevate the user experience to unprecedented levels of sophistication and usability.\n\n\nMy expertise, acquired through comprehensive training including Udemy courses, is evident in every aspect of the chatbot's design and functionality. Each feature has been carefully crafted to meet the highest standards of professionalism and usability, ensuring that users feel empowered and engaged throughout their interaction with the application.\n\n\nMoreover, the integration of Firebase ensures seamless data management and synchronization, while in-app purchasing functionality provides users with access to premium features and content. Additionally, thorough guidance on App Store Connect procedures empowers users to navigate the deployment and management of their application with ease.\n\n\nExperience the limitless possibilities of conversational interfaces with my Swift-based chatbot. It represents a culmination of innovation, usability, and professional craftsmanship, setting a new benchmark for excellence in the realm of chat applications. Join the conversation today and discover the future of communication!",
      "target_audience": [
        "iOS developers of all levels",
        "Those who want to design applications",
        "Entrepreneurs",
        "Those who want to learn Swift programming language",
        "Those interested in artificial intelligence"
      ]
    },
    {
      "title": "Todo List App with React Native Expo - Mobile Development",
      "url": "https://www.udemy.com/course/note-app-with-react-native-expo-mobile-development/",
      "bio": "Develop a Fully Functional Todo List App using React Native with Expo cli, Redux, Redux Persist and AsyncStorage",
      "objectives": [
        "Learn how to use React Native to build real native mobile apps for iOS and Android",
        "Learn how to use Redux inside your mobile application to manage states",
        "Redux Persist",
        "AsyncStorage",
        "Crud Operations",
        "React Navigation",
        "Clean Architecture"
      ],
      "course_content": {
        "Welcome to the course": [
          "What we are going to build",
          "Technologies we are going to use"
        ],
        "Tools and Environment": [
          "Installing Node Js",
          "Installing Expo Cli",
          "Install Code Editor with Extension and formatters"
        ],
        "React Navigation": [
          "Installing React Navigation",
          "Creating screens"
        ],
        "Creating Required Screens": [
          "Run project and install UI libraries",
          "Home Screen",
          "Note Screen",
          "About Screen"
        ],
        "React Redux with Redux Persist": [
          "What is Redux",
          "What is Async Storage and Redux Persist",
          "Installing dependencies and implement redux, asyncstorage and redux persist"
        ],
        "Implementing Functions": [
          "Add Note function in note screen",
          "Show all notes",
          "Update note function",
          "Delete note function and Delete All notes functions"
        ]
      },
      "requirements": [
        "JavaScript knowledge is a must, next-gen JavaScript knowledge (i.e. ES6+) is recommended",
        "This will be easily, If you have any experience with React"
      ],
      "description": "Hello Everyone, in this course we are going to build a fully functional Todo List App using react native with Expo CLI, Redux, Redux persist and Asyncstorage as the main technologies.\nMobile apps are one of the best ways to engage with users - no wonder everyone wants to build one! Wouldn't it be great if you could use your web development knowledge, combined with your React knowledge, to build mobile apps with that?\nThat's exactly what React Native allows you to do!\nNo need to learn Java, Android, Swift, ObjectiveC or anything of that - React and JavaScript is all you need to create awesome native mobile apps that work on both Android and iOS. That's probably the reason why Instagram, AirBnB, Skype and many other global companies are using it to build their mobile apps!\nAlso in this project we are going to have a clean architecture in our project, you will learn how to organize your project structure and maintain good code readability. At the middle section of this course we are going to implement all the screens we need to create in this mobile application and we will install all the dependencies and the UI libraries which we need in this project.\nAt the end of this course we will implement delete function and delete all notes functions to delete notes from redux store and the asyncstorage as well. So you will understand how to manage redux with asyncstorage. Also I need to mention that this course is everyone in with any level of knowledge in react native mobile development. But if you have any previous React or React native experience then it will help you to understand all the concepts behind this application very easily.\nIf you wish to continue improving your skills and building your knowledge furthermore then this course is definitely the right option for you.",
      "target_audience": [
        "Anyone who wants to use React to build native mobile apps",
        "Every mobile developer who wishes to learn only one language to write cross-platform mobile apps",
        "Every mobile or web developer who's interested in writing high-performance native apps with JavaScript"
      ]
    },
    {
      "title": "Building Quiz Flutter Application with Laravel 6",
      "url": "https://www.udemy.com/course/building-quiz-flutter-application-with-laravel-6/",
      "bio": "Learn how to build flutter application using Laravel as APIs backend",
      "objectives": [
        "Create Flutter Application with Laravel API",
        "Create Laravel Restiful API"
      ],
      "course_content": {
        "Part One - Laravel Backend": [
          "Introduction to the Course",
          "Final Demo",
          "Prerequisites and Tools",
          "DEMO - Web Based Application",
          "Building Laravel APIs - Introduction",
          "Authentication and User Registration API",
          "Dashboard API - Explained!",
          "Start Quiz API - Explained",
          "My Quizes API",
          "Quiz Attempt API - Explained",
          "Change Password API",
          "Swagger UI - API Docs Explained",
          "Laravel Push Notification - FCM",
          "Laravel Quiz App - Source Codes"
        ],
        "Part Two - Flutter App": [
          "Part Two - Introduction",
          "Mobile App Demo",
          "Prerequisites and Tools - Review",
          "Project Structure",
          "Authentication and Registration - Dependencies",
          "Authentication and Registration - Designing Views",
          "Authentication and Registration - Coding Implementation",
          "Navigation Drawer Menu - Dashboard - Design",
          "Navigation Drawer - Dashboard - Coding Implementation",
          "Start Quiz - Design Review",
          "Start Quiz - Coding",
          "View Quiz Result - Coding Implementation",
          "Navigation Drawer - My Quizes - Design",
          "Navigator Drawer - MyQuizes - Coding Implementation",
          "Navigation Drawer - Change Password - Design",
          "Navigation Drawer - Change Password - Coding",
          "Navigation Drawer - Logout - Code Implementation",
          "Push Notification - Flutter Implementation",
          "Deploy Your App to Google Play Store!"
        ]
      },
      "requirements": [
        "Laravel Basics",
        "Flutter Basics"
      ],
      "description": "Flutter is an open-source UI software development kit created by Google. It is used to develop applications for Android, iOS, Windows, Mac, Linux, Google Fuchsia[5] and the web.\nLaravel is a web application framework with expressive, elegant syntax,\n\n\nIn this course, you will learn how to create flutter application using laravel framework as backend as Laravel is modern php framework. This course will allow Laravel developers to work with flutter developers together and show you how easy to consume Laravel APIs from  Flutter Application.\n\n\nYou will learn how to create Laravel REST APIs from scratch, you will learn all stuffs relating to Laravel also from there you will start building your Flutter application consuming the APIs.\nAt the end you will learn how to deploy your Flutter Application to Google Play Store!!\n\n\nEnroll Today!",
      "target_audience": [
        "Laravel developers who are curious to create backend API for mobile devices.",
        "Flutter developers who are curious to learn how to consume backend APIs"
      ]
    },
    {
      "title": "SwiftUI & SwiftData: Build a Smart Vegetable Gardening App",
      "url": "https://www.udemy.com/course/swiftui-swiftdata-build-a-smart-vegetable-gardening-app/",
      "bio": "Master SwiftUI and SwiftData by Building a Smart Vegetable Gardening App",
      "objectives": [
        "SwiftUI Architecture and Patterns – Learn how to structure and build scalable SwiftUI applications using best practices.",
        "Fetching Data from an API – Integrate a JSON API to download vegetable information dynamically.",
        "Offline Data Persistence with SwiftData – Store and manage user-added vegetables locally, ensuring offline support.",
        "Tracking Harvesting Time – Implement logic to monitor vegetable growth and notify users when it's time to harvest.",
        "Adding Notes and Images – Allow users to attach text notes, select images from the photo library, and capture photos using the camera.",
        "Implementing Search Functionality – Enable users to quickly search for vegetables and pests within the app.",
        "Building a Complete App – Gain the skills to develop and deploy a fully functional SwiftUI application from start to finish."
      ],
      "course_content": {
        "Introduction": [
          "Prerequisites",
          "Source code"
        ],
        "Gardening App": [
          "What we will be building?",
          "Implementing Models and Displaying Vegetables on Screen",
          "Loading Previews from JSON & Improving User Experience",
          "Implementing Tab Bar",
          "Displaying Vegetable Detail Screen",
          "Saving Vegetable to My Garden",
          "Displaying My Garden Vegetables",
          "Adding Note for My Garden",
          "Implementing PreviewTrait to Provide Sample Data to Xcode Previews",
          "Adding Note Image from Photos Picker",
          "Adding Note Image from Camera",
          "Adding UI Validation, Icons, NoteCellView etc",
          "Displaying Pests",
          "Implementing PestCellView",
          "Implementing PestDetailScreen",
          "Searching Vegetables and Pests",
          "Deleting My Garden Vegetables",
          "Quick Action to Add Vegetable to My Garden",
          "Deleting Notes",
          "Show Empty Views"
        ],
        "Conclusion": [
          "Bonus"
        ]
      },
      "requirements": [
        "Basic Swift Knowledge – Understanding of Swift syntax, variables, functions, and optionals.",
        "Familiarity with Xcode – Ability to navigate Xcode, run a project, and use the Swift Playgrounds or a simulator.",
        "Basic SwiftUI Experience – Some experience with SwiftUI is helpful, as key concepts will be explained.",
        "Xcode Installed (Latest Version Recommended) – The course uses Xcode to develop and test the app.",
        "Interest in App Development – A willingness to learn SwiftUI, SwiftData, and build a practical application."
      ],
      "description": "This course teaches you how to build a complete vegetable gardening app using SwiftUI and SwiftData. You will learn how to structure your app using SwiftUI’s built-in patterns while leveraging SwiftData for offline data persistence. Whether you are new to SwiftUI or looking to enhance your skills, this course provides practical, real-world experience in building a feature-rich application.\nWhat You Will Learn\nSwiftUI Patterns and Best Practices – Learn how to structure and build a scalable SwiftUI app.\nFetching Data from an API – Download vegetable information dynamically from a JSON API.\nOffline Data Management with SwiftData – Allow users to add vegetables to their garden and persist data offline.\nTracking Harvesting Time – Implement features to monitor vegetable growth and notify users when it’s time to harvest.\nAdding Notes and Images – Let users add text notes, select images from the photo library, and capture photos using the camera.\nDisplaying Pest Information – Provide details on common pests and their impact on different vegetables.\nSearch Functionality – Implement a search feature to quickly find vegetables and pests.\nLight and Dark Mode Support – Ensure a seamless user experience across different themes.\nBy the end of this course, you will have a fully functional gardening app and a solid understanding of how to use SwiftUI and SwiftData to build real-world applications.",
      "target_audience": [
        "Beginner to Intermediate iOS Developers – Developers who have basic Swift knowledge and want to build real-world applications using SwiftUI and SwiftData.",
        "SwiftUI Learners – Anyone looking to deepen their understanding of SwiftUI’s architecture and best practices.",
        "Developers Interested in Offline Data Persistence – Those who want to learn how to store and manage data locally using SwiftData.",
        "App Developers Wanting to Work with APIs – Anyone looking to integrate remote JSON APIs to fetch and display data dynamically.",
        "Students and Bootcamp Graduates – Learners who want hands-on experience in building a complete SwiftUI app from start to finish.",
        "Anyone Looking to Build a Portfolio Project – Developers who want to create a fully functional app to showcase in their portfolio."
      ]
    },
    {
      "title": "1000+ Android and Kotlin Interview Questions",
      "url": "https://www.udemy.com/course/1000-android-and-kotlin-interview-questions/",
      "bio": "Android & Kotlin MCQs to Master Concepts, Debug Errors, and Ace Developer Interviews",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you preparing for an Android developer interview or want to validate your Kotlin skills? This course provides a robust collection of 1000+ multiple choice questions covering the key concepts and practical knowledge required for success in Android and Kotlin technical interviews.\nFrom the basics of Kotlin language features like null safety, lambda expressions, and data classes to advanced topics like coroutines, Flow, and dependency injection, this course ensures a comprehensive revision path. In addition, you’ll solve MCQs on core Android topics, including Activity lifecycle, fragments, Jetpack components, Room, WorkManager, and Jetpack Compose.\nEach question is accompanied by a detailed explanation that helps you understand not just the right answer, but also the reasoning and context behind it. This learning-through-practice approach builds deep, long-term understanding, making your interview preparation both effective and efficient.\nThe course is ideal for both freshers and experienced Android developers looking to brush up before interviews, exams, or certifications. It also includes mock interview simulations and real-world scenario-based quizzes, giving you a feel of actual coding test environments.\nBy the end of this course, you’ll:\nBe well-versed in frequently asked interview questions\nHave solid understanding of Kotlin and Android fundamentals\nFeel confident tackling coding tests and technical screens\nWhether you're targeting startups, product companies, or MNCs, this course gives you the competitive edge.\n\nTopics Are :-\n\nAndroid/Kotlin Interview Guide for Senior Developers\nTotal Estimated MCQs: 1000\n\n\n\n\nI. Kotlin Deep Dive (150 MCQs)\nA. Kotlin Fundamentals (Easy/Medium - 30 MCQs)\nCore Topics:\nval vs var, data types, type inference\nNull safety (?., ?:, !!), nullable vs non-nullable types\nControl flow (if, when, for, while)\nFunctions (named arguments, default parameters, single-expression functions)\nClasses and Objects (constructors, properties, getters/setters, object keyword for singletons)\nInheritance and Interfaces (open, final, abstract, override)\nVisibility modifiers (public, private, protected, internal)\nString interpolation\nAdvanced Subtopics:\nlateinit and by lazy\nExtension functions and properties\nData classes and their auto-generated methods (equals, hashCode, toString, copy, componentN)\nSealed classes and interfaces for restricted hierarchies, exhaustive when expressions\nEnum classes\nNested and Inner classes\nType aliases\nOperator overloading\nDelegated properties (by)\nB. Functional Programming in Kotlin (Medium/Hard - 40 MCQs)\nCore Topics:\nHigher-order functions (functions as parameters and return types)\nLambdas and anonymous functions\nScope functions (let, run, apply, also, with) and their use cases, chaining scope functions\nCollections API (filtering, mapping, reducing, sorting, flatMap, associateBy, groupBy)\nAdvanced Subtopics:\ninline functions, noinline, crossinline\nreified type parameters\nSequence vs Collection for lazy evaluation\nTail recursion\nC. Kotlin Coroutines (Medium/Hard - 80 MCQs)\nCore Topics:\nIntroduction to Coroutines (lightweight threads, structured concurrency)\nsuspend functions\nCoroutines vs Threads (differences, advantages)\nCoroutine Builders (launch, async, runBlocking) and their use cases\nJob and Deferred\nCoroutineScope, SupervisorJob, CoroutineContext\nDispatchers (Main, IO, Default, Unconfined) and context switching\nException handling in coroutines (CoroutineExceptionHandler, supervisorScope)\nAdvanced Subtopics:\nFlow:\nCold vs Hot flows\nTerminal operators (collect, single, first, launchIn)\nIntermediate operators (map, filter, onEach, debounce, throttle, combine, zip)\nBackpressure handling\nStateFlow vs SharedFlow (differences, use cases, when to use which)\nMutableStateFlow, MutableSharedFlow\nCollecting flows in UI (collectAsState, repeatOnLifecycle)\nChannels:\nSendChannel, ReceiveChannel\nBuffered channels, Rendezvous channels\nConflated channels\nFan-out/Fan-in patterns\nTesting & Resource Management:\nTesting Coroutines and Flows (TestCoroutineDispatcher/StandardTestDispatcher, runTest)\nCancellation and resource management (DisposableEffect, onCompletion)\n\n\n\n\nII. Android Architecture & Components (200 MCQs)\nA. Android Fundamentals (Medium - 40 MCQs)\nCore Topics:\nActivity Lifecycle (onCreate, onStart, onResume, onPause, onStop, onDestroy, onRestart)\nFragment Lifecycle (onAttach, onCreate, onCreateView, onViewCreated, onStart, onResume, onPause, onStop, onDestroyView, onDestroy, onDetach)\nIntents (Implicit vs Explicit), Intent Filters\nServices (Started vs Bound services, Foreground services, IntentService, WorkManager)\nBroadcast Receivers (Static vs Dynamic, LocalBroadcastManager)\nContent Providers (when to use, UriMatcher)\nAndroidManifest.xml (permissions, components declaration)\nResource management (drawables, strings, layouts, themes)\nContext (Application Context vs Activity Context)\nAdvanced Subtopics:\nActivity Launch Modes (standard, singleTop, singleTask, singleInstance)\nTask and Back Stack management\nMemory Management and Leaks (detecting and preventing, common leak scenarios)\nANR (Application Not Responding) - causes and prevention\nProcesses and Threads in Android\nAIDL (Android Interface Definition Language) for IPC\nB. Android Jetpack Architecture Components (Medium/Hard - 80 MCQs)\nCore Topics:\nViewModel:\nPurpose and lifecycle awareness\nViewModelProviders vs by viewModels()\nSavedStateHandle and its integration\nViewModel for configuration changes\nLiveData:\nObservable data holder\nLifecycle awareness and preventing memory leaks\nMutableLiveData, MediatorLiveData\nTransformations (map, switchMap)\nRoom Persistence Library:\nEntities, DAOs, Database\nAnnotations (@Entity, @Dao, @Query, @Insert, @Update, @Delete)\nType converters\nDatabase migrations\nFlow and LiveData integration with Room\nNavigation Component:\nNavGraph, NavHost, NavController\nDeep Linking\nSafe Args\nPassing data between destinations\nNested navigation graphs\nWorkManager:\nGuaranteed background execution\nOneTimeWorkRequest vs PeriodicWorkRequest\nConstraints (network, battery, storage)\nChaining work, input/output data\nExpedited Work\nLifecycle Components:\nLifecycleOwner, LifecycleObserver\nLifecycleRegistry\nProcessLifecycleOwner\nrepeatOnLifecycle for flow collection\nAdvanced Subtopics:\nDependency Injection (Dagger Hilt, Koin):\n@Inject, @Module, @Provides, @Singleton, @ActivityScoped, @ViewModelScoped\nComponent hierarchy, custom scopes\nTesting with DI\nDataStore:\nPreferences DataStore vs Proto DataStore\nAsynchronous and transactional API\nType safety with Proto DataStore\nPaging Library (Paging3):\nPagingSource, Pager, PagingData, Flow\nRemoteMediator for network and database integration\nError handling, refresh, retry\nOther Advanced Topics:\nSecurity best practices (API keys, data encryption, ProGuard/R8)\nProfiling and Performance Optimization (CPU, memory, battery, network)\nModularization (feature modules, library modules, dynamic feature modules)\nTesting strategies (Unit, Integration, UI/Instrumentation testing)\nMocking and Stubbing\nTest doubles (fakes, spies)\nC. Architectural Patterns (Hard - 80 MCQs)\nCore Topics:\nMVC, MVP, MVVM (differences, pros and cons, when to use)\nMVI (Model-View-Intent)\nClean Architecture principles (Layers: Domain, Data, Presentation)\nUnidirectional Data Flow (UDF)\nDesign Patterns (Singleton, Builder, Factory, Observer, Adapter, etc., applied in Android context)\nAdvanced Subtopics:\nApplying Clean Architecture with Jetpack Compose\nOffline-first approaches\nReactive Programming (RxJava/Flow compared)\nHandling complex state management in large-scale applications\nCustom View/ViewGroup creation and lifecycle\nPerformance bottlenecks in traditional View system vs Compose\nUnderstanding the Android rendering pipeline\n\n\n\n\nIII. Jetpack Compose Deep Dive (350 MCQs)\nA. Compose Fundamentals (Easy/Medium - 70 MCQs)\nCore Topics:\nDeclarative vs Imperative UI\n@Composable functions (annotations, purpose)\nComposition and Recomposition (how it works, triggers, scope)\nState in Compose (remember, mutableStateOf, rememberSaveable)\nState hoisting (why and how)\nModifiers (order of modifiers, common modifiers like padding, fillMaxWidth, clickable)\nBasic Layouts (Column, Row, Box)\nText, Button, Image, TextField Composables\nInput handling (clicks, text input)\nPreviews (@Preview, PreviewParameter)\nMaterial Design in Compose (themes, typography, shapes, colors)\nAdvanced Subtopics:\nCompositionLocal and CompositionLocalProvider\nCompositionLocals for theme and other globally accessible data\nRecomposition scope granularity and optimizing recompositions\nStable and Immutable types (how they affect recomposition)\nderivedStateOf for optimizing expensive calculations\nsnapshotFlow for converting Compose state into Flow\nB. Advanced UI & Layouts (Medium/Hard - 100 MCQs)\nCore Topics:\nLazy Composables:\nLazyColumn, LazyRow, LazyGrid\nitems and itemsIndexed\nKeys for stable IDs in lazy lists (performance implications)\nScroll state management\nSticky headers\nLayout & Drawing:\nCustom Layouts (Layout Composable, SubcomposeLayout)\nConstraintLayout in Compose (ConstraintLayout, createRefs, constrainAs)\nBoxWithConstraints\nSlot APIs\nCustom Drawing (Canvas, drawBehind, drawWithContent)\nTouch and gesture handling (pointerInput, detectTapGestures, detectDragGestures)\nIntegration with traditional Views (AndroidView, ComposeView)\nAdvanced Subtopics:\nPerformance optimizations for large lists and complex UIs\nUnderstanding the Measure, Layout, and Draw phases in Compose\nCustom modifiers\nGraphics and animation techniques in detail (interpolation, easing, animate*AsState, Animatable, updateTransition, AnimatedVisibility, Crossfade, rememberInfiniteTransition)\nCreating custom Layout Composables for specific layout needs\nUnderstanding IntrinsicMeasurable and IntrinsicMeasureBlock\nAccessibility in Compose\nC. State Management & Side Effects (Hard - 120 MCQs)\nCore Topics:\nViewModel integration with Compose (collectAsState, toState, viewModel())\nHandling one-time events (Snackbar, Navigation events)\nSide effects (LaunchedEffect, rememberCoroutineScope, DisposableEffect, SideEffect)\nLifecycle-aware coroutine launching (rememberCoroutineScope, LaunchedEffect with keys)\nEffect handlers for specific use cases (e.g., produceState, snapshotFlow)\nManaging shared state across multiple Composables\nUnidirectional Data Flow (UDF) in Compose architecture\nAdvanced Subtopics:\nComplex state patterns (e.g., multi-step forms, nested states)\nError handling strategies in Compose (UI, network, data layer)\nManaging resources with DisposableEffect (e.g., listeners, subscriptions)\nUnderstanding the different LaunchedEffect keys and their impact on lifecycle\nState restoration (rememberSaveable, custom Saver)\nArchitecture for large-scale Compose applications (e.g., combining MVVM with UDF and Jetpack Compose)\ncompositionLocalOf vs. other state-sharing mechanisms\nDeep dive into MutableState internals and how it triggers recomposition\nD. Testing Jetpack Compose (Medium/Hard - 60 MCQs)\nCore Topics:\nTesting Composables (unit and integration tests)\ncomposeTestRule\nSemantics (finders, actions, assertions)\nonNode, onNodeWithText, onNodeWithTag, performClick, assertIsDisplayed\nTesting state changes and side effects\nTesting LazyColumn and scrolling behavior\nScreenshot testing\nAdvanced Subtopics:\nCustom semantics properties\nTesting interactions with complex gestures\nPerformance testing of Composables\nMocking dependencies for Compose tests\nAccessibility testing of Compose UI\n\n\n\n\nIV. General Android Development for Experienced Developers (50 MCQs)\nA. Build System & Tooling (Medium - 20 MCQs)\nCore Topics:\nGradle (build types, product flavors, dependencies, build logic)\nOptimizing build times\nAPK/AAB analysis (size reduction techniques)\nAndroid Studio features and debugging tools (Layout Inspector, Profilers, Debugger)\nLinting and code quality tools\nAdvanced Subtopics:\nCustom Gradle plugins\nMulti-module project setup and dependencies\nCI/CD pipelines for Android projects\nUnderstanding R8/ProGuard rules\nB. Advanced Topics (Hard - 30 MCQs)\nCore Topics:\nSystem Architecture (Linux Kernel, HAL, ART, Zygote, Libraries, Application Framework)\nBinder IPC\nBackground processing best practices (WorkManager, JobScheduler, Foreground Services)\nPerformance optimization (rendering, memory, battery)\nSecurity best practices (data storage, network, permissions)\nAccessibility (TalkBack, content descriptions)\nInternationalization and Localization\nApp Bundles and Dynamic Delivery\nFirebase integration (Crashlytics, Analytics, Remote Config, Cloud Messaging)\nAdvanced Subtopics:\nCustom ROM development (if applicable to their experience)\nDeep understanding of Android internals (memory management, garbage collection)\nProfiling and debugging complex performance issues\nDesigning for large screen devices and foldables\nWear OS, Android TV, Android Auto development considerations\nMachine Learning on Android (ML Kit, TensorFlow Lite)\n\n\n\n\nInterview Focus Areas\nThis guide emphasizes deep understanding over surface-level knowledge. Expect questions like:\n\"Explain how recomposition works internally and what are the common pitfalls that lead to unnecessary recompositions, and how do you optimize them?\"\n\"Compare and contrast StateFlow and SharedFlow with concrete use cases for each.\"\n\"How would you architect a complex, multi-module Android application using Clean Architecture with Jetpack Compose?\"\nThe questions are designed to test not just theoretical knowledge, but practical experience and problem-solving skills that come with 10+ years of Android development experience.",
      "target_audience": [
        "Basic understanding of Kotlin and Android are required."
      ]
    },
    {
      "title": "The Complete iOS 14 Developer - Create Apps in Swift 5",
      "url": "https://www.udemy.com/course/swift-coding-for-ios-apps-learn-basic-swift-programming-for-ios-apps/",
      "bio": "Swift Coding Lessons in iOS 14 from a Pro Developer",
      "objectives": [
        "Get the fundamentals of iOS and Swift Development!",
        "Understand programming from a veteran in the industry",
        "All this prepares you for my other courses, and this one is free!"
      ],
      "course_content": {},
      "requirements": [
        "You will need a Mac running the latest macOS to create iOS apps",
        "You can also create your own 'Hackintosh' if you can't afford a Mac"
      ],
      "description": "The Complete iOS 14 Developer has just ONE goal - to show how you can be the best iOS developer, even if you're starting from scratch!\nOther Swift and iOS 14 courses COMPLETELY miss why you're learning to become a developer. How do I know this? Well I've taken their courses because I wanted to see what the competition is up to!\nAnd what do these other guys miss?\nWell they haven't thought about you and what your needs are! Let me tell you why I think you're here. I think it's because maybe you are looking for a way to improve yourself - either via high paying jobs, freelancing or by creating your very own successful startup.\nI get that.\nSo whilst this course gives you the basic developer skills you need to get started, it also has more. It has my insight from decades of real world development experience, invaluable for your career progression.\n--------------------------------------------------------\nHere's a recent message I received from one of my students:\n\" Hi Grant, I managed to land the fabled 6 figure developer job yesterday thanks to your course. In the interview they asked me complicated questions and luckily you'd explained the majority of those. Thanks for a great course and I'm off to buy the rest of your courses now that I have a little extra change :) \"\n--------------------------------------------------------\nWho Am I?\nEveryone wants to know who's teaching them. Well, here's my bio:\nI started out as NOT A PROGRAMMER. Hard to believe when I tell you that I've worked on dozens of the most popular apps out there right?\nThe fact that I didn't start out as a programmer means that I actually remember what it's like to be a beginner. I remember teachers throwing useless jargon at me and you know what?\nIt sucked!\nThat's why in this course I tell you everything you need to know in plain English!\nIn Silicon valley venture capitalists talk about return on investment a lot. A good return on investment is something like 10%.\nImagine if you could have a return of 10,000%?\nWell that's what you get when you take this course. An investment of a few coffees returns your investment multiple times over!\n----------------------------------------------------------------------------------------\n\nYou are your biggest asset. Invest in yourself and take this course today!\n----------------------------------------------------------------------------------------",
      "target_audience": [
        "Beginners to programming or iOS programming should take this course"
      ]
    },
    {
      "title": "Building and Designing Food Delivery App with Dart & Flutter",
      "url": "https://www.udemy.com/course/building-and-designing-food-delivery-app-with-dart-flutter/",
      "bio": "Build food delivery app, create delivery tracking feature, integrate interactive map, and design app UI using Flutter",
      "objectives": [
        "Learn the basic fundamentals of Dart and Flutter",
        "Learn how to build a food delivery app using Dart and Flutter",
        "Learn how to import Flutter packages and create main app widget",
        "Learn how to create and structure app data models",
        "Learn how to build main screen widget and state management",
        "Learn how to create filter, sort, and add to cart features",
        "Learn how to add user input for delivery address",
        "Learn how to create geocoding feature using Open Street Map",
        "Learn how to create basic payment simulation and food order processing",
        "Learn how to design main screen navigations and tabs",
        "Learn how to build and design home screen tab",
        "Learn how to build and design cart page",
        "Learn how to design calories tracker and food order history page",
        "Learn how to build and integrate Flutter interactive map",
        "Learn how to build delivery tracking page and simulate driver movement",
        "Learn how to design delivery tracking page and add markers to the map",
        "Learn how to conduct functional and performance testing on the app"
      ],
      "course_content": {
        "Introduction to the Course": [
          "Introduction",
          "Table of Contents",
          "Whom This Course is Intended for?"
        ],
        "Tools & Resources": [
          "Tools & Resources"
        ],
        "Introduction to Dart & Flutter": [
          "Introduction to Dart & Flutter"
        ],
        "Importing Flutter Packages & Creating Main App Widget": [
          "Importing Flutter Packages & Creating Main App Widget"
        ],
        "Creating & Structuring App Data Models": [
          "Creating & Structuring App Data Models"
        ],
        "Building Main Screen Widget & State Management": [
          "Building Main Screen Widget & State Management"
        ],
        "Creating Filter, Sort, and Add to Cart Features": [
          "Creating Filter, Sort, and Add to Cart Features"
        ],
        "Adding User Input for Delivery Address": [
          "Adding User Input for Delivery Address"
        ],
        "Creating Geocoding Feature with Open Street Map": [
          "Creating Geocoding Feature with Open Street Map"
        ],
        "Creating Basic Payment Simulation & Food Order Processing": [
          "Creating Basic Payment Simulation & Food Order Processing"
        ]
      },
      "requirements": [
        "No previous experience in app development is required",
        "Basic knowledge in Dart and Flutter"
      ],
      "description": "Welcome to Building and Designing Food Delivery App with Dart & Flutter course. This is a comprehensive project based course where you will learn how to build a fully functional food delivery mobile app from scratch. This course is a perfect combination between app development and user interface design, making it an ideal opportunity to practice your programming skills while improving your technical knowledge in Flutter. In the introduction session, you will learn the basic fundamentals of Dart and Flutter, such as getting to know their main features and technical limitations. Then, in the next section, you will learn how to install Flutter and set up the Flutter project properly. Afterward, we will start building the food delivery app. Firstly we are going to create food data structure, like food name, price, calorie, and add image. Following that, we are going to create the first feature, filtering and sorting food data. This feature will allow users to easily search through the food list, apply filters such as price or calorie range, and sort items by relevance, popularity, or nutritional values. Once that feature has been completed, we are going to build the second feature which is the cart management system. This feature will facilitate users to add, remove, and update food items in their cart while keeping track of total price and calories in real time. Then, after that, we are going to create food order and tracking functionality. This feature will enable users to place an order and track its progress from order preparation to arrival. Then, we are also going to create a delivery time estimation feature. The app will calculate the estimated delivery time by dividing the distance between the customer location and the restaurant by normal average velocity, giving users a realistic expectation of when their food will arrive. Following that, we are going to create a calories tracker system. This feature will enable users to monitor their calorie intake from the meals they order, making the app not just about convenience but also about maintaining a healthy lifestyle. Once that feature has been added, we will also simulate the payment process. This feature provides a realistic checkout flow with payment options while ensuring a straightforward process. Then, we will add the order history functionality. This feature will allow users to revisit their past orders, reorder their favorite meals, and analyze their eating habits over time. Then, we are also going to create and integrate the interactive map to the app. This feature will enable users to enter their locations, track their delivery in real time, and simulate the entire delivery process using basic animation. Lastly, at the end of the course, we will conduct functional and performance testing to ensure the food delivery app is fully functioning and all features are working as intended.\nFirstly, before getting into the course, we need to ask this question to ourselves, why should we build mobile apps using Flutter? Well, here is my answer, Flutter allows developers to create high performance apps for both IOS and Android from a single codebase, saving time and effort compared to developing separate native apps. It also provides high quality pre designed widgets and customizable UI components, enabling developers to bring their creative ideas to life quickly and efficiently. Additionally, Flutter enables instant change without having to restart the entire app, making testing faster.\nBelow are things that you can expect to learn from this course:\nLearn the basic fundamentals of Dart and Flutter\nLearn how to build a food delivery app using Dart and Flutter\nLearn how to import Flutter packages and create main app widget\nLearn how to create and structure app data models\nLearn how to build main screen widget and state management\nLearn how to create filter, sort, and add to cart features\nLearn how to add user input for delivery address\nLearn how to create geocoding feature using Open Street Map\nLearn how to create basic payment simulation and food order processing\nLearn how to design main screen navigations and tabs\nLearn how to build and design home screen tab\nLearn how to build and design cart page\nLearn how to design calories tracker and food order history page\nLearn how to build and integrate Flutter interactive map\nLearn how to build delivery tracking page and simulate driver movement\nLearn how to design delivery tracking page and add markers to the map\nLearn how to conduct functional and performance testing on the app",
      "target_audience": [
        "App developers who are interested in building and designing food delivery app using Dart and Flutter",
        "Restaurant owners who are interested in creating and launching food delivery app for their business"
      ]
    },
    {
      "title": "Create Flutter UI Screen & GetX Router - Workout Fitness App",
      "url": "https://www.udemy.com/course/flutter-ui-getx-workout-fitness-app/",
      "bio": "Create Workout Fitness App with Flutter UI and GetX Router",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Demo Fitness App"
        ],
        "Coding Started": [
          "Fitness App (#1) - Welcome Screen",
          "Fitness App (#2) - About Screen",
          "Fitness App (#3) - Login Screen",
          "Fitness App (#4) - Forgot Password Screen",
          "Fitness App (#5) - Register Screen"
        ]
      },
      "requirements": [
        "Knowledge Basic Programming",
        "Knowledge Basic Flutter",
        "Knowledge Basic GetX"
      ],
      "description": "Flutter is an open-source mobile application development SDK created by Google. It is used to develop applications for Android and iOS, as well as to be the primary method of creating applications for Flutter widgets that incorporate all critical platform differences such as scrolling, navigation, icons and fonts to provide full native performance.\n\n\nWorkout Fitness App UI Kit developed and designed for Developer using Flutter. it contains 10++ total of screens with many ready-to-use screens, widgets, features, functions, integration and animation that can be used for multi-purpose applications on iOS and Android devices. It is optimized coded and easy to customize.\n\n\nGetX is an extra-light and powerful solution for Flutter. It combines high-performance state management, intelligent dependency injection, and route management quickly and practically.\n\n\nGetX has 3 basic principles. This means that these are the priority for all resources in the library: PRODUCTIVITY, PERFORMANCE, AND ORGANIZATION.\n\n\nGetX has a huge ecosystem, a large community, and a large number of collaborators, and will be maintained as long as the Flutter exists. GetX too is capable of running with the same code on Android, iOS, Web, Mac, Linux, Windows, and on your server.\n\n\nOur mission at Coding Your Life is to help purpose-driven Flutter developers go full-time doing what they love and making an impact through coding. We achieve this with helpful Flutter tips and clean UI design apps.",
      "target_audience": [
        "Mobile developer who want to know how to implement flutter for real projects"
      ]
    },
    {
      "title": "Android iOS Apps For WordPress Blog Using Ionic Angular",
      "url": "https://www.udemy.com/course/build-android-ios-wordpress-blog-app-using-ionic5-angular/",
      "bio": "Build A Full Featured WordPress Blog app for Mobile devices using Latest Ionic Angular, Made Blogging Easiest Ever!",
      "objectives": [
        "Build a Complete Android iOS app for your WordPress Blog and learn almost everything about Ionic 5(5.2.3) as well as Angular",
        "An excellent working experience with the beautiful and most popular Ionic 5 framework and Modern Angular",
        "WordPress Authentication using Ionic 5 Angular Android iOS apps",
        "Explore WordPress Core REST API including listing posts, read posts, create posts, leave comments as well as update your posts",
        "Learn Modern Angular and perform CRUD using http requests, authentication, authorization and error handling",
        "Fully Understand the technology behind latest Ionic angular apps",
        "Integrate this blog app with any WordPress Website to bring the most exclusive Blogging experiences ever",
        "Display latest posts by date, Posts by Categories, Posts by Tags, read it and share it anywhere",
        "Blogger’s Personal Profile Management, View own posts, Create new posts, as well as Update own Posts",
        "Finally generate Android & iOS apps using Cordova with your own app Icon and Splash Screen Image as well as Proper guidance on how to submit apps to AppStore and PlayStore"
      ],
      "course_content": {},
      "requirements": [
        "You have to have some previous working experience with any programming language.",
        "Basic knowledge in HTML,CSS is required",
        "Having a good understanding of Vanilla JavaScript will add advantages.",
        "If you have previous work experience with any version of Ionic Angular and WordPress then it is going to be very smooth for you but not mandatory."
      ],
      "description": "Welcome Viewers,\nI hope you all are doing great. I am M A Hasan, a full time freelance web and hybrid apps developer. Previously, I created two courses here in Udemy, i got a lot of requests from students to develop a full featured app for WordPress blog where a blogger can read posts, comment and reply on the post, logged in author can create new posts, update existing posts, see his profile directly from android and iOS devices just like a website using Apps.\nSo i designed this new course:\nBuild Android iOS WordPress Blog App Using Ionic5 & Angular\nBuild a full featured WordPress Blog app for Android and iOS devices using Latest Ionic Angular, Made blogging easiest ever.\nThis course will give you an amazing learning experience and fully understand the Ionic 5 framework and modern angular as well as technology behind the hybrid apps development.\nI will discuss the beautiful Ionic 5 framework, use many of its components to build our blogging app, dig deep into WordPress rest api, and learn almost all basic to advance levels of modern angular like variables, functions, services, authentication and authorization, handling http requests, make crud operations, template driven forms, reactive forms and so on.\nYou may find related tutorials, topics in some blogs, but those are not explained in such a way so that a beginner level developer can learn and understand them perfectly. Moreover, you are getting everything in one place with well coded source code that is super clear to you. And from one source code based, you're getting both an Android and iOS app that is ready to submit to PlayStore and AppStore.\nAt the end of the course, you are going to get a full featured WordPress Blogging app where user can do almost everything like a user can do in WordPress blog website including read latest posts, leave comment and reply to a post, logged in author can create his own post as well as update the post as required and so on.\nSo you are not only going to develop the WordPress Blogging apps for Blogggers and make the best blogging experiences ever but also you are going to be a master of hybrid app developments using Ionic and Angular, taking your web development career to the next level.\nI hope to see you in this course very soon. This course comes with a 30 days money back guarantee. So, buy the course, watch the videos, if it does not go well then ask for a refund within 30 days, all your money back, no questions asked.\nSo why are you waiting? Let's start this great adventure.",
      "target_audience": [
        "Basic working knowledge or experience in any version of Ionic Framework with Angular and WordPress is preferable but not mandatory.",
        "Beginner to Work With Ionic 5, Angular and Cordova.",
        "Beginner to implement WordPress REST API using Ionic 5 and Angular.",
        "Anyone interested to develop a full featured Online Blogging Apps for WordPress based Website and learn details about Ionic 5 Framework with Angular.",
        "Anyone interested to Understand the technology behind the Ionic angular apps.",
        "Anyone who wants to take his programming career to the next level by learning hybrid apps development"
      ]
    },
    {
      "title": "Android App Development using Android Studio- Built 6 apps",
      "url": "https://www.udemy.com/course/android-development-android-app-development-from-scratch-o/",
      "bio": "Created 6 apps using mysql database, retrofit, firebase, sqlite, Android Studio, Jetpack Components, Api integration",
      "objectives": [
        "A complete Android App development Course",
        "Student will be able to create android app",
        "Can get a job as a android developer",
        "Complete Firebase Tutorial",
        "API Integration with PHP API and MYSQL Database",
        "Google Map Integration",
        "Firebase Database",
        "Learn Android App Development step by step",
        "Learn the latest Android version (Android 11 - Android R)",
        "Android Studio",
        "Become a professional Anroid App developer",
        "No programming knowledge required!",
        "android",
        "android development",
        "mobile app development",
        "android app development",
        "Enroll now, start your own App business and work from anywhere in the world",
        "Learn Publishing Android App on Google Play",
        "The Android platform is increasingly popular with developers, and a dominant force in the global smartphone market.",
        "Quiz App"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Basic Designing in XML": [
          "buttons and EditText",
          "Images and Checkboxes in Android",
          "Radio buttons , Spinner and Intent Navigation between Screens in android"
        ],
        "Adapters, ListView and RecyclerView in android": [
          "ListView in Android"
        ],
        "Local Databases in android": [
          "Shared Preferences",
          "Data types and Methods"
        ],
        "My Calculator App": [
          "My Calculator App"
        ],
        "Restaurant App for Beginners": [
          "Create a Project for Restaurant App",
          "Add Food Categories UI 1",
          "Add Food Categories UI 2",
          "Add Food Categories UI 3",
          "Add Food Categories UI 4",
          "Add Food Categories UI 5",
          "Google Map Implementation 1",
          "Google Map Implementation 2",
          "Google Map Implementation 3",
          "Google Map Implementation 4"
        ],
        "Hotel Room Booking App": [
          "Hotel Room Booking App Overview",
          "Create User Interface for Home Activity",
          "Create UI for User Data Part3",
          "Hotel Room Booking Part4",
          "Hotel Room Booking Part5",
          "Hotel Room Booking Part6",
          "Hotel Room Booking Part7, What is api?",
          "Hotel Room Booking Part8, Post Data to MYSQL , API Integration"
        ],
        "Quiz App using MYSQL Database": [
          "Quiz App Overview",
          "QuizApp Part1",
          "Create MySql Database",
          "Retrofit Implementation",
          "API Integration",
          "Show Questions on UI",
          "Next Question Implementation",
          "Quiz Result",
          "Quiz Result Part2",
          "Quiz Result Part3"
        ],
        "Save Places on Google map Firebase App": [
          "Save Places to Google map Introduction",
          "Tab Layout",
          "Tab Fragments",
          "Home Fragment",
          "Firebase Implementation",
          "Upload Images Camera/Gallery",
          "Reduce File Size",
          "Add Listview",
          "Add Listview Adapter",
          "Images as google map Marker"
        ],
        "Quiz": [
          "Android app development"
        ]
      },
      "requirements": [
        "No prior Android knowledge is required!",
        "No programming Android App Development knowledge required!",
        "A Windows PC, Mac or Linux Computer",
        "Internet and Basic Computer Knowledge",
        "Desire to learn Android Application Development",
        "Nothing else! It’s just you, your computer and your ambition to get started today",
        "Don`t worry. Setup and installation instructions are included for each platform",
        "Watching the Android course videos completely, to the end and in order."
      ],
      "description": "Welcome to the “Android Development: Android App Development From Scratch” course.\nLearn Java, Android, Android Studio, and build real-world applications using Android 11. Whether you're a complete beginner or looking to polish your existing skills, this course is designed to take you from beginner to advanced level.\n\nWhy Learn Android Development?\nThe Android platform continues to dominate the global smartphone market, making it a top choice for developers and businesses. As mobile apps become essential tools for user engagement, Android development skills are more in demand than ever.\nIf you’re asking yourself any of the following:\nDo you want to improve your career opportunities by learning Android?\nDo you want to learn Android app development from scratch?\nDo you want to become proficient in Android Studio?\nDo you want to build your first Android application?\nIf your answer is “yes,” then this course is exactly what you’re looking for.\n\nWhat Makes This Course Special?\nCovers Android 11, the most widely used Android version\nTaught by an experienced developer with 8 years of real-world experience\nPerfect for college assignments, portfolio projects, or freelance gigs\nDesigned for complete beginners with step-by-step explanations\n\n\nWhat You Will Learn\nYou’ll start from the basics and gradually move toward advanced app development. Throughout the course, you will build six real-world projects:\nCalculator App – Learn UI basics, layout management, and event handling\nRestaurant App – Work with categories, maps, and location-based data\nSave Locations with Images App (using Firebase) – Integrate Firebase for storage and real-time database features\nQuiz App – Understand dynamic data handling, user interaction, and logic\nHotel Room Booking App – Learn advanced form handling and data submission\nAndroid Developer Portfolio Project – Combine skills for a complete, professional-level app\n\nCourse Highlights\nLearn Android development using Java\nGet hands-on experience with Android Studio\nUnderstand how to create UI/UX with Material Design principles\nBuild real apps step-by-step from scratch\nWork on projects ideal for college submissions or freelance portfolios",
      "target_audience": [
        "beginner android developers",
        "Students",
        "Children's"
      ]
    },
    {
      "title": "Android App Development with Laravel Authentication",
      "url": "https://www.udemy.com/course/android-app-development-with-laravel-authentication/",
      "bio": "Kotlin and Laravel Authentication concepts",
      "objectives": [
        "Install Laravel and configure Laravel Passport",
        "Creating a new project on Android Studio and native the project files",
        "Learn the Model-View-View-Model ()MVVM design pattern in action",
        "Learn and practice using Jetpack Compose, the modern UI toolkit for developing native UI on Android"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Demonstration of the App",
          "Exploring Laravel , Kotlin and Jetpack Compose"
        ],
        "Build the Backend": [
          "Laravel Install and Laravel Passport Configurations",
          "Implementation Register Controller in Laravel",
          "Implementing Login Controller in Laravel",
          "Implementing an Issue Token Trait",
          "Implementing Logout and Refresh Token",
          "Creating Routes for the APIs",
          "Testing APIs using Postman"
        ],
        "Working on the Android App": [
          "Create a New Project in Android Studio",
          "Setting Up your App and Configure the Gradle Dependencies",
          "Exploring Project Files and Prepare Project Structure",
          "Creating Models for your App",
          "Network Call Interface for your App",
          "Implementing a Repository",
          "Handling Registration function in Repository",
          "Handling Getting Auth User and Logout Method in Repository",
          "Applying Dependency Injection using Dagger Hilt",
          "Prepare Assets for your App",
          "Setup the Application file and Main Activity",
          "Creating a Login Screen",
          "Working on the Login ViewModel",
          "Handling Errors in Login ViewModel",
          "Connect the Login Screen and ViewModel",
          "Listening to Events from the ViewModel",
          "Fix Network Issue and Test the Login Screen",
          "Finalise the Registration Screen"
        ]
      },
      "requirements": [
        "Needs basic programming skills and familiar with Laravel and Android development"
      ],
      "description": "In this course, we are going to learn how to develop an Android App that can allow users to Register, Login and Logout where the APIs come from the Laravel Application. Laravel is a PHP Framework that follows the MVC (Model View Controller) Architecture. And we are going to use Laravel Passport to secure our APIs and allow users to obtain tokens that can be used to consume the API. This is to say, Laravel Passport provides a full OAuth2 server implementation for your Laravel application.\nOn the other hand, we are going to use Kotlin programming language to build an Android App, Kotlin is a recommended language by Google to develop Android Apps. You can run side by side with Java while being easier to write. If you want to develop Android apps or multi-platform applications with the JVM, you can do it quicker and simpler with Kotlin than with Java that is why we have chosen Kotlin in this course.\nIn addition, we’re going to use Jetpack Compose which is a modern toolkit for building native UI for Android. Jetpack Compose simplifies and accelerates UI development on Android. Quickly bring your app to life with less code, powerful tools, and intuitive Kotlin APIs.",
      "target_audience": [
        "This course is for people who wants to build and secure their apps data using the oauth2. Also, I want to take advantage of existing Laravel Application and extend functionalities to the mobile app."
      ]
    },
    {
      "title": "Android Development from Scratch to Create Cool Apps!",
      "url": "https://www.udemy.com/course/sisoft-android-basic-to-create-cool-apps/",
      "bio": "We start learning Android Programming by understanding concepts and implementing them live!",
      "objectives": [],
      "course_content": {
        "Hey there ! Let me introduce you to Android and Android Studio !": [
          "Course Objective - For Whom and What to expect ?",
          "Setting up Android Studio !",
          "What is a Layout !?",
          "A few important concepts to know ! View , Pixels & dp.",
          "A few important concepts to know ! Padding & Margin",
          "A few important concepts to know ! wrap_content , match_parent & gravity.",
          "Let's not forget the basics... Quiz",
          "2 Most important types of Layouts",
          "Writing Layouts on XML.",
          "Using a Relative Layout to design a particular screen.",
          "Your First App ! Designing the Layout",
          "Your First App ! Coding with Java",
          "Quiz 2: Android Studio - XML & JAVA"
        ],
        "Android Versions": [
          "Enhancements in Oreo",
          "Enhancements in Nougat",
          "Enhancements in Marshmallow",
          "Enhancements in Lollipop"
        ]
      },
      "requirements": [
        "Basic Knowledge of any Programming language"
      ],
      "description": "Android Programming lets you create stuff that's meaningful . And that's what we focus on !\nAny programming language is just another language unless you learn it the right way. A programmer can not benefit from its features if she/he does not appreciate a Programming Language's core concepts.\nBeing an open source platform, it is very important to learn how to solve the problems taking help from other Android Developers. During the course , we guide students how to be not just a programmer but be an active participant in the Android Open Source Community !",
      "target_audience": [
        "Got an idea and what to give it the shape of an Android App ! Most Welcome :)",
        "Enjoy Coding? Join us !!"
      ]
    },
    {
      "title": "Swift Testing Essentials: A Practical Guide",
      "url": "https://www.udemy.com/course/swift-testing-essentials-a-practical-guide/",
      "bio": "Learn TDD, stubs, mocks, UI testing, and more to build robust, maintainable, and bug-free apps",
      "objectives": [
        "Test-Driven Development (TDD): Understand and apply TDD principles to write test-first code.",
        "Unit Testing with Stubs and Mocks: Learn how to isolate dependencies and write unit tests using stubs and mocks.",
        "UI Testing: Develop UI tests to verify user interactions and app flows.",
        "View Logic Testing in SwiftUI: Test view models and SwiftUI views to ensure correct behavior.",
        "Structuring and Maintaining Tests: Implement best practices for organizing and writing maintainable test cases.",
        "Real-World Testing Workflows: Avoid common pitfalls and apply practical testing strategies to production-ready applications."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Exercise Files",
          "Getting Started"
        ],
        "Unit Tests": [
          "Adding Testing Targets to your Project",
          "Tour of the Starter Project",
          "Deposit Amount for Check and Cash Deposit Type",
          "Structuring your Tests Using AAA Format",
          "Deposit Amount for Transfer Deposit Type & Calculating Fee",
          "Enable Sounds for Test Success & Failures",
          "Negative Amount Throws an Exception",
          "Withdrawing with Insufficient Funds Results in Penalty",
          "Depositing Amount is Added to the Transaction for Bank Account"
        ],
        "APRService Tests": [
          "APR Service Returns APR within Expected Range",
          "Implementing CreditScoreProtocol and MockCreditScoreService",
          "Implementing APR Calculation Fails for SSN with no Credit Score"
        ],
        "Integration Testing": [
          "APR Service Calls Get Credit Score on Credit Score Service",
          "APR Service Does Not Call Credit Score Service for Invalid SSN"
        ],
        "UI Testing": [
          "User can Calculate APR Successfully with Valid SSN",
          "Implementing CreditScoreService Factory",
          "Displays Error Message When Credit Score Not Found for SSN"
        ],
        "Testing Credit Score Service": [
          "Implementing Tests for Credit Score Service"
        ],
        "Testing View Logic": [
          "Implementing Tests for View Logic",
          "Resource",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic Swift Knowledge – Familiarity with Swift syntax, variables, functions, and object-oriented programming concepts.",
        "Experience with Xcode – Ability to navigate Xcode, create and run iOS projects, and use the debugger.",
        "Fundamental iOS Development Skills – Understanding of UIKit or SwiftUI and how iOS applications are structured."
      ],
      "description": "Testing is an essential part of building robust, maintainable, and high-quality iOS applications. Yet, many developers struggle with setting up a reliable testing strategy. Swift Testing Essentials: A Practical Guide is a hands-on course designed for developers of all experience levels who want to write effective tests with confidence.\nThis course takes a practical approach to testing, covering everything from Test-Driven Development (TDD) to stubs, mocks, UI testing, and view logic testing. You’ll learn when, what, and how to test different components of your app to ensure reliability and prevent regressions before they happen.\nWhat You’ll Learn:\n- The fundamentals of Test-Driven Development (TDD) in iOS\n\n-  How to use stubs and mocks for unit testing and dependency isolation\n\n-  UI testing strategies to verify user interactions and flows\n\n-  Techniques for testing view logic in SwiftUI\n\n-  Best practices for structuring tests and writing maintainable test cases\n\n-  Real-world testing workflows and common pitfalls to avoid\n\n\nHow This Course Will Benefit You:\n-  Increase Code Confidence – Write tests that catch bugs early and prevent regressions\n\n-  Improve App Stability – Ensure your app performs correctly across different scenarios\n\n-  Boost Productivity – Catch issues faster, reduce debugging time, and ship with confidence\n\n-  Write Maintainable Code – Learn test-friendly design patterns that make refactoring easier\n\n-  Master Real-World Testing Techniques – Apply practical skills to production-ready applications\nWhether you're a beginner exploring iOS testing for the first time or an experienced developer looking to refine your testing strategy, this course will help you build high-quality, well-tested apps that stand the test of time.",
      "target_audience": [
        "iOS Developers (Beginner to Advanced) – If you develop iOS apps and want to ensure they are robust, maintainable, and bug-free, this course is for you.",
        "Developers New to Testing – If you've never written tests before or struggle with testing concepts, this course will guide you step by step.",
        "Experienced Developers Wanting to Improve Their Testing Strategy – If you already write tests but want to learn TDD, stubs, mocks, UI testing, and best practices, this course will refine your skills.",
        "SwiftUI Developers – If you're working with SwiftUI and want to test view logic effectively, this course covers practical techniques.",
        "Teams Adopting Test-Driven Development (TDD) – If your team is transitioning to TDD, this course provides the foundational knowledge to implement it successfully."
      ]
    },
    {
      "title": "iOS Mastery 2024: Premium Interview Prep and Practice Tests",
      "url": "https://www.udemy.com/course/ios-mastery-2024-premium-interview-prep-and-practice-tests-b/",
      "bio": "Master iOS Development with Expert Interview Preparation and Practice Tests",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Are you ready to ace your iOS developer interviews and land your dream job? Look no further! Our iOS Mastery course offers expert interview preparation tailored specifically for aspiring iOS developers like you.\nIn this comprehensive course, not only will you master essential iOS development skills, but you'll also receive targeted guidance to excel in interviews. We've curated a collection of common iOS developer interview questions and strategies to help you tackle them with confidence.\nHere's what you can expect:\nIn-depth Coverage: We cover a wide range of interview topics, including Swift programming, UIKit, data management, networking, and advanced iOS concepts.\nStrategic Insights: Learn proven strategies and techniques to approach interview questions effectively, whether it's problem-solving, algorithmic challenges, or technical discussions.\nMock Interviews: Put your skills to the test with mock interview practice sessions designed to simulate real interview scenarios. Receive valuable feedback to refine your responses and improve your performance.\nPractice Tests: Test your knowledge and readiness with our practice tests, meticulously crafted to mirror the format and difficulty level of actual interview assessments.\nDon't just aim to pass interviews – aim to excel! Join iOS Mastery today and take your iOS development career to new heights.\nEnroll now and step confidently into your next iOS developer interview!",
      "target_audience": [
        "Those who are new to iOS development and want to build a solid foundation in app development using Swift and UIKit.",
        "Developers who have some experience with iOS development but want to deepen their understanding of advanced concepts such as data management, networking, and UI design.",
        "Individuals who are preparing for job interviews in the field of iOS development and want to strengthen their technical skills and confidence through interview preparation sessions and mock interviews.",
        "Professionals from other fields who are transitioning into iOS development and need a structured learning path to acquire the necessary skills and knowledge.",
        "Students studying computer science or related fields who want to specialize in iOS development and need guidance on both technical concepts and career preparation."
      ]
    },
    {
      "title": "The Complete Course of .NET MAUI",
      "url": "https://www.udemy.com/course/maui-course/",
      "bio": "Learn .NET MAUI in a Professional way from Scratch. Become an expert in desktop and mobile app development",
      "objectives": [
        "At the end of the course you will fully master .NET MAUI, to be able to develop your Android, iOS, macOS, and Windows apps from scratch",
        "You will be able to build step by step mobile and desktop Apps, understanding all the logic and ending with advanced practical examples and a complete project",
        "You will become familiar with the Visual Studio interface, toolbars and basic commands, and you will master all the phases of the development",
        "You will learn in a professional way XAML Basics and MAUI Controls and Views with advanced XAML",
        "You will understand the fundamental Navigation and Routing, and the Data access and storage in MAUI using SQLite",
        "You will master the Authentication, authorization, data encryption, protection, network security and SSL/TLS in MAUI",
        "You will learn advanced debugging techniques, performance optimization and profiling and testing in MAUI, understanding their interpretation",
        "You will be able to practice the content learned in a practical way by following all the steps in the complete exercises and the final project (your first app)",
        "You will start with the basics and progressively carry out more complex steps until you reach an advanced level and absolute mastery at the end of the course"
      ],
      "course_content": {
        "Introduction to .NET MAUI": [
          "Course Introduction",
          "What is .NET MAUI?",
          "Architecture Overview of .NET MAUI",
          "Quiz",
          "Supported Platform and OS Versions",
          "Installing Visual Studio"
        ],
        "XAML Basics": [
          "What is XAML in .NET MAUI",
          "XAML syntax and structure",
          "XAML Data Binding Properties",
          "XAML Data Binding Command",
          "Styling and theming in XAML"
        ],
        "MAUI Controls and Views with advanced XAML": [
          "What is Layout Panel",
          ".NET MAUI Controls",
          ".NET MAUI Views"
        ],
        "Navigation and Routing": [
          "Navigation patterns in MAUI",
          "MAUI navigation stacks",
          "Passing data between pages",
          "MAUI tab and flyout navigation"
        ],
        "Data Access": [
          "Introduction to data access in MAUI",
          "Comparing storage options",
          "Storage data locally with SQLite",
          "Using SQLite asynchronously"
        ],
        "Security": [
          "Introduction to security in MAUI",
          "Authentication and authorization",
          "Data encryption and protection",
          "Network security and SSL/TLS"
        ],
        "Advanced Topics": [
          "Advanced debugging techniques",
          "Performance optimization and profiling",
          "Unit testing and test-driven development"
        ],
        ".NET MAUI Project - Developing Real-World Application from scratch: Weather App": [
          "Part 1",
          "Part 2",
          "Part 3",
          "Part 4"
        ]
      },
      "requirements": [
        "Having basic notions of app development can help, but the course starts from scratch",
        "Download and install Visual Studio (if you don't know how, don't worry, it's very easy, free and I'll explain it to you in the course!)",
        "A decent computer and desire to learn!"
      ],
      "description": "Become a .NET MAUI professional and learn one of employer's most requested skills nowadays!\nThis comprehensive course is designed so that students, developers, engineers... can learn .NET MAUI from scratch to use it in a practical and professional way. Never mind if you have no experience in the topic, you will be equally capable of understanding everything and you will finish the course with total mastery of the subject.\nAfter several years working as an Engineer and Developer, I have realized that nowadays mastering .NET MAUI for the App Development is very necessary to create native mobile and desktop apps. Knowing how to use this  cross-platform framework can give you many job opportunities and many economic benefits, especially in the world of the software development.\nThe big problem has always been the complexity to perfectly understand .NET MAUI it requires, since its absolute mastery is not easy. In this course I try to facilitate this entire learning and improvement process, so that you will be able to carry out and understand your own projects in a short time, thanks to the step-by-step and detailed examples of every concept.\nWith more than 8 exclusive hours of video, this comprehensive course leaves no stone unturned! It includes both practical exercises and theoretical examples to master .NET MAUI. The course will teach you Android, iOS, macOS and Windows app development in a practical way, from scratch, and step by step.\nWe will start with the installation of Visual Studio (interface to work) on your computer, regardless of your operating system and computer.\nThen, we'll cover a wide variety of topics, including:\nIntroduction to .NET MAUI and course dynamics\nDownload and Install Visual Studio latest version, packages and configuring it\nGeneral familiarization with the user interface and elements\nXAML Basics and MAUI Controls and Views with advanced XAML\nNavigation and Routing\nData access and storage in MAUI using SQLite\nAuthentication, authorization, data encryption, protection, network security and SSL/TLS\nAdvanced debugging techniques, performance optimization and profiling and testing\nBuilding from scratch a .NET MAUI App and deploying it: Weather App\nMastery and application of absolutely ALL the functionalities of .NET MAUI\nPractical exercises, complete project and much more!\nIn other words, what I want is to contribute my grain of sand and teach you all those things that I would have liked to know in my beginnings and that nobody explained to me. In this way, you can learn to build a wide variety of apps quickly and make versatile and complete use of .NET MAUI. And if that were not enough, you will get lifetime access to any class and I will be at your disposal to answer all the questions you want in the shortest possible time.\nLearning .NET MAUI has never been easier. What are you waiting to join?",
      "target_audience": [
        "People interested in app development and .NET MAUI"
      ]
    },
    {
      "title": "Learn iOS Programming Building a To-Do Utility App",
      "url": "https://www.udemy.com/course/learn-ios-programming-building-a-to-do-utility-app/",
      "bio": "Master iOS programming fundamentals building a professional app from scratch",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Course Introduction",
          "Start building UI Part A",
          "Start building UI Part B"
        ],
        "Layout Design": [
          "Layout",
          "Refinements in main seen UI",
          "Spacing and Color"
        ],
        "Adding Views": [
          "Coloring navigation bar",
          "UI for add View",
          "Add Table view Cell"
        ],
        "Core Data": [
          "Add Core Data",
          "Build ability to save Data",
          "Add ability to get data from Coredata",
          "Cell for Indexpath",
          "Format date in Tableview",
          "Application Troubleshoot",
          "Bonus Lecture: More Interesting Stuff, Offers and Discounts"
        ]
      },
      "requirements": [
        "Students should have basic understanding of ios programming before taking this course"
      ],
      "description": "iOS 9 is the newest operating system that powers Apple’s iPhone and iPads. The iOS9’s latest iteration comes packed with new features that require news apps for them.\nWith Apple holding a quarter of the market share in only the smartphones segment, having apps to for its many users has become a priority for a lot of developers.\nDon’t know how to create professional apps for iOS? Don’t worry, this course has got your back. In this short course, you will learn how to create an iOS app from scratch.\nFrom design, to coding to even making the app fully functional, you will learn everything in this comprehensive course.\nLearn how to design a UI in Sketch, code using XCode and even design a whole app from scratch. The course will also cover the fundamentals of iOS 9 and Swift development, using the app has a practical hands-on project.\nIn addition to designing the look and feel of the app, you will also be able to use the functional app by learning how to add core data and even create a back-end to support the data. Use the basics, including tips and tricks to create more complex apps.\nWith so much to learn, what are you waiting for? Start your journey as an iOS developer.",
      "target_audience": [
        "Students who want to start building professional apps in iOS will find this course very useful"
      ]
    },
    {
      "title": "Offline-First Apps with Angular, Ionic, PouchDB and CouchDB",
      "url": "https://www.udemy.com/course/offline-first-apps-with-angular-ionic-pouchdb-and-couchdb/",
      "bio": "Develop offline-first apps using a database technology which was built for syncing, from frontend to backend",
      "objectives": [
        "Develop modern, scalable, multi-platform web applications (Web, Mobile) with Angular 15, Ionic 6",
        "Use PouchDB as frontend storage and CouchDB as database for creating Offline-First Apps with easy syncing between local and remote",
        "Fully understand how to design and develop an application and how to implement advanced features to plug-in other database solutions using a Repository Pattern",
        "Learn how to handle problems while developing and practical usage of advanced features like RxJS or creating Custom pipes for sorting multi-level JSON data",
        "Learn how to use XState to implement state machines in your app"
      ],
      "course_content": {},
      "requirements": [
        "Basic Knowledge of Angular and Ionic is recommended but you can as well just hop in and read the relevant things up in the documentation after every video!",
        "Prior Typescript knowledge helps, but you will easily grasp the concept",
        "Basic JavaScript knowledge is required",
        "This course is more practical, not every basic concept is explained but you will have to actively work on the content and read up missing knowledge sometimes."
      ],
      "description": "In this course, you will learn how to build a robust, offline-first web application using PouchDB, CouchDB, Angular, and Ionic. You will start by setting up a development environment and learn how to use PouchDB and CouchDB to store and sync data locally and with a remote server. You will then learn how to use Angular to build the front-end of your application and Ionic to design and style your application for mobile devices.\nThroughout the course, you will work on a practical project to apply the concepts you have learned and build a fully functional offline-first web application. You will also learn how to test and debug your application, and how to deploy it for production use.\nYou will learn about the CAP Theorem, which is a fundamental concept in the field of distributed systems. You will learn what the CAP Theorem is, how it relates to the design and implementation of distributed systems, and how it impacts the performance and reliability of these systems.\nYou will start by exploring the three key components of the CAP Theorem: Consistency, Availability, and Partition Tolerance. You will learn about the trade-offs between these components and how they affect the behavior of distributed systems. You will also learn about different approaches to achieving consistency in distributed systems, including eventual consistency and strong consistency and why we used CouchDB as a technology.\nBy the end of this course, you will have the skills and knowledge to build a reliable, offline-first web application using PouchDB, CouchDB, Angular, and Ionic. You will be able to store and sync data locally and with a remote server, build a responsive user interface, and design and style your application for mobile devices.",
      "target_audience": [
        "Software engineers who are interested in creating multi-platform Apps using a Webframework",
        "Software engineers who want to use advanced features like Repository Patterns and XState state machines"
      ]
    },
    {
      "title": "Core Data Crash Course: Learn the Essentials of Core Data",
      "url": "https://www.udemy.com/course/core-data-crash-course/",
      "bio": "Teaching you the essentials of Core Data.",
      "objectives": [
        "Creating Entities in a Data Model",
        "Setting up a Core Data Stack",
        "Adding, Deleting, and Saving Objects in Core Data",
        "Using NSFetchedResultsController for Displaying Data in UITableView"
      ],
      "course_content": {
        "Building Quoted: Learn Core Data": [
          "Adding a Quote Entity",
          "Creating a Core Data Stack",
          "Setting up a NSFetchedResultsController",
          "Implementing NSFetchedResultsControllerDelegate",
          "Displaying NSFetchedResultsController Object Data in UITableView",
          "Adding and Deleting Core Data Objects",
          "Challenge 1: Fetching a Quote",
          "Challenge 2: Updating a Quote"
        ]
      },
      "requirements": [
        "macOS Catalina 10.15.2 or later",
        "Xcode 11.4 or above",
        "Know how to create an Xcode Project (we have no problem helping if needed)"
      ],
      "description": "Data persistence is essential to building successful iOS applications. Core Data is a framework you use to manage the model layer objects in your application. It provides generalized and automated solutions to everyday tasks associated with object life cycle and object graph management, including persistence. Did you know that Core Data typically decreases the amount of code you write to support the model layer by 50 to 70 percent? Whether you're brand new to Core Data or looking for a refresher, this crash course is for you.\nThis course covers the essentials you need to know to use Core Data to explore more advanced topics effectively. Specifically, we'll build an application with various quotes to inspire you. The course will end by giving you a couple of challenges to solidify your knowledge of Core Data. Ultimately, you will learn everything from creating entities, creating your own Core Data Stack from scratch, utilizing NSFetchedResultsController to display that data inside of a UITableView, and how to add and delete objects in Core Data to see it reflected in your app.\nUpon completing this course, you'll be equipped with Core Data's essentials to build apps that support data persistence. See you in the course!",
      "target_audience": [
        "Beginner iOS Developers curious about Core Data",
        "Experienced iOS Developers in need of a refresher on Core Data"
      ]
    },
    {
      "title": "Mobile Actionscript 3 Basics",
      "url": "https://www.udemy.com/course/mobileas3/",
      "bio": "We will look at programming iPhone and Android apps with Actionscript 3 and Adobe Flash CS5.5, Flash CS6 or Flash CC.",
      "objectives": [
        "You will learn how to incorporate the Accelerometer, Camera Roll, Gestures, Geolocation, and much more into your AS3 project"
      ],
      "course_content": {
        "The Accelerometer": [
          "Introduction",
          "Working with the Accelerometer in Actionscript 3"
        ],
        "Touches": [
          "Multi-Touch Input with Actionscript 3"
        ],
        "Gestures and Orientation": [
          "Gestures Recognition",
          "Orientations"
        ],
        "Google Maps and Geolocation": [
          "Google Maps and Geolocation"
        ],
        "Camera Roll": [
          "Send a Screenshot to the Camera Roll"
        ],
        "Exporting to iPhone or Android with Flash CS5.5, CS6, CC": [
          "Exporting for Android",
          "Exporting for Android using the Emulator",
          "Exporting for iPhone",
          "Previously Written Actionscript 3 (Usually Runs Fine!)"
        ]
      },
      "requirements": [
        "Adobe Flash CS5.5, CS6, Flash CC"
      ],
      "description": "Justin Dike, lead developer and owner of CartoonSmart.com teaches this course in Actionscript 3 development for mobile platforms. As of Flash CS5.5, Adobe has given developers the option to quickly export their Actionscript 3 projects for iOS or Android. As most developers now know, the Flash Player platform isn't doing so well on mobile platforms, but Adobe Flash as a development tool is ironically thriving with its easy export options and hundreds of thousands of experienced Actionscript programmers. This is an exciting time to be learning Flash and AS3 for mobile development, and specifically game programming.\nThese tutorials were recorded using Flash CS5 but the Actionscript 3 demonstrated is the same as it was a couple versions ago.",
      "target_audience": [
        "Some familiarity with Flash / Actionscript 3 is preferred."
      ]
    },
    {
      "title": "iOS Machine Learning with TensorFlow Lite – Build AI Apps",
      "url": "https://www.udemy.com/course/ios-ml-train-tensorflow-lite-models-for-ios-apps/",
      "bio": "Master iOS Machine Learning in 2025 with TensorFlow Lite | Train & deploy ML models in Swift & SwiftUI apps step-by-step",
      "objectives": [
        "Train Machine Learning Models & deploy them in IOS Swift Applications",
        "Use of Tensorflow Lite models in IOS Swift Applications",
        "Train a machine learning model and build a House Price Prediction IOS Swift Application",
        "Train a machine learning model and build a Fuel Efficiency Prediction IOS Swift Application",
        "Lean basic syntax of python programming language to train ML models for IOS Swift Applications",
        "Learn basics of Machine Learning & Deep Learning for training Machine learning Models for smart IOS Development",
        "Understand the working of artificial neural networks for training machine learning for IOS Swift Apps",
        "Learn use of data science libraries like numpy, pandas and matplotlib for training Machine learning models for IOS Swift Apps",
        "Learn to analyse & use advance linear regression models for use in IOS Swift Applications",
        "Learn Data Collection & Preprocessing for Machine Learning model training for IOS Swift Applications",
        "Learn to train Countless Prediction models for IOS Swift Applications"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "IOS Development With Machine Learning Course Curriculum"
        ],
        "Machine Learning & Deep Learning for IOS Swift": [
          "What is Machine Learning - Swift IOS Development",
          "Supervised Machine Learning - Swift IOS Development",
          "Regression and Classification - Swift IOS Development",
          "Unsupervised Machine Learning & Reinforcement Learning - Swift IOS Development",
          "Deep Learning and Neural Network Introduction - Swift IOS Development",
          "Neural Network Example - Swift IOS Development",
          "Basic Deep Learning Concepts - Swift IOS Development"
        ],
        "Python Programming Language for IOS Swift": [
          "Google Colab Introduction - Swift IOS Development",
          "Python Introduction & data types - Swift IOS Development",
          "Python Numbers - Swift IOS Development",
          "Python Strings - Swift IOS Development",
          "Python Lists - Swift IOS Development",
          "Python dictionary & tuples - Swift IOS Development",
          "Python loops & conditional statements - Swift IOS Development",
          "File handling in Python - Swift IOS Development"
        ],
        "Data Science Libraries for Swift IOS Development": [
          "Numpy Introduction - Swift IOS Development",
          "Numpy Functions and Generating Random Values - Swift IOS Development",
          "Numpy Operators - Swift IOS Development",
          "Matrix Multiplications and Sorting in Numpy - Swift IOS Development",
          "Pandas Introduction - Swift IOS Development",
          "Loading CSV in pandas - Swift IOS Development",
          "Handling Missing values in dataset with pandas - Swift IOS Development",
          "Matplotlib & charts in python - Swift IOS Development",
          "Dealing images with Matplotlib - Swift IOS Development"
        ],
        "Tensorflow & Tensorflow Lite for IOS Swift": [
          "Tensorflow Introduction | Variables & Constants - IOS SwiftUI",
          "Shapes & Ranks of Tensors - IOS SwiftUI",
          "Matrix Multiplication & Ragged Tensors - IOS SwiftUI",
          "Tensorflow Operations - IOS SwiftUI",
          "Generating Random Values in Tensorflow - IOS SwiftUI",
          "Tensorflow Checkpoints - IOS SwiftUI",
          "Tensorflow Lite Introduction & Advantages - IOS SwiftUI"
        ],
        "Training a basic Machine Learning ( Linear Regression) model for IOS Swift": [
          "Section Introduction",
          "Train a simple regression model for Swift IOS Development",
          "Testing model and converting it to a tflite(Tensorflow lite) format for IOS",
          "Model training for IOS Swift app development overview",
          "Creating a new IOS SwiftUI project and the GUI of Swift Application",
          "Adding Tensorflow Lite Models in IOS Swift Application",
          "Loading Tensorflow Lite Models in IOS Swift Application",
          "Preparing Input for Tensorflow Lite Models and Passing it in IOS Swift App",
          "Getting Output from Tensorflow Lite model and showing it on IOS Swift App",
          "Tensorflow Lite Models Integration in IOS Swift App Overview"
        ],
        "Training a Fuel Efficiency Prediction Model for IOS Swift Application": [
          "Section Introduction",
          "Getting datasets for training a fuel efficiency prediction model for IOS Apps",
          "Loading dataset in python with pandas",
          "Handling Missing Values in Dataset",
          "One Hot Encoding: Handling categorical columns",
          "Training and testing datasets",
          "Normalization Introduction",
          "Normalization: Bringing all columns to a common scale",
          "Training a fuel efficiency prediction model for IOS Swift Application",
          "Testing fuel efficiency prediction model and converting it to a tflite format",
          "Fuel Efficiency Model Training Overview"
        ],
        "Fuel Efficiency Prediction IOS Swift Application": [
          "Setup Starter Swift IOS Application for Fuel Efficiency Prediction",
          "GUI of Fuel Efficiency Prediction Swift IOS Application",
          "Adding Tensorflow Lite Library in IOS Swift Application",
          "Loading Fuel Efficiency Prediction tflite model in IOS Swift Application",
          "Preparing Input for Tensorflow Lite Model in Swift IOS Application",
          "Passing input to tflite model and getting output in IOS Swift Application",
          "Normalizing Input for Tensorflow Lite Models in IOS Swift Application",
          "Important things to remember while using Tensorflow Lite Models in IOS Apps"
        ],
        "Training House Price Prediction Model for IOS Swift Applications": [
          "Section Introduction",
          "Getting house price prediction dataset for model training for IOS Development",
          "Load dataset for training house price prediction tflite model for Swift IOS Apps",
          "Training & evaluating house price prediction model for Swift IOS Apps",
          "Retraining price prediction model"
        ],
        "House Price Prediction IOS Application": [
          "Setting Up House Price Prediction IOS Swift Application",
          "GUI of House Price Prediction IOS Swift Application With SwiftUI",
          "Adding Tensorflow Lite Library in IOS Swift Application",
          "Loading Tensorflow Lite Model in IOS Swift Application",
          "Passing Input to Tensorflow Lite Model and Get prediction for House Price",
          "House Price Prediction Application Testing"
        ]
      },
      "requirements": [
        "XCode Installed on your MAC"
      ],
      "description": "Do you want to train different Machine Learning models and build smart iOS Swift applications? Then welcome to this comprehensive course!\nMy name is Muhammad Hamza Asif, and I am the leading Mobile Machine Learning instructor on Udemy. In this course, we'll embark on a journey to combine the power of predictive modeling with the flexibility of iOS app development using Swift and SwiftUI. Whether you're a seasoned iOS developer or new to the scene, this course has something valuable to offer you.\nCourse Highlights:\nTraining Your First Machine Learning Model:\nUse TensorFlow and Python to create a simple Machine Learning (regression) model.\nConvert the model into TFLite format, making it compatible with iOS Swift.\nLearn to integrate the TFLite model into iOS Swift apps.\nFuel Efficiency Prediction in iOS Swift:\nApply your knowledge to a real-world problem by predicting automobile fuel efficiency.\nSeamlessly integrate the model into an iOS Swift app for an intuitive fuel efficiency prediction experience.\nHouse Price Prediction in iOS Swift:\nMaster the art of training regression models on substantial datasets.\nUtilize the trained model within your iOS Swift app to predict house prices confidently.\nRegression is one of the fundamental techniques in Machine Learning which can be used for countless applications. Inside this course, you will learn to train your custom machine learning models in TensorFlow Lite and build smart iOS Swift applications.\nCourse Overview: We'll begin by exploring the basics of Machine Learning and its various types, then dive into the world of deep learning and artificial neural networks, which will serve as the foundation for training our TensorFlow Lite models for iOS Swift Applications.\nThe iOS-ML Fusion: After grasping the core concepts, we'll bridge the gap between iOS Swift and Machine Learning. We’ll kickstart our journey with Python programming, a versatile language that will pave the way for our Machine Learning model training.\nUnlocking Data's Power: To prepare and analyze our datasets effectively, we'll dive into essential data science libraries like NumPy, Pandas, and Matplotlib. These powerful tools will equip you to harness data's potential for accurate predictions.\nTensorFlow for Mobile: Next, we'll immerse ourselves in the world of TensorFlow, a library that not only supports model training using neural networks but also caters to mobile devices.\nThe iOS Development Advantage: By the end of this course, you'll be equipped to:\nTrain advanced regression models for accurate predictions.\nSeamlessly integrate ML models into your iOS Swift applications.\nAnalyze and use existing TFLite models effectively within the iOS Swift ecosystem.\nWho Should Enroll:\nAspiring iOS Swift developers eager to add predictive modeling to their skillset.\nBeginner iOS Swift developers with very little knowledge of mobile app development.\nIntermediate iOS Swift developers wanting to build powerful Machine Learning-based applications in iOS Swift.\nExperienced iOS Swift developers wanting to use Machine Learning models inside their iOS applications.\nEnthusiasts seeking to bridge the gap between Machine Learning and iOS development.\nStep into the World of iOS Development and Predictive Modeling: Join us on this exciting journey and unlock the potential of iOS Swift and Machine Learning. By the end of the course, you'll be ready to develop iOS Swift applications that not only look great but also make informed, data-driven decisions.\nEnroll now and embrace the fusion of iOS Swift and Machine Learning!",
      "target_audience": [
        "Beginner IOS Developer who want to build Machine Learning based IOS Applications",
        "Intermediate IOS developers eager to add Machine Learning to their skillset",
        "IOS experts seeking to bridge the gap between Machine Learning and Mobile App Development",
        "Anyone who want to train custom machine learning models and build IOS Swift Applications"
      ]
    },
    {
      "title": "SwiftUI Component Design & Animation in a Stock Market App",
      "url": "https://www.udemy.com/course/swiftui-component-design-animation-in-a-stock-market-app/",
      "bio": "Build scalable, reusable SwiftUI components using protocol-based styling and bring your stock app to life",
      "objectives": [
        "Break SwiftUI views into reusable, modular components",
        "Display live data using lists, grids, and stacks in SwiftUI",
        "Build animations for charts and progress indicators",
        "Handle async data with Swift Concurrency (async/await)",
        "Create styled wrappers using @ViewBuilder and generics",
        "Apply consistent design using protocol-based view styles",
        "Build flexible UIs using computed properties and extensions",
        "Use @StateObject and @ObservedObject correctly in MVVM",
        "Animate UI updates to reflect changing stock data",
        "Develop polished, production-ready interfaces with SwiftUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Describing the first project",
          "Coding the Models and the 'RadialProgressView'",
          "Coding the ViewModel: 'StockViewModel'.",
          "Coding the DashboardView",
          "Coding and Repairing the DashboardView"
        ],
        "Organizing Code Into Reusable Components": [
          "Different Types of Components",
          "Explaining a Custom View in SwiftUI",
          "Coding the Custom View",
          "Explaining using a Computed Property for a Component",
          "Coding the Computed Property Component",
          "Explaining the use of View Extensions",
          "Coding the View Extension",
          "Explaining the @ViewBuilder",
          "Coding using the @ViewBuilder",
          "What is a Generic View in SwiftUI?",
          "Wrapper (CardWrapper), Main View (ContentView), and the (StockListContent)",
          "Coding The Generic View",
          "Explaining Protocol-Based Styling in SwiftUI",
          "Coding Protocol Based Styling"
        ]
      },
      "requirements": [
        "Basic understanding of the Swift programming language",
        "Familiarity with Xcode and running SwiftUI previews",
        "Access to a Mac computer with Xcode installed",
        "Some experience building basic SwiftUI views",
        "Interest in learning how to build modern iOS UIs",
        "No advanced math or computer science background needed",
        "No experience with Combine or UIKit required",
        "Willingness to follow along with hands-on coding",
        "iOS 15+ or macOS Monterey+ recommended for features used",
        "Curiosity to explore SwiftUI patterns and techniques"
      ],
      "description": "Learn how to build clean, scalable, and animated SwiftUI apps by mastering the art of component-based design and reusable architecture. In this course, you’ll develop a complete stock tracking interface while learning how to decompose views, implement protocol-based styling, and create smooth animated visualizations for real-time stock data.\nWe start with the foundation of SwiftUI’s declarative structure and walk through how to break a large view into smaller, focused components. You’ll learn multiple methods to structure your views:\nUsing computed properties to isolate static subviews\nCreating custom view structs for reusable building blocks\nLeveraging generic views to accept flexible, styled content\nUsing @ViewBuilder functions for lightweight layout wrappers\nApplying view extensions and protocols for consistent style systems\nYou’ll implement protocol-based styling by creating view protocols with extension methods that encapsulate layout and visual rules. This lets your views apply consistent designs—like card layouts or themed backgrounds—without duplicating modifiers.\nLater in the course, we integrate chart and progress view animations. You’ll build a radial progress indicator and animate it using @State, @Binding, and @Published properties tied to a ViewModel. This teaches you how to sync animations with live data updates.\nWhether you're building stock apps or any data-driven UI, this course gives you a repeatable system for crafting modular, visually polished, and interactive SwiftUI apps.",
      "target_audience": [
        "iOS developers looking to improve their SwiftUI skills",
        "Beginners transitioning from UIKit to SwiftUI",
        "Developers building data-driven iOS apps",
        "Swift programmers wanting to write cleaner, modular UIs",
        "Students learning mobile app development with Swift",
        "Engineers interested in UI animations and interactivity",
        "Designers who want to understand SwiftUI implementation",
        "Hobbyists creating personal iOS projects or dashboards",
        "Junior developers aiming to polish production-level apps",
        "Coders preparing for iOS development interviews or roles"
      ]
    },
    {
      "title": "iOS Development for Beginners",
      "url": "https://www.udemy.com/course/ios7-development-for-beginners/",
      "bio": "Featuring iOS6 and 7- Learn To Develop iOS Applications for iPhone and iPad",
      "objectives": [
        "Understanding Outlets and Actions",
        "Understanding Object Properties",
        "Working with Rotation",
        "Auto Resizing Apps",
        "Placing View Elements Manually",
        "Working with the On-screen Keyboard",
        "Adding Scenes to the Storyboard",
        "Configuring Segues",
        "Performing Tasks Before a Segue",
        "Making Apps work on IPad and IPhone",
        "Static and Dynamic TableViews",
        "Custom Table Cells",
        "iOS7 New Table Views",
        "New iOS 7 Tab Bar Controllers",
        "Traditional Tab Bar Controllers",
        "Working with Dates and Datepicker Components",
        "Creating Custom Picker Components",
        "Passing Information Between View Controllers",
        "Saving and Loading Data on the Device",
        "Saving Object State with Archiving",
        "Touches, Taps and Gestures",
        "Geolocation",
        "Notifications",
        "UIWeb Views in Applications",
        "Playing Audio and Video Content",
        "Multiple OS Support"
      ],
      "course_content": {
        "Introducing iOS 6": [
          "Creating a Hello World Project",
          "Outlets and Actions",
          "Object Properties",
          "Chapter 1 Lab Exercise"
        ],
        "Object Adjustments": [
          "Rotation",
          "Object Size Adjustment",
          "Resizing",
          "Hiding the Keyboard",
          "Chapter 2 Lab Exercise"
        ],
        "Multiple Controllers": [
          "Storyboarding",
          "Configuring Segways",
          "Performing tasks before Segways",
          "Universal Device Support",
          "Chapter 3 Lab Exercise"
        ],
        "Table Views": [
          "Table View Application",
          "Dynamic Table",
          "Custom Cell Design",
          "iOS7 Table View",
          "Chapter 4 Lab Exercise"
        ],
        "Tabbed Applications": [
          "Making Tabbed Applications",
          "Tabbed Applications in X Code 5",
          "Passing Data",
          "Chapter 5 Lab Exercise"
        ],
        "Pickers": [
          "Date Picker",
          "Making a custom Picker",
          "Chapter 6 Lab Exercise"
        ],
        "Saving and Loading Files": [
          "Saving Files",
          "Loading Files",
          "Saving Object States",
          "Chapter 7 Lab Exercise"
        ],
        "Touches, Taps, and Gestures": [
          "Touches and Taps",
          "Gestures",
          "Chapter 8 Lab Exercise"
        ],
        "Getting and Displaying Information": [
          "Obtaining your Location",
          "Creating Notifications",
          "UI Web Views",
          "Chapter 9 Lab Exercise"
        ],
        "Audio and Video": [
          "Audio",
          "Video",
          "Chapter 10 Lab Exercise"
        ]
      },
      "requirements": [
        "Mac with Current version OSX",
        "Current Version of XCode (Free From App Store)",
        "Basic Understanding of Objective C"
      ],
      "description": "Perhaps you have an idea for a killer app? Maybe you just want to move your skills in to the mobile arena? Are you an iPad fanatic who wants to be able to write apps for your company? Are you an entrepreneur trying to take your company to the next level with mobile?\nIt's time for you to get in on the action and learn iOS 6 and 7 Development now. This course features over six hours of video instruction, numerous lab exercises and dozens of code examples all designed to get you creating your own iOS Applications that will run either on the iPhone, the iPad or both!\nThis eleven chapter course starts with the basics of creating user interfaces with the XCode storyboard and advances through topics like saving data on the device, gestures, geolocation and media. Each chapter includes several entertaining and informative lectures, code examples and a lab exercise designed to help you integrate and retain the concepts presented.\nEverything in this course is specially designed to give you command of both iOS6 and iOS7.\nThis course assumes knowledge of the Objective C programming language. If you are not familiar with Objective-C start with our Objective C For Beginners course.",
      "target_audience": [
        "Web Developers wanting to move to Native iOS Development",
        "Mobile Developers",
        "New Programmers Wanting a Solid Start in Mobile",
        "College or High School Students",
        "Teachers",
        "Beginners",
        "Traditional Programmers new to IOS",
        "iOS 5 Developers who want to learn iOS 6 and 7",
        "Instructors looking for good class examples"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/flutter-firebase-ml-kit-build-smart-android-ios-apps/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Flutterflow & Firebase Course - Build App without coding",
      "url": "https://www.udemy.com/course/flutterflow-firebase-course-build-app-without-coding/",
      "bio": "A Complete beginner to advanced level Flutterflow & Firebase Crash Course. Build apps without coding",
      "objectives": [
        "Learn FlutterFlow and Firebase from scratch",
        "Create a fully functional mobile app using Flutterflow without the need for traditional coding",
        "Understand the steps involved in publishing your app on play store",
        "Learn how to design a clean and beautiful user interface"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is FlutterFlow",
          "What is Firebase",
          "Signing up on Flutterflow and Flutterflow dashboard walkthrough"
        ],
        "Building our first app and authentication using firebase": [
          "Creating registration page and firebase setup for our app",
          "Login page creation and UI design",
          "Forgot page creation and designing it",
          "Authentication & signing up users to app",
          "Adding some logic and send confirmation email on signup"
        ],
        "Building the app": [
          "Homepage creation",
          "Homepage part 2",
          "creating navbar for app",
          "Creating drawer for app",
          "setting up database using firebase for our app",
          "Displaying data from database to homepage",
          "Review detailed page",
          "setting up review adding section for review app",
          "Adding review section data from frontend to database",
          "setting like button",
          "creating add to favourite button",
          "Creating my likes page",
          "Creating my favourite page"
        ],
        "Profile page creation": [
          "Creating profile page",
          "Creating account deletion page",
          "Change password page",
          "Change email page",
          "Adding Logout button",
          "Export to app"
        ]
      },
      "requirements": [
        "There is no specific requirements needed. Because Flutterflow is a web based platform no installation required!",
        "No programming experience needed"
      ],
      "description": "Unlock the power of app development without the need for extensive coding knowledge! Welcome to the Flutterflow & Firebase Mastery course, your comprehensive guide to creating stunning mobile applications effortlessly. Whether you're a complete beginner or an experienced developer looking to expand your skill set, this course is tailored to meet your needs.\nWhat You'll Learn:\nIntroduction to Flutterflow & Firebase: Dive into the fundamentals of Flutterflow, a no-code app development platform, and Firebase, a powerful backend service by Google. Understand how these technologies work seamlessly together to bring your app ideas to life.\nBuilding Your First App: From setting up your development environment to creating a simple app, you'll get hands-on experience in building without writing extensive code. Explore Flutterflow's intuitive interface to design and customize your app effortlessly.\nAdvanced App Design Techniques: Learn advanced design principles and techniques to make your apps visually appealing and user-friendly. Discover the art of creating smooth animations and transitions to enhance the overall user experience.\nIntegrating Firebase Features: Leverage the capabilities of Firebase to add functionalities like authentication, real-time databases, and cloud storage to your app. Understand how to seamlessly integrate Firebase services to enhance the functionality of your creations.\nNo-Code Automation: Explore the power of no-code automation with Flutterflow. Learn how to streamline workflows, automate tasks, and create dynamic app features without delving into complex coding structures.",
      "target_audience": [
        "This course is designed for aspiring app creators, entrepreneurs, and individuals who want to build mobile applications without diving into traditional coding.",
        "If you're completely new to app development and coding seems like a foreign language, this course is your entry point. Learn to build powerful apps using Flutterflow and Firebase without the need for programming skills."
      ]
    },
    {
      "title": "Hands on Swift Language. Visual way with Light Programming",
      "url": "https://www.udemy.com/course/hands-on-swift-language-visual-way-with-light-programming-ios8/",
      "bio": "Step by step way to learn the Swift language the easy way. We assume you know nothing. Full Source Codes included. iOS 8",
      "objectives": [
        "Get an Apple Developer License",
        "Download and Use XCode 6 Beta",
        "Create an iOS 8 Interface Layout",
        "Create a Real Calculator App for all devices",
        "Use Code only when it's necessary.",
        "Learn how to create interface elements like Buttons and Labels",
        "Connect the visual screen to the code behind",
        "Make your app interactive"
      ],
      "course_content": {
        "Getting Started": [
          "iOS 8 and XCode 6 Beta needs an Apple Developer License",
          "Apple Developer License",
          "Download XCode 6 Beta with iOS 8 frameworks",
          "Opening XCode 6",
          "Create Your First iOS 8 Swift Project in XCode 6",
          "Creating Labels on the iPhone Screen",
          "Quick Overview of User Interface Constraints",
          "Creating an interface outlet to connect label to code"
        ],
        "Working with Buttons": [
          "Creating a Button",
          "Trigger a button action using simple code"
        ],
        "Real Life Project: The Calculator App": [
          "Overview of the Calculator app functionality",
          "Creating the calculator project"
        ],
        "Real App Project: Creating a Calculator iOS app - Layout": [
          "Creating the User Interface - part 1",
          "Creating Calculator Layout - part 2",
          "Adding the Clear Button",
          "Prettify Buttons & Font Size"
        ],
        "Real App Project: Creating a Calculator iOS app - Code": [
          "Adding Tag to Calculator Number Buttons",
          "Creating Variables to Represent Buttons on Code Side",
          "Creating Action When a Number Is Pressed",
          "Triggering the 'Number Pressed' Action",
          "Creating Variables to Store Operations & Numbers",
          "Creating Action 'Operation Pressed' - part 1",
          "Creating Action 'Operation Pressed' - part 2",
          "Creating Action 'Operation Pressed' - part 3",
          "Connecting Operation Buttons to Code",
          "Creating Action 'Operation Pressed' - part 4 of 4",
          "Updating the 'Number Pressed' action",
          "Creating the Clear action",
          "Connection the Clear Button to the Clear action",
          "Finalizing Code Modifications & Final Source code Included",
          "Testing the Final Calculator"
        ]
      },
      "requirements": [
        "a MAC or macincloud.com",
        "an iOS dev license, otherwise I show you how to get one."
      ],
      "description": "Welcome to this course, this is Yohann. I will be your instructor.\nThis is a hands on course where you learn the concept of the Swift langage by applying them live. This is not just another course about theory.\nI will show you every single steps you need to quickly get started with Swift. You will learn how to install the software to start using swift, how to get the developer license, how to create iPhone and iPad user interface layouts made of controls like buttons and labels, and you will learn how to connect the screen elements to the code to make them interactive. By the way, I provide you all the source code projects that we work on.\nIn this course, we prefer using the visual tools over coding, and we keep the programming part as simple as possible.\nBy the end of the course, you will know how to create a real iOS app, a fully functional calculator, ready to publish in the apple app store.\nCome learn Swift with us, it’s here to stay and now is the time to be ahead of the curve.\nJoin us now. I’ll see you in the class room.",
      "target_audience": [
        "iOS developer (beginner to advanced level)",
        "Anyone wanting to learn Swift, the quick and simple way",
        "People that prefer doing things over boring lengthy theories",
        "Programming student"
      ]
    },
    {
      "title": "Build Exchange Rate App: SwiftUI, iOS 18, Combine, MVVM, API",
      "url": "https://www.udemy.com/course/build-exchange-rate-app-swiftui-ios-18-combine-mvvm-api/",
      "bio": "Master iOS App Development: Build a Real-Time Exchange Rate App with SwiftUI, iOS 18, Combine, and MVVM",
      "objectives": [
        "Master SwiftUI: Learn to build a fully functional iOS app using the latest declarative UI framework.",
        "Explore iOS 18 Features: Gain hands-on experience with new iOS 18 capabilities to enhance your app's performance and user experience.",
        "Understand Combine: Master asynchronous data handling and real-time updates using Combine for a seamless user experience.",
        "Implement MVVM: Learn the MVVM architectural pattern to structure your code for scalability and maintainability.",
        "API Integration: Fetch and display live exchange rates by integrating APIs, improving your network communication skills.",
        "Advanced SwiftUI Techniques: Explore custom views, animations, and more to create visually appealing and responsive iOS applications."
      ],
      "course_content": {
        "Exchange Rate App: iOS 18, SwiftUI, Swift, Combine, MVVM, Networking": [
          "Introduction",
          "Project Setup",
          "Country Model",
          "Exchange Rate Model",
          "URL Extension",
          "Endpoints Enum",
          "View Model",
          "Exchange Rate Network Service",
          "Content View"
        ]
      },
      "requirements": [
        "To enroll in the \"Build Exchange Rate App: SwiftUI, iOS 18, Combine, MVVM, API\" course, students should have a foundational understanding of Swift programming and be familiar with Xcode. Some prior experience with iOS development is beneficial but not required. A grasp of basic programming concepts like variables, loops, and functions is essential. Students should be eager to learn and explore advanced iOS features. Access to a Mac with the latest version of Xcode installed is necessary to follow along and complete the course projects effectively."
      ],
      "description": "Unlock the full potential of iOS development with our comprehensive course, \"Master iOS App Development: Build a Real-Time Exchange Rate App with SwiftUI, iOS 18, Combine, and MVVM.\" This course is designed for developers eager to create modern, responsive, and efficient iOS applications.\nYou'll start by learning SwiftUI, Apple's powerful declarative framework, enabling you to design intuitive user interfaces effortlessly. We'll dive deep into the latest features of iOS 18, equipping you with the knowledge to leverage new tools and APIs in your apps. Understanding Combine, you'll master handling asynchronous data and real-time updates, crucial for building dynamic applications.\nThe course emphasizes the MVVM (Model-View-ViewModel) architectural pattern, teaching you how to structure your app for maintainability, scalability, and testability. Through hands-on projects, you'll integrate live exchange rate APIs, enhancing your skills in network communication and data handling.\nBy the end of this course, you'll have built a fully functional, real-time exchange rate app that showcases your proficiency in iOS development. Whether you're an aspiring iOS developer or an experienced programmer, this course will elevate your skills and prepare you to create sophisticated, high-quality iOS applications.\n\n\nJoin us in this course to build SwiftUI app using Combine, MVVM, observation framework in iOS 18..",
      "target_audience": [
        "Aspiring iOS Developers: Those looking to build or improve their skills in iOS app development.",
        "Intermediate Swift Programmers: Developers who have a basic understanding of Swift and want to advance their knowledge with modern iOS technologies.",
        "Software Engineers: Professionals interested in learning SwiftUI, Combine, and the MVVM architectural pattern.",
        "Students: Individuals studying software development or mobile app development who want hands-on experience with real-world projects.",
        "Tech Enthusiasts: Hobbyists and tech enthusiasts eager to explore iOS 18 and create functional apps.",
        "Freelancers and Entrepreneurs: Those aiming to build their own apps or expand their mobile development portfolio."
      ]
    },
    {
      "title": "Build A TodoList with NestJS, MongoDB and React Native",
      "url": "https://www.udemy.com/course/build-a-todolist-with-nestjs-mongodb-and-react-native/",
      "bio": "Learn to build a Full Stack NestJS and React Native Application in No Time",
      "objectives": [
        "The student will learn the basics of RESTful API development with NestJS",
        "How to create a Full Stack Todo List Application",
        "Learn how to use Mongoose",
        "Learn to consume JSON with React"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create NestJS CRUD TodoList": [
          "Create NestJS Project",
          "Install NestJS Mongoose For MongoDB",
          "Generate Todo Resources",
          "Create MongoDB Schema",
          "Create Todo Service",
          "Get and Post Todo Requests",
          "Update Todo Request",
          "Delete Todo Request"
        ],
        "Create React Native Todo Application": [
          "Install React Native",
          "Install UI Kitten Framework",
          "Demo UI Kitten",
          "Project Directory Structure",
          "Build Todo Service",
          "Build TodoList Component",
          "Create Todo Item Component",
          "Create Todo Accessory Component",
          "Build TodoList UI",
          "Build Todo Form",
          "Fix Todo Delete Button"
        ],
        "Bonus": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Be familiar with basic NodeJS",
        "Understand Typescript"
      ],
      "description": "If you're tired of long courses and just want to learn basic web development this course is for you. This course was built with the goal of teaching the students how to use NestJS and React Native. It focuses heavily on designing a backend RESTful Web Service with CRUD functionality that sends data to a React Native Front End Application.  This is an entry-level course that focuses on building and reinforcing some of the techniques used by developers to build a full-stack application.\n\n\nIn this course, we start by learning what tools you need to create a full-stack Before taking this course, it is recommended that you have an understanding of skills such as Javascript, NestJS, MongoDB, or ORM development. If not we'll touch on some of those topics early in the course but it is still recommended to have a better understanding.\n\n\nWhen going through this course you may come across subjects that you are familiar with as well as those that are completely new to you.\n\n\nSome of the topics touched upon include\nReact Hooks\nReact Functional Components\nHTTP Requests with Fetch\nCRUD Methods\nNestJS\nDatabase Migrations\nORMs\nMongo DB\nWhen taking this course, please know that you can take your time because you will get access to support along the way. By the time you finish this course, you should feel comfortable creating a full-stack web application with React Native and NestJS.",
      "target_audience": [
        "This course is for entry level web developers that have an understanding of web applications"
      ]
    },
    {
      "title": "Mobile App Development in 27 Minutes: iOS App",
      "url": "https://www.udemy.com/course/iso-app-development-tutorial-in-27-minutes/",
      "bio": "The speed learners guide to native iOS development. BONUS lessons included!",
      "objectives": [],
      "course_content": {
        "Introduction and setup": [
          "Introduction",
          "Setting up our Mac with Xcode 7 and installing an iOS simulator"
        ],
        "Creating our basic iOS app (in 12 minutes)": [
          "How to create a new app project in Xcode 7 and Swift 2",
          "How to add items to the main screen of an iOS app",
          "Connecting items in an Xcode storyboard to our codebase",
          "Writing the Swift 2 code of an iOS app"
        ],
        "Bonus app features (optional - but only 15 minutes long!)": [
          "How to add pinch to zoom to a UIImageView",
          "How to share an image on iOS with Facebook, Twitter etc",
          "An introduction to good iOS coding - our first crash"
        ],
        "Farewell and your next steps": [
          "BONUS lecture and a few tips"
        ]
      },
      "requirements": [
        "A Mac running OS X or OS X running in a virtual machine.",
        "Xcode (free from Apple)",
        "No programming experience needed"
      ],
      "description": "Tired of seeing endless 'How to code 10,000 iOS apps in 10 days' courses?\nEver just wanted to get stuck in to iOS app making right away?\nWell, that's why I created this course! No other course takes you from beginner (with no experience) to a full app in less time than it takes to make a sandwich! I will show you how to:\nInstall Xcode (and iOS simulator)\nSetup the graphical look of your app using Storyboards\nConnect graphical elements like buttons and Text Fields to your Swift code using outlets\nManipulate images (pinch to zoom) within iOS apps\n\n\nThis course is for you if you:\nAre a beginner or novice to iOS App development in Xcode 7 and Swift\nWant to understand iOS apps in a short period of time\nLove proceeding at an awesomely brisk pace!\n\n\nThis course is not for you if:\nYou are an expert or intermediate programmer\n\n\nWhat software do you need?\nXcode (free) which runs on Max OS X (or an OS X virtual machine)\n\n\nDo you need experience?\nNo. I assume you are a complete beginner to apps and development in general\n\n\nWhat makes this course different?\nIt's just so quick! Take i right now and you'll learn iOS apps before you can even blink! Everyone used to tell me apps were hard to make - but they're wrong. It's probably because they had bad teachers - join me and I'll show you what good teaching is!\n------------------------------------------------\nPLEASE NOTE: This course is designed to get you up and running with Xcode and iOS in record time. Therefore I have limited time to actually explain everything. My other course on iOS app development explains everything we do in much more detail.\n\n------------------------------------------------\n\nALSO NOTE: THIS IS A FREE COURSE. I gave up about a week of my time to put it together and now you can learn for free. Some people in the reviews section think that means I have reply to every single thing they request. If I don't reply then they drop me a bad review - all because I didn't give them personalised attention.\nI'm sure that you, the reader, know what kind of people these are...\nI reply to all my paid courses as a priority and then to my free ones if time allows. Please understand this before taking this course.",
      "target_audience": [
        "Beginners should take this course",
        "Experts should not take this course"
      ]
    },
    {
      "title": "Create an App for iOS with Ease",
      "url": "https://www.udemy.com/course/appsinxcode/",
      "bio": "In this course you will learn how to develop iOS iPhone apps in Xcode using minimal code.",
      "objectives": [
        "Understand the Objective-C coding language",
        "Learn how to use Xcode",
        "Learn how to make iOS apps",
        "Design User Interfaces in Xcode"
      ],
      "course_content": {
        "Objective-C": [
          "Learning Objective-C",
          "Objective-C Dynamic"
        ],
        "Icon & Button Optimization": [
          "Customizing Images"
        ],
        "Working in Xcode": [
          "Preparing Xcode",
          "Adding Supporting Files",
          "Adding Frameworks",
          "Customizing the Tab Bar",
          "Contact Form",
          "Customizing the Buttons",
          "Making Interface Connections",
          "Button Sound",
          "Code Building",
          "Using Tabs with Simulator",
          "Adding Supporting Files - Second View",
          "Customizing the Tab Bar - Second View",
          "Customizing the Buttons - Second View",
          "Making Interface Connections + Code Building- Second View",
          "Using Tabs with Simulator- Second View",
          "Location Services",
          "Objective-C"
        ],
        "Publishing your App to the App Store": [
          "App Store",
          "Bonus- App Marketing + Viral Exposure",
          "E"
        ]
      },
      "requirements": [
        "An Apple computer",
        "Xcode"
      ],
      "description": "Don't struggle with many hours of learning code.\nThis course covers the key features of Xcode and teaches the basics for iOS app development using little code with Objective-C. Dedric explores the Xcode user interface;  reviews the code editors, including version and assistant editors. The final chapter covers publishing your app to the app store.\nCNET tech course of the year!\n\nTopics include:\n·  Learning the iOS  coding language Objective-C\n·   Icon & button  optimization\n·   Adding objects & supporting files\n·   Exploring the code editors\n·   Making interface connections\n·   Creating an iPhone storyboard interface\n·   Testing your app for errors\n·   Publishing your app to the app store\n\n\nWhat you’ll learn\nUnderstand the Objective-C coding language\nLearn how to use Xcode\nLearn how to make iOS apps\nDesign User Interfaces in Xcode\nAdding Supporting Files\nAdding Frameworks\nCustomizing the Tab Bar\nMaking Interface Connections\nButton Sound\nCode Building\nUsing Tabs with Simulator\nAdding Supporting Files\nCustomizing the Tab Bar\nCustomizing the Buttons\nMaking Interface Connections\nUsing Tabs with Simulator\nLocation Services\nAre there any course requirements or prerequisites?\nAn Apple computer\nXcode\nWho this course is for:\nBeginners wanting to learn how to make apps with Xcode\nNot for professional developers\n\n\nStart learning today!\n\n\nDon't struggle with many hours of learning code.\nThis course covers the key features of Xcode and teaches the basics for iOS app development using little code with Objective-C. Dedric explores the Xcode user interface;  reviews the code editors, including version and assistant editors. The final chapter covers publishing your app to the app store.\nCNET tech course of the year!",
      "target_audience": [
        "Beginners wanting to learn how to make apps with Xcode",
        "Not for professional developers"
      ]
    },
    {
      "title": "Unity Mobile: Create a GTA Style Third-Person Shooter Game",
      "url": "https://www.udemy.com/course/unity-mobile-create-a-gta-style-third-person-shooter-game/",
      "bio": "Master Unity game development by creating a GTA-inspired open world third-person shooter for PC, Android & iOS 2025",
      "objectives": [
        "Build a GTA-inspired third-person shooter game step by step in Unity",
        "Create smooth third-person character movement and camera controls",
        "Implement shooting mechanics, health systems, and animations",
        "Design enemy AI with patrol, chase, and attack behaviors",
        "Add weapons, vehicles, and interactive objects to your game world",
        "Develop an open world environment with missions and objectives",
        "Apply game optimization techniques for better performance",
        "Gain the skills to design, code, and expand your own Unity projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setting up Environment": [
          "Project Assets",
          "Creating Project",
          "Adding Environment",
          "Fixing Materials",
          "Fixing Buildings"
        ],
        "Player Controller": [
          "Project Assets",
          "Adding Characters",
          "Setting up TPS Controller",
          "Adding Movement to Player",
          "Sprinting",
          "Ragdoll Physics",
          "Adding Footsteps"
        ],
        "Character and Outfit System": [
          "Adding All characters and outfits",
          "Making Controllers for all character",
          "Adding Ragdoll physics",
          "Change Character and Cloths UI",
          "Outfit Trigger",
          "Outfit Trigger Script part1",
          "Outfit Trigger Script part2",
          "Changing Gender",
          "Fixing Bugs"
        ],
        "Rifles and Shooting": [
          "Adding and Switching btw rifles",
          "Setting up gun in player hands and shooting",
          "Setting up other rifles",
          "Adding throwable and mele weapons",
          "Setting up Gun shop",
          "Adding Rifles for all Players"
        ],
        "Player Vehicles": [
          "Project Assets",
          "01 - Adding Car Controller",
          "Add Own Car Model",
          "Added all Vehicles",
          "Adding Bikes and MotorCycles",
          "Gas Station System"
        ],
        "NPCs and Vehicles AI": [
          "Project Assets",
          "Adding Assets",
          "Adding NPCs",
          "Adding Customize NPC"
        ],
        "NPCs Chatter System | Vehicles AI System | Shop System": [
          "Adding NPCs Talking System",
          "Cars NPCs",
          "Shop System"
        ],
        "Mission System": [
          "Mission UI",
          "Setting up whole Mission",
          "Missions Scripts",
          "Adding Angry NPC"
        ],
        "Main Menu and Save System": [
          "Project Assets",
          "Adding Save System",
          "Adding Main Menu UI",
          "Changing and Saving Data",
          "Saving Game"
        ]
      },
      "requirements": [
        "No prior experience in game development required – beginners are welcome",
        "A computer capable of running Unity smoothly",
        "Basic programming knowledge (C#) is helpful but not required",
        "Internet connection to download Unity and course materials",
        "Passion for learning game development and building your own projects"
      ],
      "description": "Do you want to create your own GTA-style open world third-person shooter game from scratch? This course will teach you how to master Unity game development by guiding you step by step through the process of building a complete, fully functional project inspired by one of the most popular game genres in the world.\nYou will begin by learning the fundamentals of Unity’s interface, tools, and workflow, then quickly move into practical game mechanics. We will cover player movement, third-person camera systems, combat mechanics, shooting systems, health and damage, animations, enemy AI, and environment design. You will also discover how to add weapons, vehicles, interactive objects, missions, and an open world environment that feels alive and exciting.\nThroughout the course, you will build everything from the ground up, gaining hands-on experience in coding, level design, and game optimization. Each lesson is carefully designed to be clear and beginner-friendly, while still covering advanced techniques that professional developers use.\nBy the end of this course, you will have created a complete GTA-inspired third-person shooter game that you can showcase in your portfolio or continue developing into a larger project. Most importantly, you will gain the skills and confidence to bring your own open world game ideas to life with Unity.\nEnroll now and start building your dream game today!",
      "target_audience": [
        "Beginners who want to start learning Unity game development step by step",
        "Intermediate developers looking to create an open world third-person shooter",
        "Students who want to make their own GTA-style games",
        "Anyone interested in game design, coding, and creating 3D environments",
        "Aspiring indie developers who want a complete hands-on project for their portfolio"
      ]
    },
    {
      "title": "SwiftUI Property Wrappers Explained Through a Real Feed App",
      "url": "https://www.udemy.com/course/swiftui-property-wrappers-explained-through-a-real-feed-app/",
      "bio": "Learn SwiftUI property wrappers in the context of MVVM, real-world architecture, dependency injection, and async network",
      "objectives": [
        "Apply the MVVM design pattern to structure SwiftUI apps.",
        "Use property wrappers like @State and @ObservedObject appropriately.",
        "Build a network service using async/await and retry logic.",
        "Parse RSS and Atom feeds into Swift model objects.",
        "Inject dependencies into view models using initializers.",
        "Manage app state using @Published and ObservableObject.",
        "Control view-local UI state with @State.",
        "Update views based on loading, success, or failure states.",
        "Handle concurrency and UI updates using @MainActor.",
        "Follow best practices for clean, scalable SwiftUI architecture."
      ],
      "course_content": {
        "Course Introduction": [
          "Video Introduction",
          "Introduction"
        ],
        "Networking Service Explained": [
          "Walk Through the Networking Service Code",
          "Networking Service in iOS"
        ],
        "Feed Parser Service": [
          "Walk through the Networking Service Parser",
          "Purpose of a FeedParser Service"
        ],
        "Understanding the ViewModel": [
          "Walk through of the View Model",
          "Explain @MainActor for the ViewModel",
          "Explain Observable Object in the View Model",
          "Explain @Published in the View Model"
        ],
        "Explain the View": [
          "Walk through the View Code.",
          "Modifying @State and the initializers",
          "Explain @State in the View",
          "Explain @StateObject and @ObservedObject.",
          "Explain the initializer and dependancy injection.",
          "Explain when '@StateObject' comes into play.",
          "WARNING About Using @StateObject inside the view."
        ]
      },
      "requirements": [
        "Familiarity with basic Swift syntax and data types.",
        "Understanding of functions, structs, and classes in Swift.",
        "Basic knowledge of SwiftUI views and layout.",
        "Experience using Xcode to build and run iOS apps.",
        "Comfort with using Swift optionals and control flow.",
        "Awareness of how to use property wrappers like @State.",
        "Ability to read and write simple asynchronous Swift code.",
        "Understanding of what MVVM stands for (basic level).",
        "Some experience working with REST APIs or URLSession.",
        "Access to a Mac with Xcode 14 or later installed."
      ],
      "description": "Most tutorials and courses explain SwiftUI property wrappers in isolation—@State, @Published, @ObservedObject—but never show you how they actually work together in a real app. That’s where this course comes in.\nThis course is designed for iOS developers who are confused by property wrappers and overwhelmed by vague explanations. We focus on understanding why each property wrapper exists and how it's intended to be used inside classes, structs, and most importantly, within the MVVM design pattern. You'll build a fully functional RSS feed app from scratch, learning how to structure your code with a clean separation of concerns and how to inject dependencies into your view models properly.\nAlong the way, you’ll implement:\n@State, @Published, @ObservedObject, and @StateObject in context\nA networking layer using async/await and retry logic\nFeed parsing with FeedKit\nA SwiftUI UI driven by real-time view model updates\nDependency injection for testability and clarity\nProper use of @MainActor to handle UI updates safely\nThis course is practical, focused, and built for self-taught developers and beginners who want to move beyond copy-paste coding and really understand how SwiftUI apps are built. If you’ve been struggling to make sense of property wrappers, this course will give you the clarity and confidence to use them correctly—and build better apps because of it.",
      "target_audience": [
        "Swift developers confused by how and when to use property wrappers.",
        "Learners frustrated by tutorials that explain syntax but not real-world usage.",
        "iOS developers who want to understand property wrappers through MVVM.",
        "Beginners struggling to connect @State, @ObservedObject, and @Published to actual app structure.",
        "Developers unsure why some property wrappers work in classes and others in structs.",
        "Students who’ve learned SwiftUI basics but feel lost when building full apps.",
        "Programmers tired of abstract explanations with no architectural context.",
        "Self-taught iOS learners looking to replace guesswork with clarity.",
        "Developers who want a practical project to make property wrappers finally “click.”",
        "Anyone who believes understanding property wrappers requires understanding design patterns."
      ]
    },
    {
      "title": "Swift 3 - Create A Simple iOS Game",
      "url": "https://www.udemy.com/course/swift-3-game/",
      "bio": "A Complete Guide to Creating a Simple Swift 3 iOS Game",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Application Resource Files",
          "Creating The Project and Home Interface"
        ],
        "Creating the game screen": [
          "Designing the game interface",
          "Setting up the tapping button",
          "Creating start game controls",
          "Adding a game timer",
          "Creating the end game function"
        ],
        "Creating the end game screen": [
          "Designing the end game interface",
          "Create restart function",
          "Display the end score",
          "Add save score function",
          "Display high score"
        ],
        "Content Sharing": [
          "Share score to Twiiter",
          "Share score via Email",
          "Share score via SMS"
        ],
        "Earn Revenue": [
          "Display ad banners on all views",
          "Create in app purchases to remove ads",
          "Add in app purchases",
          "Setup ad removal"
        ],
        "Finishing touches": [
          "Set up the application for universal iPad display",
          "Restore In App Purchases",
          "Create app icons",
          "Setup a universal launch screen"
        ],
        "Publishing the application": [
          "Prepare application for submission",
          "Submit the application to the appstore"
        ],
        "What's Next?": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "You will need a Apple Mac computer or laptop",
        "You will need the developer software Xcode 8",
        "You will need a basic knowledge of Swift 3",
        "You will need a developer license at some point"
      ],
      "description": "Do You Want To Create Your Own iPhone and iPad iOS 10 Game but are not sure where to start or even begin? Are you ready to jump right into the exciting world of mobile development but have little or no programming experience? Then this is the perfect course for you!\nThis Swift 3 - Creating A Simple iOS Game will give you everything you will need to create a fun and addicting simple iOS 10 game in Swift 3, Teaching you from the ground up and implementing all the features from gaining points and using timers to all the way to saving high scores and earning revenue and even submitting the application on the AppStore.\nEarn Revenue From The Game by implementing AdMob ad banners within the application and using in app purchases as a way to remove the banners from the app to create an ad free experience for a small cost.\nSell Your App to Millions of Users around the world by submitting the application to the AppStore.\nNot only do you get the best online IOS 10 development course online but you also get first class responsive support by email, Twitter or on the forums, So you can rest assure you have full guidance in your new career!\nWhy Choose This iOS 10 & Swift 3 Course?\nMany programmers learning to create there first iOS 10 application often learn from a boring 300 paged book or a short online video tutorial and are often left with more questions they they asked! This iOS 10 & Swift 3 course teaches you from the ground up and i never leave you hanging as i support you through each and every step, i am there to assist you when you run into a problem in Xcode 8 and to offer any advice needed and before you know if you will have created your first iOS 10 app and will feel like everything your learned has stuck in your head.\nTopics Covered:\nFun and Simple iOS 10 Game\nScore Saving and Loading\nTimers and Counters\nGame Controls\nSocial Integration: Twitter, SMS and Email\nStoryboards Files and Support\nUniversal Support and Screen Size Support\nEarning Revenue Ad Networks\nIn App Purchases\nApp Store Submission and Update Support",
      "target_audience": [
        "Anyone who wants to develop apps",
        "Anyone who wants to learn how to code",
        "Anyone who is looking to freshen up there skills",
        "Anyone who is looking to make money from IOS 10 Apps",
        "Anyone looking for a new career"
      ]
    },
    {
      "title": "Flutter Beginner Tutorial Build your App",
      "url": "https://www.udemy.com/course/flutter-beginner-tutorial-build-your-app/",
      "bio": "Learn the dart and flutter basics",
      "objectives": [
        "Learn the basics of dart and flutter",
        "2 hours",
        "No risks",
        "No Cases"
      ],
      "course_content": {
        "Introduction": [
          "Introduction Video",
          "Introduction",
          "Connect Flutter with Android Studio",
          "Starting with emulators"
        ],
        "Widgets": [
          "Working with app bar",
          "Buttons and Text",
          "Containers",
          "Packages and Fonts",
          "UI Screen 1",
          "Ui Screen 2"
        ],
        "Screens and Navigations": [
          "Creating Screens",
          "Navigations 1",
          "Navigations 2"
        ],
        "Ending": [
          "Sources and websites for you",
          "Fast test"
        ]
      },
      "requirements": [
        "Download Flutter and Android studio for 10 GB"
      ],
      "description": "Create your first your ui app with flutter\nLearn with us :\nDesigning in Flutter\nCoding without error\nCreating Screens\nFast Coding\nContainers\nMore About Dart\nMore\nWe added some websites that help you in flutter development\nand makes your apps faster and easier for users\n\n\nFast Development\nPaint your app to life in milliseconds with Stateful Hot Reload. Use a rich set of fully-customizable widgets to build native interfaces in minutes.\n\n\nExpressive and Flexible UI\nQuickly ship features with a focus on native end-user experiences. Layered architecture allows for full customization, which results in incredibly fast rendering and expressive and flexible designs.\n\n\nNative Performance\nFlutter’s widgets incorporate all critical platform differences such as scrolling, navigation, icons and fonts, and your Flutter code is compiled to native ARM machine code using Dart's native compilers.\n\n\nin this flutter tutorials. After that we will install android studio and start with the basics of flutter. At the end of the course we will create a simple  Ui screen\nLearn how to create fast and stunning mobile applications using Flutter, a new mobile framework by google. In this course you will quickly learn how to build an application in Flutter with no previous experience.\nFlutter is Google's UI toolkit for building beautiful, natively compiled applications for mobile, web, desktop, and embedded devices from a single codebase.",
      "target_audience": [
        "Flutter",
        "Dart",
        "App for Android and Ios"
      ]
    },
    {
      "title": "Xamarin Forms for Android and iOS Native Development",
      "url": "https://www.udemy.com/course/xamarin-forms-free/",
      "bio": "Build your First Entirely Native Mobile Apps for Android and iOS using Xamarin Forms, C#, and XAML. Then include SQLite!",
      "objectives": [],
      "course_content": {
        "Introduction to Xamarin": [
          "Welcome!",
          "What is Xamarin?",
          "Why Xamarin?",
          "How does Xamarin Work?",
          "Installing on macOS",
          "Installing on Windows"
        ],
        "Defining the Layout": [
          "Creating a project in Mac",
          "Creating a project in Windows",
          "Adding Some Controls",
          "The StackLayout",
          "Event Handlers"
        ],
        "Handling Events and Navigation": [
          "Creating Event Handlers with C#",
          "Changing the Main Page",
          "Adding a Toolbar",
          "Navigating to another Page"
        ],
        "Testing": [
          "Testing on Android Simulator",
          "Testing on iOS Simulator",
          "Testing on iOS Simulator from Windows"
        ],
        "NuGet and SQLite": [
          "Adding Packages to the Project",
          "The Android Main Activity",
          "The iOS App Delegate",
          "Creating a Model Class",
          "Inserting into a SQLite Database",
          "Reading from a SQLite Database"
        ],
        "ListViews": [
          "Defining the ListView",
          "DataBinding, ItemTemplate, and a bit of Styling"
        ],
        "Bonus": [
          "Please watch"
        ]
      },
      "requirements": [
        "You require some experience in programming",
        "You need a Mac computer of some sorts for iOS development (options are discussed inside)",
        "You need either a Mac or Windows computer for most of the work"
      ],
      "description": "A few years ago I wanted to start developing mobile apps, back then for some reason for the Windows Phone 7 OS, and I just didn't understand what I was finding on Google, too advanced for a newbie like me. I felt overwhelmed, even though I had some (very light) programming experience, this seemed too complicated, maybe that was why it was one of the latest subjects in college (and I was just starting out).\nAnd then I heard about this event that Nokia was having for developers, two full days of learning to build Windows Phone 7 and S40 apps, and we would start with Windows Phone. So my mom, with I'm sure a few efforts, gave me just enough money for one day, to travel to the big city, get to the event, have something to eat, and return home. So I skipped school that day, and went to the event, and luckily that day it would be about Windows Phone 7, and I say luckily because a few minutes by the instructor that day completely changed my life, and I mean this in every sense of the word.\nIn literally just about 30 minutes, this guy perfectly explained how to build Windows Phone 7 apps, and a world of opportunities opened for me, I would go ahead and build dozens of apps for WP7, WP8, Windows 8, and Windows 8.1 thanks to that quick lecture\nThe reason I'm writing about this story, is because I want you to have the same opportunity that I did back then, so you too can start building apps, and with no need from your loving parents to sacrifice some of the money they may very well lack, this course is entirely free. Hoping that this course does to your professional career what those 30 minutes did for mine all those years ago.\nIf you are a complete beginner on app development, I made this course with you in mind, so after just a few minutes you unlock a world of posibilites with the apps that you can build.\n\n\nAnd even better, Xamarin Forms unlocks more doors now by itself than Windows Phone 7 did back then. Xamarin Forms allows you to build NATIVE both Android and iOS apps reusing one code base.\n\n\nSo, if you are a complete beginner, take this course, and at the end, you will know how to:\nBuild iOS apps and\nBuild Android apps\nBy 100% reusing C# and XAML code!\nAdd SQLite local databases to your apps\n\n\nJumpstart your mobile app development career, don't wait for the University to teach you in the last semesters, act now and start building iOS and Android apps today.",
      "target_audience": [
        "Anyone interested in learning Xamarin!",
        "Mobile developers searching for a native code sharing solution!",
        "Developers looking to efficiently build their first mobile apps!",
        "Newbie developers who want the best option around for Native App Development."
      ]
    },
    {
      "title": "Complete Wear OS Course: Build 10 Android Smartwatch Apps",
      "url": "https://www.udemy.com/course/wear-os-course/",
      "bio": "Master Android smartwatch development: Jetpack Compose, Tiles, Complications & Navigation. Build real-world apps",
      "objectives": [
        "Build complete Wear OS applications using Jetpack Compose, understand activity lifecycle differences and implement navigation patterns for small screens",
        "Create interactive tiles, watch face complications, voice recognition, sensor integration, and background services",
        "Build companion apps with phone-watch communication using Data Layer API, implement network requests and API integration, manage data persistence",
        "Apply clean architecture patterns, implement comprehensive testing strategies, optimize performance for battery life, and create professional-grade applications"
      ],
      "course_content": {
        "Introduction to Wear OS Development": [
          "(1.1.1) Welcome to Wear OS Development",
          "(1.1.2) What is Wear OS and Its Evolution",
          "(1.1.3) Wear OS vs Traditional Android Development"
        ],
        "Development Environment Setup": [
          "(2.1.1) Installing Android Studio and Wear OS SDK",
          "(2.1.2) Configuring Wear OS Emulator and Device Pairing",
          "(2.1.3) Project Structure and Gradle Configuration",
          "(2.1.4) Android Studio Setup"
        ],
        "Project - Hello World App": [
          "(2.2.1) Hello World App"
        ],
        "Wear OS Development Fundamentals": [
          "(3.1.1) Wear OS Activity Lifecycle Differences",
          "(3.1.2) Ambient Mode and Always-On Display",
          "(3.1.3) Handling State Changes and Interruptions",
          "(3.2.1) Navigation Patterns for Small Screens",
          "(3.2.2) Implementing Swipe-Based Navigation",
          "(3.2.3) Back Stack Management",
          "(3.3.1) Touch, Voice, and Gesture Input",
          "(3.3.2) Implementing Voice Recognition",
          "(3.3.3) Handling Hardware Buttons",
          "(3.4.1) Round vs Square Screen Handling",
          "(3.4.2) Different Screen Sizes and Densities",
          "(3.4.3) Responsive Design Techniques",
          "(3.5.1) User Authentication on Wear OS",
          "(3.5.2) Secure Data Storage and Encryption",
          "(3.5.3) Privacy and Permission Management"
        ],
        "Project - Pomodoro Timer App": [
          "(3.6.1) Pomodoro Timer App"
        ],
        "Jetpack Compose for Wear OS": [
          "(4.1.1) Compose vs Traditional Views for Wear OS",
          "(4.1.2) Setting Up Compose in Wear OS Project",
          "(4.1.3) Basic Compose Structure and Syntax",
          "(4.2.1) Text, Button, and Image Components",
          "(4.2.2) Wear-Specific Compose Components",
          "(4.2.3) Layouts: Column, Row, and Box",
          "(4.3.1) ScalingLazyColumn for Lists",
          "(4.3.2) Curved Text and Curved Layout",
          "(4.3.3) Wear Material Design Components",
          "(4.4.1) State and MutableState Basics",
          "(4.4.2) State Hoisting and Composition",
          "(4.4.3) ViewModel Integration with Compose",
          "(4.5.1) Wear Navigation Compose Library",
          "(4.5.2) Implementing Navigation Between Screens",
          "(4.5.3) Handling Back Stack and Deep Links",
          "(4.6.1) Custom Composables for Wear OS",
          "(4.6.2) Compose Animations and Transitions",
          "(4.6.3) Performance Optimization in Compose"
        ],
        "Project - Habit Tracker App": [
          "(4.7.1) Habit Tracker App"
        ],
        "Core Wear OS Features": [
          "(5.1.1) Understanding Complications System",
          "(5.1.2) Creating Data Source Complications",
          "(5.1.3) Implementing Different Complication Types",
          "(5.2.1) Introduction to Tiles API",
          "(5.2.2) Building Interactive Tiles",
          "(5.2.3) Tile Data Management and Updates",
          "(5.5.1) Wear OS Notification Best Practices",
          "(5.5.2) Creating Wear-Specific Notifications",
          "(5.5.3) Action Buttons and Inline Replies",
          "(5.5.4) Ongoing Activities for Long-Running Tasks",
          "(5.6.1) Implementing Voice Actions",
          "(5.6.2) Speech-to-Text Integration",
          "(5.6.3) Handling Voice Commands",
          "(5.7.1) Accessing Wear OS Sensors",
          "(5.7.2) Heart Rate and Step Counter Integration",
          "(5.7.3) Health Services API Overview"
        ],
        "Project - Hello World with Tiles and Complications": [
          "(5.3.1) Hello World with Tiles and Complications"
        ],
        "Project - Hydration Tracker with Tiles": [
          "(5.4.1) Hydration Tracker with Tiles"
        ]
      },
      "requirements": [
        "Basic knowledge of Android development fundamentals",
        "Familiarity with Kotlin programming language"
      ],
      "description": "Transform your Android development skills and master the exciting world of smartwatch app development with this comprehensive Wear OS course. Whether you're a beginner or experienced Android developer, this course will take you from zero to hero in creating powerful, engaging applications for Android smartwatches.\n\n\nWhat You'll Learn:\n\n\nCore Wear OS Development\n\n\nMaster the fundamentals of Wear OS development and understand how it differs from traditional Android development\nLearn to handle round and square screens, different densities, and responsive design techniques\nImplement ambient mode and always-on display functionality\nMaster navigation patterns optimized for small screens and touch interactions\n\n\nModern Development with Jetpack Compose\n\n\nBuild beautiful, responsive UIs using Jetpack Compose for Wear OS\nImplement curved text and layouts for round screens\nMaster state management and ViewModel integration\nCreate custom composables and smooth animations\n\n\nAdvanced Wear OS Features\n\n\nDevelop interactive Tiles that provide glanceable information\nCreate Complications that display data on watch faces\nImplement voice recognition and gesture controls\nBuild watch faces with custom designs and complications\n\n\nYou'll build 10 complete applications\n\n\nHello World app with Tiles and Complications\nPomodoro Timer with ambient mode\nHabit Tracker with data persistence\nHydration Tracker with interactive tiles\nStep Counter using health services\nWeather app with API integration\nBrain Break Timer with advanced features\nAnd more!\n\n\nWhat Makes This Course Special\n\n\nProject-Based Learning: Learn by building real, functional apps\nModern Tech Stack: Use the latest Jetpack Compose and Wear OS APIs\nComprehensive Coverage: From basics to advanced features\nProduction-Ready Code: All projects follow best practices and are ready for deployment\nHands-On Experience: Extensive practical exercises and real-world scenarios\n\n\nPerfect For:\n\n\nAndroid developers wanting to expand into smartwatch development\nDevelopers interested in wearable technology\nAnyone wanting to create apps for the growing smartwatch market\nDevelopers looking to master Jetpack Compose with real projects\n\n\nPrerequisites\n\n\nBasic Android development knowledge (Activities, Layouts, Java/Kotlin).\nNo prior Wear OS experience required!\n\n\nJoin thousands of developers who are already building the future of wearable technology. Enroll now and start creating amazing smartwatch apps today!",
      "target_audience": [
        "Intermediate-Level Android Developers Looking to Expand Their Skills"
      ]
    },
    {
      "title": "Mastering Persistence in iOS Mobile development with SwiftUI",
      "url": "https://www.udemy.com/course/mastering-persistence-in-ios-mobile-development-with-swiftui/",
      "bio": "Learn Core Data, UserDefaults, Keychain, File System Storage, and More to Build Scalable iOS Apps",
      "objectives": [
        "Implement Core Data to manage and persist structured data in SwiftUI apps.",
        "Use UserDefaults and AppStorage to store lightweight user preferences.",
        "Securely store and retrieve sensitive data using Keychain Services.",
        "Work with iOS file system directories for persistent and temporary storage.",
        "Save, retrieve, and delete files, images, and PDFs in the Documents directory.",
        "Optimize performance with caching to reduce unnecessary data fetching.",
        "Use temporary storage for session-based data that doesn’t need persistence.",
        "Design scalable and maintainable data persistence solutions for iOS apps.",
        "Set up and configure Core Data in a SwiftUI project for data persistence.",
        "Design Core Data entities, attributes, and relationships for scalable data models.",
        "Use FetchRequests to retrieve and filter data efficiently in SwiftUI views.",
        "Implement one-to-many relationships in Core Data.",
        "Use NSPersistentContainer to manage the Core Data stack effectively.",
        "Compare Core Data with SQLite and decide when to use each.",
        "Perform direct SQL queries on a SQLite database in iOS apps."
      ],
      "course_content": {
        "Introduction to Persistance": [
          "What This Course Covers"
        ],
        "Implementing SQL Lite in SwiftUI": [
          "Introduction to SQL Lite for SwftUI",
          "Implement SQLite in iOS: Build a User List App with Swift and SwiftUI",
          "SQLite Syntax Reference: A Step-by-Step Guide to Basic Queries",
          "What is a Foreign Key in SQL Lite?",
          "SQLite Tutorial: Creating Queries for Relationships Between Tables"
        ],
        "Implementing Core Data in SwiftUI": [
          "What is Core Data?",
          "How to Add Core Data to Your Xcode Project | Step-by-Step Guide",
          "Managed Object Model, Persistent Store Coordinator, and Managed Object Context",
          "Explanation of the Core Data SwiftUI App, Line by Line",
          "NSManagedObject Subclasses and Codegen Settings",
          "Understanding CoreDataClass and CoreDataProperties in Core Data"
        ],
        "Implementing User Defaults in SwiftUI": [
          "Introduction to a Basic Understanding of User Defaults",
          "Understanding @AppStorage in SwiftUI"
        ],
        "Implementing File System Storage": [
          "Understanding File System Storage in Swift",
          "Understanding the Documents Directory in Swift",
          "Saving and Retrieving an Image Using the Documents Directory in SwiftUI",
          "Understanding Temporary Directories in SwiftUI"
        ],
        "Implementing Keychain Access in SwiftUI": [
          "Understanding Keychain Persistence in Swift (Secure Storage)",
          "Saving and Retrieving Information Using the Keychain in SwiftUI"
        ],
        "Implementing Cache in SwiftUI": [
          "Understanding Cache in iOS Mobile Development with SwiftUI"
        ]
      },
      "requirements": [
        "You need a working knowledge of Xcode and be familiar with Swift syntax",
        "You need to know how to use terminal",
        "You need to know how to navigate on a Mac",
        "You need to know how to use simulator."
      ],
      "description": "Are you looking to master data persistence in iOS development using SwiftUI? Do you want to learn Core Data, UserDefaults, Keychain storage, File System storage, and Caching to build efficient, secure, and high-performance mobile applications?\nThis course is designed for iOS developers of all levels who want to understand and implement data storage techniques in SwiftUI applications. Whether you're a beginner exploring iOS persistence or an experienced developer looking to optimize your app’s data management, this course covers everything you need.\nWhat You’ll Learn:\nCore Data – Learn how to set up, manage relationships, and use NSManagedObject for persistent storage.\nUserDefaults & AppStorage – Store small user preferences and settings with SwiftUI’s built-in property wrapper.\nKeychain Storage – Securely store sensitive information such as passwords and authentication tokens.\nFile System Storage – Understand the Documents, Caches, and Temporary Directories for managing images, PDFs, and structured data.\nCaching Strategies – Implement memory and disk caching to optimize performance and reduce network load.\nPractical Projects – Apply these techniques in real-world scenarios, such as saving user data, handling authentication, and improving app efficiency.\nWhy Take This Course?\nHands-on Learning: We build multiple projects to apply each concept in real-world applications.\nStep-by-Step Approach: No fluff—just clear, practical explanations to help you understand persistence from the ground up.\nSwiftUI-Focused: Learn modern, declarative UI development while integrating data persistence techniques.\nFull-Scale Data Management: Learn when and why to use different storage solutions and how to implement them correctly.\nBy the end of this course, you'll have the confidence to implement robust data persistence strategies in your own iOS apps and optimize performance while ensuring data security.\nJoin now and take your SwiftUI persistence skills to the next level!",
      "target_audience": [
        "Aspiring iOS Developers",
        "Bootcamp Graduates",
        "Computer Science Students",
        "Junior iOS Engineers",
        "Freelancers & Indie Developers",
        "Backend Developers Transitioning to Mobile",
        "Developers Preparing for Job Interviews",
        "Engineers Working on Data-Intensive Apps",
        "Tech Professionals Upskilling for Career Growth",
        "Startup Founders & Product Owners"
      ]
    },
    {
      "title": "Flutter - Firebase - CRUD - Build 2 Apps super easy!",
      "url": "https://www.udemy.com/course/flutter-firebase-crud-build-2-apps-super-easy/",
      "bio": "Understand how Firebase works and how to wire it up with Flutter",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Welcome",
          "CRUD App showcase",
          "Setting up Layout 1",
          "Setting up Layout 2",
          "Firebase introduction",
          "Connect Firebase to Android",
          "Connect Firebase to IOS",
          "Read Data from Firebase",
          "Delete Data from Firebase",
          "Create Data for Firebase",
          "Update Data for Firebase",
          "Show all items -> Streambuilder",
          "Streambuilder bug fixing",
          "App 2 introduction",
          "App 2 without Firebase - ListView",
          "App 2 without Firebase - Add functionality",
          "App 2 without Firebase - Fixing bug",
          "App 2 add Firestore",
          "App 2 Create & Delete functionality",
          "App 2 Streambuilder",
          "Bye!"
        ]
      },
      "requirements": [
        "- Beginner knowledge Dart & Flutter"
      ],
      "description": "We will be building 2 Apps and connect both to Firebase. Our first App will have all important functionallities you need to know. You can use this project as a reference for your own Apps. The second App will be a todo list which you can do as a excercise or with me together.\n- Connect Firebase to your projects\n- Build Databases\n- Create, read, update, delte Items in your Databases\n- Read All items from your Databases and display them\n\n\nHave fun, enjoy!",
      "target_audience": [
        "Flutter Beginner which like to get to the next level by adding a backend"
      ]
    },
    {
      "title": "JourneyApps Training - Foundations",
      "url": "https://www.udemy.com/course/journeyapps-training-foundations/",
      "bio": "Learn the fundamentals of developing apps on the JourneyApps platform",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction: Welcome",
          "Introduction: Course Overview",
          "Introduction: JourneyApps Platform Architecture",
          "Introduction: What goes into building an application",
          "Introduction: Creating a new app in JourneyApps",
          "Introduction: IDE Walkthrough"
        ],
        "Data Model": [
          "Data Model: Overview",
          "Data Model: Anatomy and Key Concepts",
          "Data Model: Practical",
          "Data Model Basics"
        ],
        "Deployments": [
          "Deployments: Overview",
          "Deployments: Creating a new deployment and deploying your app code",
          "Deployments Basics"
        ],
        "Backends": [
          "Backends: Overview",
          "Backends: Features and Functionality"
        ],
        "Working with Data": [
          "Working with Data: View variables and types",
          "Working with Data: CRUD in views",
          "Working with Data: DB Operators",
          "Working with Data: Practical"
        ],
        "Frontend": [
          "Frontend: Overview and General Concepts",
          "Frontend: What's in a view",
          "Frontend: Practical",
          "Frontend Basics"
        ],
        "View Navigation": [
          "View Navigation: Practical",
          "View Navigation: Functions"
        ]
      },
      "requirements": [
        "A basic understanding of JavaScript and XML"
      ],
      "description": "JourneyApps is a full-stack platform for building custom industrial-grade apps used by frontline teams on desktop, mobile and wearable devices, even when they're offline.\n\nJourneyApps offers a groundbreaking new paradigm of app development: The high-productivity benefits of a low-code platform, with the full power and flexibility of code as a first-class citizen. Small teams of software engineers are supercharged by JourneyApps to conquer the app backlog.\n\nIn this JourneyApps Training - Foundations course you'll learn all the fundamental topics on how to build and maintain a cross-platform application on the JourneyApps platform to be ultra-productive.\n\nThis course is intended for those who have never developed an app on the JourneyApps platform or for those who have but would like to use this as a reference for future development.\n\nWe'll start by covering the basics of the platform, OXIDE (JourneyApps IDE), how it works, and how to create an app. After this, we'll look at data modeling and how to set up deployments. We'll then look at the backend of the app deployments. Once we understand this, we will work with the data and build out views in the application.\n\nThis course will be led by Michael Barnes and Tielman Le Roux who are both Customer Success Managers at JourneyApps.",
      "target_audience": [
        "Someone who has never developed an application on the JourneyApps platform",
        "Somone who has developed an application on the JourneyApps platform and wants to use this course as a reference"
      ]
    },
    {
      "title": "Algorithms. Development of Programming Logic",
      "url": "https://www.udemy.com/course/algorithms-programming-logic/",
      "bio": "Develop your Programming Logic by creating Algorithms",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Algorithms - Development of Programming Logic": [
          "Development of programming logic",
          "Exercises (Includes best practice tips)",
          "Exercises (Includes tips on how to learn from others)",
          "Optimization of an Algorithm"
        ],
        "Sorting Algorithms": [
          "Sorting Algorithms. Types and why they are important",
          "Exchange Algorithms (Bubble Sort)",
          "Code implementation of the Bubble Sort algorithm - Part 1",
          "Code implementation of the Bubble Sort algorithm - Part 2",
          "Sorting by Selection algorithm",
          "Code Implementation of the Algorithm by Selection - Part 1",
          "Code Implementation of the Algorithm by Selection - Part 2",
          "Creating Your Own Sorting Algorithm Project - Part 1",
          "Project on Creating Your Own Sorting Algorithm - Part 2",
          "Project on Creating Your Own Sorting Algorithm - Part 3",
          "Final Tips to improve development skills"
        ],
        "Bonus": [
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Basic programming skills"
      ],
      "description": "In this Algorithms course you will learn the basics to develop your programming logic. This course will give you a complete tour of all the most basic concepts to learn how to create your own algorithms, thanks to the global vision you will acquire. In fact throughout the course you will learn how to apply each idea to any programming language.\nYou will learn fundamental programming skills:\nElementary Algorithms\nDevelopment of programming logic\nBest practices when writing code\nOptimization of resources, time and operations in an algorithm.\n\n\nYou will also have downloadable didactic material, tips from my +15 years of programming experience and solved exercises so you will understand what logic each algorithm follows and know how to implement it in the language of your choice.\n\n\nYou will learn how to develop from scratch algorithms to solve problems no matter what programming language or technology you use. We will mainly focus on the development logic so that you will be able to transfer the idea to your own development environment. Therefore, no matter what language you use, the contents of these classes will be totally useful for you.\n\n\nAmong the different algorithms that we will see are included the sorting algorithms with a detailed explanation of how they work and each line and element of the code that they have. Did you know that in this course we will create a sorting algorithm faster than the famous Bubble Sort, Selection or Insertion????? If you want to know how to create algorithms with optimization and efficiency in mind...this is the ideal course for you.\n\n\nAll concepts are explained in detail, step by step and understanding the why of each thing. This way you will be able to grasp the basics of these programming pillars from the very beginning of your professional development. This course will allow you to expand into any area of software development.\n\n\nIsn't it great? Well, the best of all is that it is at your fingertips.\nBuy the course and enjoy all that is waiting for you.\nSee you soon!\n\n\nJose Javier Villena",
      "target_audience": [
        "Programming Students",
        "Interested in improving your programming skills"
      ]
    },
    {
      "title": "Reskinning the Side scroller Jumpy Skating Game iOS Game, EZ",
      "url": "https://www.udemy.com/course/reskinning-the-side-scroller-jumpy-skating-game-ios-game-ez/",
      "bio": "Easiest way to make & publish your very own iPhone side-scroller game that brings income. Dreams do come true, start now",
      "objectives": [
        "Make your own Jumpy Skating iPhone game and publish it in the app store, the quick and easy way"
      ],
      "course_content": {
        "Initial Setup": [
          "Apple Developer Registration",
          "Get Xcode Tool",
          "Download Source Code and Verify the Game Works on Your Machine",
          "iOS Certificates",
          "Provisioning Profile",
          "Setting Up Applovin Account",
          "Setting Up Chartboost Account"
        ],
        "Modifying Game Graphics - Main Character": [
          "Choosing a new theme",
          "Modifying Game Graphics - part 1",
          "Modifying Game Graphics - part 2",
          "Modifying Game Graphics, Main Character - part 3",
          "Modifying Character Graphics in Photoshop",
          "Resizing the Main Character images to iPhone size",
          "Testing the New Main Character Graphics in the iPhone Simulator"
        ],
        "Modifying Game Graphics - Backgrounds and User Interface": [
          "Creating the Background Images - part 1",
          "Creating the Background Image - part 2",
          "Creating the Background Images - part 3",
          "Creating the Background Images and Testing in the Simulator - part 4",
          "Creating Bricks and Sidewalk images",
          "Testing Bricks, Sidewalk, Background Images in the Simulator"
        ],
        "Customizing the User Interface": [
          "Creating the User Interfaces Menu Items and Buttons",
          "Testing the Customized User Interface and Menus",
          "Modifying the Upgrade Items Images"
        ],
        "Game Icons": [
          "Creating a Professional App Icon",
          "Resizing Icons for iPhones, iPad sizes, Standard & Retina Display",
          "Updating the Icon Assets Resource File"
        ],
        "Taking Gameplay Screenshots": [
          "Setting Up Chartboost and Applovin IDs",
          "Taking Gameplay Screenshots for iTunes App Store Display - part 1",
          "Taking Gameplay Screenshots for iTunes App Store Display - part 2"
        ],
        "Itunes Connect Setup": [
          "Creating App Settings in Itunes connect",
          "Enable iAd Network",
          "Create and Configure Game Center Leaderboards"
        ],
        "Publishing to the iTunes App Store": [
          "Getting Ready to Submit the App",
          "Publishing to the itunes App Store - part 1",
          "Publishing to the itunes App Store - part 2",
          "BONUS"
        ]
      },
      "requirements": [
        "a mac or macincloud.com (or equivalent MAC virtual image)"
      ],
      "description": "Thank you for your interest in this course, my name is Yohann, I will be your instructor.\nIf you’ve ever tried to make a mobile app, you know how hard it can be especially if you’re missing a step, you could get stuck for hours or even days, and you will end up giving up.\nNow you’ve come to the right place. With This course we give you the full source code of the Jumpy Skating iPhone game clone, a game that made it 2nd in the apple app store worldwide!\nThis source code license already cost $200 on its own and you’re getting it with this course!\nI show you every single step you need to start, and I’m assuming you know nothing or very little,and I’m gonna help you succeed having your very own game, published in the app store, without having to write not even one single line of code!\nI’ll show you everything, and I really mean EVERYTHING, from getting a developer license to creating graphics with Adobe Photoshop and Illustrator, finding free graphics,the process to submit your game to the app store, and a lot more!\nNow, These skills are priceless, and I can assure you that in the future, you will thank yourself for having taken this course.\nOh and by the way, I forgot to mention that the game that you will publish will bring you passive income because we’ve integrated advertising banners and in-app purchases right out of the box.\nThis is a great course, with an addictive game source code, make the right decision and join us now. I’ll talk to you in the classroom.",
      "target_audience": [
        "anyone that has an afternoon to spare"
      ]
    },
    {
      "title": "Flutter & Image Segmentation - Build Canva & PicsArt Clone",
      "url": "https://www.udemy.com/course/flutter-image-segmentation-remove-change-backgrounds/",
      "bio": "Master offline AI image segmentation in Flutter to build background remover and creative photo editing features",
      "objectives": [
        "Use an on-device image segmentation model in Flutter with no internet or paid APIs",
        "Build a full-featured Flutter app that removes and replaces image backgrounds",
        "Understand how image segmentation works and its real-world applications",
        "Apply transparent and custom backgrounds to segmented images",
        "Save the transparent or edited images to the device gallery",
        "Add smooth animations when removing image backgrounds",
        "Implement sharing features to send edited images directly from the app",
        "Build a complete AI-powered mobile app in Flutter from scratch"
      ],
      "course_content": {},
      "requirements": [
        "A Windows, macOS, or Linux system for development"
      ],
      "description": "Create Professional AI Photo Editing Apps with Flutter - Completely Offline!\nEver wondered how apps like Canva, PicsArt, or Background Eraser work? Now you can build your own! This hands-on course teaches you to create AI-powered photo editing apps that remove and replace backgrounds with pixel-perfect accuracy - all running offline on mobile devices.\nWhat You'll Build:\nSmart Background Remover - Remove backgrounds with one tap\nBackground Replacement Studio - Add custom images, gradients, and presets\nProfessional Photo Editor UI - Smooth animations and intuitive design\nCamera Integration - Capture or import photos seamlessly\nShare & Export Features - Save results in high quality\nWhy This Course Stands Out:\n100% Offline AI - No API costs, no internet required\nReal-World Project - Build a complete, publishable app\nModern Flutter Practices - Clean code and best practices\nCross-Platform Ready - Works on both Android & iOS\nBeginner-Friendly - No prior AI experience needed\n\n\nPerfect For:\nFlutter developers wanting to add AI features\nMobile app entrepreneurs building photo tools\nDevelopers interested in on-device machine learning\nAnyone creating social media or e-commerce apps\n\n\nTechnologies You'll Master:\nFlutter & Dart for cross-platform development\nTensorFlow Lite for on-device AI inference\nImage Segmentation algorithms and optimization\nAdvanced UI/UX with animations and state management\nCamera/Gallery Integration and file handling\n\n\nCourse Bonuses:\nComplete source code and assets\nDeployment guide for App Store & Play Store\nPerformance optimization techniques\nFuture update access\n\n\nBy course completion, you'll have: A professional-grade AI photo editing app ready for publication, plus the skills to integrate AI into any Flutter project. Whether you're building for clients, your startup, or personal projects - this course gives you cutting-edge mobile AI capabilities.\nEnroll now and start building the next viral photo app!",
      "target_audience": [
        "Anyone who wants to build an AI-powered background remover app without relying on paid APIs or cloud services",
        "Beginners in Flutter who are ready to take their skills to the next level with real-world projects",
        "Flutter developers who want to integrate AI and machine learning features into their apps",
        "Students and tech enthusiasts curious about ML in mobile development",
        "Developers interested in building offline-capable AI apps in Flutter",
        "Mobile app developers looking to explore on-device image segmentation"
      ]
    },
    {
      "title": "Create your own Android Studio Plugin & Automate Everything",
      "url": "https://www.udemy.com/course/create-your-own-android-studio-plugin-automate-everything/",
      "bio": "Learn Android Studio Plugin Development with IntelliJ Plugin SDK from Scratch.",
      "objectives": [
        "Create your own Android Studio Plugin.",
        "Upload your plugin to Intellij Plugin Market.",
        "Intellij IDEA Plugins SDK.",
        "Speed up your Android Development Process by automate the things you want.",
        "Know about how Intellij IDE Plugins works and how you can create your Own."
      ],
      "course_content": {
        "Introduction and Tools Installations": [
          "INTRO",
          "Plugin SDK ?",
          "Plugin Structure - Services",
          "Plugin Structure - Actions",
          "Plugin Structure - Extensions",
          "Download",
          "Install IDE"
        ],
        "Create First Plugin #1": [
          "How to Create a Plugin Project in IntelliJ IDEA?",
          "Configuring Gradle to Support Android Studio",
          "Create Action (Notification) Plugin.",
          "Test Your First Action Plugin"
        ],
        "Create Custom Template Plugin #2": [
          "Create Custom Template",
          "Create Template UI Wizard #1",
          "Create Template UI Wizard #2",
          "Create Template UI Wizard #3",
          "Create Template Code Snippets",
          "Create Template Recipe Executers",
          "Plugin Config, Testing & Bugs Fix"
        ]
      },
      "requirements": [
        "To understand Concept, you need some basic Android Studio IDE Experience, Oops Concept and Kotlin Basics"
      ],
      "description": "Don't know what is IntelliJ Plugin SDK?\nDon't know how to create Plugins for Android Studio?\nDon't know how to Speed Up your work with Android Studio Plugins?\nCurious about how to create own plugins?\n\n\nYou will learn about all above things including.,\n* Services, Components, Actions, and Plugin Structures.\n* Installing IntelliJ Plugin and linking Android Studio with IntelliJ IDEA\n* Create Notification Action Template to understand the concepts of Actions.\n* Create a Starter Template with Recipe Executers, Wizard Template UI.\n\n\nIn this course, you will learn Basics of Plugins Structures and how you can create your own Android Starter Template, no matter what you need them for. For your company, your friends, your own business, or simply for fun.\nNote: This is purely for beginners.\n\n\nGet started now and speed up your work or automate your work in an Android development. This course will make your journey to becoming an Android developer fun as well.\nDon't waste any more time and get right into the action. This course consists of precisely curated content with demos. As our main goal is to make sure, that you understand the concepts and create the plugins. We also offer high-quality support, so in case you get stuck, we will be there for you, answering your questions in the Q&A.\nSo why are you waiting? this Course is for you!!! get start learn and Speed Up your work?",
      "target_audience": [
        "Curious about How to build Own Android Development Plugins, Starter Templates to speed up your work.",
        "This is Created only for beginners and Intermediate."
      ]
    },
    {
      "title": "Build your First game with Flutter & Flame | Flappy Bird",
      "url": "https://www.udemy.com/course/build-your-first-game-with-flutter-flame-flappy-bird/",
      "bio": "Build a complete Flappy Bird game using Flutter & Flame. Learn essential game dev concepts: movement, collisions etc.",
      "objectives": [
        "Build a full Flappy Bird-style 2D game using Flutter and Flame, covering every step from setup to final polish.",
        "mplement core game features like physics, animations, scoring, collision detection, and game loop logic.",
        "mplement core game features like physics, animations, scoring, collision detection, and game loop logic.",
        "Add audio and visual assets like sound effects, custom fonts, and sprites to create an engaging player experience."
      ],
      "course_content": {
        "Getting Started with Flutter & Flame": [
          "Introduction to the course",
          "Project Setup"
        ],
        "Building the Game's Core Structure": [
          "Game Design Basics",
          "The Game Loop"
        ],
        "Bringing the Player to Life": [
          "Adding the Player",
          "Player Movements"
        ],
        "Creating Obstacles and Handling Interactions": [
          "Adding Obstacles",
          "Handling Collisions"
        ],
        "Enhancing the User Experience": [
          "Adding Overlays",
          "Implementing Scoring",
          "Adding Sound Effects"
        ],
        "Wrapping Up Your First Game": [
          "Course Conclusion"
        ]
      },
      "requirements": [
        "Basic understanding of Dart and Flutter is recommended.",
        "A computer with Flutter SDK and an IDE like VS Code or Android Studio installed.",
        "No prior game development experience needed – everything is explained step by step.",
        "Willingness to learn and experiment with the Flame game engine."
      ],
      "description": "Are you ready to take your first exciting leap into the world of mobile game development? This course is your ultimate guide to building a classic and engaging game, Flappy Bird, from scratch using the powerful combination of Flutter and the Flame game engine! Designed specifically for absolute beginners, you don't need any prior game development experience to get started.\nIn this hands-on, step-by-step journey, you will not just follow along – you will truly understand the core principles behind game creation. We'll kick things off by setting up your development environment, ensuring you have all the tools ready to bring your game to life. You'll then dive into the fundamental concepts of game design and learn how the essential Game Loop drives all interactive experiences.\nYou'll quickly move on to crafting your player character, bringing the iconic Flappy Bird onto the screen, and implementing its unique flapping and gravity-defying movements. But what's a game without challenges? We'll guide you through adding dynamic obstacles (the infamous pipes!) and crucially, teach you how to detect collisions – the moment when your player interacts with the game world, for better or worse!\nBeyond the core mechanics, you'll learn how to polish your game for a professional feel. Discover how to create engaging game overlays for start screens and game over messages, implement a precise scoring system to track player progress, and add immersive sound effects that bring your game to life. By the end of this course, you won't just have a functional game; you'll have a game that looks and sounds great!\nWho is this course for?\nAbsolute beginners with no prior game development or Flutter experience.\nFlutter developers are interested in exploring game creation.\nAnyone eager to build their very first complete mobile game.\nAspiring game developers looking for a practical, project-based introduction.\nBy the end of this course, you will be able to:\nSet up a Flutter and Flame development environment.\nUnderstand the fundamental game loop.\nCreate and control player characters with basic physics.\nGenerate and manage dynamic game obstacles.\nImplement robust collision detection.\nDesign and display interactive UI elements (overlays).\nDevelop a functional scoring system.\nIntegrate sound effects to enhance gameplay.\nJoin us and start your exciting journey into mobile game development today. Enroll now and build your very own Flappy Bird game!",
      "target_audience": [
        "Flutter developers who want to explore 2D game development with the Flame engine.",
        "Beginners in game development looking for a project-based introduction.",
        "Mobile app developers interested in building casual games with Flutter.",
        "Anyone curious about creating engaging games like Flappy Bird using modern tools."
      ]
    },
    {
      "title": "Mastering SwiftUI Chat Apps with ChatGPT, SwiftData & TipKit",
      "url": "https://www.udemy.com/course/mastering-swiftui-chat-apps-with-chatgpt-swiftdata-tipkit/",
      "bio": "Supercharge Your SwiftUI Skills with ChatGPT, SwiftData & TipKit",
      "objectives": [
        "ChatGPT Integration: Seamlessly incorporate ChatGPT into SwiftUI for intelligent, dynamic conversations.",
        "MVVM Architecture: Master MVVM for clean, scalable SwiftUI app design.",
        "SwiftData Framework: Efficient data handling for smooth app operation.",
        "TipKit Framework: Elevate UX with valuable tips and tricks.",
        "SwiftUI Mastery: Unlock SwiftUI's full potential.",
        "Best Practices: Craft standout, user-centric apps."
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with SwiftUI fundamentals.",
        "Xcode installed on a Mac computer.",
        "Access to the internet for online resources.",
        "Enthusiasm to learn and create innovative apps."
      ],
      "description": "This course is designed to empower you with the skills and knowledge needed to create cutting-edge SwiftUI chat applications that go beyond the ordinary. You'll learn how to integrate ChatGPT, an advanced conversational AI, seamlessly into your SwiftUI projects, allowing your apps to engage in intelligent and dynamic conversations with users.\n\n\nBut that's not all! In addition to mastering ChatGPT integration, you'll dive into the Model-View-ViewModel (MVVM) architectural pattern, ensuring your code remains clean, maintainable, and scalable.\n\n\nTo make your apps even more powerful, we'll introduce you to two essential frameworks: SwiftData and TipKit. SwiftData will equip you with the tools to handle data efficiently, ensuring your chat applications run smoothly. TipKit, on the other hand, will provide you with a range of tips and tricks to enhance the overall user experience, making your apps more user-friendly and engaging.\n\n\nWhether you're an experienced SwiftUI developer looking to level up your skills or a newcomer eager to explore the exciting world of SwiftUI, this course is tailored to meet your needs. Join us on this thrilling journey and unlock the potential to create captivating, interactive, and intelligent SwiftUI chat applications that stand out from the crowd. Get ready to bring your app development dreams to life!",
      "target_audience": [
        "Aspiring iOS developers eager to explore SwiftUI's capabilities.",
        "Experienced SwiftUI developers seeking advanced skills.",
        "Developers looking to integrate ChatGPT for intelligent conversations.",
        "Those interested in MVVM architecture for cleaner code.",
        "Developers wanting to enhance UX with SwiftData and TipKit."
      ]
    },
    {
      "title": "Compose Multiplatform Masterclass : Bridging Android & iOS",
      "url": "https://www.udemy.com/course/compose-multiplatform-masterclass-bridging-android-ios/",
      "bio": "Learn how seamlessly to bridge Android and iOS with CMP, building shared UIs, platform-specific screens & functionality",
      "objectives": [
        "Understand the core concepts of Compose Multiplatform for bridging Android and iOS.",
        "Build shared user interfaces for Android and iOS using Compose Multiplatform.",
        "Integrate platform-specific features while leveraging a shared Kotlin codebase.",
        "Learn best practices for structuring cross-platform projects with Compose Multiplatform",
        "Explore strategies for handling platform-specific UI customisations."
      ],
      "course_content": {},
      "requirements": [
        "A basic understanding of Jetpack Compose is recommended.",
        "Access to a macOS system for testing iOS apps.",
        "A willingness to learn and explore cross-platform development.",
        "Access to a real iPhone device is optional but helpful for testing specific features like camera capture.",
        "Familiarity with Android Studio and Android app development experience is a plus.",
        "Basic knowledge of iOS app development is a plus (Optional)"
      ],
      "description": "Welcome to \"Mastering Compose Multiplatform Bridging: Android & iOS Development\"!\nIn this course, you will dive deep into the world of Compose Multiplatform (CMP), a powerful framework that allows you to build cross-platform apps with a shared codebase for both Android and iOS. Whether you're a seasoned developer or just starting, this course will help you master the techniques needed to bridge Android and iOS, creating seamless applications that can run smoothly on both platforms.\nYou’ll learn how to:\nUnderstand the core principles of Compose Multiplatform.\nBridge Android and iOS applications effectively.\nCreate shared UIs that work on both platforms.\nBuild platform-specific screens and functionalities for optimal user experience.\nIntegrate native features and Compose Multiplatform components to enhance your app’s performance.\nThis course provides you with everything you need to build modern, efficient, and scalable cross-platform apps. Through practical examples and real-world projects, you will gain the skills and confidence to tackle mobile app development for both Android and iOS.\nBy the end of the course, you will have a strong foundation in CMP bridging, enabling you to deliver cross-platform apps with shared and native components. Whether you're looking to transition to cross-platform development or enhance your existing skills, this course is designed to be both educational and hands-on.\nReady to become a Compose Multiplatform pro? Let’s get started!",
      "target_audience": [
        "Anyone exploring the creation of shared UI, native screens, and integrating both Compose and native screens.",
        "Developers interested in building standalone native screens while leveraging Compose Multiplatform.",
        "Anyone curious about bridging platform-specific features using a shared codebase.",
        "Anyone willing to learn CMP cross-platform bridging concepts for seamless migration.",
        "Developers eager to master Compose Multiplatform from top to bottom."
      ]
    },
    {
      "title": "Building Advanced iOS UI with Xcode and swift 4",
      "url": "https://www.udemy.com/course/advanced-ios-ui/",
      "bio": "It's time to learn how to build beautiful and pixel perfect UI for iOS using swift 4",
      "objectives": [
        "Use iOS UIKit library extensively and comfortably",
        "Comfortable with working with photoshop files from designers",
        "Pick which UI elements to use pre-designed exports and which to build from scratch",
        "Build beautiful and scalable UI with swift in Xcode"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Download and install Xcode",
          "Installing Cocoapods",
          "What we'll be building",
          "Your first Xcode project"
        ],
        "Brief overview of Swift, Git and Github": [
          "Introduction to Swift",
          "Introduction to Swift #2",
          "Variables",
          "Comments",
          "Conditional logic",
          "Arrays",
          "Dictionaries",
          "Loops",
          "Functions",
          "Object oriented programming"
        ],
        "Introduction to git and github": [
          "Introduction to git",
          "What is a version control system",
          "Essential git commands",
          "What is Github"
        ],
        "First App: Robust": [
          "Introduction to Robust",
          "Making the splash screen",
          "Gradient view",
          "Finishing Login Page",
          "Creating Register View Controller",
          "Moving Views up with keyboard",
          "New Custom View and View Shadow",
          "Profile picture and progress bar",
          "Installing MBCircularProgressBar using Cocoapods",
          "Finishing Dashboard View Controller",
          "Adding App Icons"
        ],
        "Second App: Eats": [
          "Setting up our project",
          "OpenViewController and Custom Button",
          "Tab Bar View Controller",
          "Building a Custom top bar",
          "Table View and making the one sided corner radius image",
          "Custom cell and cosmos view part 1",
          "Custom cell and cosmos view part 2",
          "Details View Controller and Scroll View"
        ]
      },
      "requirements": [
        "Be able to find their way around Mac OS",
        "Be able to understand the basic concepts of programming",
        "Knowledge of swift will help you go through the course faster"
      ],
      "description": "I'm sure you've seen very ugly UI in apps and most courses you've taken only go so far in the  UI aspect.\nThe User Interface of your app has a really great effect on how engaging your app is to your users and immensely impact how well you retain them.\nIn this course:\nYou will learn the basics of swift.\nYou will be introduced to git and Github.\nYou will learn how to use iOS UIKit library very comfortably and how to modify UIKit UI elements.\nI will take you through the concepts of iOS designs as i walk you through the mock-ups from the designer.\nBreak every design element down and the thought process behind them.\nWe'll export all the assets and import them into Xcode where you'll use them.\nYou will learn how to build the front-end of three beautiful apps.\nYou'll be provided with two psd files of mockups at the end where i'll ask you to build any and the solution will be in the bonus section.\nEnroll today!\nCan't wait to see you inside the course.",
      "target_audience": [
        "Intermediate iOS developer who wants to know how to build beautiful UI",
        "Beginner iOS developer who knows very little or nothing about UI"
      ]
    },
    {
      "title": "iOS System Design for Self-Taught Developers",
      "url": "https://www.udemy.com/course/ios-system-design-for-self-taught-developers/",
      "bio": "Learn to design scalable and maintainable iOS app systems, even if you're self-taught and new to architecture.",
      "objectives": [
        "Explain what system design means in the context of iOS development and why it matters for scalable apps",
        "Identify and describe key architectural components like application servers, load balancers, caches, and message queues",
        "Design an end-to-end system architecture for a real-time location sharing app",
        "Analyze tradeoffs between different architectural patterns (MVC, MVVM, VIPER, Clean Architecture)",
        "Map backend services like Firebase to practical use cases in iOS system architecture",
        "Implement client-side patterns that support scalability, offline functionality, and real-time updates",
        "Break down a system design interview question and answer it using real-world architecture thinking",
        "Model data flow from user action to backend and back, including networking, queuing, and storage",
        "Describe how to use system design to improve app performance, user experience, and maintainability",
        "Gain confidence discussing systems architecture in interviews, code reviews, and team planning sessions"
      ],
      "course_content": {
        "Introduction": [
          "What is system design?",
          "Interview Questions about system design",
          "Why is system design important even for individual contributors (ICs)?",
          "What Is a Message Queue?",
          "What is a common trade-off made in system design?",
          "What type of database is best suited for structured data in scalable app?",
          "Explain what an application server is."
        ],
        "Link Shortener": [
          "System Design for a link shortener"
        ],
        "Video File Uploader": [
          "Video File Uploader"
        ],
        "Real-Time Location Sharing": [
          "System Design for Real-Time Location Sharing App",
          "Real-Time Location Sharing App Quiz"
        ],
        "Application Servers -- An In-Depth Look": [
          "What is an Application Server?"
        ],
        "What is a Message Queue and why do you use it?": [
          "What is a message queue?"
        ],
        "What are Load Balancers?": [
          "What are Load Balancers?"
        ]
      },
      "requirements": [
        "Learners should have basic knowledge of Swift and iOS app development, including how to build and run apps using Xcode.",
        "You do not need to know backend development, system architecture, or DevOps tools in advance—this course will explain those concepts clearly from the ground up."
      ],
      "description": "I can tell whether you’re ready for a mid-to-senior iOS development role with just one question:\n“What system design would you recommend for our app?”\nLike many developers, when I first started, I only knew what was taught in limited coding tutorials on YouTube and online course marketplaces. The problem? None of those tutorials addressed scalability, traffic spikes, or system resilience—because they’re not designed to. Online course creation is a multi-million dollar business, and like in the medical industry, there’s more profit in treating the symptoms than in offering a cure.\nSo instead of teaching you how to design apps that can scale, most courses endlessly recycle Swift syntax and beginner-level UI patterns—conveniently skipping the one crucial skill that separates junior devs from senior engineers:\nSystem Design—the ability to architect scalable, maintainable apps for real-world, enterprise-level development.\nTo master system design, you need to understand load balancers, application servers, message queues, and how these components work together to form reliable, high-performance systems. Without this knowledge, no number of Swift tutorials will prepare you for a senior role—or for the kind of technical conversations that happen at real companies.\nIf you're self-taught, you've probably been excluded from discussions around architecture, performance, and system resilience. Even tech bootcamps tend to focus on trendy features or interview tricks, not the foundational skills that actually help you grow as a developer.\nThis course changes that.\niOS System Design for Self-Taught Developers is the missing manual for developers who are ready to go beyond the code and build like professionals. Based on over a decade of mobile engineering experience, this course breaks down system design concepts and patterns in a way that's practical, approachable, and grounded in real-world iOS architecture.\nYou’ll learn:\nHow to architect iOS apps for scale, offline usage, and real-time features\nWhen and how to use backend tools like Firebase, caches, queues, and servers\nHow to design systems clearly and confidently in interviews and on the job\nTradeoffs between common architectures (MVC, MVVM, VIPER, and more)\nWhy system design is essential to becoming a senior-level developer\nIn a world of flashy tutorials and shallow content, this course focuses on what really matters:\nUnderstanding the systems that make apps work.\nIf you’re ready to build iOS apps that scale, evolve, and stand up under pressure—this course is for you.",
      "target_audience": [
        "Self-taught iOS developers who know Swift and want to level up beyond tutorials and coding exercises",
        "Bootcamp graduates who feel underprepared in system architecture, scalability, and backend integration",
        "Junior iOS engineers preparing for mid-level or senior interviews that include system design questions",
        "Freelancers and indie developers who want to build more resilient, scalable apps for real-world use",
        "Mobile developers transitioning into architecture roles or full-stack mobile system design",
        "Developers new to backend concepts like load balancing, caching, messaging queues, or application servers",
        "Anyone frustrated by surface-level courses and looking for deeper, practical, career-relevant content",
        "Developers aiming for Big Tech or high-growth startups where system design knowledge is essential for interviews and promotions",
        "iOS engineers working on solo or small teams who need to make architecture decisions without guidance from senior developers",
        "Computer science students or recent grads who understand theory but want practical, real-world system design for mobile apps"
      ]
    },
    {
      "title": "Learn to Design Professional eCommerce App in Flutter",
      "url": "https://www.udemy.com/course/cwt-ecommerce-app-design-course/",
      "bio": "Master the Art of Flutter E-Commerce App Design for Seamless and Professional Mobile Shopping Experiences",
      "objectives": [
        "Full-Stack Flutter Development",
        "Master UI/UX Design in Flutter",
        "Secure User Authentication",
        "Real-Time Firebase Integration",
        "Efficient Local Storage Management",
        "Strategic eCommerce Design",
        "Effective Product Catalog Display",
        "Streamlined Checkout Processes"
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with the basics of Flutter framework will provide a smoother learning experience."
      ],
      "description": "Welcome to our comprehensive Flutter e-commerce app development tutorial series. In this series, you'll master the art of developing a complete flutter e-commerce app with Firebase as the backend. Modern Flutter eCommerce app UI and much more.\n\n\nFLUTTER E-COMMERCE COURSE OVERVIEW\nSection 1: Professional Project Configuration In the first section, we'll guide you through setting up a professional and scalable Flutter app structure. This knowledge is invaluable for any Flutter app development project, ensuring you're well-prepared to tackle any challenge. We'll also establish a polished theme suitable for large-scale Flutter apps and provide essential utilities to streamline your development process.\nSection 2: Login Signup Design Section 2 focuses on designing the login and signup experience for your Flutter e-commerce app. You'll learn to create visually appealing screens for login, signup, password recovery, email verification, and success scenarios, ensuring a seamless user journey.\nSection 3: eCommerce App UI Design In the third section, we'll delve deep into the world of Flutter e-commerce app UI design. You'll acquire the skills to craft a modern and minimalist user interface, covering key screens like the dashboard, shop, categories, sub-categories, brands, search, settings, and user profiles.\nDon't miss out – start watching now, still waiting? Let's jump in and start developing the apps like a pro!",
      "target_audience": [
        "Flutter Enthusiasts",
        "Students and Tech Enthusiasts",
        "Professionals Seeking Career Growth",
        "E-Commerce Entrepreneurs",
        "Developers Exploring Full-Stack Development",
        "Web Developers Transitioning to Mobile"
      ]
    },
    {
      "title": "Complete WatchOS Tasks App in SwiftUI and CoreData",
      "url": "https://www.udemy.com/course/complete-watchos-tasks-app-in-swiftui-and-coredata/",
      "bio": "Build clone of reminders app for Apple watch in SwiftUI",
      "objectives": [
        "WatchOS",
        "SwiftUI",
        "CoreData",
        "iOS Development"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Learning Objectives"
        ],
        "WatchOS Tasks App": [
          "Project Creation",
          "CoreData Setup",
          "Folder List View",
          "Add New Folder View",
          "Tasks List View",
          "Add, Update, Delete Task"
        ]
      },
      "requirements": [
        "Xcode knowledge",
        "Swift knowledge"
      ],
      "description": "SwiftUI has changed the entire dynamics of app development in iOS space. Now developing for watchOS is as easy as dropping reusable SwiftUI views into the app and run them against the correct target.\nIn this course, we are going to work on WatchOS and SwiftUI. With the introduction of SwiftUI, a lot of UI development have been combined and learning has become easy. For example, most of the concepts of SwiftUI that you learn and apply on iOS, iPadOS, MacOS and TVOS are same. WatchOS has different specs as far as the hardware, screensize etc goes so SwiftUI adapts to those changes and provides a look that works of WatchOS but the code you write is pretty much same as SwiftUI for iOS.\nWe will start our journey of WatchOS by building a clone of Reminders app, which is present in your Apple Watch. we will learn to build watchOS app in SwiftUI. You will be recreating tasks or reminders app from scratch in this course using SwiftUI and CoreData and while building this app you will also learn about WatchOS.\n\n\nLearning Objectives\n* Building WatchOS App using SwiftUI\n* CoreData in WatchOS\n* Loading data from CoreData\n* PersistentController for CoreData Initialization\n* Using ManagedObjectContext with Environment\n* Usage of FetchRequest and FetchResults\n* Sorting, Filtering Data in CoreData\n* Navigating between Screens in WatchOS\n* CRUD (Create, Read, Update, Delete) Operations in CoreData\n* Presenting and Dismissing Screens in WatchOS using SwiftUI\n* Reusing Screens for Different Operations based on Context\n* SwiftUI Design in WatchOS\n* Lists in WatchOS\n* View Modifiers",
      "target_audience": [
        "Students who wants to build WatchOS app with SwiftUI"
      ]
    },
    {
      "title": "Beginner Xcode Programming: Reskin a Photo Booth App",
      "url": "https://www.udemy.com/course/xcodeprogramming/",
      "bio": "Learn the complete process of reskinning an iOS Photo Booth app using Xcode, from the first test to final submission.",
      "objectives": [
        "By the end of the course, you will be able to take a source code and edit it in Xcode to reskin it and publish it into the App Store",
        "Learn how to create certificates in the iOS development center",
        "Learn how to create provisioning profiles so you can test your app",
        "Learn how to create an app in the iOS development center and iTunes Connect",
        "Learn how to register your devices to test the app on, create test accounts, and test your first app in Xcode",
        "Learn the basics of Xcode and what you need to change in a source code to reskin it",
        "Learn how to set up a Facebook app ID to allow social sharing",
        "Learn how to set up In App Purchases and ads",
        "Learn how to submit your app to the App Store for review"
      ],
      "course_content": {
        "Welcome!": [
          "Introduction"
        ],
        "Steps for Brand New iOS Developer Accounts": [
          "Creating Certificates",
          "Adding Test Devices and Test Accounts"
        ],
        "Setting Up a New App": [
          "Prepare the App for Testing: App ID, iTunes Connect, and 2 Provisioning Profiles",
          "Testing the App"
        ],
        "Reskin It!": [
          "Change the Images",
          "Change the Theme and Content",
          "In-App Purchases",
          "3rd Party SDKs"
        ],
        "Submit It!": [
          "Submitting an App to the App Store for Review"
        ]
      },
      "requirements": [
        "Mac with Xcode (Xcode can be downloaded for free in the App Store)",
        "iOS Developer account ($99/year through Apple)",
        "iTunes Connect account (free)",
        "Highly recommended: a source code to work with, if not the exact one used in the course"
      ],
      "description": "Like this course, but can't afford it? Try our Bingo course for free.\nThis course will show you exactly what you need to do to reskin a specific source code in Xcode so that you can create your own Photo Booth app for iPhone, iPad, or iPod Touch very quickly and inexpensively and start making money almost immediately.\nYou will see every single edit necessary to launch an app, and in less than 2 hours. This includes the very first steps you take after you get your hands on a source code (learning how to test the app) to editing the app in Xcode, and all the way to submitting the app to the App Store for review. The tutorial uses a REAL source code example and completes every single step necessary to reskin the app from start to finish, and is structured in that way. While this uses a specific code (that you can purchase), the course is still very useful for reskinning any app. It will give you the knowledge necessary to understand documents that come with source codes that you can purchase at very low prices.\nThis is perfect for any beginner that is interested in entering the world of app development, but does not want to spend a ton of money or time creating an app from scratch and hiring developers. Instead, you can focus on monetization through in-app purchases and ad networks, which, by the way, is part of this course. You can literally reskin one source code 100 times using this tutorial to generate large profits incredibly quickly.\nCheck out the source code that we will be using.",
      "target_audience": [
        "Beginners interested in creating an iOS app",
        "\"Do It Yourself\"-types interested in low cost and fast app development",
        "Little to no experience in App Development"
      ]
    },
    {
      "title": "Mastering Supabase: The Ultimate Guide for Flutter Developer",
      "url": "https://www.udemy.com/course/mastering-supabase-the-ultimate-guide-for-flutter-developer/",
      "bio": "Authentication, CRUD , Storage and RLS Mastering Supabase",
      "objectives": [
        "Understand What Supabase Is",
        "Learn How to Integrate Supabase APIs into Flutter Apps",
        "Email Password Authentication",
        "3rd Party Authentication",
        "Perform Database CRUD Operations",
        "Listen Realtime Updates",
        "File Storage",
        "RLS and Policies"
      ],
      "course_content": {
        "Introduction": [
          "What is Supabase?",
          "Create new project"
        ],
        "Authentication": [
          "Introducing to Authentication",
          "Supabase Auth Update",
          "Google Authentication",
          "Github Authentication",
          "Email and Password Authentication"
        ],
        "Database": [
          "How to create table in supabase",
          "SQL in Supabase",
          "How to insert data in Supabase",
          "How to fetch data in Supabase",
          "How to delete data in Supabase",
          "How to update data in Supabase",
          "Supabase real time listen data",
          "Filters in Supabase"
        ],
        "RLS and Policies": [
          "RLS and Policies"
        ],
        "Storage": [
          "Introduction to Storage",
          "Upload and Download File"
        ]
      },
      "requirements": [
        "Must have knowledge of Flutter and Dart",
        "Must have Android Studio or Visual Studio",
        "Eager to learn new things"
      ],
      "description": "Mastering Supabase: The Ultimate Guide for Flutter Developers\n\n\nCourse Overview:\n\n\nAre you ready to supercharge your Flutter apps with a powerful backend? \"Mastering Supabase: The Ultimate Guide for Flutter Developers\" is here to help! Whether you're just starting out or already have some coding chops, this course will show you how to use Supabase, an awesome open-source backend, to take your apps to the next level.\n\n\nWhat You'll learn:\n\n\n1. Getting Started with Supabase:\n- How to set up a brand new Supabase project.\n- Connecting your Flutter app to Supabase.\n\n\n2. User Authentication:\n- Email and password authentication.\n- Adding Google Sign-In for easy access.\n- GitHub Authorization\n\n\n3. CRUD Operations:\n- Adding, viewing, updating, and deleting data in your database.\n- Making your app super interactive and user-friendly.\n4. RLS and Policies:\n- Learn about Row Level Security\n- How to use them to make app secure\n5. File Storage:\n- Learn about Supabase storage\n- Store and download url\n\n\nWhy This Course Rocks:\n\n\n- Easy to Understand: No complicated jargon—just clear, simple explanations.\n- Hands-On Practice: Learn by doing with fun exercises.\n- Step-by-Step: Start with the basics and build up to the cool stuff.\n- Real-Life Project: Use what you learn to build features you'll actually use in your apps.\n\n\nWho Should Join:\n\n\n- Flutter developers at any level who want to add awesome backend features.\n- Beginners who are new to Supabase and want to learn from scratch.\n- Anyone looking to make their apps more powerful and secure.\n\n\nBy the end of this course, you’ll be a pro at using Supabase with Flutter, ready to create amazing apps with real-time features and top-notch security. Don’t wait—enroll now and start building the app of your dreams with Supabase and Flutter!",
      "target_audience": [
        "Begineer Flutter developers curious about Supabase"
      ]
    },
    {
      "title": "UIKit and SwiftUI Integration Essentials: 1 Hour Course",
      "url": "https://www.udemy.com/course/uikit-and-swiftui-integration-essentials-1-hour-course/",
      "bio": "Mastering the Art of Combining UIKit and SwiftUI for Seamless iOS App Development in Just One Hour",
      "objectives": [
        "UIKit View in SwiftUI: Students will learn how to embed a UIKit view in a SwiftUI view using the UIViewRepresentable protocol.",
        "Students will learn how to embed a SwiftUI view in a UIKit view using the UIHostingController.",
        "Students will learn how to pass data and events between SwiftUI and UIKit views using various techniques, such as delegates and bindings.",
        "Students will learn best practices for integrating UIKit and SwiftUI frameworks, such as keeping the code clean and maintainable."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "UIKit with SwiftUI": [
          "Navigating to SwiftUI View from UIKit Application",
          "Embed an Existing SwiftUI View into UIKit UIView",
          "Passing Values from SwiftUI View to a UIKit View",
          "Loading a UIKit View into a SwiftUI Application",
          "How to Implement Delegate Methods of UIKit View in a SwiftUI App",
          "How to Load SwiftUI View as a Cell for UIKit UITableView?",
          "How to Show Xcode Preview of UIViewController?"
        ],
        "Conclusion": [
          "Next Steps",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "Experience with UIKit is required",
        "Experience with SwiftUI is required"
      ],
      "description": "Welcome to \"UIKit and SwiftUI Integration Essentials\", the 1-hour course that will teach you how to seamlessly integrate UIKit and SwiftUI in your iOS apps.\nIn this course, you'll learn how to leverage the power of both UIKit and SwiftUI to create dynamic and responsive user interfaces. You'll begin by learning the basics of UIKit and SwiftUI, including how to create simple user interfaces using these frameworks.\nNext, you'll dive deeper into the integration of these two frameworks, learning how to use the best of both worlds to create custom, dynamic user interfaces that take advantage of the unique features of both UIKit and SwiftUI.\nBy the end of this course, you'll have a solid understanding of how to integrate these two powerful frameworks to create seamless, intuitive user interfaces that your users will love.\nWhether you're a seasoned iOS developer or just starting out, this course will give you the essential knowledge and skills you need to build amazing apps with UIKit and SwiftUI. So, what are you waiting for? Let's get started!\n\n\nWho is this course for:\nThis course is perfect for iOS app developers who are looking to enhance their skills by learning how to integrate both UIKit and SwiftUI into their projects. It is also suitable for anyone who is interested in iOS app development and has some basic knowledge of Swift and Xcode. Whether you are a beginner or an experienced developer, this course will provide you with valuable insights and techniques to create dynamic and responsive user interfaces using UIKit and SwiftUI.\n\n\nWhat will students learn in this course:\n\n\nThe basics of UIKit and SwiftUI frameworks\nHow to create simple user interfaces using both frameworks\nTechniques to integrate UIKit and SwiftUI frameworks for seamless user interface design\nHow to create custom and dynamic user interfaces using both frameworks\nBest practices for combining UIKit and SwiftUI in iOS app development\nTips and tricks for optimizing user experience using UIKit and SwiftUI frameworks",
      "target_audience": [
        "The course is for iOS app developers who have some familiarity with either UIKit or SwiftUI.",
        "The course is designed to teach students how to integrate both frameworks in their iOS application development projects.",
        "Students will learn how to embed a UIKit view in a SwiftUI view and vice versa.",
        "Students will also learn how to communicate between SwiftUI and UIKit views using",
        "The course will cover best practices for integrating UIKit and SwiftUI frameworks, such as keeping the code clean and maintainable."
      ]
    },
    {
      "title": "MIT App Inventor 2 Course for Beginners | App without Coding",
      "url": "https://www.udemy.com/course/mitappinventorcourse/",
      "bio": "Build Your Own Android Apps Without Coding | Beginner to Advanced | The Coding Bus",
      "objectives": [
        "Learn a valuable skill: MIT App Inventor course can teach you how to create functional, user-friendly apps, opening new career opportunities.",
        "Develop your creativity: A MIT App Inventor course allows you to experiment with different app ideas, turning your creativity into reality.",
        "Access to resources: A MIT App Inventor course provides access to a large community of users who share their knowledge and resources.",
        "Hands-on learning: A MIT App Inventor course offers practical learning that allows you to apply what you learn to real-world apps.",
        "Flexibility and convenience: A MIT App Inventor course can be taken online, providing a cost-effective way to learn and fit into any schedule."
      ],
      "course_content": {},
      "requirements": [
        "There are typically no specific requirements or prerequisites for taking a MIT App Inventor course. However, some basic computer literacy and familiarity with using a smartphone or tablet may be helpful. It is also recommended that students have an interest in app development and a willingness to learn new skills. Some courses may require access to a computer or mobile device with an internet connection, as well as the MIT App Inventor software. It is always a good idea to review the course description and requirements before enrolling to ensure that you meet any specific prerequisites."
      ],
      "description": "Apps or pursuing a career in app development, this course is a great starting point. You'll learn everything you need to know to create your own Android apps from scratch.\nWhat Do You Get In This Course?\nLearn app development from an expert: Your course is taught by Sourabh Dubey, an experienced app developer with a passion for teaching. He'll guide you through each lesson and project, offering helpful tips and advice along the way.\nDevelop real-world skills: By the end of the course, you'll have created several functional Android apps from scratch, giving you hands-on experience in UI design, coding logic, data storage, and more.\nBuild your portfolio: Your completed projects can be added to your portfolio to showcase your app development skills to potential employers or clients.\nJoin a community: You'll have the opportunity to connect with other learners in the course and join The Coding Bus community, where you can ask questions, share your projects, and get feedback from others.\nFlexible learning: Your course is available online, so you can learn at your own pace and on your own schedule. Plus, you can revisit lessons and projects as many times as you need to reinforce your learning.\nAffordable pricing: Our course is priced affordably so that anyone who wants to learn app development can do so without breaking the bank.\nNo prior experience necessary: Even if you have no programming experience, our course is designed to be accessible to beginners, with step-by-step lessons and hands-on projects to help you build your skills and confidence.",
      "target_audience": [
        "A MIT App Inventor course is suitable for a wide range of learners, including: Students who are interested in learning how to create mobile apps. Professionals who want to develop skills in app development to enhance their career. Entrepreneurs who want to create and launch their own apps. Educators who want to incorporate app development into their teaching curriculum. Anyone who has a passion for technology and wants to learn a new skill. Whether you are a beginner or have some experience in app development, a MIT App Inventor course can help you learn how to create functional, user-friendly apps that can be used on a variety of devices."
      ]
    },
    {
      "title": "Swift Value Types. Structs Vs Classes",
      "url": "https://www.udemy.com/course/swiftui-value-vs-reference/",
      "bio": "Created by iOSBFree. Understanding the behaviour of value and reference types in iOS written in Swift. For beginners.",
      "objectives": [],
      "course_content": {
        "Welcome": [
          "This Course",
          "Download Sample Code",
          "Free Online Courses",
          "Free Stuff On iOSBFree.com"
        ],
        "Value Types": [
          "Introducing Value Types",
          "Value Types As Parameters",
          "Mutating Functions"
        ],
        "Reference Types": [
          "Introducing Reference Types",
          "Reference Types As Parameters",
          "No Mutating Functions"
        ]
      },
      "requirements": [
        "Basic understanding of iOS"
      ],
      "description": "Learn From One Of The 1st iOS Developers In The World\nOur instructor Matt, has 13 years of experience in iOS and created the world's first iPhone, iPad and Apple Watch apps. Now, he dedicates his time to recording courses for iOSBFree (pronounced \"iOS Be Free\").\n\n\nIn This Course\n1. We discuss value & reference types and how they exhibit different behaviour. Reference types are instances of classes (objects) and value types refer to basic data types such as an Int, Double, String or a Struct (copied values stored in memory).\n2. We write code in an Xcode Playground to test the behaviour of struct and class singletons. We learn the differences in memory management and explain some architectural principles we might be breaking.\n\n\nLearning Objectives\n· What is a value type\n· What is a reference type\n· The behaviour of a struct\n· The behaviour of a class\n\n\nSample Code\nSample Code Is Always Included and attached to each video. You can download the same project used in each episode of the course.\n\n\n\nThis Course Is Free\nThis course is free. We aim to publish as many short courses as we can to help new iOS Developers apply for jobs in iOS and enter a high paying profession. We want those developers to write great apps that are robust, work correctly, and are maintainable. By supplying this information for free we hope we can reach as many people studying in the pandemic as we can.\n\n\nOur Service (iOSBFree Ltd)\nWe are a unique career-building service sharing over 13 years of successful experience shaping the iOS industry into what it is today. Our unique information, point-of-view and service can be utilised to build highly successful and profitable careers in iOS.\n\n\nA Career In iOS\niOS developers are the most sought after developers in the world! They can earn over £100,000 per year, work remotely and B in high demand for their skills! Subscribe to our YouTube channel and let us reveal all our insider secrets completely for free.\n\n\nWhat We Teach\nCareer building, CV writing, interviewing skills, industry secrets, industry stories, real-life experience, iOS fundamentals, ARC memory management, Swift, architecture and best engineering practices.\nPlease show your support by enrolling in our course!\n\n\n\nWhat Is SwiftUI?\nSwiftUI is a newly released UI Framework introduced to iOS. It aims to solve a lot of problems with apps, such as running on all platforms, reducing bugs, improving stability and bringing more developers to iOS - because it's easier to write apps!\nLearning SwiftUI is an absolute must for any iOS developer looking to develop a career over the next 5 years.\n\n\nThe Instructor\nCheck out our Instructor profile (just briefly) and glance over Matt's incredible unparalleled experience. After 13 years of specialising in iOS, he created a company helping people build their own successful and profitable careers in iOS too.\nOur unique information cannot be found anywhere else on any platform. We not only teach code, syntax and architecture but we provide tried & tested strategies to boost your career forwards and build a better life!\n\n\n\nWant To Learn More Topics?\nPlease send us an email with the topic you would like to learn in a swift playground and we will happily record, edit and publish it for you. Absolutely for free. Simply email community@iOSBFree.com with the subject heading, \"Topic I Want To Learn\".\n\n\nFirst In The World\nNot only is our instructor one of the first iOS developers in the world, but our service is also the first of its kind in the world!\niOSBFree is a truly unique one-of-a-kind service. There is no single other service offering Matt’s level of experience in any other coding course, software engineering tutorial, or career-building service anywhere in the world.\n\n\nMore From iOSBFree\n· Download Our FREE CV Template\n· Download Our Career BOOSTER Pack\n· Enrol In FREE Online Courses (iOS & Swift)\n· Read Our Blog\n\n\n\nMuch love.\nThe iOSBFree team.\nBuild a profitable iOS career with iOSBFree!",
      "target_audience": [
        "Any one who wants to learn iOS"
      ]
    },
    {
      "title": "Introduction to Amazon Honeycode",
      "url": "https://www.udemy.com/course/amazon-honeycode/",
      "bio": "Learn how to build an app without coding using Amazon Honeycode",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Honeycode and its uses",
          "Examples of Honeycode apps"
        ],
        "Understanding the Concept": [
          "Key Components",
          "Getting Started with Honeycode",
          "Types of Workbooks"
        ],
        "Building the app": [
          "App Demo",
          "Creating the tables",
          "Creating the Vacation Request Screen",
          "Creating the Pending Requests Screen",
          "Creating the History Screen",
          "Finishing up our app",
          "Sharing with teams"
        ],
        "Conclusion": [
          "Conclusion"
        ]
      },
      "requirements": [
        "There are no course requirements"
      ],
      "description": "Reading and managing information is a very messy process whether you do it through emails or spreadsheets. Sending and tracing emails back and forth or trying to read an unreadable spreadsheet. It doesn't matter, they both are really tiring. An app that can make all that messy information look nice is really what you need.\n\n\nThat is where Amazon's new service comes in. It allows you to make your own app that displays information in a beautiful way with little to no cost. Without Coding. And that service is called Amazon HoneyCode.  We will be using the beta version in this course.\n\n\nWhether you are a financial analyst, a realtor, a teacher, a doctor, or just a kid, you can easily learn to use Honeycode through this course. We will go over the basics of honeycode and we will make an app that will teach you the core of Honeycode.\n\n\nBy the end of this course, you will know what honeycode is, you will be able to make an app, and you will have knowledge that you can use to make an app that is personalized for you or your team.",
      "target_audience": [
        "Anyone wanting to develop business apps without coding"
      ]
    },
    {
      "title": "A Professional APP Development Course for iPhone and Android",
      "url": "https://www.udemy.com/course/a-professional-app-development-course-for-iphone-and-android/",
      "bio": "Learn how to develop apps for Wordpress sites, here you will be able to build apps for website, blog,magazine and store",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Internet Connection",
        "Personal Computer or Laptop",
        "Smart Phone for Testing Live Preview for the App after Finish",
        "A Good Knowledge and Experience with WordPress and Woo-commerce",
        "Recommended Course for WordPress or Equivalent: https://www.udemy.com/learn-complete-wordpress-for-building-a-professional-sites/?couponCode=SUMMER-DISCOUNT",
        "Recommended Course for WordPress Woo-commerce or Equivalent: https://www.udemy.com/learn-how-to-build-an-e-commerce-website-by-wordpress/?couponCode=WOOCOMMERCE-DISCOUNT"
      ],
      "description": "Every blogger, website owner, web site manager, or e-shop owner has a question in their minds about how to create a mobile phone application and a different version that supports the iPhone and works on the Apple system and another version running on Android devices for their sites built primarily through Wordpress. Many bloggers, web entrepreneurs and webmasters know how to build professional web sites using Wordpress without having to write code for the Wordpress environment from very many add-ons and options.\nSo, can we really build professional mobile applications for Wordpress sites without knowing the code? The answer is yes. There are a lot of add-ons that can build applications for Smartphones for Wordpress sites and here we are in this session we will explain everything in full detail and comprehensive. How to turn websites, blogs, e-journals and e-shops created with WordPress into smart iPhone and Android apps with great features and an explanation of how to upload the application online as well as how to take advantage of applications to bring ads and traffic on your site and how you can profit from the applications you create. All this and more will be discussed in this session and God is the guardian of all.\nWordApp is a WordPress mobile tool that converts your blog/website/magazine/store to a mobile app & mobile website.\nIt helps you to create a native mobile app version of your WordPress site for both iOS and Android which means you can actually take these apps and upload them to the respective app store, whereupon your visitors can download your app straight to their smartphone.\nFeatures of WordApp\n\nLive preview\nMore Customization\nWork for Both iOS and Android\nNo programming knowledge required\nMonetize your app with AdMob advertising",
      "target_audience": [
        "Entrepreneurs",
        "Anybody Who Interest With Mobile Apps for Web",
        "Blog and websites Owners which had been build by WordPress CMS",
        "Web Designer and Web Developer Which Depends On WordPress For Building Their Sites",
        "General Developers Whom Develop Magazine and Newspaper online and Custom websites and Stores Which used By WordPress"
      ]
    },
    {
      "title": "Mobile Blockchain Developer Bootcamp With Solidity & Flutter",
      "url": "https://www.udemy.com/course/mobile-blockchain-developer-bootcamp-with-solidity-flutter/",
      "bio": "Create Store to buy and sell blockchain products and connected flutter app with wallet connect",
      "objectives": [
        "write solidity smart contracts",
        "web3 functions",
        "connect your flutter ui with blockchain networks",
        "connect your application with wallets"
      ],
      "course_content": {
        "Course Roadmap and Projects": [
          "What Will Build",
          "Course RoudMap"
        ],
        "Blockchain & Smart Contract": [
          "blockchain and smart contract intro",
          "First smart contract & Variables",
          "Mapping and Array",
          "functions",
          "address & msg & required."
        ],
        "Flutter Fundamentals": [
          "First Flutter Widgets",
          "Row & Icons & Padding",
          "Card & button & Navigator & send data Between Screens"
        ],
        "1-smart contract and Blockchain framwork": [
          "Start create smart contract - product struct and event with Solidity",
          "Create Product Function and test it with Solidity",
          "Create Buy Product Function with Solidity",
          "Test the full functions at Smart Contract"
        ],
        "Blockchain and Flutter SetUp": [
          "Set up Hardhat for blockchain enviroments",
          "Create Flutter Project with integrated hardhat6",
          "Create Custom Button Widget",
          "Create Text Field Inputs Widget",
          "Create Product Card Widget",
          "Create Heading Card Widget",
          "Create splash Page",
          "Create Category list Ui",
          "Create grid view product and add product button ui",
          "Fix The Grid View Item and Navigate to Product Page Details",
          "Create Text inputs for Create product page",
          "Create Category Drop Dwon list",
          "Create image and categoy section at product details",
          "use randowm avatar package and create seller card",
          "price and buy button at product details"
        ],
        "Web3 library & UI": [
          "deploy smart contract to test net",
          "Create Provider and add Network data",
          "Set up network Connection",
          "Get ABi and Contract Address",
          "Fetch Store Name and show at UI",
          "Create Custom Loader Indecator",
          "Fetch Products Count",
          "fetch all products Data",
          "Save products at product Model",
          "Show Product data from blockchain at UI",
          "Show Single Product data",
          "Create profile Account Ui"
        ],
        "Wallet Connection & IPFS": [
          "Connect Wallet Function",
          "Get user avvount date from wallet",
          "Create Get balcnce function and show balcne at user card",
          "Create Add product function",
          "Create Cridentials from wallet provider",
          "Pick Product image from mobile",
          "Save Image to IPFS",
          "Connect and send add product with wallet connect",
          "Hide buy button to owners and fix price ui",
          "Create Product Events",
          "Create Buy product function and fiter all product can buy it",
          "Show Each User Product That Owned.",
          "Craete Fetch Products by Category Function",
          "Show Ui for products by category"
        ]
      },
      "requirements": [
        "basics of flutter amd blockchain"
      ],
      "description": "Welcome to our comprehensive course on Web3 and Blockchain with Flutter mobile app development! In this workshop, we have designed a hands-on learning experience that will equip you with the knowledge and skills needed to build and deploy decentralized applications (dApps) using the power of blockchain technology.\nThroughout this course, you will embark on an exciting journey to understand the fundamental concepts of Web3 and blockchain technology. We will start by exploring the basics, such as the principles behind blockchain, its underlying architecture, and how it enables decentralization and immutability. You will gain insights into different blockchain platforms and their unique features, focusing on Ethereum as the leading smart contract platform.\nOnce you have grasped the fundamentals, we will dive into the practical aspects of developing dApps using Flutter, a powerful and popular mobile app development framework. With Flutter, you will harness the capability to create cross-platform applications that run seamlessly on iOS and Android devices. We will guide you through the process of setting up your development environment and introduce you to Flutter's widgets and UI components.\nAs the course progresses, we will integrate your Flutter app with a blockchain network, allowing you to create a shop where users can create and showcase their products on the blockchain. You will learn how to leverage smart contracts to store product information securely and transparently. Additionally, we will implement a wallet functionality, enabling users to connect their digital wallets and make purchases using cryptocurrency.\nBy the end of this workshop, you will have gained a comprehensive understanding of Web3 and blockchain concepts, as well as practical experience in developing dApps using Flutter. You will be equipped with the skills to create decentralized applications that leverage the power of blockchain technology and provide users with secure and transparent interactions.\nJoin us on this exciting journey and unlock the potential of Web3 and blockchain with Flutter mobile app development!",
      "target_audience": [
        "any one need to work with blockchain with mobile app"
      ]
    },
    {
      "title": "How to Outsource your iPhone App Development the Proper Way",
      "url": "https://www.udemy.com/course/how-to-make-an-iphone-app-through-outsourcing/",
      "bio": "Have you heard all the horror stories from outsourcing? Here are the EXACT steps to do it right - save TIME and MONEY!",
      "objectives": [
        "Set up your Apple Developer Account in the right way",
        "How to save significant time and money on the development process",
        "How to come up with a proper pricing model",
        "How to thoroughly test your app",
        "How to market your app properly",
        "Developing your app business"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "How Much Does it Cost to Develop an App?",
          "Getting Started",
          "Hardware",
          "XCode",
          "iTunes Connect"
        ],
        "Development Process": [
          "Mockups",
          "Design",
          "Testing Process",
          "Finding Testers",
          "Timeline",
          "Resources"
        ],
        "Making Money from Apps": [
          "Pricing Models",
          "Advertising in your App",
          "Advertising Resources"
        ],
        "Submitting your App": [
          "Pricing Your App",
          "App Pricing and Country Selections",
          "App Category and Content Ratings",
          "App Description",
          "Contact Information",
          "Naming your App",
          "Keywords",
          "Screenshots",
          "Keyword / SEO Resources"
        ],
        "Tracking your App Performance": [
          "Reports",
          "Bugs",
          "Tracking Resources"
        ],
        "Marketing": [
          "Launch Strategies",
          "Marketing",
          "Promotion",
          "Localization",
          "Submit to Review Sites",
          "Promo Video",
          "Marketing Resources"
        ],
        "The Next Steps": [
          "Analytics",
          "Getting Feedback from Your Users",
          "When to Release Updates",
          "Building Your App Business",
          "Analytics and Feedback Resources"
        ]
      },
      "requirements": [
        "An interest in making money from iPhone apps!"
      ],
      "description": "In this Outsource iPhone Development course, you will learn all the tips and tricks of developing your own iPhone app, without having to do any programming yourself. This way you can focus on the creativity and big picture work!\nThis Outsource iPhone App Development course will teach you all the ins and outs of the business, along with dos, don'ts and pitfalls you should watch for.\nIt also includes a comprehensive list of 3rd party resources that can take your app to the next level, while making life so much simpler for you.\nEven if you are a current developer with app experience, chances are you will learn a new thing or two by taking this course.\n</p>",
      "target_audience": [
        "New and experienced app developers",
        "Those wanting to learn tips and tricks that other pro developers use"
      ]
    },
    {
      "title": "DeepSeek AI Agents for Flutter: Create Personal Assistants",
      "url": "https://www.udemy.com/course/deepseek-ai-flutter-build-custom-chatbots-from-scratch/",
      "bio": "Build smart Chatbots & AI agents with advanced reasoning, memory using DeepSeek's breakthrough technology",
      "objectives": [
        "How to integrate DeepSeek AI models into Flutter apps to build custom chatbots, assistants & AI agents",
        "Build real-world projects like a Medical Assistant Bot, Meal Planner Bot, and Career Advisor Bot",
        "Integrate AI chatbots into new or existing Flutter applications easily",
        "Set up the Flutter development environment on Windows and Mac from scratch",
        "Create professional Chatbot UIs in Flutter",
        "Add speech recognition (voice input) and text-to-speech features to Flutter apps",
        "Display beautiful Lottie animations during chatbot interactions and loading states",
        "Customize chatbot behavior using system messages in DeepSeek",
        "Gain confidence in working with AI, APIs, and conversational app development — even with no prior experience!"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is DeepSeek",
          "What is Flutter"
        ],
        "Flutter Setup on macOS: Build Android & iOS Apps": [
          "Installing the Flutter SDK: Step-by-Step Guide",
          "Android Studio Installation Guide for Flutter Developers",
          "Setting Up Xcode for Building iOS Apps with Flutter",
          "Flutter Project Setup: Running Your App on the iOS Simulator",
          "Setting Up the Android Emulator to Run Flutter Projects"
        ],
        "Flutter Setup on Windows": [
          "Installing Flutter SDK on Windows: Step-by-Step Guide",
          "Setting Up Android Studio for Flutter on Windows",
          "Setting Up an Android Emulator (AVD) for Flutter Apps"
        ],
        "Build Your First Chatbot in Flutter": [
          "Creating a New Flutter Project and Building a Chatbot UI",
          "Getting Started with DeepSeek",
          "Introduction to APIs: How They Work and Why We Use Them",
          "Components of an API: Key Parts Explained for Beginners",
          "Connecting Flutter Apps to DeepSeek: Making Your First API Call",
          "Getting Actual Answers from API: Handling JSON Responses in Flutter",
          "Displaying DeepSeek Responses on the Screen in Flutter",
          "Adjusting Chatbot GUI and Implementing UTF Encoding in Flutter",
          "Using the Reasoner Model of DeepSeek for Advanced AI Responses"
        ],
        "Build Professional ChatBot GUI": [
          "Flutter: Designing a Bottom Bar to Type and Send Queries",
          "Adding DashChat Library and Displaying Messages in Flutter",
          "Displaying DeepSeek Response in DashChat for Flutter",
          "Introduction to DeepSeek Chat History Feature in Flutter",
          "Building Chat History with DeepSeek in Flutter"
        ],
        "Service Classes and Parameters of DeepSeek": [
          "Flutter: Creating a Service Class for Handling Network Calls",
          "DeepDive into DeepSeek API Parameters for Flutter Integration"
        ],
        "Text-to-Speech: Enhancing Chatbots with Voice in Flutter": [
          "How to Add Text-to-Speech (TTS) Functionality in Flutter",
          "Flutter: Controlling Text-to-Speech (TTS) Functionality",
          "Flutter: Customizing Languages and Voices for Chatbots"
        ],
        "Speech-to-Text: Passing Voice Commands to Chatbots in Flutter": [
          "Adding Speech-to-Text Library in Flutter: Voice Recognition Setup",
          "Performing Speech-to-Text in Flutter: Voice Recognition in Action",
          "Passing Recognized Words to DeepSeek and Getting Responses in Flutter"
        ],
        "Build Medical Assistant Chatbots in Flutter - System Messages for DeepSeek": [
          "Intro to System Messages in DeepSeek: Flutter Example",
          "Personalizing System Messages in a Medical Advisor Chatbot for Flutter",
          "Creating a User Interface for a Medical Advisor Chatbot in Flutter",
          "Designing Smart Suggestion Tiles for a Medical Chatbot in Flutter",
          "Change App Color Scheme in Flutter",
          "Markdown Formatting in Flutter"
        ],
        "Animations in Flutter & AI Image Generation": [
          "Lottie Animations: Make Chatbots Exciting In Flutter",
          "Generate PNG Images for Flutter Apps with AI"
        ]
      },
      "requirements": [
        "No prior Flutter or AI experience needed — this course is beginner-friendly!",
        "Curiosity and passion for building exciting mobile apps!"
      ],
      "description": "Build the Future: AI Agents That Actually Think, Plan & Execute Tasks\nThe AI world has shifted from simple chatbots to intelligent agents that can reason, plan, and complete complex tasks autonomously. DeepSeek has taken the world by storm with its breakthrough reasoning capabilities A Deep-Dive Into DeepSeek: The AI That Has Taken the World by Storm – The Science Survey, and now it's your turn to build the next generation of AI-powered apps!\nWhat Are AI Agents? Unlike basic chatbots, AI agents can:\nAnalyze problems and break them into steps\nMake decisions based on context and reasoning\nExecute multi-step workflows independently\nLearn and adapt from user interactions\nHandle complex real-world tasks like a human assistant\nWhat You'll Build:\n1. Intelligent Health Assistant Agent\nAnalyzes symptoms and medical history\nCreates personalized health action plans\nReasons through complex health scenarios\n2. Smart Career Development Agent\nAnalyzes your skills and career goals\nCreates step-by-step career roadmaps\nBuilds tailored resumes for specific jobs\nProvides interview preparation strategies\n3. Personal Finance Planning Agent\nAnalyzes spending patterns and financial goals\nCreates personalized budget and investment plans\nTracks progress and adjusts strategies\nProvides real-time financial advice\nAdvanced Agent Features:\nMulti-step reasoning with DeepSeek's advanced capabilities\nMemory systems that learn from user interactions\nTask planning and execution workflows\nContext-aware decision making\nVoice-activated commands with speech recognition\nProactive suggestions and notifications\nSecure offline processing for privacy\nWhy This Course is Essential:\nCutting-Edge Technology - AI agents are the fastest advancing technology in 2025 Gartner Hype Cycle Identifies Top AI Innovations in 2025\nFuture-Proof Skills - Build apps that compete with industry leaders\nReal Business Value - Create AI agents people will pay for\nComplete Framework - Reusable patterns for any agent type\nNo API Limits - DeepSeek's cost-effective approach saves money\n\n\nTechnologies You'll Master:\nDeepSeek R1 - Advanced reasoning and planning\nFlutter Agent Architecture - Scalable AI agent patterns\nState Management - Complex agent workflows\nMemory Systems - Persistent learning capabilities\nMulti-modal Integration - Voice, text, and visual inputs\nPerformance Optimization - Fast, responsive AI experiences\nMarket Opportunity: By 2025, over 75% of mobile interactions will be AI-powered Top AI Trends in Mobile Apps for 2025 : What Businesses Need to Know, and AI agent apps are leading this transformation. Companies are investing billions in agent technology - this is your chance to get ahead of the curve.\nPerfect For:\nFlutter developers ready for the AI agent revolution\nEntrepreneurs building next-gen AI products\nMobile developers wanting cutting-edge skills\nAnyone excited about autonomous AI technology\nCourse Outcomes: By completion, you'll have built 3 production-ready AI agent apps plus the knowledge to create any type of intelligent agent. Whether you're building for clients, starting a business, or joining an AI company - you'll have the skills everyone wants.\nLimited Time: Get ahead of the AI agent boom!\nEnroll now and build the autonomous apps that will define 2025!",
      "target_audience": [
        "Beginners who want to start building AI-powered mobile applications — no prior experience needed!",
        "Entrepreneurs and startup founders who want to create smart assistant apps for their businesses",
        "Hobbyists who love working with Flutter and want to add next-gen AI capabilities to their apps.",
        "Flutter developers who want to integrate AI and chatbot features into their apps.",
        "Students and professionals interested in building practical AI projects for their portfolio"
      ]
    },
    {
      "title": "React Native From The Ground Up",
      "url": "https://www.udemy.com/course/react-native-from-the-ground-up/",
      "bio": "Master Mobile Development On Both Android And iOS",
      "objectives": [
        "Build Mobile Apps For Android And iOS Using React Native",
        "Learn Complex Like Features Context and Reducers to Manage State",
        "Integrate React Native With Firebase Real Time Database To Manage Data",
        "Discover How To Keep Users Logged Into You App Using Firebase Auth",
        "Learn How To Style React Native Apps That Look Polished and Professional",
        "Find Out How To Incorporate Animation Using React Native Reanimated"
      ],
      "course_content": {
        "Introduction": [
          "Course Overview",
          "Meet Your Instructor",
          "Installation Overview",
          "Windows React Native Setup",
          "MacOS React Native Setup"
        ],
        "Getting Started": [
          "Building A Registration Form",
          "Extending The Registration Form & Adding Styles",
          "Creating Our First Component",
          "Managing Form Input",
          "Styling The Registration Form - Based On Design"
        ],
        "Dynamic Navigation": [
          "Navigation - The Basics",
          "Adding Screen To Navigation App",
          "Navigation Params & Routes",
          "Extending & Cleaning Home Screen",
          "Growing The Store",
          "Creating List Items Of Colored Buttons",
          "Deleting Colors & Using State Pt #1",
          "Deleting Colors & Using State Pt #2",
          "Props Challenge",
          "Adding A Modal Screen",
          "Adding New Colors Pt #1",
          "Adding New Colors Pt #2",
          "Adding The Button - Final Part",
          "Editing Colored Buttons Pt #1",
          "Editing Colored Buttons Pt #2",
          "Reducers",
          "The Drawer Navigator Pt #1",
          "The Drawer Navigator Pt #2",
          "Custom Side Drawer Pt #1",
          "Custom Side Drawer Pt #2",
          "Async Storage & Persistence Pt #1",
          "Async Storage & Persistence Pt #2",
          "Adding Images",
          "Adding Bottom Tabs",
          "Exploring Bottom Tab Features"
        ],
        "Building A Social App": [
          "Overview & Initialisation",
          "Using Bottom Tabs",
          "Bottom Nav Panel",
          "Action Button",
          "Header Component",
          "Name & Tagline",
          "Followers & Following",
          "Friends & Followers Code Optimisation",
          "Button Group",
          "Media Album - Static",
          "React Context - Social Provider",
          "Contextual Button Setup",
          "Camera Overlay Part #1",
          "Camerra Overlay Part #2",
          "Selecting Images From Device",
          "Adding Images To Album",
          "Using The Camera - Taking Pictures",
          "Uploading Videos From Device",
          "Adding Duration Timing To Videos",
          "Generating Video Thumbnails",
          "Formatting Duration Timing",
          "Handling Device Permissions",
          "Taking Videos",
          "Image Enlarge Overlay Setup",
          "Adding Image To Overlay",
          "Image Gesture Handling",
          "Adding Video Overlay",
          "Adding a Video Player",
          "Creating The Profile screen",
          "Profile Screen Dynamic Fields",
          "Using Ref & ForwardRef",
          "Adding Gender Dynamic Field To Profile",
          "Asset Button & Profile Picture"
        ],
        "Authentication & Authorization": [
          "Auth Setup",
          "Auth Contexts",
          "Auth Putting It All Together",
          "Auth Final Parts"
        ],
        "Real Time Database - Firebase": [
          "Firebase Overview - Getting Started",
          "Setup - List Buddy App",
          "List Context",
          "Firebase Project Setup",
          "Adding Data To Firebase",
          "Firebase Callbacks",
          "Removing List Items",
          "Delete Complete",
          "ListItems Code Clean Up",
          "Toggle Completed Items"
        ],
        "Firebase Authentication": [
          "Keeping State Clean",
          "Auth Setup On Firebase",
          "Login / Register Screen",
          "Auth Setup On Firebase Console",
          "Adding The First User",
          "Handling Registration Errors",
          "Signing In Registered Users",
          "Database Structure & Permissions",
          "Updating Database Functions",
          "Logging Users Out",
          "Managing User Persistence"
        ],
        "Styling, Animation & Themes": [
          "Theme Colors & Header",
          "List Item Styles",
          "Switching Themes",
          "Adding Animation"
        ]
      },
      "requirements": [
        "Basic use and familiarity of JavaScript",
        "Basic exposure to React"
      ],
      "description": "Learn React Native from the ground up.  Find out how to create new projects, navigate through screens and save data both locally and remotely.\nOn this course we pull no punches. We dive straight in by building a registration form and move rapidly through the basics right throuh to intermediate with the creation of a number of apps.  You will discover how to take and upload images and videos from your device, how to manage gestures like the zoom, how to interact with a realtime database, you'll learn about real authentication and much, much more.\nAll you need is :\nTime to work through the course\nA computer and\nA mobile device.\nYou will be using the Expo framework, which is the fastest way to get up and running when learning React Native.\nThe prerequisites for this course are JavaScript and React.\nYou don't need to be an expect in JavaScript as most of the code is just functional. If you are weak or a bit rusty, don't worry.  As you code along with the instructor you will gain confidence and your JavaScript skills will improve.\nAn understanding of React is beneficial. If you have had a few hours, or basic introduction, then that is enough.  The flow of the apps and code is quite straightforward.\nThe benefit to doing a course, rather than reading through copious documents is that we speed up the process of learning, and teach you the most important things that you need to know to become proficient.\nThe further you get, the more you'll fall in love with React Native!",
      "target_audience": [
        "This course is for suitable for beginners to React Native mobile development",
        "If you want to learn fast and effective techniques that take you deep into how things really get done, then this course is for you.",
        "Developers that have already embarked on React or even React Native will find much of this course useful. Intermediate techniques are used throughout to get you up and running quickly.",
        "If you want to understand how to integrate with Firebase real time database and Firebase Auth, using React Native then you will learn this and more on this course."
      ]
    },
    {
      "title": "Ad Reward System with Server-Side Verification (SSV) Android",
      "url": "https://www.udemy.com/course/ad-reward-system-with-server-side-verification-ssv-android/",
      "bio": "Add a Digital Coins System in your Android App where users can Watch Ads, Earn Coins and spend on in-app Rewards.",
      "objectives": [
        "Implement Admob SDK for Android",
        "Integrate Reward Ads in your App",
        "Earn Money from Google Ads",
        "Handle Server-Side Verification (SSV) for Reward Ad",
        "Add Google Authentication",
        "MongoDB Atlas integration",
        "MongoDB Device Sync SDK for Android",
        "MongoDB Functions and Triggers",
        "Comply with the new European User Consent Policy",
        "Google's User Messaging Platform (UMP)",
        "Your own Backend Server used for SSV",
        "Server Deployment to make your app Production-ready"
      ],
      "course_content": {
        "Introduction & Setup": [
          "Introduction",
          "Project Overview",
          "Project Setup",
          "Navigation Setup",
          "Source Code"
        ],
        "Authentication Screen - User Sign in Flow": [
          "Create Authentication Screen",
          "Setup MongoDB Atlas & Google Cloud Project",
          "Implement Sign in with Google",
          "Persist the User",
          "Enable Sign in Prompts Dialog",
          "Authentication Trigger with MongoDB"
        ],
        "Home Screen - Observe Coins": [
          "Add Dynamic Start Destination",
          "Display User Information",
          "Fix an issue - MainActivity",
          "Observe the Coins",
          "Logout the User"
        ],
        "Settings Screen - EEA Ad Consent": [
          "EU Ad Consent Policy",
          "Display Ad Consent Screen on App Launch",
          "Update an Ad Consent from a Settings Screen",
          "Handle an Ad Consent for 'Other' Countries"
        ],
        "Ad Screen - Display a Reward Ad": [
          "Add a Floating Action Button - Home Screen",
          "Display a Reward Ad"
        ],
        "Backend Server - Verify a Reward Ad & Update the Coins": [
          "Verify an Ad on a Backend Server - Kobweb",
          "Deploy the Server"
        ],
        "Homework": [
          "Rewards and Coins Reduction"
        ]
      },
      "requirements": [
        "Basic knowledge about Jetpack Compose",
        "Basic knowledge about Android Development",
        "Basic knowledge about Kotlin",
        "Knowledge of Compose HTML framework (Kobweb) is a plus but not required."
      ],
      "description": "In this course I'm gonna teach you how to implement a Reward ad/Digital Coins System in your app with a Server-Side Verification (SSV). This same approach I've used in my own app to allow users to earn digital coins by viewing ads. In return, users can spend those coins, to redeem certain rewards that you want to provide.\n\n\nWe will use:\nAdmob mobile advertising platform which is developed by Google, to display a reward type of ad in our application. We will configure it to accept a server-side verification.\nGoogle's User Messaging Platform (UMP) to handle the new European Consent Policy. Because if you don't implement it, users from over 30 countries will be able to suspend your ads and reduce a huge amount of money that you can potentially earn.\nMongoDB Atlas to host the database where we will store all information about the users and their digital coins. We will handle user and admin permissions, collection schemas, network access list, authentication and database triggers, custom functions and more.\nOur own Backend Server which will be used to validate reward ads and add Coins to our users. The server itself should receive requests from the Admob SDK, when a callback fires up after a user successfully completes a task of viewing an ad. That adds an extra layer of security by processing and verifying user actions on the server rather than solely relying on client-side verification. This reduces the risk of manipulation or tampering by malicious users who may attempt to manipulate the client-side verification process to fraudulently claim rewards.\n\n\nAnd at the end we will deploy our Backend server so that we can use it in a production as well.\nBottom line, quite interesting topic that opens the door for monetization in your app.",
      "target_audience": [
        "Android Developers",
        "Mobile Developers",
        "Students",
        "Startups",
        "Anyone who wants to learn how to Earn Money from Ads with Android Apps",
        "Anyone who wants to implement Digital Coins system with Reward Ads in Android",
        "Anyone who wants to secure their App and protect it from unauthorized Tampering"
      ]
    },
    {
      "title": "Learn Apple's IOS App Development with Swift from scratch",
      "url": "https://www.udemy.com/course/learn-apples-ios-app-development-with-swift-from-scratch/",
      "bio": "An absolute beginner's quick introduction to creating apps for Apple's devices",
      "objectives": [
        "Build a basic IOS app (Dice Rolling App )",
        "Upgrade IOS Version",
        "Install Xcode",
        "Experiment in xcode playground",
        "Write swift comments",
        "Basic Swift Programming Concepts",
        "Create new Xcode projects",
        "Run apps in simulator",
        "Link design components to code",
        "Explore Xcode interface",
        "Explore storyboards"
      ],
      "course_content": {
        "Introduction and dev environment setup": [
          "Introduction",
          "Overview of Apple's IOS App Development with Swift",
          "What You Need",
          "How to install swift step by step (text version)",
          "Updating macOS Sierra",
          "Download and install XCode",
          "Create a test app",
          "Exploring Xcode interface",
          "Developing our test app",
          "IOS MVC Design Pattern",
          "What is IOS"
        ],
        "Basic Introduction To Swift": [
          "What is Swift",
          "Xcode Playground Overview",
          "Using Comments",
          "Print statements",
          "Operators Part 1",
          "Operators Part 2",
          "Variables and Data Types : Part 1",
          "Variables and Data Types : Part 2",
          "Naming Data",
          "Arrays",
          "Introduction to functions",
          "Creating a simple function",
          "Creating a function with a parameter",
          "Conditional Statements"
        ],
        "Project: Create a dice rolling app": [
          "What we will create",
          "Creating a new XCode project",
          "Designing your app part 1",
          "Designing your app part 2",
          "Linking design to code",
          "Creating variables",
          "Adding Random Number Generator",
          "Creating an array and testing our app",
          "Thank You"
        ]
      },
      "requirements": [
        "You should have a mac computer",
        "You should have an understanding of basic programming concepts"
      ],
      "description": "Do you Want to build an iPhone or iPad app? Start here. You will  learn how  to build  a basic IOS app  from scratch using the latest version of Xcode  9 which is the integrated development tool (IDE) and the swift\n(version  4) programming language which is apple's new programming language for IOS app development.a new\n( about 3 years)\nWe will be using the MVC ( Model View Controller) design pattern which is commonly used in IOS app development.\nXcode comes with several simulators that can be used to test your apps on various apple devices.\nThis course also  explores the Xcode 9  interface , techniques for connecting UI elements to code.\nDiscover how to build native iOS apps. This course covers the code, tools, frameworks,\nand practices for building applications with iOS 11. Discover how to build native iOS apps.\nTopics include:\nAcquiring the right tools for iOS app development\nUpgrading IOS macOS high  Sierra\nInstalling Xcode version 9\nCreating an Xcode project\nIntroduction to basic programming with swift\nUsing MVC in iOS\nLoading an array\nCreating variables\nCreating random numbers\nCreating basic interaction\nConnecting UI elements to code\nExploring storyboards\nDesigning your app\nWorking with Xcode\nMaking UI-to-code connections\nRunning your app in various simulated devices",
      "target_audience": [
        "Absolute beginners to programming",
        "Absolute beginners to IOS App development",
        "Beginner web developers",
        "Anyone who wants to learn how to code"
      ]
    },
    {
      "title": "LeetCode-Style Problems for Fintech and Social Media Apps",
      "url": "https://www.udemy.com/course/leetcode-style-problems-for-fintech-and-social-media-apps/",
      "bio": "Solve real-world coding problems from fintech and social media apps — built for interview and industry prep.",
      "objectives": [
        "Solve real-world algorithmic problems commonly encountered in fintech and social app development.",
        "Implement advanced data structures like hash maps, sets, and queues in Swift.",
        "Apply depth-first and breadth-first search techniques to practical graph-based challenges.",
        "Understand and implement the sliding window technique for efficient data analysis.",
        "Build and traverse adjacency lists to solve user relationship and clustering problems.",
        "Use Union-Find to identify connected components in a network graph.",
        "Apply sweep-line algorithms to determine maximum concurrency from login session data.",
        "Write optimized Swift code that meets performance constraints for large input sizes.",
        "Analyze algorithm complexity (time and space) to justify design decisions.",
        "Develop and debug Swift code in a testable format similar to LeetCode environments."
      ],
      "course_content": {
        "Coding Challenges": [
          "Top K Frequent Recipients",
          "Mastering Sorted in Swift for this Challenge",
          "Explaining the Sorting Functionality",
          "Coding the Solution: Top K Frequent Recipients",
          "First Unique Recipients",
          "Coding the Solution: First Unique Recipients",
          "Most Frequent Recipient in Sliding Window",
          "What is a Sliding Window",
          "The Solution: Most Frequent Recipient in Sliding Window",
          "Re-explaining the Sliding Window Concept",
          "Coding the Solution: Most Frequent Recipient in Sliding Window",
          "What is Run Length Encoding?",
          "Recipient Run Length Encoding",
          "Coding the Solution: Recipient Run Length Encoding"
        ],
        "Tree as Data Structures and Depth First Search": [
          "DFS - Depth First Search"
        ],
        "Finding a Friend Circle Count": [
          "Problem: Friend Circle Detection - DFS",
          "Solution: Friend Circle Detection - DFS",
          "Coding the Solution: Friend Circle Detection - DFS",
          "What is BFS? - Breadth First Search",
          "Problem: Friend Circle Detection - BFS",
          "Coding the Solution: Friend Circle Detection - BFS",
          "Problem: Explain Union Find",
          "Solution: Friend Circle Detection - Union Find",
          "Coding the Solution: Friend Circle Detection - Union Find"
        ],
        "Active Session Tracker": [
          "Here is the Active Session Tracker Problem",
          "What Each Tuple Represents",
          "What is a Sweep Line Algorithm?",
          "A Simplified Summary of the Code",
          "Coding the Solution: Active Session Tracker",
          "Introduction"
        ]
      },
      "requirements": [
        "Basic Swift programming knowledge – understanding of variables, constants, functions, and control flow.",
        "Familiarity with Swift collections – arrays, dictionaries, sets, and how to iterate over them.",
        "Introductory knowledge of Xcode – ability to run and test Swift code in Xcode.",
        "Experience writing simple Swift functions – particularly working with parameters and return values.",
        "Basic understanding of time and space complexity – at least the concept of O(n) and O(1).",
        "Comfort with reading and tracing through code – ability to understand existing Swift code.",
        "Interest in iOS app development concepts – such as user sessions, transactions, and messaging.",
        "Understanding of simple data structures – like stacks, queues, hash maps, and sets.",
        "Ability to follow algorithmic logic – such as loops, conditionals, and recursive calls.",
        "Willingness to learn through coding challenges – with patience and persistence to debug and test."
      ],
      "description": "Are you an iOS developer trying to sharpen your Swift skills and break into top tech companies like Meta, PayPal, or Stripe? Or maybe you're self-taught and frustrated by algorithm tutorials that feel like they're written for computer science majors? This course is built for you.\n“LeetCode-Style Problems for Fintech and Social Media Apps” is a practical, challenge-driven course that combines interview-level coding exercises with real-world Swift scenarios pulled from fintech and social media development.\nWe’ve designed each module to simulate real engineering problems — like tracking user logins, identifying the most active accounts, grouping users into friend circles, and calculating the busiest times in an app. These are exactly the types of problems you’ll face in interviews, or when working on scalable iOS products.\nBut unlike other courses, we don’t throw CS jargon at you and expect it to make sense.\nThis course breaks down topics like graph traversal, union-find, trees, and sliding windows in plain English.\nNo theory-dumping. No academic fluff. Just clear, example-driven teaching and practical applications.\nYou’ll learn:\nHow to use Depth-First Search (DFS) and Breadth-First Search (BFS) in social graphs without memorizing academic patterns\nWhen and how to apply sliding window logic to time-based app data\nWhat Union-Find really is, and how it’s used to group related users — without requiring a CS degree to follow along\nHow to count frequency, detect duplicates, and sort custom logic efficiently with Swift’s built-in tools\nHow to write clean Swift code that passes interviews and makes sense to other developers\nThis course includes:\nReal-world LeetCode-style challenges\nGuided coding walkthroughs\nClear visual breakdowns of data structures like trees, graphs, and hash maps\nOptimized Swift solutions with explanations you can actually understand\nWhether you’re prepping for a coding interview, trying to become a more confident Swift developer, or applying your skills to real product logic, this course will help you think like a problem-solver — not just a coder.\nNo computer science background required. Just bring your curiosity, your laptop, and a desire to actually understand the logic behind professional Swift development.",
      "target_audience": [
        "Aspiring iOS developers who want to strengthen their Swift coding skills through real-world coding challenges.",
        "Computer science students looking to practice algorithmic problem-solving in Swift using fintech and social media contexts.",
        "iOS engineers preparing for technical interviews at companies like Meta, Google, or startups.",
        "Self-taught developers who want structured problem-solving practice to fill in CS knowledge gaps.",
        "Developers switching to mobile development who want to understand Swift syntax through practical exercises.",
        "Bootcamp graduates ready to transition from tutorials to applying coding concepts in real-world-style problems.",
        "Junior developers aiming to improve their grasp of data structures and algorithms using Swift.",
        "Professionals in fintech or social apps who want to understand the logic behind core features like user sessions, transactions, and messaging.",
        "Udemy learners focused on algorithm mastery in preparation for coding interviews with a focus on Swift.",
        "Developers interested in building scalable features commonly seen in finance and social networking apps."
      ]
    },
    {
      "title": "Cursor AI for Android App Development to Code Faster",
      "url": "https://www.udemy.com/course/cursor-ai-for-android-app-development-to-code-faster/",
      "bio": "Accelerate Android app development with Cursor AI, Kotlin & Jetpack Compose. Code android apps faster with AI assistance",
      "objectives": [
        "What is Cursor AI Editor",
        "Install and use Cursor AI Editor",
        "Android App Development with Cursor AI Editor",
        "Installing JDK for Windows",
        "Installing JDK for Mac",
        "Installing Android Studio",
        "Cursor AI Editor Interface",
        "Cursor’s Tab for Auto compilation",
        "Cursor’s Prompt bar (Cmd/Ctrl K)",
        "Cursor’s Chat",
        "Adding Rules in Cursor",
        "Developing 4 Android Apps with Cursor AI Editor",
        "Creating Perfect Prompts for the Cursor AI Editor",
        "Publishing Android Apps on the Google Play Store"
      ],
      "course_content": {
        "Introduction to \"Cursor AI for Android App Development to Code Faster\" course": [
          "What Will We Learn In This Course?",
          "Project Files"
        ],
        "Introduction to Cursor AI Editor and Environment Setup": [
          "What is Cursor AI Editor?",
          "Download and Install JDK on Windows",
          "Download and Install JDK on MacOS",
          "Download and Install Android Studio - Part 1",
          "Download and Install Android Studio - Part 2",
          "Download And Install Cursor AI Editor"
        ],
        "Using Cursor AI Editor": [
          "Interface Overview - Cursor AI Editor",
          "Installing Android Virtual Device (AVD - Emulator)",
          "Auto Compilation with Cursor’s Tab",
          "Cursor’s Chat",
          "Cursor’s Prompt Bar (Cmd / Ctrl K)",
          "Adding Custom Rules in Cursor AI Editor",
          "More with Cursor AI Editor"
        ],
        "Developing Android Apps With Cursor": [
          "Developing a Note App with Cursor AI Editor",
          "Introduction to Weather App with Cursor AI Editor",
          "Reviewing the Website",
          "Developing the Weather App with Cursor AI Editor",
          "Introduction to MP3 Player App with Cursor AI Editor",
          "Developing the MP3 Player App with Cursor AI Editor",
          "Introduction to Math Game App with Cursor AI Editor",
          "Developing the Math Game App with Cursor AI Editor"
        ],
        "Publish Your Android App on Google Play Store": [
          "APK Release Version",
          "Building APK & AAB file",
          "Creating a Google Play Developer Account",
          "Publishing the App on Google Play Store"
        ],
        "Tips & Tricks": [
          "Tips & Tricks"
        ],
        "Extra": [
          "Cursor AI for Android App Development to Code Faster"
        ]
      },
      "requirements": [
        "No prior knowledge is required to use the Cursor AI Editor",
        "Basic Computer Knowledge",
        "Desire to learn Android App Development and Cursor AI Editor",
        "A computer with a 64-bit operating system",
        "We preferred MacOS (64-bit), but this is not mandatory. You can prefer to use other Operating Systems. We also provided specific videos on installations for each platform",
        "Nothing else! It’s just you, your computer, and your ambition to get started today"
      ],
      "description": "Welcome to the “Cursor AI for Android App Development to Code Faster\" course.\nAccelerate Android app development with Cursor AI, Kotlin & Jetpack Compose. Code android apps faster with AI assistance\n\nAndroid App Development is evolving rapidly, and AI is leading the way Traditional coding is giving way to smarter, faster methods where AI tools like Cursor AI Editor take the lead Imagine building real, fully functional Android apps without writing thousands of lines of code — just by crafting effective prompts. This course introduces you to a whole new era of development powered by artificial intelligence.\n\nAt OAK Academy, we believe in blending hands-on experience with modern technologies In this course, you’ll learn to create Android apps using Kotlin, Java, Jetpack Compose, and the Cursor AI Editor Whether you're publishing your first app or enhancing your workflow, we’ll guide you step-by-step through app creation and deployment — no prior coding experience required\n\nIf you're looking to build apps faster, smarter, and with fewer bugs, this course is for you Whether you're a complete beginner or a developer ready to level up with AI, dive in and explore the future of Android development — built by experts, driven by Cursor AI\n\nWhy choose this course?\nThe world of mobile development is evolving — and so are the tools we use, Cursor AI Editor is one of the most powerful AI-assisted tools in modern programming This course helps you unlock its full potential\nWe’ll show you how to:\nWrite and refactor Android apps with Cursor’s smart suggestions\nBuild beautiful UIs using Jetpack Compose\nUse Kotlin — the official language of Android\nDeploy real apps to the Google Play Store\nUnderstand and implement AI-assisted app workflows\n\n\nDeveloped by OAK Academy, a leading global tech education provider, this course combines expert instruction, real-life projects, and modern tools to give you the skills that matter in today’s job market\n\n\nWhat You Will Learn\nWhat is Cursor AI Editor, and how to install and use it\nHands-on development with Kotlin, Java, and Jetpack Compose\nCursor features: prompting, auto-compilation, chat-based coding, and more\nCreating and deploying 4 full-featured Android apps\nAI-powered development: write prompts instead of code\nFirebase setup and app publishing workflow\nAndroid fundamentals: UI design, OOP, project structure\nBuild apps without any prior coding knowledge\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\n\n\nWhat is Cursor AI? Coding with Cursor AI\nCursor AI is an AI-powered code editor based on Visual Studio Code, designed to speed up and simplify the software development process. It integrates smart features like code generation, automated refactoring, and AI-based codebase queries directly into the development environment. Cursor AI supports popular languages like Kotlin, Java, and C++, making it ideal for Android developers looking to boost productivity. By streamlining repetitive coding tasks, Cursor allows developers to focus on solving real problems rather than writing boilerplate code. Its unique agent mode can even perform entire tasks on your behalf, while still keeping you in control.\n\n\nWhy Do Developers Love Cursor AI?\nDevelopers love Cursor AI because it transforms the way they write code — making development faster, smarter, and more efficient. With features like intelligent code suggestions, one-click debugging, smart file navigation, and automated testing workflows, Cursor AI reduces the mental load of coding. For Android developers, it’s a game changer: it handles layout generation, logic scaffolding, and error fixes in seconds. Cursor’s AI assistant not only accelerates the development cycle but also improves code quality and reduces bugs — all while working directly inside a familiar interface like VS Code.\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different languages on the Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\n\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you with the best learning experience\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\nDive in now!\nWe offer full support, answering any questions\nSee you in the “Cursor AI for Android App Development to Code Faster\" course.\nAccelerate Android app development with Cursor AI, Kotlin & Jetpack Compose. Code android apps faster with AI assistance",
      "target_audience": [
        "Those who want to develop Android with artificial intelligence",
        "Those who want to accelerate their Android development process with AI support",
        "Those who want to learn Android app development with the Cursor AI Editor",
        "Those who want to be one step ahead in Android job applications",
        "Those who want to expand their knowledge",
        "Those who are new to Android development without previous coding experience",
        "Those who want to take their Android app development skills to expert levels"
      ]
    },
    {
      "title": "How To Build Mobile App Without Programming - Build 14 Apps!",
      "url": "https://www.udemy.com/course/how-to-build-mobile-app-without-programming-skills/",
      "bio": "Guide to Android, iPhone, iPad, Amazon Kindle Applications Development Tutorials Without Technical or Coding Skills!",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "A Windows PC, Mac or Linux Computer",
        "ZERO programming knowledge required - I'll teach you everything you need to know"
      ],
      "description": "[What Is The Course About?]\nThis course is about building mobile apps without programming or coding skills. You will learn how to build 14 mobile apps very quickly.\n[Shortcut To Mobile App Creation]\nAre you on the rush in building your first mobile app or maybe you would like to build more apps to expand your mobile app empire? Then this course is for you!\nWe have made this course less complicated and simpler so that you can grasp virtually everything about mobile app development. If you have fundamental of using Microsoft Word, Microsoft Excel and Microsoft PowerPoint, then studying this course is not a burden for you!\nWith consice course materials in the course, you will have a quick understanding of what mobile app development is all about. If you are a fast learner, in merely hours, you can build your mobile app with variety of functions.\nForget about learning those tedious and hard-to-understand programming language. If you have a day job or maybe you are still studying then learning programming language may overwhelm you. In order to fully master programming language, you need to be focused. You may already tired after your day job or after studying whole day.\nNo worries anymore. Your shortcut road to mobile app success was created right here!\n[What Types of Mobile Apps You Can Create?]\nApp #1: Audio App\nMusics play an important part in our life. Sometimes it reduces our stresses. It cheers us up. It brings joy to us. With just couple of clicks, you can build your audio app. You can integrate your audios into the app. Just make sure you use the royalty-free musics!\nApp #2: Mortgage Calculator App\nReal estate industry has never come to an end. And if you are a real estate agent or broker, then it is time for you to create an app for your potential buyers. They need this calculator that comes in handy, right from their smartphone. Integrate this feature to your mobile app and you have higher chance to close the deals.\nApp #3: Count Down Timer App\nAfraid no one reminds you about important dates? Are you tend to forget easily your anniversary events? No worries. Just integrate the Count Down Timer App into your mobile app and you solve the problem.\nApp #4: Email Marketing App\nEveryday there are billions of emails sent out from servers. Marketing using emails is not uncommon anymore. Every business owners should have a system that make their customers happy - an convenience way for them to contact you whenever they have inquiries. To unblock the communication barriers, just integrate the Email Marketing App into your mobile app.\nApp #5: Messenger App - With Google and Facebook Login Features\nFacebook Inc. must have his own reasons to buy WhatsApp and build their own messenger. No doubt to say that messenger is an important tool to make all of us connected. Well, we have a good news for you! In just couple of clicks, you can have your own messenger app! Your app users only have to either login to their Google or Facebook account and they can start texting to other users. To make the discussion more engaged, each users will receive push notifications, so that the users won't miss any hot discussions. Lack of exclusive feature on your mobile app? Just integrate the Messenger App into your mobile app!\nApp #6: Slot Machine App\nDo you have valuable contents or gifts that you would like to share with your app users? Entice your potential app users to download your app have never been so easy! You can ask your customers to play the slot machine app to unlock your secret page. Just integrate the Slot Machine App to make your app fun!\nApp #7: Voice Recorder App\nDream of having a recording feature inside your mobile app? Look no further. Just try the Voice Recorder App and you will be amazed by its simplicity and flexibility. Besides recording the voice, you can also save the voices in an organized manner.\nApp #8: Global Positioning System (GPS) App\nWant to let your customers find your place or business premises easily? With just a simple standardized link, you can inserted it into the GPS App and let your customers know the exact location of your place or business premises. While your competitors may using Paint tool to show off their maps, you can integrate the GPS App into your mobile app in just minutes.\nApp #9: Photo Sharing App\nPhotos equal memories. By designing your own stickers, you can integrate the Photo Sharing App into your mobile app. You can create countless of stickers and inserted them into your mobile app. We even put in a share button so that your app users can share their photos to various social media platforms.\nApp #10: eBook App - Turn any PDF into eBook App\nDo you have great contents and want to share to the world? Or you already have contents in your Microsoft Word files and have not to change it to PDF files? Don't worry. With your converted PDF, you can have your own eBook App within minutes. You can even customise your eBook App - add buttons, links and images into your eBook App. Additionally, you can also make a professionally-looking Table of Contents for your eBook App. That's cool!\nApp #11: News Feed App\nLazy to write contents? Don't have great contents? You have a choice to add news feed contents into your mobile app from other websites. Share those great contents to your app users without write anything. By just applying some codes on the link, you are all set. Your app users will be very happy.\nApp #12: Memory Game App\nHaving the dream of creating your first game app? Just pick 8 different images from any royalty-free graphics website and your memory game app can be created in just minutes. The kids will like your game!\nApp #13: Push Notifications App\nHere's the \"killer weapon\". Once your app has fair amount of downloads, you can just send push notifications to your app users - in just minutes and for free! Study has showed that the open rate for push notification from apps is much higher than emails sent out from servers. So, what are you waiting for? Just integrate the Push Notifications App into your mobile app!\n*We will also show you how to send push notifications to over 400,000 devices around the globe!\nApp #14: Geo-Fencing App\nLet's take advantage of this new technology. Geo-fencing is a great tool that you can leverage. Bring your company sales to a new level. Here is how Geo-fencing works - when your potential customers approach your premises (within the designated area that you set), push notifications will automatically send to their devices, telling them that they are in the vicinity of your business premises. So, with this high-tech feature, you will have a higher chance to close deals or sales. In other words, you have an unfair competitive advantage!\n[Social Media Integration - A \"Weapon\" That You Should Not Miss!]\nThis is fact - there is more than 1 billion users using Facebook daily. If we were to expand our business or reach, we ought to integrate Facebook into our mobile app. However, some of app developers doesn't include their Facebook API when building their mobile app. This maybe simply because they don't know how to create their Facebook App correctly.\nBy learning this course, you will bypass those difficulties. We will teach you how to create your Facebook App CORRECTLY. On a separate note, here is the problem that faced by many newbie developers - they don't know how to bypass their mobile app's web page link to mobile app (for example Android) link. Your potential users may need to login to Google right after they tapped the INSTALL button on the mobile app's web page link. This creates a barrier for your potential app users - it just lowering your mobile app downloads rate! Nevertheless, we have a solution for that! Besides that, we will tell you why not using both TinyURL and Google URL Shortener is a better move.\n[Mobile App Monetisation Secrets Revealed]\nDo you know how to integrate Google Admob Software Development Kits (SDKs) and other Advertising Network SDKs? Just forget about those lengthy steps. We have already solved that for you! Yes, you don't have to touch those codes! We have already integrated those SDKs for you!\nWe believe keeping your works in an organised manner boost productivity. For this reason, we have included a Microsoft Excel file for you - free of charge. Besides giving away this free stuff, we also teach you how to take preventive steps to protect your advertising account from being banned by your advertising networks.\n[Mobile App Analytics]\nSuccess doesn't come easily. That is why we will teach you how to track your mobile app activity, so that you can find your weakness and fine-tune it to make it better. Here, we will show you how to use Google Analytics to analyse your mobile app activity. No Google Analytics SDKs integration!\n[Adobe Photoshop + Adobe Illustrator - Compact Lecture!]\nWant to master Adobe Photoshop and Adobe Illustrator in just 20 minutes? Stop wasting your time learning those long-hours graphic design courses! Yes, in just 20 minutes, you already can master those software skills. Let others to do the graphic design jobs. What you do is this - download cool graphics from the royalty-free graphics sites and editing them to make it your own.\n[Mobile App Icon Design Tool - Free!]\nMany newbie developers (or even the experienced ones) do not know the existence of an online tool that can help boosting your app creation productivity. Here is what you do - create a high resolution icon just once. Next, load that image, adjust some settings and boom! You have various sizes of mobile app icons - in just seconds! It is like David Copperfield doing his mobile app...\n[Mobile App Development - Final Stage]\nAfter you are happy with your mobile app User Interface (UI) and User Experience (UX), it is time to export your binary. Our binary export process is very straight forward. Just couple of clicks and wait a few minutes, your binary will be ready to upload to various mobile app stores.\nBy signing up this course, you will get another course for free. It is about how to deploy your mobile app to multiple mobile app stores. This is something extra for you - free of charge!\nWith all of the course learning materials, you will have a strong knowledge on how to create your mobile app without programming skills!",
      "target_audience": [
        "ANYONE who wants to build apps without learning programming languages."
      ]
    },
    {
      "title": "Master the Android System Design Interview: Advanced Topics",
      "url": "https://www.udemy.com/course/mobile-system-design-interview-prep-advanced/",
      "bio": "Master modern Android app architecture, privacy and security in mobile system design interviews at FAANG companies",
      "objectives": [
        "Solve advanced mobile system design problems",
        "Have a toolbox of advanced clarifying questions to ask during the interview",
        "Be able to discuss a wide variety of privacy and security-related topics including cryptography, authentication & authorization, local & network data protection",
        "Design apps with modern Android app architecture in mind",
        "Decide between different architectural styles, patterns and modularization strategies"
      ],
      "course_content": {},
      "requirements": [
        "Some prior experience in mobile app development (preferably Android) is expected.",
        "Not strictly required, taking the foundational course \"Mastering the Android System Design Interview\" is a plus"
      ],
      "description": "Take your mobile system design interview skills to the next level with this advanced course, building on the foundations laid in \"Mastering the Android System Design Interview\". If you’ve already mastered the basics, this course is your gateway to make you stand out in challenging and advanced system design topics — privacy, security, and modern Android app architecture — to ace your interviews at FAANG companies like Google, Apple, and beyond.\nLed by Stefan, a seasoned Tech Lead from a Google Developer Agency, this course is built with over a decade of hands-on experience designing and developing Android, iOS, and multiplatform apps. Having successfully navigated system design interviews himself, Stefan understands the challenges and will share his expertise, practical tips, and interview-tested strategies to set you apart.\nMobile system design interviews are notoriously tough, with privacy and security being some of the least understood yet often critical areas. Additionally, modern Android app architecture requires a deep understanding of patterns, different architectural styles, and best practices to build scalable, maintainable apps. This course is specifically designed to address these gaps, giving you a competitive edge in your interviews. Despite the course being especially targeted at Android, many concepts are also applicable to iOS.\n\nOver 20 hours of on-demand video content will cover what you need to know for your mobile system design interview:\nClean Code Principles: Apply DRY and SOLID principles to create codebases that are maintainable and easy to scale.\nArchitecture Patterns: Master MVC, MVP, and MVVM, and learn how to choose the best approach for your app’s complexity and development team.\nClean vs. Layered Architecture: Learn how Clean Architecture focuses on the independence of business logic from frameworks, while Layered Architecture emphasizes logical separation into data, domain, and UI layers.\nAndroid Architecture Components: Streamline your system design with ViewModel, LiveData, Flow, Room, DataStore, WorkManager, and other essential libraries.\nSeamless Navigation: Simplify complex app flows using the Android navigation component.\nDependency Injection (DI): Leverage frameworks like Dagger, Hilt, Kodein, or Koin to make your code cleaner, more modular, and easier to test.\nMastering Modularization: Break down complex codebases into feature-based and/or layer-based modules for better scalability based on the principles of component cohesion and component coupling.\nAndroid Privacy Fundamentals: Explore essential topics like permissions, location handling, data, transparency & control, app hibernation, and the Privacy Sandbox.\nCryptography: Understand symmetric cryptography, asymmetric cryptography, and hashing. Learn when to use each technique effectively.\nLocal Data Protection: Learn how to safeguard sensitive data stored on devices using encryption and secure storage solutions.\nNetwork Data Protection: Explore strategies for securing data in transit, including SSL/TLS, certificate pinning, certificate transparency, and Android's network security configuration.\nAuthentication & Authorization: Implement secure user authentication based on standards like OAuth 2.0 and OpenID Connect, and session management.\nPractical tips & tricks: Get additional tips & tricks, and a toolbox of clarifying questions to ask to tackle system design questions related to app architecture, privacy, and security.\nHands-On Learning: Practice solving architectural, and privacy & security challenges through 2 extensive mock interviews from requirements definition to high-level and detailed designs.",
      "target_audience": [
        "Android or iOS app developers preparing for interviews at top tech companies",
        "Developers that want to learn about mobile privacy and security concepts, and modern Android app architecture"
      ]
    },
    {
      "title": "Build Convai Artificial Intelligence AR App With Unity3D.",
      "url": "https://www.udemy.com/course/build-convai-artificial-intelligence-ar-app-with-unity3d/",
      "bio": "Learn Fundamentals of Augmented Reality, Unity3D, Unreal Engine, Blender, Convai Artificial Intelligence AR.",
      "objectives": [
        "Understand different forms of Augmented Reality and their applications",
        "Build Augmented Reality Apps from scratch for Android & iOS",
        "Placing a life size drone in air using Vuforia Mid Air feature.",
        "Understand the basic difference between Virtual Reality & Augmented Reality",
        "Students will create AR apps by writing codes in C# programming language",
        "Make a game that uses artificial intelligence.",
        "Use a navigation mesh to add pathfinding logic to your game.",
        "Understand different forms of Augmented Reality and their applications",
        "Import Augmented Reality Software To Unity",
        "Unity 3D fundamentals",
        "Students will create AR apps by writing codes in C# programming language",
        "Use Image Targets With Extended Tracking",
        "Understand the basic difference between Virtual Reality & Augmented Reality",
        "Learn Foundation C# Programming Syntax"
      ],
      "course_content": {},
      "requirements": [
        "Basic programming knowledge will be of Great help",
        "A Windows or Mac Computer system",
        "Android Smart Phone or an iPhone",
        "Good Internet Speed for Downloading Files"
      ],
      "description": "Curious about Augmented Reality, You have come to the right place. Learn the basics fundamentals and programming techniques required for building fully functional Augmented Reality android and iOS apps. For this course you will need an Android Smartphone or iPhone.\nSo what is Augmented Reality?\nAccording to Wikipedia, Augmented reality (AR) is a live direct or indirect view of a physical, real-world environment whose elements are \"augmented\" by computer-generated or extracted real-world sensory input such as sound, video, graphics or GPS data.\nIn Augmented Reality the real view is modified by a computer (Smartphone in this case). Augmented reality (AR) enhances one’s current perception of reality, whereas in contrast, virtual reality replaces the real world with a simulated one. Augmentation techniques are basically performed in real time,\nEg : Displaying live scores and statistics inside a live video of a sporting event\n\n\nPower of Augmented Reality\nI came across Augmented Reality in 2015 after watching a video of Augmented Reality Book. I was fascinated to know that such technology actually exists. So I started researching on different Augmented Reality platform. Vuforia platform seemed very promising as developers all over the World have used Vuforia for developing Augmented Reality apps.\nPokemon Go game is the best example of Augmented Reality. Other than that Augmented Reality apps expand over a wide range of topics from Education, Business, Architecture, Health Industry, Home Decoration and obviously mobile gaming.\n\n\nCourse Content and Overview\nThis course is designed for students interested in creating Augmented Reality apps. No coding experience is required; all you need is an Android or iOS device for testing your Augmented Reality apps. We will start from basics of Unity, C# platform and then move to higher topics\nIntro & Basics of Augmented Reality\nIn the first section you will first understand as to what is Augmented Reality? Next we will look at the four different augmented reality techniques and its application. After this I will explain you what is Virtual Reality and the differences between Augmented Reality (AR) & Virtual Reality (VR)\nBasics of Unity\nAfter understanding Augmented Reality next we will look at the basics of Unity as Unity is the main software which we will use for building Augmented Reality apps.\nAugmented Reality One (ARONE) application\nARONE is the first Augmented Reality Application which you are going to create. In this app you will\nCreate Vuforia account\nCreate License Key for the AR app\nUpload an Image as Image Target\nUnderstand Vuforia Image Recognition system\nSolution to White ImageTarget problem in Vuforia version 6.2.10\nDownload 3D model from Unity Asset Store\nPlace 3D Model on top of Image Target\nDownload ARONE app database from Vuforia and activate it inside Unity\nBuild this app for Android & Ios\nAugmented Reality Book (ARBOOK) application\nIn the ARBook application we will first create few sketches inches a drawing book. Next we will download some 3D Models from the asset store and project the 3D Model on top of each image target.\nApplication like ARBOOK can be implemented in Schools & Colleges for teaching complicated subjects in a fun and easier way.\nVirtual Button & Augmented Reality Business Card (ARBusinessCard)\nIn this section I will explain first explain you the concept of Virtual Button in Vuforia and the six important factors that should be considered while working with Virtual Button.\nNext you will create a simple Virtual Button app called AugmentedRealityVirtualButton in which you will understand the important function & interface that are required for working with Virtual Button.\nAfter the ARVirtualButton app we will then create and ARBusinessCard. In the ARBusinessCard app you will first place multiple virtual buttons on top of an Image Target. Next I will show you how to play video file inside Unity, After this we will write a C# script to play a particular video when the virtual button for a particular video is pressed\nAugmented Reality Greeting Card\nIn this section, you will learn the process of detecting multiple image targets simultaneously at the same time. You will also add an mp3 file in the app that will start playing only when the greeting card is opened.\n\n\nSuperimposition based AR | Object tracking –\nIn this section you will first scan a 3D model using Vuforia’s 3D scanning android application. Next we will import this model inside Unity and on top of this model we will superimpose a digital car.\n\n\nCylindrical Object tracking\nIn this section you will learn the technique for detecting a cylindrical object. After detecting the cylindrical object you will create a beautiful 3D scenic view around the cylinder with the help of airplanes, low poly clouds and low poly terrains.\n\n\nVuforia Cloud Recognition\nIn this section you will understand the working of Vuforia cloud databases. You will create an application called BookInfoAR. This application will scan a book cover(marker) and display information panel beside the book cover. The information of the marker is stored in cloud database.\n\n\nGround Planes and MidAir\nIn this section you will create your first markerless augmented reality using Vuforia Ground Plane. With ground plane feature we will place a lifesize Lamborghini model in real world. Next using the MidAir feature we will place a drone in mid air.\n\n\nUser Defined Target\nIn this section you will understand a feature called User Defined Target feature from the Vuforia Core Sample. With the help of User Defined Target feature we can use any image as an marker.\nSo after explaining you the course content I hope to see you inside this Augmented Reality course",
      "target_audience": [
        "Computer programming students interested in C# programming for building Augmented Reality applications",
        "Unity Developers interested in Augmented Reality platforms",
        "Anyone who wants to develop their own AR Applications",
        "Anyone Interested to learn Trending Technology",
        "Augmented Reality enthusiast"
      ]
    },
    {
      "title": "Integrating Parse into an Android Chat app template",
      "url": "https://www.udemy.com/course/integrating-parse-into-an-android-chat-app-template/",
      "bio": "Our complete guide to setting up a Parse backend and integrating it into an Android Chat app template.",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Download the attached Android Chatt app template (free)",
        "Eclipse ADT from Google (download free)"
      ],
      "description": "Welcome to the MyAppTemplates complete guide to setting up a Parse backend and integrating it into an Android Chat app template, similar to What's App or Viber.\nThis is a short 7 lesson overview course, for beginner-intermediate developers with some experience with Java programming and Eclipse IDE.\nEach lesson is between 5-15 minutes long, starting with an overview of Parse and the existing code on the Android Chat template provided. It's not a 'start-from-scratch' course, it is for people who have an app template already (we provide a free one!) and who would like to add a simple backend API to it.\nIn the course we'll be setting up a free Parse account, creating the backend classes for our Chat app in Parse, and then integrating the Parse API into our Android Eclipse app template.\nIt's 7 short lessons, and at the end you should have a simple Android Chat app up and running.",
      "target_audience": [
        "Beginner-Intermediate developers (Java development experience suggested)"
      ]
    },
    {
      "title": "Cloud Firestore for iOS in Swift 5 Master Course",
      "url": "https://www.udemy.com/course/cloud-firestore-for-ios-in-swift-5-master-course/",
      "bio": "The Best Flexible, Scalable NoSQL Cloud Database in 2019",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "You should have a Mac",
        "You should have a Firebase Account (it's free)"
      ],
      "description": "Cloud Firestore is a flexible, scalable database for mobile, web, and server development from Firebase and Google Cloud Platform. Like Firebase Realtime Database, it keeps your data in sync across client apps through realtime listeners and offers offline support for mobile and web so you can build responsive apps that work regardless of network latency or Internet connectivity.\n\n\nYou will learn all about Cloud Firestore for iOS in Swift 5. I will give you a quick start to Cloud Firestore. We will set up our app in the Firestore Dashboard and configure Firebase in our project. We will go through the Firebase Firestore Database console. You will learn how to view, add, change and delete collections, documents and data. I will show you the many different ways how to add data to Cloud Firestore. We will set, ad and merge some data. In the meantime I let you on some useful tips that I use in production code. You will also learn how to add a collection, how to add a document and how to get a document id.\nI will show you how to save a user to Cloud Firestore. You will learn some cool advanced tricks that can be used in production code. I will show you the various ways you can update data in cloud Firestore. We will have a Firestore update document field and at the end some array update and remove functions. we will dive deep into counters. You will learn how to create a counter, how to update it and how to increment it. We will also discuss Distributed Counters in Cloud Firestore. You will also learn about Firestore sharding. I will show you how you can create batched writes in Firestore. I will show you how you can create transactions in Firestore.\nBecome a Cloud Firestore PRO today! Enrol the course and be part of the Rebeloper learning community",
      "target_audience": [
        "This course is perfect for iOS Developers"
      ]
    },
    {
      "title": "Android Fundamentals: Ultimate Tutorial for App Development",
      "url": "https://www.udemy.com/course/ultimate-android-lollipop-app-development-course/",
      "bio": "Learn Android and Create Amazing Apps for Android Playstore",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Basic knowledge of Programming is required preferably in Java"
      ],
      "description": "The Ultimate Android App Development Course is here. With the latest edition of our Android course we bring together a curriculum and pedagogy which will be help a beginners and an intermediate developer alike. In our course we have tried to present the concepts in such a way that you will be able to understand and use them quickly first using our lab exercises and then in your own practical projects. It is aimed to hold your hand all the way to make sure all the APIs and their usage is clear to everyone.\nYou will start from the basic Android architecture and ecosystem and follow it up with simple APIs and then graduating to complex and latest APIs such as Sensors, Material Design and Data Storage.\nWhy this course is for you?\nFocus on Practical App Development Concepts\n\nTips to make your App more professional\n\nLearn to monetize your apps\n\nPrepare yourself for an Android Job Interview\n\nThrough discussion on important Android APIs\nSome of the Concepts Covered in the Course:\nAndroid tools and Ecosystem - Get to know the Android Ecosystem and tools and SDKs you will need to get started on Android Development.\nAndroid UI - Learn about Views, view groups, layouts, listeners,Margin and Gravity. Learn to create cool and immersive UI for your apps.\nActivities and Intents - Learn about Android control flow and user interaction using Activities and Intents.\nAdapters and Dynamic Views - Master the concepts behind creating dynamic views consuming web services. learn to create custom Adapters for your apps\nFragments and User Navigation - Learn about the use of fragments and how to use standard navigational APIs with them.\nData Storage and Web Services - Learn to implement persistence and make your app talk to web services. Create mobile apps which connect seamlessly to enterprise backend systems.\nLollipop APIs - Get to work on new Android Apis and learn new concepts such as Material Design on Android. Master the Apis that are new and powerful.\nGoogle Play and Best App Development Practices - learn to make killer apps and make money by integrating ads. Prepare yourself for an Android job Interview\nLearn all this and much more in the transformative course which will turn a rookie into a professional developer. So get started and see you on the other side.",
      "target_audience": [
        "Students who want to start with Android programming",
        "Beginners who want to use Android to build Apps",
        "Developers who want to learn the new concepts introduced in Android L"
      ]
    },
    {
      "title": "iOS - Programming for Beginners",
      "url": "https://www.udemy.com/course/ios-programming-for-beginners/",
      "bio": "Learn from scratch how to create mobile apps! 11 hours of content!",
      "objectives": [
        "learn basics of Xcode and Objective- C",
        "learn how to create first apllication",
        "KVC (key-value-coding) programming techniques",
        "how to use Strings",
        "iOS architecture and the most important frameworks",
        "how to use NSArray, NSSet, NSDictionary, NSNumber and NSDate Collection",
        "rules for the use of basic and advanced controls",
        "how to use the view editor, Storyboards",
        "know protocol mechanism and how to debug",
        "how to create a two-dimensional graphics using Quartz 2D"
      ],
      "course_content": {},
      "requirements": [
        "XCode (Free from Apple App Store)"
      ],
      "description": "LAST UPDATED: 02/2022\nProgramming step by step\niOS for Beginners was prepared for developers taking their first steps into the world of Apple. Multimedia materials have been developed with great care to explain step by step the various issues of iOS platform. This course is full of theory and Case Studies, preview code created during exercise.\n\n\nComprehensive knowledge and solid base for everyone\nCompletion of the course provides a solid base and a comprehensive understanding of the key issues of programming for iOS. Training is ideal for those who begin programming in Objective-C and have some programming skills. If you are just iOS enthusiasts who doesn't have any programming knowledge, you can also complete this course. You will need a little motivation and willingness to learn:-)\n\n\nWhat you will learn?\nOur trainer will present you from scratch the architecture of iOS platform, will show you how to install the Xcode, how to get around it. Then you will find out what are the basic structure of the application, you will learn how to create your first project, and run it on the simulator or on your own device. More about the course content in the section: What am I going to get from this course?\n\n\nWhy start to programming for iOS?\nWe know at leat 3 main reasons. IOS developer means prestige, quality and high earnings.\nFor sure you know that Apple's software developers have the highest earnings in the mobile market, and users of iPhones and iPads are the group that most often getting paid games and apps.\nThe most comprehensive course for beginning iOS programmers. Full of basic theory and practice. Create your first application with Educativo trainer! Try it now!",
      "target_audience": [
        "beginning iOS developers",
        "for anyone who wants to get started in programming for iOS platform"
      ]
    },
    {
      "title": "Flutter - Mobile App Development (Android & iOS) | 2024",
      "url": "https://www.udemy.com/course/flutter-mobile-app-development-android-ios-2024/",
      "bio": "Learn Flutter starting from scratch with its up-to-date content.",
      "objectives": [
        "Dart language in detail from scratch",
        "asynchronous programming",
        "How to code a mobile application from start to finish",
        "Upload the application to Play Store and App Store",
        "Layered Architecture in full detail",
        "MVVM Concept",
        "using API",
        "JSON structure, reason for use, logic and parsing within the application (JSON Parse) Retrieving data from the internet via HTTP",
        "Not only the Dart language, but programming logic in general Creating a Flutter project",
        "Null Safety concept",
        "Basic Flutter concepts such as state and widget Commonly used basic widgets (in detail)",
        "Create multiple pages, switch between pages and transfer data",
        "Handling the concept of State Management professionally with Provider",
        "At the end of the training, you will be able to implement any mobile application you can think of from scratch."
      ],
      "course_content": {
        "Introduction": [
          "Hello World"
        ],
        "Variables": [
          "String",
          "Integer and Double",
          "Boolean",
          "Working Order",
          "Variable Naming",
          "Var Keyword",
          "Null Values",
          "Dynamic Data Type",
          "Type Conversions"
        ],
        "Constants": [
          "const and final"
        ],
        "Collection Structures": [
          "List",
          "Set",
          "Map"
        ],
        "Operators": [
          "operators"
        ],
        "Control Structures": [
          "If Structure",
          "If Else",
          "If ElseIf"
        ]
      },
      "requirements": [
        "No experience or prior programming knowledge is needed."
      ],
      "description": "Flutter is a powerful technology developed by Google that allows us to develop applications for both Android and iOS platforms by writing code once. Flutter, which allows us to develop high-performance mobile applications in a short time, has become a popular technology in a very short time thanks to this advantage.\n\n\nAlthough it is a relatively new technology, Flutter has started to be used by many companies, including world giants, and its use is increasing day by day. By starting to learn Flutter as soon as possible, you can become a qualified software developer sought after by large companies around the world.\n\n\nIf you are an entrepreneur who wants to implement your own projects, you can find all the information you need in this course, from the coding stage to the publishing stage of the application, and realize your dream project.\n\n\nNot only will you learn how to realize your dream project with the information in the course, you will also be able to introduce your project to users by learning how to upload your application to the Play Store and App Store.\n\n\nThis course, which covers every aspect of Flutter, does not require any prior knowledge and aims to teach Flutter to people who do not have any programming experience.\n\n\n\n\n\n\nEnjoy watching.",
      "target_audience": [
        "Those who want to learn Dart and Flutter from scratch",
        "Android ve iOS platformları için mobil uygulama geliştirmek isteyenler"
      ]
    },
    {
      "title": "Build Mobile Apps With No Coding",
      "url": "https://www.udemy.com/course/build-e-commerce-mobile-apps-with-no-coding/",
      "bio": "This course demonstrates concepts for creating E-commerce Android/iOS mobile applications with no coding!",
      "objectives": [
        "Create dynamic mobile applications with no programming!",
        "Create E-commerce mobile applications and sell products on mobile devices!"
      ],
      "course_content": {},
      "requirements": [
        "No prior mobile app development experience required",
        "No prior E-commerce or coding experience required"
      ],
      "description": "How about creating an E-commerce mobile app to sell your products? How about creating an app for a restaurant or for other types of businesses? This is exactly what you will be able to do by end of this course and without any programming!\nJust like our other courses, some of the videos of this course are available for preview so that you can get an advanced idea of the materials. This course covers fundamental concepts including, setting up mirroring of your device as an emulator, adding products, setting up payment options, testing your app in a real mobile device, monetize ads to earn money, create e-commerce and restaurant apps and publishing apps on android and ios app stores. You can create mobile apps for your business or earn money by publishing mobile apps on app stores. Building and monetizing advertisements on your app has never been easier before. We demonstrate all the revolutionary tools and platforms you need to get started with your mobile apps and customize them. Mobile app development industry is booming and the demand for mobile app developers is increasing day by day. Everything is going mobile now and we need to keep up with the trend in order to keep up with the competition. A lot of wanted to create mobile apps but never had enough time and resources to learn any type of programming. If you already have a E-commerce business or website and want to take your business to the next level by creating android/ios/windows mobile application, then this is the right course for you. You can start offering your products through mobile devices and capture even a bigger market. Nowadays, consumers tend to use smart phones to shop online instead of using traditional websites. You can also create your own E-commerce or other type of mobile applications without worrying about any coding! This course covers detailed steps on creating mobile applications without any programming. Don't wait any longer to build your own apps. Let's enroll and get started to take your entrepreneurship to the next level.",
      "target_audience": [
        "Individuals with great passion to learn mobile app development should take this course",
        "Entrepreneurs and E-commerce business owners should take this course"
      ]
    },
    {
      "title": "The Complete React Native Masterclass for Beginners",
      "url": "https://www.udemy.com/course/introduction-to-react-native/",
      "bio": "Master React Native for web development",
      "objectives": [
        "Develop cross-platform (iOS and Android) mobile apps",
        "Create real-world native apps using React Native",
        "Dive deeper into React Native",
        "An"
      ],
      "course_content": {
        "Introduction to the Course": [
          "01 Introduction To React Native"
        ],
        "(Prerequisites) Learn HTML, CSS and JavaScript": [
          "01. Course Requirements",
          "02. HTML, CSS and JavaScript crash course",
          "03. Adding in Functions",
          "04. Scaling functions",
          "05. Changing the Text in JavaScript",
          "06. Variables",
          "07. Arrays",
          "08. Objects",
          "09. Variable Scope",
          "10. Adding user input text",
          "11. Calling Functions",
          "12. If Statements",
          "13. Else if and Else Statements",
          "14. Changing the style with JavaScript",
          "15. Thanks for watching here is a fantastic deal for you!"
        ],
        "How React Native Works": [
          "02.01 What We Will Learn",
          "02.02 What Is React Native",
          "02.03 How React Native Works",
          "02.04 Expo Vs React Native Cli",
          "02.05 Building First React Native App",
          "02.06 Run The App On Android Simulator",
          "02.07 Run The App On Ios Simulator",
          "02.08 Summary And Challenge",
          "Source Files"
        ],
        "03. Build Your First React Native App": [
          "03.01 What We Will Learn",
          "03.02 How To Work With React Native Components",
          "03.03 Set Up A New Project",
          "03.04 Plan The App",
          "03.05 Work With Core Components",
          "03.06 Summary And Challenge",
          "Source Files"
        ],
        "04. Build App Layout": [
          "04.01 What We Will Learn",
          "04.02 Work With Styles And React Native Flexbox",
          "04.03 Inline Styles And Stylesheet Object",
          "04.04 Summary And Challenge",
          "Source Files"
        ],
        "05. Build a List": [
          "05.01 Build A List",
          "05.02 Work With State And Events",
          "05.03 Output A List Of Items",
          "05.04 Build A Flatlist",
          "05.05 Summary And Challenge",
          "Source Files"
        ],
        "06. Component Events": [
          "06.01 Component Events",
          "06.02 Split The App Into Components",
          "06.03 - Pass Data Between Components",
          "06.04 - Build Touchable Components",
          "06.05 - Summary And Challenge",
          "Source Files"
        ],
        "07. Improve App Layout": [
          "07.01 Improve App Layout",
          "07.02 Add A Modal Overlay",
          "07.03 More Flexbox And Modal Closing",
          "07.04 Summary And Challenge",
          "Source Files"
        ],
        "08. Build a Responsive App": [
          "08.01 Build A Responsive App",
          "08.02 Build A Responsive App",
          "08.03 Working With Images",
          "08.04 Dimensions",
          "08.05 Summary",
          "Source Files"
        ],
        "09. More Responsivity Tools": [
          "09.01 What You'll Learn",
          "09.02 Work With Platform",
          "09.03 Safeareaview",
          "09.04 Summary And Challenge",
          "Source Files"
        ]
      },
      "requirements": [
        "Basic understanding of Javascript",
        "Anyone who wants to create apps using React Native",
        "Anyone who wants to know the basics of React Native"
      ],
      "description": "React Native is an excellent solution for developing apps on mobile in a fraction of the time it takes to make an equivalent iOS or Swift app. You'll love seeing your changes instantly appear on your own device, rather than waiting for Swift/Java code to recompile! This quick feedback loop, along with excellent cross platform support, is what has catapulted React Native to the top must-have skill for Javascript engineers.",
      "target_audience": [
        "This course is for anyone looking to make native apps with React Native",
        "Anyone interested developing apps",
        "Anyone who wants to learn React Native"
      ]
    },
    {
      "title": "Learn how to build pose detection deep learning iPhone app",
      "url": "https://www.udemy.com/course/learn-how-to-build-pose-detection-deep-learning-iphone-app/",
      "bio": "Learn to build real time pose detection in video and images using Posenet algorithm, coreml and computer vision",
      "objectives": [
        "Use apple's coreml and vision api to detect pose in images and videos on mobile devices"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "About Author"
        ],
        "Fundamentals of deep learning": [
          "What is deep learning?",
          "Difference between Machine Learning, Deep Learning and Artificial Intelligence",
          "Why deep learning is taking off?"
        ],
        "Internals of deep learning": [
          "Linear Regression",
          "Logistic regression",
          "Cost Function",
          "Gradient Descent"
        ],
        "Deep Learning networks": [
          "Multi Layer Perceptron",
          "CNN",
          "Posenet"
        ],
        "Developing Livecapture": [
          "Application Overview",
          "Setting up Video Capture Part I",
          "Setting up Video Capture Part II",
          "Setting up Video Capture Part III"
        ],
        "Developing Posenet model , input and output": [
          "Using Posenet model to detect poses part I",
          "Developing Posenet output part I",
          "Developing Posenet outoput part II",
          "Developing posenet output part III",
          "Developing Posenet output part IV",
          "Developing Posenet model inference"
        ],
        "Developing Posenet Builder": [
          "Pose Configuaration and Pose Structure",
          "Pose Builder",
          "Single Pose Builder",
          "Multiple Pose Builder Part I",
          "Multiple Pose Builder Part II",
          "Multiple Pose Builder Part III"
        ],
        "Developing viewcontroller": [
          "Configuration View Controller Part I",
          "Configuration View Controller Part II",
          "PopOver Presentation View Controller",
          "Pose Image View",
          "Pose Image View Part II",
          "Main View Controller"
        ],
        "Running Posenet App": [
          "Pose detection",
          "Next Steps"
        ]
      },
      "requirements": [
        "Swift"
      ],
      "description": "Course Description\nLearn to build real time pose detection iPhone app using Posenet deep learning algorithm.  Deep learning is popular where a machine can be trained to detect poses in video and images.  Once trained, it can be used to detect poses in any video or image. The app does not require any wifi or cellular connectivity.  It uses deep learning and pretrained posenet model. It leverages apple's coreml and vision SDK to achieve pose detection entirely on the phone. Since the app does not send your images or vides to remote service, it maintains your privacy and data secured.\n\n\nBuild a strong foundation in pose detection engines  with this tutorial for beginners.\nUnderstanding fundamentals of pose detection\nUnderstanding fundamentals of deep learning and CNN\nBenefits of posenet for fitness apps\nBuild a real life pose detection in video using posenet, computer vision, coreml and swift\nBuild a real life pose detection in image  using posenet, computer vision,, coreml and swift\n\n\nA Powerful Skill at Your Fingertips  Learning the fundamentals of real time pose detection  puts a powerful and very useful tool at your fingertips. swift, posenet and coreml are free, easy to learn, has excellent documentation.\nNo prior knowledge of CNN or deep learning is assumed. I'll be covering topics like CNN from scratch.\nJobs in computer vision area are plentiful, and being able to learn real time object detection will give you a strong edge. YOLO is  state of art technology that can quickly help you achieve your goal.\nLearning pose detection with posenet will help you become a computer vision developer which is in high demand.\n\n\n\n\nContent and Overview\nThis course teaches you on how to build real time pose detection engine using open source posenet, coreml and swift .  You will work along with me step by step to build following answers\nReal time pose detection in Video\nReal time pose detection in image\nFundamentals of CNN and posenet\n\n\nWhat am I going to get from this course?\nLearn posenent and build real time pose detection engine from professional trainer from your own desk.\nOver 15 lectures teaching you how to build real time pose detection engine\nSuitable for intermediate programmers and ideal for users who learn faster when shown.\nVisual training method, offering users increased retention and accelerated learning.\nBreaks even the most complex applications down into simplistic steps.\nOffers challenges to students to enable reinforcement of concepts. Also solutions are described to validate the challenges.",
      "target_audience": [
        "Intermediate mobile developers who would like to get into deep learning and computer vision area"
      ]
    },
    {
      "title": "Build Real World Cinema Ticket Booking App with .NET MAUI",
      "url": "https://www.udemy.com/course/build-real-world-cinema-ticket-booking-app-with-net-maui/",
      "bio": "Learn to make Cinema Ticket Booking App with .NET MAUI",
      "objectives": [
        "Make Cinema Ticket Booking App with .NET MAUI",
        "Work as a freelance .NET MAUI developer",
        "Create your first .NET MAUI Real World Application",
        "Build fully-fledged apps for your startup or business",
        "Deploy Rest Api's to Microsoft Azure",
        "Consume Restful api's in .NET MAUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "App Overview"
        ],
        "Configure Application Backend": [
          "How to get Api's ?",
          "Create Azure Web App",
          "Create Azure MSSQL Database",
          "Publish Rest Api's to Azure"
        ],
        "Test Rest Api Endpoints": [
          "Api Documentation",
          "Test Users Endpoints",
          "Test Movies Endpoints",
          "Test Screening and Seats Endpoints",
          "Test Reservations Endpoints"
        ],
        "Getting Started with .NET MAUI Project": [
          "Create a new Project",
          "Import Assets inside MAUI Project"
        ],
        "Create Model Classes": [
          "Create Models For Users & Movies",
          "Create Models For Seats , Screening & Reservations"
        ],
        "Create Service Layer": [
          "Register User Method",
          "Static Methods",
          "Login Method",
          "ApiUrl",
          "Movie Methods",
          "Seats & Screening Methods",
          "Reservations Methods"
        ],
        "Signup & Login Page": [
          "Implement Registration Page",
          "Implement Login Page",
          "Use Shell Tab Pages",
          "One time login with access token"
        ],
        "HomePage": [
          "Implement Home Page",
          "Display Trending Movies",
          "Display Now Playing & Latest Movies"
        ],
        "Movie Detail Page": [
          "Collection view Navigation to Detail Page",
          "Display Movie Details",
          "Implement Read More Functionality",
          "Display Screening Data",
          "Pass Data To Seats Page"
        ],
        "Seats Page": [
          "Implement Seats Page",
          "Display Seats Data",
          "Working with Seat Selection",
          "Image button clicked event",
          "Reserve Seats"
        ]
      },
      "requirements": [
        "You should be familiar with C# , Xamarin Forms or .NET MAUI.",
        "At least 3-6 months experience with Xamarin Forms / .NET MAUI and XAML",
        "Visual Studio 2022 with windows Or Mac Edition whatever suits you."
      ],
      "description": "Welcome to the Real World Cinema Ticket Booking App Development course with .NET MAUI.\nI'm Asfend Microsoft Most Valuable Professional (MVP) as well as the Xamarin University Most Valuable Professional and in this course I'll explain you every single aspect of real world application in .NET MAUI. Yeah I know there're lot of courses over internet but there's never a single guide that teaches you how to create a real world application. And the purpose of this course is to train you to build your own Real world Application in .NET MAUI.\n\nThis courses teaches you how to code using .NET MAUI and build beautiful Android and iOS apps by using .NET MAUI.\nBy getting this course, you can be rest assured that the course is carefully thought out and edited. And I'm always happy to answer student questions.\nSo by the end of the course, you'll completely understand:\nHow to build a real world application with .NET MAUI\nDeploy Rest Api's to Microsoft Azure\nConsume Restful Api's.\nConsume Nuget's in .NET MAUI\nCreate a Complete Real World (Cinema Ticket Booking) Application in .NET MAUI From Scratch to End.\nHow to make asynchronous API calls, store and retrieve data from the api, and use the JSON format for server communication\nMake application user friendly\nWorking with Collection View and much more\n\n\n\n\nRemember...\nAfter this course you'll get all the .NET MAUI Real World Application Source Code and along with this I'll also share a Complete Backend Code for the Rest Api's with you.\nIn this course I've used the Microsoft Azure for Api Deployment which means you must have a Microsoft Azure Account to publish the web api's.\nSo what are you waiting for? Click the buy now button and join the Complete Real World Cinema Ticket Booking App Development Course with .NET MAUI.",
      "target_audience": [
        "If you've a 3 to 6 months .NET MAUI experience , then take this course.",
        "If you're already a Xamarin Developer and wants to build application with .NET MAUI then take this course.",
        "If you want to make a complete Real World Application from start to finish then take this course."
      ]
    },
    {
      "title": "Swift Fundamentals: Mastering the Basics with Swift & iOS",
      "url": "https://www.udemy.com/course/swift-fundamentals/",
      "bio": "Learn the fundamentals of programming with an Ex-Meta Software Engineer! This is the first step to learning how to code",
      "objectives": [
        "Beginner-friendly content designed to demystify coding concepts.",
        "Step-by-step guidance from an experienced professional",
        "Hands-on exercises to reinforce your understanding.",
        "Real-world projects to apply your newfound skills."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting Started: What you need",
          "What is Programming?"
        ],
        "Fundamentals with Swift": [
          "Variables & Constants",
          "Operators",
          "String Interpolation",
          "Control Flow",
          "Dictionaries",
          "While Loops",
          "For Loops",
          "Functions",
          "Arrays",
          "Optionals",
          "Structs"
        ],
        "Exercises": [
          "Odd Even Values",
          "Exercise 2: Sum | Max | Min",
          "Exercise 3: Guest List",
          "Exercise 4: Shopping Cart"
        ]
      },
      "requirements": [
        "No programming experience required! All you need is a MacBook Computer"
      ],
      "description": "Introducing the Ultimate Coding Bootcamp for Complete Beginners!\n\n\nI am thrilled to announce the launch of our brand new coding bootcamp, exclusively designed for those who are eager to embark on an incredible journey into the world of programming.\n\n\nWhether you're a newbie with zero coding experience or someone who has always been fascinated by the art of programming, this bootcamp is your gateway to the vast realm of technology and innovation. We will cover the fundamentals of programming using Swift, one of the most powerful, versatile and beginner friendly languages out there!\n\n\nLed by myself, a former Senior Software Engineer at Meta, this bootcamp is carefully crafted to be beginner-friendly, providing a structured learning path that ensures you grasp concepts effectively and build a strong foundation in coding. We believe that everyone deserves the opportunity to learn and thrive in the digital age, and our bootcamp is tailored precisely for that purpose.\n\n\nThroughout the course, you will have access to engaging video tutorials, interactive coding exercises, and practical projects that reinforce your knowledge and skills. Our aim is to make the learning process enjoyable, interactive, and rewarding.\n\n\nWhat can you expect from our bootcamp\n- Beginner-friendly content designed to demystify coding concepts.\n- Step-by-step guidance from an experienced professional\n- Hands-on exercises to reinforce your understanding.\n- Real-world projects to apply your newfound skills.\n- Accessible learning materials available on YouTube.\n- Supportive and vibrant coding community.\n- A pathway to kickstart your programming journey!",
      "target_audience": [
        "Complete beginners looking to learn how to code"
      ]
    },
    {
      "title": "Build 5 Augmented Reality Apps with Unity,ConvAI & Vuforia.",
      "url": "https://www.udemy.com/course/build-5-augmented-reality-apps-with-unityconvai-vuforia/",
      "bio": "Augmented reality (AR) Tutorials on Markerless Tracking, Convai Artificial Intelligence AR, 3D + more with Unity 2024.",
      "objectives": [
        "Understand different forms of Augmented Reality and their applications",
        "Creating an interactive business card using AR Virtual buttons",
        "An AR greeting card app, which plays sound, and animation once opened.",
        "Placing a life size drone in air using Vuforia Mid Air feature.",
        "Understand the basic difference between Virtual Reality & Augmented Reality",
        "Understand the basic difference between Virtual Reality & Augmented Reality",
        "Setting-up the development environment to design AR applications",
        "Select free and compatible 3D models for designing AR applications",
        "Understand the potential of augmented reality for businesses",
        "Understand the potential of augmented reality for businesses",
        "Propose Augmented Reality applications as solutions to real-world problems",
        "Build and deploy AR applications to mobile phones"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "What's Inside the Course.": [
          "What's Inside the Giveaway.",
          "How to Avail Giveaway.",
          "Blender 300+ Addons Giveaway."
        ],
        "AR Apps That Will You Learn To Build.": [
          "Convai - Conversational AI for Virtual Worlds.",
          "Space AR Marker Based AR App.",
          "Ground Plane And Mid Air AR App.",
          "Heart AR Marker less Augmented Reality App.",
          "Space AR Marker less Augmented Reality App.",
          "Godzilla New AR App."
        ],
        "Information about Augmented Reality.": [
          "Types of augmented reality and How it works ?"
        ],
        "Getting Started with Installation of Development Setup.": [
          "What is Unity3d and Use of it ?",
          "Create Unity3d Account and See How To Install It On Our PC.",
          "What is Vuforia and How To Create Vuforia Developer Account ?",
          "How To Import Vuforia SDK In Unity3d ?"
        ],
        "Getting Ready to Build Augmented Reality Application.": [
          "Basics of Unity3d.",
          "Download 3D Model For Free and How To Import In Unity3d ?",
          "Create Godzilla AR Unity Project and Import 3D Model.",
          "Configure Vuforia SDK and Setting Up Image Target.",
          "Place 3D Model on Image Target and Testing With Webcam.",
          "Setup Animator Controller For 3D Model.",
          "Import unity VFX Asset In Our Godzilla AR Unity Project.",
          "Add VFX Prefabs On Our 3D Model.",
          "Create New Character Animation With Unity VFX.",
          "Add Audio FX To Our Character Animation.",
          "Setup UI and Set Trigger Function For Character Interaction.",
          "Android App Build Setting For Godzilla AR."
        ],
        "Vuforia Mid Air & Ground Plan.": [
          "Vuforia Ground Plan IronMan AR.",
          "Vuforia Mid Air Drone AR."
        ],
        "Godzilla AR Ground Plane.": [
          "Create Unity AR URP project & Setup Vuforia SDK.",
          "Setup Vuforia Ground Plane & Import Godzilla 3D Model.",
          "Setup Animation Controller & Import Unity VFX.",
          "Attach VFX Particle system and audio file on Godzilla 3D Model.",
          "Create New Animation With VFX & Audio."
        ],
        "Convai - Conversational AI for Virtual Worlds.": [
          "What Is Convai & Main Features of Canvai.",
          "Setup Convai Unity Project & Build App.",
          "How To Fix Convai AR Light Issue."
        ],
        "Bonus Video.": [
          "Download Godzilla AR Unity Project and How to Configure it properly.",
          "How To Avail Unity3D 100+ Assets Giveaway."
        ]
      },
      "requirements": [
        "A Windows or Mac Computer system",
        "Android SmartPhone or an iPhone",
        "Basic programming knowledge will be of Great help",
        "You just need to have the passion and interest to learn new technologies"
      ],
      "description": "Curious about Augmented Reality, You have come to the right place. Learn the basics fundamentals and programming techniques required for building fully functional Augmented Reality android and iOS apps. For this course you will need an Android Smartphone or iPhone.\nSo what is Augmented Reality?\nAccording to Wikipedia, Augmented reality (AR) is a live direct or indirect view of a physical, real-world environment whose elements are \"augmented\" by computer-generated or extracted real-world sensory input such as sound, video, graphics or GPS data.\nIn Augmented Reality the real view is modified by a computer (Smartphone in this case). Augmented reality (AR) enhances one’s current perception of reality, whereas in contrast, virtual reality replaces the real world with a simulated one. Augmentation techniques are basically performed in real time,\nEg : Displaying live scores and statistics inside a live video of a sporting event\n\n\nPower of Augmented Reality\nI came across Augmented Reality in 2015 after watching a video of Augmented Reality Book. I was fascinated to know that such technology actually exists. So I started researching on different Augmented Reality platform. Vuforia platform seemed very promising as developers all over the World have used Vuforia for developing Augmented Reality apps.\nPokemon Go game is the best example of Augmented Reality. Other than that Augmented Reality apps expand over a wide range of topics from Education, Business, Architecture, Health Industry, Home Decoration and obviously mobile gaming.\n\n\nCourse Content and Overview\nThis course is designed for students interested in creating Augmented Reality apps. No coding experience is required; all you need is an Android or iOS device for testing your Augmented Reality apps. We will start from basics of Unity, C# platform and then move to higher topics\nIntro & Basics of Augmented Reality\nIn the first section you will first understand as to what is Augmented Reality? Next we will look at the four different augmented reality techniques and its application. After this I will explain you what is Virtual Reality and the differences between Augmented Reality (AR) & Virtual Reality (VR)\nBasics of Unity\nAfter understanding Augmented Reality next we will look at the basics of Unity as Unity is the main software which we will use for building Augmented Reality apps.\nAugmented Reality One (ARONE) application\nARONE is the first Augmented Reality Application which you are going to create. In this app you will\nCreate Vuforia account\nCreate License Key for the AR app\nUpload an Image as Image Target\nUnderstand Vuforia Image Recognition system\nSolution to White ImageTarget problem in Vuforia version 6.2.10\nDownload 3D model from Unity Asset Store\nPlace 3D Model on top of Image Target\nDownload ARONE app database from Vuforia and activate it inside Unity\nBuild this app for Android & Ios\nAugmented Reality Book (ARBOOK) application\nIn the ARBook application we will first create few sketches inches a drawing book. Next we will download some 3D Models from the asset store and project the 3D Model on top of each image target.\nApplication like ARBOOK can be implemented in Schools & Colleges for teaching complicated subjects in a fun and easier way.\nVirtual Button & Augmented Reality Business Card (ARBusinessCard)\nIn this section I will explain first explain you the concept of Virtual Button in Vuforia and the six important factors that should be considered while working with Virtual Button.\nNext you will create a simple Virtual Button app called AugmentedRealityVirtualButton in which you will understand the important function & interface that are required for working with Virtual Button.\nAfter the ARVirtualButton app we will then create and ARBusinessCard. In the ARBusinessCard app you will first place multiple virtual buttons on top of an Image Target. Next I will show you how to play video file inside Unity, After this we will write a C# script to play a particular video when the virtual button for a particular video is pressed\nAugmented Reality Greeting Card\nIn this section, you will learn the process of detecting multiple image targets simultaneously at the same time. You will also add an mp3 file in the app that will start playing only when the greeting card is opened.\n\n\nSuperimposition based AR | Object tracking –\nIn this section you will first scan a 3D model using Vuforia’s 3D scanning android application. Next we will import this model inside Unity and on top of this model we will superimpose a digital car.\n\n\nCylindrical Object tracking\nIn this section you will learn the technique for detecting a cylindrical object. After detecting the cylindrical object you will create a beautiful 3D scenic view around the cylinder with the help of airplanes, low poly clouds and low poly terrains.\n\n\nVuforia Cloud Recognition\nIn this section you will understand the working of Vuforia cloud databases. You will create an application called BookInfoAR. This application will scan a book cover(marker) and display information panel beside the book cover. The information of the marker is stored in cloud database.\n\n\nGround Planes and MidAir\nIn this section you will create your first markerless augmented reality using Vuforia Ground Plane. With ground plane feature we will place a lifesize Lamborghini model in real world. Next using the MidAir feature we will place a drone in mid air.\n\n\nUser Defined Target\nIn this section you will understand a feature called User Defined Target feature from the Vuforia Core Sample. With the help of User Defined Target feature we can use any image as an marker.\nSo after explaining you the course content I hope to see you inside this Augmented Reality course",
      "target_audience": [
        "Computer programming students interested in C# programming for building Augmented Reality applications",
        "Unity Developers interested in Augmented Reality platforms",
        "Anyone who wants to develop their own AR Applications",
        "Researchers who are looking forward to create AR apps",
        "Teachers who are looking forward to create educational AR apps to uplift their teaching strategies"
      ]
    },
    {
      "title": "Goodbye GCD: Embracing async/await in Your SwiftUI Journey",
      "url": "https://www.udemy.com/course/goodbye-gcd-embracing-asyncawait-in-your-swiftui-journey/",
      "bio": "A practical guide to async/await in Swift using DispatchQueue as your bridge from UIKit to structured concurrency",
      "objectives": [
        "Understand the fundamentals of concurrency and asynchronous programming in Swift.",
        "Compare and contrast DispatchQueue and async/await for managing asynchronous tasks.",
        "Safely handle shared mutable state using actors to prevent race conditions.",
        "Refactor legacy code using structured concurrency for better readability and safety.",
        "Apply @MainActor and task isolation to safely manage UI updates in SwiftUI.",
        "Identify and resolve callback hell by converting closures into async/await patterns.",
        "Trace thread context and execution flow between background and main threads.",
        "Build concurrency-safe services and view models using both GCD and structured concurrency."
      ],
      "course_content": {},
      "requirements": [
        "Familiarity with Swift syntax and basic data types",
        "Experience working with classes, structs, and functions in Swift",
        "Basic understanding of UIKit or SwiftUI view structure",
        "Ability to read and write asynchronous code using completion handlers",
        "General knowledge of Xcode and running iOS projects",
        "Prior experience using DispatchQueue for background tasks",
        "Understanding of optionals, error handling, and closures in Swift",
        "Comfort working with model-view-viewmodel (MVVM) architecture",
        "Ability to follow code samples and debug with breakpoints",
        "Working knowledge of JSON decoding using Codable"
      ],
      "description": "Are you a Swift developer still reaching for DispatchQueue every time you need to go async? Do terms like @MainActor, Task, and actor feel abstract or disconnected from the kind of code you actually write every day?\nThis course is your bridge.\n\"Goodbye GCD\" is a clear, practical, and no-fluff introduction to modern Swift concurrency — built specifically for developers like you who know how to use DispatchQueue but want to understand and fully adopt async/await.\nWe don’t assume you’re starting from scratch, nor do we bury you in theory. Instead, this course meets you where you are: inside real-world mobile code. We use DispatchQueue as a familiar reference point to explain how structured concurrency works, why it exists, and how you can use it to write cleaner, safer, and more maintainable Swift.\nYou’ll see exactly how async/await improves upon traditional approaches, how to think in terms of thread context and task suspension, and how features like @MainActor and actor solve problems you’ve likely encountered but had to hack around.\nBy the end of the course, you won’t just know how to use Swift concurrency — you’ll understand how it thinks.\nWhether you’re transitioning from UIKit to SwiftUI, refactoring legacy code, or preparing for your next big iOS role, this course will equip you with the concurrency foundation modern apps demand — without wasting your time.\nIf you’re ready to move beyond callback hell and take control of concurrency in Swift the right way, this course is for you.",
      "target_audience": [
        "UIKit developers transitioning to SwiftUI and structured concurrency",
        "iOS engineers looking to modernize legacy GCD-based code",
        "Developers who struggle with managing async tasks and thread safety",
        "Swift developers curious about the actor model and structured concurrency",
        "Intermediate Swift learners ready to go beyond basics",
        "Mobile developers seeking better ways to handle background work",
        "Programmers looking to write cleaner, more maintainable async code",
        "SwiftUI users who want to safely update UI in concurrent environments",
        "Engineers preparing for iOS interviews with concurrency topics",
        "Teams modernizing their app architecture to use Swift's async/await model"
      ]
    },
    {
      "title": "KivyMD | Learn Basics of KivyMD | Develop Apps",
      "url": "https://www.udemy.com/course/kivymd-learn-basics-of-kivymd-develop-apps/",
      "bio": "Python GUI",
      "objectives": [
        "KivyMD Basics",
        "Design your own apps",
        "How KivyMD works",
        "Become proficient in KivyMD"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Getting Strarted with Kivymd"
        ],
        "Themes": [
          "Theme Basics",
          "Material App",
          "Color Definitions",
          "Icon Definitions",
          "Font Definitions"
        ],
        "Components": [
          "Anchor Layout",
          "Backdrop",
          "Bottom Navigation",
          "Bottom Sheet",
          "coming soon"
        ]
      },
      "requirements": [
        "You will learn everything you need to know."
      ],
      "description": "The KivyMD Basic course is a comprehensive and hands-on learning program that provides an introduction to the KivyMD framework. KivyMD is a UI toolkit that is built on top of Kivy, an open-source Python library used for creating multi-touch applications. The KivyMD framework provides a set of pre-designed, material design widgets that enable developers to quickly and easily create beautiful and responsive user interfaces for their applications.\nThe KivyMD Basic course covers the fundamentals of the KivyMD framework, including its structure, components, and layout, as well as how to use its widgets and customize them according to your application's requirements. The course is suitable for beginners who have a basic understanding of Python programming language and want to learn how to create professional-looking user interfaces using KivyMD.\nThe course is designed to be interactive and engaging, with plenty of hands-on exercises and projects that allow students to apply what they have learned. Throughout the course, students will learn how to create different types of KivyMD widgets, such as buttons, labels, cards, dialogs, and menus, and how to arrange them on the screen using layouts.\nBy the end of the KivyMD Basic course, students will have the skills and knowledge required to create their own material design user interfaces for their Python applications using the KivyMD framework. The course provides an excellent foundation for students who wish to pursue advanced KivyMD programming or specialize in mobile app development.",
      "target_audience": [
        "Working Professionals beginning their Python GUI using KivyMD"
      ]
    },
    {
      "title": ".NET MAUI UI Challenges: AI Image Generator App",
      "url": "https://www.udemy.com/course/net-maui-ui-challenges-ai-image-generator-app/",
      "bio": "Turn Dribbble designs into a working reality with .NET MAUI in this hands-on UI course.",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Creating the Menu Icon and Profile Image",
          "Creating the headers",
          "Generating the friends list section",
          "Filling the image card information",
          "Implementing the image slider control",
          "Creating the button"
        ],
        "Bonus Section": [
          "More free .NET MAUI tutorials"
        ]
      },
      "requirements": [
        "Basic knowledge of C# and .NET programming.",
        "Previous experience with mobile application development."
      ],
      "description": "Welcome to the \".NET MAUI UI Challenges: AI Image Generator App\" course. In this course, you will learn how to create the XAML file for a page from a Dribbble design, using .NET MAUI technology. Throughout the course, we will teach you how to translate a Dribbble design into a functional XAML file for your application.\n\n\nIn this course, we will focus on teaching you how to write XAML code, using the available resources in .NET MAUI. You will learn to understand the structure of the XAML file and how to use design components to create impressive application pages.\n\n\nThis course is suitable for both beginners and experienced developers. If you are new to .NET MAUI application development, this course will provide you with the necessary tools to start creating impressive application pages. If you are already an experienced developer, you will learn new techniques to improve your design skills and create more efficient applications.\n\n\nBy the end of the course, you will have the skills necessary to create XAML files for complex Dribbble designs, using the available resources in .NET MAUI. If you are ready to improve your application development skills and create impressive designs, then this course is for you!",
      "target_audience": [
        "Students interested in .NET programming and developing mobile applications with attractive and user-friendly interfaces.",
        "People with previous experience in creating .NET applications who want to learn how to create advanced graphical interfaces using XAML.",
        "Students and professionals interested in learning about new technologies for mobile application development and improving their programming skills.",
        "Those who want to learn how to create modern and attractive user interfaces using dribbble design as inspiration."
      ]
    },
    {
      "title": "SwiftUI in Depth: Practical Code Examples in SwiftUI",
      "url": "https://www.udemy.com/course/swiftui-in-depth-practical-code-examples-in-swiftui/",
      "bio": "Learn SwiftUI in Detail to Create Beautiful Declarative UI",
      "objectives": [
        "Building iOS apps using SwiftUI framework",
        "Build Amazing Interfaces with SwiftUI",
        "Bind Your Data With Your UI",
        "Build Apps for All Apple Platforms"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "SwiftUI: A closer look": [
          "some View: generic return type explained",
          "Containers Explained",
          "TextView Explained",
          "More Text in SwiftUI",
          "Close look at Images in SwiftUI",
          "Images in SwiftUI",
          "SF Symbol Images",
          "Shapes in SwiftUI",
          "Using Color as View",
          "Close look at VStack",
          "HStack in Depth",
          "ZStack in Depth"
        ],
        "Controls in SwiftUI": [
          "Buttons in SwiftUI",
          "Date Pickers in SwiftUI",
          "Spacers in SwiftUI",
          "Forms in SwiftUI",
          "Static List in SwiftUI",
          "Dynamic List in SwiftUI",
          "Custom cell in List",
          "Deleting Cell in List",
          "Moving Cell in List",
          "Grouped List View",
          "Navigation View in SwiftUI",
          "Navigation Link in SwiftUI",
          "Geometry Reader",
          "Picker Control",
          "Multi Component Picker",
          "ScrollView in SwiftUI",
          "Custom View in ScrollView",
          "TextField and SecureField in SwiftUI",
          "Sliders in SwiftUI",
          "Shapes in SwiftUI",
          "Custom Progress Bar in SwiftUI",
          "Stepper in SwiftUI",
          "TabView with basic Tab in SwiftUI",
          "Custom View in TabView",
          "Complex CustomUI",
          "Fast Action Button or Floating Action Button in SwiftUI",
          "Underline TextField - Custom Reusable Control",
          "Clearable TextField in SwiftUI",
          "Password Toggle SecureField",
          "Image Processing in SwiftUI",
          "State management in Depth",
          "Advance Search in SwiftUI",
          "Binding Explained with Example",
          "State Binding at the cell level",
          "Move View Up When Keyboard opens up"
        ],
        "Gestures": [
          "Tap Gesture in SwiftUI",
          "Long Press Gesture",
          "Simple Drag Gesture",
          "Drag Gesture and Speed",
          "Drag Gesture with GestureState",
          "Drag Gesture with State Retention",
          "Bottom Drawer using Drag Gesture",
          "Pulsating Button Animation",
          "Magnification / Pinch Gesture",
          "Constrained Pinch / Magnification Gesture",
          "Rotation Gesture",
          "Simultaneous Gesture",
          "Sequence Gesture",
          "Exclusive Gesture"
        ],
        "Gradients": [
          "Angular Gradient",
          "Linear Gradient",
          "Radial Gradient",
          "Gradient Stop and UnitPoint",
          "ImagePaint"
        ],
        "Animation in SwiftUI": [
          "Basic Animation",
          "Animation Curve",
          "Spring Animation",
          "Interpolating Spring Animation",
          "Color Animation",
          "Hue Rotation Animation",
          "Neon Glow Effect Animation"
        ]
      },
      "requirements": [
        "Knowledge of Swift",
        "Basic knowledge of Xcode"
      ],
      "description": "In WWDC 19 Apple announced the next big thing in their dev community SwiftUI.\nSwiftUI is new way of creating UI/UX for your apps, in a declarative manner. By combining choices of views and modifiers you can create complex user interfaces with ease.\nSwiftUI helps data binding to User Interfaces easy with the introduction of Combine Framework. When the data changes, so does the UI and vice versa.\nSwiftUI is also incredibly reusable. Views you create can be reused time and time again.\nWith SwiftUI apple also introduced SwiftUI Previews in Xcode 11 and to show you in real time as how your code changes will effect the look of your app.\nIn this course we will take a deep dive into each component that builds SwiftUI. We will also build working apps after learning components and their properties.",
      "target_audience": [
        "iOS developers wanting to learn SwiftUI",
        "iOS developers wanting to learn declarative way of developing apps"
      ]
    },
    {
      "title": "Build a classic Snake game for Android",
      "url": "https://www.udemy.com/course/androidsnake/",
      "bio": "Remake one of your favourite classic mobile games in Android",
      "objectives": [
        "Build a game in Android",
        "Snake",
        "Build a classic game"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Resources",
          "Important message about Udemy reviews",
          "Engage on social media",
          "Android Studio",
          "Install Android Studio on a PC",
          "Install Android Studio on a Mac",
          "Create the Project"
        ],
        "Game layout": [
          "Create the Game Manager",
          "Create the Game Layout",
          "Finishing the Layout",
          "Draw the Board",
          "The Apple",
          "Draw the Snake"
        ],
        "Game Engine": [
          "Build the Game Engine",
          "Run the Engine",
          "Move the Snake",
          "Update the Snake Position",
          "Eating the Apple"
        ],
        "End Game": [
          "Implement Collision",
          "Restart the Game",
          "Keeping Score",
          "Fixing small bugs",
          "Sounds"
        ],
        "Conclusion": [
          "Conclusion",
          "Further resources",
          "Thank you"
        ]
      },
      "requirements": [
        "Basic understanding of Android development"
      ],
      "description": "This course is simply created as a fun weekend project, to help you build a classic Snake game in Android.\nI will go through the building process line by line to explain and help you understand how to build this fun game. We begin from scratch, creating an empty application and building our game step by step.\nI will not explain the fundamentals like what a function or a variable are, but I will explain each line of code to show you what it does and why.\nWe will build a simple game engine, simple graphics and simple gameplay, enough for this game to work fine on all devices out there. At the end, you will have a working, playable game that you can enjoy. Also, you will have a better idea of how games are implemented on a basic level on Android, what a game engine is and how to structure your code.\nNot only do we build the game and you have a working application at the end, but you also get to enjoy the classic game of snake that was very popular back in the day. You can also publish it as an app if you like.\nSo if you enjoy a bit of nostalgia and are interested in building this game, sign up for this course and let's get started.",
      "target_audience": [
        "Beginner developers",
        "Students who enjoy development projects"
      ]
    },
    {
      "title": "The Art Of App Design & Marketing",
      "url": "https://www.udemy.com/course/the-art-of-app-design-marketing/",
      "bio": "Learn how to reach users, and get them to download your app. Leaving your competitors in the dust!",
      "objectives": [
        "We will teach you the main design principles to keep in mind when creating your app icon and splash image.",
        "We will teach you how to write mobile-optimized content for your mobile site and application.",
        "We will teach you how to cut through the noise and let the world know about your amazing app.",
        "We will also fill your mind with app knowledge, and other tips, tricks and techniques."
      ],
      "course_content": {
        "Time To Get Started": [
          "What Will We Be Covering On This Course"
        ],
        "Why Mobile Apps": [
          "Mobile Apps VS Mobile Web",
          "Mobile Optimize Your Website Or Web Optimize Your Mobile App",
          "Responsive Web Design VS HTML5 Approach",
          "Native Apps VS Web Apps",
          "Why You Should Be Creating Cross Platform Apps"
        ],
        "Mobile Apps Is Where The Action Is": [
          "Mobile Trends For 2014",
          "Golden Rules For Successful Apps"
        ],
        "Taking Your Business Mobile": [
          "Why Your Business Needs A Mobile App",
          "How Can Mobile Marketing Help Your Business Grow",
          "Just How Loyal Are Mobile App Users",
          "Tips For Using Mobile Coupons",
          "Best Practices To Building Your Mobile Community",
          "Improve Your Customer Care Through Mobile Apps"
        ],
        "App Icons & Splash Images": [
          "The Perfect Mix For App Success",
          "The Importance Of App Icons",
          "App Icon Size Criteria For The Stores",
          "Do's & Don'ts To Designing Great App Icons",
          "What Exactly Is A Splash Image",
          "How Splash Images Will Help My App"
        ],
        "Writing Mobile Optimized Content": [
          "Mobile Reading Habits",
          "Writing For Mobile"
        ],
        "Getting Your App Discovered": [
          "How To Reach Users",
          "Effectively Promoting Your App",
          "The A-Z Of App Promotion"
        ],
        "Tea Break": [
          "5 Businesses In Mobile Which Have Made Millions"
        ],
        "All About Push Notifications": [
          "What Are Push Notifications",
          "Creating A Successful Push Notification Strategy"
        ],
        "Your Mobile App Strategy": [
          "Mobile App Strategy Essentials",
          "Do App Download Numbers Really Matter"
        ]
      },
      "requirements": [
        "A Willingness To Dive Into The World Of App Design & Marketing"
      ],
      "description": "Research shows that getting the app discovered is the major problem faced by app developers! With over a million apps currently available across all major platforms, simply publishing an app is no longer enough.\nThis course is structured around three key principles to app success:\nDesign\nContent\nMarketing\nWhich when applied and utilized in the correct manner will maximize your chances of app success - we will teach you all this and a whole lot more on this course!\nSo how will this course exactly maximize your chances of app success:\nWe will teach you the main design principles to keep in mind when creating your app icon and splash image, to boost your chances of getting your app published in the stores and provide a high quality user experience at the same time.\nWe will teach you how to write mobile-optimized content for your mobile site and application for a thoroughly satisfying user experience.\nWe will teach you how to cut through the noise and let the world know about the amazing app that you have just created, taking your app to the next level.\nWe will also fill your mind with app knowledge, and other tips, tricks and techniques all catered to making your app a true success.\nEnroll on this course today, and take the leap to boosting your app's success!",
      "target_audience": [
        "Entrepreneurs",
        "Mobile App Designers & Developers",
        "Individuals Getting Started In The App World"
      ]
    },
    {
      "title": "iOS9 Apple Watch Toolkit: Make Real Apps From Scratch",
      "url": "https://www.udemy.com/course/the-complete-apple-watch-course-make-real-apps-from-scratch/",
      "bio": "Learn to Create iOS9 Apple Watch Apps using Swift. From Idea to App Store. No Experience Needed. Tips & Tricks inside.",
      "objectives": [],
      "course_content": {
        "Your First Watch App": [
          "What Does This Course Cover?",
          "Why This Is Amazing & Reason To Take This Course!",
          "Setting Up Your Coding Environment"
        ],
        "Swift": [
          "What is Swift?",
          "Strings, Ints, Doubles & Booleans",
          "Variables, Constants & Operators",
          "If, Else If & Else Statements",
          "Loops",
          "Comments",
          "Arrays",
          "Dictionaries",
          "Functions",
          "Classes",
          "Ready For A Quiz?"
        ],
        "The Apple Watch & WatchKit": [
          "Intro",
          "Glances & Notifications",
          "WKInterfaceController & WKInterfaceDevice",
          "Animations & Image Caching",
          "Settings Bundle & Sharing Data",
          "Ready For A Quiz?"
        ],
        "* App 1 * = Christmas Gifts": [
          "Intro",
          "Create Project & Add Apple Watch Target",
          "Create & Design Home Screen & Fire Up the Simulator",
          "Add Gift Screen & Connect to Home Screen Button",
          "Add Other Screens & Connect to Home Screen Buttons",
          "App ChristmasGifts (XCode Files)",
          "Exercise Time!"
        ],
        "* App 2 * = Inspire Me": [
          "Intro",
          "Create Project & Add Target & Add GUI Elements",
          "Create & Connect GUI Elements in Code",
          "Add Quotes Array & Explain Quote Index",
          "Implement Quote Index to Update Label Text",
          "App InspireMe (XCode Files)",
          "Exercise Time!",
          "Super Difficult Exercise Time!"
        ],
        "* App 3, 4, 5, ... * - Bring Your Own App Ideas To Life": [
          "Intro - You Can Create Any App!",
          "Step 1 - The Idea",
          "Step 2 - Sketch It Out",
          "Step 3 - Choose Your Frameworks & Controls",
          "Step 4 - Create Your MVP",
          "Step 5 - Get Feedback From Potential Users",
          "Step 6 - Polish Your Apps Design & Features",
          "Step 7 - Submit to App Store",
          "Step 8 - Update & Improve",
          "Ready For A Quiz?"
        ],
        "Marketing Your App - Let the World Know!": [
          "Facebook & Twitter",
          "YouTube",
          "Pinterest, Instagram & SnapChat",
          "Creating An App Landing Page",
          "Press Release Kit",
          "Blogs & Forums",
          "Reach Out to the Media"
        ],
        "Tips, Tricks & Helpful Hints": [
          "Tips for Success",
          "App Store Title, Description & Keywords",
          "App Store Images",
          "Gain Huge Interest Through Promotions",
          "Generic Designs",
          "Outsourcing"
        ],
        "Congratulations! (& Where Do You Go From Here?)": [
          "What Have You Learned & Accomplished?",
          "Thank You So Much... & Keep In Contact :)"
        ]
      },
      "requirements": [
        "An Apple Computer",
        "An iTunes Developer Account (to Download Xcode)",
        "A Web Browser (Safari or Chrome Will Do)",
        "An Internet Connection",
        "Determination & A Desire to Succeed"
      ],
      "description": "Would YOU like the skills & knowledge to create your own apps from idea generation to uploading to the app store?\n\nWould you like to generate recurring income, and impress potential employers with your own army of apps?\n... if the answer is yes, then you should take this course!\nWhat Is This Course About?\nThis course is about creating Apple Watch Apps from scratch, where no previous development experience is necessary. I will personally take you from the very beginning to the very end of creating your own Apple Watch Apps.\nWhy Take This Course?\nLearn App Development by Creating iOS8 Apple Watch Apps\nEnhance Your Knowledge of the Swift App Programming Language\nEnvision Your App Idea & Bring it to Life\nBuild Apps From Scratch & Submit to the Apple App Store\nMarket Your Apps, Successfully Generating Income\nBy the End of this Course, You Will be an App Developer\nReceive & Hang Your Certificate of Completion on the Wall\nHow Long Will This Course Take To Complete?\nThis course should take no longer than a couple of hours to a couple of days to complete, depending on how comfortable you currently feel with developing apps in Swift!\nWhy Learn This Course From Me?\nI have a degree in Computer Science from University College Cork, Ireland.\nI code safety applications used to control funfair rides, ski lifts and car conveyor belts for the likes of Ford, for a living.\nI eat and sleep code, basically coming up with new app / web ideas & implementing those ideas on a daily basis.\n... & I will also provide you with a 30 day money back guarantee, in case you don't like what I have to teach ;)",
      "target_audience": [
        "No Programming Experience Needed",
        "Anyone Who Would Like to Create Apple Watch Apps",
        "Whoever Wishes to Generate Recurring Income from Apps",
        "Not For People Who Are Happy With An Average Life",
        "For Those Who Don't Care About the Science & Just Want to Create Apps!"
      ]
    },
    {
      "title": "Monetizing Your Flutter App with AdMob",
      "url": "https://www.udemy.com/course/monetizing-your-flutter-app-with-admob/",
      "bio": "Learn how to integrate AdMob into your Flutter app and start earning today.",
      "objectives": [
        "Understand AdMob fundamentals for Flutter app monetization.",
        "Integrate AdMob into a Flutter app for monetization purposes.",
        "Differentiate between ad formats in AdMob and choose the best for an app.",
        "Learn how to create effective ad layouts and placements for maximum visibility and user engagement."
      ],
      "course_content": {
        "Module 1 - Project Configuration": [
          "Setup AdMob account",
          "Setup a Flutter Project",
          "Enabling Test Ads",
          "Creating AdHelper Class"
        ],
        "Implement Banner Ads": [
          "Bottom Banner Ad Screen",
          "Function to load Banner Ad",
          "Inline Banner Ad Screen",
          "Show data in a ListView",
          "Download the Code"
        ],
        "Implement Interstitial Ads": [
          "Interstitial Ad Screen",
          "Function to load Interstitial Ad",
          "Use WillPopScope Widget",
          "Implement Interstitial Video Ads",
          "Download the Code"
        ],
        "Implement Rewarded Ads": [
          "Creating Ad Unit",
          "Load and Show Rewarded Ads",
          "Download the Code"
        ],
        "Implement Native Ads": [
          "Implement NativeAdFactory API",
          "Function to load Native Ads",
          "Show data in a ListView",
          "Download the Code"
        ],
        "Implement App Open Ads": [
          "Create a Ad Manager file",
          "Work on AppOpenAd",
          "Listen to foreground events",
          "Working of the Application"
        ]
      },
      "requirements": [
        "Basic knowledge of Flutter and Dart programming language.",
        "Experience using the Flutter development environment and associated tools such as Android Studio, Visual Studio Code, or IntelliJ IDEA.",
        "A device or emulator to test the AdMob integration in the Flutter app."
      ],
      "description": "Mobile app development is an exciting and rapidly growing field, with millions of users worldwide downloading apps every day. However, developing and maintaining a high-quality app is only half the battle – the other half is monetizing it effectively to generate a reliable stream of income. This is where AdMob comes in. As Google's mobile ad platform, AdMob allows developers to display ads in their apps and earn revenue every time a user interacts with an ad.\n\n\nAdMob offers a variety of ad formats to choose from, including banner ads, interstitial ads, native ads, rewarded ads and app open ads. Banner ads are small, rectangular ads that appear at the top or bottom of your app's screen. Interstitial ads are full-screen ads that appear between screens or activities in your app. Native ads blend in with your app's design and feel more like content than traditional ads. Rewarded ads offer users a reward for watching an ad, such as extra lives or in-app currency.\n\n\nMonetizing your app with AdMob is crucial for a variety of reasons. First and foremost, it allows you to generate revenue from your app, which can help cover development costs and even turn a profit. Additionally, ads can provide users with valuable information or promotions that they might not have otherwise discovered.\n\n\nWhether you're a mobile app developer looking to monetize your app, a freelance developer seeking to offer AdMob integration services to clients, or an entrepreneur seeking to generate revenue from your app, this course will provide you with the essential tools and knowledge to succeed in the world of mobile app monetization.",
      "target_audience": [
        "Mobile app developers who want to learn how to monetize their Flutter apps using AdMob.",
        "Freelance developers who want to offer AdMob integration services to clients.",
        "Entrepreneurs who want to create revenue-generating apps using AdMob and Flutter.",
        "Students who are learning mobile app development and want to gain an understanding of how to monetize their apps using AdMob and Flutter."
      ]
    },
    {
      "title": "Augmented Reality Development for beginners [2022]",
      "url": "https://www.udemy.com/course/develop-ar-apps-using-unity-and-arfoundation-2020/",
      "bio": "Learn Unity, ARFoundation and XRInteractionToolkit to develop Augmented Reality Applications - a beginner friendly guide",
      "objectives": [
        "Augmented Reality",
        "ARFoundation",
        "Unity Fundamentals",
        "How to develop Augmented Reality apps with ARFoundation in Unity?",
        "How to incorporate 3D object interactions in Unity using XRInteractionToolkit?"
      ],
      "course_content": {
        "Section 1 : Unity Basics": [
          "1. Installing Unity",
          "2. How to create a new project in Unity?",
          "3. Unity Interface Overview",
          "4. Game Object Manipulation",
          "5. Importing Assets and Level Design Basics",
          "6. Game Object Components. Materials and Textures",
          "7. Move Game Object",
          "8. Physics & Rigid Bodies",
          "9. Mini Challenge"
        ],
        "Section 2 : Entering Augmented Reality": [
          "How to create an AR Hello World project in Unity with ZERO CODING",
          "How to test the Hello World Project in an Android Phone"
        ]
      },
      "requirements": [
        "A smartphone that supports Augmented Reality",
        "Absolutely nothing. You will be learning all the tools from scratch here in this course"
      ],
      "description": "In this course, you will learn how to create a basic Augmented Reality application using Unity, ARFoundation and XR Interaction Toolkit with little to no coding. XR Interaction Toolkit is a new tool from Unity that makes it very easy to develop interactions with virtual objects in Augmented Reality. You won't have to code at all to develop a basic augmented reality application. If you are a beginner, this course will help you create a basic AR application in no time.\nAugmented Reality is one of the hottest fields in tech right now. The user base for AR technologies is also expected to grow beyond 1 billion by 2022. It is likely to present a completely new way to engage and expand in sectors like military, retail, education, manufacturing industries, and healthcare.\nTherefore, it is a good time to get started with Augmented Reality Development and know about the various tools and techniques you can use to incorporate Augmented Reality Experiences into your applications. With the advent of AR glasses in the near future, all the prototypes that you develop today will prove to be incredibly useful in the future.\nGet hands-on experience in this course.\nThis course teaches you to create a basic Augmented Reality application using Unity, ARFoundation and XRInteractionToolkit",
      "target_audience": [
        "AR Enthusiasts",
        "Designers",
        "Software Developers",
        "Unity Developers",
        "Students",
        "Entrepreneurs"
      ]
    },
    {
      "title": "Learn Programming for App Development on the Apple Watch",
      "url": "https://www.udemy.com/course/learn-programming-for-app-development-on-the-apple-watch/",
      "bio": "Learn how to make watchOS apps and learn to code in Swift. Learn the secrets of HealthKit.",
      "objectives": [
        "Code in Swift.",
        "Build a simple watchOS app.",
        "Recognize the differences between coding for iOS and watchOS."
      ],
      "course_content": {
        "Introduction to Images in Swift": [
          "Images - Part 1",
          "Images - Part 2",
          "Source Code - WatchOS"
        ],
        "Introduction to Tables in Swift": [
          "Tables - Part 1",
          "Tables - Part 2",
          "Tables - Part 3",
          "Tables - Part 4",
          "Source Code - WatchOS"
        ],
        "Introduction to Movies in Swift": [
          "Introduction to Movies in Swift",
          "Source Code - WatchOS"
        ],
        "Introduction to Context Menu in Swift": [
          "Introduction to Context Menu in Swift",
          "Source Code - WatchOS"
        ],
        "Introduction to Activity Ring in Swift": [
          "Introduction to Activity Ring in Swift",
          "Source Code - WatchOS"
        ],
        "Introduction to Notifications in Swift": [
          "Introduction to Notifications in Swift",
          "Source Code - WatchOS"
        ]
      },
      "requirements": [
        "To follow along with these tutorials, you will need to have a Mac computer with Xcode 8 installed.",
        "The tutorials were recorded on a Mac."
      ],
      "description": "Do you want to build your own apps for the Apple Watch? Even if you have never coded before, you can build a watchOS app!\nYou do not need any prior knowledge to take this course – it is perfect for beginners! We cover basic programming concepts of Swift in Xcode.\nIf you do have experience developing for iOS, with this course you can learn the fundamentals of developing for watchOS. You will learn the notables differences between coding for iOS and watchOS.\nTo learn how to build the design and functionality of a watchOS app, we will create a simple app of our own in Xcode.\nMoreover, you will learn how to add images and movies into your Apple Watch apps. We will even enable notifications!\nYou will be able to test the app like a user would. By the end of this course, you will have a functioning app that you can expand on to add your own ideas.",
      "target_audience": [
        "Even if you have never coded before, you can learn to make a watchOS app. This course introduces basic concepts of coding in Swift and coding in general.",
        "If you have experience developing for iOS or macOS, with this course you can learn the foundations of developing on watchOS."
      ]
    },
    {
      "title": "Kotlin Mastery: Build 7 Real-World Android Apps from Scratch",
      "url": "https://www.udemy.com/course/the-complete-android-14-kotlin-development-build-7-apps/",
      "bio": "Step-by-Step Guide to Developing 7 Android Applications Using Kotlin",
      "objectives": [
        "Master the fundamentals of Android 14 development, including the latest features and updates",
        "Gain proficiency in Kotlin, Google's preferred programming language for Android apps.",
        "Build seven real-world applications, enhancing your hands-on coding experience.",
        "Design and implement user-friendly interfaces using modern UI principles.",
        "7 Apps in 7 Days: Master Android Development with Kotlin"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "1. Downloading and Installing Android Studio": [
          "1. Downloading and Installing Android Studio"
        ],
        "2. Creating Your First Project in Android Studio": [
          "2. Creating Your First Project in Android Studio"
        ],
        "3. Understanding the Android File System": [
          "3. Understanding the Android File System"
        ],
        "4. Working with Layouts, Buttons, and TextViews in Android Studio": [
          "4. Working with Layouts, Buttons, and TextViews in Android Studio"
        ],
        "5. Handling EditText and User Input in Android Studio": [
          "5. Handling EditText and User Input in Android Studio"
        ],
        "6. Utilizing SharedPreferences for Data Storage in Android Studio": [
          "6. Utilizing SharedPreferences for Data Storage in Android Studio"
        ],
        "7. Designing the UI for a Tip Calculator in Android Studio": [
          "7. Designing the UI for a Tip Calculator in Android Studio"
        ],
        "8. Implementing the Logic for a Tip Calculator in Android Studio": [
          "8. Implementing the Logic for a Tip Calculator in Android Studio"
        ],
        "9. Designing the UI for a Stopwatch in Android Studio": [
          "9. Designing the UI for a Stopwatch in Android Studio"
        ]
      },
      "requirements": [
        "Basic programming knowledge is helpful but not mandatory",
        "A computer with internet access and an eagerness to learn; no prior Android experience required."
      ],
      "description": "Welcome to \"The Complete Android 14 & Kotlin Development- Build 7 Apps\"! This comprehensive course is designed to take you from a beginner to a proficient Android developer using Kotlin, the modern programming language preferred by Google for Android development.\n\n\nIn this course, you will:\n\n\nLearn Android - Understand the latest features and updates in Android 14, ensuring your apps are up-to-date with current standards.\n-Master Kotlin-Dive deep into Kotlin, learning its syntax, advanced features, and how it seamlessly integrates with Android development.\nBuild 7 Real-World Apps-Gain hands-on experience by building seven diverse and fully functional applications, ranging from simple utilities to complex, feature-rich apps.\nUser Interface Design-Create attractive and user-friendly interfaces using modern design principles and Android’s UI components.\nDebugging and Testing-Understand how to effectively debug your code and test your applications to ensure they run smoothly on various devices.\n\n\nBy the end of this course, you will have a solid foundation in Android development, be comfortable using Kotlin, and have a portfolio of apps to showcase your skills. Whether you’re looking to start a new career, enhance your programming knowledge, or create your own apps, this course is the perfect place to begin.\n\n\nJoin now and take the first step towards becoming an Android developer. Enroll today and let’s start building amazing apps together!",
      "target_audience": [
        "Beginners: Individuals new to Android development looking to build a strong foundation.",
        "Intermediate Programmers: Developers wanting to expand their skills with Android 14 and Kotlin.",
        "Aspiring App Developers: Anyone interested in creating real-world Android applications from scratch."
      ]
    },
    {
      "title": "Mastering iOS Development - Integrate iOS Apps With iCloud",
      "url": "https://www.udemy.com/course/integrate-ios-apps-with-icloud/",
      "bio": "Program Your iOS Apps To integrate With iCloud. Part Of The Infinite Skills Mastering iOS Development Series",
      "objectives": [
        "Learn how to integrate and use iCloud in your iOS apps"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Introduction And Course Overview",
          "0102 How To Access Your Working Files"
        ],
        "Local File System": [
          "0201 Working With Directories",
          "0202 File Management",
          "0203 Reading And Writing Files",
          "0204 Archiving"
        ],
        "iCloud": [
          "0301 Introduction To iCloud",
          "0302 iCloud Files - UIDocument",
          "0303 Setting Up For iCloud",
          "0304 Working With iCloud Files",
          "0305 Update, Delete, Or Rename iCloud Files",
          "0306 Multiple File Documents",
          "0307 iCloud Key Store"
        ],
        "CloudKit": [
          "Introduction To CloudKit",
          "CloudKit Dashboard",
          "Creating And Querying CloudKit Records"
        ],
        "Conclusion": [
          "Resources And About The Author"
        ]
      },
      "requirements": [
        "Mac"
      ],
      "description": "This iOS iCloud training course from Infinite Skills will teach you how to set up your app to use iCloud, and how to work with iCloud files. This course is designed for users that already have a working knowledge of building apps and using iOS xCode.\n\nYou will start by learning how to work with the local file system and the iOS archiving feature. Keith will teach you about working with directories, file management, and reading and writing iCloud files. This video tutorial will introduce you to iCloud, and will cover topics including updating, deleting, and renaming iCloud files, synchronization, and multiple file documents.\n\nOnce you have completed this computer based training course, you will be fully capable of setting up your app to use iCloud, which will allow users to share their data among all of their devices. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Users with a basic understanding of iOS development"
      ]
    },
    {
      "title": "Android Development for Newbies (8+ Hours of Content)",
      "url": "https://www.udemy.com/course/learn-by-doing-android-for-beginners/",
      "bio": "Learn everything that you need to know to develop Android applications for fun and profit.",
      "objectives": [],
      "course_content": {
        "Gearing Up": [
          "Course Introduction",
          "Updated for Android Studio: Getting all you need",
          "(Skip for Android Studio) Reorganizing Eclipse in 2-Minutes",
          "Getting a brand new device - VIRTUALLY",
          "2 More reasons to use Chrome",
          "Setting up the PATH (Windows)",
          "Setting up the PATH (Mac & Ubuntu)",
          "Verifying your PATH",
          "Genymotion - A Faster Emulator*"
        ],
        "Traffic Lights and Event Listeners": [
          "Objectives",
          "Traffic Lights Kickstart",
          "Traffic Lights, turning them ON and OFF",
          "Drill - Traffic Lights",
          "Introducing Views",
          "Drill - Simple Interest Calculator",
          "Logging in Android",
          "Using the Devices View in Eclipse",
          "Troubleshooting - Gosh… My ADB is dead!",
          "Device Deployment Groundwork",
          "Deploying to a Device",
          "Skills Checklist"
        ],
        "NEW: Working with Android Studio": [
          "NEW: Creating a New Android Project",
          "NEW: Project Structure Explained"
        ],
        "Working with Eclipse ADT / ADT Bundle": [
          "Creating a New Android Project",
          "Getting a grasp on the Project Folders"
        ],
        "Resources at your disposal": [
          "Hallo, Salve, Bonjour with Strings",
          "Formatted String Resources",
          "French fluency in your App",
          "String Resources - FAQs",
          "What's a Context?",
          "Red, Blue, Green and Color",
          "Bitmap Drawables",
          "Is that a flooring? - Using Tiled Bitmaps",
          "Built-in Resources"
        ],
        "Eye Candy": [
          "TextView, Custom Fonts and HTML",
          "Using links with TextView",
          "A chat with ImageView",
          "Compound Drawables to the Rescue",
          "Putting things 'Linear'ly in a 'Layout'",
          "RelativeLayout - 'Grand Master' of all Layouts",
          "Organizing Views in TableLayout",
          "Scrolling UIs larger than Screen",
          "Nested Layouts",
          "CheckBoxes to keep your options open",
          "RadioButtons - Pick one, just one",
          "Building your UI with XML",
          "Width & Height Attributes",
          "Using the Android SDK Reference"
        ],
        "Sugar for your Eye Candy": [
          "Real Estate around your Views",
          "Customizing Widgets with State Drawables",
          "'Fancy' Favorite Button",
          "ImageButton and Backgrounds",
          "Myth Busted: Glossy Buttons and 9 Patches",
          "The Updated 9 Patch Tool*",
          "Presenting your data in a ListView",
          "Transitioning to the ListActivity",
          "Beautify your List #2 - Get it Working",
          "Beautify your List #3 - Right way to do it",
          "Bring up that Context Menu",
          "Adding Functionality to the Context Menu Items",
          "ListView Updates",
          "Use a GridView, if you need a Grid"
        ],
        "Alerting Users": [
          "Let's raise a Toast",
          "Showing Dialogs",
          "'Stubborn' Modal Dialogs",
          "List Dialog in Action",
          "Vibrating your Phone"
        ],
        "Get me some popcorn, please": [
          "Opening a Webpage",
          "Making Phone Calls",
          "How to send a SMS?",
          "Sending Emails",
          "How to check if an Intent is supported?",
          "Starting Activities",
          "Passing additional information as Extras"
        ],
        "Preferring Ice Tea to Cold Coffee": [
          "Writing and Reading Preferences"
        ]
      },
      "requirements": [
        "Desire to learn",
        "Basic Java skills",
        "A PC / Mac / Linux Box that can run Java, Eclipse and Android SDK"
      ],
      "description": "** ONLY FREE ANDROID COURSE WITH 8+ HOURS OF CONTENT **\n\nThere goes a chinese proverb - \"Tell me, I'll forget. Show me, I'll remember. Involve me, I'll understand.\"\nThe highest degree of learning takes place with your involvement. And this course is designed to do exactly that. This course introduces you to the basics of Android development. You will need some Java fundamentals to get started. If you are not sure about the difference between an abstract class and an interface you might have to refresh your Java concepts before proceeding.\nAlso, if you are new to Java I recommend John Purcell's Java Course, in order to acquire the minimal Java programming skills required to step into Android development.\nI've also got you some companion code which you can download from the appropriate lectures. You'll be working on the source code along with me, so that you could get a good grasp on the concepts you will eventually be introduced to. At the end of this course you'll be able to write and deploy AWESOME!! apps to Google Play.\nHow is this course designed?\nComprehensive - Contains lessons and exercises that enable you to develop real-world Android applications.\nSimple & Sequential - To keep complexity at bay, the course introduces you to independent concepts initially and then reveals more of the complex stuff.\nFocused towards Results - This is the same course that we use internally at our mobile app startup, to train new talents.\nHands-on Sessions - I guide you through sessions building apps and writing code snippets clearly explaining every line of code.\nDrills - Easy-to-moderate beginner level exercises in which you get the opportunity to practice what you've learnt and verify the same.\nElaborate Videos - Learn Android concepts in a thorough manner, I've made sure that all WHYs and HOWs you need to know are covered.\nSince this course is for beginners, I highly recommend you to take this course sequentially. You can pick on random videos, but remember - the complexity increases down the road so it is imperative that you take them one by one.\n\nWhat makes me qualified?\nStarted out as an indie Android developer in 2009 and have programmed for Android since the Cupcake days (Android 1.5).\nDeveloped more than 100 Android apps till date, including games and other apps that use the Android NDK.\nContributed open-source libraries for Android that improve developer productivity, notable ones are Android Saripaar, Simple Section Adapter, and Instant Adapter.\n\nBootstrapped a startup and currently have 9 developers working on Android and iOS.\nTraining people since 2005 ;)\nWhat are you waiting for? Gear up and lets have some fun!!",
      "target_audience": [
        "Anyone with basic Java skills"
      ]
    },
    {
      "title": "Build Flutter AR Measure Distance App | AR Ruler App",
      "url": "https://www.udemy.com/course/build-flutter-arkit-augmented-reality-measures-distances-app/",
      "bio": "Learn and Build Flutter Augmented Reality iOS Apps using Apple's ARKit Plugin | Make AR Distance Measurement Application",
      "objectives": [
        "Fully Functional Flutter iOS AR Measure Distances, Lengths, Widths and Heights App",
        "Understand the Basics of Flutter and ARKit Integration",
        "Develop Key AR Features Using Flutter and ARKit",
        "Optimize AR Applications for iOS Devices",
        "Work with ARKit's World Tracking and Scene Understanding",
        "Handle Touch Interactions in AR Environments",
        "Build User-Friendly Interfaces for AR Apps",
        "Debug and Troubleshoot AR Projects"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create and Setup AR Distance Measurement Flutter Project": [
          "create and setup ar distance measurement flutter project",
          "implement appbar on ar screen"
        ],
        "Integrate ARKit Plugin - ARKit Scene View Implementation": [
          "create arkit scene view",
          "call back function implementation"
        ],
        "Get World Positioning of the users Tapped Point in AR Scene": [
          "Get the world position of the tapped point",
          "add small green sphere on user tapped location"
        ],
        "Draw Lines Between User Tapped Points in AR Scene": [
          "draw lines between user tapped points"
        ],
        "Calculate Distance Between Tapped Points | Display Measurements": [
          "calculate Distance Between Points",
          "draw measured distance between points as a floating text"
        ],
        "Clear AR Scene View | Reset AR View": [
          "Removes all nodes from the AR scene",
          "Dispose ARKit controller when the widget is removed"
        ],
        "Setting up the iOS App": [
          "setting up the ios app"
        ],
        "Testing the iOS App": [
          "run and testing the ios app"
        ]
      },
      "requirements": [
        "Basic Understanding of Programming",
        "Access to a Mac Computer",
        "Access to a iPhone for App Testing",
        "No Previous Experience with AR Required"
      ],
      "description": "Welcome to this exciting course where you will learn how to build augmented reality (AR) applications for iOS using Flutter and Apple’s ARKit plugin. Augmented reality is rapidly growing in popularity, and AR-powered apps are now transforming how users interact with the world. In this course, we will dive into the world of AR development by guiding you step-by-step in building an AR distance measurement app. Whether you're a beginner or an experienced developer, this course will provide valuable insights into the world of augmented reality and how to integrate it with Flutter to create powerful cross-platform applications.\nWhat is Augmented Reality (AR)?\nAugmented reality is an interactive experience where computer-generated content is overlaid on the physical world. This combination of real and virtual elements allows users to engage with both the physical and digital world at the same time. AR is already revolutionizing industries such as gaming, education, architecture, and retail, and now it's easier than ever to create AR applications using Flutter.\nIn this course, you'll learn how to create an AR app that uses your device's camera to measure distances, lengths, and heights in real-time. The app will offer a convenient, on-the-go alternative to traditional measuring tools such as tape measures and rulers, leveraging the power of AR to offer precise measurements in a user-friendly interface.\n\n\nWhat You Will Learn in This Course:\nThis course is designed to take you through the entire process of building an AR app using Flutter and Apple's ARKit plugin. You’ll learn how to:\nUnderstand ARKit Basics: Before diving into development, we’ll introduce you to Apple’s ARKit, which is the framework that powers augmented reality experiences on iOS. You’ll understand how ARKit works and how it interacts with the device’s camera and sensors to track the real-world environment.\nSet Up Flutter and ARKit Plugin: We’ll guide you through setting up your development environment by installing Flutter and integrating the ARKit plugin. This step is essential for creating AR experiences on iOS devices.\nBuild the AR Distance Measurement App: Once the foundational setup is complete, we’ll jump straight into coding. You’ll learn how to use Flutter and ARKit to build an AR distance measurement app that can measure physical distances, lengths, and heights. You’ll also get to explore how to visualize measurements in the real world through 3D representations.\nTest and Debug Your App: Testing is an essential part of the development process. We will teach you how to test your AR app on real iOS devices, debug common issues, and optimize performance to ensure the app runs smoothly.\n\n\nWhy Flutter?\nFlutter is an open-source UI software development kit (SDK) created by Google. It allows you to build beautiful, natively compiled applications for mobile, web, and desktop from a single codebase. This cross-platform capability is especially beneficial when developing AR applications because it allows you to deploy your app on both iOS and Android devices with minimal effort. In this course, you'll leverage Flutter's powerful features alongside ARKit to create seamless AR experiences for your users.\n\n\nWho is This Course For?\nThis course is ideal for developers who want to learn how to create augmented reality applications using Flutter and ARKit. It is also suitable for those who want to dive into mobile development with AR technology but have little or no prior experience in AR or Flutter development. Basic knowledge of programming and mobile development concepts is helpful but not required.\n\n\nBy the end of this course, you'll have the knowledge and skills to develop your own AR applications with Flutter, creating innovative experiences that blend the digital and physical worlds.",
      "target_audience": [
        "Flutter Developers Looking to Learn AR",
        "Aspiring Mobile App Developers",
        "iOS Developers Interested in ARKit",
        "Tech Enthusiasts and Hobbyists",
        "UI/UX Designers Interested in AR Experiences",
        "Entrepreneurs and Product Developers"
      ]
    },
    {
      "title": "RxJava | RxAndroid - I",
      "url": "https://www.udemy.com/course/rxjava-rxandroid-i/",
      "bio": "Beginner guide to RxJava and RxAndroid With Kotlin",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "What is a RxJava",
          "Three O of RxJava",
          "RxJava Dependencies",
          "How To Get Course Project File"
        ],
        "RxJava Operator": [
          "Just Operator",
          "RxJava Operators",
          "FromArray Operator",
          "From Iterable Operator",
          "Range Operator",
          "Repeat Operator",
          "Interval Operator",
          "Timer Operator",
          "Create Operator",
          "Filter Operator",
          "Last Operator",
          "Distinct Operator",
          "Skip Operator",
          "Buffer Operator",
          "Map Operator"
        ],
        "Conclusion": [
          "What Next ?"
        ]
      },
      "requirements": [
        "Basic of Kotlin",
        "Basic of Android development"
      ],
      "description": "This is a RxJava and RxAndroid beginner course. The aim of this course is to teach fundamental concepts of RxJava that takes you from a novice to intermediate RxJava developer. Every concept is explained in detailed manner with code examples.\nIf you have some basic experience in developing Android application with Kotlin then this course is for you. By the end of this course you should be able to implement  Rxjava in your Android application.",
      "target_audience": [
        "Android developer who want to learn RxJava and RxAndroid"
      ]
    },
    {
      "title": "A Non-Programmers iOS Training Course To Building iOS Apps",
      "url": "https://www.udemy.com/course/non-programmers-ios-training-course-to-building-ios-apps/",
      "bio": "Looking to get started creating iOS apps for iPhone / iPad , little or no programming knowledge? This course is for you",
      "objectives": [
        "A Total Beginners Guide To Learning How To Program iOS Apps"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Introduction To App Development",
          "0102 What You Will Learn",
          "0103 The App You Will Create",
          "0105 How To Access Your Working Files"
        ],
        "Becoming An Apple Developer": [
          "0201 Enlisting In the Developer Corps",
          "0202 Registering And Joining The Developer Program",
          "0203 Exploring The Dev Center",
          "0204 Downloading XCode"
        ],
        "Getting To Know XCode": [
          "0301 Exploring An XCode Project - Part 1",
          "0302 Exploring An XCode Project - Part 2",
          "0303 Using The XCode Text Editor",
          "0304 Accessing Documentation And Preferences",
          "0305 Running Your App In The Simulator",
          "0306 Interacting With Simulated Hardware"
        ],
        "Getting Familiar With Objective-C": [
          "0401 Objects And Classes - Part 1",
          "0402 Objects And Classes - Part 2",
          "0403 Using Header And Implementation Files",
          "0404 Working With Objects And Properties",
          "0405 Using Frameworks And Design Patterns"
        ],
        "Understanding An App": [
          "0501 Utility Application Template - Part 1",
          "0502 Utility Application Template - Part 2",
          "0503 The App Life Cycle",
          "0504 Event And Interruption Processing",
          "0505 Background And Termination"
        ],
        "Interface Controls": [
          "0601 Looking At The Storyboard",
          "0602 Inspecting The Main View",
          "0603 Inspecting The Flip-Side View",
          "0604 The Info And Done Buttons"
        ],
        "Animating The Main View": [
          "0701 Working With Windows And Views",
          "0702 Adding Your Own Application Behaviours",
          "0703 Adding A Timer And Animation",
          "0704 Block Object Design Pattern",
          "0705 Adding An Image And Testing the Main View"
        ],
        "Preferences And Interface Objects": [
          "0801 Setting Up User Preferences - Part 1",
          "0802 Setting Up User Preferences - Part 2",
          "0803 Setting Up User Interface Methods",
          "0804 Adding iPhone Interface Objects",
          "0805 Testing The iPhone Interface"
        ],
        "Adding The iPad User Interface": [
          "0901 Designing An iPad Experience",
          "0902 Adding An Image And Interface Objects",
          "0903 Testing The iPad Interface"
        ],
        "Readying Your App For Distribution": [
          "1001 Adding Icons And Launch Images",
          "1002 Building Your App For Distribution",
          "1003 Managing Your App In The App Store",
          "1004 Avoiding The Rejection Slip",
          "1005 Where To Go From Here"
        ]
      },
      "requirements": [
        "Mac Computer"
      ],
      "description": "This tutorial on building iOS Apps for non-programmers from Infinite Skills teaches the absolute beginner how to build fully functional iOS apps for the iPhone and iPad. This course assumes no prior programming or iOS development experience.\n\nYou start the course with an introduction to Xcode, including learning to use the Xcode text editor, running your app in the simulator, and accessing documentation. You will then get familiar with Objective-C, covering topics such as objects, classes, and using frameworks and design patterns. This iOS tutorial will also show you how to use interface controls, animate the main view, and add user preferences and interface methods. Tony will teach you about adding iPhone interface objects, design an iPad experience, and testing the iPhone and iPad interface. Finally, you will learn to prepare your app for distribution, including adding icons and launch images and managing your apps in the App Store.\n\nBy the completion of this computer based training course, you will be fully capable of creating iPhone and iPad apps from start to finish, including managing them in the App Store. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Absolute Beginners To iOS ( iPhone / iPad ) Application Programming"
      ]
    },
    {
      "title": "Manomotion Fundamentals - Hand Gesture Recognition",
      "url": "https://www.udemy.com/course/manomotion-fundamentals-hand-gesture-recognition/",
      "bio": "Hand Gesture Detection that gives you Super Powers! Using Manomotion",
      "objectives": [
        "You will experience the magic of superpowers using Hand Gesture Technology.",
        "How to get started with Manomotion.",
        "Discover how to rotate objects with your hands.",
        "Perform Gesture Recognition and Shoot Kai Blasts.",
        "Smash Skulls with your Bare Hands using Depth Estimation.",
        "Learn about Manomotion Data Structures"
      ],
      "course_content": {
        "Introduction": [
          "Introduction to the Manomotion Course",
          "Prerequisites for the Course",
          "How to take this course."
        ],
        "Manomotion SDK": [
          "How to Download and Import ManoMotion - Hello World",
          "Discover Manomotion Data Structures (Theory)",
          "Rotation and Hand Tracking - The Anatomy of Manomotion",
          "How to shoot Kai Blasts with Gesture Recognition",
          "Destroy Skulls with Depth Estimation",
          "ARCore with Manomotion"
        ],
        "Appendix": [
          "Download and Install ARCore, Wikitude and Android",
          "Hello ARCore"
        ],
        "Conclusion": [
          "Conclusion-Bonus Lecture"
        ]
      },
      "requirements": [
        "Have a good a foundation and experience of Unity and Augmented Reality",
        "Already have Unity, ARCore and Android Build Setup on you PC.",
        "An Android Phone with Android 7.0 and above"
      ],
      "description": "Learn how we implemented Hand Gestures Recognition on Android using Manomotion\nWhen we first got started with Mobile Augmented Reality, we quickly realized that there was no easy way of interacting with your environment except for you screen. While this is adequate for the job, it is not quite so interactive. If you watched movies like Minority Report (Tom Cruise Movie), you can see the possibilities and practicality of using Hand Gesture recognition. However the following problems persisted:\nThere was no easy way to get this functionality on mobile,\nManual hand gesture detection and recognition is quite computationally expensive,\nOnce you have developed a program to detect hands, you would then have to figure out how to integrate it with Unity,\nHow to reliably detect hand using a single camera, without the aid of external depth sensors,\nHow to get this tech working on as many phones as possible (with cross platform support).\nThese were some of the problems we faced until we found Manomotion. Manomotion provides a framework for real-time 3D gestural analysis with minimal hardware and minimal computing power. All that is required is a simple RGB camera found in everyday smartphones. Manomotion is also compatible with ARCore, AR-Kit as well as Vuforia.\nSo after playing around with this SDK, we decided to make a quick and easy video course on how to get started using Manomotion for your own applications. So essentially, we've structured this training to reduce debugging, speed up your time to market and get you results sooner.\nIn this course, here's some of the fundamentals that you will learn:\nExperience the magic of superpowers using Hand Gesture Technology,\nHow to Get Started with Manomotion,\nDiscover how to Rotate objects with your hands,\nPerform Gesture Recognition and Shoot Kai Blasts,\nSmash Skulls with your Bare Hands using  Depth Estimation,\nLearn about Manomotion Data Structures.\nYou also get helpful bonuses:\nARCore 'Hello World' Setup Instructions\nPersonal help within the course\nI'm here to help if you have any questions. Students can start discussions and message me with private questions. I love helping students who take my courses and I look forward to helping you.\nGet a Career Boost with a Certificate of Completion\nUpon completing 100% of this course, you will be emailed a certificate of completion. You can show it as proof of your expertise and that you have completed a certain number of hours of instruction.\nIf you want to get a marketing job or freelancing clients, a certificate from this course can help you appear as a stronger candidate for Augmented Reality jobs.\nMoney-Back Guarantee\nThe course comes with an unconditional, Udemy-backed, 30-day money-back guarantee. This is not just a guarantee, it's my personal promise to you that I will go out of my way to help you succeed just like I've done for thousands of my other students.\nLet me help you get fast results.  Enroll now, by clicking the button and let us show you how to implemented Hand Gestures Recognition on Android using Manomotion.",
      "target_audience": [
        "Students who have experience in Unity or ARCore should take this course. This is an Advanced module",
        "Those who have set up Unity and Android on their PC/Laptop"
      ]
    },
    {
      "title": "Master SwiftUI | Learn by creating real-world projects",
      "url": "https://www.udemy.com/course/swiftui-course-learn-by-creating-real-world-projects/",
      "bio": "Master SwiftUI by building real-world apps from scratch. Build iOS apps with animations, APIs & advanced UI components",
      "objectives": [
        "Build fully functional iOS apps using SwiftUI and modern architecture patterns.",
        "Design and implement beautiful, responsive UIs with animations and transitions.",
        "Integrate REST APIs and handle real-time data in your SwiftUI apps.",
        "Apply best practices such as MVVM, Clean Architecture, and TDD to create maintainable, scalable code."
      ],
      "course_content": {
        "Introducción": [
          "Introduction to the course"
        ],
        "Template #1 - Home Page for Uber style app": [
          "Create project in Xcode and add assets",
          "Create Theme Constants",
          "Create ASDoubleTabSelectionView component",
          "Create ASHomeTab Page",
          "Create ASWhereToTextView component",
          "Create ASRideHistoryListView component",
          "Create ASSuggestionsView component",
          "Create ASBannersCarrouselListView component",
          "Create ASEatsTab Page and DeliverNowHeaderView component",
          "Create ASSearchBarView component",
          "Create ASCategoriesCarouselView component",
          "Create ASChipsCarouselView component",
          "Create ASStoreCardCarrouselView component",
          "Download the source code of the section",
          "Quiz: CityCab Home Page with SwiftUI"
        ],
        "Template #2 - Home Page for Mozi style app": [
          "Intro. Create a project in Xcode and add assets",
          "Create constants for the Theme",
          "Create HomePage and ASHeaderView component",
          "Create ASDateContainerView component",
          "Create ASInviteContainerView component",
          "Create ASWhosAroundView component",
          "Create ASConnectedSheetView component",
          "Create ASRecentlyAddedPlansListView component",
          "Download the source code of the section",
          "Quiz: SocialBreeze Home Page with SwiftUI"
        ],
        "Template #3 - Home Page for Headspace style app": [
          "Intro. Template Demo",
          "Create project and add theme constants",
          "Create TabView and HomePage File",
          "Create ASHeaderView component",
          "Create ASFeaturedCardView component",
          "Create ASTimelineSectionView component",
          "Create ASTimelineItemView component Part 2. Farewell",
          "Download the source code of the section",
          "Quiz: ZenSpace HomePage - SwiftUI Architecture and Components"
        ],
        "Package #2- Reusable Animations Pack": [
          "Section Introduction - Creating a Reusable Animation Package",
          "Initial Setup - Creating the Swift Package Manager",
          "Connecting SPM with the Sample App",
          "Fundamentals - Creating the Animation Protocol",
          "Base Architecture - Creating the Animation ViewModel",
          "Modifier System - Creating Animation Modifiers",
          "Creating Entrance Animations",
          "Creating Exit Animations",
          "Creating Attention Animations",
          "Creating Special Effect Animations",
          "Creating View Extensions",
          "Creating Animated Components",
          "Full Demo Page - Animation Showcase #1",
          "Full Demo Page - Animation Showcase #2",
          "Farewell and Next Steps",
          "Download the source code of the section",
          "Quiz: Reusable Animations Pack"
        ],
        "Final exam. Coding exercises. Downloadable content. Study materials.": [
          "Final Exam. SwiftUI Intermediate Level Quiz",
          "Quiz: CityCab Home Page with SwiftUI",
          "Quiz: SocialBreeze Home Page with SwiftUI",
          "Quiz: ZenSpace HomePage - SwiftUI Architecture and Components",
          "Quiz: Package #2: Reusable Animations Pack"
        ]
      },
      "requirements": [
        "A Mac with macOS compatible with Xcode 15 or newer.",
        "Basic experience with Swift and SwiftUI is recommended",
        "A desire to learn by building and create real-world iOS apps.",
        "Xcode and a free Apple Developer account to run your apps on the simulator or a real device."
      ],
      "description": "Welcome to the Complete SwiftUI Course | Learn by Creating Real-World Projects. This is a 100% hands-on course where you'll master both fundamental and advanced SwiftUI concepts by building from scratch components, mini apps, UI libraries, and more.\n\n\nLearn iOS 18 Development with SwiftUI 6 & Swift 6\nBuild 15+ complete iOS apps from scratch in this comprehensive SwiftUI masterclass. Perfect for beginners and experienced developers wanting to master Apple's latest technologies.\n\n\nWhy This Course Is Unique\nThis is not just another introduction to SwiftUI. It’s a carefully crafted learning path that guides you from the most basic foundations to advanced real-world features. Each section of the course is a self-contained project designed to be digestible, efficient, and immediately applicable.\nThe \"learn by building\" approach ensures that you gain practical skills, not just theoretical knowledge. You'll be equipped with the right tools at the right time, empowering you to become the iOS developer you aspire to be.\n\n\nWhat You'll Learn:\nSetting up your development environment and building your first SwiftUI app.\nDesigning beautiful, functional UIs with SwiftUI.\nAnimations, transitions, and interactions to enhance user experience.\nWorking with REST APIs and real-time data handling.\nImplementing dark/light modes, local storage, and app themes.\nUsing maps, widgets, Live Activities, and more advanced iOS features.\niOS 18, SwiftUI 6, Swift 6, Xcode 16\nSwiftData for modern data management\nAdvanced animations and custom UI components\nREST APIs and real-time data handling\nMVVM architecture and Clean Code principles\n\n\nPerfect For:\nAspiring iOS developers\nUI/UX designers learning development\nDevelopers updating to latest iOS technologies\nAnyone wanting to build professional iOS apps\n\n\nWhat You’ll Get on Udemy\nLifetime Access – Enroll once and get lifetime updates, including future sections and improvements.\nCertificate of Completion – Perfect for your resume and LinkedIn profile.\nInstructor Support – As a seasoned iOS developer, I’ll be here to answer your questions and guide your journey.\nContinuous Updates – Stay up to date with new sections, real-world examples, and best practices.\nPractical Exercises & Final Projects – Reinforce your learning with exercises that mimic real-world development challenges.\n\n\nReady to level up your iOS career?\nJoin now and start building real-world SwiftUI projects today!",
      "target_audience": [
        "Junior iOS developers who want to strengthen their SwiftUI skills by building real-world projects.",
        "Mid-level and senior iOS developers looking to apply best practices like MVVM, Clean Architecture, and TDD in modern SwiftUI apps.",
        "UI/UX designers who want to understand how their designs are implemented in SwiftUI.",
        "Developers transitioning from UIKit to SwiftUI who want a hands-on learning path.",
        "Anyone who wants to go beyond tutorials and start building production-ready iOS apps with SwiftUI."
      ]
    },
    {
      "title": "FullStack iOS / Andriod Mobile App Development",
      "url": "https://www.udemy.com/course/fullstack-ios-andriod-mobile-app-development/",
      "bio": "Create a modern cross-platform e-commerce app with Expo Router, Supabase, Stripe payments, and a Next.js admin dashboard",
      "objectives": [
        "Learn how to create a cross-platform gadgets-selling app with modern UI, dynamic navigation, product displays, and cart functionality.",
        "Master Supabase for authentication, real-time data, and database management—handling users, products, orders, and more seamlessly.",
        "Set up Stripe to enable secure, real-time checkout flows in your mobile app, including handling payment intents and success callbacks.",
        "Build a powerful web-based admin panel using Next.js to manage products, view orders, and oversee user activity with role-based access."
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Module React Native": [
          "New Project Setup",
          "Expo Router",
          "Creating Pages",
          "Layout Deepdive",
          "Home Page",
          "Dynamic Pages (Category Page)",
          "Zustand Card State",
          "Product Details Pages",
          "Cart State",
          "Orders Page",
          "Orders Details Page",
          "Auth Page"
        ],
        "Module Supabase": [
          "Supabase Intro",
          "Supabase Auth Provider",
          "Supabase Login",
          "Supabase SQL triggers and functions",
          "Row Level Security"
        ],
        "NextJS Admin Panel": [
          "Bootstrap NextJS Admin",
          "Routing In NextJS",
          "Integrate Supabase SSR client and Types",
          "Supabase Email Password Authentication",
          "Authorization Routes Protection",
          "Role Level Security - Authorization",
          "Layout Build",
          "Signout and Theming",
          "Category Supabase",
          "Fetch Category Action",
          "Product Schema Row Level Security (RLS)",
          "Category Page Setup",
          "Code Walkthrough",
          "Category Page UI V1",
          "Category Page UI V2",
          "Category Create and Supabase Storage",
          "Update and Delete Category",
          "Product Page Setup",
          "Code Walkthrough",
          "Create Product Schema",
          "Product CRUD actions",
          "Product Page UTILS setup",
          "Product Page Layout",
          "Project Walkthrough So Far"
        ],
        "React Native Dynamic Content": [
          "React Query Setup",
          "Fetching Product And Categories",
          "Supabase Types React Native",
          "Display Categories",
          "Display Product details page data",
          "Category Details Page",
          "Cart Page Fixes",
          "Orders Supabase",
          "Display Orders",
          "Create Order Function",
          "Create Order Item Function",
          "Create Order Item"
        ],
        "Admin Order Management": [
          "Order Details Page",
          "Admin Orders Page",
          "Fetching Orders with Products",
          "Fetching Orders Page Component",
          "Order Management Table",
          "Order Action View Order Products",
          "Order Status Select",
          "Order Status Change Server Action",
          "Order Update Real Time Subscription"
        ],
        "Payment Integration": [
          "Supabase local setup",
          "Using ENV Variables in Expo",
          "Stripe Integration - Edge Functions",
          "Stripe Checkout",
          "New Stripe Column and Migrations",
          "Create Stripe Customer"
        ],
        "Push Notification": [
          "EAS setup",
          "Notification Setup",
          "Testing Push Notification on a REAL DEVICE",
          "Real Time Admin Order Status Notification"
        ],
        "Final Admin Build": [
          "Order Chart",
          "Product Category Chart",
          "Latest Users Chart"
        ],
        "Landing Page": [
          "Landing Page Setup",
          "Hero Section",
          "Home Page Complete"
        ]
      },
      "requirements": [
        "Basic understanding of JavaScript and React. You should be comfortable with React fundamentals like components, props, hooks, and state management.",
        "Familiarity with modern development tools. Some experience using Git, Node.js, and basic terminal commands will be helpful.",
        "Willingness to learn and build. No advanced backend or mobile experience needed — I’ll guide you step-by-step through everything from setup to deployment."
      ],
      "description": "Are you ready to build a full-featured mobile app using the most modern tools in the JavaScript ecosystem? This hands-on course will teach you how to create a complete e-commerce mobile app using React Native, Expo Router, Supabase, Stripe, and Next.js — from idea to production.\nWe’ll walk you through every step of building a real-world mobile application that includes user authentication, vendor/product management, secure payments, and a responsive UI. Using Expo, you’ll create a cross-platform experience for both iOS and Android users, while Supabase powers the backend with database, storage, and authentication features. Payments are handled through Stripe, and we’ll use Next.js as the admin dashboard and API backend.\nWhether you're a beginner or intermediate developer, this course will guide you through full-stack mobile development in a way that’s approachable and practical.\n\n\nWhat You’ll Learn:\nBuild a real-world e-commerce app with React Native and Expo\nUse Expo Router for clean and dynamic app navigation\nSet up authentication (sign-up, sign-in, session handling) with Supabase\nManage data (users, products, orders) using Supabase tables\nIntegrate Stripe for secure checkout and payments\nCreate a modern admin panel using Next.js\nStructure your codebase for scalability using TypeScript and best practices\nDeploy your project and get ready for App Store/Play Store publication\nBy the end of this course, you'll have a complete, production-ready mobile app and the confidence to build and ship your own projects.\n\nLet’s get started!",
      "target_audience": [
        "Aspiring Mobile App Developers who want to build real-world apps using React Native and modern fullstack tools.",
        "Frontend Developers ready to expand into fullstack mobile development with Supabase, Stripe, and backend integration."
      ]
    },
    {
      "title": "Complete Weather App for WatchOS using SwiftUI, Combine",
      "url": "https://www.udemy.com/course/complete-weather-app-for-watchos-using-swiftui-combine/",
      "bio": "Build start to finish app for WatchOS using SwiftUI and Core Location",
      "objectives": [
        "WatchOS",
        "SwiftUI",
        "Combine",
        "iOS Development",
        "Remote API Processing",
        "Generics"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Learning Objectives",
          "Setup"
        ],
        "Managers and Models": [
          "Network Manager",
          "Weather Models",
          "Weather Manager",
          "Location Manager"
        ],
        "App UI": [
          "Outline View",
          "Watch Weather View"
        ]
      },
      "requirements": [
        "Xcode Knowledge",
        "Swift Knowledge"
      ],
      "description": "SwiftUI has changed the entire dynamics of app development in iOS space. Now developing for watchOS is as easy as dropping reusable SwiftUI views into the app and run them against the correct target.\nIn this course, we are going to work on WatchOS and SwiftUI. With the introduction of SwiftUI, a lot of UI development have been combined and learning has become easy. For example, most of the concepts of SwiftUI that you learn and apply on iOS, iPadOS, MacOS and TVOS are same. WatchOS has different specs as far as the hardware, screensize etc goes so SwiftUI adapts to those changes and provides a look that works of WatchOS but the code you write is pretty much same as SwiftUI for iOS.\nWe will start our journey of WatchOS by building a clone of Weather app, which is present in your Apple Watch. we will learn to build watchOS app in SwiftUI. You will learn about Combine, Core Location, Codable Protocol and will learn to request user's location tracking permissions to present weather condition information about their current location.\n\n\nLearning Objectives:\n* WatchOS and SwiftUI\n* Location permissions and location access\n* Info.plist and location tracking permissions\n* Use of CLLocationManager and Location Tracking on WatchOS\n* Generic Network Manager\n* Networking and API calls from WatchOS\n* Use of OnReceive Observer to monitor changes in location\n* Reverse geocoding for coordinates",
      "target_audience": [
        "WatchOS App Development"
      ]
    },
    {
      "title": "iOS Development - Adding In-App Purchasing To iOS Apps",
      "url": "https://www.udemy.com/course/ios-inapp-purchase/",
      "bio": "Learn How To Add In-App Purchasing Into Your iOS Application. A Detailed Insight For iOS Developers From Infinite Skills",
      "objectives": [
        "Learn How To Add In-App Purchasing In To Your iOS Applications"
      ],
      "course_content": {
        "Introduction": [
          "Important - Download These First - Working Files",
          "0101 Introduction And Course Overview",
          "0102 How To Access Your Working Files"
        ],
        "Making AppleStore Purchases": [
          "0201 Using SK Store Product View Controller"
        ],
        "In-App Purchasing": [
          "0301 In-App Purchasing Options",
          "0302 Setting Up The App With Apple",
          "0303 Using The Sandbox For Testing",
          "0304 Creating Purchase Items",
          "0305 Making The Purchase",
          "0306 Subscription Purchases",
          "0307 Hosted Content",
          "0308 Receipts",
          "0309 Verifying App Receipt - Part 1",
          "0310 Verifying App Receipt - Part 2",
          "0311 Receipt Validation With The Server"
        ],
        "iAds": [
          "0401 Implementing iAds"
        ]
      },
      "requirements": [
        "Mac OS X"
      ],
      "description": "This iOS development course covers how to integrate In-App Purchasing into your application. Created by Infinite Skills, this course will teach you how to add In-App purchasing to your apps, which allows app developers to increase their earnings beyond the sale price of the app. This course is designed for users that have previous experience in building apps and working in the native iOS xCode.\n\nYou will start the course by learning how to set up your app in the Dev Center. The course will show you how to create your purchase items in iTunes Connect, and implement the sale process in code. This video tutorial will also explain and demonstrate the different purchasing options. As a bonus, the course shows you how to use iAds to generate even more app revenue.\n\nBy the completion of this computer based training course, you will have developed the necessary skills required to be able to set up and implement In-App purchasing. Working files are included, allowing you to follow along with the author throughout the lessons.",
      "target_audience": [
        "Users who have a basic understanding of iOS programming and app creation"
      ]
    },
    {
      "title": "Train Image Classification Models, build Android Apps(2025)",
      "url": "https://www.udemy.com/course/image_classification_for_android_app_development_kotlin/",
      "bio": "Train Custom Image Classification Models from Scratch | Use Image Recognition Models in Android 16 with Images or Videos",
      "objectives": [
        "Train Custom Image Classification Models from Scratch & Convert models into Android compatible tensorflow lite format",
        "Use Custom Image Classification Models in Android with Images and Camera Footage",
        "Collect Datasets for Training Custom Image Classification Models",
        "Use Transfer Learning to Retrain Existing Image Classification Models and use them in Android",
        "Train Custom Image Classification Models for Android using Two Different Approaches"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Image Classification Introduction & Applications"
        ],
        "Machine Learning & Deep Learning for Flutter": [
          "What is Machine Learning",
          "Supervised Machine Learning",
          "Regression and Classification",
          "Unsupervised Machine Learning & Reinforcement Learning",
          "Deep Learning and Neural Network Introduction",
          "Neural Network Example",
          "Working of Neural Networks for Image Classification",
          "Basic Concepts of Machine Learning"
        ],
        "Data Collection - Collecting Dataset for Training Image Classification Model": [
          "Data Collection Introduction",
          "Finding ready to use dataset for training image classification models",
          "Exploring Downloaded dataset for training custom image classification models",
          "Find and Download A Dataset for Brain Tumor Classification using MRI"
        ],
        "Train Your First Custom Image Classification Model in 15 Minutes": [
          "Section Introduction",
          "Exploring Teachable Machine and Uploading Dataset for Model Training",
          "Training, Testing and Converting Model into Tensorflow Lite",
          "Attaching Metadata with Trained Tensorflow Lite Models",
          "Google Colab Introduction",
          "Attaching Metadata and Downloading Ready to Use Model"
        ],
        "Training Custom Image Classification Model with Transfer Learning": [
          "Transfer Learning Introduction",
          "Google Colab Introduction",
          "Installing and Importing Libraries for Model Training",
          "Uploading Dataset and Connecting Google Drive",
          "Dividing dataset into train test and validation parts",
          "Training Custom Image Classification Model",
          "Testing the model and Converting it to Tensorflow Lite Format"
        ],
        "Training Brain Tumor Classification Model": [
          "Train Brain Tumor Classification Model"
        ],
        "Android App Development": [
          "Section Introduction"
        ],
        "Image Picker Android - Choose or Capture Images": [
          "Creating a new Android Studio Project and Building GUI of Android App",
          "Choosing Images from Gallery in Android",
          "Capturing Images using Camera in Android",
          "File Provider : Share Data Between Android Apps Securely",
          "Capturing Images in Android Overview"
        ],
        "Image Classification With Images": [
          "Adding Tesnorflow Lite Model & Libraries in Android",
          "Analyzing and loading Tesnorflow Lite Model in Android",
          "Passing Input to tflite model and getting output in Android",
          "Showing Results of Custom Image Classification Model on Screen in Android"
        ],
        "Background Of Using Tensorflow Lite Models in Android": [
          "Loading Tensorflow Lite Model in Android",
          "Passing input to the Tesnorflow Lite model and Getting output",
          "How Tensorflow Lite Models return Results in Android",
          "Converts Model Output into Results in Android"
        ]
      },
      "requirements": [
        "No ML and Data Science Knowledge Required",
        "A very little knowledge of Android App Development"
      ],
      "description": "Unlock the full potential of mobile app development with our comprehensive course on training custom image Recognition models and integrating them into Android applications. This course is designed to guide you from the basics of machine learning and deep learning to creating sophisticated, real-time image recognition apps in Android Kotlin.\nWhat You Will Learn:\nIntroduction to Machine Learning and Deep Learning: Start with the foundational concepts of machine learning, deep learning, and image Recognition to build a strong base for your journey.\nDataset Collection: Learn effective methods to collect and prepare datasets for training your image Recognition models.\nModel Training Approaches: Train image Recognition models using two powerful approaches:\nTeachable Machine: A user-friendly platform to create custom models.\nTransfer Learning: Advanced technique to leverage pre-trained models for better accuracy and efficiency.\nTensorflow Lite Conversion: Convert your trained models into TensorFlow Lite format, making them compatible with mobile applications.\nAndroid Integration: Seamlessly integrate your models into Android apps:\nImage Recognition : Choose or capture images in Android and use your models for accurate image recognition.\nReal-Time Camera Footage: Display live camera footage in Android, pass frames to your models, and build real-time, intelligent mobile apps.\n\n\nProjects Included:\nFruit and Vegetable Classification Model: Create an app that identifies different fruits and vegetables.\nBrain Tumor Classification Model: Develop a model to classify brain tumor images.\nFlower Classification Model: Build a system to recognize various types of flowers.\n\n\nBy the end of this course, you'll be able to:\nTrain custom image Recognition models tailored to your specific needs.\nSeamlessly integrate your models into Android applications built with Kotlin.\nCraft intelligent mobile apps that leverage real-time image recognition functionalities.\n\n\nSo join us to become proficient in Android app development and create cutting-edge mobile apps with image and video recognition capabilities using Kotlin.\nEnroll now and start your journey towards mastering Android 16 and Image Recognition .",
      "target_audience": [
        "Beginner Android Developers looking to build Machine Learning Powered Android Apps",
        "Anyone who want to train Image Classification Models and than use them in Android Apps",
        "Android Developers looking to enhance their skills by learning to train and use image classification models in Android"
      ]
    },
    {
      "title": "Flutter Essentials and Basic UI",
      "url": "https://www.udemy.com/course/flutter-essentials-and-basic-ui/",
      "bio": "Learn the essential topics and important widgets in Flutter App development.",
      "objectives": [
        "Essentials and basic topics in Flutter.",
        "How to develop a Flutter Application using Android Studio.",
        "Fundamentals of Flutter UI design.",
        "What are Widgets in Flutter and how to use them.",
        "How to use Android Studio features and shortcuts in Flutter development.",
        "How to run and debug a Flutter App and use emulators in Android Studio."
      ],
      "course_content": {
        "Introduction": [
          "Flutter SDK and IDE ( Integrated Development Environment )"
        ],
        "What is a Widget in Flutter": [
          "What is a Widget",
          "Stateless Widget",
          "Stateful Widget"
        ],
        "MaterialApp and scaffold Widgets": [
          "MaterialApp and Scaffold Widgets"
        ],
        "AppBar Widget": [
          "Flutter - AppBar Widget"
        ],
        "Container Widget": [
          "Flutter - Container Widget"
        ],
        "Adding images": [
          "Adding images"
        ],
        "Stack in Flutter": [
          "Flutter - Stack Widget"
        ],
        "Flutter - Textfield Widget": [
          "Textfield Widget"
        ],
        "Flutter - Button Widget": [
          "Button Widget"
        ],
        "Column and Row Widgets in Flutter": [
          "Column and Row"
        ]
      },
      "requirements": [
        "No programming experience is required",
        "You will need a desktop or laptop computer",
        "You will need to use Android Studio",
        "You can use a windows, macOS or Linux system",
        "You can be at any programming level to start this course."
      ],
      "description": "Hello and Welcome to Flutter Essentials and Basic UI. This course focuses on Flutter App development essentials, basics, fundamental topics and concepts. Knowing these topics will help you to have a good understanding of the building blocks of a Flutter Application.\nYou will learn how to develop your Flutter Application in Android Studio and how to use Android Studio features and shortcuts in your Flutter App development, you will also learn how to test your Flutter App on an emulator.\n\n\nWhat is the Flutter SDK ?\nFlutter is an open-source UI Software Development Kit developed by Google, it is a Cross Platform SDK, which means you only write your code once and then you can build your App on multiple platforms. Flutter supports, Android, iOS, Windows, macOS, Web and Linux. Flutter Applications run natively on these platforms ( there are no interpreters ).\n\n\n\n\nCourse Contents :\n\n\nHow to use Android Studio with Flutter\nWhat is a Widget\nStateless Widget\nStateful Widget\nMaterialApp and Scaffold\nAppBar\nContainer\nAdding images in Flutter\nStack\nTextField\nButtons\nColumn\nRow\nListView\nCard\nPage routing in Flutter ( Navigation )\nDrawer\nHow to use coding shortcuts in Android Studio\n\n\nBy the end of this course, you will be able to write your own Flutter Application. You only need to write you code once and then build your App on iOS or Android without changing anything.",
      "target_audience": [
        "For beginners who would like to start using a powerful SDK for cross-platform App development.",
        "For beginners who would like to learn how to program using Flutter SDK.",
        "Anyone who is interested in App development using Flutter.",
        "Anyone who would like to write their code only once and then deploy on multiple platforms ( iOS, Android, Web )."
      ]
    },
    {
      "title": "Build a basic Group based Chat app using Flutter & Firebase",
      "url": "https://www.udemy.com/course/build-a-basic-group-based-chat-app-using-flutter-firebase/",
      "bio": "Master the art of building full stack cross platform application",
      "objectives": [
        "Building full stack Flutter application",
        "Google Sign in authentication",
        "Firebase Firestore",
        "Understanding Database structuring"
      ],
      "course_content": {},
      "requirements": [
        "Fundamentals of Dart",
        "Knowledge of Flutter",
        "Knowledge of Firebase"
      ],
      "description": "In this course, I will be teaching you how to create a functional chat application where users can create new groups, search for existing ones, join conversations, and exit groups as needed. The course assumes basic knowledge of Flutter and Firebase, so it's recommended that you have some experience with these technologies before starting.\nHere's what you can expect to learn in this course:\n\n\nSetting up Flutter and Firebase projects.\nAllowing users to authenticate with their google account.\nCreating a user profile page where users can see their profile picture , email and full name.\nBuilding the main screen of the app where users can see a list of joined groups and create new ones.\nImplementing real time search functionality to allow users to find specific groups they're interested in.\nDeveloping the chat functionality, including the ability to send and receive messages within a group.\nImplementing the ability to join and exit groups as needed.\nManaging data using Firebase Realtime Database, including storing group information, user profiles, and chat messages.\n\n\nBy the end of the course, students will have a thorough understanding of how to build a group-based chat application using Flutter and Firebase that can be deployed to various platforms, including Android, iOS and Web.",
      "target_audience": [
        "Intermediate Flutter Developers"
      ]
    },
    {
      "title": "E-Commerce app from Scratch to Play Store and beyond 2020",
      "url": "https://www.udemy.com/course/e-commerce-app-from-scratch-to-play-store-and-beyond-part1/",
      "bio": "Come and enjoy the course",
      "objectives": [
        "Learn to develop an E-Commerce App",
        "Payment Gateway",
        "Git and Github",
        "UI and UX",
        "Debugging",
        "Testing",
        "Production"
      ],
      "course_content": {},
      "requirements": [
        "If you wish you can purchase my other course",
        "a PC or Laptop with minimum 8 GB RAM",
        "A minimum Android Knowledge"
      ],
      "description": "Hello folks,\nI'm Sheshadhree, from India and I'm here to teach you how to develop an beautiful e-commerce app. So you can watch the Intro video to know more about the course. As said this Course consists of 2 parts and it'll cover various topics such as\n1)Register to firebase\n2)Login page\n3)Recyclerview\n4)Firebase\n5)Firebase Auth\n6)Crashlytics\n7)Storage\n8)How to handle for all kinds of user's\n9)Payment Gateway\n10)it consist four types of user\ni)For Customer's\nii)For Seller's\niii)For Admin\niv)For Employee\n11)Git\n12)Github\n\n\nSo this course is for everyone whom like to upgrade their knowledge in android studio and who wanna create an e-commerce app with java and xml.\n\n\n\n\nDownload All Source Code at Resources which is given in Second Tutorial of Each Course\n\n\nThe Major 5 Stage's of Project Development are :\ni)Development\nii)UI/UX\niii)Testing\niv)Debugging\nv)Production\n\n\nSo if you complete all 2 parts you can able to get a clear knowledge about Android App development.It'll be a Strong foundation for your career and you can take Google's Android Associate developer Exam after Completing all the 2 course's efficiently by adding little spices to the leftover topic which we have not seen here.\n\n\n\n\nPlease watch Github Videos first at the end of Part 1 (last 4 videos)",
      "target_audience": [
        "Those who are willing to develop an E-Commerce App",
        "Any level Android Developer"
      ]
    },
    {
      "title": "Tinder iOS Clone with Ex-Meta Engineer | SwiftUI | iOS 17",
      "url": "https://www.udemy.com/course/tinder-ios-clone/",
      "bio": "Learn to Develop a Dating App Using SwiftUI and iOS 17 from an Ex-Meta Engineer",
      "objectives": [
        "Build a dating app with SwiftUI from scratch",
        "Learn advanced animations and coding techniques",
        "Learn how to optimize performance of your app",
        "Learn from an Ex-Meta Engineer who has worked at the highest levels in the industry"
      ],
      "course_content": {},
      "requirements": [
        "No programming experience needed! All you need is a Mac (Apple) computer"
      ],
      "description": "Course Description:\n\nReady to dive into the exciting world of app development and create your very own dating app? Look no further than Tinder SwiftUI Pro! This comprehensive course is designed to guide you through the process of building a fully functional iOS app clone of Tinder using the latest technologies.\nWith a focus on SwiftUI and iOS 17, Tinder SwiftUI Pro empowers you to unleash your creativity and technical skills to develop a sleek and intuitive dating app that users will love. Whether you're a seasoned developer or just starting out, this course provides the perfect opportunity to hone your skills and build a portfolio-worthy project.\nHere's what you'll learn in Tinder SwiftUI Pro:\n1. Swipe to Match: Master the swipe gesture functionality to enable users to effortlessly match with potential dates, just like in the real Tinder app. Learn how to implement smooth animations with SwiftUI to accomplish this\n2. User Profiles: Learn how to create and customize user profiles, allowing users to showcase their personality and interests.\n3. Uploading Multiple Profile Images: Implement the ability for users to upload and display multiple images on their profiles, enhancing their visibility and attractiveness.\n4. View Matches: Build a robust matching algorithm and messaging feature that enables users to view their matches and engage in meaningful conversations within the app.\n5. Full User Onboarding Flow: Design and implement a seamless onboarding experience for new users, guiding them through the app's features and functionality.\n6. User Authentication: Ensure the security of user data with a comprehensive user authentication system, providing peace of mind for both you and your users.\n7. Advanced Matching Algorithm: Develop an algorithm to match users based on their preferences, interests, and sexual orientation, enhancing the overall user experience and increasing the chances of meaningful connections.\n\nBy the end of this course, you'll have the knowledge and skills to create your own dating app from scratch, complete with all the essential features and functionalities. Whether you're looking to break into the app development industry or simply want to expand your skill set, Tinder SwiftUI Pro is the ultimate guide to building a successful dating app.\nEnroll now and start turning your app ideas into reality!",
      "target_audience": [
        "Developers of all levels looking to improve their skills"
      ]
    },
    {
      "title": "Complete Flutter Practical Quiz 2025 for Job-Ready Skills",
      "url": "https://www.udemy.com/course/complete-flutter-practical-quiz-2025-for-job-ready-skills/",
      "bio": "Hands-on Flutter & Dart Practical Quiz: Widgets, State Management, Async, Testing & Debugging",
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": "Boost your Flutter development skills with this Complete Flutter Practical Quiz 2025 course! Designed for beginner and intermediate developers, this course provides 134 hands-on practical questions covering the most important aspects of Flutter development.\nIn this course, you will complete practical tests on:\nDart Fundamentals & Language Features (20 questions): Strengthen your understanding of core Dart concepts.\nFlutter Widgets & UI Design (30 questions): Build responsive and interactive UI with real-world widget scenarios.\nState Management (Provider, Riverpod, BLoC, setState) (24 questions): Apply state management techniques in practical coding tasks.\nNavigation & Routing (12 questions): Implement multi-screen navigation and routing challenges.\nAsynchronous Programming & APIs (Future, Stream, HTTP) (24 questions): Work with async operations and API integration.\nTesting, Debugging & Performance Optimization (24 questions): Debug, test, and optimize Flutter apps for production-ready quality.\nEach quiz simulates real-world coding challenges, allowing you to test your knowledge, debug code, and improve problem-solving skills. By completing this course, you will gain confidence in writing, testing, and optimizing Flutter applications, making you job-ready as a Flutter developer in 2025.\nWhether you are new to Flutter or looking to solidify your skills, this course offers a practical, hands-on approach with immediate feedback and real-world relevance. Take the quizzes, track your progress, and accelerate your journey to becoming a professional Flutter developer.",
      "target_audience": [
        "Beginner to intermediate developers aiming to improve Flutter skills with practical coding.",
        "Students preparing for Flutter interviews or job-ready assessments in 2025."
      ]
    },
    {
      "title": "React Native - find a job! 100+ Interview questions 2025",
      "url": "https://www.udemy.com/course/react-native-find-a-job-100-interview-questions-2024/",
      "bio": "Technical questions and answers that will help you get a job, get promoted and become a better mobile developer.",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "Don't believe in all these courses from Hindus about building another master advanced React-Native application for selling shoes or a To-Do list in JavaScript. I will show you what real React-Native programming is.\n\nYearly net earnings of React-Native developers:\nJunior: $45 000 - $82 000\nMid: $82 000 - $110 000\nSenior: $110 000- $185 000\nYou don't have to immediately advance from junior to mid level. All you need to do is increase your competences a bit, and this may translate into additional earnings of $30,000-$40,000. This is the first course in a series that I plan. Its goal is to show you what really matters in this industry and how to stand out among thousands of people from bootcamps or other pseudo guides on Udemy.\n\nEach question in this course costs you less than 0.5 $. Each of them is an investment in your development and an opportunity for direct contact with me.\n\nSample questions (answers in the course):\nHow do you approach creating views in a mobile application intended to run on multiple types of mobile devices?\nWhat is the difference between .svg and .png graphic files in terms of optimization in a mobile application?\nWhy should custom hook names start with the word \"use\"?\nWhat are the types of libraries (dependencies) in package.json in React-Native?\nWhat libraries and state management hooks do you know, and when is it worth using them?\nWhere do you get information about React-Native updates?\nWhat does the course include?\nIn the course, you get access to 5 tests, each consisting of 20 questions about React-Native. After completing each test, you receive a list of tools and libraries worth knowing at that level to be an attractive candidate in 2024.\nYou will also receive a link to an Excel file where you can self-assess your level (junior, mid, senior, expert).\n\n\nWho is it for?\nAre you planning to get your first job or switch to a better one? Check what questions you can expect in 2024 and learn the answers expected by recruiters first-hand! Find out which tools and libraries are highly desired in the market and used in commercial projects.\n\n\nAbout me\nAs a React-Native developer, I've worked over 15,000 hours. I also conduct recruitments from juniors to seniors in this technology. Despite increased competition in the market, it's still difficult to find a programmer who can work independently and is attractive to clients. For mid-level positions, I reject 8 out of 10 people after technical interviews, even though recruitment is easier than for juniors! You don't ask mids about theory and basics but about experience and approach to various issues. Still, most of them are not suitable due to lack of knowledge of libraries and tools commonly used in commercial projects and lack of team fit in terms of design patterns.\n\n\nWhat score is considered passing in the practical test?\nThe passing level for each test is 50%. However, take it with a grain of salt because the questions are really difficult and cover many areas of mobile development work. If you want to know how to assess your skill level, search for my article on Google: \"junior, mid, senior, or expert – how to classify yourself?\"\n\n\nCan I take the practical test more than once?\nYou can take each practical test multiple times. After completing the practical test, your final score will be published. With each attempt, the order of questions and answers is randomized, so it's worth repeating them.\n\n\nIs there a time limit for the practical tests?\nEach test consists of 20 questions and has a time limit of 30 minutes. 1.5 minutes per answer in a closed test format is quite sufficient, but consider that in reality, you would need to provide oral answers.",
      "target_audience": [
        "Beginner programmers who are looking for their first job on the market as a react-native developer.",
        "Experienced programmers who want to change their job for a better one or get promoted.",
        "Programmers who want to develop, but lack guidance on what to learn."
      ]
    },
    {
      "title": "Develop Mobile Apps Like a Pro on Your Smartphone",
      "url": "https://www.udemy.com/course/develop-mobile-apps-like-a-pro-on-your-smartphone/",
      "bio": "App Development on the Go: Master Mobile App Development with just Your Smartphone and learn mobile app monetization",
      "objectives": [
        "Learn how to develop fully functional mobile applications from scratch using just your smartphone.",
        "Learn strategies to monetize your mobile apps, including ad integration, in-app purchases, and subscription models.",
        "Build fully functional e-commerce mobile apps, integrating features like product listings, shopping carts, and secure payment gateways.",
        "Discover how to integrate Firebase into your apps for real-time database functionality, user authentication, and more.",
        "Master the art of app development using just your smartphone, from idea to deployment, with efficient workflows and tools.",
        "Learn the step-by-step process of deploying your app to the Google Play Store, reaching millions of users worldwide."
      ],
      "course_content": {
        "Introduction": [
          "Apps we will be building",
          "Introduction to Mobile App Development",
          "Overview of Sketchware",
          "Creating a Counter Application"
        ],
        "Developing a Lyrics/Music App": [
          "What we will be building",
          "Designing First Screen and Adding Timer",
          "Rough Overview of Music App Interface",
          "Adding Lyrics",
          "More Customization to User Interface",
          "Adding Background Music to App"
        ],
        "Developing a professional learning app": [
          "What we will be building",
          "Developing the Frontview",
          "Working on Book Categories",
          "Creating the User Interface for Social Networks",
          "Testing Our App",
          "Adding Corner Radius to App's User Interface",
          "Minor Fixes on App",
          "Working on Books Sub Category Page",
          "Creating Book Chapters",
          "Setting Page Title and Further Customization",
          "Implementing WebView to your App",
          "Linking App to Social Media Handles",
          "Fixing the Menu Drawer and Assignment",
          "Concluding our App"
        ],
        "Developing a mobile app for a company": [
          "What we will be building",
          "Creating the FrontView"
        ]
      },
      "requirements": [
        "No Prior Experience Required: This courseis designed for beginners, so you don't need any prior mobile development knowledge.",
        "Access to a mobile phone"
      ],
      "description": "Unlock the full potential of mobile app development using only your smartphone! Whether you're diving into app creation for the first time or you're a seasoned developer seeking new skills, this comprehensive course is your guide to crafting professional-grade apps from inception to launch.\n\n\nThrough the development of 7 diverse mobile apps, you'll master every stage of the process, from efficient development and sleek design to effective monetization strategies, Firebase integration, and seamless deployment. By the course's end, you'll emerge as a proficient app developer, equipped to create innovative apps that stand out in the market.\n\n\nWhat You Will Learn:\n\n\n1. Principles of Mobile App Design: Understand the fundamentals of designing user-friendly interfaces and engaging user experiences that captivate your audience and enhance usability.\n\n\n2. Database Integration Techniques: Learn how to integrate Firebase, a real-time database, into your apps to store and retrieve data, providing a seamless user experience and enabling dynamic app content.\n\n\n3. Strategies for Monetizing Your Apps: Explore various monetization strategies such as in-app purchases, subscriptions, and ad integration to generate revenue from your apps and maximize your earnings potential.\n\n\n4. E-commerce App Development: Dive into the world of e-commerce app development, including creating product listings, implementing shopping carts, and integrating secure payment gateways for a complete shopping experience.\n\n\n5. Step-by-step Development Guidance: Follow a structured approach to app development, learning how to plan, design, develop, test, and deploy your apps effectively, ensuring they meet quality standards and user expectations.\n\n\n6. App Deployment Procedures: Master the process of deploying your apps to the Google Play Store, from preparing your app for release to navigating the submission process and managing updates post-launch.\n\n\nIdeal for aspiring and experienced developers alike, this course provides a comprehensive path to creating impactful mobile apps using only your smartphone.",
      "target_audience": [
        "Entrepreneurs: Who want to create their own mobile apps for their businesses.",
        "Students: Who want to learn app development using accessible tools.",
        "Professionals: Who want to add mobile app development skills to their portfolio",
        "Hobbyists: Who enjoy creating apps and want to take their skills to the next level.",
        "Anyone: Who wants to learn how to develop mobile apps using just their smartphone."
      ]
    },
    {
      "title": "Building a Chat App for iOS from Scratch",
      "url": "https://www.udemy.com/course/building-a-chat-app-for-ios/",
      "bio": "Web-Services, Design, Parsing, Database, PHP and Much More",
      "objectives": [
        "Learn Building a Chat Application for iOS",
        "Learn Building Web-Services",
        "Learn Databases",
        "Learn Parsing"
      ],
      "course_content": {
        "Introduction": [
          "Demo of Chap App",
          "Demo of group chat room"
        ],
        "Database": [
          "Database structure"
        ],
        "User Interface": [
          "Creating the home screen for chat application",
          "Creating UI of user registration screen",
          "Creating UI for chatroom list and friend's list",
          "Creating UI for add new friend and add new chat room"
        ],
        "Web services": [
          "Creating the database and web service",
          "Implementing Web services - I",
          "Creating web services",
          "Implementing Web service - II"
        ],
        "Sending of Message": [
          "Implementing sending of messages functionality - I",
          "Implementing sending of messages functionality - II"
        ],
        "Exercise files": [
          "File"
        ]
      },
      "requirements": [
        "Objective-C",
        "iOS Development"
      ],
      "description": "With \"Developing a chat app for iOS\", you will learn everything about chat apps, even if you've never build one before!\nThe full course has several video lectures, divided into several chapters. Each chapter will give you a new level of knowledge in chat app development. We'll start from the basics of chat app development to more advanced and the most popular techniques used now a days.\n\"Building a Chat App\" will give you a new perspective on how the Apps and Web-Services work And after you completed the course you will be able to create your own Chat app with the latest technology and technique. Hope you enjoy!\nNOTE: In order to keep you up to date in the world of Chat app Development all the chapters will be updated regularly with new lectures, projects, quizzes and any changes in future versions of all the programming languages covered on the course.\nWhy Learn Chat App Development?\nThe Internet is the fastest and largest platform ever created for humans to learn, communicate, share, or create businesses of any kind, and all of this in just 15 years! It is estimated that in the next 2 or 3 years more than 80%%%% of the companies around the world will become internet dependent which will cause a huge demand for App developer in this market. As the World Wide Web grows Chat apps needs to upgraded proportionally.\nLearning Chat app Development will give you the opportunity to start ahead of other competitors by giving you the knowledge of the most recent app technologies and how to better apply them on your future projects. Knowing Chat app Development will give you the ability to control and create anything on the mobile.\nWe promise you would have never had such kind of learning experience.\nWelcome to \"Building a Chat App for iOS\"",
      "target_audience": [
        "Must know Objective-C"
      ]
    },
    {
      "title": "Android Studio Certification: Fundamentals & Best Practices",
      "url": "https://www.udemy.com/course/android-studio-certification-fundamentals-best-practices/",
      "bio": "Validating Proficiency in Android Studio Development Workflows",
      "objectives": [],
      "course_content": {
        "Practice Tests": []
      },
      "requirements": [],
      "description": "This comprehensive certification exam is designed to evaluate and reinforce your practical mastery of Android Studio as a full-featured integrated development environment. Over the course of the exam, you will demonstrate your ability to initialize and configure new Android projects, manage complex Gradle build scripts, establish multi-module architectures, and integrate remote repositories and dependencies with precision. You will then transition seamlessly into hands-on UI construction, where you will apply ConstraintLayout principles, chains, styles, and themes to build responsive, accessible interfaces.\nNext, the exam probes your understanding of the Android component lifecycle by requiring you to manage Activities and Fragments, perform explicit and implicit Intent operations, and handle fragment transactions within a container. Your knowledge of data persistence will be assessed through questions on SharedPreferences for lightweight key/value storage, Room for structured SQLite database management including entity definitions, DAOs, and migration strategies, and Retrofit for network API consumption—including defining service interfaces, request annotations, and parsing JSON responses into Kotlin or Java data classes.\nThe debugging and quality-assurance section will test your proficiency with Android Studio’s debugging tools: setting and managing breakpoints, navigating the Android Profiler to inspect CPU, memory, and network usage, and writing both local JUnit tests and instrumented Espresso UI tests to ensure code correctness and robust user interactions. Finally, you will showcase your ability to prepare production-ready builds by generating and signing APKs and App Bundles, applying R8/ProGuard rules for code shrinking and obfuscation, and optimizing resources for minimal download size.\nThrough a balanced mix of multiple-choice questions, concise technical explanations, and real-world coding exercises, this exam not only measures rote memorization but also gauges your capacity to apply best practices across each phase of the Android app lifecycle. Upon completion, you will have proven your ability to deliver high-quality, maintainable applications using industry-standard workflows and tools.",
      "target_audience": [
        "Junior Android Developers looking to validate foundational IDE, Gradle, and core framework skills.",
        "Mid-level Engineers aiming to strengthen best practices in UI design, data persistence, and testing.",
        "Mobile Tech Leads who need a structured way to assess their team’s proficiency with Android Studio workflows.",
        "Full-stack Developers transitioning into mobile, seeking a formal checklist of Android build, debug, and release processes.",
        "Computer Science Students or bootcamp graduates preparing for a role that requires hands-on comfort with Android Studio.",
        "Freelancers & Consultants who want to demonstrate to clients a certified level of Android Studio expertise."
      ]
    },
    {
      "title": "Build AI Super App in Android with Gemini & ImageGen",
      "url": "https://www.udemy.com/course/build-ai-chatbots-assistants-in-android-with-google-gemini/",
      "bio": "Create Real-Time AI Assistants & Chatbots in Android with Gemini – Voice, Chat, Image & Context-Aware Features",
      "objectives": [
        "Build intelligent chatbots and AI assistants using Google Gemini in Android.",
        "Design visually appealing and intuitive chat interfaces with Android Studio.",
        "Integrate text-based queries and responses powered by Gemini’s advanced NLP",
        "Enable image-based questions for enhanced, context-aware AI responses",
        "Implement real-time responses using dynamic streaming",
        "Develop contextually aware conversations with extended chat capabilities",
        "Add voice features like speech-to-text and text-to-speech for interactive apps"
      ],
      "course_content": {
        "Introduction": [
          "Setting Up a New Android Studio Project",
          "Exploring Google AI Studio",
          "Loading Gemini Models in Android Kotlin Application",
          "Passing Input to Gemini in Android Kotlin and Getting Results"
        ],
        "Gemini Clone: Build GUI": [
          "Working on EditText and Send button in Android Kotlin App",
          "Minor GUI improvements in Android Kotlin App",
          "Setting Up Chat UI in Android Kotlin App",
          "Display Messages as Chat Bubbles in Android Kotlin App",
          "Showing Gemini Response as Chat Bubble in Android Kotlin"
        ],
        "AI & Images": [
          "Building GUI for Image Picker in Android Kotlin",
          "Choosing Images in Android Kotlin Application",
          "Adding Image Loader to Load Images as Message Bubbles",
          "Setting up Text and Image Input Feature of Google Gemini in Android",
          "Passing Text and Images to Gemini and Getting the Result in Android Kotlin"
        ],
        "Text To Speech: Hear Response of Google Gemini": [
          "Adding Speech to Text in Android Kotlin",
          "GUI setup for enable and disable TTS",
          "Enable and Disable Text to Speech in Android Kotlin",
          "Stop TTS in Middle in Android Kotlin App",
          "Exploring TTS Further in Android Kotlin"
        ],
        "Speech Recognition With Google Gemini in Android": [
          "Setting up GUI for Speech Recognition inside Gemini Android Kotlin App",
          "Performing Speech Recognition in Android Kotlin Application",
          "Getting Speech Recognition Results and Showing it on Screen",
          "Passing Voice Commands to Google Gemini in Android Kotlin App",
          "Speech Recognition Android Overview"
        ],
        "Chat Feature of Google Gemini in Android Kotlin App": [
          "Chat Feature Introduction",
          "Using Chat Feature in Android Kotlin App"
        ],
        "Using Streams in Android Kotlin App": [
          "Implement Streaming in Android Kotlin App",
          "Removing Duplications for Streaming in Android",
          "Using Streams with Chat in Android",
          "Chat Feature Introduction",
          "Use Streams with Text Only Input Feature in Android"
        ]
      },
      "requirements": [
        "Some basic knowledge of App development in Android is recommended"
      ],
      "description": "Ready to bring your Android apps to life with AI that listens, responds, and understands in real time?\nIn this hands-on course, you'll learn to build intelligent, real-time AI assistants using Google Gemin, and Kotlin. Go beyond simple bots—create Android apps that hold conversations, respond to voice commands, process images, and deliver a fast, seamless user experience.\n\n\nWhy Learn From This Course?\nTaught by Muhammad Hamza Asif, an experienced mobile ML instructor with over 60,000+ Udemy students, this course gives you practical, project-based learning. You’ll integrate powerful GenAI models into your Android apps to deliver engaging, context-aware, voice-enabled assistants that feel truly intelligent.\n\n\nWhat You'll Learn\nBuild Real-Time AI Chat Interfaces\nUse LiveData and Kotlin coroutines to stream Gemini responses as users type or speak.\nIntegrate Google Gemini APIs\nHarness powerful large language models to generate intelligent, context-aware conversations.\nEnable Voice Input & Output\nAdd speech-to-text and text-to-speech features so users can talk to your app and hear responses.\nCreate Multi-Modal AI Assistants\nProcess image-based queries with Gemini’s vision capabilities to answer visual questions.\nBuild Context-Aware Conversations\nMaintain stateful chats that evolve and adapt to the user’s needs with memory and conversation history.\nDesign Stunning, Responsive UIs\nCraft sleek, user-friendly chat interfaces in Android Studio with real-time response streaming.\n\n\nReal-World Use Cases You'll Master\nAI-powered customer support\nVoice assistants for productivity apps\nInteractive educational tutors\nSmart e-commerce helpers\nVisual query assistants (send a photo, get info)\n\n\nBy the End of This Course, You’ll Be Able To:\nBuild and deploy fully functional AI assistants on Android\nHandle real-time communication with generative AI APIs\nImplement natural, engaging voice and chat experiences\nUse image input to create multi-modal interactions\nFuture-proof your development skills with in-demand GenAI features\n\n\nWho Should Take This Course?\nAndroid developers looking to build smart, real-time AI features\nKotlin developers eager to integrate generative AI\nInnovators building next-gen apps with Gemini\nAnyone ready to create apps that talk, listen, and understand\n\n\nThe Future of Android is Intelligent\nAI is no longer a nice-to-have — it’s the new standard. This course gives you everything you need to stay ahead, build smarter apps, and lead the next wave of AI-powered Android experiences.\nLet’s build something amazing. Enroll now and create real-time AI assistants with Android + GenAI!",
      "target_audience": [
        "Students and Beginners with a basic understanding of Kotlin and Android, ready to explore the world of AI integration.",
        "Android Developers eager to integrate cutting-edge AI technologies like Google Gemini into their apps",
        "Professionals in Customer Support, E-commerce, or Education wanting to develop custom AI assistants tailored to their industry needs.",
        "Mobile App Creators aiming to design innovative, AI-powered user experiences.",
        "AI Enthusiasts interested in building intelligent chatbots and assistants for diverse use cases.",
        "Tech Innovators passionate about creating next-gen apps with advanced conversational and image-based AI capabilities."
      ]
    },
    {
      "title": "Kotlin Multiplatform with Compose –Build Real Cross-Platform",
      "url": "https://www.udemy.com/course/kotlin-multiplatform-with-compose/",
      "bio": "Master Kotlin Multiplatform and Jetpack Compose to build real apps for Android, iOS, and Desktop with one shared codebas",
      "objectives": [
        "Build High-Performance Cross-Platform Apps",
        "Share Business Logic and UI Across Platforms",
        "Implement Real-World Features Using Industry Tools",
        "Maximize Code Reuse Without Sacrificing Platform-Specific Needs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Kotlin Multiplatform intro",
          "Setup your environment for Kmp Development",
          "Kotlin Multiplatform project creation",
          "Android Studio Interface walk through",
          "Kotlin Multiplatform Modules explained",
          "Test run App in IOS,Android and Desktop"
        ],
        "Compose Multiplatform Basics": [
          "Todo Application overview",
          "Introduction to Compose Multiplatform",
          "Compose Basics Inputs",
          "Compose Basics Outputs",
          "Test run Todo Application"
        ],
        "Kotlin Multiplatform in Action": [
          "What we will build",
          "Pet finder Api setup",
          "Testing Petfinder API with postman",
          "Overview of Project Gradle",
          "Common Gradle Module",
          "Project assets",
          "Pet finder Remote Models setup",
          "Pet finder Access Token with OAuth 2 setup",
          "Ktor HttpClient Factory",
          "Safe network request with ktor",
          "Setting Datastore for Local preferences for cross platform",
          "Creating Api Service for the Petfinder data",
          "Domain Models for Mapping",
          "Domain-Dtos Mapper for the App",
          "Creating a.repository for Pet finder data",
          "Provide Dependency with a service locator Pattern(DI)",
          "Setting up Common viewmodel",
          "Home Screen Composable Heading content",
          "Home Screen Composable Body Content",
          "Test run Home Screen",
          "Material3 theme builder",
          "Setting up Material3 theme in the project",
          "DetailScreen overview",
          "Setting topAppBar",
          "Detail UI programing",
          "Mystory composable",
          "Pet info item Composable",
          "Testrun Detail Screen"
        ],
        "Compose Multiplatform Navigation": [
          "Compose Navigation Intro",
          "Setting up type safe Navigation with compose",
          "Adaptive Navigation Setup",
          "Testrun App navigation"
        ],
        "Pagination in Kotlin Multiplatform": [
          "Setting Custom Paginator Class",
          "Modifying viewmodel for pagination",
          "Updating UI for pagination support",
          "Testrun App in Android,IOS and Desktop"
        ],
        "Dependency Injection with Koin": [
          "Why use Di library",
          "Implementing Koin Di in pet finder"
        ],
        "Persistent Storage in Kmp": [
          "Introduction to Persistent Storage with Kmp",
          "Setting Gradle Dependency for Room database in Kmp",
          "Setting Database Table(Entity)",
          "Setting Data Access Object (Dao)",
          "Database Class for Pet finder",
          "Room database Constructor setup",
          "Database Factory",
          "Providing Database Dependencies with Koin",
          "Room Type converters",
          "Domain - Entity Mappers with Kotlin extensions",
          "Updating pet repository with Db",
          "Viewmodel update with db",
          "Favourite Screen Composable setup",
          "Updating Home Screen Composable",
          "Updating Navigation",
          "Test run App in iOS,Desktop and Android",
          "Final words"
        ]
      },
      "requirements": [
        "don’t need to be an expert to take this course.",
        "Basic knowledge of Kotlin",
        "Some Android development experience (preferred but not mandatory)"
      ],
      "description": "Unlock the power of Kotlin Multiplatform and Jetpack Compose Multiplatform to build beautiful, scalable, and production-ready cross-platform applications with a single codebase.\nIn this hands-on course, you’ll build real-world projects that target Android, iOS, and Desktop  all using the modern Kotlin Multiplatform ecosystem. From setting up your development environment to deploying fully functional applications, this course guides you every step of the way.\nYou’ll learn how to structure a cross-platform project, implement reusable UI with Jetpack Compose, access REST APIs using Ktor, manage state with shared ViewModels, persist local data using Datastore, implement pagination, and build smooth navigation experiences. This course blends architecture, design, and real coding best practices to help you become job-ready for the future of cross-platform development.\nWhether you're an Android developer looking to expand to iOS/Desktop or you're new to Kotlin and want to build apps for all major platforms  this course is your fast track to becoming a Compose Multiplatform pro.\nWhat you'll learn\nSet up and structure a Kotlin Multiplatform project using Android Studio\nShare UI code across Android, iOS, and Desktop with Jetpack Compose Multiplatform\nBuild a complete Todo app to master Compose basics\nConnect to real-world APIs using Ktor and OAuth 2\nBuild a Pet Finder app using MVVM architecture and DI\nUse Datastore for persistent preferences across platforms\nImplement adaptive and type-safe navigation with Compose\nCreate a custom pagination system from scratch\nApply clean architecture principles to your KMP projects\nTest and run your apps on Android, iOS, and Desktop platforms\nTools & Technologies Used\nKotlin Multiplatform\nJetpack Compose Multiplatform\nAndroid Studio\nKtor HTTP Client\nOAuth 2 Authentication\nDatastore Preferences\nMVVM + Clean Architecture\nNavigation & Pagination\nMaterial 3 Design",
      "target_audience": [
        "Android developers looking to go cross-platform",
        "Kotlin developers ready to scale their skills",
        "Developers tired of maintaining separate codebases for iOS and Android",
        "Anyone curious about Compose Multiplatform and how to use one UI across devices"
      ]
    },
    {
      "title": "Kotlin | Android App Development Hands-on Projects Course",
      "url": "https://www.udemy.com/course/kotlin-android-app-development-hands-on-projects-course/",
      "bio": "Android App Development with Kotlin | Boost your Android development skills with real kotlin android apps & be a master",
      "objectives": [
        "You will reinforce your existing android information by applying.",
        "Using SQLite database, you will understand how to work with databases in Android.",
        "You will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room).",
        "You will be able to develop user-friendly interfaces using Material Design principles and components.",
        "You will be able to develop modern Android apps",
        "Applying Dark theme to the App",
        "CRUD operations with Room Persistence Library",
        "Saving Data using Shared Preferences",
        "Creating and Using a timer",
        "Creating Android Game",
        "Understanding the MVVM (Model-View-ViewModel) architecture",
        "Animations in Android",
        "Creating Splash Screen with Animations and new Splash Screen API",
        "Data Transfer Between Screens",
        "Firebase Real-Time Database",
        "Authentication with Firebase",
        "And much more about Android"
      ],
      "course_content": {
        "Calculator Application": [
          "Introduction to Calculator App",
          "Project Files: Android App Development",
          "Application Design – Part 1",
          "Application Design – Part 2",
          "Application Design – Part 3",
          "Printing Numbers to the Screen",
          "Creating Calculation Functions",
          "Performing Calculation",
          "Deleting Data on the Screen",
          "Showing Calculation Steps",
          "Fixing Errors – Part 1",
          "Fixing Errors – Part 2",
          "Applying Dark Theme",
          "Saving All Data",
          "Quiz"
        ],
        "Number Guessing Game": [
          "Introduction to Number Guessing Game",
          "Splash Screen with Animation – Part 1",
          "Splash Screen with Animation – Part 2",
          "Home Page – Part 1",
          "Home Page – Part 2",
          "The Game Page Design",
          "Creating Game Logic",
          "Showing Results with Dialog Message",
          "Quiz"
        ],
        "ToDo List": [
          "ToDo List",
          "Quiz"
        ],
        "Math Game": [
          "Math Game - Part 1",
          "Math Game - Part 2",
          "Math Game - Part 3",
          "Math Game - Part 4",
          "Math Game - Part 5",
          "Math Game - Part 6",
          "Quiz"
        ],
        "Note Taking Application": [
          "What is the Database?",
          "SQLite Database",
          "Room Database",
          "Architectural Components",
          "Introducing Note-Taking Application with Kotlin",
          "Creating New Projects and Adding Required Libraries",
          "Creating Entity",
          "Creating Dao",
          "Creating Database",
          "Creating Repository",
          "Creating View Model",
          "User Interface Design",
          "Adapter Class - Showing Data in the Database in RecyclerView",
          "Adding New Data to the Database - Part 1",
          "Adding New Data to the Database - Part 2",
          "Deleting Data From Database",
          "Updating the Data in the Database - Part 1",
          "Updating the Data in the Database - Part 2",
          "Quiz"
        ],
        "Quiz Game Project": [
          "Introduction to Quiz Game App",
          "Splash Screen Part 1",
          "Splash Screen Part 2",
          "Login Page Design Part 1",
          "Login Page Design Part 2",
          "Sign Up Page - Part 1",
          "Sign Up Page - Part 2",
          "Integration with Firebase",
          "Creating an Account with Email and Password",
          "Sign In With Firebase - Part 1",
          "Sign In With Firebase - Part 2",
          "Adding the Forgot Password Option - Part 1",
          "Adding the Forgot Password Option - Part 2",
          "Sign In with Google Account - Part 1",
          "Sign In with Google Account - Part 2",
          "Homepage Design",
          "Questions Page Design - Part 1",
          "Questions Page Design - Part 2",
          "Creating the Database",
          "Showing Questions in App - Part 1",
          "Showing Questions in App - Part 2",
          "Getting User's Answers - Part 1",
          "Getting User's Answers - Part 2",
          "Creating a Timer - Part 1",
          "Creating a Timer - Part 2",
          "Saving User's Score to the Database",
          "Creating Dialog Message",
          "Preparing the Results - Page Part 1",
          "Preparing the Results - Page Part 2",
          "Showing a Certain of Questions to the User",
          "Quiz"
        ],
        "Extra": [
          "Kotlin | Android App Development Hands-on Projects Course"
        ]
      },
      "requirements": [
        "Basic knowledge of Android and Kotlin is required.",
        "Determination to learn and patience",
        "Having a working computer with 8 GB RAM or higher and internet connection",
        "We preferred Windows OS (64-bit) but this is not mandatory. You can prefer to use other Operating Systems.",
        "Watching the course videos completely, to the end and in order.",
        "Nothing else! It’s just you, your computer and your ambition to get started today"
      ],
      "description": "Hi there,\nWelcome to \"Kotlin | Android App Development Hands-on Projects Course\" course\nAndroid App Development with Kotlin | Boost your Android development skills with real kotlin android apps & be a master\n\n\nDue to its open-source nature, working with the Android platform necessitates constantly learning about the Android platform My android development course on Udemy keeps you ahead of this learning curve, with hands-on lectures on Android operating systems and more\n\nThe Android platform is increasingly popular with developers and a dominant force in the global smartphone market As more businesses develop mobile apps for customer engagement, Android development skills are likely to stay in high demand\nDo you want to improve your career options by learning android?\nDo you want to develop real android apps from Scratch with Kotlin?\nDo you want to strengthen your CV by making Android applications?\nDo you want to be an android studio master?\nDo you want to learn Android by developing applications?\nDo you want to build your first android app with Kotlin?\nIf your answer is “yes”, you are at the right place!\nKotlin is popular for both Android developers and Java developers. Whether you want to learn Kotlin in order to build your next Android app, or simply need an introduction to language, OAK Academy has a top-rated course to help you achieve your goals.\nKotlin is a statically-typed, general purpose programming language used to develop for the Java Virtual Machine and Android devices. Kotlin is an amalgamation of the object-oriented and functional programming paradigms and can also be compiled to JavaScript source code.\nThanks to this course, you will reinforce your android knowledge with hands-on Android applications and you will take your place in the android world.\nIn this course, we will develope six Android apps, and the difficulty level is from easy to difficult. Also, since the applications are prepared in a certain index, you will not experience any disconnection between the videos Thanks to this course, you will learn how to develop modern android applications in the simplest way and increase your self-confidence.\nIn this course, assuming that you have basic knowledge of Kotlin and Android, we aimed to increase your android skills by developing real kotlin android applications step by step rather than explaining the topics from the scratch.\n\n\nIf you want to develop yourself in Android Apps, this course is for you Improve yourself with different android applications\n\nOnline course platforms have android app development courses and android eCommerce app but we still think that most of them are missing the hands-on application part This course is designed to fill this gap\n\n\nIn this course;\nYou will reinforce your existing android information by applying\nUsing SQLite database, you will understand how to work with databases in Android\nYou will be able to develop applications with powerful architecture using Architecture Components (ViewModel, LiveData, Room)\nYou will be able to develop user-friendly interfaces using Material Design principles and components\nYou will be able to develop modern Android apps\nApplying Dark theme to the App\nCRUD operations with Room Persistence Library\nSaving Data using Shared Preferences\nCreating and Using a timer\nCreating Android Game\nUnderstanding the MVVM (Model-View-ViewModel) architecture\nAnimations in Android\nCreating Splash Screen with Animations and new Splash Screen API\nData Transfer Between Screens\nFirebase Real-Time Database\nAuthentication with Firebase\nAnd much more about Android\n\n\nWhat is Android Development?\nAndroid development is a software creation process that focuses on applications, better known as apps, that are compatible with devices running the Android operating system (OS) Because Android is an open-source project, developers have easy access to the Android software development kit (SDK) Many use this kit in conjunction with Kotlin, Java, and C++ programming languages to make their apps The Android SDK tools compile your code along with any data and resource files into an APK, or Android package, which is an archive file that uses an apk suffix One APK file contains all Android app contents used by devices to install your app When the app is complete and ready for release, Android developers can upload their apps to the Google Play Store for users to download\n\n\nWhat are some of the important tools for Android Development?\nThe tools you will use for Android development depend on how you would like to focus your career as an Android developer If you plan on focusing on native Android app development, you should know one or more of three programming languages: Java, Kotlin, and C++ Java and Kotlin are popular with a number of organizations that build their app natively C++ is the popular choice amongst developers who build high-performance games or plan on doing entry-level SDK work Some employers seek out Android developers that can create multiple platforms at the same time using programming frameworks like Flutter or React Native. If you are working with Flutter, you will also need to know Dart If you are working with React Native, you will most likely also need JavaScript programming knowledge\n\nIs Android Development a good career?\nWith over 3 billion active Android users globally, Android development is a valuable skill that can help you enhance your career Android development skills are in-demand around the world with various organizations across a broad range of industries When these organizations build Android apps natively, the top three programming languages are typically Java, Kotlin, and C++ You can also look for a job in Android development that uses cross-platform solutions like Flutter or React Native Whether you're inspired to add a new language to your repertoire or prepare for an interview, you can find a ton of online resources on sites like OAK Academy to keep your Android skills well-rounded\n\n\nIs Kotlin or Java better for Android Development?\nIf you are building new Android apps, Kotlin is better suited because it is the recommended programming language for Android If you are a first-time programmer, Kotlin android is also a better choice as it has safety features and concise syntax that will help you focus on learning core program fundamentals You should note that in some cases, employers may seek out Android developers that have Java programming skills For example, if you plan on joining an organization that already has an Android app, they may already be using Java If they already have an app written in Java, it is unlikely they will want to redesign the app in a different language, such as android kotlin Therefore, you should look at the job requirements to see if the job posting you are interested in lists Java as a required skill\n\n\nWhat skills do I need to be an Android Developer?\nAn Android developer works with the Android SDK (software development kit) and the Android operating system. They will need to understand the Android SDK, different versions of Android, and how these two things interact. An Android developer may need to know Java, Kotlin, C++, or all three languages and will need to understand the basics of SQL and XML. Java and Kotlin are programming languages used with Android, while SQL is used for database work, and XML is used for markup. Android developers should generally be competent programmers who understand both back-end and front-end development, emphasizing back-end or full-stack engineering. In terms of front-end knowledge, they should know the basics of UI (user interfaces) and UX (user experience). Android developers may work alone or in teams and may also need knowledge of project management strategies such as Agile.\n\n\nWhat is Android SDK and why is it important?\nAndroid SDK refers to the Android Software Development Kit. The Android SDK is a collection of tools that have been released and supported for the express purpose of creating Android software. Through the Android SDK, programmers can collect, create, and manage their code. It is a comprehensive development environment that is well-supported, not only by the Android team but also by its community. However, the Android SDK isn’t the only development environment available for Android technology. There are numerous solutions that will port programs out to the Android OS and Android-specific solutions such as Android Studio. Developers who are new to Android development will often start with the Android SDK, but they may decide that a different solution is ideal for them in the future.\n\n\nWhy would you want to take this course?\nOur answer is simple: The quality of teaching\nOAK Academy based in London is an online education company OAK Academy gives education in the field of IT, Software, Design, development in Turkish, English, Portuguese, Spanish, and a lot of different language on Udemy platform where it has over 1000 hours of video education lessons OAK Academy both increase its education series number by publishing new courses, and it makes students aware of all the innovations of already published courses by upgrading.\nWhen you enroll, you will feel the OAK Academy`s seasoned developers' expertise\n\n\nFresh Content\nIt’s no secret how technology is advancing at a rapid rate New tools are released every day, Google updates Android and it’s crucial to stay on top of the latest knowledge With this course, you will always have a chance to follow latest trends\n\n\nVideo and Audio Production Quality\nAll our content is created/produced as high-quality video/audio to provide you the best learning experience\n\n\nYou will be,\nSeeing clearly\nHearing clearly\nMoving through the course without distractions\n\n\nYou'll also get:\nLifetime Access to The Course\nFast & Friendly Support in the Q&A section\nUdemy Certificate of Completion Ready for Download\n\n\nWe offer full support, answering any questions\n\n\nDive in now into the \"Kotlin | Android App Development Hands-on Projects Course\" course\nAndroid App Development with Kotlin | Boost your Android development skills with real kotlin android apps & be a master\n\n\nSee you in the course!",
      "target_audience": [
        "Those who want to develop an Android mobile application.",
        "Who wants to improve their existing android knowledge.",
        "Those who want to develop applications using the Kotlin programming language.",
        "Those who want to develop modern applications and applications with a user-friendly interface",
        "Those who want to develop applications with Architectural Components (View Model, Live Data, Room) and SQLite.",
        "Those who want to develop applications with Firebase"
      ]
    },
    {
      "title": "Offline Face Recognition with Liveness Detection in Android",
      "url": "https://www.udemy.com/course/build-liveness-detection-in-android-prevent-face-spoofing/",
      "bio": "Build secure Android apps with real-time liveness & spoof detection using TensorFlow Lite — no paid APIs, fully offline",
      "objectives": [
        "Build a real-time liveness detection (anti-spoofing) system inside an Android app",
        "Perform offline liveness detection without using any paid APIs or SDKs",
        "Integrate and run a TensorFlow Lite model for detecting real vs. fake faces",
        "Detect spoof attempts like photos, videos, or masks using a free custom-trained model",
        "Display live camera feed and recognize faces in real-time",
        "Add liveness detection to an existing face recognition Android app",
        "Understand how TensorFlow Lite models work in Android apps",
        "Load and use TFLite models efficiently for on-device ML inference",
        "Secure face-based apps like attendance, login, or verification systems"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Importing Real-Time Face Recognition App and Running Initial Tests": [
          "Importing Real-Time Face Recognition App and Running Initial Tests",
          "How Face Recognition Application Works",
          "Displaying Live Camera Feed in Android Apps",
          "Performing Real-Time Face Detection in Android (Step-by-Step)",
          "Real-Time Face Recognition in Android – Complete Implementation",
          "Drawing Rectangles and Displaying Names on Recognized Faces",
          "Face Registration in Android – Add New Faces to the Recognition System"
        ],
        "Liveness Detection / Anti-Spoofing in Android – Detect Fake Faces": [
          "Adding and Loading Liveness Detection Model in Android (TFLite)",
          "Performing Liveness Detection in Android Using TFLite Model",
          "Testing the Liveness Detection App in Real-Time on Android"
        ],
        "Behind the Scenes: How TensorFlow Lite Performs Face Spoof Detection": [
          "Tensorflow Lite Introduction",
          "Loading TFLite Liveness Detection Model in Android Studio",
          "Input & Output of Liveness Detection Tflite Model in Android"
        ]
      },
      "requirements": [
        "Some Basic knowledge of Android App Development with Java or Kotlin",
        "A computer with Android Studio or Visual Studio installed (Windows/macOS/Linux)",
        "No prior machine learning experience required – everything is explained"
      ],
      "description": "In this hands-on course, you'll learn how to build a real-time liveness detection system (also called spoof detection) directly inside an Android app — without using any paid APIs or cloud services.\nLiveness detection helps confirm that the face in front of the camera is a real, live person — not just a photo, video, or mask. It’s a powerful feature used in banking apps, secure logins, KYC systems, and more.\n\n\nWhat Makes This Course Special?\nYou’ll start by importing a complete real-time face recognition Android app (code provided in the course).\nNew students: Everything is explained from scratch, including how the app works.\nReturning students: If you’ve taken my face recognition course, you can skip directly to the liveness detection section to enhance your existing app.\nThen, you'll learn to integrate a custom-trained TensorFlow Lite model that performs real-time spoof detection — and yes, the model is included in the course for free!\n\n\nWhat You'll Learn:\nWhat liveness detection is and why it’s important\nReal-world threats like photo, video, and mask spoofing\nHow to run a free TFLite spoof detection model on live camera feed\nHow to add liveness detection to an existing face recognition app\nHow to build fully offline, secure Android AI features\nHow to test and evaluate spoof detection in real time\n\n\nWho Should Take This Course?\nAndroid developers building camera-based or security apps\nDevelopers who’ve built face recognition apps and want to upgrade them\nBeginners — no prior ML experience needed\nAnyone interested in mobile AI security features\n\n\nWhy You’ll Love It:\nIncludes complete real-time face recognition Android app\nFree pre-trained TensorFlow Lite model for spoof detection\nWorks fully offline — no APIs, no cloud costs\nBeginner-friendly and step-by-step\nBuilds a practical, in-demand mobile security feature\nBy the end, you’ll have a fully working Android liveness detection system, integrated inside a real-time face recognition app, helping you secure your apps against spoofing — all without paying a cent for external services.",
      "target_audience": [
        "App creators looking for a free and offline alternative to paid liveness detection APIs",
        "Students or professionals working on face-based login, attendance, or verification apps",
        "Developers creating apps for banking, eKYC, secure access, or identity verification",
        "Android developers who want to secure their apps with liveness (anti-spoofing) detection",
        "Anyone interested in mobile machine learning and using TensorFlow Lite in Android apps"
      ]
    },
    {
      "title": "iOS 15 Widgets in SwiftUI 3 & WidgetKit",
      "url": "https://www.udemy.com/course/ios-15-widgets-in-swiftui-3-widgetkit/",
      "bio": "Learn WidgetKit by Building 7 Widgets in iOS 15, SwiftUI & WidgetKit",
      "objectives": [
        "Develop Widgets for iOS 15",
        "Develop Static and Configurable Widgets using WidgetKit",
        "Build 7 Complete Widgets with Varying Complexity",
        "SwiftUI for WidgetKit"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What are we building?"
        ],
        "Hello Widget": [
          "Start WidgetKit with Hello Widget"
        ],
        "Calendar Widget": [
          "Build Calendar Widget to Learn about Periodic Timeline Updates"
        ],
        "Quotes Widget": [
          "Make Network Calls from WidgetKit"
        ],
        "Weather Widget": [
          "Build Weather Widget & Learn Widget Families"
        ],
        "Rain Widget": [
          "Learn about App Resource Sharing and Graphical Chart Widget"
        ],
        "Reminder Widget": [
          "Pass Data from App to Widget"
        ],
        "Expense Widget": [
          "Build User Configurable Widgets"
        ],
        "Resources": [
          "SourceCode"
        ]
      },
      "requirements": [
        "Knowledge of SwiftUI",
        "Knowledge of Xcode"
      ],
      "description": "Apple in WWDC 20 introduced a new and cool extension to your apps in form of WidgetKit. iOS 15 and SwiftUI 3 added more horsepower to the framework. With app widget you can provide useful information about your app directly to your user's home screen. With this course you will learn all about widgets and what they have to offer.\nWe will build various widgets of varying complexity in this course and learn about widgets while building them from start to finish.\nJoin us in this journey and learn all about iOS widget kit. You will learn simple widgets to configurable widgets. You will build real weather app widget which will download the weather information from API and display that in small, medium and large size widgets.\nYou will also work with Timelines and learn to schedule widget updates to display dynamic content on app widgets.\n\n\nAccording to Apple widgetkit is:\nEasily build widgets and make them available across iOS, iPadOS, and macOS using the WidgetKit framework and the new widget API for SwiftUI. Widgets now come in multiple sizes, and users can visit the new widget gallery to search, preview sizes, and place them anywhere on the Home screen to access important details at a glance. They can also add Smart Stacks — sets of widgets that use on-device intelligence to surface the right widget at the right moment, based on factors like time, location, and activity.",
      "target_audience": [
        "Developers who wants to learn about Widgets & WidgetKit",
        "Developers who wants to learn WidgetKit by building real Widgets"
      ]
    },
    {
      "title": "Android - professional mobile development",
      "url": "https://www.udemy.com/course/android-become-a-professional-mobile-developer/",
      "bio": "Get access to all project files created during course!",
      "objectives": [
        "how to ensure fluent communication between Activities",
        "how to start up Activities in different ways",
        "how to implement the onTouchEvent method",
        "how to write SQliteOpenHelper so that it cooperates with the ContentProvider",
        "how to use Loaders and AsyncTask effectively",
        "how to get support for touchscreens",
        "how to use ActionBar and ActionBarSherlock",
        "how to use ContentProvider well",
        "how to draw bitmaps on Canvas",
        "how to send messages in BroadcastReceiver",
        "how to apply multiple outstanding design models to solve problems, which Android developers face every day",
        "how to use the RoboGuice framework to enhance code"
      ],
      "course_content": {
        "Activity & Intents": [
          "Theory",
          "Additional notes",
          "Practice part 1",
          "Practice part 2",
          "Practice part 3",
          "Practice part 4",
          "Practice part 5",
          "Conference App project file"
        ],
        "Fragments": [
          "Theory",
          "Additional notes",
          "Practice part 1",
          "Practice part 2",
          "Practice part 3"
        ],
        "Creating Custom Views": [
          "Theory",
          "Additional notes",
          "Practice"
        ],
        "SQliteOpenHelper": [
          "Theory",
          "Additional notes",
          "Practice part 1",
          "Practice part 2",
          "Practice part 3",
          "Practice part 4"
        ],
        "ContentProvider": [
          "Theory",
          "Additional notes",
          "Practice part 1",
          "Practice part 2",
          "Practice part 3",
          "Practice part 4",
          "Practice part 5"
        ],
        "Loaders & AsyncTask": [
          "Additional notes",
          "Practice part 1",
          "Practice part 2",
          "Practice part 3",
          "Practice part 4",
          "Practice part 5"
        ],
        "Services & BroadcastReceivers": [
          "Theory",
          "Additional notes",
          "Practice part 1",
          "Practice part 2",
          "Practice part 3",
          "Practice part 4"
        ],
        "Actionbar & GeasturesHandling": [
          "ActionBar - practice part 1",
          "ActionBar - practice part 2",
          "ActionBar - practice part 3",
          "GeasturesHandling - practice part 1",
          "GeasturesHandling - practice part 2",
          "Snake project file"
        ],
        "Roboguice": [
          "Theory",
          "Additional notes",
          "Practice part 1",
          "Practice part 2",
          "Practice part 3",
          "After roboguice - project file"
        ],
        "Course summary": [
          "Practice part 1",
          "Practice part 2",
          "Practice part 3"
        ]
      },
      "requirements": [
        "basics of Java language",
        "enthusiasm for learning"
      ],
      "description": "LAST UPDATED: 11/2020\n**YOU WILL GET ACCESS TO ALL PROJECT FILES CREATED DURING THIS COURSE**\nLearn by doing! Learn from practical examples!\nDuring this course you will create 2 advanced applications, that you can extend according your ideas! You will learn how to create popular game like Snake and how to add support for touchscreen, how to make your game more advanced and professional looking. Next with trainer you will program Conference App.\nA lot of usefull tips and tricks!\nEvery minute of the course was prepared with programmers in mind. You won't be bored with basic knowledge you already have.You will face many practical tasks and will have unlimited attempts, enabling you to perfect your skills.\nWhat will you gain?\nmobile application developer qualifications,\npractical solution knowledge,\nability to create your own advanced applications,\npossibility to earn from your own applications via Google Play.",
      "target_audience": [
        "Students should know basics of Java programming language, but many programming issues are explained during this course.",
        "Android developers who want to create advanced and profitable apps."
      ]
    },
    {
      "title": "Easily Implement MVVM Architecture in SwiftUI project",
      "url": "https://www.udemy.com/course/easily-implement-mvvm-architecture-in-swiftui-project/",
      "bio": "Master MVVM in SwiftUI: Build Scalable, Maintainable Apps with Clean Architecture, Data Binding, and State Management.",
      "objectives": [
        "Master the MVVM architecture to build robust, scalable, and maintainable SwiftUI apps by effectively separating UI, business logic, and data management.",
        "Gain hands-on experience in structuring SwiftUI projects using MVVM principles to enhance code readability, maintainability, and testability.",
        "Learn to implement data binding between View and ViewModel in SwiftUI, enabling dynamic UI updates and seamless user interaction management.",
        "Develop reusable SwiftUI components within the MVVM framework, promoting modularity and reducing redundancy across your iOS projects."
      ],
      "course_content": {
        "Introduction": [
          "Welcome",
          "Read more"
        ],
        "Model": [
          "API Requests and Responses",
          "API Requests and Responses",
          "Application UI State Management",
          "Application UI State Management",
          "Application Data to Be Displayed",
          "Application Data to Be Displayed",
          "Form Input and Validation",
          "Form Input and Validation",
          "UI Configuration and Theming",
          "UI Configuration and Theming",
          "Notifications and User Alerts",
          "Notifications and User Alerts",
          "View State Management",
          "View State Management"
        ],
        "View": [
          "Managing UI States: Loading, Error, Success",
          "Managing UI States: Loading, Error, Success",
          "Managing Data States: Updating UI on Data Change",
          "Managing Data States: Updating UI on Data Change",
          "Form Validation and State Updates",
          "Form Validation and State Updates",
          "Complex Data Presentation: Filtered Lists",
          "Complex Data Presentation: Filtered Lists"
        ],
        "View Model": [
          "Managing UI States: Loading, Error, Success",
          "Managing UI States: Loading, Error, Success",
          "Managing Data States: Updating UI on Data Change",
          "Managing Data States: Updating UI on Data Change",
          "Form Validation and State Updates",
          "Form Validation and State Updates",
          "Complex Data Presentation: Filtered Lists",
          "Complex Data Presentation: Filtered Lists"
        ],
        "Wrap Up": [
          "Thank you! Write code that makes your future self say “thank you.”"
        ]
      },
      "requirements": [
        "Basic Swift Knowledge: Familiarity with Swift syntax and fundamental programming concepts.",
        "Understanding of SwiftUI Basics: Prior experience building simple SwiftUI apps will be helpful.",
        "Development Environment: Access to a Mac with Xcode installed (version 14 or later recommended)."
      ],
      "description": "Are you tired of messy, unstructured SwiftUI code that’s hard to maintain and test? Do you want to learn how to build scalable and modular apps with clean architecture? If yes, then this course is for you!\n\n\nIn this course, you’ll master the MVVM (Model-View-ViewModel) architecture in SwiftUI, a powerful design pattern that encourages a clear separation of concerns. MVVM not only makes your code more organized and testable but also allows for smoother integration of data and user interactions. You’ll learn how to efficiently manage your application’s data flow while keeping your UI logic clean and responsive.\n\n\nWe’ll start with the basics of MVVM, breaking down each component: the Model, which handles data and business logic; the View, which focuses on UI and presentation; and the ViewModel, which acts as the bridge between the two. You’ll then dive into practical, hands-on projects where you’ll apply these concepts to real-world scenarios.\n\n\nYou’ll build a virtual plant collection app, where you’ll see MVVM in action, from data fetching and state management to implementing dynamic UI updates. We’ll cover essential topics like data binding, state management, and reusable components, ensuring that you not only understand the theory but also gain practical coding experience.\n\n\nBy the end of this course, you’ll be able to confidently structure SwiftUI projects using MVVM, making your apps more modular, testable, and maintainable. Whether you’re a beginner looking to level up your skills or an experienced developer aiming to implement robust architecture, this course will provide you with valuable, real-world insights.\n\n\nJoin me on this journey to mastering MVVM in SwiftUI and take your development skills to the next level!",
      "target_audience": [
        "Ideal for iOS developers, software engineers, and SwiftUI enthusiasts",
        "A beginner looking to level up your SwiftUI skills",
        "An experienced developer seeking to implement a modern architectural pattern"
      ]
    },
    {
      "title": "Android Dependency Injection With Dagger 2 - I",
      "url": "https://www.udemy.com/course/android-dependency-injection-with-dagger-i/",
      "bio": "Learn Dagger 2 Android Dependency Injection From Scratch",
      "objectives": [
        "Dependency Management",
        "Dependency Injection",
        "Dagger 2",
        "Kotlin Coroutines"
      ],
      "course_content": {
        "Introduction": [
          "Project File",
          "What is Dependency And Dependency Management",
          "Dagger Stage 1 - Part 1",
          "Dagger Stage 1 - Part 2",
          "Dagger Stage 1 - Project Explain",
          "Passing Dependencies Through Constructor",
          "Singleton Instance",
          "Inversion of Control",
          "Inversion of Control Practical",
          "Application and Activity Dependencies"
        ],
        "Dagger": [
          "Dagger Basic",
          "Dagger Annotations",
          "Dagger Dependencies",
          "Dagger Module",
          "Dagger Component",
          "Dagger Inject Dependencies",
          "Dagger Behind Sense",
          "Dagger Singleton",
          "MainViewModel Dependencies Injection",
          "Sharing Instance Between Component",
          "Dagger Custom Scope",
          "Set Application Component",
          "Activity Dependency Injection",
          "Singleton Repository",
          "Dagger Constructor Injection",
          "Repository Constructor Injection",
          "DatabaseService Constructor Injection",
          "NetworkService Constructor Injection",
          "Dagger Qualifier",
          "Conclusion"
        ]
      },
      "requirements": [
        "Basic of Android Development"
      ],
      "description": "In this course we will learn android dependency injection from scratch. In the first section of the course we will learn dependency injection by creating different project and implementing a best practice in dependency injection. In the second section of this course we will learn about the Dagger 2 and android dependency injection with dagger in a practical way.\nThis course is for anyone who is interested in learning Android Dependency Injection With Dagger. By the end of the course you will have a good understanding about dependency injection and Dagger 2.",
      "target_audience": [
        "Any one intrested to learn adroid dependency injection with dagger"
      ]
    },
    {
      "title": "Complete Android app Development Course - Without Coding",
      "url": "https://www.udemy.com/course/complete-android-app-development-course-without-coding/",
      "bio": "Learn about App inventer, thunkable, appybuilder, makeroid, droidmaker, kodular. how tp make apps for android.",
      "objectives": [
        "Become Master in android app development without coding. You can be the master of application developer in thunkable, appybuilder, makeroid, droidmaker and also in MIT app inventer. After Learn this you become the Master of (App inventer, thunkable, appybuilder, makeroid, droidmaker etc.) Sites."
      ],
      "course_content": {
        "Introduction": [
          "IntroDuction",
          "User Interface and Environment",
          "BlockS elements",
          "Apk Installing And Downloading",
          "How to create an app project",
          "Screen element",
          "Button element",
          "Check box element",
          "Label element",
          "Textbox element",
          "Date picker element",
          "Image element",
          "Web Viewer"
        ],
        "Alignment element": [
          "Horizontal Arrangement",
          "Horizontal Scroll Arrangement",
          "Vertical Arrangement",
          "Vertical Scroll Arrangement",
          "Side Menu Layout"
        ],
        "Media element": [
          "Video Player and Camcorder",
          "Camera element",
          "Youtube Player",
          "Lottie element",
          "Speech Recognizer",
          "Text To Speech",
          "Qr Code, Image Picker etc elements"
        ],
        "STORAGE": [
          "FireBase",
          "Tiny DataBase"
        ],
        "Simple App": [
          "Age Calculater",
          "Extension IDE"
        ],
        "How to Earn Money": [
          "Ad Mob"
        ]
      },
      "requirements": [
        "No knowledge to learn Android app development. You have only required Internet connection and Google Chrome browser in your PC. (App inventer, thunkable, appybuilder, makeroid, droidmaker) these sites bookmark in your browser."
      ],
      "description": "Do you want to build Android apps but don’t know how to code?\nThis course is designed for absolute beginners who want to create professional mobile apps without writing a single line of code. Using powerful platforms like MIT App Inventor, Thunkable, AppyBuilder, Makeroid, DroidMaker, and Kodular, you will learn step-by-step how to create, design, and publish your own apps on the Google Play Store.\nBy the end of this course, you’ll be able to build fully functional Android apps for personal use, business, or even clients without needing programming knowledge.\nRequirements\nNo prior programming knowledge required\nA computer or laptop with Internet connection\nGoogle Chrome browser installed\nBasic computer skills (drag, drop, click)\nA willingness to learn and practice\nWho This Course Is For\nStudents who want to start a career in app development without coding\nEntrepreneurs who want to create apps for their business quickly\nFreelancers looking to expand services by offering app development\nTeachers or hobbyists who want to explore app-building for learning and fun\nAnyone interested in technology but afraid of coding\nCourse Outcome\nAfter completing this course, you will:\nBecome a Master of app-building platforms like App Inventor, Thunkable, AppyBuilder, Makeroid, DroidMaker, and Kodular.\nHave the confidence to build apps for yourself, clients, or businesses.\nBe ready to publish and showcase your apps on the Google Play Store.\nJoin a fast-growing industry with endless opportunities in the mobile app world.",
      "target_audience": [
        "Any one can buy this course , who wants to develop android app. Any age and any one can buy this course."
      ]
    },
    {
      "title": "Build Photo Gallery App in SwiftUI 4, iOS 16 & PhotosPicker",
      "url": "https://www.udemy.com/course/build-photo-gallery-app-in-swiftui-4-ios-16-photospicker/",
      "bio": "Learn SwiftUI 4's Newly Introduced PhotosPicker with Real Example",
      "objectives": [
        "SwiftUI 4 Features",
        "SwiftUI",
        "Photos Picker in SwiftUI",
        "iOS 16"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Home View Setup"
        ],
        "Profile View": [
          "Profile Picture View",
          "Profile Picker View",
          "Profile Stats View",
          "Areas of Interest View"
        ],
        "Gallery View": [
          "Gallery Grid View",
          "Multiple Photo Picker View",
          "Grid Layout Button View"
        ]
      },
      "requirements": [
        "Knowledge of iOS Development",
        "Knowledge of Swift Programming Language"
      ],
      "description": "Welcome to another course from DevTechie[dot]com. In this course you will learn to build real world example of SwiftUI 4. We will build app called PhotosGallary where we will build a SwiftUI app from scratch in SwiftUI 4. You will also learn to use newly introduced photos picker control which is now available as a natively supported component in SwiftUI. You will learn to build tab based apps as well as app building by the technique called view composition where you will build individual component for the app UI and display them on to the screen. You will learn to build tag cloud with lazyVStack along with scroll view. You will also learn to use photos picker for single selection photos as well as multiple selection of photos. Photos will be picked from photo gallery and you will learn to arrange photo gallery grid with dynamic grid layout. The layout will be computational and upon user event the layout will cycle through various states. This course in intended for users who have familiarity with SwiftUI and iOS development. So join me in this course and let's build this app together which can be the profile page for your next app.",
      "target_audience": [
        "Devs who want to build photo gallery app using SwiftUI 4, iOS 16 and newly introduced photos picker"
      ]
    },
    {
      "title": "CoreLocation & MVVM in SwiftUI: Build Robust, Real-Time Map",
      "url": "https://www.udemy.com/course/corelocation-mvvm-in-swiftui-build-robust-real-time-map/",
      "bio": "Architect clean apps that understand where you are.",
      "objectives": [
        "Build a complete SwiftUI application using the MVVM architecture.",
        "Use CoreLocation to convert ZIP codes into geographic coordinates.",
        "Integrate MapKit to perform local searches and display nearby points of interest.",
        "Display search results dynamically in SwiftUI using List and ForEach.",
        "Create custom data wrappers like IdentifiableMapItem to work with non-Identifiable types in SwiftUI.",
        "Use @MainActor and @Published properties to manage state in real-time views.",
        "Perform asynchronous searches with MKLocalSearch and Swift's async/await pattern.",
        "Build reusable and decoupled services like a geolocation search service.",
        "Understand how SwiftUI maps and views respond to data changes.",
        "Deploy practical SwiftUI patterns to create scalable, real-world iOS applications."
      ],
      "course_content": {
        "Introduction": [
          "Location Tracker App Demonstration",
          "CLLocationManager: Core Methods and Callbacks",
          "Understanding CLLocationManager Methods and Callbacks",
          "Understanding the LocationService File in SwiftUI",
          "Mastering the LocationService in SwiftUI",
          "Location Tracker ViewModel",
          "Understanding the LocationViewModel in MVVM (SwiftUI)",
          "Understanding the ContentView in a SwiftUI Location App"
        ],
        "Live Coding of the Location Tracker": [
          "Coding the Location Tracker Application",
          "Explaining a passthrough Subject",
          "What is CLLocation?"
        ],
        "Live Coding of the Gym Map": [
          "Demonstration of how the Application works",
          "Generating the Model",
          "Why BoxingGym Implements Identifiable, Decodable, and Hashable",
          "Generate the Service for the Application",
          "Coding the ViewModel",
          "Coding the Views, part 1",
          "viewModel vs. $viewModel",
          "Coding the Views, part 2",
          "Course Lecture Description: MKCoordinateRegion and MKCoordinateSpan",
          "SwiftUI view lifecycle and state-change behaviors",
          "Coding the Views, part 3"
        ],
        "Creating a GymSearch Application": [
          "Local Gym Search Application",
          "Coding the Local Gym Search Application",
          "Why Create a wrapper for MKMapItem"
        ]
      },
      "requirements": [
        "Basic understanding of Swift programming language.",
        "Familiarity with SwiftUI syntax and view composition.",
        "Some experience building simple iOS apps in Xcode.",
        "Comfort using Swift’s @State, @Binding, and @Published property wrappers.",
        "Understanding of asynchronous code with async/await in Swift.",
        "General knowledge of Model-View-ViewModel (MVVM) architecture.",
        "Familiarity with the concept of protocols and structs in Swift.",
        "Experience with navigation and layout in SwiftUI.",
        "A Mac computer running macOS with the latest version of Xcode installed.",
        "Access to a simulator or iOS device for testing MapKit functionality."
      ],
      "description": "Are you ready to build modern, scalable location-based apps with SwiftUI? This course will teach you how to harness the power of CoreLocation and MapKit, while applying the MVVM architecture pattern to create clean, maintainable, and testable code.\nIn this hands-on course, you’ll learn how to track user location in real time, display it on interactive maps, drop custom pins, request location permissions properly, and simulate location changes using Apple’s development tools. But we won’t stop at basic implementations — you’ll architect everything using the MVVM pattern, ensuring a clear separation of concerns between your view, business logic, and location services.\nYou’ll begin with the fundamentals of geolocation in iOS, then progressively build more advanced features such as live location tracking, map annotations, location simulation, and saving coordinates. Every lesson is grounded in real-world use cases, so you're building practical skills you can use in production.\nBy the end of the course, you’ll have created a fully functional MyLocationTracker app, structured to scale and designed with professional SwiftUI practices. Whether you're a SwiftUI beginner expanding into location features, or an experienced iOS developer refining your architecture, this course delivers practical, production-level skills.\nTopics include:\nCoreLocation fundamentals and permission handling\nMapKit integration with SwiftUI\nMVVM design pattern for location-based features\nReal-time location tracking and annotation management\nSimulating and testing location in Xcode’s iOS Simulator\nEnroll today and learn how to build clean, powerful location-aware apps the right way.",
      "target_audience": [
        "iOS developers looking to integrate real-time geolocation features using SwiftUI.",
        "SwiftUI learners who want to deepen their understanding of data flow and MVVM architecture.",
        "Mobile developers aiming to build location-aware apps using CoreLocation and MapKit.",
        "Intermediate Swift programmers ready to move from simple projects to practical, map-based applications.",
        "App builders interested in combining asynchronous code with SwiftUI views.",
        "Developers transitioning from UIKit to SwiftUI who want real-world project experience.",
        "Freelancers looking to deliver apps that integrate maps, directions, and real-time data.",
        "Educators and instructors seeking structured examples of advanced SwiftUI use cases.",
        "Hobbyists with basic Swift knowledge who want to learn by building a functional location-based app."
      ]
    },
    {
      "title": "Build Reminders App Clone Using SwiftData & SwiftUI",
      "url": "https://www.udemy.com/course/build-reminders-app-clone-using-swiftdata-swiftui/",
      "bio": "The Complete Hands-On Approach for Building Real World Applications!",
      "objectives": [
        "How to build a clone of the Apple Reminders app using SwiftUI and SwiftData.",
        "Principles of intuitive user interface design for iOS applications.",
        "Efficient data management techniques with SwiftData framework.",
        "Implementation of essential app features such as task creation, organization, and notifications.",
        "Synchronization of app data across devices using iCloud and CloudKit."
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Prerequisites",
          "Exercise Files"
        ],
        "Implementation": [
          "Building the Basic User Interface for the Reminders App",
          "Persisting & Displaying List to the Database",
          "Adding Reminders to an Existing List",
          "Building the UI and Implementing ReminderCellEvents",
          "Updating Reminders",
          "Implementing Delay to Delete",
          "Removing Reminders and Refactoring Delay to Delete",
          "Updating My List",
          "Building Reminders Stats View Part 1",
          "Building Reminders Stats View Part 2",
          "Fixing the Delay Issue",
          "Setting Up Local Notifications",
          "Implementing CloudKit Sync",
          "Deleting the List",
          "Implementing Search"
        ],
        "Congratulations! You finished the course!": [
          "Resources",
          "Bonus"
        ]
      },
      "requirements": [
        "Basic familiarity with Swift programming language.",
        "Understanding of iOS app development concepts.",
        "Xcode installed (latest version recommended).",
        "Enthusiasm to learn and build iOS applications using SwiftUI and SwiftData."
      ],
      "description": "Are you ready to elevate your SwiftUI and SwiftData skills? Join our comprehensive course where you'll learn to create a full-featured clone of the Apple Reminders App. From concept to deployment, we'll guide you through every step of building a professional-grade Reminders app, complete with iCloud synchronization using CloudKit.\n\n\nWhat You'll Learn:\n\n\n- SwiftUI Essentials: Understand the core principles and advanced features of SwiftUI to create stunning, responsive interfaces.\n- SwiftData Framework: Master the SwiftData framework to efficiently manage and manipulate data within your app.\n- User Interface Design: Create an intuitive and user-friendly design that mimics the sleek, functional style of the Apple Reminders app.\n- Functionality and Features: Implement key features such as task creation, organization, notifications, and more.\n- CloudKit Integration: Learn how to sync your app data seamlessly across devices using iCloud and CloudKit.\n\n\nWhy This Course?\n\n\n- Hands-On Project: Learn by doing with a project-based approach that ensures you gain practical skills.\n- Expert Instruction: Benefit from clear, step-by-step guidance from experienced developers.\n- Comprehensive Content: Covering everything from basic setup to advanced features, this course is designed to make you proficient in SwiftUI, SwiftData, and CloudKit.\n- Real-World Application: Create an app that mirrors a real-world product, enhancing your portfolio and making your skills highly marketable.\n\n\nWhether you're a beginner eager to dive into iOS development or an experienced coder looking to expand your skillset, this course has something for you.\n\n\nStart building your own Reminders app today and take your development skills to the next level!\nEnroll now and turn your coding dreams into reality!",
      "target_audience": [
        "Aspiring iOS Developers: Individuals looking to start a career in iOS app development.",
        "Intermediate Developers: Those wanting to deepen their skills in SwiftUI and SwiftData.",
        "Experienced Developers: Professionals aiming to expand their knowledge with practical iOS projects.",
        "Hobbyists and Enthusiasts: Anyone passionate about creating functional apps in their spare time.",
        "Students and Educators: Those interested in learning or teaching modern iOS development techniques."
      ]
    },
    {
      "title": "Complete iOS7 Programming - Made Easy!",
      "url": "https://www.udemy.com/course/complete-ios7-programming-made-easy/",
      "bio": "Become an iOS7 iphone development guru with Objective - C, Xcode, SQLite, SpriteKit and OpenGL-ES, Graphics & Animation",
      "objectives": [
        "Become a master in developing iPhone Apps using iOS7",
        "A complete and exhaustive iOS7 development course, created from the ground up!",
        "Learn by example by walking you through real live projects step by step",
        "Bonus Objective C series of 26 lectures!"
      ],
      "course_content": {
        "Objective C": [
          "Introduction",
          "Types and Structs",
          "Types and Structs Demo with Source Code",
          "Pointers and Arrays",
          "Pointers and Arrays Demo with Source Code",
          "Classes and Objects",
          "Classes and Objects Demo with Source Code",
          "Properties and Methods",
          "Properties and Methods Demo with Source Code",
          "Inheritance and Polymorphism",
          "Inheritance and Polymorphism Demo with Source Code",
          "Object Properties and ARC",
          "NSString",
          "NSString Demo",
          "NSArray Discussion",
          "NSArray Demo with Source Code",
          "Obj C NSet Discussion",
          "NSSet Demo with Source Code",
          "Obj C NSDIctionary Discussion",
          "NSDIctionary Demo with Source Code",
          "Obj C Delegation Discussion",
          "Delegation Demo with Source Code",
          "Obj C Category Discussion",
          "Category Demo with Source Code",
          "Obj C Extension Discussion",
          "Extension Demo with Source Code"
        ],
        "Introduction to iOS 7": [
          "Design Pattern Discussion",
          "Design Pattern Demo with Source Code",
          "iOS 7 Intro Discussion",
          "Hello World Demo with Source Code",
          "iOS 7 System Discussion",
          "Installing Frameworks Demo",
          "App Lifecycle Discussion",
          "Lifecycle Demo with Source Code",
          "Assignments - Section 2"
        ],
        "iPhone User Interfaces (Views and View Controller)": [
          "Nib Discussion",
          "Nib Demo with Source Code",
          "Storyboard Discussion",
          "Storyboard Demo with Source Code",
          "View / View Controller Discussion",
          "View Controller Demo with Source Code",
          "Touch Events Discussion",
          "Touch Gesture Demo with Source Code",
          "UITouch Demo with Source Code",
          "Assignments - Section 3"
        ],
        "Tab Bar, Navigation and Table View Controllers": [
          "Tab Bar Controller Discussion",
          "Tab Bar Controller Demo with Source Code",
          "Navigation Controller Discussion",
          "Navigation Controller Demo with Source Code",
          "MVC in Collection Controllers Discussion",
          "Table View Controller Discussion 1",
          "Table View Controller Demo 1 with Source Code",
          "Table View Detail Discussion 2",
          "Table View Controller Demo 2 with Source Code",
          "Table View Add / Delete Discussion 3",
          "Table View Controller Demo 3 (Adding) with Source Code",
          "Table View Controller Demo 4 (Deleting) with Source Code",
          "Table View Controller Demo 5 (Grouped / Indexed) with Source Code",
          "Assignments - Section 4"
        ],
        "SQLite": [
          "Plist Discussion",
          "Plist Demo with Source Code",
          "SQLite 3 Discussion 1",
          "SQLite 3 Demo 1",
          "SQLite 3 Discussion 2",
          "SQLite 3 Demo 2",
          "SQLite 3 Discussion 3",
          "SQLite 3 Demo 3 with Source Code",
          "SQLite 3 Discussion 4",
          "SQLite 3 Demo 4 with Source Code",
          "Assignments - Section 5"
        ],
        "Threading: NSThread, NSOperationQueue, Grand Central Dispatch": [
          "Blocks Discussion",
          "Synchronization Discussion",
          "NSThread Demo 1 with Source Code",
          "NSThread Demo 2 with Source Code",
          "NSOperation Discussion",
          "NSOperation Queue Discussion",
          "NSOperation / Operation Queue Demo with Source Code",
          "Grand Central Dispatch Discussion",
          "Grand Central Dispatch Demo 1 with Source Code",
          "Grand Central Dispatch Demo 2 with Source Code"
        ],
        "Audio and Video": [
          "Audio Discussion",
          "Audio Demo with Source Code",
          "Video Discussion",
          "Video Demo with Source Code",
          "Advanced Video Discussion",
          "Capture Device Demo 1 with Source Code",
          "Capture Device Demo 2 with Source Code",
          "Barcode Discussion",
          "Barcode Demo with Source Code"
        ],
        "2D Graphics and Animation": [
          "View Discussion",
          "View Demo with Source Code",
          "Drawing Discussion",
          "Drawing Demo 1 with Source Code",
          "Drawing Demo 2 with Source Code",
          "CoreAnimation Discussion",
          "CoreAnimation Demo 1 with Source Code",
          "CoreAnimation Demo 2 with Source Code",
          "CoreAnimation Transforms Discussion",
          "Points and Lines Discussion",
          "Demo Drawing a Line knowing only Angle and Distance with Source Code",
          "Assignments - Section 8"
        ],
        "SpriteKit": [
          "SpriteKit Discussion 1",
          "SpriteKit Demo 1 with Source Code",
          "SpriteKit Discussion 2",
          "SpriteKit Demo 2 with Source Code",
          "SpriteKit Demo 3a with Source Code",
          "SpriteKit Demo 3b with Source Code",
          "SpriteKit Discussion 3",
          "SpriteKit Demo 4a with Source Code",
          "SpriteKit Demo 4b",
          "SpriteKit Discussion 4",
          "SpriteKit Demo 4c"
        ],
        "OpenGL-ES - Part 1": [
          "Core Location Discussion",
          "Core Location Demo 1 with Source Code",
          "Core Location Demo 2 with Source Code",
          "Mapkit Demo with Source Code",
          "CoreMotion Discussion",
          "CoreMotion Demo 1 with Source Code",
          "Core Motion Demo 2 with Source Code"
        ]
      },
      "requirements": [
        "We assume you have some knowledge of programming"
      ],
      "description": "Master iOS7 programming in 60 days - Guaranteed\nThis brand new, step by step course will guide you through all the hurdles until you start coding just like the gurus.\nThis is by far the best and most high quality iOS 7 Video Course we have created - with over 20 hours of video training, source code and exercises spanning 118 lectures!\nIn addition - it comes with EDUmobile PREMIUM Support offered by our native USA experienced associate.\nAs a member of the EDUmobile community - you are invited today, to try it at absolutely no risk!\nDesigned by seasoned experts and tutors who know exactly how to present the course in a systematic step by step manner - this is by far the most thorough and complete iOS7 course available anywhere - online today... find anything better - we'll give this to you complementary!\nIf you've struggled with other iOS 7 online courses, that confuse you and cause you to drop out - this is exactly what you're looking for.\nWe've spent 4 and a half months in developing and carefully structuring this course. Our prime focus is to ensure learning is simple and done step by step through easy to follow video sessions.\nThe full course spans over a total of over 20 hours of high quality video training. All topics are easy to learn and presented in digestible short 5 to 15 minute videos with real world examples, demos and exercises - in addition to the live interactive support we are now offering.\nAt the end of this course, you will have a good understanding of how mobile apps are written on the iPhone.\nThe course contains discussions, demos, and exercises to test your skill. All demos come with full source code.\n\nThe course is divided into THREE main Parts (A, B, C) - each with their respective Course Units. We've also packaged a bonus course on Objective - C programming if you need to brush up your Obj C skills.\n\nPart A, is the foundation and will get you through majority of the main foundation learning topics.\n\nWe start the course with some of the important design patterns used when developing in Objective - C for iPhones and iPads. We'll also look at the structure of iOS itself and the application lifecycle.\n\nYou will then learn how to build and control user interfaces using views and view controllers. Touch interactions are also covered.\n\nNext, we teach the three view controller types that are important in any iPhone app: tab bars, navigation controllers, and table views. Probably 80% of all iPhone apps rely on one or more of these controller types, so this unit goes into great detail. There are six discussions and seven demos (with code included) in this unit alone!\n\nThen we cover SQLite, a light-weight mobile database system used on both Android and Apple mobile platforms. You'll review SQL syntax and learn how to create databases and interact with them in your apps.\n\nParts B & C of the course cover more advanced features, such as - Threading, Audio and Video, 2D Graphics and Animation, SpriteKit and OpenGL-ES.\n\n*BONUS* - Learn Objective C Programming from The Ground Up\n\nIf you need to brush up your Objective C skills, we're giving you a BONUS course packaged at no extra cost. This Objective C course is otherwise available as a stand alone course at a premium price.",
      "target_audience": [
        "Beginners and advanced level developers who want to learn iOS7"
      ]
    },
    {
      "title": "Build Flutter E-Commerce App | Stripe Payments + Admin Panel",
      "url": "https://www.udemy.com/course/build-flutter-e-commerce-app-stripe-payments-admin-panel/",
      "bio": "Learn to make iOS & Android eCommerce App with Firebase, Stripe Payments, Admin WEB Panel, MVVM, State Management",
      "objectives": [
        "Build a complete Flutter e-commerce app for iOS and Android",
        "Use Firebase Authentication for signup, login, and user accounts",
        "Store and manage data with Cloud Firestore",
        "Integrate Stripe payments into a real-world Flutter app",
        "Manage app state efficiently with Provider state management",
        "Create a Flutter web admin panel to manage products, users, and orders",
        "Implement a full shopping cart and checkout flow in Flutter",
        "Apply clean architecture and best practices in Flutter development",
        "Gain hands-on experience in full-stack Flutter development",
        "Flutter Web App Development",
        "Fully functional Admin WEB Panel"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create New Project | Connect Flutter Project with Firebase (iOS + Android)": [
          "Create New Flutter Project",
          "Connect Flutter Project With Firebase - Android",
          "Connect Flutter Project With Firebase - iOS"
        ],
        "Login and Signup with Firebase": [
          "Download",
          "Create Signup Page Ui",
          "Login Page Ui",
          "Create User Account Using Firebase",
          "Login User With Firebase",
          "Source Code Files"
        ],
        "Provider State Management": [
          "Bottom Navigation Bar In Flutter",
          "Provider Advanced State Management",
          "Logout User And Check User Status",
          "Source Code Files"
        ],
        "Admin WEB Panel Dashboard": [
          "Admin Dashboard Ui",
          "Promos Banners Page Ui",
          "Source Code Files"
        ],
        "Admin Add | Update | Delete Categories": [
          "Source Code Files",
          "Categories Upload Form Ui",
          "Pick Image And Compress Image",
          "Save New Category To Database",
          "Retrieve And Display Categories",
          "Edit And Delete Category"
        ],
        "Admin Add | Update| Delete Promos and Banners": [
          "Promos And Banners Upload Form Ui",
          "Pick Image And Compress Image",
          "Save New Banners And Promos To Database",
          "Retrieve and Display Banners Promos | Edit Delete Promos Banners",
          "Source Code Files"
        ],
        "Admin Add | Update| Delete Promos and Products": [
          "Products Upload Form Ui",
          "Add New Products",
          "Display Products And Filter Products By Category",
          "Edit And Delete Products",
          "Source Code Files"
        ],
        "Admin Add | Update| Delete Promos and Coupon": [
          "Add New Coupons",
          "Retrieve and Display Coupons | Edit and Delete Coupons",
          "Source Code Files"
        ],
        "Display Promos | Banners | Categories and Products in Users App": [
          "Display Promos Carousel Slider Container",
          "Display Coupons Container",
          "Display Categories Container",
          "Display Banners Container",
          "Display Products With Each Banner Based On Category Name",
          "Source Code Files"
        ]
      },
      "requirements": [
        "Basic understanding of Flutter & Dart",
        "Flutter SDK installed on your computer",
        "A text editor such as Android Studio, VS Code",
        "No prior knowledge of Firebase or Stripe is required — everything is taught step by step"
      ],
      "description": "Build a complete Flutter e-commerce app with Firebase and Stripe payments in 2025. In this course, you’ll create both a customer-facing mobile app (iOS & Android) and a Flutter web-based admin panel to manage products, orders, and users. You’ll also master Provider state management for clean, scalable architecture used in real-world apps.\nIn this course, you’ll learn how to create a complete Flutter e-commerce app powered by Firebase and integrated with Stripe payments. We’ll build both the mobile app (iOS & Android) for customers and a Flutter web-based admin panel to manage products, orders, and users — all using Provider state management for clean and scalable architecture.\nThis is not just a demo project — it’s a production-ready application that mirrors what professional Flutter developers build in the real world. You’ll gain practical, hands-on experience by working through every step of the development process, from setting up Firebase to integrating secure payments with Stripe.\nBy the end of the course, you’ll have built a working e-commerce platform that includes:\nAuthentication & user accounts\nProduct management & categories\nShopping cart & checkout flow\nSecure Stripe payments integration\nAdmin dashboard to manage your store\nFirebase backend for database\nProvider for efficient state management\nThis course is perfect for aspiring Flutter developers who want to work on a real-world app, as well as intermediate learners looking to level up their skills with Firebase, Stripe, and full-stack Flutter development.\nIf you’ve been wanting to build and deploy a complete e-commerce solution with Flutter, this course will guide you step by step — giving you the skills and confidence to bring your own app ideas to life.",
      "target_audience": [
        "Flutter developers who want to build real-world e-commerce apps",
        "Students who want to learn Firebase + Flutter full-stack development",
        "Developers interested in integrating Stripe payments in Flutter",
        "Anyone who wants to create a Flutter WEB Admin Panel for managing data",
        "Intermediate Flutter learners ready to level up with Provider state management",
        "Beginners with basic Flutter knowledge who want to work on a production-ready project",
        "Anyone aspiring to become a full-stack Flutter developer"
      ]
    },
    {
      "title": "Create a translator app using MIT App Inventor 2",
      "url": "https://www.udemy.com/course/create-a-translator-app-using-mit-app-inventor-2/",
      "bio": "Use less Blocks, Add more languages - learn the easiest way to create a translator app",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Which platform to use",
          "Say Hi to Interface",
          "More about interface",
          "Intro to blocks tab",
          "Translating button"
        ],
        "All about adding translating functionality": [
          "Progress of the app",
          "Yandex translate component",
          "Yandex translate API",
          "Adding List of languages",
          "Connecting the blocks"
        ],
        "Bonus": [
          "Bonus lecture"
        ]
      },
      "requirements": [
        "Anyone who can use a computer can take this course."
      ],
      "description": "If you ever wanted to know how you can create your own translator app then, you are at the right place.\nThere are so many tutorials available on the internet that demonstrate about creating a translator app but, this course is different from those videos because here, you will learn to create a translator very easily and that too with very few blocks.\nMoreover, you can translate the text to more than 80 languages\nThis course is only 1.5 hours in duration and is also suitable for beginners\n***Create your own translator app within 1.5 hours by enrolling in this course***",
      "target_audience": [
        "People who want to learn MIT app inventor 2",
        "People who want to create apps without programming"
      ]
    },
    {
      "title": "Desenvolvimento de Aplicativos iOS12 em Swift4 | app iPhone",
      "url": "https://www.udemy.com/course/crie-aplicativos-para-iphone-e-ipad-com-ios11-e-swift4/",
      "bio": "Crie aplicativos incríveis para iPhone e iPad! Aprenda desenvolvimento iOS e seja proficiente rápido! XCode 10 e iOS 12.",
      "objectives": [
        "Ao final do curso você será capaz de criar aplicativos incríveis, que podem realmente ser lançados na Apple App Store. O objetivo do curso é que você fique orgulhoso do que consegue fazer e seja capaz de aplicar para trabalhos na área de desenvolvimento iOS. Caso seja do seu interesse, esse curso é também capaz de te dar as ferramentas necessárias para começar uma carreira de freelancer na lucrativa área de desenvolvimento de aplicativos para iPhone."
      ],
      "course_content": {
        "Introdução": [
          "Ementa Resumida",
          "Como aproveitar esse curso"
        ],
        "Crie seu primeiro Aplicativo em menos de 1 hora!": [
          "Intro Seção 1",
          "Instalando o XCode 9",
          "Criando o projeto",
          "iOS 12 + Xcode 10 - O que há de novo?",
          "Criação do primeiro Aplicativo - APP EXPLODINDO PLANETAS!"
        ],
        "Aprendendo Swift 4 - HORA DE PROGRAMAR!": [
          "Intro Seção 2",
          "Constantes e variáveis",
          "Vetores (Arrays)",
          "Dicionários",
          "Operadores Aritméticos e Lógicos",
          "IF - Controle de Fluxo",
          "Exemplo 1 - Controle de Fluxo",
          "SWITCH - Controle de Fluxo",
          "Loops - Laços de Repetição",
          "Funções",
          "Opcionais",
          "Introdução a Orientação a Objetos",
          "Protocolos",
          "Questionário Swift4",
          "Novidades Swift 4.2 (OPCIONAL)",
          "Swift 4.2 - Aleatoriedade",
          "Swift 4.2 - O protocolo CaseIterable",
          "Swift 4.2 - Alertas e Erros Manuais",
          "Swift 4.2 - Dynamic Member Lookup",
          "Swift 4.2 - Boolean Toggle",
          "Swift 4.2 - Novas funções em Arrays"
        ],
        "Primeiros Passos no XCode - Criando Interfaces": [
          "Intro Seção 3",
          "Rápida Introdução ao GIT",
          "Criando um projeto no XCode",
          "Seu Primeiro App com XCode",
          "Pixel Perfect - programando posições e tamanhos",
          "Introdução ao AutoLayout",
          "Exemplo 2 - Revisão de AutoLayout",
          "QuizNight - Melhorando o AutoLayout",
          "QuizNight - Imagem Dinâmica",
          "QuizNight - Opções Dinâmicas",
          "Botões de certo e errado",
          "Criando uma tela de resultado",
          "Saindo de uma tela - Unwind Segue",
          "Finalizando o QuizNight",
          "Simulado de interfaces"
        ],
        "CocoaPods e Navegação (TabBar e Navigation)": [
          "Intro Seção 4",
          "Introdução aos CocoaPods + Dicas dos melhores Pods",
          "Considerações sobre CocoaPods",
          "Exemplo - Usando o seu primeiro CocoaPod",
          "TabBarController - como fazer o estilo facebook de navegação",
          "NavigationController - padrão iOS de navegação"
        ],
        "Projeto Final - Aplicativo completo com conexão ao servidor e tabelas": [
          "Intro Seção 5",
          "Model View Controller - como estruturar um projeto",
          "Introdução a Servidores - FIREBASE",
          "TableView - como criar uma tabela para mostrar dados",
          "TableView - aula 2",
          "Colocando o Projeto Final no GitHub",
          "Como criar uma TableView INFINITA!",
          "Configurando um projeto para funcionar com o Firebase",
          "Fazendo Upload de uma imagem para o Firebase",
          "Criando um formulário",
          "Começando Upload de dados para o banco de dados do Firebase",
          "Maneira profissional de mapear objetos para o Firebase: FIRDataObject",
          "Finalizando Upload de dados para o banco de dados do Firebase",
          "Alertas: Como dar feedback para o usuário",
          "AppSuggest: Colocando Firebase no app do projeto final",
          "Aprendendo sobre Extensões",
          "Modificando uma Célula (UITableViewCell)",
          "Criando animações customizadas para uma UITableViewCell",
          "Fazendo Download de dados do Banco de Dados do Firebase",
          "Consertando bug de download dos dados",
          "Como cancelar uma tarefa de download no meio",
          "Final - Os próximos passos",
          "Simulado Final"
        ],
        "Extras": [
          "Projeto Portfólio - fazendo um carrosel"
        ]
      },
      "requirements": [
        "Não precisa ter nenhum conhecimento de programação para acompanhar esse curso, mas caso você já saiba programação a gente deixou tudo bem separado pra você pular o que já souber!",
        "Ter um computador Mac (macbook, iMac ou mac mini) OU ter um PC rodando o sistema operacional macOS.",
        "Todo o software usado nesse curso é GRATUITO, então não precisa se preocupar com isso."
      ],
      "description": "Quer criar o app dos seus sonhos ou conseguir um emprego como desenvolvedor iOS?\nEntão você achou o curso certo. Nesse curso eu ensino, sem enrolação e com experiência de mercado comprovada, como criar apps profissionais para iPhone e iPad usando as últimas versões das ferreamentas da Apple (o XCode 10 e o iOS 12).\nPor que escolher esse curso?\nMeu nome é Rodrigo, sou desenvolvedor mobile profissional, sendo que sou bolsista na Apple Developer Academy (o curso oficial da Apple no Brasil para desenvolvedores), ganhei em 2017 e 2018 o prêmio mundial WWDC Scholarship, concedido pela Apple aos melhores aplicativos de estudantes, e sou sócio de uma empresa de desenvolvimento de aplicativos em Curitiba. Essa minha experiência de mercado focada em aplicativos faz com que eu consiga trazer os conceitos como eles são necessários no mercado, e não como os outros professores que nunca trabalharam na área ensinam. Eu sei ensinar desenvolvimento iOS, porque eu sou profissional no assunto.\n\nO que eu vou aprender nesse curso?\nVocê vai aprender tudo que é necessário, pela minha experiência, para conseguir o seu primeiro emprego na área ou construir o aplicativo que você tanto sonha. Começando com conceitos básicos como programação em Swift e Autolayout para criação de telas, até a comunicação com servidores e a criação de telas complexas que ficam lindas tanto no iPhone quanto no iPad, vamos criar uma base forte para que você, depois de assistir as aulas, seja capaz de fazer o aplicativo que quiser.\n\nAinda não está convencido?\nEu confio tanto na qualidade do meu material que meu curso está coberto pela política de reembolso da Udemy -- se em até 30 dias você se arrepender da compra, o seu dinheiro será devolvido integralmente! Mais detalhes em: https://support.udemy.com/hc/pt/articles/229604248-Reembolso-de-um-curso",
      "target_audience": [
        "Interessados em se tornar um desenvolvedor de aplicativos para iOS (iPhone e iPad) para criar seu aplicativo dos sonhos ou conseguir um bom emprego na área."
      ]
    },
    {
      "title": "Aprenda FlutterFlow",
      "url": "https://www.udemy.com/course/aprenda-flutterflow/",
      "bio": "Aprenda a criar seus próprios aplicativos com o FlutterFlow",
      "objectives": [
        "Criar aplicativos nativos com o Flutterflow",
        "Aprender como utilizar os melhores e mais conhecidos recursos do Flutterflow",
        "Aprenderá utilizar o firebase para forma de autenticação nos seus apps",
        "Criar páginas, menus e pop-up dentro dos seus projetos"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimento mínimo em lógica de programação"
      ],
      "description": "Pessoal, infelizmente tive que subir o valor do curso, pois a plataforma aqui fica com 65% do valor da venda do curso sem falar no imposto que é cobrado no momento que recebo os outros 35%, sendo assim, não tenho muita escolha a não ser subir um pouco o valor para compensar todo o trabalho de disponibilizar um curso como esse que por muito tempo o valor foi muito acessível (R$ 29,90).\n\nAbaixo deixo um CUPOM DE DESCONTO para compra o Curso por aqui mesmo.\nUtilizem esse Código para finalizar a compra: EA228F3882BBC8FD9A8E\n\nCaso queira compra esse mesmo curso e outros pela minha plataforma os valores estão mais acessíveis!\nAcesse:\ncomunidade (ponto) coderzaplicativos (ponto) com (ponto) br\n\nEsse curso é destinado para quem quer aprender a desenvolver  aplicativos de forma intuitiva sem precisar saber nada de programação.\nAcessando nosso Site você encontra Nosso Curso Completo com o Módulo 5, inclusive esse curso na maioria das vezes está em promoção. Acesse:  coderzaplicativos com br.\nO FlutterFlow é uma ferramenta Low-code online que permite criar aplicativos móveis e web de forma rápida e fácil. Com Flutterflow, você pode arrastar e soltar componentes de interface do usuário para construir o seu aplicativo 10x mais rápido do que o desenvolvimento tradicional. você pode criar interfaces bonitas e modernas, gerar código limpo e implantar nas lojas de aplicativos ou na web em um clique. Você também pode personalizar tudo com código personalizado e integrar facilmente o seu aplicativo com dados ao vivo usando o Firebase ou qualquer API de terceiros. O FlutterFlow suporta muitos recursos intuitivos e mais utilizados atualmente, com o Flutteflow você poderá criar seus próprios aplicati os e comercializálos! No nosso curso de FlutterFlow, você vai aprender como usar essa ferramenta incrível para construir seus próprios aplicativos sem precisar de ter experiência em programação. Você vai aprender os conceitos básicos do Flutter, como criar layouts responsivos, como adicionar animações e lógica ao seu aplicativo. No final desse curso você terá plenas condições de criar seu próprio aplicativo. Se você quer criar aplicativos incríveis em menos tempo e com menos esforço, este curso é para você!",
      "target_audience": [
        "Curso para iniciantes",
        "Desenvolvedores no-code e low-code iniciantes"
      ]
    },
    {
      "title": "Android App Development : Create a Modern Calculator App",
      "url": "https://www.udemy.com/course/create-your-own-calculator-app-android-studio-tutorial/",
      "bio": "Step-by-Step Guide to Creating a Sleek, Responsive Calculator App for Android",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "No programming expertise required! Everything you need to know, from UI design to advanced coding techniques, is covered in this course."
      ],
      "description": "Welcome to our comprehensive Android app development course, where you'll embark on an exciting journey to create your very own calculator app from scratch using Android Studio!\n\n\nThroughout this immersive course, you'll gain hands-on experience and practical skills that will empower you to build high-quality Android applications. Starting with the fundamentals, you'll learn how to set up your project in Android Studio, navigate the development environment, and understand the key components of Android app architecture.\n\n\nWith step-by-step guidance, you'll delve into UI design principles to create an intuitive and visually appealing interface for your calculator app. You'll master the art of user input handling, implementing onClick listeners to capture user interactions and respond accordingly.\n\n\nAs you progress, you'll explore essential programming concepts and algorithms to implement arithmetic logic for performing calculations within your app. From addition and subtraction to multiplication and division, you'll learn how to handle complex mathematical operations with ease.\n\n\nBut that's not all! You'll also discover how to dynamically display calculation results in real-time, providing users with instant feedback and enhancing the overall user experience.\n\n\nWhether you're a complete beginner or have some prior experience with Android development, this course is designed to meet you where you are and guide you towards success. By the end of the course, you'll have the skills and confidence to build your own fully functional calculator app and take your Android development journey to new heights. Join us today and start turning your app ideas into reality!\n\n\nAdditionally, you'll gain insights into best practices for testing your app on different devices, debugging common issues, and optimizing performance for a seamless user experience. Through a combination of lectures, hands-on exercises, and real-world examples, you'll develop a deep understanding of Android app development principles and techniques that you can apply to future projects. Get ready to unleash your creativity and build innovative apps that make a difference in the digital world!",
      "target_audience": [
        "Beginner Android developers looking to start building apps.",
        "Aspiring mobile app developers wanting to learn Android development.",
        "Students who want hands-on experience building Android apps."
      ]
    },
    {
      "title": "كورس احتراف سوفت وير الموبايل - المستوى الاول",
      "url": "https://www.udemy.com/course/jokercourse1/",
      "bio": "دورة كامله من الصفر لاحتراف سوفت وير هواتف سامسونج وبرندات الاندرويد التى تحمل معالجات ميدياتك وكوالكوم وسبريد",
      "objectives": [
        "فى هذا الكورس ستتعلم كل اساسيات ومهارات سوفت وير الموبايل من الصفر حتى الاحتراف",
        "ستتعلم الطرق الاحترافية من البداية للنهاية للتعامل مع هواتف سامسونج جلاكسى بسهوله وسرعه",
        "ستتعلم كل ما يخص التعامل مع مشكلات السوفت وير لاجهزة ميدياتك MTK",
        "ستتعلم كل ما يخص التعامل مع مشكلات السوفت وير لاجهزة كوالكوم Qualcomm",
        "ستتعلم كل ما يخص التعامل مع مشكلات السوفت وير لاجهزة سبريدSPD",
        "هذا الكورس يبدأ بتعليمك سوفت وير الموبايل من الصفر حتى مرحله الاحتراف",
        "ستتعلم التعامل الصحيح والاحترافى مع كل منتجات السوفت وير سواء كانت بوكسات او دونجلات او برامج مدفوعه",
        "ستتعلم الطرق الصحيحه والاحترافية للتعامل مع جميع حمايات الموبايل من البداية للنهاية",
        "التعامل مع جميع برندات الاندرويد مثل Samsung , Huawei , OPPO , Xiaomi , Infinix , VIVO , NOKIA , Alcatel"
      ],
      "course_content": {},
      "requirements": [
        "جهاز كمبيوتر وهاتف واتصال جيد بالانترنت",
        "معرفه بسيطه باللغه الانجليزيه",
        "الشغف وحب التعلم والممارسه الجيدة لكل ما تعلمته بعد اتمام دراسه الكورس"
      ],
      "description": "هل تريد ان تكون محترفأ فى مجال سوفت وير هواتف الاندرويد والتعامل مع جميع المشاكل والاعطال الخاصة بالسوفت وير ؟\nلجميع أجهزة وبرندات الاندرويد المشهورة والموجودة حاليا مثل أجهزة\nHuawei , Xiaomi , Samsung , OPPO , Infinix , VIVO , Nokia , Realme .... etc\nاذا كانت الاجابة .\" نعم \" ... فدعنى اخبرك ببع التفاصيل المهمه\nوفى البداية قد تسأل لماذا قد اتعلم هذا المجال تحديدأ وهو مجال سوفت وير الموبايل ؟\nودعنى اجيبك.\nفى هذا الوقت وفى المستقبل هناك تطور رهيب فى مجالات التكنولوجيا عموما ومجال الهواتف والموبيلات خصوصأ\nولذلك أصبح من الضرورى ان تتعلم أحد المجالات التقنية المهمه مثل مجال سوفت وير الموبايل وهذا لاكثر من سبب\nوالسبب الاول والاهم : وهو ان تتعلم وتمتلك مهارات جديدة تستطيع الدخول بها لسوق العمل   لان مجال سوفت وير الموبايل يعتبر من اكثر المجالات التقنية طلبأ فى هذة الايام\nوبالتالى تستطيع العمل فى هذا المجال وجنى الكثير من الاموال والخبرات\nوالسبب الثانى : وهو انك تستطيع العمل فى اى مكان ومن اى مكان تريدة لانك تستطيع العمل فى احد المحلات الخاصة باصلاح الهواتف او العمل فى محلك الخاص او حتى العمل اون لاين من المنزل بدون الذهاب لاى مكان\nودعنا ننتقل للنقطه الثانية وهى .. من يستطيع الاستفادة من هذا الكورس ؟\nيتسطيع اى شخص الاستفادة والتعلم من هذا الكورس وبدون تواجد اى خبرة مسبقة لدية عن مجال سوفت وير الموبايل لان هذا الكورس لجميع\nالاشخاص الذين لديهم رغبة فى تعلم سوفت وير الموبايل\nولان هذا الكورس سيبدأ معك من الصفر \" 0 \" حرفيأ وبدون اى خبرة لديك\nوالنقطه الثالثه وهى .. هل هناك اى متطلبات مهمه للتعلم من هذا الكورس ؟\nهذة الدورة التدريبية لا تحتاج لاى متطلبات صعبة او كثيرة .. فقط تواجد جهاز كمبيوتر وهاتف واتصال بالانترنت\nحسنا دعونا ننتقل للنقطه الرابعه والاهم .. وهى محتويات الكورس والمنهج العملى لهذة الدورة التدريبية\nفى هذا الكورس سوف نقدم لك جميع المعلومات من البداية للنهاية ومن الصفر \"0 \" وبطريقة سهله جدأ وميسرة ومتسلسله من الاسهل للاصعب\nللتعامل الصحيح والاحترافى مع موبيلات سامسونج وجميع برندات الموبايل الاخرى مثل هواوى وشاومى وابو واينفينكس والكاتيل وفيفو وغيرها من برندات الموبايل التى تحمل معالجات ميدياتك ومعالجات كوالكوم ومعالجات سبريد\nوخلال دراستك لهذا الكورس ستتعلم الكثير من المهارات وسنذكر اهمها اختصارأ لوقتك ولكن تستطيع معرفه المنهج كام وخطه الدراسة من خلال الفيديو التقديمى ومن خلال مشاهدتك لسلسله الدروس والمحاضرات المرفوعه\n1 - ستعرف جميع المعلومات عن بداية ظهور نظام الاندرويد واهميته وتطورة\n2 - ستعرف أهم المهارات المطلوبة للتعلم السريع والممنهج من هذا الكورس\n3 - ستعرف كل ما يخص التعامل الصحيح والاحترافى مع اعطال السوفت وير الخاصة بهواتف سامسونج بداية من اصغر واسهل الاعطال والمشاكل نهاية باهم واصعب الاعطال\n4 - ستكون قادر على التعامل مع جميع حمايات السوفت وير الموجودة على هواتف سامسونج الحديثة\n5 - سيكون لديك المهارة العملية لحل واصلاح اهم اعطال السوفت وير لاجهزة وموبيلات سامسونج\n7 - ستكون قادر على التعامل مع جميع مشكلات السوفت وير لهواتف  الاندرويد التى تحمل معالجات ميدياتك\n8 - سيكون لديك المهارة والاساسيات المهمه للتعامل مع جميع حمايات هواتف ميدياتك من البداية للنهاية\n9 - ستكون قادر على التعامل مع جميع مشكلات السوفت وير الخاصة باجهزة الاندرويد التى تحمل معالجات كوالكوم\n10 - سيكون لديك المهارة للتعامل مع جميع حمايات أجهزة اندرويد كوالكوم من البداية للنهاية\n11 - وايضا سيكون لديك المهارة للتعامل مع جميع اعطال السوفت وير لاجهزة اندرويد التى تحمل معالجات سبريد\n12 - الكورس مقسم لاجزاء متتالية تبدأ بجزء سامسونج ثم  أجزاء معالجات ميدياتك ثم معالجات كوالكوم واخيرا معالجات سبريد\n13 - جميع المحاضرات هدفها الاساسى هو تأسيسك جيدأ ولذلك تبدأ معك من الصفر وبدون اى خبرة مسبقة\n14 - سيتم شرح جميع الطرق للتعامل مع اعطال السوفت وير بداية من الطرق المجانية مرورا بطرق العمل على بوكسات السوفت وير ونهاية بطرق العمل المدفوعه\n15 - جميع المحاضرات والدروس تحتوى على امثله عملية لاصلاح مشكلات السوفت وير على أجهزة اندرويد مختلفه\n16 - بعد الانتهاء من شرح كل جزء من اجزاء الكورس سيتم عمل مراجعه كامله لكل جزء للتاكد من وصول المعلومه بشكل صحيح\n17 - بعد الانتهاء من كل جزء من اجزاء الكورس سيتم عمل شروحات كامله لطرق العمل على اشهر منتجات السوفت وير الخاصة بكل جزء من البداية للنهاية سواء كانت بوكسات او دونجلات او برامج مجانية ومدفوعه\n18 - هذا الكورس سيتم تحديثة باستمرار واضافة المزيد من المحاضرات والدروس الجديدة له\n19 - بعد اتمام دراستك لهذا الكورس ستستطيع التعامل مع مشاكل السوفت وير لموبيلات سامسونج وموبيلات شاومى وهواوى وجميع برندات واجهزة الاندرويد المختلفه التى تحمل معالجات ميدياتك وكوالكوم وسبريد\nوهذة نبذة مختصرة وبسيطه عن محتويات الكورس ولكن يمكنك مشاهدة الفيديو التقديمى لمعرفه تفاصيل اكثر عن منهج الكورس وخطه العمل\n- بعد اتمام دراسه هذا الكورس سيكون لديك الكثير من المهارات الاحترافية والتى تؤهلك لدخول سوق العمل بدون اى رهبة او خوف\n- بعد اتمام دراستك لهذا الكورس ستكون قادر على العمل فى مجال سوفت وير الموبايل مثل المحترفين\nوأعدك انك بعد اتمامك لهذا الكورس ستكون من المميزين وستحقق اقصى استفادة فى اقصر وقت ممكن",
      "target_audience": [
        "هذا الكورس موجه لكل من يرغب فى تعلم مجال سوفت وير الموبايل من البداية حتى الاحتراف",
        "لن تحتاج لاى خبرة مسبقة قبل دراستك لهذا الكورس لاننا سنبدأ معك من الصفر حتى الاحتراف",
        "هذا الكورس يناسب جميع الاشخاص وجميع الفئات العمرية"
      ]
    },
    {
      "title": "Kotlin ile Android Mobil Uygulama Geliştirme Kursu",
      "url": "https://www.udemy.com/course/sifirdan-ileri-seviyeye-kotlin-ve-android-kursu/",
      "bio": "Kotlin programlama dilini öğrenip android uygulamaları yapın! Retrofit, Firebase ile gelişmiş uygulamalar geliştirin",
      "objectives": [
        "Her programlama dilinde olan temel yapıların ne olduğunu ve nerede neden kullanıldığını",
        "Nesneye yönelimli programlama kavramlarının tüm detaylarını",
        "Android ile ilgili önemli kavramların tüm detaylarını",
        "Güzel arayüze sahip android uygulamalarını kotlin ile hızlı bir şekilde geliştirmeyi",
        "Kotlin dilinin gerekli olan tüm inceliklerini detaylarını bu kurs sonunda öğreneceksiniz."
      ],
      "course_content": {
        "Giriş": [
          "Kurs Tanıtımı",
          "Javanın Sonu mu Geldi ?",
          "Kotlin ve Java-Android İlişkisi",
          "Güncel JDK ve Android Studio Kurulumu",
          "Genymotion Kurulumu"
        ],
        "Başlayalım": [
          "Kotlin Nedir ve Genel Kavramlar",
          "Gerekli Kurulumlar",
          "Ilk Projemizi Oluşturalım",
          "Bölüm Tekrar Soruları"
        ],
        "Değişkenler ve Özellikleri": [
          "Değişken Kavramı",
          "Number Veri Tipleri 1. Bölüm",
          "Number Veri Tipleri 2. Bölüm",
          "Char Boolean String Veri Tipleri",
          "Tip Dönüşümü - Casting",
          "Sabitler ve Package Kavramı",
          "Bölüm Tekrar Soruları",
          "Bölüm Sonu Projesi | Boy Kilo Endeksini Hesaplama",
          "Bölüm 3 Dökümanı"
        ],
        "Operatörler": [
          "Aritmetik Operatörler",
          "Atama ve Karşılaştırma Operatörleri",
          "Mantıksal ve Arttırma|Azaltma Operatörleri",
          "İşlem Önceliği",
          "Bölüm Tekrar Soruları",
          "Bölüm 4 Dökümanı"
        ],
        "Dizi, Null, Range, Scope Kavramları ve Kullanıcıdan Veri Alma": [
          "Dizi Nedir? Dizilere Genel Bakış",
          "Range ve In Kavramları",
          "Null Kavramı",
          "Kullanıcıdan Veri Alma",
          "Scope Kavramı",
          "Bölüm Tekrar Soruları",
          "Bölüm Sonu Soruları",
          "Bölüm 5 Dökümanı"
        ],
        "Kontrol ve Döngü Yapıları": [
          "If ve Else Kontrol Yapıları",
          "When Kavramı",
          "For Döngüsü",
          "While ve Do-While Döngüleri",
          "Break Continue Kavramları ve Döngülere İsim Vermek",
          "Genel Tekrar Soru Çözümleri 1. Bölüm",
          "Genel Tekrar Soru Çözümleri 2. Bölüm",
          "Genel Tekrar Soru Çözümleri 3. Bölüm",
          "Bölüm 6 Dökümanı"
        ],
        "Nesneye Yönelimli Programlama Öncesi Bilinmesi Gerekenler": [
          "Parametresiz ve Parametreli Fonksiyonlar",
          "Geriye Deger Döndüren Fonksiyonlar",
          "Fonksiyonlarla ilgili Örnek Uygulama",
          "Metot Overloading ve varargs Kavramları",
          "Math Sınıfı",
          "String Sınıfı Fonksiyonları",
          "Array Kavramı ve Dizi Oluşturma",
          "Örnek Sorular ve Çözümleri",
          "Önemli Dizi İşlemleri ve arrayListOf Methodu",
          "Bölüm 7 Dökümanı"
        ],
        "Nesneye Yönelimli Programlamaya Giriş": [
          "OOP Giriş ve Ilk Sınıfımızı Oluşturalım",
          "Constructor (Kurucu) Oluşturmak",
          "Secondary Constructor",
          "Isimli Parametreler ve Varsayılan Değer Atama",
          "Fonksiyonlara Nesne ve Dizi Göndermek",
          "Bölüm 8 Dökümanı"
        ],
        "Kalıtım ve Polimorfizm": [
          "Kalıtıma Giriş",
          "Kalıtım ve Primary Constructor",
          "Kalıtım ve Secondary Constructor",
          "Visibility Kavramı ve Erişim Belirleyiciler",
          "Polimorfizm Nedir ve Upcasting",
          "Polimorfizm ve Geç Bağlama",
          "Polimorfizm Olmasaydı ?",
          "Polimorfizm ile Genişletilebilirlik",
          "Bölüm 9 Dökümanı"
        ],
        "Abstract, Inner Class ve Interface Kavramları": [
          "Abstract Sınıf ve Fonksiyonlar",
          "Interface Kavramı",
          "Kompozisyon Kavramı",
          "Interfaceler ile Çoklu Kalıtım",
          "Nested ve Inner Class",
          "Isimsiz Sınıflar - Anonymous Inner Class",
          "Bölüm 10 Dökümanı"
        ]
      },
      "requirements": [
        "intellij idea ve Android Studio editörünü kurabileceğimiz bir bilgisayar",
        "Kotlin öğrenme isteği, android uygulamalar yaratma heyecanına sahip olma",
        "Başka herhangi bir gereksinim yok!",
        "Java veya başka bir programlama dili bilmeniz gerekmiyor",
        "Tüm konu ve kavramlar sıfırdan anlatılmıştır"
      ],
      "description": "Kotlin ile Nesne Yönelimli Programlamayı tüm detayları ile öğrenerek uzmanlaşın, adım adım Android kavramlarını öğrenin ve hızlı bir şekilde kendi Android uygulamalarınızı geliştirmenin tadını çıkarın.\n\nBu kursta ilk olarak sıfırdan Kotlin ile Nesne Yönelimli Programlamanın tüm kavramlarını öğrenerek android uygulamalar geliştirmek için sağlam bir temele sahip olacaksınız.\nEdindiğiniz bu sağlam temelden sonra; android ile ilgili tüm kavramları detayları ve mantıklarıyla, ezbere iş yapmadan öğrenip, profesyonel tasarıma sahip uygulamalar yapmayı öğreneceksiniz.\nAndroid Uygulama Geliştirme\nBu kursun Türkiyedeki en büyük, en kapsamlı ve de en öğretici kotlin ile android uygulama geliştirme kursu olmasını sağlamak adına , kurs içeriği zengin tutuldu ve uygulama geliştirirken ihtiyacınız olacak kavramlar, bilgiler, 3. parti kütüphaneler tüm detaylarıyla anlatıldı.\nKursta yer alan bazı önemli kavramlar\nAndroid temel kavramları, tasarımsal bilgiler\nProfesyonel uygulamalar geliştirmek için bilinmesi gereken kavramlar, kütüphaneler\nJson ve APi kavramları\nVolley ve Retrofit kütüphanelerini kullanılarak internetten veri çekme\nFirebase Authentication, Storage, Realtime database ve Cloud Messaging modülleri\nÇok daha fazlasını kursta bulabilirsiniz.\nÖzellikle kursta yapılan uygulamaların tanıtım videolarını izleyerek bu kurstan sonra neler başarabileceğinizi öğrenebilirsiniz. Kurstaki örnekleri geliştirerek google play store'da ilk uygulamalarını koyan öğrencilerim arasında siz de yerinizi alın...\n\n\nKotlin öğrenmesi ve yazması çok keyifli bir dil.  Siz de bu son zamanların en popüler dili olan Kotlin programlama dilini öğrenmek ve de hızlı ve kolay bir şekilde Android uygulamalar geliştirmek istiyorsan bu kursa katıl ve beraber güzel uygulamalar yapalım.",
      "target_audience": [
        "Daha önce kotlin ile çalışmamış ama heyecanla öğrenmek isteyen",
        "Programlama ile ilgili belli yapılara hakim ama klasik basit örneklerden sıkılıp kendini daha fazla geliştirmek isteyen",
        "Kotlin ile ilgili ileri seviye kavramları öğrenmek ve bunlara hakim olmak isteyen",
        "Android ile uygulama geliştirme yapmadan önce Kotlin diline herşeyiyle hakim olup, Kotlin ile ilgili eksiğim olmasın diyen",
        "Android kavramlarını detaylarıyla öğrenmek isteyen",
        "Kod ve tasarım bilgisini bir üst seviyeye çıkarmak isteyen",
        "CV'sine kotlin diline oldukça fazla hakimim maddesini eklemek isteyen",
        "Volley, Retrofit ve Firebase ile ilgili konuları öğrenip tamamlanmış uygulamalar yapmak isteyen herkes bu kursa katılabilir"
      ]
    },
    {
      "title": "React Native中文全系列教程",
      "url": "https://www.udemy.com/course/react-native-vane/",
      "bio": "全方面对React Native进行学习，包括基础概念、工具使用、组件操作、UI框架、路由导航等",
      "objectives": [
        "通过熟练掌握react native，从而进行移动项目的开发。并且熟练相关的辅助工具，包括vscode，eslint，json-server等等。",
        "可以进行一个移动项目的功能开发，包括列表、详情、下拉加载、视频播放等",
        "可以对react进行更好知识的补充，包括react/react-redux/redux-persist等"
      ],
      "course_content": {
        "React Native基本介绍、学习目标展望和主要技术栈": [
          "六何分析法分析什么是RN",
          "学习目标展望与主要技术栈"
        ],
        "React Native环境配置": [
          "项目开发环境配置总述",
          "Mac系统环境配置软件的安装",
          "Mac系统项目的创建以及模拟器中的运行",
          "Windows系统项目环境的配置以及项目创建和运行",
          "Mac-Windows项目环境配置总结",
          "纯Js的RN开发环境的安装及项目创建配置"
        ],
        "辅助工具使用": [
          "工欲善其事必先利其器",
          "vscode下载安装及简单介绍",
          "eslint的介绍以及环境的配置",
          "eslint在html文件中的使用",
          "eslint对js及html文件的脚本检测在vscode软件中的操作",
          "prettier插件的安装配置使用",
          "eslint的airbnb代码风格使用",
          "react-native-tools调试工具在vscode中对RN项目的调试操作",
          "vscode中git代码版本管理",
          "其它工具的简单介绍"
        ],
        "项目分析方法及流程": [
          "项目分析的方法讨论",
          "js与原生相结合项目的解读与HelloWorld的修改运行",
          "js与原生相结合项目的逐行代码解析",
          "利用create-react-native-app构建项目的目录文件分析",
          "利用expo构建的项目目录文件分析",
          "项目目录文件代码分析总结"
        ],
        "属性、状态、样式、输入框、按钮": [
          "props属性",
          "state状态",
          "style样式",
          "代码拆分",
          "Flex布局",
          "TextInput基础使用",
          "TextInput多行编辑及键盘操作",
          "button基本操作",
          "button第三方类库",
          "button自定义操作",
          "综合实例-login登录界面-基本结构",
          "综合实例-login登录界面-自定义组件",
          "综合实例-login登录界面-按钮状态事件操作"
        ],
        "ScrollView、FlatList、SectionList等": [
          "ScrollView纵向滚动操作",
          "ScrollView纵向滚动增强及横向滚动",
          "react-native-swiper第三方插件使用",
          "FlatList简单数据列表显示",
          "FlatList图文结合列表操作",
          "FlatList滑动删除列表项",
          "头部导航及添加按钮",
          "利用弹出框进行数据添加",
          "滑动以及弹出框的代码拆分",
          "滑动修改列表项",
          "FlatList横向滚动实现天气预报",
          "SectionList分组数据列表显示",
          "字母索引通讯录的实例"
        ],
        "生命周期LifeCycle及钩子函数Hooks": [
          "生命周期及钩子函数总体介绍",
          "constructor构造函数",
          "componentWillMount组件将要加载",
          "render组件渲染",
          "componentDidMount组件已经加载",
          "componentWillUnmount组件卸载",
          "componentWillReceiveProps接收属性",
          "shouldComponentUpdate是否更新组件",
          "componentWillUpdate与componentDidUpdate",
          "钩子函数总结"
        ],
        "FlatList案例数据请求模式实现": [
          "数据请求概述",
          "模拟数据工具json-server",
          "接口调试利器postman",
          "数据请求-远程数据的改写",
          "数据添加-远程数据的改写",
          "数据修改-远程数据的改写",
          "数据删除-远程数据的改写",
          "上拉加载-远程数据的改写",
          "下拉刷新-远程数据的改写"
        ],
        "UI框架的使用": [
          "使用UI框架",
          "UI框架的比较",
          "创建项目安装使用native-base-UI框架",
          "自定义主题的实现",
          "UI框架中的数据处理",
          "UI框架中的上拉加载下拉刷新问题的Bug解决",
          "UI框架中的细节处理",
          "shoutemUI框架的应用"
        ],
        "路由": [
          "路由介绍",
          "react-navigation基本路由导航及参数传递",
          "react-navigation路由样式及自定义组件设置",
          "react-navigation头部按钮与组件间的交互操作",
          "react-navigation模态框导航",
          "react-navigation选项卡导航及抽屉式导航",
          "RNRF路由跳转及参数传递",
          "RNRF路由导航样式设置",
          "RNRF头部按钮与组件间的交互操作",
          "RNRF选项卡路由导航",
          "RNRF抽屉式导航",
          "RNRF的Modal模态对话框",
          "RNRF的Lightbox",
          "RNN环境安装配置操作",
          "RNN路由跳转及参数传递",
          "RNN动态修改头部导航样式",
          "RNN头部按钮与组件间的交互操作",
          "RNN选项卡导航",
          "RNN抽屉式导航",
          "RNN模态框及Lightbox弹出框导航",
          "路由总结"
        ]
      },
      "requirements": [
        "需要了解html、css、js网页基础，flex弹性布局，react、redux框架知识",
        "如果有一些Android/iOs原生开发知识就最好了，当然，如果会Xcode/Android Studio基本配置也是可以的"
      ],
      "description": "利用React Native的Javascript进行iOs及Android移动端项目的开发，可以利用JS与原生开发相结合方式，也可以尝试纯JS代码开发操作方式。总之，本课程宗旨就是帮助前端开发人员向移动开发快速挺进。",
      "target_audience": [
        "有意向进行移动项目开发的人员，但却没有Swift/Objective-c/Java/Android技术能力的人员",
        "已经掌握的react技术，准备向移动端推进的人员"
      ]
    },
    {
      "title": "初心者がReactとfirebaseで作るモバイル対応PWAアプリケーション",
      "url": "https://www.udemy.com/course/reactfirebasepwa/",
      "bio": "モダンJavaScriptとfirebaseを組み合わせて、コストをかけずに自分のスマホアプリを運用するためのコース",
      "objectives": [
        "JavaScript(React)を使ったPWAアプリケーションの開発方法",
        "firebaseのfirestoreを使ってデータを管理する方法",
        "ReactHooksの基礎",
        "モダンJavaScriptの基礎"
      ],
      "course_content": {
        "まずはじめに": [
          "コースの概要と目標物の紹介",
          "PWAとは？",
          "Reactとは？",
          "的確な回答をするためのお願い"
        ],
        "開発準備": [
          "npmとは？",
          "node.jsとnpmの導入（Windows）",
          "node.jsとnpmの導入（Mac）",
          "firebaseとは？",
          "firebaseの準備",
          "reactのインストール(Windows)",
          "reactのインストール(Mac)",
          "おすすめエディタの紹介"
        ],
        "ログイン機能の実装": [
          "firebaseの設定（ログイン機能）",
          "envファイルの設置",
          "firebase用JavaScriptファイルの作成",
          "React Hooksの解説",
          "ヘッダーコンポーネントの作成",
          "補足：コンポーネント指向について",
          "Googleログイン関数の作成とヘッダーからの呼び出し",
          "補足：変数宣言のconstとletについて",
          "AuthContextの利用",
          "ログアウト機能の作成"
        ],
        "ToDo機能の実装": [
          "firestoreとは？",
          "firestoreの設定",
          "Dashboadコンポーネントの作成",
          "非同期処理とPromise",
          "ToDoの追加機能",
          "useEffectによるデータ取得",
          "ToDo一覧をレンダリング",
          "TODOの削除機能",
          "（補足）削除後のfetchが上手くいかない場合",
          "レクチャー29の補足：ToDoListコンポーネントでのfetch()について",
          "ToDoの完了機能について"
        ],
        "デザイン・UIの実装": [
          "materialUIの導入",
          "ヘッダーコンポーネントにmaterialUIを適用",
          "フッターコンポーネントの作成",
          "ToDo追加フォームにmaterialUIを導入",
          "ToDoListコンポーネントにmaterialUIを適用",
          "TODOの完了機能"
        ],
        "PWA化": [
          "Firebaseへのデプロイ",
          "PWA化のための設定とスマートフォンでの使い方",
          "オフライン対応",
          "おすすめの追加機能"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Macもしくは、Windowsをお持ちの方",
        "スマートフォンをお持ちの方"
      ],
      "description": "このコースでは以下のようなモバイル対応PWAをReactとfirebaseで開発します。\n\n\nまずはReactの学習を始め、作成したToDoアプリケーションをPWA化していきます。\n\n\nPWAを使うと、1つのソースコードでWebアプリとスマートフォンアプリを同時に作成することができます。\n\n\n\n\n\n\n■ 学べること\nReactを使ったアプリの開発方法\nReact Hooksを使ったシングルページアプリケーションの開発\nFirebaseを使ったユーザー認証機能\nFirebaseを使ったデータ管理（firestore）\nFirebaseを使ったアプリのホスティング（サーバーの替わり）\nReactを使ってPWAを作成する方法\nPWAのオフライン動作対応",
      "target_audience": [
        "ReactとPWAに興味を持つJavaScript初心者",
        "シングルページアプリケーション開発に興味のあるJavaScript初心者",
        "JavaScriptとfirebaseを一緒に学びたい初心者",
        "firebaseを使って、コストをかけずに自分のアプリを開発・運用したい初心者"
      ]
    },
    {
      "title": "ANDROID - Jetpack Compose y Kotlin [2025] - Apps Desde Cero",
      "url": "https://www.udemy.com/course/android-con-jetpack-compose-movil-apps-nativas-y-modernas/",
      "bio": "Crear aplicaciones Android usando los estándares de Google, Kotlin, Jetpack Compose, Material 3, Coroutines y más...",
      "objectives": [
        "Aprender Kotlin como lenguaje de programación moderno y conocer su sintaxis",
        "Conocer conceptos de desarrollo Android y como funciona su ecosistema de desarrollo y versionamiento",
        "Aprender a crear aplicaciones modernas usando Jetpack Compose, el estandar que recomienda Google actualmente",
        "Crear vista elegantes y modernas de interfaz para nuestras aplicaciones nativas de Android usando Jetpack Compose",
        "Usar buenas prácticas de Clean Architecture y Sistemas de Diseño"
      ],
      "course_content": {
        "Bienvenida": [
          "Bienvenida al Curso",
          "Funcionamiento del curso",
          "¿Cómo hacer preguntas?"
        ],
        "Introducción a Android": [
          "Breve historia de Android",
          "Versiones de Android - API Level"
        ],
        "Instalaciones y Primera App": [
          "Descargas necesarias",
          "Instalando Git - Control de Versiones",
          "Instalando Android Studio",
          "Creando Emuladores",
          "Solución errores de virtualización del Emulador",
          "Emulando una tablet",
          "Nuestra primera aplicación (Hello Android)",
          "Estructura de un proyecto Android"
        ],
        "Sintaxis Básica de Kotlin": [
          "Introducción a la sección",
          "Temás de la sección - Básicos de Kotlin",
          "Print( ) y Comentarios //",
          "Variables (var) - Constantes (val)",
          "Tipos de datos",
          "Operaciones con variables",
          "Operaciones en Runtime",
          "Condicionales IF",
          "Condicionales WHEN",
          "Estructuras de datos",
          "Listas",
          "Mutable o Inmutable",
          "Sets",
          "Maps",
          "Bucle For",
          "Bucle While",
          "Valores Opcionales (Nullables)",
          "Funciones (envío de parámetros)",
          "Funciones Lambda",
          "Clases en Kotlin (POO)",
          "Data Class",
          "Sealed Class"
        ],
        "Git y Github en Android Studio": [
          "Repositorio de Git a Github en Android Studio",
          "Respositorio - Sección de Sintaxis de Kotlin"
        ],
        "Layout en Android Jetpack Compose": [
          "Introducción a la sección",
          "Temás de la sección",
          "Creando proyecto - Layout en Jetpack Compose",
          "@Composable - Text",
          "Column",
          "Row",
          "Box",
          "Tarea - Organizar Boxs",
          "Solución a Tarea - Organizar Boxs",
          "Scaffold",
          "FloatingActionButton",
          "TopAppBar",
          "Mezclando componentes de Layout",
          "Componente Personalizado - ItemContact",
          "Repositorio sección - Layouts"
        ],
        "Navegación con Jetpack Compose": [
          "Introducción a la sección de Navigation-Compose",
          "Temás de la sección",
          "Creando el proyecto de navegación",
          "Instalando dependencia - Navigation-Compose",
          "Creando Screens",
          "NavHost y navHostController",
          "Navegando a AddScreen",
          "popBackStack - navegación de retorno",
          "Animaciones al navegar entre pantallas",
          "Envío de parámetros (preparando nuestra aplicación)",
          "Envío de parámetros (configurando ruta)",
          "Parámetros de navegación opcionales",
          "Navegación Profesional (con Sealed Class)",
          "Tarea Navegación",
          "Solución Tarea Navegación",
          "Repositorios de la Sección"
        ],
        "Arsenal de @Composables": [
          "Introducción a la sección - Components Kit",
          "Temas de la sección",
          "Creando proyecto - ComponentsKit",
          "Text",
          "Icons - (extended)",
          "Vertical Scroll - Column",
          "Botones",
          "TextField",
          "rememberSaveable",
          "Checkbox",
          "Switch",
          "Radio Buttons",
          "Image",
          "Async Image ( coil )",
          "Indicadores (circular - linear)",
          "Badge y BadgeBox",
          "Slider",
          "Dropdown",
          "Cards",
          "Pager (horizontal y vertical)",
          "BottomAppBar",
          "Modal Navigation Drawer",
          "Circular Image",
          "Repositorio de la sección"
        ],
        "Themes - ThemesChat APP": [
          "Introducción a la sección - ThemesChat",
          "Temas de la sección - ThemesChat",
          "Creando proyecto - ThemesChat",
          "¿Cómo funcionan los temas en Jetpack Compose?",
          "Nuestro propio Theme File - AppTheme",
          "isSystemInDarkTheme",
          "Color Schemes",
          "Material Theme Builder",
          "DynamicColorSchemes",
          "Diseño ThemesChat - Parte 1",
          "Diseño ThemesChat - Parte 2",
          "Solución problema Resize Input",
          "Diseño ThemesChat - Parte 3",
          "Funcionamiento - ThemesChat - Parte 1",
          "Funcionamiento - ThemesChat - Parte 2",
          "Drawer - Elige un Theme",
          "Creando - Natural Theme",
          "Cambiando entre Themes",
          "Tarea - Agregar Theme",
          "Solución - Agregar Theme tarea",
          "Respositorio de la sección - ThemesChat"
        ],
        "Patrón de Arquitectura MVVM - Capa de presentación": [
          "Introducción a la sección",
          "Explicando el patrón de arquitectura MVVM",
          "Instalando dependencias para MVVM - ModelView y LiveData",
          "Interfaz de Counter",
          "Creando el ViewModel",
          "Observer",
          "Modificar Livedata",
          "Model - SharedPreferences",
          "Resumen proyecto Counter",
          "Repositorio Counter MVVM",
          "Explicando nuevo proyecto - Credit Card",
          "Creando Proyecto Credit Card",
          "Diseño Credit Card",
          "Diseño Formulario",
          "Creando View Model",
          "Tarea - Conectando View Model",
          "Solución Tarea - Conectar View Model",
          "Formatean valores visuales",
          "Cambiando Color de Card",
          "Repositorio CreditCard App"
        ]
      },
      "requirements": [
        "Ganas de aprender",
        "Un computador con al menos 4GB de Ram"
      ],
      "description": "Con este curso aprenderás desde cero como crear aplicaciones nativas de Android usando los estándares más modernos recomendados por Google, Kotlin como lenguaje de programación, Jetpack Compose como sistema de vistas para componener nuestras pantallas, Material 3 como sistema de diseño. Navegación entre pantallas con Navigation Compose, etc.\nAl crear aplicaciones nativas aprovecharemos todas las caracteristicas del sistema operativo Android y crear aplicaciones eficientes y con Jetpack Compose también nos aseguramos que las aplicaciones sean bonitas.\nComenzaremos aprendiendo los conceptos básicos de Kotlin, ya que al final de cuentas programaremos todo el tiempo en este lenguaje de programación moderno, aprenderas desde las bases hasta las funciones avanzadas del lenguaje y algunos trucos para sacarle el máximo provecho.\n¿Qué aprenderás en este curso de Android?\n\n\nKotlin: sintaxis y características\nProgramación Orientada a Objetos: las clases en Kotlin pueden ser de varios tipos, clases abstractas, interfaces, subclases, objetos anonimos, data class, enum class, Sealed class...\nEstructura de un Proyecto: te explicaré todos los archivos que componen un proyecto en Android. Conocimiento esencial si quieres ser un desarrollador de aplicaciones nativas.\nComponentes de Compose: qué son y cómo se usan cada uno de los composables que vienen con Jetpack Compose, Text, Column, Row, Scafold, Icon, Button, etc.\nCómo hacer código ordenado y limpio.\nVersionamiento del código con Git y Github.\nCambiar de forma profesional el icono y el SplashScreen animado de una aplicación.\nImplementar coroutines en nuestras aplicaciones Android, manejo de diferentes hilos de ejecución.\nBuenas prácticas al momento de desarrollar aplicaciones para mejorar su mantenimiento.",
      "target_audience": [
        "A quien quiera aprender a desarrollar aplicaciones móviles",
        "Novatos en la programación que quieren aprender las bases",
        "Desarrolladores que quieren migran al desarrollo móvil",
        "Desarrolladores Android tradicionales: Quieren aprender la nueva forma de construir interfaces.",
        "Desarrolladores móviles principiantes: Buscan una forma moderna y simplificada de crear apps Android.",
        "Desarrolladores que usan XML: Quieren migrar a Jetpack Compose para mejorar su flujo de trabajo.",
        "Freelancers móviles: Quieren ofrecer soluciones más rápidas y modernas a sus clientes.",
        "Equipos de desarrollo Android: Que buscan adoptar las últimas herramientas y tecnologías de Google."
      ]
    },
    {
      "title": "Android Studio, Instalación, Emuladores, Git, Plugins y Tips",
      "url": "https://www.udemy.com/course/android-studio-instalacion-emuladores-git-plugins-y-tips/",
      "bio": "Aprende a instalar y configurar un entorno de desarrollo para android. Repositorio Github, Bitbucket, Butterknife, Java.",
      "objectives": [
        "Instalar y configurar un entorno de desarrollo completo para Apps con Android Studio.",
        "Conocer herramientas para un desarrollo mas rápido y limpio con la ayuda de plugins y atajos.",
        "Probar aplicaciones en emuladores con diferentes características.",
        "Conocer la estructura de un proyecto de android.",
        "Capacidad de resolver errores en el desarrollo con herramientas propias de Android Studio.",
        "Implementar control de versiones (git) en sus proyectos para trabajar en equipo."
      ],
      "course_content": {
        "Introducción, descargas e instalaciones.": [
          "Arquitectura de Android",
          "¿Qué es un entorno de desarrollo? ¿Por qué Android Studio?",
          "Requisitos mínimos",
          "Instalación limpia",
          "Windows: Descargando e instalando Android Studio",
          "Windows: Primeros pasos en Android Studio",
          "Mac: Descargando e instalando Android Studio",
          "Mac: Primeros pasos en Android Studio",
          "Mac: Corrección de emulador",
          "Instalación",
          "Únete a la comunidad en Discord",
          "Conclusiones"
        ],
        "Emuladores": [
          "Beneficios y limitaciones",
          "Emulador nativo(Device Manager), configurar dispositivos virtuales",
          "Windows: Genymotion, instalación y creación de dispositivos",
          "Mac: Genymotion, instalación y creación de dispositivos",
          "Optimizar emuladores para mejorar su rendimiento",
          "USB: Enlazar dispositivos físicos a Android Studio",
          "Instalar Drivers para Windows",
          "Wireless: Enlazar dispositivos físico a Android Studio",
          "Emuladores",
          "Conclusiones"
        ],
        "Conociendo Android Studio y la estructura de un proyecto.": [
          "Creación de una nueva app en Jetpack Compose",
          "Creación de una nueva app en XML",
          "Exploración de un proyecto android con Jetpack Compose",
          "Exploración de un proyecto android con XML",
          "Cerrar/Abrir proyectos recientes",
          "Uso de Logcat",
          "Comentarios inteligentes: TODO y Fixme",
          "Añadiendo Plugins a Android Studio",
          "Personalizando Android Studio",
          "Aprendiendo a debugear",
          "Actualizado: Guía definitiva para Depurar",
          "Explorando un proyecto de android",
          "Conclusiones"
        ],
        "Control de versiones": [
          "¿Que ventajas tiene usar control de versiones?",
          "Instalando Git",
          "Abrir cuenta en Github",
          "Subir un proyecto al repositorio de Github",
          "Hacer commit, push and pull con Github",
          "Registrarse en Bitbucket",
          "Añadiendo plugin de Bitbucket y haciendo share, commit and push",
          "Bajar un proyecto de Bitbucket(clone)",
          "Añadir usuarios en bitbucket",
          "Bajando cambios de otro desarrollador.",
          "Comparando y revirtiendo campos",
          "Características del control de versiones",
          "Conclusiones"
        ],
        "Errores y Soluciones con Android Studio": [
          "¿Que problemas comunes existen?",
          "Clean project",
          "Invalidate cache and restart",
          "Problemas con el preview",
          "Limpiar datos del emulador",
          "Problemas comunes",
          "Conclusiones"
        ],
        "Extras": [
          "ButterKnife",
          "Mensajes con Toast y Snackbar",
          "Instant run",
          "Navegación Básica (Parte I)",
          "Control Básico del IDE Android Studio",
          "Programación Asistida Básico Parte I",
          "Refactorización Básica",
          "Atajos de Android Studio(comandos)",
          "Examen final",
          "Conclusiones Finales"
        ],
        "Fin del curso ¿Qué sigue?": [
          "¿Que más quieres aprender? Participa.",
          "Clase Extra"
        ]
      },
      "requirements": [
        "Un ordenador con conexión a Internet( el cuso se desarrolla en Windows pero todas las cosas aquí mostradas son multiplataforma).",
        "Conocimiento básico de que es un entorno de desarrollo(deseable).",
        "Experiencia mínima como desarrollador en algún otro lenguaje(deseable)."
      ],
      "description": "Importante: Este curso esta en proceso de regrabación, sus clases fueron grabadas en 2017 y aunque muchas cosas siguen vigentes, otras han cambiado debido a las actualizaciones de Android Studio.\n\n\nUn curso completo sobre como tener un espacio de trabajo completo para desarrollar apps para Android con Kotlin/Java.\nTener instalado y configurado un entorno de desarrollo correctamente, es la base para todo gran proyecto. Aprende a usar las herramientas correctas conocidas y no tan conocidas para desarrollar como los profesionales.\n¿Quieres iniciar a desarrollar apps nativas en Android Studio? ¿Quieres estar seguro de que tienes todo lo necesario y que le estas dando un uso correcto? ¿Has intentado iniciar en android pero no encuentras tutoriales que abarquen todos los temas o no están disponibles en español?\nNo sigas buscando, estas en el lugar correcto para ti.\nAquí aprenderás porque Android Studio es el mejor medio para desarrollar apps nativas para Android, y a su vez explicaremos el uso de otras herramientas y recomendaciones para que logres obtener unas bases solidas de como empezar en este mundo del desarrollo móvil para Android.\nEn mi formación al aprender Java para Android, me tope con un sin fin de dudas y problemas que si bien, hay mucha información al respecto en Internet, se lo frustrarte y tardado que es encontrar las respuestas y estar seguro de que son las mas optimas para el futuro, conozco que se siente y se como orientarte a tomar el camino correcto para que logres tus objetivos.\nEs un hecho que se aprende mas con la practica que con la teoría, por eso este curso en vídeo, va explicando paso a paso como hacer cada parte de las secciones en el curso, que te permitirán ir trabajando a la par, junto a una sección de preguntas en cada clase, que harán que logres tu objetivo de forma segura y ahorrando montones de horas en lugar de buscar en foros y videotutoriales incompletos.\nTodas las herramientas aquí mostradas son gratuitas, así que podrás hacer uso de cada cosa vista en las clases sin pagar un solo céntimo.\nAndroid Studio, El IDE oficial para Android\nAndroid Studio fue anunciado el 16 de mayo de 2013 y es un entorno de desarrollo multiplataforma que proporciona las herramientas más rápidas para la creación de aplicaciones en todos los tipos de dispositivos Android.\nLa edición de códigos de primer nivel, la depuración, las herramientas de rendimiento, un sistema flexible y con un mecanismo instantáneo de compilación e implementación te permiten concentrarte en la creación de aplicaciones únicas y de alta calidad.\nContenido\nEn el curso te explicare los conceptos básicos de los componentes principales y sus funciones, así mismo veras alternativas para herramientas secundarias tales como emuladores, controladores de versiones, plugins, etc... a continuación se muestran los temas principales que aprenderás:\n1.- Descargar, instalar y conocer.\nEn esta sección se indicara con exactitud de donde descargar lo básico y lo extra(pliguns, emuladores, etc...) y su respectiva instalación paro a paso. Configurar y explorar opciones vitales para un correcto funcionamiento.\n-Android Studio\n-Emuladores\n-Plugins\n-Recursos extras\n2.-Creando y probando una app.\nAquí se cubrirá el proceso completo para crear un nuevo projecto(usando plantillas), con el fin de conocer nuestro entorno, lanzar en un emulador o en un dispositivo físico con Android.\nExplorar aspectos básicos sobre la exploración de una aplicación en tiempo de ejecución con la finalizad de observar nuestros procesos internos y a su vez, poder detectar errores con mayor facilidad.\n3.- Trabajando en equipo como los profesionales(control de versiones).\nEnfocado a demostrar como tener una herramienta muy poderosa a la hora de crear aplicaciones en proyectos grandes y pequeños. Muy útil para trabajar en equipo o simplemente para tener un respaldo con control total en nuestros cambios a través del tiempo.",
      "target_audience": [
        "Ideal para quien desea iniciar en el desarrollo de Apps nativas de Android.",
        "Gente con dudas sobre como comenzar correctamente a desarrollar en Android.",
        "Programadores de Android que no estén seguros de si lo están haciendo bien.",
        "Programadores de otros lenguajes que quieren aprender una nueva plataforma."
      ]
    },
    {
      "title": "Power Apps: Desenvolvimento de Aplicativos Empresariais",
      "url": "https://www.udemy.com/course/aplicativos-com-powerapps-aprenda-desenvolvendo/",
      "bio": "Soluções de negócios ao seu alcance! Aprenda Power Apps e Power Automate e desenvolva aplicativos com pouco código.",
      "objectives": [
        "Entender como a plataforma de desenvolvimento Low Code do Microsoft PowerApps funciona",
        "Criar conta no Power Apps e conectar-se a uma fonte de dados",
        "Criar app reais e funcionais que podem ser executados nas plataformas: android, ios, windows e em navegadores",
        "Desenvolver aplicativos para aplicações reais em PowerApps com abordagem mão na massa",
        "Utilizar a documentação do PowerApps para aprender novos recursos sempre que necessário"
      ],
      "course_content": {
        "Introdução ao Curso": [
          "Introdução ao Curso de Power Apps",
          "Estrutura do Curso",
          "Sobre o Instrutor",
          "Me conte mais sobre você!",
          "Objetivos do curso e dicas para você aproveitar melhor o curso"
        ],
        "Introdução ao Power Apps": [
          "O que é o Power Apps e para quem ele serve",
          "Tipos de apps: Canvas, Model-driven e Power Pages",
          "Acesso, Conectores e Licenças",
          "Conhecendo o Portal make.powerapps.com",
          "Criando um Site do SharePoint para usar como Base de Dados",
          "Criando a Lista do SharePoint para usar como Base de Dados",
          "Adicionando exemplos + entendendo nomes lógicos",
          "Criando um App Canvas do Zero",
          "Explorando o Power Apps Studio",
          "Menu de Criação do Aplicativo",
          "Introdução aos Controles no Power Apps",
          "Acessando valores dos controles",
          "Habilitando os controles e temas modernos",
          "Diferença entre os tipos de controle: Classicos e Modernos",
          "Icones e Botões - Classicos e Modernos",
          "Conectores de Dados no Power Apps",
          "Conectores de Serviços no Power Apps",
          "Conectores Padrão e Premium",
          "Power Fx e a função Navigate",
          "Informações do Usuário + Concatenação de String",
          "Operações com Datas",
          "Lógica de Validação",
          "Variáveis",
          "Coleções",
          "Containeres",
          "Galerias",
          "Formulários",
          "Formulários",
          "Salvando, publicando e compartilhando o aplicativo",
          "Restaurando o app para a versão anterior"
        ],
        "Fundamentos: nosso primeiro case - Aplicativo de agenda": [
          "Planejamento do aplicativo que será desenvolvido em Power Apps",
          "Preparando o arquivo Excel para ser a nossa base de dados",
          "Vamos começar: criando, salvando e conectando nos dados",
          "Primeira tela: tela de carregamento",
          "Criando a tela com o menu inicial",
          "Configurações dos elementos - botões e modos de exibição",
          "Configuração de botões",
          "Dica para padrão de design",
          "Configurando a tela inicial do aplicativo",
          "Navegando entre telas com a funcao Navigate v.1",
          "Voltando para a tela anterior com a função Back",
          "Conhecendo o temporizador (timer)",
          "Conhecendo galerias",
          "Galerias - a propriedade ThisItem",
          "Galerias - a propriedade IsSelected",
          "Quiz sobre galerias",
          "O tipo de dados Booleano",
          "O booleano em expressões de testes",
          "Agora sim a função IF",
          "Modificando o fundo da galeria de acordo com o item selecionado",
          "Mostrando a foto do usuário com base no seu e-mail",
          "Conhecendo containers",
          "Preparando os filtros",
          "Fazendo a busca por texto: a função Search",
          "Preparando a lista de departamentos",
          "Fazendo a busca por departamento",
          "Unindo a busca de texto com o menu suspenso",
          "Conhecendo os formulários",
          "Aprofundando nos formulários",
          "A propriedade Update + terminando a configuração do menu suspenso",
          "Aprendendo variáveis e utilizando um formulário para editar um registro",
          "Criando os botões de ação",
          "Criando os botões do menu inferior + Ação Home",
          "Ação de Editar Registro ao clicar no botão",
          "Exibindo mensagem de sucesso ao salvar um item",
          "Corrigindo a opção de criar novo item",
          "Conhecendo a função Launch para abrir links externos",
          "Aprendendo a unir textos: concatenando strings",
          "Substitute: substituindo valores dentro de textos",
          "Concluindo a ação do WhatsApp no botão",
          "Ação de abrir o telefone no celular",
          "Considerações finais",
          "Quiz - Verificando seus conhecimentos sobre Power Apps"
        ],
        "[NOVO - 2024] Power Apps + SharePoint": [
          "Introdução ao Módulo - O que vamos desenvolver?",
          "Planejamento do aplicativo - Tela Inicial",
          "Mockup - Tela de Apontamento de Horas",
          "Mockup - Tela de Apontamento de Horas - PopUp",
          "Mockup - Tela de Aprovação de Horas",
          "SP06 - Relacionamento de Dados",
          "Planejamento e Criação de Tabelas no SharePoint",
          "Criando o Site do SharePoint para nosso projeto",
          "Criando a lista de Projetos",
          "Criando a lista de tarefas - parte 1",
          "Cuidado com a armadilha: colunas com caracteres especiais!",
          "Finalizando a lista de atividades do projeto",
          "Criando a Solução, o App e Conectando nas bases de dados",
          "Criando a tela inicial e adicionando os controles",
          "Ajustes do container: posicionamento dos controles",
          "Temas e Controles Modernos",
          "Renomeando Controles - Padronização",
          "Cabeçalho da tela de apontamentos - Inserindo os elementos",
          "Cabeçalho da tela de apontamentos - design dos controles",
          "Criando o cabeçalho da nossa tabela de dados",
          "Renomear controles",
          "Formatando os items da galeria - Parte 1",
          "Mostrando a cor do cartão de status de acordo com o status da tarefa",
          "Criando o PopUp para criação de novo registro - Parte 1",
          "Adicionando botões e escondendo/mostrando o PopUp",
          "Adicionando entradas de dados ao PopUp de apontamento",
          "Adicionando fucionalidades no app: Navegação",
          "Adicionando fucionalidades no app: Envio das Tarefas",
          "Adicionando o dropdown de Projetos",
          "Gerando mais dados para testarmos os filtros",
          "Adicionando filtro de datas na galeria - Parte 1",
          "Entendendo como os filtros funcionam no Power Apps",
          "A Tabela Verdade",
          "Demonstração de filtros combinados com controles do Power Apps",
          "Concluindo os filtros da galeria",
          "Calculando os totais e calculando o numero de items da galeria",
          "Permitindo editar o item criado a partir da galeria - Parte 1 - Abrindo o PopUp",
          "Permitindo editar o item criado a partir da galeria - Parte 2 - Valores Padrão",
          "Desabilitando o botão de editar caso o item já tenha sido aprovado",
          "Compartilhando o app e os dados com outro usuário e testando",
          "Filtrando os registro por 'Criado Por'",
          "Permitindo deletar os registros criados",
          "PopUp para confirmar deleção de registro",
          "Adicionando as fórmulas ao PopUp de deleção",
          "Habilitando o botão de aprovação de horas apenas para os aprovadores",
          "Melhoria na logica de desabilitar o botão do aprovador",
          "Adicionando os botões de aprovar e rejeitar",
          "Atualização de Status: De Pendente para Aprovado ou Rejeitado",
          "Ajustando Filtros do App para Mostrar Todos os Registros",
          "Permitindo Selecionar Múltiplos Registros antes de Salvar",
          "Aprimoramento da Funcionalidade de Seleção em Massa",
          "Coleções no Power Apps: Conceitos e Aplicações",
          "Manipulando Coleções no Power Apps",
          "Atualização em massa do status das tarefas",
          "Sugestão de design para a tela inicial",
          "Transformando a Tela Inicial do nosso aplicativo",
          "Organização das Listas no SharePoint",
          "Chegamos ao fim do aplicativo!",
          "Aulão de Desenvolvimento no SharePoint."
        ],
        "Boas práticas e conhecimentos importantes": [
          "Introdução ao módulo",
          "Conhecendo Ambientes",
          "Conhecendo Soluções",
          "Migrando um app usando soluções",
          "Compartilhando Apps usando grupos de segurança",
          "Segurança do SharePoint - Apenas Visualizar e Editar os Próprios Itens",
          "Segurança do SharePoint - Níveis de Permissões do Site",
          "Segurança do SharePoint - Bloqueando o Acesso a Lista"
        ],
        "BÔNUS: Power Automate: Automatize Seus Aplicativos!": [
          "Introdução ao Power Automate",
          "Introdução ao Power Automate - Parte 2",
          "Começando com o Power Automate: Seu Primeiro Contato",
          "Começando com o Power Automate Seu Primeiro Contato - Parte 2",
          "Fluxo Instantâneo - Intro - Automação de Processos com Power Apps e API",
          "Conhecendo o aplicativo que chamará o fluxo",
          "Criando o aplicativo de exemplo para o fluxo",
          "Fluxos Instantâneos - Integração Power Apps e Automate - Busca CEP - Parte 01",
          "Fluxos Instantâneos - Integração Power Apps e Automate - Busca CEP - Parte 02",
          "Fluxos Instantâneos - Integração Power Apps e Automate - Parte 03",
          "Fluxos Instantâneos - Integração Power Apps e Automate - Parte 04",
          "Fluxos Instantâneos - Integração Power Apps e Automate - Parte 05",
          "Fluxos Instantâneos - Explicando a fórmula do OnSuccess - Parte 06",
          "Introdução ao Fluxo Automatizado",
          "Fluxo Automatizado - Aula 01 - Fluxo disparado ao receber um e-mail",
          "Fluxo Automatizado - Aula 02 - Envio de notificação para o teams",
          "Fluxo Agendado - Intro - Aula 1",
          "Fluxo Agendado - Aula 2",
          "Fluxo Agendado - Aula 3",
          "Fluxo Agendado - Aula 4",
          "Fluxo Agendado - Revisão",
          "Aprovações - Introdução",
          "Approvals 1 - Demonstração da opção de Aprovação e Lista no Share Point",
          "Approvals 2 - Introduzindo sequência da aprovação e atualizando no Share Point",
          "Aula 3 - Finalizando sequência das aprovações simples"
        ],
        "[EXTRA] Conceitos gerais de design - Introdução": [
          "Introdução da Seção - Instrutor convidado",
          "Apresentação do Instrutor",
          "Apresentação do conteúdo",
          "UX - User Experience (Experiência do Usuário)",
          "UI - User Interface (Interface do Usuário)",
          "Usabilidade",
          "Espaçamento entre elementos",
          "Alinhamento",
          "Alinhamento - Parte 2",
          "Consistência",
          "Hierarquia Visual",
          "Cores - a psicologia das cores",
          "Cores - montando seu esquema de cores"
        ],
        "[EXTRA] Personalização do Power Apps": [
          "Dicas de design para botões no Power Apps",
          "O truque do botão",
          "Galerias",
          "Tela de carregamento",
          "Tela de rolagem",
          "Referências de posicionamento",
          "Cores - 01: Utilização de Variáveis para configurar o design",
          "Cores - 02: As cores e funções de cores no Power Apps",
          "Cores - 03: unindo variáveis e cores",
          "Cores - 04: outra forma de criar variáveis de cores",
          "Dark mode (modo escuro)",
          "HTML e CSS no Power Apps",
          "SVGs no Power Apps",
          "Pop-Ups no Power Apps",
          "Tabelas",
          "Responsividade - Adaptação automática do tamanho da tela",
          "Sites para buscar referências",
          "Dicas de sites"
        ],
        "Chegamos ao final do curso de Microsoft Power Apps!": [
          "Mensagem final.",
          "Uau, parabéns! Você concluiu!"
        ],
        "Seção BONUS": [
          "Canal do YouTube - Bônus"
        ]
      },
      "requirements": [
        "Computador pessoal",
        "Acesso à Internet",
        "O curso começa do básico, então não existes pré-requisitos em habilidades específicas",
        "Noções de tabelas e Excel podem facilitar o entendimento",
        "Vontade de aprender Power Apps"
      ],
      "description": "O Curso de Power Apps em Português Mais Vendido e Mais Avaliado da Udemy!\nTambém disponível no programa Udemy for Business!\n\n\nNÃO FIQUE PARA TRÁS!\nAprenda a criar aplicativos incríveis de forma rápida e fácil com o Microsoft Power Apps.\nNada de teoria chata, apenas prática!\nAqui, você aprende enquanto desenvolve aplicativos que realmente fazem a diferença. Vamos colocar a mão na massa juntos!\n\n\nTRANSFORME SUA CARREIRA E SEU AMBIENTE DE TRABALHO!\nEste curso é para quem quer se destacar, seja você um iniciante ou alguém que já trabalha na área e deseja aprimorar suas habilidades.\nAo aprender a criar aplicativos no Power Apps, você se torna uma peça-chave para melhorar processos, economizar tempo e trazer inovação para qualquer negócio.\nA habilidade de desenvolver soluções personalizadas está mais acessível do que nunca, e é o que empresas de todos os tamanhos estão procurando!\n\n\nFAÇA A DIFERENÇA COM APLICATIVOS PODEROSOS!\n\n\nDurante o curso, você vai aprender a criar dois aplicativos essenciais que podem ser usados em qualquer empresa:\n\n\nApp de Agenda de Contatos: Organize e gerencie contatos de forma prática e eficiente. Este aplicativo vai te dar o primeiro contato com a ferramenta e os principais conceitos.\nApp de Apontamento de Tarefas: Controle de horas trabalhadas, aprovação de tarefas e monitoramento de projetos usando Power Apps e SharePoint. Aumente a produtividade e simplifique a gestão do seu time!\n\n\nNOVO MÓDULO: APONTAMENTO DE TAREFAS COM SHAREPOINT\nAcabamos de adicionar um módulo de quase 8 horas de conteúdo novo, focado em criar um app de apontamento de tarefas que se integra diretamente com SharePoint.\nEsse módulo vai te ensinar a:\nCriar e gerenciar listas no SharePoint\nUtilizar controles modernos e containers\nImplementar funcionalidades como aprovação de horas e envio de tarefas\nManipular coleções e usar a função Patch para otimizações de dados\n\n\nTENHA ESTE MATERIAL SEMPRE DISPONÍVEL\nEste curso será seu guia prático, que você pode consultar sempre que precisar. Domine os conceitos e ferramentas no seu ritmo, de forma flexível e prática!\n\n\nO QUE VOCÊ VAI APRENDER?\nInterface e funcionalidades do Power Apps\nCriação de apps a partir de fontes de dados (Excel e SharePoint)\nDesenvolvimento de aplicativos do zero\nComponentes essenciais do Power Apps: botões, galerias, formulários, e muito mais\nFunções avançadas e lógica de programação simples (navigate, patch, submitform, search, filter, etc.)\nConexão com OneDrive e SharePoint para integração de dados\nDesign de telas intuitivo e focado na experiência do usuário\nPublicação e compartilhamento de apps com sua equipe ou organização\n\n\nAulas Bônus: Introdução ao Power Automate para automação de fluxos e processos\n\n\nCOMECE A CRIAR HOJE MESMO!\nEste é o seu momento para transformar sua forma de trabalhar e abrir novas oportunidades na sua carreira. Inscreva-se agora e comece a desenvolver aplicativos que realmente fazem a diferença!\n\n\nNos vemos no curso!\n\n\nRudimar",
      "target_audience": [
        "Iniciantes em desenvolvimento Low-code: Power Apps",
        "Pessoas com interesse inovação e que querem melhorar os processos dentro da sua empresa",
        "Interessados em evoluir profissionalmente, aprendendo uma nova habilidade"
      ]
    },
    {
      "title": "2025年版【ゼロからスマホでAndroidアプリを動かす】楽々と開発環境構築してJavaによるスマホアプリ開発の実演習",
      "url": "https://www.udemy.com/course/android0-java/",
      "bio": "Androidアプリ開発は、Javaベテラン技術者でも開発には戸惑います。何故なら、Androidは独特のお作法があるから。初心者は、ここで躓いてしまう。手前味噌ですが、開発環境構築とHelloWorldから始まり、スーッとアプリを作ろう。",
      "objectives": [
        "Android開発環境(Android Studio)の構築ができます。",
        "Androidの基本構成(マニフェスト、ソース、リソース)を学べます。",
        "何も考えずにHelloWorldが動きます。",
        "スマホやタブレットの醍醐味はタップですね。任意の画面を作り、タップすることで画面や文字を変更できます。",
        "Android Studioにもデバッグ機能があります(ログやブレークポイント)。その機能を使って、デバッグができます。",
        "今回のコースでは、プロジェクト(アプリ)を作ります。そのアプリをアナタのスマホで動かしてみます。apk(スマホで動かす)ファイルの作り方、スマホでの取り込み方法、スマホでのインストール方法、 Google Playを使わなくても気軽に動かせます。",
        "スマホには、あらかじめ地図や電話アプリが入ってますね。 これらの既存アプリとアナタが作るアプリと連携させます。 例えば、アナタが指定した住所の地図が、アナタのアプリから起動できます。",
        "アプリを次々とタップする。新しいアプリが起動する。 しかし、以前のアプリはどうなるのでしょうか？ そのアプリが生きているのか、すでに停止しているのか？ それを、アプリのライフサイクルと言いますが、このへんが理解できます。"
      ],
      "course_content": {
        "はじめに": [
          "紹介",
          "このコースで何ができるのか？二つのアプリがアナタのスマホで動きます。",
          "Javaの知識について",
          "Java技術者でも面食らうデフォルトのソース",
          "(※注意)コースの進め方"
        ],
        "Android開発環境の構築": [
          "AndroidStudioのダウンロード",
          "AndroidStudioのインストール",
          "AndroidStudioのアンインストール",
          "AVDの作成"
        ],
        "Androidプロジェクト": [
          "プロジェクトの作成と削除",
          "ビルドエラー対策",
          "外観とインポート設定",
          "プロジェクト構成",
          "リソースファイル"
        ],
        "画面タップの基本": [
          "画面表示",
          "デザインとコード",
          "ボタンの文字",
          "タップ時のメソッド",
          "タップの実行確認"
        ],
        "別画面を呼ぶ": [
          "文字列の定義",
          "画面の作成",
          "画面切り替え",
          "画面の文字表示",
          "タップで文字変更"
        ],
        "別アクティビティを呼ぶ": [
          "文字列の定義",
          "ボタンの追加",
          "画面の作成",
          "アクティビティの作成",
          "マニフェスト登録",
          "アクティビティを呼ぶ",
          "実行確認",
          "引数を渡す",
          "引数を受け取る",
          "引数の確認"
        ],
        "アナタの(Android)スマホで動かす": [
          "apkファイルを作る",
          "スマホで動かす"
        ],
        "他アプリと連携": [
          "新プロジェクトの作成",
          "文字列の定義",
          "画面の作成",
          "地図アプリ連携",
          "電話アプリ連携",
          "メッセージを出す"
        ],
        "アプリのライフサイクル": [
          "ライフサイクル",
          "共通化",
          "ライフサイクルとログ",
          "アプリの破棄"
        ],
        "コース終了後の注意点": [
          "AndroidStudioで作ったフォルダの管理について"
        ]
      },
      "requirements": [
        "メモリ(8GBだと少し苦しいので)メモリ16GB以上のPCをご用意ください"
      ],
      "description": "※2025年のAndroid Studioを使ってコースを作り直しました。\n※必要なコードも、すべてボタン一発でコピーできます。\n\n\n開発環境の構築\nAndroid StudioというGoogle提供の開発ツールを使います。\n知識がないJDK、SDK、AVD等々の細かいインストールで迷いますが、\n全て講習で指定します。なので、何も迷いなく環境構築できます。\n\n\nHelloWorldで基本構成を学びます\n環境が出来たら、まずはHelloWorldを動かします(すぐに動きます)。\nAndroidには、マニフェストファイル、ソースファイル、リソースファイルと、\n独自の構成になっていますので、まずは、それらを学びます。\n\n\nリソースファイル\nAndroidでは、文字列や画面を全てリソースファイルで定義します。\nいわゆるファイルの外出しです。このへんの紐づけルールをしっかり学びましょう。\n(紐づけを理解しないと、後で混乱します)\n\n\n画面からタップ\nスマホやタブレットの醍醐味はタップですね。\n任意の画面を作り、タップすることにより画面や文字を変更できます。\n\n\nデバッグ方法\n他の開発同様に、Android Studioにもデバッグ機能があります。\n「ログを出す」「ブレークポイントを設定できる」等々です。\n地味ですが、しっかりデバッグ方法も身につけましょう。\n\n\nスマホで動かす\n今回のコースでは、プロジェクト(アプリ)を3つ作りますが、それらを、\nアナタのスマホで動かしてみます。\napk(スマホで動かす)ファイルの作り方、スマホでの取り込み方法、スマホでのインストール方法、\nGoogle Playを使わなくても気軽に動かせます。\n\n\n地図や電話アプリとの連携\nスマホには、あらかじめ地図や電話アプリが入ってますね。\nこれらの既存アプリとアナタが作るアプリと連携させます。\n例えば、アナタが指定した住所の地図が、アナタのアプリから起動できます。\n\n\nアプリのライフサイクル\nアプリを次々とタップする。新しいアプリが起動する。\nしかし、以前のアプリはどうなるのでしょうか？\nそのアプリが生きているのか、すでに停止しているのか？\nそれを、アプリのライフサイクルと言います。このへんも理解しましょう。",
      "target_audience": [
        "自作のアプリをスマホ(Android)で動かしたい方",
        "スマホアプリについて勉強したい方、趣味で作りたい方",
        "Javaはある程度できるけど、それを利用してAndroid開発の手がかりを掴みたい方",
        "Android開発環境構築で挫折した方(今は環境構築が楽になりました)",
        "業務でスマホアプリと関わる方",
        "スマホアプリを作りたいけど、何から始めていいのか不明の方",
        "将来、スマホアプリをGooglePlayに登録して収入を得たい方",
        "転職に備えたい方"
      ]
    },
    {
      "title": "Profesional en Material Design/Theming para Android. UX y UI",
      "url": "https://www.udemy.com/course/material-design-theming-diseno-profesional-para-android/",
      "bio": "Mejor diseño: User Experience/Interface con Android Studio y Material Design, Java, Kotlin,Dark Theme,Shape,Colors,Types",
      "objectives": [
        "Diseñar interfaces de usuario limpias y funcionales con los lineamientos de Material Design.",
        "Aplicar correctamente Material Theme para resaltar una marca o producto.",
        "Transiciones actuales y optimizadas con Motion.",
        "Arquitectura de Navegación entre Fragments con el Navigation Component",
        "Personalizar los colores, formas, tipografía y estados de manera uniforme en una App Android.",
        "Crear, implementar e incluso forzar el uso de temas oscuros(Dark Theme), con Material Theming.",
        "Mejorar la experiencia de usuario(UX) con los principios de Material Desing y Material Theming.",
        "Hacer uso correcto de Material Design Components(MDC) en Android Studio.",
        "Modernizar aplicaciones con lo último en diseño para Android.",
        "Buenas prácticas, tanto en el código como en en buen desarrollo de la interfaz de usuario(UI) y la usabilidad."
      ],
      "course_content": {
        "Previo al curso": [
          "¿De qué va el curso? ¿Es para mi?",
          "Conoce a tu instructor",
          "Instalaciones y requisitos previos",
          "Kotlin: Instrucciones",
          "Únete a la comunidad en Discord"
        ],
        "Introducción a Material Design y Material Theming": [
          "¿Que es Material Design?",
          "¿Que es Material Theming?",
          "Primer proyecto con diseño base.",
          "Diseño con Holo (previo a Material Desing)",
          "Implementación de Material Desing",
          "AP: Cambiar EditText en base a Material Design",
          "Acercándonos a Material Theming",
          "Principios de Material Design y Theming",
          "Conclusiones"
        ],
        "Material Components(MDC) Parte I": [
          "Introducción",
          "¿Que es Material Components(MDC)?",
          "App: MD Components",
          "Creación del POJO y Adapter",
          "Actividades complementarias",
          "Explicación de app MD Components, estructura y recursos.",
          "MDC - Documentación oficial y forma de trabajo.",
          "Materialbutton: Estilos básicos",
          "MaterialButton: Personalización",
          "Bottom Navigation: Implementación básica",
          "Bottom Navigation: Personalización y Badge",
          "Mejorando diseño del listado principal",
          "Snackbar",
          "Text Fields - TextInputLayout y TextInputEditText",
          "Text Fields personalizados",
          "Text Fields - Eventos",
          "Floating Action Button - Primeros pasos",
          "Floating Action Button - Personalización y Eventos",
          "Selection controls - Checkbox",
          "Checkbox Indeterminate",
          "Conclusiones"
        ],
        "Material Theming: Nivel Básico-Medio": [
          "Introducción",
          "App. MD Top",
          "Proyecto completo y actualizado a Android 13",
          "Colores: Primeros pasos",
          "Colores: Configuración",
          "Cambio de AppCompat a MaterialComponents",
          "Colores: Background, Surface y Error",
          "Colores: StatusBar y NavigationBar",
          "List: Primeros pasos",
          "List: Imagen circular y elemento secundario",
          "List: Textos primario y secundario",
          "Dividers",
          "AP: ColorSurface en el listado principal",
          "Vista AddArtist: rediseño base",
          "Vista AddArtist: Text Fields",
          "Validaciones con Material Theming",
          "Shapes: Primeros pasos",
          "Shapes: Cambios de forma globales",
          "Detalle: Actualización.",
          "Dark Theme: Primeros pasos",
          "Dark Theme: Colores",
          "Dark Theme: StatusBar, NavigationBar y más.",
          "Dark Theme: Iconos.",
          "Conclusiones"
        ],
        "MDC Parte II": [
          "Introducción",
          "Card: Primeros pasos",
          "Card: Diseño simple",
          "Card: Diseño avanzado(base).",
          "Card: Glide y RatingBar",
          "Card: Textos y Divider",
          "Chip: Diseño",
          "Chip: Eventos",
          "Menu: Introducción",
          "Menu: Popup y ActionBar",
          "Menu: Dropdown para Autocomplete",
          "Dialog: Primeros pasos",
          "Dialog: Informativo",
          "Dialog: Opción múltiple y de Confirmación",
          "Dialog: FullScreen",
          "FullScreenDialog: Configuración Básica",
          "FullScreenDialog: Mejoras",
          "AppBar",
          "AppBar: Top",
          "AppBar: Bottom",
          "AppBarBottom: FloatingActionButton",
          "AppBarBottom: Eventos",
          "Picker",
          "Picker: Dialog",
          "Picker: Fullscreen",
          "AppBar:Bottom con TopEdge",
          "Conclusiones"
        ],
        "Material Theming: Medio-Avanzado": [
          "Introducción",
          "AlertDialogs: Actualizando con MDC",
          "Calendar to Picker(Detalle)",
          "Picker en AddArtist",
          "Manipulación de estilos en Dialogs con Themes.",
          "Dark Theme: Mejoras Picker",
          "Dark Theme: AppBarTop",
          "Dark Theme: NavigationIcon y Titulo del Detalle",
          "Dark Theme: NavigationIcon progresivo Parte I",
          "Dark Theme: NavigationIcon progresivo Parte II",
          "UX: Mejoras del NavigationIcon",
          "UX: Guardar Tema Seleccionado",
          "UI: Screen Splash",
          "UI: IconLauncher Adaptive y Legacy",
          "UI: Mejoras del SplashScreen",
          "Conclusiones"
        ],
        "Transiciones y Animaciones": [
          "Introducción",
          "UI: Transiciones en Activities, Primeros Pasos",
          "UI: Transición Fade",
          "UI: Transición Slide",
          "UI: Transición Explode y Best Practices",
          "UI: Transiciones compuestas",
          "UI: Transiciones compuestas II",
          "UI: Transiciones al compartir un elemento",
          "UI: Compartir 2 elementos",
          "UI: Mejoras del ShareElements",
          "AP: Excluye la statusBar",
          "UI: Problemas con SharedElements",
          "UI: Vista Mejorada(Título)",
          "UI: Vista Mejorada(Título, color y tamaño)",
          "UI: Vista Mejorada(Imágenes)",
          "UI: Vista Mejorada(Transition)",
          "AP: Ajustando la duración",
          "Transición dedicada a AddArtist",
          "Últimos ajustes",
          "AP: TextFields en transiciones",
          "Conclusiones"
        ],
        "MDC Parte III - Avanzado": [
          "Introducción",
          "Navigation Drawer",
          "Modal Navigation Drawer",
          "DrawerLayout",
          "Eventos del Modal Navigation Drawer",
          "Bottom Navigation Drawer",
          "Modal Bottom Sheet",
          "UI: Mejoras al Bottom Navigation Drawer",
          "Sheets: Bottom",
          "Standar Bottom Sheet: Diseño base",
          "Standar Bottom Sheet: Comportamiento",
          "Standar Bottom Sheet: Vista enriquecida Parte I",
          "Standar Bottom Sheet: Vista enriquecida Parte II",
          "Standar Bottom Sheet: Control de Estados",
          "Standar Bottom Sheet: Eventos botón auxiliar",
          "Modal Bottom Sheet a Pantalla Completa - Creación del módulo",
          "Diseño de vista: Barra de Acciones",
          "Diseño de vista + Espacio Extra",
          "Cancelación y gestión de vistas",
          "UI: Mejoras del Modal Bottom Sheet",
          "Conclusiones"
        ],
        "Motion": [
          "Introducción",
          "Motion",
          "Motion: Diseño de UI",
          "Motion: ContainerTransform",
          "Motion: ContainerTransform inverse",
          "Motion: SharedAxis",
          "Motion: SharedAxis inverse",
          "Motion: SharedAxis, UI/UX mejorada",
          "Motion: FadeThrough en Modal Bottom Sheet",
          "Conclusiones"
        ],
        "Types": [
          "Introducción",
          "Types: Primeros pasos",
          "Fuentes descargables",
          "Headline",
          "Subtitle",
          "UI: Mejoras al Collapsing Toolbar",
          "Body",
          "Button",
          "Caption & Overline",
          "Conclusiones"
        ]
      },
      "requirements": [
        "Una computadora con 20GB de espacio en Disco duro y 4GB de RAM.",
        "Acceso a Internet",
        "Conocimientos básicos de desarrollo nativo para Android(Recomendado)."
      ],
      "description": "Bienvenido al curso de Diseño profesional para Android con Material Design y Material Theming. Aquí veremos lo último en diseño nativo para android, todo basado en las recomendaciones oficiales por parte de Google para el correcto desarrollo de la UI(interfaz de usuario) y UX(experiencia de usuario), desde como diferenciar entre un diseño con o sin Material Design, hasta notar las diferencias entre Material Design y Material Theming. Todo se realizará en Android Studio paso a paso, tanto en aplicaciones nuevas creadas para practicar, como en las ya terminadas, que lo único que requieren es migrar su interfaz.\nAplicaremos los Material Components(MDC), en nuestras aplicaciones, veremos como personalizar cada elemento, desde su color de fondo, contorno, forma, texto, y demás propiedades particulares de cada componente. Hoy en día las aplicaciones no solo tienen que tener un solo diseño, por eso este curso también contempla una de las vistas más solicitadas en la actualidad, nos referimos al modo oscuro(dark theme). También veremos las últimas recomendaciones y Best Practices que mejoren la UX(experiencia del usuario). Sin olvidar el uso correcto de animaciones y transiciones(Motion y xml).\n\n\n¿Y cómo son las clases? ¿Qué tan actualizado es el curso?\nPara resolver esas dudas, te invito a mirar sin ningún compromiso las primeras clases de este curso, así podrás ver si te gusta mi forma de enseñar, si la imagen y/o sonido es legible, entre otros detalles. Con respecto a que el curso se actualice y se mantenga creciendo de forma consistente, me complace decirte que soy un instructor comprometido con mis alumnos y mis cursos, puedes darte cuenta de esto al ver las calificaciones y comentarios de mis más de 76,000 estudiantes y 4.5+ estrellas en mi promedio, además de resolver cada duda de forma puntual.\n\n\nEste curso es en su gran mayoría impartido con XML, pues el objetivo principal es el buen diseño, sin embargo, la parte de código en el comportamiento ha sido grabada con Java, no obstante, se incluyen todos los proyectos finales en el lenguaje de Kotlin, para que puedan resultar de guía en el seguimiento del curso.\n\n\nAquí tienes un pequeño listado de los temas más importantes a tratar en el curso:\n¿Que es Material Design?\nDiferencias entre Holo, Material Design y Material Theming.\nMDC: Material Components(MaterialButton, NavigationBar, Text field, FloatingActionButton, Checkbox, etc.).\nContenedores(ConstraintLayout, MaterialCard, LinearLayout, FrameLayout, etc.).\nGuías\nMigración a Material Theming.\nDark Theme.\nAnimaciones y Transiciones.\nDimensiones.\nEstilos.\nTemas.\nDrawables(backgrounds, vectorDrawables, states, etc.).\nFormas.\nTipografía.\nMotion.\nColores.\nNavigation.\nCompatibilidad y recurso alternos.\nInterfaz de usuario(UI).\nExperiencia del usuario(UX).\nBuenas prácticas y más.\nY hablando más del instructor, ¿Qué hay que saber de él? ¿Qué experiencias tiene? ¿Es capaz de transmitir conocimientos?\nSon preguntas muy importantes antes de que tomes una decisión, y para no darle más vueltas al asunto, te hago un breve resumen: Soy Ingeniero en Sistemas Computacionales con especialidad en Desarrollo de Software, tengo certificaciones en programación y la gran mayoría son de desarrollo en Android nativo. Mi experiencia como programador es de mas de 8 años en el sector profesional, y como instructor en Udemy, tengo 3 años impartiendo cursos y mis resultados hablan por si mismos, miles de estudiantes me han otorgado calificaciones de 4.5+ en promedio, ya que no solo me gusta hacer cursos completos y actualizados, si no que también me tomo muy enserio la parte de resolver todas las dudas, además de escuchar sugerencias y añadir material extra que complemente mis cursos.\nSoy consciente de que tu tiempo es muy valioso, por eso siempre procuro hacer las clases sin rodeos, enfocadas más a la práctica, si hay teoría en el curso, es importante entender algunos conceptos, pero soy de la idea que se aprende más aplicando los conocimientos, que solo oyendo o leyendo. Además del material disponible en este curso, siempre voy complementando con clases extras en YouTube, para aquellos temas que no encajen en el objetivo del curso, que en este caso es dominar el uso de Material Desing y crear buenos diseños en interfaces para android, además de ofrecer referencias para quién quiera leer más sobre el tema y por supuesto, siempre proporciono el código completo para que vayas comparando tu progreso con el de los proyectos que se realizaron en los vídeos.\n\n\nExtras\nOtro punto a considerar en el curso, es el uso de dependencias o recursos complementarios, que si bien no vienen del equipo de desarrollo oficial de Google, nos ayudarán a programar de una forma más eficiente y rápida. Y por parte de la implementación de Material Design, hay diseños o componentes que aún no tienen documentación oficial o están en fase beta, por lo que tendremos que valernos de trucos o implementaciones propias, todo esto será de mi parte, para que obtengas los resultados deseados sin tener que esperar a que Google libere este material faltante.\nEspero que esta información te sea útil, y te invito a que no te quedes solo ahí, me encantaría que tomaras acción y dieras un paso hoy mismo para cumplir tus objetivos y metas.\n\n\nAdquiere el curso ahora mismo, aprovecha esta oportunidad de incrementar la retención de usuario al subir tu nivel de diseño nativo en android, ¡Sé un profesional!\nNos vemos en clase!\n\n\nEl éxito es para aquellos con el valor de superarse así mismos, de los que dan el primer paso, aún sin estar seguros del destino.\n\n\nUn cordial y amistoso saludo.\nIng. Alain Nicolás Tello.\nCursos Android ANT",
      "target_audience": [
        "Programadores android(Java y Kotlin), con interés por el buen diseño y experiencia de usuario.",
        "Diseñadores que desean aprender los lineamientos de Material Design/Theming",
        "Personas con ganas de aprender y gusto por las buenas prácticas."
      ]
    },
    {
      "title": "Programmieren lernen: Swift von A bis Z",
      "url": "https://www.udemy.com/course/progammieren-lernen-swift-von-a-bis-z/",
      "bio": "Wir lernen alles über die Programmiersprache Swift und benutzen unser Wissen für das Entwickeln von Apps für iOS",
      "objectives": [
        "Alle Aspekte der Programmiersprache Swift verstehen",
        "Selbständig Programmcode für iOS Apps schreiben"
      ],
      "course_content": {
        "Willkommen - Bevor ihr anfangt": [
          "Willkommen - Bevor ihr anfangt",
          "Ressourcen"
        ],
        "Swift Grundlagen": [
          "Hallo, Welt",
          "Variablen & Konstanten",
          "Typen & Typdeklarierung",
          "Typen Quiz",
          "Werte ändern & kombinieren",
          "Arrays & Dictionaries I",
          "Arrays & Dictionaries II",
          "Variablen ohne Initialwert",
          "Operatoren I",
          "Operatoren II",
          "Operatoren III",
          "if-Bedingungen",
          "for-Schleifen I",
          "for-Schleifen II",
          "Übungsaufgaben I Text",
          "Lösung Übungsaufgaben I",
          "while-Schleifen",
          "switch-Statements",
          "Operatoren IV",
          "Operatoren V",
          "Beispiel zur Anwendung der Operatoren",
          "Übungsaufgaben II",
          "Übungsaufgaben II Text",
          "Lösung Übungsaufgaben II",
          "Abschlussquiz"
        ],
        "Swift Wiki": [
          "Funktionen I",
          "Funktionen II",
          "Funktionen III",
          "Funktionen IV",
          "Funktionen V",
          "Funktionen VI",
          "Funktionen VII",
          "Closures I",
          "Closures II",
          "Closures III",
          "Closures IV",
          "Enumerations I",
          "Enumerations II",
          "Enumerations III",
          "Enumerations IV",
          "Klassen & Structs I",
          "Klassen & Structs II",
          "Klassen & Structs III",
          "Klassen & Structs IV",
          "Properties I",
          "Properties II",
          "Properties III",
          "Properties IV",
          "Properties V",
          "Methoden I",
          "Methoden II",
          "Methoden III",
          "Subscripts",
          "Vererbung",
          "Initialisierung I",
          "Initialisierung II",
          "Initialisierung III",
          "Initialisierung IV",
          "Initialisierung V",
          "Initialisierung VI",
          "Initialisierung VII",
          "Initialisierung VIII",
          "Initialisierung IX",
          "Deinitialisierung",
          "ARC I",
          "ARC II",
          "ARC III",
          "Optional Chaining",
          "Error Handling I",
          "Error Handling II",
          "Error Handling III",
          "Error Handling IV",
          "Type Casting I",
          "Type Casting II",
          "Nested Types",
          "Extensions I",
          "Extensions II",
          "Protokolle I",
          "Protokolle II",
          "Protokolle III",
          "Protokolle IV",
          "Protokolle V",
          "Protokolle VI",
          "Protokolle VII",
          "Protokolle VIII",
          "Generics I",
          "Generics II",
          "Generics III",
          "Generics IV",
          "Generics V",
          "Fortgeschrittene Operatoren I",
          "Fortgeschrittene Operatoren II",
          "Fortgeschrittene Operatoren III",
          "Fortgeschrittene Operatoren IV",
          "Fortgeschrittene Operatoren V"
        ],
        "Unsere erste App: Simon Says": [
          "Simon Says - Vorschau",
          "Simon Says 1 - Projekt Setup und Autolayout",
          "Simon Says 2 - GameData Klasse",
          "Simon Says 3 - Spielablauf und Gameover",
          "Simon Says 4 - Feinschliff"
        ],
        "Foodie Groundwork": [
          "Foodie Groundwork - Vorschau",
          "Foodie Groundwork 1 - Autolayout Wiederholung",
          "Foodie Groundwork 2 - UINavigationController I",
          "Foodie Groundwork 3 - UINavigationController II",
          "Foodie Groundwork 4 - UITableView I",
          "Foodie Groundwork 5 - UITableView II",
          "Foodie Groundwork 6 - UICollectionView I",
          "Foodie Groundwork 7 - UICollectionView II",
          "Foodie Groundwork 8 - Fortgeschrittenes Autolayout",
          "Foodie Groundwork 9 - UIPickerView",
          "Foodie Groundwork 10 - UITextField",
          "Foodie Groundwork 11 - UIImagePicker",
          "Foodie Groundwork 12 - Simulator vs. Gerät Testing",
          "Foodie Groundwork 13 - MapKit & CoreLocation I",
          "Foodie Groundwork 14 - MapKit & CoreLocation II",
          "Foodie Groundwork 15 - UIPageViewController",
          "Foodie Groundwork 16 - DetailViewController Musterlösung"
        ],
        "Tic Tac Toe": [
          "Tic Tac Toe - Vorschau",
          "Tic Tac Toe 1 - Layout",
          "Tic Tac Toe 2 - Spiel",
          "Simon Says 5 - Multiplayer"
        ],
        "Soundboard": [
          "Soundboard - Vorschau",
          "Soundboard 1 - Drumpad Layout",
          "Soundboard 2 - AVFoundation & AVAudioPlayer",
          "Soundboard 3 - AVFoundation & AVAudioRecorder",
          "Simon Says 6 - Audio"
        ],
        "Quiz": [
          "Quiz - Vorschau",
          "Quiz 1 - Projekt Setup",
          "Quiz 2 - Quiz Layout",
          "Quiz 3 - Quiz Layout Verbesserung",
          "Quiz 4 - Plist Ressourcen",
          "Quiz 5 - Funktionalität",
          "Quiz 6 - NSTimer & Highscore"
        ],
        "SpriteKit": [
          "SpriteKit - Vorschau",
          "SpriteKit 1 - Einführung",
          "SpriteKit 2 - SKView & SKScene",
          "SpriteKit 3 - SKNode",
          "SpriteKit 4 - SKSpriteNode",
          "SpriteKit 5 - SKPhysics I",
          "SpriteKit 6 - SKPhysics II",
          "SpriteKit 7 - SKNode Subklassen",
          "SpriteKit 8 - Bewegung",
          "SpriteKit 9 - Gegner I",
          "SpriteKit 10 - Springen",
          "SpriteKit 11 - Münzen und Punkte",
          "SpriteKit 12 - Gegner II",
          "SpriteKit 13 - NSUserDefaults",
          "SpriteKit 14 - Animation",
          "SpriteKit 15 - SpriteKit Button",
          "SpriteKit 16 - Store I",
          "SpriteKit 17 - Store II",
          "SpriteKit 18 - Booster Implementation"
        ],
        "Foodie": [
          "Foodie - Vorschau",
          "Foodie 1 - Core Data Einführung",
          "Foodie 2 - CoreDataStackManager Klasse",
          "Foodie 3 - AddViewController",
          "Foodie 4 - BrowseViewController",
          "Foodie 5 - Custom UICollectionView Layout",
          "Foodie 6 - DetailViewController & NSPredicates",
          "Foodie 7 - Navigation mit Maps",
          "Foodie 8 - Editieren",
          "Foodie 9 - Gallerie & Random"
        ]
      },
      "requirements": [
        "Mac oder PC mit OSX",
        "Xcode"
      ],
      "description": "*Dieser Kurs ist in Xcode 7 mit Swift 2 produziert und wird nicht aktualisiert werden.*\n\nDu willst alle über Apples Programmiersprache Swift lernen und dabei eigene tolle iOS Applikationen entwickeln?\nDann ist das hier der richtige Kurs für dich!\nWir haben all unser Wissen in einen praktischen Kurs gepackt, der sogar in the theoretischen Teilen immer einen beispielhaften Praxisbezug sucht und das Lernen damit kinderleicht macht!\nMit diesem Kurs lernst du alle Aspekte von Swift kennen und wirst dazu in der Lage sein deine eigenen iOS Apps mit Leichtigkeit selbst zu programmieren. Um das noch weiter zu erleichtern, werden wir viele praktische Anwendungen beispielhaft mit verschiedenen Projekten besprechen.\nEs gibt hier kein Copy Paste von irgendwelchem Code den keiner versteht!\nWir wollen, dass unsere Studenten verstehen was sie schreiben und professionell mit den neu erlernten Dingen umgehen können. Damit legst du den Grundstein für eine erfolgreiche Karriere im Bereich der iOS Programmierung!\nWir wollen dir dabei helfen, indem wir alle wichtigen Dinge ausführlich erklären. Und solltest du dennoch weiter Fragen haben, stehen wir dir persönlich im Q&A Bereich auf Udemy zur Verfügung.\nDu bekommst in diesem Kurs alle Ressourcen zur Verfügung gestellt. Das schließt auch Schritt für Schritt Source Code für alle unsere Projekte ein, sodass du immer den aktuellen Stand vergleichen kannst.\nDieser Kurs ist in Xcode 7 mit Swift 2 produziert und wird nicht aktualisiert werden.\nDer praktische Teil des Kurses mit dem Entwickeln der Apps ist weiterhin komplett relevant und die entsprechenden Änderungen leicht realisierbar, in aller Regel automatisch durch Xcode korrigiert. Der einzige Part, der (in Teilen) nicht mehr ganz aktuell ist, sind die ersten Kapitel über die Theorie der Sprache, auch hier sind die Änderungen aber geringfügig.",
      "target_audience": [
        "Komplette Programmiereinsteiger",
        "Fortgeschrittene Programmierer"
      ]
    },
    {
      "title": "Swift 2.2 und iOS9 - App Entwicklung für iPhone und iPad",
      "url": "https://www.udemy.com/course/ios-mit-swift-am-beispiel-von-praxisnahen-apps/",
      "bio": "Programmiere Apps für Geräte von Apple und stelle sie in den App Store. Lerne alles über iOS 9, Swift 2 und Xcode 7!",
      "objectives": [
        "Label, Button, Slider, TextFields, AlertViews verstehen",
        "TableView Grundlagen, Dictionaries, Arrays, Segue, Delegates, NavigationController verstehen",
        "UICollectionView inkl. FlowLayout verstehen",
        "AutoLayout & SizeClasses beherrschen",
        "RESTful APIs abfragen, JSON verarbeiten, Grand Central Dispatch verstehen",
        "CoreData, Property-Lists (plist-Dateien) und NSBundle verstehen",
        "eigene Delegates und Protokolle anlegen und verwenden",
        "CADisplayLink und CABasicAnimation nutzen",
        "UIPickerView inkl. Delegate, NSUserDefailt und UIStepper kennen",
        "MotionShake Events verarbeiten",
        "erste Schritte mit SpriteKit unternehmen",
        "Teilen von Inhalten auf Facebook und Twitter",
        "eigene UITableViewCell-Klassen, eigene EditActions für Tabellenzeilen",
        "CoreLocation und MapKit verstehen",
        "UISplitView beherrschen",
        "CoreGraphics kennenlernen, mit UIBezierPath zeichnen und animieren",
        "Timer mit NSTimer erstellen, pausieren und stoppen",
        "UITabBarController verwenden",
        "NSXMLParser verwenden",
        "Audioaufnahmen erstellen und Audiodateien wiedergeben",
        "Push Notifications versenden",
        "NSNotifications verwenden",
        "In-App Einkäufe realisieren",
        "mit der Kamera und PhotoLibrary arbeiten",
        "Pull-To-Refresh in Tabellen implementieren",
        "App-Inhalte über das Spotlight-Framework suchbar machen",
        "Handoff zwischen mehreren Geräten realisieren",
        "CloudKit als Backend für Apps"
      ],
      "course_content": {
        "Herzlich Willkommen - Intro": [
          "Herzlich Willkommen - Intro",
          "So bekommst Du Hilfe"
        ],
        "Swift Crashkurs - Grundlagen": [
          "Variablen und Konstanten",
          "Variablennamen",
          "Typ-Annotationen",
          "Variablen und Konstanten ausgeben",
          "Kommentare",
          "Das Semikolon in Swift",
          "Datentypen",
          "Typumwandlung",
          "Strings",
          "Tuples",
          "Optionals",
          "Grundlagen Quiz"
        ],
        "Swift Crashkurs - Basis-Operatoren": [
          "Arithmetik - Rechnen mit Swift",
          "Remainder Operator",
          "Inkrementieren / Dekrementieren",
          "Werte Vergleiche",
          "Logische Operatoren",
          "Operatoren"
        ],
        "Swift Crashkurs - Arrays und Dictionaries": [
          "Arrays verwenden",
          "Dictionaries nutzen",
          "Sets in Swift",
          "Collection-Quiz"
        ],
        "Swift Crashkurs - Kontrollstrukturen": [
          "for-in Schleifen",
          "while-Schleifen",
          "Funktionen (func)",
          "Kontrollstrukturen"
        ],
        "Swift Crashkurs - Objekte": [
          "Strukturen (struct)",
          "Klassen (class)",
          "Value- vs Reference-Types",
          "Protokolle in Swift",
          "Protocol Extensions verwenden"
        ],
        "Swift Crashkurs: Weitere Themen": [
          "Enumerations",
          "Fehlerbehandling mit do/catch/try/throw"
        ],
        "#1 BMI Rechner - Xcode & AutoLayout Grundlagen": [
          "Xcode Grundlagen",
          "Adaptive Interface mit Autolayout gestalten",
          "Das Interface vorbereiten",
          "Outlets und Actions erstellen",
          "IBActions für die UISlider",
          "Den BMI berechnen und ausgeben",
          "Übungsaufgabe",
          "Musterlösung",
          "BMI Rechner"
        ],
        "#2 Rezepte - UITableView Grundlagen": [
          "Ziel dieser Sektion: Interface mit Tableview vorbereiten",
          "UITableView und die Reuse-Queue verstehen",
          "IBOutlet für die TableView erzeugen und den Identifier setzen",
          "UITableViewDelegate und UITableViewDataSource",
          "Ein eigenes Model für Rezepte",
          "Zweite View und Segue im Storyboard anlegen",
          "Den Segue manuell auslösen",
          "Daten im zweiten ViewController anzeigen",
          "Einträge mit der UITableView löschen",
          "Übungsaufgabe",
          "Musterlösung"
        ],
        "#3 ImageViewer - UICollectionView und adaptive Interfaces mit SizeClasses": [
          "SizeClasses verstehen",
          "Ziel dieser Sektion: Interface mit der CollectionView vorbereiten",
          "UICollectionViewDataSource implementieren",
          "Das FlowLayout modifizieren",
          "DetailView für Bilder",
          "Adaptives Layout mit SizeClasses umsetzen",
          "Die Traitcollection nutzen",
          "Übungsaufgabe",
          "Musterlösung"
        ]
      },
      "requirements": [
        "Grundkenntnisse zur Nutzung von Mac OS X",
        "Grundlegende Programmierkenntnisse von Vorteil",
        "Grundkenntnisse der objektorientierten Programmierung"
      ],
      "description": "Achtung: iOS9 und Swift2.2 sind nicht mehr aktuell, die Beispiele funktionieren aber mit kleineren Anpassungen (fast immer Xcode Empfehlungen verfügbar) weiterhin.\nDieser Online-Kurs ist mit 28 Stunden Inhalt einer der umfassendsten Referenzen für die iOS App Entwicklung im deutschsprachigen Markt. Mit über 7.400 Teilnehmern gehört er mit zu den erfolgreichsten Kursen auf Udemy! Kursteilnehmer bekommen auch ein Swift Cheatsheet (Swift Grundlagen) kostenlos mit dazu.\nDu lernst die unterschiedlichsten Bereiche von iOS kennen und lernst, wie Du mit Swift auch umfangreichere Projekte realisierst. Dabei bleiben aber natürlich auch Einsteiger nicht auf der Strecke. Die erste App legt die Grundlagen rund um Xcode, iOS-Entwicklung und das AutoLayout. Die weiteren Apps führen Dich in immer mehr Klassen, Bibliotheken und Frameworks ein.\nZusätzlich gibt es 3 Bonuskapitel zu folgenden Themen:\nUnit-Testing mit Xcode\nVersionsverwaltung mit Git\nApps im AppStore einreichen\n\nDetails zu den einzelnen Kursthemen:\n\n**Xcode & Autolayout Grundlagen**\nIn der erste App stehen Grundlagen rund um Xcode und iOS im Vordergrund. Als Einsteiger lernst Du die Arbeit mit dem Cocoa Touch Framework kennen und nutzt IBOutlets und IBActions. Auch als fortgeschrittener findest Du mit AutoLayout Informationen zu einem wichtiges Thema.\n**UITableView & Segue Grundlagen**\nDie RezepteApp führt Dich in in die UITableView ein. Du definierst eine eigene UITableViewDataSource sowie einen UITableViewDelegate. Die Protokolle werden implementiert und im Storyboard eine zusätzlich View angelegt. Die wird über Segue erreichbar gemacht. Außerdem definieren wir einDatamodel, über das Rezepte in der App repräsentiert werden.\n**UICollectionView und adaptive Interface mit SizeClasses**\nDer ImageViewer basiert auf der Klasse UICollectionView. Du lernst sie zu nutzen und über die UICollectionViewDataSource und UICollectionViewDelegateProtokolle anzubinden. Ebenso sind UIImage und die UIImageView die Basis zur Darstellung von Bildern. Gemeinsam erstellen wir dafür eine angepasste UICollectionViewCell. Ein wichtiges Thema sind die SizeClasses in iOS. Wir erstellen für den ImageViewer ein adaptives Layout, dass für iPad und iPhones gesondert optimiert wird. Dazu nutzen wir Traitcollections.\n**RESTful APIs, JSON, Grand Central Dispatch und NSOperationQueue**\nApps bekommen eine ganz neue Dimension, wenn sie Daten aus dem Netz verarbeiten. Ein beliebter Weg sind RESTful APIs, die zum Beispiel Daten imJSON-Format zurückgeben. Im SynonyMaster rufen wir von openthesaurus Synonyme für eingegebene Wörter ab. Dabei lernst Du die asynchrone Datenverarbeitung kennen. Wir nutzen Grand Central Dispatch (GCD) sowie die NSOperationQueue. Mit NSJSONSerialization verarbeiten wir schließlich die Antwortdaten. Die Hintergrundaktivität zeigen wir mit einer UIActivitiyIndicatorView an.\n**CoreData**\nDie Einkaufsliste steht voll und ganz im Zeichen von CoreData. Du lernst am Beispiel einer App für den Einkauf Daten persistent zu speichern. Wir erstellen eine Verwaltung für Einkaufslisten, auf denen jeweils mehrere Produkte gespeichert werden können. Dazu legen wir die Entitäten an, erzeugenManagedObjects, implementieren die typischen CRUD-Aktionen (Create, Update, Remove) und verwenden Relationen. Außerdem kommt ein Bridging-Header zum Einsatz und Du legst über Closures eigene Completion-Handler fest.\n**CADisplayLink, NSUserDefaults und diverse UI-Elemente**\nDie TimerApp nutzt die Klasse CADisplayLink, um einen Timer zu realisieren. Er kann gestoppt, pausiert und zurückgesetzt werden. Außerdem nutzen wir verschiedene UIElemente wie die UIPickerView inkl. entsprechender UIPickerViewDataSource. Darüber hinaus kommen UIStepper und dieUIProgressView zum Einsatz. In den NSUserDefaults speichern wir die aktuelle Timereinstellung und benachrichtigen den Benutzer nach Ablauf mit einem UIAlertController.\n**SpriteKit**\nDer Würfelbecher ist ein Beispiel für SpriteKit. Du bekommst einen Überblick über das Framework und lernst den Zusammenhang zwischenGameScene, Nodes und Actions kennen. Außerdem verwenden wir die Schwerkraft, legen eigene Nodes bei Berührung an (Würfel in den Becher) und starten wenn der Benutzer sein Gerät schüttelt (MotionShake Events) das Würfeln. Das Ergebnis blendest Du in einer neuen GameScene ein.\n**WordPress Backend, Teilen auf Facebook und Twitter**\nIn dieser App arbeitest Du erneut mit RESTful APIs. Allerdings erzeugst Du mit WordPress ein eigenes Backend für Deine App. Du lernst die Inhalte der App mit einfachen Mitteln selbst zu verwalten. Gerade für redaktionelle Inhalte ein Muss. Die Daten werden per JSON im Hintergrund abgerufen. Außerdem lernst Du mit den Property-Lists wie der Info (.plist) umzugehen und sie zur Konfiguration einzusetzen. Darüber hinaus erstellst Du eine eigeneEditAction für die UITableViewCell und lernst, wie Inhalte auf Twitter und Facebook geteilt werden können.\n**MapKit und UISplitViewController**\nDie HappyPlaces-App besteht aus zwei Teilen. Im Vordergrund steht die Nutzung von MapKit. Du zeigst Orte auf einer Karte an, ermöglichst über den UISearchController die Volltextsuche nach Orten, Ländern und Straßen und lernst Koordination per Touchgeste abzufragen. Auch die eigene Position wird bestimmt und auf der Karte dargestellt. Der zweite Teil der App ist der UISplitViewController. Er wird genutzt, um zur Verfügung stehenden Platz auf allen Geräten fast automatisch bestmöglich zu nutzen.\n**UIBezierPath – eine animierte View**\nDer TabataTimer ist eine umfassende App, in der Du sogar eigene View-Elemente erzeugst. Dazu nutzen wir einen UIBezierPath, mit dem wir eine eigene Fortschrittsanzeigen bauen (einen Kreis, der sich langsam füllt). Der Fortschritt wird mit einer CABasicAnimation animiert dargestellt. Ergänzend lernst Du auch mit NSTimer zu arbeiten und damit eigene Timer zu erzeugen. Auch hier realisieren wir wieder die Möglichkeit den Timer zu pausieren.\n**XML-Verarbeitung und UITabBarController**\nDer RSSReader ist genau das – ein Reader für RSS-Feeds. Diese werden typischerweise von Blogs und anderen redaktionellen Webseiten bereitgestellt. Die App zeigt die letzten Beiträge in einer UICollectionView an. Dazu passen wir das UICollectionViewFlowLayout an. Der NSXMLParser bildet das Herzstück der XML-Verarbeitung, welche ebenfalls im Hintergrund stattfindet. Auch Bilder werden abgerufen und in der CollectionView anzeiget. Außerdem kommt ein UITabBarController zum Einsatz, Du lernst auf Geräte-Rotation zu reagieren und eine WebView zu nutzen.\n**Audiowiedergabe und Aufnahmen**\nDas Soundboard nutzt vorbereitete Musikstücke und bietet Buttons, um sie abzuspielen. Insgesamt habe sind 9 Sounds von freesound (.org) zum Download bereit, die in der App genutzt werden. Ein wichtiger Part ist daher die Audiowiedergabe mit iOS. Darüber hinaus erstellst Du Audioaufnahmen mit dem Rekorder, spielst diese ab und lernst den Audiorecorder-Delegate kennen.\n**Push-Notifications**\nViele Mannschaften bieten eigene Apps. Darüber stehen natürlich neueste Nachrichten bereit. Noch wichtiger sind aber Benachrichtigungen während der laufenden Spiele. Der aktuelle Spielstand wir abgerufen und der Benutzer per Push-Nachrichten bei Ereignissen sowie Anstoß und Abpfiff alarmiert. Diese Funktionalität bildet die LiveErgebnisse-App ab. Du lernst den Apple Push Notification Service (APNs) zu verstehen, verwendest eigene Push Notifications verwenden (per APN), wir erstellen die benötigten Zertifikate und versenden Push-Nachrichten. Der Spielstand wird per JSON abgerufen. Außerdem lernst Du NSNotifications kennen.\n**In-App Einkäufe**\nÜber In-App Einkäufe werden viele Apps monetarisiert. Das Freemium Modell siehst vor eine kostenlose Basis bereitzustellen. Zusätzlich gibt es Premiuminhalte, die erst nach einer Zahlung freigeschaltet werden. In der PremiumRezepte-App lernst Du In-App Einkäufe anzubieten. Gemeinsam hinterlegen wir die kostenpflichtigen Inhalte, sperren aber den Zugang. Dieser wird schließlich per In-App Purchase (IAP) wieder freigeschaltet und der Einkauf gespeichert.\n**CloudKit als Backend**\nCloudgram ist ein rudimentärer Clone von Instagram, der bewusst auf viel Funktionalität verzichtet. Im Vordergrund steht keine 1:1 Kopie, sondern das CloudKit Backend. Dieser populäre Service dient als Backend für die App. Du verwendest die Kamera und PhotoLibrary als Quelle für Bilder. Die werden hochgeladen und auf den Servern von Apple gespeichert. Darüber hinaus lernst Du Pull-To-Refresh in eine UITableView zu integrieren und Asset zu verwenden.",
      "target_audience": [
        "Einsteiger in die iOS-Entwicklung",
        "iOS-Umsteiger auf Swift",
        "Fortgeschrittene, die neue Inspiration suchen"
      ]
    },
    {
      "title": "الكورس الكامل في تعديل تطبيقات الأندرويد + 24 تطبيق مجاني",
      "url": "https://www.udemy.com/course/android-reskin/",
      "bio": "احصل علي 24 تطبـيــق أندرويد مجاني مع الكورس واحترف التعديل علي تطبيقات الأندرويد بدون أي خبرة في البرمجة وبشكل إحترافي",
      "objectives": [
        "هتتعلم إزاي تعدل علي تطبيقات الأندرويد بشكل إحترافي",
        "هتتعلم إزاي تستثمر وقتك وتحويله إلي مكسب حقيقي",
        "هتتعلم إزاي يكون عندك دخل شهري",
        "هتتعلم إزاي تكون من ضمن مطوري الأندرويد في العالم",
        "هتتعلم إزاي تحول إمكاناتك البسيطة إلي إلي دخل شهري بالدولار"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What Will We Learn In This Course? - ايه اللي هنتعلمه وإيه هي أهدافنا في الكورس؟"
        ],
        "Step One": [
          "What Do We Need In This Course? - إيه اللي هنحتاجه علشان نبدأ في الكورس",
          "What Is Android Studio? - إيه هوه برنامج أندرويد ستوديو؟",
          "إزاي هتقدر تعدل علي تطبيقات الأندرويد بدون أي خبرة في البرمجة؟"
        ],
        "Step Two": [
          "What is Android Studio? - شرح برنامج أندرويد ستوديو",
          "App Reskin Steps - خطوات التعديل علي تطبيق الأندرويد والتعرف علي موقع كود كانيون"
        ],
        "Step Three": [
          "What is Gravit Designer - التعرف علي موقع ( جرافيت ديزاينر ) وشرح طريقة إستخدامه",
          "Android App Reskin Part 1 - التعديل علي تطبيق الأندرويد الجزء الأول",
          "Android App Reskin Part 2 - التعديل علي تطبيق الأندرويد الجزء الثاني",
          "Android App Reskin Part 3 - التعديل علي تطبيق الأندرويد الجزء الثالث",
          "Android App Reskin Part 4 - التعديل علي تطبيق الأندرويد الجزء الرابع",
          "Android App Reskin Part 5 - التعديل علي تطبيق الأندرويد الجزء الخامس"
        ],
        "Step Four": [
          "Google AdMob / Virtual Card - شرح إعلانات جوجل أدموب وشرح عمل فيزا إفتراضية",
          "Create Google Play Console Account - شـرح عمل حساب علي جوجل بلاي كونسول",
          "Create AdMob Account - شـرح عمل حساب علي جوجل أدمـوب"
        ],
        "Step Five": [
          "Placing Google AdMob Ads - شرح إضافة إعلانات جوجل أدموب في التطبيـق",
          "Changing App Package Name - شرح تغييـر الباكج نيم لتطبيق الأندرويد",
          "Generate Android App Bundle - شرح عملية إنشاء ملف الباندل لتطبيق الأندرويد"
        ],
        "Step Six": [
          "Publishing App To Play Console Part 1 - نشر التطبيق علي بلاي كونسول الجزء الأول",
          "Publishing App To Play Console Part 2 - نشر التطبيق علي بلاي كونسول الجزء الثاني",
          "Publishing App To Play Console Part 3 - نشر التطبيق علي بلاي كونسول الجزء الثالث"
        ],
        "Step Seven": [
          "Adding Personal Information To Admob - إضافة البيانات الشخصية في جوجل أدموب",
          "How To Link Bank Account To Google AdMob - إضافـة الحسـاب البنكـي بجوجـل أدمـوب",
          "What Is Next ?"
        ],
        "Step Eight": [
          "Free Android App NO. 2 - Ringtone App | تطبيق رقم 2 - تطبيق النغمات المجاني",
          "Free Android App NO. 3 - WhatsApp Stickers | تطبيق رقم 3 تطبيق ملصقات الواتسآب"
        ]
      },
      "requirements": [
        "كل اللي هتحتاجه هو جهاز كومبيوتر أو لابتوب بإمكانيات متوسطة",
        "إنترنت وبعض من الوقت"
      ],
      "description": "كورس الريسكين أو التعديل علي تطبيقات الأندرويد أفضل كورس يؤهلك لتعلم التعديل علي أي تطبيق أندرويد\n\n\nHome Working الكورس بيخاطب كل المترددين في الدخول في الـ\n\n\nأو الشغل من البيت اللي بيتجه ليه كتير من الناس لتوفير دخل محترم وإنت قاعد في البيت\n\n\nفي كورس الريسكين أو التعديل علي تطبيقات الأندرويد مش هتحتاج إن يكون عندك أي خبرة في مجال البرمجة كل اللي هتحتاجه هوه جهاز كومبيوتر ووقت فاضي علشان تبدأ تتعلم التعديل علي تطبيقات الأندرويد خطوة بخطوة بشكل إحترافي مع متابعتنا ليك لو واجهتك أي صعوبات\n\n\nفي الكورس دة كورس الريسكين التعديل علي تطبيقات الأندرويد هنقلك خبرة أكتر من 5 سنين في التعديل علي تطبيقات الأندرويد بدون أي خبرة في مجال البرمجة علشان توصل يكون عندك دخل شهري بالدولار بشكل ثابت\n\n\nفي كورس الريسكين أو التعديل علي تطبيقات الأندرويد هتتعلم تصميم وتعديل الصور علي أفضل موقع مجاني لتعديل وتصميم الصور\n\n\nوكمان هتتعلم إزاي ترفع تطبيقاتك علي جوجل بلاي ستور أو متجر جوجل علشان يكون عندك حساب رسمي علي الموقع تقدر تنشر عليه تطبيقاتك\n\n\nالكورس هيخليك تقدر تستثمر وقتك وتحويله لحاجة تفيدك في حياتك , كل اللي إنت محتاجه هوه شوية وقت وجهاز كومبيوتر\nكمان كورس الريسكين أو التعديل علي تطبيقات الأندرويد بيأهلك للحصول علي هدية مجانية وهي عبارة عن 24 تطبيق أندرويد هتاخدهم بشكل مجاني بمعدل تطبيق أندرويد واحد أو إثنين شهرياً لمدة سنة كاملة",
      "target_audience": [
        "الكورس مناسب لمن لديه وقت فراغ",
        "الكورس مناسب للطلبة والطالبات",
        "الكورس مناسب لمن لديه وظيفة ثابتة",
        "الكورس مناسب لكل من لديه ميول للشغل من البيت",
        "الكورس مناسب لمن لديه ميول للبرمجة"
      ]
    },
    {
      "title": "Flutter - Conhecendo o SDK mobile do Google",
      "url": "https://www.udemy.com/course/flutter-conhecendo-na-pratica/",
      "bio": "Conheça e aprofunde seu conhecimento com esse SDK poderoso do Google, o Flutter.",
      "objectives": [
        "Saberão como funciona o Flutter e poderão desenvolver aplicativos dos mais simples aos complexos"
      ],
      "course_content": {
        "Introdução e Instalação": [
          "Introdução",
          "Instalação do Flutter",
          "Configuração Android Studio",
          "Criando primeiro Projeto Flutter no Android Studio",
          "Hot Reload - Android Studio",
          "Criando primeiro Projeto Flutter com CMD + Editor de Texto",
          "Hot Reload - CMD + Editor de Texto",
          "Flutter Studio",
          "Entendendo o app Hello World",
          "Flutter Inspector",
          "Instalando e Configurando VS Code",
          "Sobre o Flutter",
          "Estrutura Flutter",
          "Flutter CLI"
        ],
        "Criando Aplicativo Widgets Exemplo": [
          "Criando nosso aplicativo",
          "Adicionando o Drawer (Sidemenu)",
          "Personalizando o Drawer",
          "Adicionando BoxDecoration no DrawerHeader",
          "Navegando para a Tela de Botões",
          "Criando as Telas de Listas e Cards, e fechando o Drawer",
          "Criando TabBar e TabBarView"
        ],
        "Aplicativo Widgets Exemplo: Botões": [
          "Raised Button",
          "Flat Button",
          "Outline Button",
          "Icon Button e Action Button"
        ],
        "Aplicativo Widgets Exemplo: Listas": [
          "Configurando TabBar das Listas",
          "Criando a nossa lista",
          "Aplicando ordenação na lista",
          "BottomSheetController e SubTitles na Lista",
          "Adicionando Avatar e Ícone em nossa Lista"
        ],
        "Aplicativo Widgets Exemplo: Cards": [
          "Criando o arredondamento dos Cards",
          "Criando a Classe dos Cards",
          "Finalizando o Card"
        ],
        "Aplicativo Operações Matemáticas": [
          "Criando nosso projeto no Android Studio",
          "Criando a Classe do Aplicativo",
          "Adicionando o primeiro TextField",
          "Segundo TextField e o RaisedButton para Calcular",
          "Criando o Container, o AppBar e o Scaffold",
          "Definindo o Entry Point do nosso App",
          "Executando o nosso Aplicativo"
        ]
      },
      "requirements": [
        "Básico conhecimento de lógica de programação, Flutter, Dart e Android Studio"
      ],
      "description": "O que é Flutter?\nComo ele funciona?\nO que é Dart?\nConheça esse poderoso SDK de desenvolvimento mobile criado pelo Google.\nO Flutter trabalha multiplataforma, portanto, com apenas um código é possível gerar aplicativos para Android e iOS. O mais importante de tudo isso é que a compilação é Nativa e abstrai o que tem de melhor dos Sistemas Operacionais, em questão de performance e UI, pois sua estrutura é diferenciada dos demais Frameworks..\nPor ser uma linguagem teoricamente nova, fique um passo à frente da galera e adquira esse conhecimento.\nPrincipais Tópicos:\nEntendendo o Flutter;\nEntendendo o Dart;\nCriando aplicação Demo;\nCriando um Drawer;\nCriando um DrawerHeader com BoxDecoration;\nCriando Itens de Menu do Drawer;\nNavegando entre telas;\nApresentação de diversos Widgets;\nE muito mais...\n\"Bora estudar?",
      "target_audience": [
        "Desenvolvedores mobile interessados na nova Tecnologia do Google, o Flutter"
      ]
    },
    {
      "title": "İonic Angular v13 ile Android Uygulama Geliştirme",
      "url": "https://www.udemy.com/course/ionic-angular-ile-android-uygulama-gelistirme/",
      "bio": "Angular Üzerinden Ionic Yapısı ile Android Uygulama Yapmasını Öğrenin",
      "objectives": [
        "Ionic Kurmasını ve Angular Yapısı İle Nasıl Çalıştığını Öğreneceksiniz",
        "Ionic ile Angular üzerinden Telefon Uygulaması Yapmasını Öğreneceksiniz",
        "Android Stuido Üzerinden Uygulamanızı Çalıştırmasını Öğreneceksiniz",
        "Canlı Bir Cihaza ya da Play Store'a Uygulamanızı Nasıl Yükleyeceğinizi Öğreneceksiniz"
      ],
      "course_content": {
        "Giriş": [
          "Giriş"
        ],
        "Başlangıç": [
          "Apiler",
          "Ders Programı",
          "Ionic Nedir",
          "Ionic Kurulumu ve Yeni Proje Oluşturma",
          "Angular ve Inoic Yapısını İnceleyelim",
          "Ionic Page Oluşturma - Routing Yapısı - Tabs Componentini Kullanma",
          "Kalan Page'leri Oluşturalım",
          "İç İçe Page Oluşturalım, Card Kullanalım, Back Button Ekleyelim",
          "Spinner Kullanımı"
        ],
        "Android Studio": [
          "Kurulum",
          "Yeni Bir Proje Oluşturalım",
          "Uygulamayı Android Studio Üzerinde Manuel Çalıştırma",
          "Uygulamayı Android Studio Üzerinde Otomatik Çalıştırma",
          "Uygulamayı Android Studio Üzerinde Canlı Çalıştırma",
          "Projemize İçerikler Ekleyelim",
          "SideMenu Ekleyelim",
          "Alert Kullanalım",
          "Toast Kullanımı"
        ],
        "Shopping Android App": [
          "Yeni Bir Proje Oluşturalım",
          "Products Sayfamızı Oluşturalım",
          "Products Sayfamızı Düzenleyelim",
          "Product Service ve Model Yapısını Kuralım, Get List Apisini Yazalım",
          "Product Listesini Çekelim",
          "Sipariş Adedini Artırıp Azaltacak Metot Yazalım",
          "Hataları Çözelim",
          "Ürün Adet Kontrolü",
          "Ürün Adet Kısmının Düzeltilmesi",
          "Sepete ürün Ekleme",
          "Ürün Sayfasına Loading Ekleyelim",
          "Loading Yapısını Düzeltme",
          "Bir Hata Daha",
          "Product Pipe Yazalım",
          "Sepet Sayfasını Tasarlayalım",
          "Sepet Sayfasını Düzenleyelim",
          "Sepeti Ürünü Silme",
          "Payment Sayfası Oluşturma",
          "Pament Sayfası için Düzeltmeler, Service ve Model",
          "Ödeme İşlemini Tamamlayalım",
          "Açılır Menü Ekleyelim",
          "Login Sayfası Tasarlayalım",
          "Giriş İşlemini Tamamlayalım",
          "Product Sayfası Giriş Sonrası için Düzenleyelim",
          "Tabs Sayfasını Giriş Sonrası için Düzenleyelim",
          "Proje Hakkında Konuşalım",
          "Projemizi Android Studio Üzerinde Açalım",
          "Projemizi Canlı Cihazda Çalıştırma",
          "Play Store Üzerinden Uygulamızı Yayımlama"
        ],
        "Final": [
          "Final"
        ]
      },
      "requirements": [
        "Temel Seviye Angular Bilgisi Gerekiyor"
      ],
      "description": "Merhaba arkadaşlar;\n\n\nBu kurs için mutlaka Angular biliyor olmanız gerekmektedir.\nTemel seviye bile olsa Angular biliyorsanız ve Angular üzerinden bir telefon uygulaması nasıl yapılır öğrenmek istiyorsanız doğru yerdesiniz.\n\n\nBu kurs ile Ionic yapısını öğrenecek, Angular üzerinde Ionic yapısı ile çalışarak Android uygulamalar geliştireceksiniz.\nCanlı Api'lerle çalışacaksınız\nProjenizi Gerçek bir cihaza kurmasını öğreneceksiniz\nProjenizi Play Store üzerinden yayımlamayı öğreneceksiniz\n\n\nAndroid için gerçek yerel mobil uygulamalar oluşturmak için Angular ve web geliştirme teknolojilerini nasıl kullanacağınızı öğrenmek için bu kursa katılın!\n\n\nIonic, şu anda öğrenebileceğiniz en heyecan verici teknolojilerden biridir - uygulamaları normal (aşamalı) web uygulamaları ve gerçek yerel mobil uygulamalar olarak oluşturmak ve göndermek için tek bir kod tabanı (HTML, JS ve CSS ile yazılmış) kullanmanıza olanak tanır. iOS ve Android için. Bu kurs size Ionic'in en son sürümünü sıfırdan, hakkında önceden bilgi sahibi olmadan öğretir.\n\n\nAngular (eski adıyla Angular 2), TypeScript / JavaScript tarafından desteklenen harika web uygulamaları oluşturmanıza olanak tanır. Herhangi bir iOS veya Android cihazında çalışan yerel mobil uygulamalarda derlenebilen web uygulamaları oluşturmak için bu Angular bilgisini kullanmak harika olmaz mıydı? Ayrıca bunları aynı anda aşamalı web uygulamaları olarak yayınlayın.\n\n\nİonik çerçeve tam da bunu yapmanızı sağlar! Mevcut Angular, HTML, JS ve CSS bilginizi kullanın ve bununla yerel mobil uygulamanızı oluşturun! Ionic, yerel benzeri kullanıcı arabirimleri oluşturmak için kullanılabilecek (bu kursta öğreneceğiniz) birçok güzel bileşen sunar.\n\n\nKapasitör (Ionic ekibi tarafından sağlanan başka bir araç), geri kalanını, kodunuza dayalı olarak iOS/Android için yerel bir mobil uygulama oluşturmak için kullanıldığı şekilde halledecektir. Bu, binlerce farklı dil öğrenmek zorunda kalmadan, bildiğiniz şeylere odaklanmanıza ve uygulamanızı tüm olası cihazlarda (masaüstü ve mobil) yayınlamanıza olanak tanır! Aslında, Ionic ile üç farklı uygulamayı (iOS, Android, web) göndermek için tek bir kod tabanı kullanabilirsiniz.\n\n\nIonic gibi hibrit çerçevelerin son derece popüler ve yüksek talep görmesine şaşmamalı!\n\n\nHarika web uygulamaları oluşturmayı seviyorum ve şimdi bu bilgiyi kullanmak ve onunla yerel mobil uygulamalar oluşturmak da harika!\n\n\nBu kurs, uygulama odaklı bir rota izleyerek sizi sıfırdan yayınlanan uygulamaya götürür. Kurs boyunca Ionic'in temellerini, zengin bileşen kitaplığını, kullanıcı girdisinin nasıl alınıp işleneceğini, verilerin nasıl depolanacağını ve yerel cihaz özelliklerine nasıl erişileceğini ve daha fazlasını öğrenerek gerçekçi bir uygulama (kullanıcıların etkinlikler oluşturabileceği ve rezervasyon yapabileceği) olacaksınız. daha fazla!\n\n\nNavigasyon (sekmeler, yan menüler), kullanıcı girişi, yerel cihaz özellikleri (örneğin kamera), depolama, http, kimlik doğrulama gibi kavramların yanı sıra tüm önemli İonik bileşenlerine dalacaksınız!\n\n\nUygulama oluşturmak eğlencenin yalnızca bir parçası olduğundan, elbette uygulamalarınızı tarayıcıda, emülatörde veya kendi cihazınızda nasıl çalıştıracağınızı da öğreneceksiniz!\n\n\nO zaman tam olarak ne öğreneceksin?\n\n\nAngular hakkında kısa bir bilgi tazeleme\n\n\nİonik projelerinizi nasıl kurarsınız\n\n\nIonic hakkında temel bilgiler - Navigasyon nasıl çalışır, projeniz nasıl yapılandırılır ve zengin bileşen kitaplığını kullanırsınız\n\n\nİonik yapısının birçok güzel bileşeni nasıl kullanılır?\n\n\nFarklı türde gezinme kavramları nasıl kullanılır: \"Geri\"-Buton-Navigasyon, sekmeler ve yan menüler\n\n\nModeller, uyarılar, tostlar ve daha pek çok kullanışlı UI bileşeni nasıl gösterilir?\n\n\nUygulama tarayıcıda, öykünücülerde veya gerçek cihazlarda nasıl test edilir\n\n\nGirişler, metin alanları, açılır menüler, diyaloglar vb. aracılığıyla kullanıcı girişi nasıl alınır ve işlenir.\n\n\nKullanıcıların kimliği nasıl doğrulanır ve verileri depolamak + yüklemek için web sunucularına nasıl erişilir\n\n\nSon olarak, uygulamanızı nasıl yapılandıracağınızı, Google Play Store'da (veya aşamalı bir web uygulaması olarak) nasıl yayınlayacağınızı öğreneceksiniz.\n\n\nBu kulağa harika geliyor mu?\n\n\nSizi bu kursta ağırlamak için sabırsızlanıyorum! :)",
      "target_audience": [
        "Angular üzerinden Telefon Uygulmasını yapmak isteyen herkese yönelik bir kurs"
      ]
    },
    {
      "title": "【iOS開発】SwiftUIで実践的なiPhoneアプリを作成しながらプロの技術を学ぶ！Todoアプリを完成させよう！",
      "url": "https://www.udemy.com/course/swiftui-todo/",
      "bio": "最新のXcode11,Swift5.1対応で、いままでの開発よりも簡単に本格的なアプリを作る方法を一緒に学びます！",
      "objectives": [
        "SwiftUIでの画面作成",
        "SwiftUIでのデータの扱い方",
        "データベースのデータとSwifUIを連携する方法",
        "魅力的なアプリデザイン"
      ],
      "course_content": {
        "さあはじめましょう！！！": [
          "はじめに",
          "SwiftUI登場！",
          "SwiftUIアプリケーション開発に必要なもの",
          "AppleDeveloperアカウントを登録しよう",
          "Xcodeを一緒にインストールしよう"
        ],
        "SiwftUIでアプリ作りが簡単に！": [
          "SwiftUI以前の開発",
          "今までのUIの問題を解決するSwiftUI",
          "SwiftUIアプリの作り方〜プロジェクトを作成する〜",
          "デザインツールの基本的な使い方",
          "Xcode構成〜必要箇所の説明〜"
        ],
        "最強のTodo管理ツールを作ろう": [
          "作成するアプリの説明",
          "作成するTodoアプリの仕様を理解しよう",
          "Todoプロジェクトを作成する",
          "Github Link"
        ],
        "イメージを表示しよう": [
          "SF Symbolsで簡単イラスト表示",
          "CategoryImageを作る",
          "モディファイアでデザインを適用しよう",
          "Github Link"
        ],
        "チェックボックスを作ろう": [
          "チェックボックスを作る",
          "自分だけのオリジナルチェックボックスを作る",
          "プレビューを行う",
          "チェックボックスに文字を表示する",
          "Github Link"
        ],
        "UserViewを作ろう": [
          "Color Extension",
          "プロジェクトに画像を追加しよう",
          "clipShape モディファイアでビューを切り抜こう",
          "Spacer で右寄せ、左寄せを実現しPadding で余白を調整する",
          "フォントを変更しよう",
          "構造体にプロパティを追加しよう",
          "Github Link"
        ],
        "プロジェクトで使用するデータを準備する": [
          "データベースを準備しよう",
          "4つのカテゴリー用 enum を用意しよう",
          "Github Link"
        ],
        "4 つのカテゴリーを表示する部品を作ろう": [
          "CategoryViewを作る",
          "Buttonを使おう",
          "Github Link"
        ],
        "タスクを素早く保存できる UI を作ろう": [
          "QuickNewTaskを作る",
          "TextFieldを追加する",
          "Github Link"
        ],
        "一覧表示をする List を使ってみよう": [
          "TodoList を追加する",
          "@FetchRequestでListに表示するデータを用意しよう",
          "データを追加する処理",
          "List に表示するデータを絞り込む",
          "Github Link"
        ]
      },
      "requirements": [
        "macOS Catalina(10.15)以降がインストールされたMac"
      ],
      "description": "〜アプリ開発のパラダイムシフトを体感しよう〜\n＊＊最新のSwiftUIをチュートリアルでプロの開発者の技術を得よう＊＊\nこの講座は、SwiftUIをはじめてみたい、どんなアプリが作れるのか、感じを掴んでみたい、という方へ向け、Todoアプリの作成を通じて、SwiftUIの実践的なテクニックを学んで頂く講座です！タスクをリスト表示して終わり、なんてことはありません！本気で「人生を変えるるほどの」Todoアプリを作ることを目標としている講座です！SwfitUIで本当に使えるアプリの画面デザインを作り、さらにデータベースと連携して実用的なアプリを作る方法を学びます！\nレクチャー総数は79本！と中身の濃いコンテンツで確実にステップアップできます。\nこのレクチャーを受講すれば\niOSアプリ作成のパラダイムシフト、つまりいままでの常識を打ち破るあらたなアプリ開発方法であるSwiftUIによるアプリ作成の基本を学ぶことができます。\nまた実践的なTodoアプリを一緒に作り上げながら\nSwiftUIでの画面作成\nSwiftUIでのデータの扱い方\nデータベースのデータとSwifUIを連携する方法\n魅力的なアプリ、デザイン\nこれらをマスターすることができます。\n本講座はSwift言語の説明自体は行いませんのでSwift言語の基礎はわかっている方を対象としていますが、すべての手順を動画で説明していますので、もしプログラミングの経験がない方でもレクチャーの手順通りに一緒に作業をすすめていけば、アプリケーションを完成させることができます。まずはSwiftUIとプログラミングの雰囲気を掴んでいただくという使い方も可能です！\n受講者の声\nストーリーボードで作っていくやり方ではほぼ挫折だったけど、SwiftUIなら出来る！\niOSアプリの作成は今までObjective-CやSwiftで試みてきましたが、どれもApple独特の「ややこしい」「面倒臭い」「難しい」と3拍子揃った状態でいずれもイマイチな結果で終わってきましたが、このSwiftUIになって非常に簡単にプログラミングができるようになりました。\nサンプルを１本仕上げていきますが、本コースの通り進めていけばアプリを構築する基本的な構文を理解してサンプルアプリを動作させられるようになります。swiftUIから始める方は、本コースと一緒にswift基本構文解説的な物も選ぶと学習が捗ると思います。\nSwiftUI初心者です。まだ基礎を学んでいる段階のため、全てのレクチャーが「分かる！」というレベルではありませんが、今後主流となっていくであろうSwiftUIがどのような展望を持っているのか知りたくて受講しました。\n\n\nはじめのうちはエラーが出たり意図したとおりに動かなかったりすると思いますが、そんな時はどんどん質問してください。何度も見直したり修正したりしながら、アプリが動いた時には感動と達成感を得られると思います。プログラミングの楽しみをぜひ味わってください。\nそして、それらは全てこのコースを学ぶことからスタートできます。\n今すぐ、このコースを受講しましょう。あなたのお気に召さない場合、30日以内であれば100%の返金を保証していますので、安心して受講してください。\nそれではSwiftUIによる新しいプログラミングの世界へようこそ! 楽しみながら挑戦してきましょう。\n必須条件\nMacが必要です（macOS Catalina以降のOSがインストールされたMac）\n※Xcodeなど必要なアプリケーションは無料でダウンロードできます。\n受講対象\nSwift言語の基礎がわかる方\n今までのストーリーボードやXibファイルでのアプリ作成に挫折した方\n就職や転職に役立てたい方\n仕事の領域を広げたい方",
      "target_audience": [
        "新技術SwiftUIでの実践的なアプリ開発を学びたい技術者",
        "Swift言語の基本を知っている技術者",
        "開発は初めてだがSwiftUIでの開発がどのような感じかをチュートリアルで掴んでみたい方"
      ]
    },
    {
      "title": "Android Mobil Uygulama Kursu: Kotlin & Java",
      "url": "https://www.udemy.com/course/android-o-mobil-uygulama-dersi-kotlin-java/",
      "bio": "Instagram, Fruit Ninja klonları gibi popüler uygulamalar yazarak Android geliştirmeyi öğrenin. Java + Kotlin bir arada!",
      "objectives": [
        "Android uygulamalarını yazabilir hale geleceksiniz",
        "Java'nın tüm temellerine hakim olacaksınız",
        "Kotlin'in tüm temellerine hakim olacaksınız",
        "Uygulamalarınızı Google Play'e yükleyip herkese ulaştıracak kadar uzmanlaşacaksınız",
        "Git & GitHub & Versiyon Kontrolü Sistemlerine hakim olacaksınız",
        "Cursor ile Geliştirme Yapmak İsteyenler"
      ],
      "course_content": {},
      "requirements": [
        "Çalışan bir bilgisayarınızın ve internet bağlantınızın olması yeterli",
        "Herhangi bir yazılım dili bilgisi vb. koşul gerekmemektedir"
      ],
      "description": "Android için Mobil Uygulama yazmayı sıfırdan ileri seviyeye kadar öğrenmek istiyorsanız bu kurs tam size göre!\nAndroid geliştirmeyi son teknoloji ile öğreneceksiniz: Android + Java + Kotlin.\nKurs Udemy'de 400.000+ öğrenciye Mobil Uygulama ve Siber Güvenlik eğitimleri veren ve Boğaziçi Üniversitesi'nde Android Mobil Geliştirme Eğitmeni olan Atıl Samancıoğlu tarafından veriliyor! Siz de Android geliştirme dünyasına adım atmak istiyorsanız aşağıdaki detaylı açıklamayı inceleyip kursa hemen kayıt olabilirsiniz.\nGoogle Android geliştirme için Java haricinde Kotlin'i de destekleyeceğini açıkladı. Daha da ötesi Kotlin'i birinci dil tercihi olarak belirtti. Dört dörtlük bir yazılımcı olmak istiyorsanız iki dili de öğrenmek için doğru yerdesiniz.\nBu kursta Android Mobil Uygulama geliştirme alakalı her seviyeden bilgiler elde edeceksiniz. Eğitimin içindeki bölümlerde değineceğimiz konulardan bazıları şunlar:\nAndroid Studio\nJava Temelleri\nKotlin\nJetpack Compose\nObje Odaklı Programlama\nLayout\nSQLite Veritabanı\nRoom\nHaritalar\nFragment\nFirebase\nRetrofit\nRxJava\nJSON & API\nSosyal Medya Uygulamaları\nlibGdx İle Oyun Yazmak\nCoroutines\nAdMob\nNavigation\nView Binding\nMVVM\nGit & GitHub & Versiyon Kontrol Sistemleri\nXML\nCursor ile Yapay Zeka Destekli geliştirme\nİçerik & Genel Görünüş\nBu kurs Android Mobil Geliştirme öğrenmek isteyenler için mükemmel bir seçim. Öncesinde herhangi bir yazılım deneyiminiz yoksa hiç dert etmeyin. En başından, temellerden öğrenmeye başlayarak ileri seviyeye kadar gideceğiz. Dersleri bitirdiğinizde kendi uygulamanızı Google Play'e yükleyecek konuma çoktan erişmiş olacaksınız.\nİlgili konuları \"Fruit Ninja Klonu\", \"Kenny'i Yakala Oyunu\", \"Instagram Klonu\", \"Seyahat Kitabım\", \"Sanat Kitabım\", \"Yazılımcı Şakaları\" ve \"Survivor Bird\" gibi yenilikçi ve eğlenceli uygulamalar geliştirerek öğreneceğiz. Eğitim pratik odaklı olsa da kesinlikle teorik boyutu aksatılmadan en ince detayları işlemeyi ihmal etmeyeceğiz. Eğitim sonunda uygulamanızı Google Play'e yüklemeyi öğrenirken aynı zamanda AdMob ile reklam alıp gelir kazanma işlemlerini de deneyimleyeceksiniz.\nEğitim içerisinde kullanıcı arayüzü geliştirme tarafında hem XML hem de Jetpack Compose anlatılmaktadır.\nEğitim içerisinde yazılan tüm uygulamaların kaynak kodları GitHub'da paylaşılacaktır. Bu şekilde kendi uygulamalarınızı geliştirirken ilgili kaynak kodlarını referans alabilir, istediğiniz şekilde kullanabilirsiniz!\nÖğrenci Yorumlarından Bazıları\n\"Anlatmıyor.. Öğretiyor.. Benim gibi nasılından çok nedeni ile ilgilenenler için çok yararlı. Başarılarınızın devamını dilerim.\" Burak\n\"10 yıldız olsa dahi veririm. Gerçekten alacak arkadaşlara gözü kapalı almasını tavsiye ediyorum. Piyasadaki en iyi en önde olacak eğitim seti İngilizce terimlerin Türkçesini bile anlatan bir eğitim seti. Bu sette emeği olan herkese teşekkür ederim.\" Onur\n\"Udemy'deki en iyi Türkçe kaynak... Net rakibi yok, başarılar dilerim hocam, tebrikler...\" - Mehmet\n\"A'dan Z'ye öğrenmek için doğru yer...\" Hüseyin\n\"Atıl Hoca'nın gerek anlatımı gerekse dersi planlaması kusursuz denecek kadar iyi. Gerçekten bir şey bilmeseniz dahi pc kullanmayı bilmeniz yeterli bu eğitim seti için. Tabii ne kadar alt yapı o kadar hızlı eğitim. Bir de kursta eğitiminize devam ederken pc başında olup yapılanları anında sizin de yapmanız ve yazmanız çok çok çok önemli. Ve dikkatli dinleyin ve izleyin. Söylediği tek bir kelimeyi duymamanız yada görmemeniz sizin uygulamanızın çalışmamasını sağlayabilir. Hello World! :D \" - Muhammet\n\"Eğitim içerisinde diğer eğitimlerde olduğu gibi üstü kapalı anlatılmak yerine iş hayatında, tabii ki de sektörde popüler kütüphanelerin nasıl kullanabileceğini, uygulamalarda nasıl hafızadan yer kazanabileceğimizi, kullanıcı deneyimini nasıl geliştirebileceğimizi vb. bir çok konu harika bir şekilde anlatılmakta. En önemlisi güncelliğini günden güne arttırmakta. Atıl Bey hem yardımsever hem de paylaşımcı. İngilizce aksanı sayesinde kelimelerin doğru telafuzunu da rahat bir şekilde hazmettiriyor. İlerleyen serilerde görüşmek üzere şimdilik bu yorumumla sonlandırıyorum.\" Arda\n\"Kursu satın alır almaz 4 saate yakın video izleyerek Layout'lara kadar geldim. Normalde buraya kadar olan kısımların eğitimlerini youtube'da Türkçe ve İngilizce bir şekilde defalarca izlemiştim ama video atlamadan buradan tekrar izleyerek daha detaylı ve mantığını oturtarak çok iyi bir şekilde öğrendim. Java temellerine sahip olduğumu sanırdım ama burada sırf temel olsun diye anlatılan üstünkörü Java Temelleri dersleri bile çoğu detaylı Java eğitimlerinden daha kaliteli. Sadece eğitimler çok yavaş geldiği için hızı 1.5 katına çıkardım ve tam istediğim ders hızına ulaştım. Henüz kursu bitirmedim. Java Temellerini bitirdim ancak yorum yazmak için bekleyemedim. Udemy'de Android için birkaç kurs arasında kalmıştım ancak bu kurs daha dikkatimi çekti ve beklentilerimi fazlasıyla karşıladı. Diğer kurslarla bu kursun arasında kaldıysanız bu kursu gönül rahatlığı ile seçebilirsiniz. Eğitmene çok teşekkürler!\" Muhammet\n\"Çok kaliteli bir eğitim serisi, bir çok kurs izledim, en akıcısı buydu\" Burhan\n\"Gerek anlatış tarzı, gerekse konuya hakimliği gerçekten insana ben bu işi yaparım dedirtiyor. Ayrıca sürekli acaba şu ne diyorum şimdilik görmeyeceğiz ilerde göstereceğim tarzında hemen cevabımı alıyorum. Sanki o an beni duyuyormuş gibi hissettiğim çok zaman oldu. Elinize emeğinize sağlık.\" Erdem\n\"Mobile yeni başladım ve bu kadar hızlı olacağını düşünmüyordum. Ses tonu ve anlatımın ne kadar önemli olduğunu bu set ile anladım. Yakın süreçte mobil geliştiriciyim diyebileceğiniz bir set bu. Teşekkürler devamını bekliyoruz.\" Tayfun\n\"Tebrik ederim, gerçekten kaliteli ve sade bir anlatım ben Android Uygulama geliştirme hakkında bilgili olsam da dersleri bitirmediğim halde bilmediğim bir çok şeyi daha öğrenmiş oldum. Öğrenmeye devam ediyorum teşekkür ederim.\" - Onat\n\"Hem kişisel ilgi olarak hem okula yardımcı olması açısından android dersini almak istedim. Derslerin neredeyse yarısına geldim ve içimde gram pişmanlık yok. O kadar güzel, akıcı ve anlaşılır biçimde anlatıyorsunuz ki sizi izleyip birazcık pratik yaptıktan sonra konu tamamiyle aklımda kalıyor. Başarılarınız devamını dilerim çok iyisiniz :) \" - Cenk\n\"Yaklaşık altı ay boyunca android uygulama dersleri takip ettim youtube vb. yerlerden hiç bir şey yapamadım ancak ilk günde bu eğitimin meyvesini aldığımı düşünüyorum.\" - Bünyamin\n\"Udemy Android kursları içindeki en iyilerden diyebilirim. Hatta Rob Percival'ın yapığı ve best seller olan The Complete Android Developer'dan bile bence daha iyi. Diğer kursu da takip ediyorum ama Atıl Samancıoğlu'nun yaptığı number one :)\" - Ruhi\n\"Atıl Hoca çok kaliteli donanımlı ve bildiklerini iyi aktarabiliyor. Tam olarak istediğim anlatım tarzı. Umarım daha çok dersi olur ve kendisinden yeni bilgiler öğrenebiliriz.\" - Çiğdem",
      "target_audience": [
        "Android'de uygulama geliştirmek isteyenler",
        "Java öğrenmek isteyenler",
        "Sosyal medya uygulamalarında uzmanlaşmak isteyenler",
        "Programlama dillerine hakim olmak isteyenler",
        "Kotlin öğrenmek isteyenler",
        "Android için oyun geliştirmeyi öğrenmek isteyenler"
      ]
    },
    {
      "title": "Kotlin: Crea tu Tienda Virtual con Android Studio desde Cero",
      "url": "https://www.udemy.com/course/tienda-virtual-kotlin-firebase-node-android-studio/",
      "bio": "Kotlin | Firebase | Node.js | Google Maps | Mercado Pago | Paginación | Carrito de compras | Órdenes de compra",
      "objectives": [
        "Crear una tienda virtual desde cero",
        "Implementación de Firebase",
        "Implementar compras con Mercado Pago",
        "Crear servidor en Node JS",
        "Sistema de reseñas de productos",
        "Implementación de Google Maps",
        "Carrito de compras",
        "Crear órdenes de compra",
        "Peticiones HTTP",
        "Wishlist o lista de deseos",
        "Paginación de productos",
        "CRUD: Crear, leer, actualizar y eliminar productos en tiempo real",
        "Uso de Retrofit",
        "Ver nuestra ubicación en tiempo real",
        "Uso de GPS",
        "Subir una imagen o imágenes de productos",
        "Inicio de sesión (Correo electrónico - Google - Número telefónico)",
        "Roles de usuario",
        "Registro de usuarios [ Vendedores - Clientes ]",
        "Perfil de usuario [ Vendedores - Clientes ]",
        "Seguimiento de pedidos",
        "Acceder a la cámara del dispositivo",
        "Seleccionar imágenes de la galería",
        "Llamadas telefónicas",
        "Mensajes de texto",
        "Recuperación de contraseña",
        "Aplicación Android que trabaje con internet",
        "Cambiar contraseña",
        "Animaciones",
        "Permisos de usuario"
      ],
      "course_content": {
        "Demostración del proyecto": [
          "Demostración del proyecto"
        ],
        "Descargar e instalar Android Studio": [
          "Descargar e instalar Android Studio"
        ],
        "Creación de proyecto": [
          "Creación de proyecto",
          "Utilizar dispositivo físico para realizar pruebas del proyecto",
          "Cambiar icono",
          "Creación de SplashScreen"
        ],
        "Integrar Firebase": [
          "Creación y Configuración del proyecto en Firebase"
        ],
        "Creación de Navigation Drawer y Bottom Navigation Bar [Vendedor]": [
          "Creación de Navigation Drawer y Bottom Navigation Bar [Parte 01]",
          "Diseño de encabezado",
          "Creación de Navigation Drawer y Bottom Navigation Bar [Parte 02]",
          "Creación de Navigation Drawer y Bottom Navigation Bar [Parte 03]"
        ],
        "Registro de Vendedores UI": [
          "Registro de usuario tipo vendedor UI"
        ],
        "Comprobar sesión": [
          "Comprobar sesión de usuario tipo vendedor"
        ],
        "Registro de vendedores en Base de datos": [
          "Registro de usuario tipo vendedor"
        ],
        "Cerrar sesión [Vendedores]": [
          "Cerrar sesión"
        ],
        "Inicio de sesión de Vendedores": [
          "Inicio de sesión de usuario tipo vendedor UI",
          "Inicio de sesión de usuario tipo vendedor"
        ]
      },
      "requirements": [
        "Conocimiento básico de Android y Kotlin",
        "Conocimientos básicos en programación orientada a objetos",
        "Un ordenador o laptop con acceso a Internet",
        "Todos los materiales están incluidos en el curso"
      ],
      "description": "Sean bienvenidos(as) a este curso en el cuál aprenderemos a crear una tienda virtual totalmente desde cero con el lenguaje de programación Kotlin, servidor en la nube de Firebase y adicionalmente crearemos un servidor en Node Js para algunas funcionalidades específicas, utilizaremos el método de pago Mercado Pago para realizar las compras.\nEn este proyecto existirán dos tipos de usuario Vendedores y Cliente. Los vendedores tendrán la capacidad de crear categorías, productos , añadir imágenes , ofertas. Por otro lado los clientes tendrán a disposición todos los productos, para poder visualizar su información , añadirlos a favoritos , como también añadirlos a un carro de compras , este proyecto es 100% práctico , desde luego iré explicando cada línea de código de manera detalla como es de costumbre con mis cursos. A continuación te mencionaré algunas funcionalidades:\n- Registro y Login de usuarios\n- Acceder con número telefónico\n- Implementación de Google Maps\n- Crear categorías\n- Crear promociones\n- Añadir productos al carrito de compras\n- Realizar compras con Mercado Pago\n- Sistema de calificaciones\n- Crear órdenes de compra\n- Aprenderemos a como crear un servidor en Node JS\n- Peticiones HTTP\n- Paginación de productos\n- Accederemos a la galería y cámara\n- Y mucho más!\n\n\nEste curso fue realizado con mucho esfuerzo para una buena comprensión y con el fin de ayudarte en tu vida profesional.\nSin más que decir nos vemos en clase!",
      "target_audience": [
        "Para estudiantes de ingeniería de sistemas, Ingeniería de software o afines.",
        "Profesionales de Ingeniería de sistemas, Ingeniería de software o afines.",
        "Emprendedores que quieran crear su propia aplicación móvil"
      ]
    },
    {
      "title": "Kotlin: Crea una App Marketplace estilo Facebook con Android",
      "url": "https://www.udemy.com/course/crea-una-aplicacion-para-la-venta-de-productos-con-kotlin/",
      "bio": "Aprende a integrar Firebase, Mapas, Rutas, Anuncios, Chat en tiempo real, Notificaciones push y Autenticación segura.",
      "objectives": [
        "Creación de una aplicación Android desde cero",
        "Integración de Firebase [Autenticación - Base de datos - Almacenamiento]",
        "SDK de mapas",
        "Uso de GPS para la ubicación del usuario",
        "Trazar rutas",
        "Chat en tiempo real",
        "Notificaciones push",
        "Migración a la API de Firebase Cloud Messaging (V1)",
        "Crear y configurar cuenta en Google Cloud",
        "Marcadores",
        "Crear anuncios",
        "Verificar una cuenta",
        "Acceder a la cámara",
        "Acceder a la galería del dispositivo",
        "Cambiar la contraseña de usuario",
        "Establecer categorías",
        "Uso de animaciones",
        "Realizar llamadas telefónicas",
        "Enviar mensajes de texto",
        "Permisos de usuario",
        "Fragmentos",
        "Uso de iconos",
        "Actividades",
        "Cuadros de diálogo personalizados",
        "Usar nuestra aplicación con internet",
        "Pasar datos entre actividades",
        "Uso de recursos personalizados",
        "Implementar librería de imágenes circulares"
      ],
      "course_content": {
        "Demostración del proyecto": [
          "Demostración del proyecto"
        ],
        "Primeras configuraciones": [
          "Descargar e instalar Android Studio",
          "Crear proyecto",
          "Crear y configurar emulador",
          "Cambiar icono"
        ],
        "Firebase": [
          "Conectar y configurar firebase a nuestro proyecto",
          "Conectar y configurar Firebase | Android Studio Iguana o superior"
        ],
        "BottomNavigationView": [
          "Habilitar viewBinding",
          "Crear BottomNavigationView [Parte 01]",
          "Crear BottomNavigationView [Parte 02]"
        ],
        "Opciones de inicio de sesión [UI]": [
          "Opciones de inicio de sesión [UI]"
        ],
        "Login y registro de usuarios [Email]": [
          "Configurar consola de Firebase",
          "Login de usuario con email [UI]",
          "Registro de usuario con email [UI]",
          "Registrar usuario",
          "Instalar FirebaseAuth y FirebaseDatabase | Android Studio Iguana o superior",
          "Cerrar sesión",
          "Login de usuario con email"
        ],
        "Login y registro de usuarios [Google]": [
          "Login y registro de usuarios [Google]",
          "Instalar Login con Google | Android Studio Iguana o superior",
          "Solución default_web_client_id"
        ],
        "Perfil del usuario": [
          "Perfil de usuario [UI]",
          "Leer datos del usuario",
          "Instalar dependencia de Glide | Android Studio Iguana o superior"
        ],
        "Perfil del usuario - Actualizar información en tiempo real": [
          "Actualizar información [UI]",
          "Instalar dependencia CountryCodePicker | Android Studio Iguana o superior",
          "Leer información en tiempo real",
          "Crear PopupMenu",
          "Tomar una imagen de cámara o seleccionar imagen de galería",
          "Actualizar imagen de usuario",
          "Instalar dependencia Firebase Storage | Android Studio Iguana o superior",
          "Actualizar información"
        ],
        "Creación de anuncio": [
          "Crear anuncio [UI]",
          "Crear anuncio - [Parte 01]",
          "Crear anuncio - [Parte 02]",
          "Crear anuncio - [Parte 03]"
        ]
      },
      "requirements": [
        "Un ordenador con acceso a Internet.",
        "Conocimiento básico de Android y Kotlin",
        "Los materiales de los proyectos están incluidos"
      ],
      "description": "En este curso aprenderemos a diseñar y desarrollar una aplicación móvil Android con el lenguaje de programación Kotlin totalmente desde cero y de una manera muy profesional, tendrás a disposición todo el material utilizado, el proyecto consiste en crear una aplicación para la venta de productos, los cuáles clasificarlos en categorías, los usuarios podrán registrarse con un correo electrónico y contraseña ó podrán ingresar directamente con el inicio de sesión que nos brinda el proveedor de Google, usaremos Firebase, en donde trabajaremos con sus principales herramientas las cuales son : Autenticación de usuarios, base de datos, almacenamiento multimedia , notificaciones. Implementaremos mapas con Google Maps para tener un proyecto más robusto y profesional\nLas funcionalidades principales del proyecto son la creación de anuncios en donde mostraremos la información del producto que queremos vender, usaremos mapas, tomaremos fotografías a los productos o seleccionar imágenes desde nuestra galería y por su puesto implementaremos los permisos de usuarios en tiempo de ejecución, podremos buscar los anuncios dependiendo nuestra ubicación actual, veremos a detalle la información del producto como también la información del vendedor, al cuál podremos llamar, enviar mensaje de texto, ubicar su posición en el mapa, o hablarle directamente al chat y saber más del producto que nos interesa\nEn este curso aprenderás temas básicos como avanzados, empezaremos creando el proyecto desde cero hasta lo más complejo como abrir el mapa y obtener una ubicación, subir imágenes al servidor, leer información en tiempo real , creación de un chat con notificaciones entre muchas funcionalidades más\nConceptos de los temas abarcados\nAndroid Studio.- Es el IDE oficial de Android que se creó exclusivamente a fin de acelerar el desarrollo y ayudarte a compilar apps de la más alta calidad para todos los dispositivos Android\nKotlin.- Es un lenguaje de programación de código abierto creado por JetBrains que se ha popularizado gracias a que se puede utilizar para programar aplicaciones Android\nFirebase.- Es una plataforma en la nube para el desarrollo de aplicaciones web y móvil. Está disponible para distintas plataformas (iOS, Android y web), con lo que es más rápido trabajar en el desarrollo\nGoogle Maps Platform.- Es un conjunto de API y SDK que los desarrolladores pueden usar a fin de incorporar Google Maps en apps para dispositivos móviles y páginas web o recuperar datos de Google Maps\nNos vemos en clase",
      "target_audience": [
        "Para estudiantes de ingeniería de sistemas, Ingeniería de software o afines.",
        "Profesionales de Ingeniería de sistemas, Ingeniería de software o afines.",
        "Programadores interesados en el desarrollo de aplicaciones móviles."
      ]
    },
    {
      "title": "Buying Frames UI from Scratch in Flutter",
      "url": "https://www.udemy.com/course/buying-frames-ui-from-scratch-in-flutter/",
      "bio": "Build an awesome Buying Frames ui all from scratch with flutter",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "UI Overview"
        ],
        "UI Walkthrough": [
          "Working on the Main Screen",
          "Working on the Catalog Screen",
          "Working on the makeItem Widget",
          "Working on the Product Detail Screen"
        ],
        "Final Output": [
          "Final Output"
        ]
      },
      "requirements": [
        "Basic object oriented programming knowledge",
        "Basic flutter knowledge"
      ],
      "description": "Welcome to the Buying Frames UI from Scratch in Flutter, your ultimate guide for developing a UI project with flutter.\nGoogle’s interface (UI) design tool, Flutter, has brought with it a raft of new perspectives with regards to application development. The Flutter toolkit has opened a gateway to allow for a multitude of UI/UX and, by using its own source code, evading platform limitations. All good so far!\nThroughout this course, you will be learning various essential things that are mostly used by a flutter developer when he/she is working at some firm.\nThis course will help you learn the different components which are involved in making a UI and we will be working on Buying Frames UI with Flutter. In this app, I have used the basic flutter architecture to work on the UI and implement various different things in it. If you are unaware of the advanced file architecture in flutter then you can check my course Flutter 101, where I have explained various available flutter architectures.\nIn this course, you will learn everything in detail. After completing this course you will be able to work on UI's for various different apps and can develop them all by yourself from scratch.\n\n\nThis UI app/project will also help you enhance your CV along with flutter development skills.\n\n\nHappy Learning!!",
      "target_audience": [
        "Begineers",
        "Flutter developers",
        "Intermediate",
        "flutter ui developers",
        "flutter begineer developer",
        "intermediate flutter developer"
      ]
    },
    {
      "title": "【注意：2024年5月マイクロソフトのサポート終了済】Xamarin.Forms",
      "url": "https://www.udemy.com/course/xamarin-1/",
      "bio": "C#のXamarin.Formsを使ってAndroidで動作するスマホアプリを作る方法。C#のXamarin.Formsを使ってAndroid,UWPが同時に実行できるスマホアプリを作る方法を解説しています。",
      "objectives": [
        "C#でXamarinFormsをする方法",
        "C#でAndroid開発をする方法",
        "C#でUWPを開発する方法",
        "C#でスマホアプリ開発をするためのプロジェクトの作成方法",
        "C#でAndrod，iOS，UWPを同時に作成する方法"
      ],
      "course_content": {
        "C#でXamarin.Formsをする方法": [
          "はじめに",
          "#00B_Xamarinサポート対象外による対応",
          "#01 プロジェクトの作成",
          "#02 プロジェクトの実行（Android実機編）",
          "#03 エミュレーターでの接続",
          "#03B エミュレーターでの接続（VS2022）",
          "#04 UWPの実行",
          "#05 マルチスタートアッププロジェクトの設定",
          "#06 StackLayout",
          "#07 StackLayout②",
          "#08 文字色＆背景色とFontsize",
          "#09 Grid",
          "#10 画面遷移",
          "#11 TabbedPage",
          "#12 TabbedPageの中身",
          "#12B_バージョンアップに伴うIconの指定方法の変更",
          "#13 MasterDetailPage",
          "#13B_バージョンアップに伴いMasterDetailPageをFlyoutPageに変更する",
          "#13C_バージョンアップに伴いMasterDetailPageをFlyoutPageに変更する2",
          "#13D_バージョンアップに伴いMasterDetailPageをFlyoutPageに変更する3",
          "#14 ListView",
          "#15 CarouselPage",
          "#16 DisplayAlert（メッセージの表示）",
          "#17 DisplayActionSheet",
          "#18 Deviceごとの切り替え",
          "#19 LoadとCloseに代わるもの",
          "#20 戻るボタンを非表示にする",
          "#21 ViewCellの共通化",
          "#22 Switch",
          "#23 コントロールのデータバインド",
          "#24 Slider",
          "#25 Stepper",
          "#26 Entry",
          "#27 Editor",
          "#28 Picker",
          "#29　Pickerのデータバインディング",
          "#30 DatePickerとTimePicker",
          "#31 SearchBar",
          "#32 ToolbarItem",
          "#33 TableView",
          "#34 ActivityIndicator",
          "#35 ListViewを下に引っ張て更新",
          "補講01_Gridの位置を範囲外で指定した場合",
          "補講02_PopAsyncで画面遷移するときの戻り値を受け取る方法",
          "13のQA",
          "14のQA",
          "QA30（音声なし）",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "C#の基礎文法がわかる（if文の書き方程度がわかればOKです）",
        "Windows10環境",
        "VisualStudio2017（無料でダウンロードできます）"
      ],
      "description": "この講座は普段C#を使っていて，スマホアプリの開発をしたいと思っている方向けの講座になります。\nC#を仕事で使ってなくても勉強中やかじった程度の方でもOKです。\n\n\nXamarin.FormsとはC#でスマホアプリを開発できる技術なのですが，\n通常スマホアプリ開発を行おうとすると，Androidはjavaを覚えないといけませんし，\niOS（iPhoneやiPadなど）の開発ならObjective-Cを覚える必要があります。\nWindows系のタブレットで動作させるにはC#かVBが必要でした。\n\n\nプログラミング言語は１つの言語を仕事で通用するプロ級レベルになるには\n5年くらいの歳月が必要だと思います。文法を覚える程度であれば数か月で可能ですが\n製品として開発して販売するには，素人レベルの技術ではすぐに問題が起きます。\nだから技術者はある程度言語に特化していくことになります。\nそれなのに，デバイスごと（AndroidやiOS）に開発言語が異なっては\n簡単に開発することができません。しかも，同じアプリでも複数の言語でコーディングされると\n改造するたびに大変な労力になります。\n\n\nしかし，今回紹介するXamarin.Formsを使えばC#の技術だけで開発ができます。\njavaのObjective-Cもいりません。コードもほとんど共通化されます。（一部デバイスがらみの違いはありますが）\nだからC#になれている人は，Xamarin.Formsを使うことで，AndroidもiOSもWindowsも開発することが可能になりました。\n\n\n今回はVisualStudio2017のC#を使って開発します。\nAndroidは実機をUSB接続するか，仮想のエミュレーターでのデバッグをします。\nWindows系はUWPを使います。UWPはWindows10が動作する環境ならどこでも動作するアプリケーションです。\nWindows10が動作しない方は動作しないのでご了承ください。\niOSはMacがないとコンパイルができないという制限があるので\n今回のサンプル動作の対象からは外しています。ご了承ください。\nただ，コードは共通なので，Macがある人は動作するコードにはなっています。\n\n\nサンプルコードではプロジェクトの作成から，ページの遷移，各種ページの特徴，\nコントロールの使い方を解説し，サンプルソフトを動作させれると，\n各コントロール動作がすぐにわかるような備忘録を兼ねたソフトになっています。\n\n\n今回勉強しても結構忘れてしまうと思うので，その際にすぐに思い出せるソフトになっています。\nボーナスレクチャーからソースコードもダウンロードできるようにしておくので是非ご覧ください。\n\n\n【内容】\n#01 プロジェクトの作成\n#02 プロジェクトの実行（Android実機編）\n#03 エミュレーターでの接続\n#04 UWPの実行\n#05 マルチスタートアッププロジェクトの設定\n#06 StackLayout\n#07 StackLayout②\n#08 文字色＆背景色とFontsize\n#09 Grid\n#10 画面遷移\n#11 TabbedPage\n#12 TabbedPageの中身\n#13 MasterDetailPage\n#14 ListView\n#15 CarouselPage\n#16 DisplayAlert（メッセージの表示）\n#17 DisplayActionSheet\n#18 Deviceごとの切り替え\n#19 LoadとCloseに代わるもの\n#20 戻るボタンを非表示にする\n#21 ViewCellの共通化\n#22 Switch\n#23 コントロールのデータバインド\n#24 Slider\n#25 Stepper\n#26 Entry\n#27 Editor\n#28 Picker\n#29 Pickerのデータバインディング\n#30 DatePickerとTimePicker\n#31 SearchBar\n#32 ToolbarItem\n#33 TableView\n#34 ActivityIndicator\n#35 ListViewを下に引っ張て更新\n\n\nそれでは一緒にスマホ開発を始めましょう！",
      "target_audience": [
        "C#でプログラミングをしたい人",
        "スマホ開発をしたい人",
        "Androdの開発をしたい人",
        "Androd，iOS，Windowsを同時に開発する方法を学びたい人"
      ]
    },
    {
      "title": "iOS & Swift - Complete App Development - Storyboard (Arabic)",
      "url": "https://www.udemy.com/course/ios-14-app-development-bootcamp/",
      "bio": "دورة شاملة ومتخصصة في برمجة تطوير تطبيقات الايفون والايباد iOS Development using Swift 5 and Xcode 12 / 13 - Arabic",
      "objectives": [
        "القدرة على تطوير اي تطبيق ايفون او ايباد",
        "تطوير محفظة من التطبيقات العملية التي تؤهلك لتعمل كمبرمج",
        "تعلم التعامل مع الأطر والانظمة الجديدة من أبل",
        "تطوير تطبيقات مختصة بالذكاء الاصطناعي وتعلم الآلة",
        "انشاء تطبيقات مختصة بالواقع المعزز",
        "استخدام الخرائط والمواقع والاحداثيات والاتجاهات",
        "تطوير تطبيقات تتعامل مع سيرفرات جوجل وتخزين البيانات في الكلاود",
        "تطوير تطبيقات تقوم بالاتصال مع مزودي الخدمات في الانترنت مثل الاخبار ومعرفة الطقس",
        "تطوير تطبيقات مصغرة من بعض التطبيقات المشهورة مثل واتساب",
        "MVC تعلم انماط التصميم الحديثة مثل التفويض و",
        "تصميم التطبيقات وسير عملها باستخدام تطبيقات مختصة بالتصميم",
        "استخدام مكتبات البرامج الخارجية في تطبيقاتك والتعديل عليها",
        "كيفية انشاء بزنس تطبيقات خاص بك",
        "iOS14",
        "Swift5",
        "Xcode12",
        "سويفت 5"
      ],
      "course_content": {
        "مقدمة عن الدورة": [
          "مقدمة الدورة",
          "منهج الدورة"
        ],
        "التحضير للبرمجة وتطوير التطبيقات بلغة سويفت": [
          "ما هو التطبيق وكيف يعمل",
          "الادوات التي نحتاجها في الدورة",
          "Xcode تحميل وتثبيت محرر البرامج",
          "كيف تستفيد من الدورة بشكل فعال"
        ],
        "تصميم واجهة المستخدم باستخدام مصمم الواجهة وتشغيل التطبيق": [
          "ماذا سوف تتعلم",
          "تطبيق ماتركس. انشاء مشروع جديد",
          "تصميم واجهة المستخدم واضافة صور للواجهة",
          "تصميم ايقونة محترفة للتطبيق",
          "تشغيل التطبيق على جهاز المحاكاة",
          "تشغيل التطبيق على جهاز حقيقي",
          "تحدي تطبيق صورتك"
        ],
        "ربط الواجهة مع البرنامج والتفاعل مع المستخدم": [
          "ماذا سوف تتعلم",
          "تطبيق اهلا. شاشة الاطلاق وواجهة المستخدم وحقل النص",
          "IBActions, IBOutlets ربط الواجهة بالبرنامج باستخدام",
          "الاستجابة لتفاعل المستخدم مع التطبيق وعرض رسالة ترحيبية",
          "تحدي تطبيق رسالة ترحيب بالاسم الاول واسم العائلة"
        ],
        "البرمجة المستوى الاساسي ١. الثوابت، المتغيرات، والمصفوفات": [
          "GitHub استنساخ التطبيقات من موقع",
          "تطبيق النرد. استنساخ المشروع الابتدائي",
          "IBActions, IBOutlets ربط الواجهة بالبرنامج باستخدام",
          "تغيير خصائص عناصر الواجهة برمجيا",
          "التعمق بلغة سويفت. الثوابت و المتغيرات",
          "التعمق بلغة سويفت. المصفوفات",
          "التعمق بلغة سويفت. مصفوفات القاموس",
          "استخدام العشوائية. اللمسات الاخيرة في تطبيق النرد",
          "تحدي تطبيق القرعة باستخدام العملة المعدنية"
        ],
        "التنسيق التلقائي / الآلي": [
          "المشكلة التي يراد معالجتها",
          "اساليب التنسيق التلقائي / الآلي",
          "النمط المظلم",
          "عرض النمط المظلم",
          "تحدي التنسيق التلقائي للتطبيقات السابقة"
        ],
        "UIKit عناصر الواجهة": [
          "UIKit مقدمة عن عناصر الواجهة",
          "عناصر الواجهة الاساسية ١",
          "عناصر الواجهة الاساسية ٢",
          "عناصر الواجهة الاساسية ٣",
          "عناصر الواجهة المتقدمة ١",
          "عناصر الواجهة المتقدمة ٢",
          "عناصر الواجهة المتقدمة ٣",
          "Alert التفاعل مع المستخدم باستخدام التنبيه"
        ],
        "البرمجة المستوى الاساسي ٢. التكرار والتحكم بسير البرنامج": [
          "ماذا سوف تتعلم",
          "for loop .التعمق بلغة سويفت",
          "while or repeat loops .التعمق بلغة سويفت",
          "if statement .التعمق بلغة سويفت",
          "switch statement .التعمق بلغة سويفت",
          "continue or break .التعمق بلغة سويفت",
          "تطبيق جدول الضرب. استخدام الملصقات النصية لعرض جدول الضرب",
          "استخدام التكرار في جدول الضرب",
          "تحدي طباعة مضاعفات رقم"
        ],
        "استخدام وظيفة واحدة مع عدة عناصر": [
          "ماذا سوف تتعلم",
          "تطبيق الزايلفون. ربط اكثر من عنصر مع وظيفة واحدة",
          "ملاحظة مهمة",
          "البحث في الانترنت واتسخدام مكتبة الاصوات لعزف نغمات"
        ],
        "البرمجة المستوى المتوسط ١. المتغيرات الاختيارية": [
          "ماذا سوف تتعلم",
          "التعمق بلغة سويفت. المتغيرات الاختيارية",
          "التعمق بلغة سويفت. طرق فك المتغيرات الاختيارية",
          "تطبيق مؤقت البيض. تحضير التطبيق وربط عناصر الواجهة بالبرنامج",
          "Segment Control",
          "Timer المؤقت الزمني",
          "Progress View شريط التقدم",
          "تحدي اضافة صوت عند انتهاء الوقت"
        ]
      },
      "requirements": [
        "لا يوجد اي متطلبات او خبرة سابقة في البرمجة، سوف اقوم بتعليمك كل شيء تحتاجة من الصفر",
        "تحتاج الى جهاز كمبوتر ماك من ابل او جهاز كمبيوتر عليه نظام تشغيل ماك",
        "لست بحاجة الى اي برامج مدفوعة، جميع البرامج المستخدمة مجانية",
        "يفضل ان يكون لديك جهاز ايفون او ايباد",
        "Xcode سوف اقوم بشرح كيفية تحميل وتثبيت الاكس كود"
      ],
      "description": "السلام عليكم ورحمة الله وبركاته\nمرحبا بك في أفضل دورة عربية في تطوير تطبيقات سويفت للايفون والايباد\nاسمي محمد وانا متخصص بعلوم الكمبيوتر بامتياز و حاصل أيضا على درجة الماجستير من الجامعة الالمانية، اعمل منذ أكثر من ٢٠ عاما في مجالات متعددة في تكنولوجيا المعلومات. جزء كبير من عملي هو نشر المعرفة والوعي والتدريب وتقديم الاستشارات في مجالات أنظمة المعلومات وإدارة المشاريع. خطوة بخطوة سوف اكون معك اليوم في هذه الدورة لنتعلم البرمجة بلغة سويفت\n\n\nتم تصميم منهج الدورة بطريقة مختلفة عن الدورات الاخرى، اذ ان هذه الدورة تبدأ بالتطبيقات العملية بشكل مباشر ويتخللها التعمق بلغة سويفت، بحيث يستطيع الطالب مباشرة الربط بين اللغة والاستخدام العملي وبذلك تعزيز عملية الفهم والذاكرة بنفس الوقت. تحتوي الدورة على اكثر من ٢٠ تطبيق عملي في اربعة مستويات تبدأ من الاساسي الى المتوسط و المتقدم ومن ثم الى الاحتراف\n\n\nفي نهاية الدورة ستكون قادرا على بناء وتصميم تطبيقات في مجالات مختلفة مثل تعلم الآلة، والواقع المعزز، واستخدام الكلاود، قراءة الاخبار من الانترنت، استخدام قواعد البيانات، استخدام سيرفرات جوجل، استخدام الخرائط والاحداثيات وغيرها، اذ تحتوي الدورة على العديد من التطبيقات مثل تطبيق مصغر للواتساب، وحفظ الأماكن، قائمة المهام، اختبار المعالم، النرد، ولعبة الإكس أوو، طائر الفينكس و التعرف على الصور وغيرها\n\n\nمحتوى هذه الدورة هو نفسه محتوى الدورات التقليدية، اذ بإمكانك مشاهدة أكثر من ٢٦ ساعة من المحاضرات عالية الدقة في الوقت والمكان الذي يناسبك، وباللغة العربية الفصيحة لتصل الى كل طالب عربي مهتم من جميع الجنسيات\n\n\nفإذا كنت تبحث عن عمل كمبرمج فهذه الدورة ستثري معلوماتك وستزيد من قدراتك العملية وسوف تؤهلك ان شاء الله بكل ثقة للمقابلة في الوظيفة، اما إذا كنت تريد ان تقوم بتطوير تطبيقات ونشرها على متجر التطبيقات، فهذه الدورة تحتوي على الخطوات الأساسية التي عليك معرفتها، وتحتوي ايضا على شرح لكيفية تصميم التطبيقات باستخدام برامج متخصصة بذلك\n\n\nإذا كنت مبتدئا ولا تمتلك الخبرة في البرمجة فهذه الدورة ستنقلك من المراحل الاساسية الى الاحتراف، و ان كنت ذا خبرة سابقة في البرمجة بإمكانك الانتقال مباشرة الى المستوى المتوسط او المتقدم والتعرف على الاطر الجديدة والمواضيع المتقدمة من ابل\n\n\nكما ان سعر هذه الدورة يعتبر رمزيا مقارنة مع الدورات التقليدية - قد يكون اقل مما تدفعه على وجبة فطور او غداء وان لم تعجبك الدورة بعد شراءها، فان يودمي تضمن لك استرجاع ثمن الدورة خلال شهر من شراءها، فماذا تنتظر؟ قم بالتسجيل، وابدأ الدورة الآن",
      "target_audience": [
        "اذا كنت مبتدء فهذه الدورة مناسبة تماما لك لانها لا تتطلب اي خبرة سابقة في البرمجة",
        "اذا كان لديك خبرة برمجة متوسطة فهذه الدورة سوف تعلمك تقنيات جديدة في تطوير تطبيقات الايفون والايباد، فبامكانك الانتقال الى المستوى المتوسط من هذه الدورة",
        "اذا كنت مبرمج مختص بلغات اخرى، فهذه الدورة سوف توفر عليك الوقت للانتقال الى البرمجة بلغة سويفت",
        "اذا كنت مبرمج محترف، فامكانك الانتقال الى المستوى المتقدم والتعرف على المواضيع الجديدة في تطوير التطبيقات مثل الذكاء الاصطناعي والواقع المعزز"
      ]
    },
    {
      "title": "App News - Android + Kotlin + Retrofit + Coroutines + Room",
      "url": "https://www.udemy.com/course/app-news-com-kotlim-e-mvp/",
      "bio": "Desenvolvendo um aplicativo de notícias utilizando Android com Kotlin e arquitetura MVP.",
      "objectives": [
        "Recupere dados de APIs usando a biblioteca Retrofit e exibindo-os em seu aplicativo",
        "Noções básicas de Corroutines do Kotlin",
        "Implementar a arquitetura MVP em seus aplicativos.",
        "Usando a biblioteca Room para salvar, atualizar e excluir dados em um banco de dados local."
      ],
      "course_content": {},
      "requirements": [
        "Conhecer o básico dos componentes do Android.",
        "Programação Orientada a Objetos.",
        "Conhecimentos com Kotlin."
      ],
      "description": "Desenvolvendo um aplicativo de notícias utilizando Android com Kotlin e arquitetura MVP.\n\nOpa dev, beleza?\nEsta afim de dar um UP em seus conhecimentos de desenvolvimento Android com Kotlin de forma correta?\nEntão esse curso é para você!\n\nNesse curso você vai aprender a como desenvolver um aplicativo para listar as principais manchetes do nosso país, pesquisando também as noticias do mundo e salvando-as que mais interessou na lista de favoritos. Tudo isso com vídeo aulas fáceis e direto ao ponto, teremos algumas introduções em determinados assuntos e depois colocamos a mão no código.\nVamos utilizar recursos como:\n- Kotlin\n- Glide\n- Arquitetura MVP\n- Coroutines\n- Retrofit\n- Room\n- E muito mais\n\n\nOBS: Esse curso não é para iniciantes, você que não conhece os conceitos básicos do Android e também sobre a linguagem Kotlin, esse curso ainda não é para você. Mas se já tem um conhecimento mínimo sobre a plataforma, sobre o Kotlin ou alguma outra linguagem semelhante orientada a objetos, você conseguirá realizar o curso sem problemas. E você que já é um desenvolvedor um pouco mais experiente esse curso servirá de ferramenta para os seus projetos pessoais ou até mesmo profissionais, tenho certeza de que com o conteúdo que vamos abordar, poderá te ajudar de alguma forma\n\nVem comigo! =)",
      "target_audience": [
        "Desenvolvedores Android",
        "Pessoas que desejam aperfeiçoar os conhecimentos no Android nativo com Kotlin"
      ]
    },
    {
      "title": "Fazendo aplicativos com NodeMCU(esp8266) e React Native:",
      "url": "https://www.udemy.com/course/fazendo-aplicativos-com-nodemcuesp8266-e-react-native/",
      "bio": "Entendendo mais sobre a Internet das coisas (IoT)",
      "objectives": [
        "Aprender a integrar uma aplicação React Native com o NodeMCU ou Arduino com módulo esp8266 e controlar leds e sensores",
        "Aprender a configurar e compilar código da Arduino IDE para receber requisições http",
        "Arduino"
      ],
      "course_content": {},
      "requirements": [
        "Sim, ter os materiais para o projeto eletrico/eletronico com arduino/esp e/ou NODEmcu"
      ],
      "description": "Faaaala desenvolvedor, quer aprender a integrar um aplicativo utilizando react native com um microcontrolador usando wifi?\nEntão, nesse curso vou ensinar você a controlar leds e a exibir os dados de um sensor de temperatura e umidade tudo pela internet e por um aplicativo que nós mesmos vamos criar.\n\n\nSe você ainda não conhece, o react native é uma biblioteca javascript desenvolvida pelo facebook para desenvolvimento nativo de aplicativos iOS e Android. E é utilizada por grandes players de tecnologia do vale do silício como Uber, Netflix, Airbnb e muitas outras...\n\n\nVenha aprender mais sobre a internet das coisas e comece a criar seus próprios projetos.\n\n\nPara quem é esse curso:\nIniciantes no desenvolvimento mobile com React Native\nIniciantes no desenvolvimento IoT utilizando a IDE do Arduino\nDesenvolvedores que já trabalham com outros sistemas e querem aprender a integrar microcontroladores\nEngenheiros, Tecnólogos, Técnicos em elétrica, eletrônica e/ou automação que querem levar seus projetos ao próximo nível\n**Embora o curso não foque no ensino de lógica nem no ensino da sintaxe da linguagem de programação, aqui temos aulas introdutórias tanto no desenvolvimento React Native quanto na plataforma IDE arduino.\n\n\nEntão... não perca tempo e venha fazer parte da nossa comunidade React Native conectando IoT\n\n\nEsse curso é para todos que querem aprender ou aprofundar seus conceitos em IoT!!!",
      "target_audience": [
        "Desenvolvedores mobile iniciantes",
        "Desenvolvedores de sistemas embarcados",
        "Pessoas que estão iniciando os estudos em internet das coisas",
        "Curiosos com arduino e aplicativos para celular",
        "Iniciantes na programação e lógica de programação"
      ]
    },
    {
      "title": "Créer une application Android facilement sans programmation",
      "url": "https://www.udemy.com/course/creer-une-application-android-facilement-sans-programmation/",
      "bio": "GUIDE COMPLET APP INVENTOR 2 | Développer une application Android ou un jeu sans aucune connaissance et gratuitement",
      "objectives": [
        "Créer des applications android",
        "Gérer la mise en page et le design d'un application",
        "Gérer les événements d'une application (Sélection, Drag & Drop, clique,etc..)",
        "Gérer les données d'une application (BDD Firebase, TinyDB, Google Table Fusion, TinyWebDB)",
        "Utiliser les composants (Notification, zone de saisie, image, vidéo, etc...)",
        "Gérer les capteurs (Accéléromètre, Podomètre, Gyroscope, Orientation etc...)",
        "Partager des données sur les réseaux sociaux (Facebook, etc....)",
        "Interagir avec le smartphone (Annuaire, Composer, Lire et envoyer des Sms,etc...)",
        "Utiliser des api avec l'application",
        "Ajouter et gérer des extensions",
        "Utiliser des \"Sprite\" et les déplacer sur l'écran"
      ],
      "course_content": {
        "Decouverte d' App Inventor": [
          "Introduction",
          "Présentation de l'interface Projet.",
          "Découverte du mode \"Designer\"",
          "Paramétrage de l’émulateur (AI Starter)",
          "Tester l' application en temps réel sur Smartphone Android (Ai Companion)",
          "Tester l'application en temps réel sur Smartphone Android USB",
          "Compiler et installer votre application",
          "Sauvegarder importer un projet",
          "Découverte du mode \"Blocs\"",
          "Organisation des blocs",
          "Testez-vous sur cette première section"
        ],
        "Palette \"interface utilisateur\"": [
          "Bouton",
          "Case à cocher",
          "Sélectionneur de date",
          "Image",
          "Sélectionneur de liste",
          "Vue liste",
          "Notificateur",
          "Zone de Texte",
          "Ascenseur",
          "Curseur animé",
          "Sélectionneur de temps",
          "Afficheur web",
          "Testez-vous sur cette seconde section"
        ],
        "Palette \"Disposition\"": [
          "Arrangement horizontale et vertical",
          "Arrangement scroll Horizontale et vertical",
          "Arrangement tableau",
          "TP n°1 Créer une navigateur web"
        ],
        "Palette \"Média\"": [
          "Caméscope",
          "Caméra",
          "Sélectionneur d'image",
          "Lecteur audio",
          "Son",
          "Enregistreur de son",
          "Reconnaissance vocale",
          "Text to Speech (Texte a parole)",
          "Lecteur Vidéo",
          "Traduction de texte Multi- langage Yandex",
          "TP2 Réaliser une application de traduction vocale",
          "TP2 Correction"
        ],
        "Blocs Incorporés utilisation avancés": [
          "Les blocs \"variables\"",
          "Les blocs \"listes\"",
          "Les blocs \"procédures\"",
          "Les blocs \"contrôles\"",
          "TP3 Créer une application \"liste des courses\"",
          "TP3 Correction"
        ],
        "Palette \"Dessin et animation\"": [
          "Les Cadres (Canvas)",
          "TP4 Réaliser une application de dessin",
          "TP4 Correction",
          "Balle",
          "Image lutin",
          "TP5 Réaliser un jeu \"Monster Ball\"",
          "TP5 Correction"
        ],
        "Palette \"Sensor\"": [
          "Accéléromètre",
          "Scanneur code barre",
          "Horloge",
          "GryscopeSensor",
          "Capteur de position (GPS)",
          "Capteur d'orientation (Boussole)",
          "Podométre",
          "Capteur de proximité",
          "TP6 Réaliser un Chronométre",
          "TP6 Correction"
        ],
        "Palette \"Social\"": [
          "Sélectionneur d' Email",
          "Sélecteur de Contact et de numéro de téléphone",
          "Appel téléphonique",
          "Partage (Réseau sociaux)",
          "SMS",
          "TP7 réaliser un lecteur vocal de SMS",
          "TP7 Correction"
        ],
        "\"Screen\" l' écran de l'application": [
          "Propriétés \"Screen\"",
          "Blocs \"Screen\"",
          "Multi Screen",
          "TP8 Réaliser un SplashScreen",
          "TP8 Correction"
        ],
        "Palette \"Stockage\"": [
          "Fichier",
          "TinyDB",
          "TinyWebDB",
          "Google Fusion Table (Connexion)",
          "Fusion Table Contrôle",
          "TP9 Réaliser une application de prise de note persistante",
          "TP9 Correction"
        ]
      },
      "requirements": [
        "Etre capable d'utiliser un ordinateur"
      ],
      "description": "App Inventor 2 est une application Web (en ligne sans installation logiciel) totalement gratuite développée initialement par Google. Elle est actuellement entretenue par le Massachusetts Institute of Technology (MIT) .\nApp Inventor 2 simplifie le développement des applications sous Android et le rend accessible même pour les novices et ceux qui ne sont pas familiers avec les langages de programmation. Elle est basée sur une interface graphique similaire à Scratch (Blocs style pièce de puzzle a connecter entre eux). Grâce à son interface entièrement graphique et à l'absence totale de ligne de code, App Inventor 2 est particulièrement adaptée aux personnes n'ayant aucune connaissance en programmation.\nMême si l'interface est son utilisation est très simple, il n'en reste pas moins que vous pouvez créer des applications très puissante en quelques minutes.\nVous pensez que créer une application qui utilise la reconnaissance vocale, la localisation GPS, l' appareil photo, la camera de votre périphérique mobile n'est pas a votre portée ? je peux vous garantir qu'avec app inventor 2 non seulement vous y arriverez mais en plus en quelques minutes !\nCe cours couvre l'intégralité des fonctionnalités de l'application sauf la partie \"Lego Minstorm\".\nVous apprendrez a gérer les données locale ou sur le cloud (TinyDB, TinyWebDB, Firebase, Google Fusion Table), sélectionner et lire des fichiers média (image, vidéo,mp3), utiliser les capteurs de votre appareil mobile (GPS, Gyroscope, Accéléromètre, Podomètre, Scan de code barre) et bien d'autres choses.\nVotre apprentissage se fera pas à pas et aucun prérequis n'est nécessaire !\nDe plus nous réaliserons des Travaux Pratique (TP) à la fin de chaque section. Nous corrigerons ces \"TP\" ensemble en vidéo et la correction vous sera fournit dans un package importable dans App Inventor.\nApplication que vous réaliserez dans ce cours (TP) Preview Disponible :\nNavigateur Web\nTraducteur Vocale (Anglais Espagnol)\nApp Liste des courses\nJeux Monster Ball\nChronométre\nLecteur vocal de SMS\nApplication de prise de note persistante\nApplication vocale qui affiche une image satellite\nMais a la fin de ce cours vous serez capable de réaliser beaucoup d'autre type d'application ou de jeux :\nLecteur vidéo\nLecteur de musique\nDes jeux (app de type quizz, ou graphique)\nApplication de dessin\nGestion des Utilisateurs (Login, password,etc..)\nBoussole\nCalculatrice\nEtc.. (Consulter le plan de cours pour le détails des sujets)\nAlors si vous souhaitez créer vos propre application pour android il ne vous reste plus qu'a me rejoindre dans ce cours.",
      "target_audience": [
        "Débutant n'ayant aucune connaissance en développement Android"
      ]
    },
    {
      "title": null,
      "url": "https://www.udemy.com/course/creacion-de-aplicaciones-profesionales-en-android-studio/",
      "bio": null,
      "objectives": [],
      "course_content": {},
      "requirements": [],
      "description": null,
      "target_audience": []
    },
    {
      "title": "Creación de Chat con Kotlin y Firebase en Android Studio",
      "url": "https://www.udemy.com/course/creacion-de-chat-profesional-en-android-studio-y-firebase-con-kotlin/",
      "bio": "Kotlin , Firebase , Autenticación , Notificaciones , Perfiles , Envio de imágenes , Uso de cámara y galería , Anuncios",
      "objectives": [
        "Creación de una aplicación Android desde cero",
        "Verificación de usuario por correo electrónico",
        "Integración de Firebase [Autenticación - Bases de datos - Almacenamiento multimedia]",
        "Envio de notificaciones",
        "Integración de anuncios para generar ingresos",
        "Inicio de sesión con Google",
        "Inicio de sesión con correo electrónico",
        "Registro de usuarios en tiempo real",
        "Acceder a la galería del dispositivo",
        "Acceder a la cámara del dispositivo",
        "Permisos de usuario",
        "Listar usuarios",
        "Realizar búsqueda un usuario[s]",
        "Visitar perfil de usuario",
        "Burbujas de mensajes [Diseño]",
        "Realización de llamadas telefónicas",
        "Envío de mensajes SMS",
        "Uso de iconos",
        "Implementación de animaciones",
        "Incluye material"
      ],
      "course_content": {
        "Demostración de la aplicación": [
          "Demostración del proyecto"
        ],
        "Primeras configuraciones": [
          "Descargar e instalar android studio",
          "Crear y configurar emulador",
          "Usar dispositivo físico para ejecutar nuestra aplicación",
          "Material del curso",
          "Crear proyecto en Android Studio",
          "Cambiar icono a aplicación",
          "Diseño pantalla de bienvenida"
        ],
        "Firebase": [
          "Integrar Firebase a proyecto",
          "Configurar consola de firebase"
        ],
        "Registrar usuario en Base de datos": [
          "Diseño de interfaz [Inicio]",
          "Diseño de interfaz [Registro]",
          "Registrar usuario en base de datos"
        ],
        "Comprobar sesión activa": [
          "Comprobar sesión activa"
        ],
        "Cerrar sesión": [
          "Cerrar sesión"
        ],
        "Login de usuario": [
          "Diseño de interfaz [Login]",
          "Login de usuario"
        ],
        "Mejorando interfaz": [
          "Mejorar interfaz [Registro]",
          "Mejorar interfaz [Login]"
        ],
        "Integrar TabLayout y ViewPager": [
          "Integrar TabLayout y ViewPager"
        ],
        "Añadir más información del usuario en BD": [
          "Agregar más información en BD"
        ]
      },
      "requirements": [
        "Un ordenador con acceso a Internet.",
        "Conocimientos básicos en el lenguaje Kotlin",
        "Los materiales de los proyectos están incluidos"
      ],
      "description": "En este curso aprenderemos a desarrollar una aplicación móvil [Android] con el lenguaje de programación [Kotlin] , totalmente desde cero, aprenderemos a como declarar e inicializar una variable, veremos como crear una función, usar adaptadores, aprenderás a crear interfaz de usuario totalmente profesionales para una buena experiencia de usuario.\nEl proyecto que crearemos consiste en un Chat en tiempo real con el lenguaje Kotlin y el servidor en la nube Firebase, el cual nos permitirá realizar diversas funcionalidades, como la autenticación de usuarios con un correo electrónico o una cuenta de Google para un inicio de sesión directo, también nos permitirá crear una base de datos en los cuales almacenaremos la información de los usuarios, conversaciones, entre otros, otra funcionalidad será usar el almacenamiento multimedia en donde guardaremos las imágenes de perfil de los usuarios, como también las imágenes que sean enviadas a través de los chat, implementaremos notificaciones en tiempo real para que las conversación sea agradable. Cabe mencionar que como bonus a nuestro proyecto, haremos la integración de anuncios con Google Admob para que nuestro proyecto quede totalmente completo.\nLo que se pretende con este curso es crear las bases necesarias que que tú mismo[a] puedas crear tus propios proyectos y puedas incorporarlas en tus proyectos personales, como también si deseas venderlas de manera independiente o en todo caso implementarlas en la empresas en donde estés laborando.\nRecuerda que al finalizar el curso podrás obtener un certificado, en el cual se indica que has culminado el desarrollo de este proyecto, asimismo puedes añadir éste certificado a tu Curriculum Vitae [CV], esto es un inversión para tu camino profesional, sin más que decir nos vemos en el curso. Muchas gracias.",
      "target_audience": [
        "Para estudiantes de ingeniería de sistemas, Ingeniería de software o afines.",
        "Profesionales de Ingeniería de sistemas, Ingeniería de software o afines.",
        "Programadores interesados en el desarrollo de aplicaciones móviles."
      ]
    },
    {
      "title": "Realidad Aumentada con Unity y Vuforia para principiantes",
      "url": "https://www.udemy.com/course/realidad-aumentada-para-principiantes/",
      "bio": "Aprende las bases para crear una aplicación usando la tecnología de Realidad Aumentada",
      "objectives": [
        "Usar Unity y Vuforia para crear experiencias interactivas de AR",
        "Asignar un Target para una respuesta de AR",
        "Generar un tipo de respuesta específico para un Target",
        "Generar interactividad en una respuesta a un Target",
        "Generar múltiples Target para una misma aplicación",
        "Crear una aplicación de Realidad Aumentada",
        "Construir una aplicación móvil de AR"
      ],
      "course_content": {
        "Unity y Vuforia": [
          "Introducción: Vuforia como componente de AR",
          "Preparación de Proyecto",
          "Integración de Vuforia al Motor",
          "Targets",
          "Reconocimiento y respuesta 3D de un Target",
          "Respuesta 2D de un Target",
          "Respuesta de Audio de un Target",
          "Respuesta de Video de un Target",
          "Respuesta de URL de un Target",
          "Múltiples respuestas",
          "Combinando Interactividad pt. 1",
          "Combinando Interactividad pt. 2",
          "Construir la Aplicación",
          "Comprobando lo aprendido"
        ]
      },
      "requirements": [
        "Uso básico de la interfaz de Unity 3D"
      ],
      "description": "En este curso básico podrás aprender a crear un proyecto en Unity usando los componentes de Vuforia, desde la creación de una licencia en el Portal de Vuforia Developer, pasando por la creación de Targets, hasta la integración de los componentes de Vuforia en Unity, su uso inciial, la carga de la base de datos de Targets hasta la respuesta interactiva a cada target reconocido por la API de Vuforia.\nEste curso abarcará lo mencionado anteriormente, de una forma detallada hasta la construcción final de la aplicación para nuestro smartphone. Antes de empezar el curso es indispensable conocer el manejo básico de Unity para poder seguir el mismo de una manera ágil.",
      "target_audience": [
        "Personas que desean aprender acerca de Realidad Aumentada",
        "Personas que quieren desarrollar apps de AR"
      ]
    },
    {
      "title": "Android ve iOS Mobil Uygulama Geliştirme: Dart & Flutter",
      "url": "https://www.udemy.com/course/leventertunalilar-dart-flutter-ile-android-ve-ios-uygulama-gelistirme/",
      "bio": "Dart dilini öğrenerek Flutter ile hem iOS hem de Android platformlar için profesyonel uygulamalar geliştirebileceksiniz!",
      "objectives": [
        "Hiçbir programlama bilgisine sahip olmasanız dahi bu kursa rahatlıkla başlayabilirsiniz.",
        "Dart dili ile programlamanın ve algoritmanın temellerini en iyi şekilde öğrenmiş olacaksınız.",
        "Nesne Tabanlı Programlamayı öğrenerek bunu hem Flutter hem de diğer programlama dillerinde rahatlıkla kullanabileceksiniz.",
        "Sqflite veritabanını ve mimarisini öğrenerek, veritabanı kullanan kapsamlı uygulamalar tasarlayabileceksiniz.",
        "Animasyon Yapısını öğrenerek animasyonlarla zenginleştirilmiş uygulamalar geliştirebileceksiniz.",
        "BLOC Pattern Mimarisini örnekler eşliğinde kolaylıkla öğrenebileceksiniz."
      ],
      "course_content": {
        "Kursun Genel Tanıtımı - Giriş": [
          "Giriş",
          "Kurstan En İyi Şekilde Nasıl Yararlanılır"
        ],
        "Kurulum Dosyalarının İndirilmesi": [
          "Kurulum Dosyaları"
        ],
        "Kurulumlar - Windows Kullanıcıları İçin": [
          "SDK Kurulumu ve Yapılandırılması",
          "Android Studio Kurulumu",
          "Path Değişkeninin Oluşturulması",
          "Emulatorun Yapılandırılması"
        ],
        "Kurulumlar - macOS Kullanıcıları İçin": [
          "SDK Kurulumu ve Yapılandırılması",
          "Android Studio Kurulumu ve Emülatör Yapılandırması"
        ],
        "Dart Dilinde Değişkenler ve Widget Mimarisine Giriş": [
          "Dart Dilinde Değişkenlerle Çalışma",
          "Flutterda Widget Mimarisine Giriş",
          "Color Style Yapılarıyla Çalışma"
        ],
        "Dart Dilinde Şart Blokları - Koşullu Durumlar": [
          "Dart Dilinde Şart Bloklarıyla Çalışma",
          "Flutterda Widgetlarla Şart Bloklarının Kullanımı"
        ],
        "Dart Dilinde Listeler ve Widgetlarla Kullanımı": [
          "Dart Dilinde Listelerle Çalışma",
          "Flutterda ListView Widget İle Çalışma"
        ],
        "Dart Dilinde Döngüler ve Flutterda Döngü Kullanımı": [
          "Dart Dilinde Döngüler"
        ],
        "Dart Dilinde Fonksiyonlar ve Widgetlarla Entegrasyonu": [
          "Dart Dilinde Fonksiyonlarla Çalışma",
          "Flutterda Fonksiyon Kullanımı"
        ],
        "Dart Dilinde Hata Yakalama": [
          "Try - Catch Bloğunun Kullanımı"
        ]
      },
      "requirements": [
        "Kursiyerlerin temel bilgisayar kullanma bilgisine sahip olmaları yeterlidir.",
        "Öğrencilerin programlama ve algoritma bilgisine sahip olmaları gerekli değildir."
      ],
      "description": "Gereksinimler\nBu kurs için herhangi bir programlama ve algoritma bilgisine sahip olmanıza gerek yoktur.\nİnternete bağlı olan ve ortalama performans gösteren bir bilgisayar yeterlidir.\n\n\nAndroid Studio ile Mobil Uygulama Geliştirmeyi sıfırdan öğrenmek istiyorsanız doğru adrestesiniz.\nBu kurs 2007 yılından günümüze online ve yüz yüze onbinlerce öğrenciye ders vermiş olan Bilgisayar ve Teknoloji Öğretmeni Levent Ertunalılar tarafında verilmektedir.\n\n\nKursun İşleyişi:\nKonu anlatımları esnasında özenle seçilmiş uygulama örnekleriyle konuları rahatlıkla öğrenebileceksiniz.\nÜnite sonlarındaki örnek proje uygulamaları ile öğrenmelerinizi kalıcı hale getireceksiniz.\nVideoların sonlarında kafanıza takılanları, projelerinizde çözemediğiniz sorunları benimle iletişime geçerek ortadan kaldırabileceksiniz.\nKursun zengin konu anlatımı, gerçek hayattan seçilmiş örnekleri ile konuları rahatlıkla anlayabileceksiniz.\n\n\nBu kursta Google Android uygulama geliştirme ile ilgili tüm seviyede bilgilere ulaşabileceksiniz. Kurs boyunca öğrenceğimiz konuların ana başlıkları şu şekilde;\nDart Dilinde Değişkenler\nWidget Mimarisine Giriş\nDart Dilinde Şart Blokları\nKoşullu Durumlar\nDart Dilinde Listelerle Çalışma\nWidgetlarda Liste Kullanımı\nDart Dilinde Döngüler\nDöngülerin Widget ile Kullanımı\nDart Dilinde Fonksiyonlar ve Widget ile Entegrasyonu\nDart Dilinde Hata Yakalama ve Ayıklama\nNesne Tabanlı Programlama (OOP)\nFlutter'da Durum Yönetimi\nFlutter'da Navigasyon Mimarisi\nAsenkron Yapılarla Çalışmak\nCRUD Operasyonlarının Oluşturulması\nBloc Pattern Mimarisi\nFirebase Yapısı\n\n\nKurs Boyunca;\nKurs boyunca her ünite sonunda konuları kapsayıcı ve öğrenmeyi pekiştiren uygulamalar tasarlıyor olacağız. Bunlar öğrenci not sistemi uygulaması, e-ticaret uygulaması, kullanıcı giriş sistemi,  araç alım- satım uygulaması.\n\n\n\n\n*** Bu kurs sürekli kendini yenileyen ve geliştiren bir kurs olacağı için yeni ders konuları ve yeni içerikler eklenmeye devam edecektir.",
      "target_audience": [
        "Programlamaya henüz başlayamamış olan, sıfırdan programlama öğrenmek isteyenler",
        "Programlamaya giriş yapmış ama kendini daha da geliştirmek isteyenler",
        "Başka bir programlama dilini öğrenmiş ve bu birikimini Dart diline ve Flutter'a taşımak isteyenler",
        "Flutter'ı temel seviyede bilen ama bununla yetinmeyip uzman seviyesine ulaşmak isteyenler",
        "Flutter ile IOS ve Android uygulamaları geliştirmek isteyenler"
      ]
    },
    {
      "title": "Java Android: Realizzare Mobile Apps da zero",
      "url": "https://www.udemy.com/course/realizzare-app-cellulari-con-android/",
      "bio": "Le basi di Java, lo sviluppo Android, l'ambiente Android e argomenti avanzati",
      "objectives": [
        "Le basi del linguaggio Java.",
        "L'utilizzo dell'ambiente Android Studio.",
        "La realizzazione di una App Android con tutte le funzionalità di base.",
        "Argomenti avanzati come: il salvataggio dei dati, l'interazione tra app, i permessi di una app, la gestione della rubrica, le App multimediali, le comunicazioni di rete, la geo-localizzazione."
      ],
      "course_content": {
        "Introduzione al Corso Android": [
          "Introduzione",
          "Introduzione video Corso Android"
        ],
        "Il linguaggio Java": [
          "Lezione 2: Il linguaggio Java",
          "Installazione Jdk versione 8",
          "Installazione Eclipse versione Mars"
        ],
        "Sintassi Java": [
          "Sintassi Java",
          "Scope delle Variabili",
          "Operatori",
          "Controllo del Flusso - parte I",
          "Controllo del Flusso - parte II",
          "Sintassi Java"
        ],
        "Programmazione Object Oriented - prima parte": [
          "Classi e Oggetti - prima parte",
          "Classi e Oggetti - seconda parte",
          "Programmazione Object Oriented - prima parte"
        ],
        "Programmazione Object Oriented - seconda parte": [
          "Classi e Oggetti - terza parte",
          "Classi e Oggetti - quarta parte",
          "Programmazione Object Oriented - seconda parte"
        ],
        "Gestione delle Eccezioni": [
          "Gestione delle Eccezioni - prima parte",
          "Gestione delle Eccezioni - seconda parte",
          "Gestione delle Eccezioni"
        ],
        "Classi di Base del JDK": [
          "Collections",
          "Date e Numeri",
          "Classi di Base del JDK"
        ],
        "Input/Output": [
          "Input/Output - prima parte",
          "Input/Output - seconda parte",
          "Input/Output"
        ],
        "Database": [
          "Database - parte prima",
          "Database - parte seconda",
          "Database"
        ],
        "Introduzione ad Android": [
          "Introduzione ad Android"
        ]
      },
      "requirements": [
        "Il Corso non ha prerequisiti, è necessario conoscere soltanto le basi della navigazione internet e avere voglia di imparare."
      ],
      "description": "l nostro nuovo corso online ti preparerà alla professione di Sviluppatore App Android. È questa una professione molto richiesta dal mercato del lavoro e Accademia Domani ha realizzato il corso per rispondere alle richieste specifiche delle sue aziende partner. Il nostro corso online si svolgerà illustrandoti la teoria, la programmazione e gli ambienti di sviluppo più utilizzati al momento per creare diverse tipologie di app.\nSegui il nostro corso online e impara a creare autonomamente le tue applicazioni per Smartphone e Tablet.\nIl programma del corso online parte da zero, così da permettere a tutti di partecipare, sia professionisti che principianti e copre le seguenti aree:\n1. Introduzione al corso \"Programmatore Android New Edition\"\n2. Prerequisiti: il linguaggio Java\n3. Basi del linguaggio Java\n4. Java: programmazione Object Oriented\n5. Gestione delle Eccezioni\n6. Classi di base del JDK\n7. Input/Output\n8. Database\n9. Introduzione ad Android\n10. Preparazione dell’ambiente Android\n11. Struttura di una app Android\n12. Gestione di un progetto Android\n13. Creazione dell’interfaccia grafica di una app\n14. Sviluppo della logica applicativa di una app\n15. Gestione delle features di una app\n16. Gestione del ciclo di vita di un’app Android\n17. Fragment\n18. Salvataggio dei dati\n19. Interazione tra app\n20. Permessi di una app\n21. Gestione della rubrica\n22. App multimediali\n23. Comunicazioni di rete\n24. Geo-location\nIl nostro corso online ti preparerà alla professione di Analista Programmatore Android, illustrandoti le tecniche, i programmi del settore e i tools più utilizzati al momento per creare diverse tipologie di App.\nL’obiettivo del corso online è di fornire tutte le conoscenze tecniche, metodologiche e pratiche per intraprendere da zero una carriera come Programmatore Android nel settore ICT.\nIl corso online sarà fruito su una piattaforma di FAD, comprensiva di materiali didattici (pdf e videolezioni), esercitazioni con codici sorgenti e test di autovalutazione.\n\nI destinatari del corso online persone che vogliono arricchire le proprie competenze o intraprendere da zero una carriera nel campo della programmazione specializzata. Il corso sarà fruito online su una piattaforma di FAD, comprensiva di materiali didattici ed esercitazioni guidate.",
      "target_audience": [
        "Persone interessate alla realizzazione di App per cellulari e Tablet su Android"
      ]
    },
    {
      "title": "SwiftUI pour iOS, iPadOS et macOS",
      "url": "https://www.udemy.com/course/swiftui2020/",
      "bio": "Créez des applications pour iOS14, macOS11 et iPadOS14",
      "objectives": [
        "Vous apprendrez à créer des applications pour iOS et macOS avec le framework SwiftUI",
        "Le DataFlow de SwiftUI",
        "Comment adapter une application sur les différents produits"
      ],
      "course_content": {
        "Présentation de SwiftUI": [
          "Prérequis du cours",
          "Qu'est ce que SwiftUI?",
          "SwiftUI ou UIKit?",
          "Installation de Xcode 12 Beta",
          "Installation des betas des OS"
        ],
        "Tour d'une Application SwiftUI": [
          "Création d'un projet SwiftUI pour iOS",
          "Création d'un projet multiplateforme et différences",
          "Xcode 12. Un tour",
          "Le App",
          "Le View",
          "Assets, info.plist et Target",
          "Les Previews",
          "Simulateur",
          "Device",
          "Les projets"
        ],
        "Le DataFlow de SwiftUI: Les Bases": [
          "Avant de commencer",
          "Qu'est ce que le DataFlow?",
          "La Property",
          "Le @State",
          "Le @Binding",
          "Le @Environment"
        ],
        "Les Vues Basiques": [
          "Création d'un projet",
          "La Vue Text",
          "Recap Text",
          "La Vue Image",
          "Recap Image",
          "La Vue Image avec SFSymbols",
          "Recap Image avec SF Symbols",
          "La Vue Label",
          "Recap Label",
          "Le Button",
          "Recap Button",
          "Les Stacks",
          "Recap Stacks",
          "Le Spacer",
          "Recap Spacer",
          "Le Divider",
          "Recap Divider",
          "Ajouter une Image de background",
          "Recap Image de background",
          "Le projet complet"
        ],
        "Exercice: Ajouter des vues basiques": [
          "Présentation de l'exercice",
          "Mise en place du projet",
          "Le Header",
          "Le Label du bas",
          "Boutons et Divider",
          "Image de Background",
          "Résolutions de problèmes de bouton sur macOS",
          "Le corrigé complet"
        ],
        "Extraction de Vues et GeometryReader": [
          "Créer une vue réutilisable",
          "Le TitleText",
          "Le GeometryReader",
          "Les previewLayout",
          "Le projet complet"
        ],
        "Exercice: Ajouter le GeometryReader et réutiliser les vues dans notre app basiqu": [
          "Présentation del'éxercice",
          "Ajout du GeometryReader",
          "Extraire les images",
          "Extraire les Textes",
          "Extraire un ensemble de Vues",
          "Le projet complété"
        ],
        "La Navigation": [
          "Le TabView",
          "Recap TabView",
          "Le NavigationView",
          "Recap NavigationView",
          "Le Sheet",
          "Recap Sheet",
          "Fermer de façon programmatique",
          "Recap Fermer",
          "Le FullSize",
          "Recap FullSize",
          "Le NavigationBarItem",
          "Recap NavigationBarItems",
          "Le NavigationLink",
          "Recap NavigationLink",
          "Le Link",
          "Recap Link",
          "Le projet complet"
        ],
        "Les Listes": [
          "La ScrollView",
          "recap ScrollView",
          "ForEach",
          "Recap ForEach",
          "La Liste Statique",
          "Recap Liste Statique",
          "La Liste Dynamique",
          "Recap Liste Dynamique",
          "La Liste avec range",
          "recap List avec Range",
          "La Liste avec Objet",
          "recap List Objet",
          "La Liste avec Object forEach et Range",
          "Recap List Objet ForEach",
          "Naviguer",
          "Recap Naviguer dans une Liste",
          "Supprimer",
          "Recap: Supprimer",
          "Déplacer",
          "Recap: Deplacer",
          "Sections",
          "Recap: Sections",
          "Le ListStyle",
          "Le Form"
        ],
        "Exercice les Listes": [
          "Présentation de l'exercice",
          "Enoncé de l'Exercice",
          "Mise en place du projet",
          "UI de base",
          "ListRowView",
          "DetailView",
          "Ajouter une Section",
          "L'Exercice complété"
        ]
      },
      "requirements": [
        "Posséder un Mac sous macOS 10.14 minimum",
        "Les Bases de Swift",
        "Les bases de la programmation orienté objet"
      ],
      "description": "Connaissez vous les bases de Swift et le la programmation Objet?\nAvez vous déjà développé des applications pour iOS avec Swift?\nVoulez vous apprendre le dernier framework d'Apple?\n\n\nCe cours sur SwiftUI est donc fait pour vous.\nNous apprendrons ensemble pas à pas comment créer des applications avec le dernier Framework d'Apple sorti en Juin 2019 et mis à jour en juin 2020.\n\n\nC'est une toute nouvelle façon de programmer pour iOS, avec un framework fluide, clair, déclaratif et concis. Vous n'aurez qu'a vous préoccuper des fonctionnalités, SwiftUI s'occupe du reste.\nNous verrons les nouveautés de la WWDC de 2020 comme par exemple les LazyVGrid, le DataFlow, les applications multiplateformes.\n\n\n\n\nJ'ai pour ce cours eu une nouvelle façon de procéder avec en version texte un récapitulatif de chaque vidéo théorique. Nous aurons aussi des exercices pour mettre en pratique tout ce que nous avons vu. Car vous le savez bien, si vous voulez intégrer au mieux la programmation, il faut pratiquer au quotidien.\n\n\nNous partirons ainsi des bases de ce framework, nous prendrons notre temps pour bien assimiler les vues, les éléments, les modifiers et les wrappers pour bien comprendre leur fonctionnement, leurs interactions et aussi leur imbrication les uns par rapport aux autres.\n\n\nNous ne voulons pas sauter ici les étapes, ces fondations sont essentielles dans l'apprentissage de ce Framework.\n\n\nJe vous attends Nombreux sur le cours et je vous dit à très vite",
      "target_audience": [
        "Développeurs iOS qui souhaitent apprendre SwiftUI"
      ]
    },
    {
      "title": "Flutter & Dart: Build Real-World Apps From Scratch [2025]",
      "url": "https://www.udemy.com/course/flutter-dart-build-real-world-apps/",
      "bio": "From Basics to Advanced App Development: Mastering Flutter, Dart, UI Design, State Management, and API Integration",
      "objectives": [
        "Learn Flutter and Dart from the ground up, step-by-step",
        "Build beautiful, fast and native-quality apps with Flutter",
        "Become proficient in one of the fastest growing technologies",
        "Use features like Google Maps, the device camera, authentication and much more!",
        "Build a portfolio of beautiful Flutter apps to impress any recruiter",
        "Learn how to upload images and how to send manual and automated push notifications",
        "Become proficient in one of the fastest growing technologies",
        "Learn all the basics without stopping after them: Dive deeply into Flutter & Dart and become an advanced developer"
      ],
      "course_content": {
        "Introduction": [
          "Welcome to this course",
          "What are Flutter & Dart?",
          "Why Flutter & Dart?",
          "Why this course?",
          "How to benefit from the course very well?",
          "Join & Participate in our Server",
          "Resources & Links"
        ],
        "Dart Basics |": [
          "Section Intro",
          "Introduction to Dart",
          "Introduction to Dartpad",
          "Starter Project & Print Statement",
          "Variables",
          "String Interpolation & Escape Characters",
          "Data Types",
          "Variables & Data Types",
          "String Functions Basics",
          "Numbers Functions Basics",
          "String & Numbers Functions",
          "Null Safety",
          "Type Inference with var",
          "Keywords (var, final, const, dynamic)",
          "Null Safety, Type Inference & Keywords",
          "If and else statements",
          "Logical Operators",
          "Ternary Operators",
          "Switch Statement",
          "Conditions & Operators",
          "While Loop",
          "Comments in Dart",
          "For Loop",
          "Loops & Comments",
          "Introduction to Functions",
          "Positional & Optional Parameters",
          "Named Parameters & Default Values",
          "Arrow Operator",
          "Functions & Operatios",
          "Lists in Dart",
          "Sets in Dart",
          "Maps in Dart",
          "Generics & Type Annotations",
          "Collections & Generics"
        ],
        "Dart Basics ||": [
          "Section Intro",
          "Introduction to Class",
          "Class Constructors",
          "Instance Variables and Methods",
          "Classes, Constructors & Instances",
          "Inheritance in Dart",
          "Super Constructors & Parameters",
          "Base Class & toString",
          "Overriding in Dart",
          "Inheritance, Super Constructors & Others",
          "Abstract Classes & Interfaces",
          "Immutable Data Classes",
          "Static Class Members",
          "Abstract Classes, Immutability & Static Class Members",
          "Mixins in Dart",
          "Enums in Dart",
          "Synchronous & Asynchronous Programming (Futures)",
          "Mixins, Enums & Asynchronous"
        ],
        "Flutter & IDE Setup": [
          "Section Intro",
          "Flutter & XCode macOS Setup",
          "Installing Android Studio in macOS",
          "Installing Visual Studio Code in macOS",
          "Installing Android Studio in Widnows",
          "Flutter Windows Setup",
          "Installing Visual Studio Code in WIndows",
          "Explore our main IDE"
        ],
        "Flutter Basics [QUIZ APP]": [
          "Section Intro",
          "Creating a new Flutter project",
          "The project folders and files",
          "Running the app on the simulator",
          "Overview of the Counter App",
          "Hot Reload & Hot Restart",
          "Flutter Widget Tree",
          "Introduction to Widgets",
          "Working on the Layout Widgets",
          "More about the widgets",
          "Connecting Functions & Buttons",
          "Anonymous Functions",
          "Stateless & Stateful Widgets",
          "Updating the data with setState",
          "Functions with Buttons, Stateless & Stateful widgets",
          "Building the Quiz App UI",
          "More about the layout widgets - Column & Row",
          "Mapping Lists, Data into Widgets",
          "Creating a new and custom widgets - Part 1",
          "Creating a new and custom widgets - Part 2",
          "Creating your first model class",
          "Changing the questins after answering",
          "Changing the answers based on the question",
          "Calculating the total score",
          "Quiz: Try to reset the Quiz",
          "Reset the Quiz & Refactor",
          "Use const to increase the performance",
          "Enhance & Build new UI for Quiz App",
          "Finalize the new UI for Quiz App",
          "Github Repo [RESOURCES & LINKS]"
        ],
        "Version Control [Git & Github]": [
          "What is Version Control? - Git & Github",
          "Introduction, Download & Install Git",
          "Use Git Bash, CMD or Power Shell",
          "Configure Username and Email in Git",
          "Overview about the project & Unix Commands",
          "Initialize the repository",
          "Untracked & Staging Files",
          "GitIgnore",
          "Add All & Git Commit",
          "Working Files, Staging & Commit Layers",
          "Remove, Restore & Rename Files",
          "Git Log & Update the commit message",
          "Revert to any commit using ID",
          "Intro to Branches & Why we need them?",
          "Creating, Switching & Working on Branches",
          "Merge & Delete Branches",
          "Merging Branches & Solving Conflicts",
          "Register to Github & Remote Repositories",
          "Update & Explore Profile in Github",
          "Creating New Repository & Link with Local Repo",
          "Adding & Working on the issues on Github",
          "Adding Pull Request & Merge it",
          "Explore the tabs in the repo & Pull Changes",
          "Fork & Clone Flutter Repo",
          "Make a pull request on a real flutter app",
          "Update the ReadMe file for your account [NICE]"
        ],
        "Running Apps, Debugging & Dev Tools": [
          "Section Intro",
          "Running the app on the Android Emulator",
          "Running the app on the iOS Simulator",
          "Running the app on a real iOS device",
          "Understanding the error messages & Fixing Errors",
          "Using the debugger"
        ],
        "Widgets, Styling & Building a real app [FOOD DELIVERY]": [
          "Section Intro",
          "Most Useful Flutter Widgets",
          "Planning Food Delivery App",
          "Creating a new Project & Architecture",
          "Github Repo [RESOURCES & LINKS]",
          "Drawer & Styling the App Bar",
          "Adding the app banner (Image)",
          "Adding basic Gridview",
          "Enhance the GridView item",
          "Working on the GridView.builder & Adding items",
          "Separating the widgets & Adding const",
          "Adding BottomNavBar",
          "Integrate the BottomNavBar with the app",
          "Using MediaQuery",
          "Making Column Scrollable with GridView",
          "Adding Faviorite Item",
          "Mapping Favorite Data into a List<Widget>",
          "Show only Favorite Food",
          "Add Favorite Icon with Stack",
          "Add Favorite Logic with copyWith Method",
          "Passing the index instead of the data type",
          "Un-Favorite Icon",
          "Finalized Un-Favorite Logic [Lists Operations]",
          "Adding the Empty State",
          "Adding Decorated Image",
          "Building & Styling Texts",
          "Working with ListTile & Divider",
          "Overview about Theme",
          "Configuring & Using Themes",
          "Using Components Themes",
          "Working with Text Themes",
          "Adding New Fonts",
          "Working with Material 3 [FLUTTER FORWARD 2023]"
        ],
        "Respnsive & Adaptive Apps": [
          "Section Intro",
          "What are \"Responsive\" and \"Adaptive\" apps?",
          "The points needed to improve in the app",
          "Calculating Sizes Dynamically (MediaQuery)",
          "Working with the TextScaleFactor",
          "Using the LayoutBuilder Widget",
          "Controlling the Device Orientation",
          "Different content based on deivce orientation",
          "Rendering Landscape Content",
          "Changing the content on Landscape mode",
          "Finishing Landscape Mode",
          "Cascading Operator [DART DIVE DEEP]",
          "Checking the platform device",
          "Using Cupertino (iOS) widgets",
          "More Cupertino Widgets & Styles",
          "Cupertino List Section & ListTile",
          "Adding Cupertino Buttons to Landscape"
        ],
        "Dive Deep into Flutter": [
          "Section Intro",
          "Explaining the problem exactly",
          "Widget Tree, Element Tree & Render Tree",
          "How Flutter rebuilds and repints the screen?",
          "Using const widgets and constructors",
          "Refactor widgets to avoid UNNECESSARY BUILDS",
          "Using Builder Methods",
          "Understanding the Widget Lifecycle",
          "Understanding the App Lifecycle",
          "Understanding Context",
          "Which problem \"Keys\" solve?",
          "Understanding & Using Keys"
        ]
      },
      "requirements": [
        "Basic programming language will help but is not a must-have",
        "You can use either Windows, macOS or Linux for Android app development - iOS apps can only be built on macOS though",
        "All software we'll be using is free to download and install.",
        "NO prior iOS or Android development experience is required",
        "NO prior Flutter or Dart experience is required - this course starts at zero!"
      ],
      "description": "Dive into the dynamic world of mobile app development with our comprehensive Flutter & Dart course, designed to take you from a novice to a proficient Flutter Engineer by 2024. This course is meticulously crafted to cover all essential aspects needed to excel in the Flutter ecosystem, offering you a unique opportunity to learn through building more than six real-world applications.\nYour Instructor: A Seasoned Expert\nJoin Tarek Alabd, an experienced Flutter instructor, Google Developer Expert, and Senior Software Engineer passionate about sharing knowledge and empowering aspiring developers. With a proven track record of guiding students to success, Tarek Alabd brings hands-on experience and industry insights to this immersive course, ensuring a learning journey that is both enriching and practical.\nWhy Flutter & Dart?\nChampioned by Google, Flutter has emerged as a revolutionary framework, enabling the creation of visually stunning, natively compiled applications for mobile, web, and desktop from a single codebase. Coupled with Dart, a language optimized for fast apps on any platform, it empowers developers to craft high-quality applications with ease.\nWhat Makes This Course Stand Out?\nReal-World Applications: Step beyond theory as you build six diverse apps, including a Quiz App, Food Delivery App, E-commerce App, News App, Social Media App, and Chat App, each designed to challenge and enhance your skills progressively.\nFrom Zero to Hero: Whether you're completely new to programming or seeking to expand your development repertoire, this course is structured to provide a solid foundation in Flutter and Dart, guiding you through basic concepts to advanced techniques.\nPractical Learning Approach: Engage with on-demand, video-based lessons packed with practical examples, live coding sessions, and real app development scenarios to solidify your understanding and skills.\nComprehensive Curriculum: Learn everything from environment setup, Flutter basics, and widget implementation, to state management, HTTP requests, user authentication, Google Maps integration, Payment Integration, Animations, and much more.\nKey Takeaways:\nGain a deep understanding of Flutter & Dart and the widget concept.\nNavigate through Flutter's rich widget suite and learn how to create custom widgets.\nMaster debugging, state management, and page navigation.\nConnect your apps to backend servers, handle user input, and implement user authentication.\nExplore adding animations, using native device features, and deploying apps to iOS and Android platforms.\nWho Should Enroll?\nAspiring mobile app developers with no prior experience in Flutter or Dart or even programming in general.\nSeasoned developers aiming to diversify their skills into cross-platform app development.\nIndividuals curious about building real-world applications and launching them on both the Apple App Store and Google Play.\nTake Your First Step Into Mobile App Development\nWith mobile app development skills becoming increasingly essential in the tech industry, now is the perfect time to embark on your journey with Flutter & Dart. By the end of this course, you'll have the confidence and capability to design, develop, and deploy captivating mobile applications, paving the way for a thriving career in app development.\nEnroll in \"Flutter & Dart: Build Real-World Apps From Scratch [2025]\" today and turn your app development dreams into reality!",
      "target_audience": [
        "If you have never programmed before, then take this course to learn Dart and build iOS and Android apps.",
        "If you know how to code, but are new to mobile development, then take this course to build apps with just one codebase.",
        "If you are a native app developer, then take this course to see how much time you can save building native-quality iOS and Android apps with Flutter.",
        "If you've tried Flutter before, then take this course to get a comprehensive curriculum that covers all the important aspects of Flutter development"
      ]
    },
    {
      "title": "【Flutter】APIを利用して天気予報アプリを開発する",
      "url": "https://www.udemy.com/course/flutter-api/",
      "bio": "FlutterでのJSONの扱い方や、List型・Map型について学習しましょう",
      "objectives": [
        "Flutterでのアプリ開発",
        "モバイルアプリの開発",
        "外部のAPIを使う方法",
        "JSONデータの扱い方",
        "List型やMap型の扱い方"
      ],
      "course_content": {
        "紹介": [
          "ゴールの確認"
        ],
        "基本UIの作成": [
          "コード整理 & ToDoリストの作成",
          "天気クラスを作成",
          "現在の天気情報を表示",
          "1時間ごとの天気を表示",
          "日毎の天気を表示",
          "郵便番号の検索窓のUIを作成"
        ],
        "WEB APIを活用": [
          "郵便番号から住所を取得",
          "郵便番号検索APIをdartで実施",
          "検索時に郵便番号から住所を取得・表示",
          "検索欄への入力内容に間違いがある際にエラー表示",
          "現在の天気情報を取得",
          "現在の天気情報をdartで取得",
          "取得した情報から現在の天気情報を表示",
          "1時間ごとの天気情報を取得",
          "取得した情報から1時間ごとの天気情報を表示",
          "日毎の天気情報を取得",
          "取得した情報から日毎の天気情報を表示"
        ],
        "終わりに": [
          "これからの学習方法について"
        ],
        "ボーナストラック": [
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "Flutterの開発環境"
      ],
      "description": "※この動画コースは、Flutter学習サービス『Flutterラボ』でも公開しています。\n\n\nAPIを利用することで、外部のアプリケーションを開発するアプリに取り入れてクオリティの高いアプリ開発を行うことができます。\n今回は、外部の天気予報APIを利用して、Flutterで天気予報アプリを開発しながら、要点を解説していきます。\n\n\n天気予報アプリの開発を通して、以下の項目について学ぶことができます。\nAPIへのリクエスト\nJSONデータの扱い方\nList型やMap型の扱い方",
      "target_audience": [
        "APIについて理解したい方",
        "Flutterでモバイルアプリを開発してみたい方",
        "iOS・Android両方のOSで動作するアプリケーションを短期間で開発したい方"
      ]
    },
    {
      "title": "Desarrolla Aplicaciones Android con App Inventor desde Cero",
      "url": "https://www.udemy.com/course/desarrolla-aplicaciones-android-con-app-inventor-desde-cero/",
      "bio": "Paso a paso aprenderás a dominar todos los elementos de programación, y serás capaz de crear tus propias aplicaciones",
      "objectives": [
        "Desarrollar aplicaciones Android completas y desde cero",
        "Aprender a usar AI2 completamente en todas sus posibilidades",
        "Comprender y dominar todos los elementos que componen AI2",
        "Mantener al estudiante al dìa a medida que AI2 lanza nuevas actualizaciones",
        "Compartir sus propias aplicaciones en el mercado",
        "Generar ingresos a través de la venta y/o esponsoreo de sus propias aplicaciones"
      ],
      "course_content": {
        "Introducción a App Inventor 2": [
          "Ingresando al mundo a AI2",
          "Una Experiencia Genial",
          "Diseño y Bloques",
          "Acerca de Tu Experiencia en el Curso",
          "MIT Companión, tu compañero imprescindible",
          "Evaluación sobre los fundamentos de AI2"
        ],
        "App 1 - Silbato": [
          "Silbato - Intro",
          "Silbato - Interfaz",
          "Silbato - Bloques",
          "Silbato - Prueba y descarga",
          "Silbato - Actualización I (Todo sobre Button)",
          "Silbato - Actualización II (Todo sobre Label)",
          "Silbato - Actualización III (Todo sobre Sound)",
          "App 1 - Silbato: Evaluación de lo aprendido"
        ],
        "App 2 - Sonidos de Animales": [
          "Sonidos de Animales - Intro",
          "Sonidos de Animales - Interfaz",
          "Sonidos de Animales - Bloques",
          "Sonidos de Animales - Prueba",
          "Sonidos de Animales - Actualización I (Todo sobre ListPicker)",
          "Sonidos de Animales - Actualización II (Todo sobre ListView)",
          "Sonidos de Animales - Actualización III (Todo sobre Spinner)",
          "Sonidos de Animales - Actualización IV (Todo sobre Slider)",
          "Sonidos de Animales - Evaluación de lo aprendido"
        ],
        "App 3 - Alarma": [
          "Alarma - Intro",
          "Alarma - Interfaz",
          "Alarma - Bloques",
          "Alarma - Prueba",
          "Alarma - Actualización I (Todo sobre DatePicker)",
          "Alarma - Actualización II (Todo sobre TimePicker)",
          "Alarma - Actualización III (Todo sobre CheckBox)",
          "Alarma - Actualización IV (Todo sobre Clock)",
          "Alarma - Evaluación de lo aprendido"
        ],
        "App 4 - Trivia": [
          "Trivia - Intro",
          "Trivia - Interfaz (parte I)",
          "Trivia - Interfaz (parte II)",
          "Trivia - Interfaz (parte III)",
          "Trivia - Bloques (parte I)",
          "Trivia - Bloques (parte II)",
          "Trivia - Prueba",
          "Trivia - Actualización I (Todo sobre Image)",
          "Trivia - Mejorando la App (parte I)",
          "Trivia - Mejorando la App (parte II)",
          "Trivia - Evaluación de lo aprendido"
        ],
        "App 5 - Rebota Pelota (Juego)": [
          "Rebota Pelota - Intro",
          "Rebota Pelota - Interfaz (parte I)",
          "Rebota Pelota - Interfaz (parte II)",
          "Rebota Pelota - Bloques (parte I)",
          "Rebota Pelota - Bloques (parte II)",
          "Rebota Pelota - Bloques (parte III)",
          "Rebota Pelota - Bloques (parte IV)",
          "Rebota Pelora - Bloques (parte V)",
          "Rebota Pelota - Prueba",
          "Rebota Pelota - Actualización I (Todo sobre Canvas)",
          "Rebota Pelota - Actualización II (Todo sobre Ball)",
          "Rebota Pelota - Actualización III (Todo sobre ImageSprite)",
          "Rebota Pelota - Evaluación de lo aprendido",
          "Rebota Pelota - Actualización IV (Todo sobre TinyDB)"
        ]
      },
      "requirements": [
        "Poseer un smartphone y un ordenador. Ambos con conexión wifi"
      ],
      "description": "Siempre pensaste que hacer apps para Android estaba fuera de tu alcance. Este curso te demuestra que tu eres capaz de crear tus propias apps desde cero. Atrévete a cumplir tus sueños y ampliar tus habilidades diseñando y publicando tus propias creaciones.\nDomina todo el proceso de creación de apps en un solo curso.\n- Aprenderás a utilizar completamente el programa App Inventor 2\n- Entenderás la lógica de programación de un modo entretenido y sencillo\n- Conocerás todos los elementos de programación con ejemplos prácticos\nCreé este curso pensando en mi experiencia, cuando creía que las aplicaciones eran creadas por ingenieros o personas con recursos inalcanzables.\nMi preparación docente y la necesidad de que comprendas todo de un modo claro y bien gráfico, me ayudaron a estructurar este curso con muchas herramientas visuales y en un lenguaje entendible por todos, incluidos los principiantes.\nEl curso está organizado en secciones. Cada sección (de entre 6 a 8 clases) introduce de 3 a 4 recursos nuevos, y te enseña a aplicarlos en apps de ejemplo y a dominar absolutamente todas sus características, de modo que al finalizar el curso hayas reconocido absolutamente todos los recursos de App Inventor.\nCada semana agrego una nueva sección al curso, introduciendo nuevos elementos, y actualizando las novedades de App Inventor.\nSi este curso es especial, es porque es EXHAUSTIVO. Comienza desde lo más básico hasta lo más complejo, y en cada elemento que aprendes a utilizar, te enseño todas las variables y alternativas que ofrece.\nLas clases son videotutoriales donde capturamos el desarrollo de las apps y auxiliamos cada nuevo detalle con gráficos e ilustraciones que favorecen la comprensión de lo enseñado.\nPromesa: no es posible que termines este curso sin dominar el arte de crear apps de Android.",
      "target_audience": [
        "Este curso está dirigido a personas que tienen poca o ninguna experiencia en lenguajes de programación, que desean aprender de manera práctica y sencilla como diseñar y programas sus propias ideas y plasmarlas en atractivas y dinámicas aplicaciones de Android. Estas personas aprenderán a través de este curso a dominar completamente y en todas sus funciones el programa App Inventor 2",
        "No deberían realizar este curso personas que quieran aprender lenguajes de programación específicos como Java"
      ]
    },
    {
      "title": "Flutter ile Mobil Uygulama Geliştirme (Android & iOS)",
      "url": "https://www.udemy.com/course/flutter-ile-mobil-uygulama-gelistirme-android-ios/",
      "bio": "Güncel içeriğiyle sıfırdan başlayarak ileriye seviye Flutter öğrenin, dünya çapında aranan uzmanlardan biri olun",
      "objectives": [
        "Dart dilini sıfırdan ayrıntılarıyla",
        "Asenkron programlamayı",
        "Null Safety kavramını",
        "Nesne Yönelimli Programlama'yı ayrıntılarıyla",
        "Sadece Dart dilini değil, genel olarak programlama mantığını",
        "Flutter projesi oluşturmayı",
        "State, widget gibi temel Flutter kavramlarını",
        "Yaygın olarak kullanılan temel widget'ları (ayrıntısıyla)",
        "Birden fazla sayfa oluşturmayı, sayfalar arasında geçiş yapmayı ve veri aktarmayı",
        "SharedPreferences ile cihaz hafızasına veri kaydetmeyi",
        "JSON yapısını, kullanım sebebini, mantığını ve uygulama içinde çözümlemeyi (JSON Parse)",
        "HTTP ile internetten veri çekmeyi",
        "API kullanmayı",
        "Bir mobil uygulamayı baştan sona kodlamayı",
        "Uygulamayı Play Store ve App Store'a yüklemeyi",
        "SQLite ile yerel veri tabanı oluşturmayı",
        "Kapsamlı SQL sorgularını",
        "Katmanlı Mimari'yi tüm ayrıntılarıyla",
        "MVVM Kavramını",
        "Provider ile Durum Yönetimi (State Management) kavramını profesyonel bir şekilde ele almayı",
        "Eğitim sonunda, aklınıza gelebilecek her türlü mobil uygulamayı sıfırdan hayata geçirebilecek düzeye gelmiş olacaksınız.",
        "Eğitim sonunda sadece kod yazmayı değil, profesyonel, ölçeklenebilir ve değişikliğe adaptasyonu yüksek projeler oluşturmayı öğrenmiş olacaksınız."
      ],
      "course_content": {},
      "requirements": [
        "Herhangi bir deneyime veya ön programlama bilgisine ihtiyaç yoktur.",
        "Temel düzeyde bilgisayar kullanmayı bilmeniz yeterlidir."
      ],
      "description": "Flutter, Google tarafından geliştirilen ve bir kez kod yazarak hem Android hem de iOS platformları için uygulama geliştirmemizi sağlayan, güçlü bir teknolojidir. Kısa sürede yüksek performanslı mobil uygulamalar geliştirebilmemize olanak sağlayan Flutter, bu avantajı sayesinde çok kısa zamanda popüler bir teknoloji haline gelmiştir.\n\n\nGörece yeni bir teknoloji olmasına rağmen Flutter, dünya devi şirketler de dahil olmak üzere birçok şirket tarafından kullanılmaya başlanmıştır ve kullanımı her geçen gün artmaktadır. Siz de Flutter öğrenmeye bir an önce başlayarak dünya çapında büyük şirketler tarafından aranan nitelikte bir yazılımcı olabilirsiniz.\n\n\nEğer kendi projelerini hayata geçirmek isteyen bir girişimciyseniz, kodlama aşamasından uygulamayı yayınlama aşamasına kadar, ihtiyaç duyduğunuz tüm bilgileri bu kursta bulabilir ve hayalinizdeki projeyi hayata geçirebilirsiniz.\nKurs içerisindeki bilgilerle hayalinizdeki projeyi nasıl hayata geçirebileceğinizi öğrenmekle kalmayacak, uygulamanızı Play Store ve App Store'a yüklemeyi de öğrenerek projenizi kullanıcılarla buluşturabileceksiniz.\n\n\nFlutter'ı her yönüyle ele alan bu kurs hiçbir ön bilgi gerektirmemektedir ve herhangi bir programlama tecrübesi olmayan kişilere Flutter öğretme amacını taşımaktadır. Kitabın içinde, adım adım A'dan Z'ye gerçek hayatta kullanabileceğiniz 4 uygulama bulunmakta olup uygulamalara ait kodları Github hesabımda bulabilirsiniz.\n\n\n10 yılı aşan mobil yazılım tecrübemi ve ilk çıktığı günden beri, daha doğrusu ilk beta test sürümünden beri kullandığım Flutter teknolojisi üzerine edindiğim tecrübemi kusta olabildiğince size aktarmaya çalıştım. Umarım yazılım hayatına atılma yolunda size faydası olur.\n\n\nKurs içerisinde yer alan derslerin kaynağı Flutter'ın kendi dökümantasyonuna ve yıllar içinde edindiğim tecrübelerime dayanmaktadır. Müfredat olarak ise kendi yazdığım ve halihazırda yayında olan \"Fluttter ile Mobil Uygulama Geliştirme\" kitabımın müfredatını kullandım.\n\n\nİyi seyirler.",
      "target_audience": [
        "Sıfırdan Dart ve Flutter öğrenmek isteyenler",
        "Android ve iOS platformları için mobil uygulama geliştirmek isteyenler",
        "Dünya çapında popüler olan Flutter teknolojisini öğrenerek bu alanda iş bulmak isteyenler",
        "Kendi fikirlerini hayata geçirmek isteyen girişimciler",
        "Temel düzeyde Flutter bilgisi olan, bilgi birikimini profesyonel düzeye çıkarmak isteyenler"
      ]
    },
    {
      "title": "State Management Bloc Flutter",
      "url": "https://www.udemy.com/course/state-management-bloc-flutter/",
      "bio": "Latihan Flutter - Model - Rest API - Bloc - Cubit - Stream - Bloc Pattern",
      "objectives": [
        "Mengenal tentang state management Bloc",
        "Penggunaan Cubit",
        "Pengenalan Stream",
        "Latihan Study Case dengan Bloc"
      ],
      "course_content": {
        "Introduction": [
          "Stream",
          "Basic Cubit",
          "Cubit Observer"
        ],
        "Flutter Bloc": [
          "Enum Class",
          "Observer Bloc",
          "Bloc Class",
          "General Observer",
          "Equatable"
        ],
        "Update Flutter": [
          "Update Flutter 3.3.0"
        ],
        "Latihan Bloc": [
          "Pembuatan UI",
          "Initial State",
          "Add User",
          "Delete User",
          "Edit User"
        ],
        "Bloc Architecture": [
          "Bloc Architecture",
          "Presentation Layer",
          "Data Layer",
          "Implementation UI",
          "Error Handling"
        ]
      },
      "requirements": [
        "Mengerti tentang pengguaan Widget Flutter",
        "Mengerti tentang bahasa Pemrogramman Dart"
      ],
      "description": "Banyak yang request untuk dibuatkan tutorial State Management BLOC karena banyak perusahaan tempat bekerja MEMBUTUHKAN pemahaman tentang Bloc, jadi di sini saya akan buatkan tutorial paling mudah dari dasar banget untuk teman-teman yang ingin mempelajari state management yang cukup popular ini.\n\n\nTanpa terlalu banyak deskripsi, materi kursus ini ditujukan untuk teman-teman semua yang ingin mempelajari tentang state management Bloc sekaligus latihan dengan studi kasus. Dengan banyaknya jenis state management, ada salah satu state management yang polular, paling banyak digunakan pada perusahan-perusahaan, dan memiliki komunitas yang banyak yaitu BLOC. Sudah waktunya teman-teman mencobanya dan langsungg saja gas materinya yaa :)\n\n\nSaat ini juga, membuat aplikasi mobile tidaklah sulit. Dengan adanya Flutter Framework kamu dapat sangat mudah dan cepat untuk membuat aplikasi, baik itu website maupun mobile apps. Kamu bisa melatih skill flutter kamu dengan latihan studi kasus ataupun mengikuti tutorial yang kamu anggap mudah dalam mengajarnya. Aku mengajarkan bagaimana cara menerapkan state management Bloc pada flutter project kamu di sini.\n\n\nMateri yang akan kamu pelajari dan dapatkan :\nMengenal tentang state management Bloc\nPenggunaan Cubit\nPengenalan Stream\nLatihan Penggunaan Rest API\nLatihan Study Case dengan Bloc\n\n\nKamu dapat bertanya pada kolom komentar jika kamu mengalami permasalahan pada saat mengikuti kursus ini. Pastikan kamu sudah mengecek kembali dan menyamakan source code yang sudah tersedia atau mengubah versi plugin kamu mengikuti versi pada tutorial ini. Jika masih terdapat masalah, hubungi aku melalui email yaa.\n\n\nSekian dan sampai jumpa.\n-Kuldii Project-",
      "target_audience": [
        "Flutter developer yang ingin mengasah skill Flutter",
        "Flutter developer yang ingin tahu tentang State Management Bloc",
        "Pelajar Indonesia (khususnya)",
        "Siapapun (umumnya)"
      ]
    },
    {
      "title": "【SwiftUI + Firebase】 バックエンドと連携したアプリを作りながら学ぶ実践的iPhoneアプリ開発講座",
      "url": "https://www.udemy.com/course/cardapp-swiftui-firebase/",
      "bio": "SwiftUIでTinderのようなUIのiPhoneアプリをゼロから開発して、その上でFirebaseと連携してユーザー認証やクラウドサーバーにデータを保存するための機能を実装します（Xcode15対応）",
      "objectives": [
        "XcodeとSwiftUIでiPhoneアプリを開発する",
        "Tinderのようなカードをスライプするインタラクションを開発する",
        "クライアントサイドのデータ制御と状態管理の方法",
        "Google Firebaseを使用してバックエンド機能と連携したアプリを開発する",
        "Firebase Authenticationを使用してログインやアカウント作成機能を開発する",
        "Firebase Firestoreを使用してデータベース機能を開発する",
        "Firebase Firestoreを使用してクラウド上に画像を保存する機能を開発する"
      ],
      "course_content": {
        "はじめに": [
          "このコースで作るアプリ",
          "このコースの進め方"
        ],
        "iPhoneアプリ開発の準備": [
          "iPhoneアプリ開発に必要なもの",
          "Xcodeでプロジェクトを作成する",
          "ライブプレビューとシミュレーターについて",
          "プロジェクトのファイル構成について",
          "SwiftUIでアプリの画面を作成する方法"
        ],
        "大まかなレイアウト": [
          "新しいプロジェクトを作成する",
          "リスト画面の大まかなレイアウトをする",
          "カード部分の大まかなレイアウトをする"
        ],
        "コードの整理": [
          "カード部分のコードを分離する",
          "リスト画面のコードを整理する",
          "カード画面のコードを整理する"
        ],
        "UIの作成": [
          "サンプル画像をインポートする",
          "カード画面のUIを作成する",
          "アクションエリアのUIを作成する"
        ],
        "カードのドラッグアクション": [
          "カードの位置を制御する",
          "ユーザーのドラッグ操作を検知する",
          "カードをユーザーのドラッグに追従させる",
          "カードをもとの位置に戻す",
          "カードの可動範囲を制限する"
        ],
        "カードの判定アクション": [
          "カードを画面の外に飛ばす",
          "カードの大きさを変化させる",
          "カードの傾きを変化させる",
          "LIKEとNOPEを表示させる",
          "複数枚のカードを表示させる"
        ],
        "データモデルの定義": [
          "データモデルとは？",
          "Userモデルを定義する",
          "モックデータを用意する"
        ],
        "データの表示": [
          "データをUIに反映させる",
          "データ制御のためのクラスを作成する",
          "カード毎に独自のデータを表示させる"
        ],
        "データの制御": [
          "ボタンのタップをカード画面に通知する",
          "NOPEボタンの機能を実装する",
          "戻るボタンの機能を実装する",
          "戻るボタンの機能を実装する",
          "ドラッグ操作とボタン操作を連携させる",
          "カードアクションのバグについて"
        ]
      },
      "requirements": [
        "Xcodeが動作するMac",
        "変数、四則演算、if文、ループなどの基礎的なプログラミング知識"
      ],
      "description": "「バックエンドと連携したアプリを作りながら学ぶ実践的iPhoneアプリ開発講座」へようこそ。\n\nはじめまして、講師のカーキです。\n仕事でソフトウェア開発をする傍ら、「プログラミングは社会をよくする力がある」という信念のもと、トレーナーとしてプログラミングを教える活動をしています。\n\n\nこんなお悩みはありませんか？\n入門者向けの書籍や動画で、プログラミングの基礎は学んだけれど、これからどうしたら良いか分からなくて、途方に暮れている。いざ自分が作りたいアプリを開発しようと思っても、実用的なアプリを作れる気がしない。\nこのコースは、そんなお悩みを持った「あなた」のためのコースです。そして、ソフトウェア開発を学んでいた過去の私自身が最も必要としていたコースです。\n\nこのコースのゴール\nこのコースでは、SwiftUIとGoogle Firebaseを使って、クラウド上のバックエンド機能と連携したアプリを構築します。そして、実際に手を動かしながら、一から完成まで省略することなくアプリを作って行きます。但し、一気にゴールまで駆け上がるのではなく、途中の試行錯誤を含めて開発の過程を体験できますので、実際にアプリを開発する時の「考え方」を身につけることができます。\n\nその他のこのコースの特徴\n少しづつ学習することが容易なように、セクションとレクチャーの構成を工夫しています。\n\n\nコースの雰囲気を掴めるように多くのサンプルプレビューを用意していますので、ご検討いただければ幸いです。\n私と一緒に、iPhoneアプリ開発の道を歩んでいきましょう！",
      "target_audience": [
        "SwiftUIでのiPhoneアプリを開発したい方",
        "iOSエンジニアになることを目指している方",
        "実際にアプリを作るタイプのコースで学びたい方",
        "実用的なiPhoneアプリの作り方を学びたい方",
        "Google Firebaseを使用したクラウドと連携するアプリの作り方を知りたい方"
      ]
    },
    {
      "title": "Curso de Python: Apps para Android, iOS, Linx, Win, e Mac",
      "url": "https://www.udemy.com/course/curso-de-python-android-ios-windows-linux-mac/",
      "bio": "Desenvolvimento de Apps Comerciais com Python e Kivy para Android, iOS, Windows, Linux e MacOS (Básico ao Avançado)",
      "objectives": [
        "Aprenda Python de forma completa, desde a lógica da programação até o desenvolvimento de apps para Android, iOS, Windows, Linux e MacOSX.",
        "Aprenda a orientação a objetos, bancos de dados (SQL/SQLite/MySql), padrões de projetos (MVC) e mais.",
        "Domine o Framework Kivy, crie janelas gráficas com campos, labels, listas e desenvolva apps profissionais multiplataforma com apenas um único código",
        "Domine tecnologias como SQLAlchemy e Firebase. Compartilhe dados entre apps em diferentes dispositivos, envie mensagens (Telegram) crie até mesmo simples jogos.",
        "Se torne um programador apto para ingressar no mercado de trabalho ou desenvolver softwares autorais para venda na AppStore e PlayStore."
      ],
      "course_content": {
        "Ambientes Virtuais": [
          "Introdução ao uso de Ambientes Virtuais"
        ],
        "Material de Apoio": [
          "Antes de começarmos",
          "Material de Apoio",
          "NOTA IMPORTANTE aos Novos Alunos",
          "NOTA IMPORTANTE (REFERENTE AS INSTALAÇÕES)"
        ],
        "Instalação no Windows": [
          "Construção do Ambiente de Trabalho no Windows",
          "Instalação da Biblioteca Kivy no Windows",
          "Instalando o PyCharm no Windows"
        ],
        "Instalação no Ubuntu": [
          "Ambiente de Trabalho Ubuntu",
          "Criação de Ambientes Virtuais",
          "Instalando o PyCharm no Ubuntu"
        ],
        "Instalação no Mac": [
          "Introdução à Construção do Ambiente de Trabalho no Mac OS X",
          "Ambiente de Trabalho Mac",
          "Instalando o PyCharm no Mac"
        ],
        "Instalação Simples (solução alternativa)": [
          "AVISO!",
          "Instalação no Windows",
          "Instalação no Linux (Ubuntu)"
        ],
        "Conceitos da Programação e do Python": [
          "IDLE",
          "Criando um Primeiro Projeto",
          "Comentários em Python",
          "Como funciona a Indentação",
          "Variáveis I",
          "Variáveis II",
          "Nomenclatura",
          "Manipulação de Dados",
          "Ponto Flutuante",
          "Entrada de Dados",
          "Operações Matemáticas",
          "Módulo da Divisão",
          "Potenciação e Radiciação",
          "Operadores Relacionais",
          "Exercício Teórico - Conceitos da Programação e do Python",
          "Exercícios Práticos 1 - Conceitos da Programação e do Python"
        ],
        "PyCharm": [
          "Visão Geral do PyCharm",
          "Views do PyCharm",
          "Plugins",
          "PyCharm e os Ambientes Virtuais",
          "Introdução à Depuração",
          "Inspecionando o Ambiente em Modo de Depuração",
          "Teclas de Atalho à Depuração",
          "Breakpoint Condicional",
          "Resolução de Problemas (exceções)"
        ],
        "Tomada de Decisão": [
          "Tomada de Decisão I",
          "Tomada de Decisão II",
          "Operadores Relacionais Compostos",
          "Operadores Relacionais na Prática",
          "Operadores Lógicos",
          "Blocos de Instrução I",
          "Blocos de Instrução II",
          "Blocos de Instruções na Prática",
          "Exercício Teórico - Tomada de Decisão",
          "Exercícios Práticos 2 - Tomada de Decisão"
        ],
        "Operadores": [
          "Escopo",
          "Operadores de Atribuição I",
          "Operadores de Atribuição II",
          "Atribuição Múltipla",
          "Atribuição Condicional"
        ]
      },
      "requirements": [
        "Noções Básicas de Informática",
        "Não há necessidade de conhecer lógica de programação"
      ],
      "description": "CURSO DE PYTHON: BÁSICO, INTERMEDIÁRIO, AVANÇADO E PROFISSIONAL!!\n\nApenas um curso com tudo o que você precisa!\n\nQuer se tornar um programador, entrar no mercado de trabalho ou desenvolver softwares autorais?\n\nAprenda neste curso completo de Python e Kivy desde a lógica da programação, orientação a objetos, banco de dados até o desenvolvimento de aplicações profissionais para desktop e/ou dispositivos móveis — Android, iOS, Windows, Linux e MacOSX — e sua comercialização em lojas de apps: AppStore e GooglePlay.\n\nPor ser destinado tanto para quem quer aprender uma nova linguagem ou mesmo as bases da programação, quanto para quem deseja se tornar um profissional da área, através de uma didática clara e objetiva, o curso ensina:\n\nINICIANTE\nFundamentos Iniciais;\nConceitos Básicos;\nLógica da Programação;\nLinguagem Python em sua versão 3x.\nINTERMEDIÁRIO\nOrientação a objetos;\nEstudo de Algoritmos;\nDesenvolvimento modular;\nPadrões de projetos.\nPROFISSIONAL\nAmbientes Virtuais (Virtualenv e Anaconda);\nConstrução de janelas gráficas (Kivy);\nLinguagem SQL e banco de dados relacional (SQLite e MySQL);\nControle de Versionamento de Código (Git);\nFramework ORM (SQLAlchemy);\nManipulação de linguagens de marcação (XML/JSON/HTML);\nIntegração com serviços de mensagem (envio de torpedo e Telegram);\nIntegração com a Nuvem (Firebase);\nSincronização de dados em tempo real entre vários dispositivos.\n\nAtravés de aulas amplamente ilustradas, que apresentam a teoria e a prática por meio de exemplos e códigos simples e eficazes, ao longo dos estudos também serão construídas pequenas aplicações de aprofundamento e em sua conclusão será desenvolvido um aplicativo profissional, constituído de cadastros e funcionalidades, compartilhamento automático de dados entre dispositivos e plataformas, recursos de disco, uso de periféricos, etc.\n\nTudo isto com apenas um único código e executáveis nativos!\n\nPortanto, este curso foi projetado para quem deseja conhecer os fundamentos da programação desde a sua lógica, para quem deseja aprender Python, uma linguagem simples, que disponibiliza milhares de pacotes e ampla documentação, bem como para quem deseja desenvolver aplicativos profissionais por meio de diversas tecnologias e através do Kivy, um framework multiplataforma, rápido, estável e gratuito.\n\nSe este é um dos seus objetivos, desde já seja muito bem-vindo!",
      "target_audience": [
        "Quem deseja se tornar um programador para entrar no mercado de trabalho ou desenvolver softwares autorais.",
        "Quem deseja aprender Python de forma completa, desde a lógica da programação, e construir aplicativos multiplataforma através do Framework Kivy para Android, iOS, Windows, Linux e MacOS.",
        "Quem deseja aprender SQL, banco de dados relacional SQlite/MySQL e tecnologias como SQLAlchemy, Firebase, entre outras."
      ]
    },
    {
      "title": "Build Your own Android Stickers Apps for WhatsApp",
      "url": "https://www.udemy.com/course/build-your-own-android-stickers-apps-for-whatsapp/",
      "bio": "WhatsApp Sticker",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Ho to install android studio",
          "Helpful tip on android studio",
          "How to design your sticker",
          "How to reduce to your sticker",
          "How to download your sticker app",
          "Add sticker to your app",
          "Add more sticker",
          "How to fix issue",
          "How to upload your app on play store",
          "Upload apk",
          "Final step",
          "Congratulation"
        ]
      },
      "requirements": [
        "Tool required are a mac computer or a laptop and any knowledge required.",
        "Be able to build a whatsApp sticker app"
      ],
      "description": "By the end of this course, student  will be able to Build their own Android Stickers Apps for WhatsApp without any  coding skill or experience in programming with the kind of sticker they will like to share to their love one on whatsapp and also upload their app on google play store.",
      "target_audience": [
        "Anyone who want to learn programming"
      ]
    },
    {
      "title": "Crie aplicativos para Android/iOS com HTML, CSS e JavaScript",
      "url": "https://www.udemy.com/course/crie-aplicativos-moveis-com-html-css-e-javascript/",
      "bio": "Aprenda a criar aplicativos móveis nativos para as principais plataformas usando Ionic1/Cordova, integrando com Firebase",
      "objectives": [
        "criar aplicativos nativos para as principais plataformas móveis atuais, como Android, iOS e Windows Phone, utilizando HTML, CSS e AngularJS",
        "desenvolver aplicativos que armazenem dados de maneira persistente",
        "sincronizar dados com servidores nas nuvens utilizando Web Services",
        "utilizar os principais plugins do cordova, tais como Câmera e Geolocalização (GPS)",
        "integrar com o BaaS (Backend as a Service) Firebase (Autenticação e Realtime database)"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Configurando o ambiente de desenvolvimento e criando um projeto",
          "Criando e executando um aplicativo",
          "Atualização do Ionic CLI: Configurando o ambiente e criando o primeiro projeto"
        ],
        "Criando seu primeiro CRUD (Criar, Ler, Alterar e Apagar)": [
          "Criando e exibindo uma lista no aplicativo usando AngularJS",
          "Editando e apagando um item da lista",
          "Criando rotas e navegando entre telas",
          "Inserindo itens (cadastro) a partir de um formulário",
          "Realizando a passagem de parâmetros",
          "Realizando o armazenamento persistente (localStorage)"
        ],
        "Manipulando os dados no servidor": [
          "Realizando a consulta de uma lista em um Web Service",
          "Manipulando dados (CRUD) no aplicativo usando Web Service",
          "Realizando Autenticação de Usuários no Servidor (Web Service/NodeJS)"
        ],
        "Utilizando recursos de Hardware e Sistema Operacional": [
          "Armazenamento persistente no dispositivo com SQLite",
          "Utilizando a câmera",
          "Criando um projeto com Mapa e GPS (Geolocalização)"
        ],
        "Firebase: Autenticação e banco de dados em tempo real": [
          "Introdução ao Firebase",
          "Conectando e consumindo o banco de dados em tempo real",
          "Inserindo dados no banco de dados do Firebase"
        ]
      },
      "requirements": [
        "Você já deve estar familiarizado com HTML e CSS"
      ],
      "description": "Atenção: Este curso aborda a versão 1 do Ionic, a qual faz uso do AngularJS!\n\n\nA cada dia que passa temos usuários migrando totalmente, ou pelo menos em grande parte do seu tempo, do uso de computadores para dispositivos móveis. O mercado de trabalho para esta área está em constante expansão. O desenvolvimento de aplicativos usando Ionic e Cordova permite agilidade no desenvolvimento, por não ser necessário aprender diversas linguagens de programação - apenas HTML, CSS e JavaScript - e rápida publicação de aplicativos nativos nas mais diversas loja online existentes. Além disso, o Ionic permite a integração hardware e Sistema Operacional, permitindo capturar fotos de câmera, usar GPS, realizar vendas pelo aplicativo e muito mais. Juntamente com Firebase, um Backend as a Service, você poderá criar aplicativos de tempo real e autenticações simples. Crie, publique e monetize aplicação para todos os sistemas operacionais ainda hoje!",
      "target_audience": [
        "Profissionais e estudantes que queiram desenvolver aplicativos para os mais diversos dispositivos móveis disponíveis no mercado, tais como Android, iOS, e Windows Phone, utilizando um padrões de programação para Internet: HTML5, CSS e Javascript (AngularJS)"
      ]
    },
    {
      "title": "Crie um App de Quitanda Virtual com Flutter + GetX",
      "url": "https://www.udemy.com/course/crie-um-app-de-quitanda-virtual-com-flutter-getx/",
      "bio": "Aprenda na prática a criar um App completo de loja virtual, incluindo pagamentos por Pix. Use todo o potencial do GetX!",
      "objectives": [
        "Aprender e aperfeiçoar o desenvolvimento de interfaces em Flutter",
        "Aprender a realizar comunicações com servidores reais (REST)",
        "Aprender a utilizar de pilares do desenvolvimento que grandes projetos demandam",
        "Aprender e desenvolver a lógica de programação"
      ],
      "course_content": {
        "Flutter UI: Introdução": [
          "Introdução"
        ],
        "Flutter UI: Tela de login": [
          "Inicio do desenvolvimento",
          "Aviso!",
          "Adicionando o campo de texto",
          "Criando o widget customizado de campo de texto",
          "Adicionando o botão de visibilidade para campos secre",
          "Criando o botão de entrar e esqueci a senha",
          "Criando botão de cadastro e estruturando sem Expanded",
          "Adicionando o nome do app e animação das categorias",
          "Criando e adicionando cores customizadas",
          "Adicionando uma rolagem na tela"
        ],
        "Flutter UI: Tela de cadastro": [
          "Iniciando a tela de cadastro",
          "Criando o container com a circunferência e espaçam",
          "Adicionando o formulário, botão de cadastro e rola",
          "Adicionando o botão de voltar e aplicando máscaras"
        ],
        "Flutter UI: Tela base": [
          "Criando a tela base e BottomNavigationBar",
          "Adicionando o PageView e navegando com o BottomNavigation"
        ],
        "Flutter UI: Tela home": [
          "AppBar com nome e ícone do carrínho",
          "Badge no Flutter 3.7.0",
          "Badge e campo de pesquisa",
          "Seção de categorias",
          "Organização do projeto e criação dos mocks",
          "Criação do grid para apresentação dos produtos",
          "Criando os tile de produto",
          "Adicionando o botão de carrinho e formato de preço"
        ],
        "Flutter UI: Tela de detalhes do produto": [
          "Apresentação de imagem e container",
          "Adicionando os dados do container",
          "Botão de add ao carrinho e animação Hero",
          "Criação do widget de quantidade",
          "Aumentando e diminuindo a quantidade"
        ],
        "Flutter UI: Tela do carrinho": [
          "Total e confirmação de pedido",
          "Lista de produtos",
          "Criando tiles dos produtos",
          "Incrementando widget de quantidade",
          "Dialog de confirmação"
        ],
        "Flutter UI: Tela de perfil": [
          "Criando tela com formulário",
          "Iniciando campos com dados",
          "Dialog para atualizar senha"
        ],
        "Flutter UI: Tela de pedidos": [
          "Iniciando o desenvolvimento e criando mock",
          "Desenvolvendo o title do tile com data formatada",
          "Listagem dos produtos",
          "Iniciando o desenvolvimento do widget de status",
          "Espaçamentos verticais e status corretos",
          "Adicionando todos os outros status",
          "Ícone do Pix",
          "Total e botão de pagamento",
          "Atualização do plugin qr_flutter",
          "Dialog de pagamento Pix",
          "Link para o projeto completo no Github"
        ],
        "Flutter UI: Animações e features": [
          "Animação ao enviar produto ao carrinho",
          "Observação do plugin add_to_cart_animation",
          "Apresentação de toast",
          "Mudança na aparência do Toast na versão 12 ou superior do Android",
          "Animação na navegação do PageView",
          "Animação de toque nos botões",
          "Troca de ícone ao envio produto para o carrinho",
          "Adicionando ícone customizado na aplicação",
          "Criando a splash screen",
          "Adicionando o carregamento com shimmer"
        ]
      },
      "requirements": [
        "Conhecimento intermediário de Dart/Flutter"
      ],
      "description": "Fala, Dev!\nSeja bem-vindo(a) ao meu mais novo curso: Crie um App de Quitanda Virtual com Flutter + GetX! Aqui você vai aprender inúmeros assuntos extremamente importantes, e que vão te possibilitar criar apps ainda mais incríveis e completos!\nEstá a fim de melhorar de vez o seu nível como desenvolvedor(a) Flutter? Então você está no lugar certo!\nAprenda a criar, do zero, um Aplicativo Completo de Quitanda Virtual, utilizando a tecnologia Flutter, e surfe a onda do framework que mais cresce no mercado.\nEste é um curso 2 em 1: primeiro desenvolveremos toda a interface do app de quitanda virtual (Flutter UI), aprendendo a utilizar inúmeros widgets existentes e também criando os nossos próprios! No Flutter UI criaremos as telas abaixo:\n\n\nTela de login:\nCriação de widget customizado para todo o app;\nAnimações para apresentação de categorias disponíveis no app;\nCores customizadas;\nDesenvolvimento de interface responsiva com widgets flex;\nCriação de campo de texto customizado;\nTela de cadastro:\nCriação da tela de cadastro com formulário;\nCriação de máscaras para campos;\nCriação de rolagem da tela quando campo é focado;\nTela base:\nCriação da paginação de telas;\nCriação da navegação por Bottom Navigation Bar;\nTela home:\nApresentação de categorias com seleção;\nApresentação de produtos em grid;\nCriação do campo de pesquisa;\nAnimação de envio de produto ao carrinho;\nTela de detalhes do produto:\nApresentação de imagem, descrição, preço, nome;\nCriação de widget customizado de quantidade;\nTela do carrinho:\nIncremento no widget customizado de quantidade;\nAjuste de quantidade de itens do carrinho e remoção;\nListagem de itens do carrinho;\nTela de pedidos:\nListagem de pedidos;\nApresentação de status;\nListagem de produtos por pedido;\nApresentação de dialog de Pix;\nTela de perfil:\nDesenvolvimento de formulário de dados do usuário;\nDialog para mudança de senha;\nBotão de sign out;\nAnimações e features:\nAqui teremos inúmeras animações e features que vão incrementar ainda mais a nossa interface.\n\n\nE não para por aqui! Vamos desenvolver também todas as funcionalidades do app de Quitanda Virtual! Por aqui vamos acompanhar temas como os principais pilares do GetX, como rotas, injeção de dependência, gerência de estado utilizando de seus Widgets especiais, assim como muitos outros métodos uteis do package GetX;\nVamos entender como funciona e aprender a realizar requisições REST em APIs reais;\nAbaixo temos a lista de features que implementaremos nesse app totalmente do zero no módulo Flutter GetX:\n\n\nAutenticação:\nLogar na aplicação;\nFazer o cadastro de um usuário;\nRecuperação de senha;\nAutenticação por token;\nHome:\nListagem de produtos;\nOrdenação de produtos por categoria;\nFiltragem pelo nome do produto;\nRolagem dinâmica de produtos;\nCarrinho:\nAdição de produtos;\nAtualização de quantidades;\nRemoção de produtos;\nCarrinho permanente (Quando sairmos do app os produtos não somem);\nRealização de checkout;\nPedido:\nListagem de pedidos;\nPagamento por QR code Pix;\nPagamento por copia e cola Pix;\nPerfil:\nVisualização de dados do usuário;\nAtualização de senha;\nLogout.\n\n\nTá esperando o que pra desenvolver novas habilidades de Flutter e ficar à frente da concorrência?\nVídeo aulas rápidas, práticas e objetivas. Não perca tempo, inscreva-se já!",
      "target_audience": [
        "Desenvolvedores iniciantes que querem aprender tudo o que é preciso para criar apps incríveis"
      ]
    },
    {
      "title": "Android: Prototipagem Profissional de Aplicativos",
      "url": "https://www.udemy.com/course/android-prototipagem-profissional-de-aplicativos/",
      "bio": "A motivação e o roteiro necessários para a sua ideia de aplicativo Android se tornar real.",
      "objectives": [
        "Criar protótipos Android profissionais, estáticos e navegáveis.",
        "Trabalhar com o mindmeister para desenvolver de maneira eficiente as ideias de aplicativos.",
        "Trabalhar o Material Design, passo a passo, em protótipos Android.",
        "Utilizar o Material IO Colors para definir com eficiência todas as cores do aplicativo.",
        "Utilizar o Material IO Icons para ter ícones de sistema no modelo do Material Design.",
        "Utilizar o Material Design Icons para ter ícones de marcas no modelo do Material Design.",
        "Utilizar o GIMP para editar imagens externas, necessárias ao protótipo.",
        "Utilizar o Canva para a obtenção e criação de logos originais e de qualidade.",
        "Criar protótipo de dashboard Web para auxílio ao protótipo e requisitos do projeto Android.",
        "Saber o porquê de se ter o protótipo estático pouco abstrato e o navegável mais abstrato. Essencial para a eficiente apresentação e codificação de projeto."
      ],
      "course_content": {
        "Apresentação do curso": [
          "O que é o curso de prototipagem e como será o roteiro de aulas"
        ],
        "A importância dos protótipos": [
          "Aceleração da programação, stakeholders, requisitos e regras de negócio",
          "Protótipo estático, protótipo navegável e diagramas"
        ],
        "Material Design": [
          "Anterior, origem e lançamento da nova linguagem de design do Google",
          "Objetivos, mundo real e digital, regras e similaridades com outros design",
          "Formas, cores, ícones, tipografia, imagens e animações",
          "Profundidade, elementos comuns e conclusão"
        ],
        "Apresentação dos softwares que serão utilizados": [
          "Software"
        ],
        "Discussão da ideia de aplicativo em um app Web de brainstorm": [
          "Apresentação e tour pelo app de mapa mental e realização do cadastro",
          "Segunda parte do tour pelo mindmeister",
          "Início da apresentação da ideia de aplicativo do curso",
          "Cadastro de usuário e telas de introdução",
          "Cadastro de problema e monetização",
          "Listagem de problemas, comentários e respostas",
          "Atividade do problema",
          "Login, cadastro e update de administrador e cadastro de prefeitura",
          "Lista de prefeituras e página de detalhes de prefeitura",
          "Lista de problemas e página de detalhe de problema",
          "Lista de usuários e lista de comentários de usuário"
        ],
        "Definição das cores primária e secundária do aplicativo": [
          "Utilizando o Material.IO Color Tool para escolha de cores"
        ],
        "Apresentação do aplicativo MarvelApp": [
          "Apresentação e cadastro no Web app",
          "Dashboard inicial e criação de projeto",
          "Segunda parte dashboard, novo projeto e tour"
        ],
        "Explicação, download e edição da logo do aplicativo": [
          "Explicação do porquê da mudança de logo do projeto",
          "Apresentação do Canva Web app e download do novo logo",
          "Apresentação e instalação do GIMP e edição da logo"
        ],
        "Protótipo estático: Colocando o ícone de lançamento (produto)": [
          "Colocando o ícone / logo de protótipo de aplicativo Android"
        ],
        "Protótipo estático: Tela de abertura do aplicativo": [
          "Explicando a tela de abertura de apps Android e a definição de cores via Marvel",
          "Download e edição da imagem de background e colocando ela em tela",
          "Colocando o logo, o título e o moti no centro da tela de abertura"
        ]
      },
      "requirements": [
        "Não há nível mínimo, você aprenderá, do zero ao profissional, a criar protótipos Android.",
        "Desejo pessoal de entrar, ou de se especializar, no mundo Android."
      ],
      "description": "Nós frequentemente desistimos de nossas ideias de aplicativos, pois não sabemos por onde começar e nem mesmo o caminho a percorrer. Ou seja, não temos o roteiro necessário até o término do app.\nUm protótipo Android de alta qualidade não é somente o roteiro, mas também a motivação essencial para que você siga até o final de sua ideia de aplicativo mobile.\n\n➙ Para desenvolvedores: quanto menos abstrato o protótipo, maior a velocidade de desenvolvimento e menor o tempo de entrega do projeto. Não terá de tomar decisões de design enquanto codifica, além de saber exatamente o que precisa ser feito.\n➙ Para não desenvolvedores: antes dos algoritmos você precisa saber prototipar com qualidade, até mesmo para conseguir sócios programadores ou investidores para o projeto.\nCom o protótipo de nossa ideia passamos a acreditar e a se dedicar mais ao projeto.\nUm exemplo efetivo dos protótipos de qualidade: o Facebook, depois da ideia, teve primeiro os protótipos desenvolvidos, todos pendurados frente ao criador da rede no dormitório universitário dele.\n\nNeste curso nós vamos, passo a passo, a:\nHistórico e importância\nEntender a importância dos protótipos:\nEstático e navegável;\nPara o desenvolvimento do aplicativo;\nPara a apresentação do projeto de aplicativo.\n\n\nMaterial Design\nConhecer o histórico:\nO que era utilizado antes;\nProjetos de origem;\nO porquê dessa nova linguagem de design;\nLançamento.\nAs principais regras de negócio;\nOs componentes visuais mais comuns;\nPara onde vai o design do Google Android.\n\n\nMapa mental para aplicativos\nEntender as vantagens de utilizar um software de mapa mental:\nPara os requisitos;\nPara as regras de negócio;\nPara o desenvolvimento eficiente da ideia.\nConhecer o MindMeister;\nUtilizar o MindMeister para destrinchar, detalhadamente, a ideia de aplicativo do curso:\nAplicativo comunitário: ➙ Solução sem Licitação.\n\n\nCores chave do aplicativo\n\nAprender a utilizar o Material IO Colors;\nDefinir as cores do projeto Solução sem Licitação.\n\n\nÍcones de sistema\nSaber utilizar o Material IO Icons para ícones sem brand;\nSaber utilizar o Material Design Icons para ícones com ou sem brand.\n\n\nGerador de logotipo\n\nAprender a buscar logotipos originais sem a necessidade de ser um expert;\nConhecer o FreeLogoService:\nEntender o porquê de não violar os termos e condições de uso de uma empresa de software.\nAprender a utilizar o Canva;\nGerar o logo do projeto Solução sem Licitação.\n\n\nEdição de imagem\n\nAprender a utilizar o essencial do GIMP para edição de imagens de protótipo.\n\n\nCriador de protótipo\nConhecer o MarvelApp;\nSaber o porquê de utilizarmos o software escolhido:\nSimplicidade, robustez e alta qualidade.\nIniciar os trabalhos com o definido criador de protótipos.\n\n\nProtótipo estático Android\nEntender a importância de pecar pelo excesso nesta parte do projeto;\nConstruir, passo a passo, o protótipo do aplicativo Solução sem Licitação, incluindo, a partir deste ponto do curso:\nUso continuo dos softwares auxiliares já apresentados;\nExplicações, no decorrer das aulas, de pontos chave para o design de apps Android.\n\n\nProtótipo estático do dashboard Web\n\nEntender o porquê desta parte no projeto de aplicativo;\nConstruir, passo a passo, o dashboard Web de Solução sem Licitação.\n\n\nProtótipo navegável Android\n\nEntender a importância de realizar somente o essencial nesta parte:\nApresentar somente o core da ideia.\nConstruir, passo a passo, o protótipo navegável de Solução sem Licitação.\n\n\nPara onde ir\nConsiderações finais para aqueles que são desenvolvedores;\nConsiderações finais para aqueles que não são desenvolvedores.\n\n\nNote que:\nTodos os softwares utilizados ou são 100% gratuitos ou têm uma versão gratuita que nos atende muito bem na construção de protótipos de qualidade profissional.\nDevido a experiência que tenho nesses mais de quatro anos construindo video aulas Android, sei que vários alunos, devido a correria do dia dia, não têm, muitas vezes, 10 minutos para dedicar a cada vídeo aula.\nLogo, sabendo da importância do conhecimento de desenvolvimento de protótipos de qualidade para qualquer projeto Android e com o objetivo de fazer valer o seu investimento no curso, visando que você vá até o final dele, as vídeo aulas têm em média 4-5 minutos de duração e todas estão em HD.\nÉ muito importante que a cada aula você também aplique o conteúdo ensinado, ou seja, esteja com os softwares indicados abertos e produzindo. É assim que você terá o conhecimento fixado: com a prática.\nLembre: depois da ideia, em uma caminhada ou em outro momento qualquer, o primeiro passo é a construção do protótipo, não somente porque é rápido, permite qualidade profissional e mostra o seu compromisso quanto ao projeto, mas principalmente porque lhe motiva o suficiente para ir até o final dele.\nNão deixe de enviar sua pergunta assim que surgirem dúvidas sobre o curso, quem me acompanha sabe que não tenho problemas em responder.\nAbraço.",
      "target_audience": [
        "Programadores Android que querem acelerar o processo de codificação, utilizando para isso protótipos de alta qualidade.",
        "Pessoas que têm ideias de apps Android e querem coloca-las em um formato mais tangível, protótipo, para buscar sócios desenvolvedores e investidores."
      ]
    },
    {
      "title": "iOS Code Review. Reviewing Apples Sample Code.",
      "url": "https://www.udemy.com/course/swiftui-a-live-code-review/",
      "bio": "Created by iOSBFree. Examining sample projects (written by someone else) as practice for an iOS Code Review",
      "objectives": [],
      "course_content": {
        "Welcome": [
          "This Course",
          "Download Our Sample Code",
          "Free Online Courses",
          "Free Stuff On iOSBFree.com",
          "This Sample Projects"
        ],
        "Code Review": [
          "(Short Version) Examining an XCode project",
          "(Long Version) Examining an XCode project",
          "Inspecting the networking layer"
        ]
      },
      "requirements": [
        "Basic knowledge of iOS"
      ],
      "description": "Learn From One Of The 1st iOS Developers In The World\nOur instructor Matt, has 13 years of experience in iOS and created the world's first iPhone, iPad and Apple Watch apps. Now, he dedicates his time recording courses for iOSBFree (pronounced \"iOS Be Free\").\n\n\nIn This Course\n1. We examine two Xcode projects: From Apple and also online\n2. We search for code enhancements\n3. We lookout for code smells (code that looks like trouble in some way)\n4. Try to spot code that breaks layered architecture design principles\n\n\nLearning Objectives\n· How to review an Xcode project\n· How to look for code smells\n· How to preserve layered architecture\n· How to check the imported frameworks for architectural clues\n· Why we don't use FatalError() in commercial projects\n· Why we don't force unwrap optionals in commercial projects\n\n\nLayered Architecture vs Spaghetti Code\nTogether, we’ll investigate two sample projects looking to enhance the code whilst searching for any areas that could break a layered architecture design. When constructing a solution using a layered tier system is a must in terms of design as it provides order and structure. And remember that without this kind of infrastructure our tools would consist of an unordered collection of files all communicating with each other in a very difficult manner to follow or understand. i.e. like a ball of tangled spaghetti.\n\n\nSample Code\nSample Code Is Always Included and attached to each video. You can download the exact same project used in each episode of the course.\n\n\n\nThis Course Is Free\nThis course is free. We aim to publish as many short courses as we can to help new iOS Developers apply for jobs in iOS and enter a high paying profession. We want those developers to write great and amazing apps that are robust, work correctly and are also maintainable too. By supplying this information for free we hope we can reach as many people studying in the pandemic as we can.\n\n\nOur Service (iOSBFree Ltd)\nWe are a unique career-building service sharing over 13 years of successful experience shaping the iOS industry into what it is today. Our completely unique information, point-of-view and service can be utilised to build highly successful and profitable careers in iOS.\n\n\nA Career In iOS\niOS developers are the most sought after developers in the world! They can earn over £100,000 per year, work remotely and B in high demand for their skills! Subscribe to our YouTube channel and let us reveal all our insider secrets completely for free.\n\n\nWhat We Teach\nCareer building, CV writing, interviewing skills, industry secrets, industry stories, real-life experience, iOS fundamentals, ARC memory management, Swift, architecture and best engineering practices.\nPlease show your support by enrolling in our course!\n\n\n\nWhat Is SwiftUI?\nSwiftUI is a newly released UI Framework introduced to iOS. It aims to solve a lot of problems with apps, such as running on all platforms, reducing bugs, improving stability and bringing more developers to iOS - because it's easier to write apps!\nLearning SwiftUI is an absolute must for any iOS developer looking to develop a career over the next 5 years.\n\n\nThe Instructor\nCheck out our Instructor profile (just briefly) and glance over Matt's incredible unparalleled experience. After 13 years of specialising in iOS, he created a company helping people build their own successful and profitable careers in iOS too.\nOur completely unique information cannot be found anywhere else on any platform. We not only teach code, syntax and architecture but we provide tried & tested strategies to BOOST your career forwards and build a better life!\n\n\n\nWant To Learn More Topics?\nPlease send us an email with the topic you would like to learn in a swift playground and we will happily record, edit and publish it for you. Absolutely for free. Simply email community@iOSBFree.com with the subject heading, \"Topic I Want To Learn\".\n\n\nFirst In The World\nNot only is our instructor one of the first iOS developers in the world, but our service is also the first of its kind in the world!\niOSBFree is a truly unique one-of-a-kind service. There is not a single other service offering Matt's level of experience in any other coding course, software engineering tutorial or career-building service anywhere in the entire world.\n\n\nMore From iOSBFree\n· Download Our FREE CV Template\n· Download Our Career BOOSTER Pack\n· Enrol In FREE Online Courses (iOS & Swift)\n· Read Our Blog\n\n\nMuch love.\nThe iOSBFree team.\nBuild a profitable iOS career with iOSBFree!",
      "target_audience": [
        "Beginners who want to start a career in iOS - we help with that!"
      ]
    },
    {
      "title": "(Ken Cen出品)蘋果手機編程(V2.0) - 使用IOS12 & Swift4 - 編寫19個真實程式",
      "url": "https://www.udemy.com/course/ios11swift4/",
      "bio": "從零到專業出品",
      "objectives": [
        "知道如何配置SWIFT編程環境",
        "了解SWIFT的基本語法",
        "會使用Timer，TableView， 臨時存儲接入APP",
        "會使用Autolayout讓APP適應多種不同大小的蘋果設備",
        "會製作各種有趣的IOS動畫效果，讓您的APP更生動活潑",
        "知道如何讓APP能播放音頻",
        "了解並會使用Core Data數據庫保存和讀取數據，實現登錄系統",
        "知道如何讓APP鏈接網絡，API，讀取JSON信息，借用Cocoapods庫實現更豐富的工具",
        "能使用IOS的地圖功能和Firebase製作像Uber一樣的世界知名APP",
        "知道如何使用Machine Learning(機械學習功能)追蹤實物，讀取QR碼，分辨對象性別，年齡等",
        "知道如何運用AR把3D物體放到現實世界（iPhone內）中去"
      ],
      "course_content": {
        "建立第一個SWIFT4程序": [
          "課程介紹",
          "簡介",
          "課程準備",
          "下載安裝xcode",
          "製作我們第一個SWIFT程序",
          "第二個APP-我的寵物",
          "如何添加圖片到APP",
          "第一章總結"
        ],
        "編寫具有功能的APP": [
          "第二章簡介",
          "第三個APP-Dice Game外觀製作",
          "第三個APP-界面元素鏈接代碼",
          "第三個APP-代碼文件結構",
          "第三個APP-常量&變量&String",
          "第三個APP-整型",
          "第三個APP-Double&Float&Bool",
          "第三個APP-如何生成隨機數",
          "第三個APP-數組Array",
          "第三個APP-隨機數連結圖片顯示",
          "第三個APP-減少代碼重複",
          "第三個APP-function",
          "第三個APP-實現動作感應",
          "第二章總結"
        ],
        "Class和Object": [
          "第三章簡介",
          "Class和Object",
          "Enumerate",
          "Class初始化",
          "繼承inherit",
          "Optional感歎號與問號",
          "第三章總結"
        ],
        "Timer(計時器)，TableView，臨時存儲": [
          "第四章簡介",
          "NavigationBar導航欄",
          "Timer Class",
          "第四個APP-計時器外觀",
          "第四個APP-開始計時功能",
          "第四個APP-暫停和重設",
          "如何使用TableView",
          "TableView顯示動態數據",
          "第五個APP-TableViewApp",
          "臨時儲存",
          "第六個APP-記住我的名字",
          "多界面操作",
          "多界面數據傳遞",
          "如何移除軟鍵盤",
          "第七個APP-筆記本APP",
          "第七個APP-保存變化數據",
          "第七個APP-將臨時數據顯示在tableview上",
          "第四章總結"
        ],
        "AutoLayOut": [
          "第五章介绍",
          "IOS定位原理",
          "Autolayout的两种定位方法",
          "Autolayout实际应用",
          "克隆计算器外观",
          "第五章總結"
        ],
        "IOS動畫製作": [
          "第六章簡介",
          "製作第一個IOS動畫效果",
          "代碼編寫UIView",
          "製作移動背景動畫",
          "製作移動背景動畫-代碼部分",
          "製作漸現開場動畫",
          "克隆Twitter開場動畫",
          "OptionsAndSpring",
          "Transform變形",
          "第八個APP-登錄動畫APP外觀",
          "第八個APP-登錄動畫APP代碼部分",
          "第六章總結"
        ],
        "播放音頻功能": [
          "第七章簡介",
          "第九個APP-音頻App外觀",
          "第九個APP-加入播放功能",
          "第九個APP-修復數組錯誤",
          "第九個APP-全局變量及局部變量",
          "第七章總結"
        ],
        "Core Data": [
          "第八章簡介",
          "for循環語句",
          "Core Data 保存數據",
          "Core Data 獲取數據",
          "第十個APP-登錄系統外觀設置",
          "第十個APP-登錄系統數據保存",
          "第十個APP-登錄系統tableview顯示",
          "第十個APP-登錄系統數據刪除",
          "第十個APP-登錄系統修復重複登錄",
          "第八章總結"
        ],
        "網絡下載，API連結，JSON處理，Cocoapods": [
          "第九章簡介",
          "第十一個APP-下載圖片",
          "Closure",
          "第十一個APP-保存圖片文件",
          "Dictionary字典",
          "接入API",
          "逐層分解JSON",
          "什麼是cocoapods",
          "安裝cocoapods",
          "安裝pod",
          "第十二個APP-WeatherAPP外觀設定",
          "第十二個APP-如何使用Alamofire",
          "第十二個APP-MVC結構&SwiftyJSON處理數據",
          "第十二個APP-處理model數據",
          "第十二個APP-更新View內容",
          "第十二個APP-delegate傳遞數據",
          "第十二個APP-delegate實際操作",
          "第十二個APP-SVProgessHUD&更新數據",
          "第九章總結"
        ],
        "地圖功能": [
          "第十章簡介",
          "如何接入地圖功能",
          "如何解決MapView運行慢的問題",
          "修復路徑及修復文件下載",
          "如何獲得用戶所在位置",
          "如何添加Annotation到地圖",
          "第十三個APP_MyMap",
          "第十三個APP_如何獲得用戶所在地址",
          "升級WeatherAPP",
          "第十章總結"
        ]
      },
      "requirements": [
        "無需任何編程經驗",
        "一台蘋果電腦",
        "一部iPhone手機（人工智能及AR章節需要真機測試）"
      ],
      "description": "大家好， 我是Ken， 是一名蘋果手機工程師，我將建立一個全面的蘋果手機編程課程，幫助所有有志成為蘋果工程師的人學習蘋果手機編程，即使您之前沒有接觸過任何關於編程的東西，一切都會變得非常簡單。\n我們會從安裝編程環境開始，第一章會幫助您建立自己第一個蘋果程序，然後一步一步深入了解各種SWIFT語言的語法，但請您放心，一切都會非常自然，您會從實例中得到啟發，而不是冷冰冰的代碼。\n隨著課程的深入，您會掌握蘋果各種有趣功能的編寫過程，包括聲音，圖片，動作感應，甚至Machine Learning機器學習, AR等IOS12的新功能，這可能是Udemy上最詳細的中文蘋果手機編程教學。\n讓我們一起，與Ken Cen一起學蘋果手機編程。\n\n\nHello everyone, I'm Ken, I'm an iPhone engineer, I'm going to build a comprehensive iPhone programming course to help all aspiring Apple engineers learn iPhone programming, even if you haven't been exposed to anything about programming before, Everything will be very simple. We'll start by installing the programming environment, the first chapter will help you build your first Apple program, and then step-by-step into the syntax of various SWIFT languages, but don't worry, everything will come naturally and you'll be inspired by examples , not cold code. With the deepening of the course, you will master the writing process of various interesting functions of Apple, including sound, pictures, motion sensing, and even the new functions of IOS12 such as Machine Learning, AR, etc. This may be the most detailed Chinese iPhone programming on Udemy teaching. Let's learn iPhone programming with Ken Cen.",
      "target_audience": [
        "沒有編程經驗，但也想學習SWIFT的學員",
        "有意成為蘋果工程師的學員",
        "想找最全面的中文SWIFT語言學習課程的學員",
        "喜歡動手實際操作的學員"
      ]
    },
    {
      "title": "Curso completo de Corrutinas y Flow con Android y Kotlin",
      "url": "https://www.udemy.com/course/corrutinas-y-flow-con-android-y-kotlin/",
      "bio": "Sé un experto en coroutines y flujos de kotlin, incluye prácticas android con MVVM, Room, LiveData, Retrofit, Lifecycle.",
      "objectives": [
        "Sintaxis, estructura, tipos, configuraciones, devolución de valores, todo referente a las corrutinas en Kotlin.",
        "Ejecutar tareas exhaustivas sin desbordar la memoria o saturar el uso de la CPU.",
        "Flows, configurar los flujos de datos infinitos en android para escenarios avanzados.",
        "Prevenir que procesos puedan congelar la interfaz del usuario o hacer que nuestras app dejen de responder.",
        "Conceptos avanzados para ahorrar tiempo y recursos en coroutines, channels, flows y más.",
        "Ejecución simultanea de tareas asíncronas en kotlin y android como procesamiento de imágenes, peticiones a internet, cálculos matemáticos, etc...",
        "Bibliotecas de Jetpack nativas con coroutines, tal como LiveData, ViewModel, LifeCycle y Room.",
        "Integración de las corrutinas con Retrofit para peticiones con API Restful, y Coil para descargar imágenes de la nube.",
        "Ciclo de vida con Job, cancelación, excepciones y más.",
        "Uso de Deferred, Dispatchers, suspend, Async & Await, Buffer, Pipelines, Operadores y todos los elementos referentes a Coroutines y Flows."
      ],
      "course_content": {
        "Introducción": [
          "Bienvenidos al curso de Corrutinas con Android y Kotlin",
          "¿De que va el curso?",
          "Presentación del instructor",
          "Cómo sacarle todo el provecho a Udemy",
          "No valores el curso antes de tiempo!",
          "Opcional: Descarga e instala Android Studio(Mac)",
          "Recursos previos.",
          "Comunidad de Discord para aprender con amigos",
          "Importante: Actualización de proyectos"
        ],
        "Actualizaciones generales": [
          "Instrucciones importantes para actualizaciones",
          "Crear y configurar un proyecto nuevo con Gradle Kotlin DSL",
          "Habilitar DataBinding y ViewBinding en Gradle Kotlin DSL",
          "Añadiendo dependencies(librerías) en Gradle Kotlin DSL: Parte I",
          "Añadiendo dependencies(librerías) en Gradle Kotlin DSL: Parte II",
          "Database/App Inspection",
          "Nueva web para los colores de Material Design II"
        ],
        "Bases Previas": [
          "Introducción",
          "Nuevo proyecto + Dependencias de corrutinas",
          "Lambda",
          "Thread",
          "Thread + Lambda",
          "Mi primer corrutina",
          "Conclusión bases previas"
        ],
        "Coroutines nivel básico": [
          "Introducción",
          "GlobalScope",
          "Suspend",
          "RunBlocking",
          "Launch",
          "Async",
          "Job: Ciclo de vida",
          "Job",
          "Deferred",
          "Produce",
          "Coroutines Básico",
          "Conclusión coroutines nivel básico"
        ],
        "Coroutines nivel medio": [
          "Introducción",
          "Dispatchers IO & Unconfined",
          "Dispatchers Main & Default & Personalizado",
          "Anidar corrutinas",
          "Cancelar Job anidado",
          "WithContext",
          "Sequences",
          "Introducción a Flow",
          "Coroutines Medio",
          "Conclusión coroutines nivel medio"
        ],
        "Flow": [
          "Introducción",
          "Cold Flow",
          "Cancelar Flow",
          "Map",
          "Filter",
          "Transform",
          "Take",
          "ToList & Single",
          "First & Last",
          "Reduce",
          "Fold",
          "Buffer",
          "Conflate",
          "Zip & Combine",
          "FlatMapConcat & FlatMapMerge",
          "Control de errores en Flow: Try/catch",
          "Control de errores en Flow: catch",
          "OnCompletion Flow",
          "Cancelable para Flow",
          "Flows",
          "Conclusión Flows"
        ],
        "Coroutines nivel avanzado": [
          "Introducción",
          "Channel",
          "Cerrar channel",
          "Channel & produce",
          "Pipelines",
          "Buffer channel",
          "ExceptionHandler",
          "Exception para async & channels",
          "Aplicando conocimientos de corrutinas",
          "Coroutines Avanzado",
          "Conclusión coroutines nivel avanzado"
        ],
        "App Sports": [
          "Introducción",
          "Configurar API",
          "Explicación de app Sports",
          "Glide & Coil",
          "Cargar imágenes con corrutinas",
          "Retrofit con corrutinas",
          "Diseño de vista para calcular Fibonacci",
          "Calcular Fibonacci sin corrutinas",
          "Calcular Fibonacci con corrutinas",
          "Cancelar Job y captar excepciones",
          "Adaptador con corrutinas",
          "Flow",
          "Conclusiones App Sports"
        ],
        "App List(Room + MVVM + LiveData)": [
          "Introducción",
          "Explicación de app List",
          "Añadir dependencias para corrutinas",
          "Dao & Interactor",
          "ViewModel",
          "Conclusión App List"
        ],
        "Más contenido": [
          "Clase Extra"
        ]
      },
      "requirements": [
        "Conocimiento básico de Kotlin.",
        "Un ordenador con acceso a Internet y Android Studio."
      ],
      "description": "Bienvenido al curso más completo y actualizado de Coroutines y Flows con Kotlin, el cual además incluye prácticas con aplicaciones funcionales en Android, así no solo aprenderás los fundamentos de 0 a 100, si no que verás como trabajan las corrutinas con MVVM, LiveData, Room, Lifecycle, Retrofit y mucho más.\n\n\nEl objetivo principal es que con este curso entiendas a la perfección todo lo relacionado con corrutinas, desde su sintaxis, configuración, modo de trabajo, tipos, integración con Android Jetpack, entre otros. Pero también que mejores la calidad de tus apps, para que si procesas datos, no corras el riesgo de congelar la pantalla del usuario, o hacer que tus aplicaciones dejen de responder.\n\n\nEs por ello que en este curso los temas principales que veremos son:\nBases previas(lambda, threads, sequences).\nScopes.\nFunciones suspendidas.\nConstructores(runBlocking, launch, async, produce).\nJob(ciclo de vida).\nAsync & await.\nDeferred.\nDispatchers(Main, IO, Default, Unconfined y personalizado).\nAnidación.\nCancelamientos(corrutinas, flujos y canales).\nWithContext.\nFlows.\nOperadores(map, filter, transform, take, first, last, reduce, fold, etcétera...).\nFlows con Buffer.\nCombinación(zip, combine, flatmap, concat...).\nCaptación y manejo de errores en Flow.\nDetección de compleción en flujos definidos o infinitos.\nChannels.\nPipelines.\nBuffer para channels.\nException handler.\nIntegración de corrutinas con Retrofit, Room, ViewModel, LiveData, Coil y más.\n\n\nY lo mejor de todo es que tendrás oportunidad de practicar mucho, pues el curso es 100% práctico, nos centramos en explicar cada concepto con un ejemplo a nivel de código. Los fundamentos están 100% con Kotlin, por lo que puedes aplicar los conocimientos en la plataforma de tu preferencia.\nAdemás, consideramos que tu tiempo es muy valioso, por ello este curso tiene escenarios reales con apps de Android nativo, hechas con kotlin que incluyen herramientas modernas y potentes de hoy en día, estas aplicaciones procesarán imágenes en un listado, consultarán APIs para cargar información, trabajarán con operaciones locales en bases de datos, y realizarán cálculos complejos, todas estas tareas de forma simultanea, además claro, de su versión sin corrutinas, para que puedas ver con claridad la gran diferencia de rendimiento y uso responsable de los recursos.\nAl final estarás preparado para crear o migrar aplicaciones del más alto nivel al mundo de las corrutinas, llevándote a un grupo selecto de programadores android capaces de abordar soluciones a problemas comunes y complejos.\n\n\nY por si fuera poco, cuentas con la garantía de 30 días para la devolución de tu dinero, con lo que tu riesgo de inversión es del 0%. Estamos seguros que este curso te ayudará a incrementar tu nivel de habilidades de cara a este futuro cada vez más competitivo, por ello haz click en obtener curso y comienza tu formación ¡Hoy mismo!\n\n\nNos vemos en clase.",
      "target_audience": [
        "Programadores Kotlin que desean aumentar sus conocimientos a un nivel más avanzado y crear aplicaciones de calidad.",
        "Personas que quieran saber como crear apps responsables con el uso de los gráficos, memoria RAM y CPU.",
        "Para quienes no conocen o tienen dudas sobre coroutines y flows.",
        "Desarrolladores que necesitan ejecutar tareas en paralelo y en segundo plano de forma exhaustiva."
      ]
    },
    {
      "title": "Crea da zero e pubblica app per Android con B4A senza Java",
      "url": "https://www.udemy.com/course/crea-da-zero-e-pubblica-app-per-android-con-b4a-senza-java/",
      "bio": "Sviluppo App Android, guadagna un'entrata mensile sviluppando app per Android senza esperienza di programmazione né Java",
      "objectives": [
        "Sarai in grado di creare app per Android e pubblicarle nel Play Store di Google",
        "Saprai come creare autonomamente la grafica per le tue app",
        "Imparerai ad inserire gli annunci di Admob nelle tue app",
        "Potrai crearti un secondo stipendio grazie alla pubblicità nelle tue app"
      ],
      "course_content": {
        "Introduzione e Preparazione Ambiente di Lavoro": [
          "Introduzione",
          "Download e Uso di Zoomit",
          "Preparazione dell'ambiente di lavoro: Installare B4A",
          "Attivazione \"Opzioni Sviluppatore\"",
          "Debug con lo Smartphone"
        ],
        "Hello World - I primi rudimenti e la nostra prima app": [
          "Installazione di BlueStacks",
          "Introduzione all'ambiente di lavoro",
          "I primi rudimenti: Moduli, Activity, Variabili, Commenti e MessageBox",
          "Activity e Label",
          "I Pulstanti",
          "If Then Else",
          "Svolgimento del challenge e creazione nuovo progetto",
          "Primo Quiz",
          "Installazione Inkscape e creazione di due pulsanti",
          "Grafica nei Pulsanti e Impostazioni Generali",
          "Label: colori e formattazione",
          "Gestione label e Immagini",
          "Svolgimento dei challenge",
          "Quiz di fine sezione"
        ],
        "Math Test: Impariamo sviluppando": [
          "Impostazione Nuova App",
          "Impostazioni varie: Package Name, Formattazioni, Tastiera",
          "Numeri Random, Calcoli Matematici, String con Variabili e Messaggi",
          "Nuovi Livelli e Nuovi Controlli",
          "Svolgimento del challenge",
          "Progressbar e Librerie",
          "Coloriamo la progressbar e inseriamo una Hint nella EditText",
          "Mostriamo il Numero di Domanda e il Totale di Errori Commessi",
          "Svolgimento del challenge",
          "Impostiamo uno sfondo grafico",
          "Modalità Script",
          "Quiz di inizio lezione",
          "Un Timer per Mostrare il Tempo",
          "Attivazione del Timer e Logica del Gioco",
          "Challenge e Script per le Scritte",
          "Svolgimento del challenge",
          "Nuova Versione (1.3)",
          "Svolgimento del challenge",
          "L'uso dei Panel",
          "Miglioriamo il layout del Panel",
          "Svolgimento del challenge",
          "Quiz di metà sezione",
          "Versione 1.4: DateTime",
          "Array e Files di Testo",
          "Apriamo e Aggiorniamo un File di Testo Salvato in Precedenza",
          "Sostituzione ciclica degli array più vecchi per registrare nuovi test",
          "Creazione di una nuova Activity",
          "Creazione di una nuova Activity - Parte Seconda",
          "Carichiamo i Dati nella ListView",
          "Carichiamo i Dati nella ListView - Parte Seconda",
          "Creiamo Un Nuovo Panel",
          "Mostriamo i Dati del Test Scelto Nel Panel",
          "Mostriamo i Dati del Test Scelto Nel Panel - Parte Seconda",
          "Svolgimento del Primo Challenge",
          "Svolgimento del Secondo Challenge",
          "Svolgimento del Terzo Challenge",
          "Svolgimento del Quarto Challenge",
          "Versione 1.5: Gestiamo l'Evento Click sul Back Button degli Smartphone",
          "Creiamo la Activity Info",
          "Impostiamo il Layout Grafico della Activity \"Info\"",
          "Impostiamo i Comandi nei Pulsanti della Pagina Info",
          "Creiamo e Aggiungiamo la Privacy Policy",
          "Quiz di fine sezione"
        ],
        "Calcolatore Del Bioritmo: una App Multilanguage": [
          "Presentazione della Nuova App",
          "Impostiamo la Nuova App",
          "Creiamo una Immagine Title",
          "Impostiamo i Bottoni",
          "Creiamo un File per i Settaggi",
          "Creiamo la Activity ChooseLanguage",
          "Completiamo la Activity delle Lingue",
          "Svolgimento del challenge - Parte Prima",
          "Svolgimento del Challenge - Parte Seconda",
          "Versione 1.1: Inserimento Data con DatePicker",
          "Versione 1.1: Inserimento Data con DatePicker - Parte Seconda",
          "Salviamo la data inserita",
          "Salviamo la data inserita - Parte Seconda",
          "Svolgimento del challenge",
          "Nuova Versione (1.2): Miglioriamo la Gestione della Data",
          "Svolgimento del challenge",
          "Calcoliamo il numero di giorni vissuti",
          "Calcoliamo i 3 Cicli",
          "Aggiunta di Moduli e Activity Prefabbricati",
          "Immagini per Info e Musica di Sottofondo",
          "Creiamo e Aggiungiamo un Pulsante Audio",
          "Aggiungiamo la Pagina Credits",
          "Aggiungiamo la Pagina Credits - Parte Seconda"
        ],
        "App Test con Risposte Multiple": [
          "Creiamo il Motore del Test",
          "Creiamo il Motore del Test - Parte Seconda",
          "Domande e Valutazioni Finali del Test",
          "Un'Altro Modo di Calcolare le Risposte"
        ],
        "Pubblicazione nel Google Play Store": [
          "Account Google Dev . Icona - File Apk",
          "Account Google Dev . Icona - File Apk (Parte Seconda)",
          "Pagina del Prodotto",
          "Completiamo la Scheda",
          "Pubblichiamo l'App"
        ],
        "Implementazione di Annunci AdMob": [
          "Iscrizione a AdMob e Firebase",
          "File JSON e Manifest (Aggiornata 4 aprile 2018)",
          "Banner e Interstitial",
          "Codici AdMob e Aggiornamento Versione"
        ],
        "Sezione Bonus": [
          "Il Forum di B4A",
          "Aggiornamento per la Versione B4A 7.80",
          "Variazione a Math Test con 4 risposte possibili (22 Aprile 2018)",
          "Creazione di un account su Wordpress.com per ospitare la privacy policy (4/5/18)",
          "Che Fare Adesso? (Consigli, Saluti e Coupons Sconto)"
        ]
      },
      "requirements": [
        "Bisogna essere in grado di utilizzare un PC con Windows",
        "Avere delle basi di programmazione può essere utile ma anche senza basi è possibile seguire il corso senza problemi",
        "Avere voglia di imparare nuove cose e migliorarsi"
      ],
      "description": "Android oggigiorno è uno dei sistemi operativi più usati al mondo.\n\nSe hai sempre sognato di diventare autonomo e ottenere un'entrata mensile lavorando con il tuo computer e sviluppando app per smartphone con sistema operativo Android questo è il corso che fa al caso tuo!\nImparerai a svilupapre app per Android utilizzando la piattaforma Basic For Android (B4A), in modo semplice e immediato, senza bisogno di imparare il linguaggio Java. Questo corso è adatto a tutti, anche a chi non ha esperienza di programmazione di alcun genere, i temi e gli argomenti vengono esposti in maniera semplice e diretta con esempi pratici e immediati.\nDurante il corso verranno sviluppate varie app di varia utilità, ad esempio verrà creato un Quiz di Matematica che proporrà calcoli random agli utenti e registrerà i risultati ottenuti dai giocatori. Poi verrà sviluppata una app per calcolare il Bioritmo degli utenti, questa app sarà in 3 lingue, italiano, spagnolo e inglese e gli utenti potranno scegliere la propria lingua. Inoltre svilupperemo anche una app per eseguire vari test, impareremo il funzionamento e la gestione dei test e voi potrete sfruttarla per creare i vostri test personalizzati.\n\nIl corso è adatto sia a chi già ha esperienza di programmazione (per Windows, iOS, Android, Java, ecc.) e sia a chi è alle prime armi, nessuno viene lasciato indietro. Verrai guidato passo dopo passo in ogni fase fino a raggiungere un livello che ti permetterà di creare autonomamente app di vario genere per i dispositivi con Android. Potrai sviluppare app per smartphone e tablet e sarai in grado di pubblicarle nel Google Play store.\nTi verrà insegnato come implementare gli annunci di AdMob all'interno delle tue app per Android in modo di ottenere un guadagno costante mensile.\nUn corso davvero completo che ti insegnerà ogni aspetto e ogni trucco di questo tipo di lavoro. Oggi giorno sempre più persone stanno entrando nel mercato delle app e riescono a crearsi la propria indipendenza economica grazie alle nuove possibilità che offre l'enorme mercato delle app e il vasto universo di Android. Si stima che entro pochi anni il mercato delle applicazioni potrà addirittura triplicare, non perdere l'occasione di ricavarti una tua fetta in questa incredibile opportunità.\nInoltre avrai la sicurezza del rimborso totale entro 30 giorni se il corso non sarà di tuo gradimento... che chiedere di più?",
      "target_audience": [
        "Chi vuole imparare ad utilizzare Basic For Android (B4A) per creare app per Android",
        "Chi vuole ottenere un'entrata aggiuntiva sviluppando app di varia utilità e genere",
        "Chi vuole imparare l'arte dello sviluppo delle app e magari farne un lavoro",
        "Chi vuole approfondire le proprie conoscenze nel mondo delle app",
        "Chi vuole mettere in pratica una sua idea per una nuova app",
        "Chi sa già programmare per altre piattaforme e vuole cominciare a programmare app per Android"
      ]
    },
    {
      "title": "Crea una agenda de notas online en Android Studio y Firebase",
      "url": "https://www.udemy.com/course/crea-una-agenda-de-notas-con-android-studio-y-firebase/",
      "bio": "Firebase , Anuncios con Google Admob , Verificación , Contactos , Llamadas , SMS, Cámara, Galería , Calendarios",
      "objectives": [
        "Creación de una aplicación Android desde cero",
        "Código fuente completo",
        "Programación orientada a objetos",
        "Validación de datos",
        "Integración de Firebase",
        "Cargar datos en tiempo real desde Firebase",
        "Manejo de datos en tiempo real (CRUD)",
        "Registro de usuarios",
        "Inicio de sesión de usuarios",
        "Verificar usuario por correo electrónico",
        "Editar información de un usuario",
        "Listar notas",
        "Crear un buscador de registros",
        "Enviar, Recuperar y Visualizar Datos",
        "Configuración del perfil del usuario",
        "Manejo de estados de la nota",
        "Permisos de usuario",
        "Gestionar archivos multimedia desde la Galería",
        "Implementación de selector de código telefónico por país",
        "Elegir imágenes desde la galería del dispositivo",
        "Tomar fotografías desde cámara del dispositivo",
        "Subir imágenes al servidor de Firebase",
        "Cargar imágenes desde el servidor de Firebase",
        "CRUD contactos del usuario",
        "Realizar llamadas telefónicas",
        "Enviar mensajes SMS",
        "Uso de iconos y animaciones con Lottie",
        "Implementación de Menús",
        "Uso de LinearLayout, RelativeLayout, CardView",
        "Diseño de pantallas con XML",
        "Implementar calendario",
        "Implementación de RecyclerView",
        "Implementación de fuente de letra",
        "Uso de actionbar",
        "Uso de spinners",
        "Gestionar estados de la red",
        "Cuadros de diálogos personalizados"
      ],
      "course_content": {},
      "requirements": [
        "Conocimientos básicos de un lenguaje de programación orientado a objetos.",
        "Una laptop o computadora con procesador Core I5 o superior de 4GB de RAM o más."
      ],
      "description": "El presente curso va dirigido para estudiantes universitarios, autodidactas o ingenieros de [Sistemas - Software] que requieran diseñar y desarrollar sus propias aplicaciones móviles, en este curso aprenderás a desarrollar una agenda de notas en el entorno de desarrollo Android Studio de una manera profesional y totalmente desde cero, aprenderás a construir su diseño hasta la implementación de todas las funcionalidades, usaremos el servidor en la nube Firebase para un ágil desarrollo de nuestro proyecto, nos será de gran utilidad para la autenticación de usuarios, registros de información, edición de datos, almacenamiento multimedia, entre otros, todo lo mencionado será visualizado en tiempo real.\nEl curso pretende estar actualizado cuando sea necesario, aplicaremos las buenas prácticas de programación, y tendrás a disposición el código fuente por cada clase realizada.\nAl finalizar el curso tendrás ideas concretas para tus futuros proyectos personales o empresariales, sólo necesitas de conocimientos básicos en programación orientada a objetos, sin embargo a lo largo del curso hago hincapié en varios temas específicos para que todos podamos seguir la construcción de la aplicación, te garantizo que todas las clases han sido realizadas con el máximo esfuerzo y dedicación para la comprensión de todos los estudiantes. Sin más que añadir eres Bienvenido o Bienvenida al curso.",
      "target_audience": [
        "Para estudiantes de ingeniería de software, ingeniería de sistemas o afines.",
        "Profesionales de ingeniería de software, Ingeniería de Sistemas o afines.",
        "Programadores interesados en el desarrollo de aplicaciones móviles."
      ]
    },
    {
      "title": "The Complete Flutter Development Guide",
      "url": "https://www.udemy.com/course/fluttercourse/",
      "bio": "دليلك الكامل في الفلاتر لبناء تطبيقات الاندرويد والايفون بكود واحد ولغة برمجية واحدة",
      "objectives": [
        "تعلم الفلاتر من الالف الى الياء خطوة بخطوة",
        "انشاء تطبيقات موبايل بكفاءة النيتف لكل من الاندرويد والايفون",
        "استخدام ميزات عديدة مثل كامرة الجهاز والمصادقة وغيرها",
        "تعلم كل الأساسيات دون توقف وبعدهم: تعمق في الدارت والفلاتر لتصبح مطورًا متقدمًا",
        "فهم جميع المفاهيم الأساسية لتطوير فلاتر",
        "كن بارعًا في واحدة من أسرع التقنيات نموًا"
      ],
      "course_content": {
        "Introduction": [
          "What is Flutter",
          "Supported OS",
          "Flutter Easy Installation",
          "Windows Flutter Installation #2",
          "Mac Flutter Installation #1",
          "Mac Flutter Installation #2",
          "Finish Xcode setup",
          "Intro to VS Code",
          "Terms of Use",
          "About the Instructor",
          "Reviewing the Course",
          "Full Code"
        ],
        "Dart Review": [
          "Get my Age",
          "Where Functions #1",
          "Where Functions #2",
          "Iterable, Map and Spread Operator",
          "Platform",
          "Extension Function",
          "Dart Packages",
          "Dart Soundness Null Safety",
          "required & late keywords",
          "Dart Final Project",
          "Dart Code Reviewing",
          "Linting Rules"
        ],
        "App #1 Roll Dice": [
          "Project Files",
          "First App",
          "Widget Tree",
          "Colors",
          "Gradient",
          "Text Style",
          "Stateless Widget",
          "Final vs Const",
          "Reusable Widget",
          "Images",
          "Column vs Row",
          "Buttons",
          "On Pressed Function",
          "Button Style",
          "Stateful Widget",
          "Random"
        ],
        "App #2 Quiz": [
          "Review",
          "Transparency",
          "Screens Transition",
          "Model",
          "Answer Button",
          "Map Function",
          "Shuffled Answers",
          "Install Package",
          "User Answer",
          "Restart Quiz",
          "Result Page",
          "Result Style",
          "Result Finishing",
          "Finishing"
        ],
        "App #3 Expenses": [
          "Introduction",
          "Uuid",
          "List View",
          "Expense Item",
          "Bottom Sheet",
          "Text Field",
          "Pop Sheet",
          "Date Picker",
          "DropDown Button",
          "Validation",
          "Alert Dialog",
          "Add Expense",
          "Dismissible",
          "Themes",
          "Apply Themes",
          "Expense Bucket",
          "Chart",
          "Chart Bar"
        ],
        "App #3 Responsive": [
          "Landscape",
          "Responsive Sheet",
          "Lock Orientation",
          "Layout Builder",
          "Adaptive"
        ],
        "App #4 Meal App": [
          "Grid View",
          "Categories",
          "Inkwell",
          "Navigator",
          "Meal Filter",
          "Stack",
          "Positioned",
          "Item Triet",
          "Detail Screen",
          "Details Finishing",
          "Bottom NavBar",
          "Favorites",
          "Drawer",
          "Filters Screen",
          "Set Filters",
          "Pass Filters",
          "Finishing"
        ],
        "App #4 State Management": [
          "Introduction",
          "Provider",
          "Favorites Provider",
          "Toggle Favorite",
          "Filter Provider",
          "Set Filter",
          "Proxy Provider",
          "Favorites Icon",
          "NavBar Provider"
        ],
        "App #4 Animation": [
          "Animated Container",
          "Positioned & Align",
          "Slider",
          "Transform",
          "transform",
          "Tween Animation",
          "Explicit",
          "Transitions",
          "Custom Explicit",
          "Hero",
          "Application",
          "Animated Switcher"
        ],
        "App #5 Shop": [
          "Models",
          "Home Screen",
          "Text Form Field",
          "DropDown FormField",
          "Form Key",
          "Form Save",
          "Add Item",
          "API Introduction",
          "Postman",
          "Post",
          "Get",
          "Decode Data",
          "Update Data",
          "Loading State",
          "Error State",
          "Delete",
          "Empty State",
          "Catch Error"
        ]
      },
      "requirements": [
        "تحتاج ان تكون لديك اساسيات لغة الدارت حتى تبدأ مع هذه الدورة"
      ],
      "description": "Notice: The Maximilian [Academind] course was adopted as a primary reference for this course\nملاحظة: تم اعتماد دورة ماكس كمرجع اساسي لهذه الدورة\n\n\n*تم تحديث جميع تطبيقات الدورة لتدعم نسخة الفلاتر 3.15\n\n\nفي هذه الدورة المتكاملة فلاتر [المرجع الشامل] افترض الشخص اللي امامي لا يعرف اي شيء عن الفلاتر وعن البرمجة التطبيقات اصلا\nسأخذك خطوة بخطوة من الصفر الى انشاء تطبيقات حقيقية للاندرويد والايفون\n\n\nJoin the most comprehensive & bestselling Flutter course and learn how to build amazing iOS and Android apps!\n\n\nYou don't need to learn Android/ Java and iOS/ Swift to build real native mobile apps!\nFlutter - a framework developed by Google - allows you to learn one language (Dart) and build beautiful native mobile apps in no time. Flutter is an SDK providing the tooling to compile Dart code into native code and it also gives you a rich set of pre-built and pre-styled UI elements (so-called widgets) which you can use to compose your user interfaces.\nFlutter is extremely trending and gets used for major Google apps like their Adwords app - it's now marked as \"ready for production\", hence now is the time to jump in and learn it!\nThis course will teach Flutter from scratch, NO prior knowledge of either of the two is required! And you certainly don't need any Android or iOS development experience since the whole idea behind Flutter is to only learn one language.\nYou'll learn Flutter not only in theory but we'll build a complete, realistic app throughout this course. This app will feature both all the core basics as well as advanced features like using Google Maps, the device camera, adding animations and more!\nWith Flutter, you'll be able to write code only once and ship your apps both to the Apple AppStore and Google Play.\nUse Google's Material Design to build beautiful, yet fully customizable, apps in no time with almost zero effort. You can use the rich widget suite Flutter provides to add common UI elements like buttons, switches, forms, toolbars, lists and more - or you simply build your own widgets - Flutter makes that a breeze, too.\nHere's what's included in the course:\nDetailed setup instructions for  Windows.\nA thorough introduction to Flutter and the concept behind widgets.\nAn overview of the built-in widgets and how you may add your own ones\nPage navigation with tabs, side drawers and stack-based navigation\nState management solutions\nHandling and validating user input\nConnecting your Flutter app to backend servers by sending Http requests\nUser authentication\nUsing native device features like the camera\nAdding beautiful animations & page transitions\nImage Upload\nAnd more!\n\n\nThis course is for you if\nYou're interested in building real native mobile apps for the two most popular mobile platforms - iOS and Android\nYou want to explore the full set of features Flutter offers\nDon't want to spend hours learning two completely different languages",
      "target_audience": [
        "لكل شخص يريد انشاء تطبيقات الاندرويد وال ios باستخدام فلاتر"
      ]
    },
    {
      "title": "Curso de Android 14 con Kotlin: Intensivo y práctico",
      "url": "https://www.udemy.com/course/kotlin-intensivo/",
      "bio": "Kotlin para Android Studio en Español: Firebase, MVVM, API REST, Room, Play Store, Coroutines, LiveData, Jetpack Compose",
      "objectives": [
        "Diseño, creación y desarrollo de aplicaciones Android en la última versión del sistema operativo con Kotlin.",
        "MVVM y LiveData, patrón de diseño que dividirá correctamente nuestros archivos y código en Android.",
        "Consumo de API REST con envío de parámetros en formato JSON.",
        "Uso del lenguaje de programación Kotlin en Android Studio",
        "Singleton, Volley y Gson.",
        "Almacenamiento local permanente con SharedPreferences y Room(SQLite).",
        "Servicios en la nube con Firebase, bases de datos NoSQL(Realtime Database), servidores multimedia(Cloud Storage), servicio de autenticación(Authentication).",
        "Firmar, subir y publicar tus propias aplicaciones a la Google Play Store.",
        "Programar tus propias Aplicaciones para Android y entender en verdad cómo y por qué funcionan.",
        "Buenas prácticas, a nivel código, recursos, Jetpack, UX/UI.",
        "Compatibilidad con múltiples dispositivos, idiomas, tamaños de pantalla y más.",
        "Coroutines en entornos con MVVM, LiveData y Room.",
        "Creación de vistas con XML o Jetpack Compose."
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "¿De qué va el curso? ¿Qué tipo de aplicaciones haremos?",
          "Presentación del instructor",
          "No valores el curso antes de ver más clases",
          "Cómo usar el foro",
          "Comunidad de Discord para aprender con amigos",
          "Preguntas y soluciones comunes."
        ],
        "Actualizaciones generales": [
          "Instrucciones importantes para actualizaciones",
          "Crear y configurar un proyecto nuevo con Gradle Kotlin DSL",
          "Habilitar DataBinding y ViewBinding en Gradle Kotlin DSL",
          "Añadiendo dependencies(librerías) en Gradle Kotlin DSL: Parte I",
          "Añadiendo dependencies(librerías) en Gradle Kotlin DSL: Parte II",
          "Database/App Inspection",
          "Nueva web para los colores de Material Design II"
        ],
        "Primera app: Hola Kotlin": [
          "Introducción ¿De que va la sección?",
          "Instalar Android Studio en Mac OS",
          "Crear un dispositivo virtual(Mac)",
          "Instalar Android Studio en Windows 10",
          "Crear un dispositivo virtual(Windows 10)",
          "Android 12: Información importante del curso",
          "Android 13: Actualización",
          "Android 14: Actualización",
          "Crear primer proyecto",
          "Acceder a la vista desde Kotlin",
          "Configurar TextToSpeach",
          "Lectura de texto con el asistente",
          "Mejoras visuales",
          "Cambio de idioma",
          "Mejores prácticas",
          "Mejoras de código",
          "Migrar un proyecto por API de Android",
          "Mi primer app en Kotlin",
          "Conclusiones App Hola Kotlin"
        ],
        "Fundamentos de Kotlin": [
          "Introducción ¿De que va la sección?",
          "Nuevo proyecto para ejecutar Kotlin puro",
          "Primera función",
          "Constantes y variables",
          "Datos nulos y de cualquier valor(objeto)",
          "Funciones nivel medio",
          "Retorno de datos",
          "Infix",
          "Sobrecarga de métodos",
          "Arreglo de argumentos",
          "Bucles for y while",
          "Sentencia when",
          "Const",
          "Tu primer función",
          "Fundamentos de Kotlin",
          "Conclusiones Fundamentos Kotlin"
        ],
        "POO en Kotlin": [
          "Introducción ¿De que va la sección?",
          "Primera Clase: Phone",
          "Herencia",
          "Data class",
          "Enum",
          "Funciones de alcance",
          "ListOf (solo lectura)",
          "MutableListOf (estructuras dinámicas)",
          "MutableMapOf",
          "Clase personalizada",
          "POO en Kotlin",
          "Conclusiones POO Kotlin"
        ],
        "Layouts": [
          "Introducción ¿De que va la sección?",
          "Nueva app, configuración base.",
          "LinearLayout",
          "Márgenes",
          "FrameLayout",
          "AP: FrameLayout",
          "ConstraintLayout",
          "ConstraintLayout II",
          "Diseños adaptativos con ConstraintLayout",
          "AP: Diseños con ConstraintLayout",
          "ScrollView",
          "Completa los diseños",
          "Layouts",
          "Conclusiones Layouts"
        ],
        "Material Design Components": [
          "Introducción ¿De qué va la sección?",
          "Nueva app MDC",
          "BottomAppBar",
          "Floating Action Button",
          "Material CardView",
          "Margenes con lineamientos de Google.",
          "Material Button",
          "UI para TextView",
          "ImageView",
          "EditText",
          "Text Fields - TextInputLayout y TextInputEditText",
          "Text Fields - Password",
          "Material CheckBox",
          "Divider",
          "Material Button Toggle",
          "UI mejores prácticas",
          "Animación para FloatingActionButton",
          "View Binding",
          "Alternativa para activar ViewBinding",
          "Snackbar",
          "Ocultar vistas y evento de Click",
          "Acceso a vistas alternas con ViewBinding",
          "Snackbar & Toast",
          "Actualización previa a Glide",
          "Glide 4.11 con Android Studio Artic Fox o inferior.",
          "Glide 4.16.0 con Android Studio Bumblebee o superior",
          "Checkbox evento de Click",
          "Detectar foco en tiempo real",
          "Mejores prácticas al cargar una imagen",
          "Notificar por URL vacía",
          "Validar URL",
          "Cambiar color con evento de MaterialButtonToogle",
          "MDC",
          "Tarjeta personalizada",
          "Mejoras de código",
          "Switch",
          "Slider",
          "Chip",
          "Conclusiones MDC"
        ],
        "Ciclo de vida en Android": [
          "Introducción ¿De qué va la sección?",
          "Nueva app LifeCycle",
          "Start, Resume y Pause",
          "Stop, Restart y Destroy",
          "MediaPlayer",
          "Mejores prácticas",
          "Demostración con un Dialog.",
          "Cierre por seguridad",
          "LifeCycle",
          "Mejoras de código",
          "Conclusiones LifeCycle"
        ],
        "1º Proyecto: Users SP": [
          "Introducción ¿De qué va la sección?",
          "Nueva app Users SP",
          "Diseño de RecyclerView y Data Class",
          "Adapter: ViewHolder",
          "Adapter: Configuración restante",
          "RecyclerView: Configuración",
          "Generar datos",
          "Complementar información",
          "Cargar imagen con Glide",
          "Imágenes circulares",
          "Nombre completo desde data class",
          "UI: Divider y TextAppearance",
          "Interface para eventos del adapter",
          "SharedPreferences, primeros pasos",
          "Almacenar un dato permanentemente",
          "Dialogos con Material Design",
          "Dialog: Vista personalizada",
          "Almacenar String desde evento del Dialog",
          "Dialog: Mejores prácticas",
          "Vista alternativa",
          "Logo",
          "Usuario invitado",
          "Mejoras de código",
          "Validar nombre de usuario",
          "Eliminar con gestos",
          "App Users SP",
          "Conclusiones Shared Preferences"
        ],
        "2º Proyecto: Stores": [
          "Introducción ¿De qué va la sección?",
          "Nueva app Stores",
          "Diseño item: Imagen y Card",
          "Diseño item: Texto y Favoritos",
          "Estados",
          "Diseño principal",
          "Vista para añadir(básica)",
          "Listener & ViewHolder",
          "Adapter",
          "RecyclerView: Configuración",
          "Agregar datos en memoria",
          "Room",
          "Entity",
          "DAO",
          "Database con buenas prácticas",
          "Insertar registro en segundo plano",
          "Consultar todas las tiendas",
          "Actualizar registro",
          "Eliminar un registro",
          "Fragment",
          "TextField: nombre",
          "TextField: teléfono y sitio web",
          "TextField: imagen & Preview: ImageView",
          "Fragment: Lanzamiento",
          "Barra de Acciones",
          "Menú en Fragment",
          "Selección de un menú",
          "Restaurar barra de acciones",
          "Insertar registro desde Fragment",
          "Ocultar el teclado",
          "Interface para comunicar Fragment y Activity",
          "Mejores prácticas",
          "Toast y Glide",
          "Alter Table",
          "Enviar argumentos a Fragment",
          "Consulta por ID",
          "Configurar vista para actualizar",
          "Extension para clase String",
          "Actualizar registro desde Fragment",
          "Equal & HashCode",
          "Validar TextFields: Foco",
          "Validar múltiples TextFields",
          "Validar TextFields en tiempo real",
          "Ultimas configuraciones a los TextFields",
          "ActionBar: Título",
          "MaterialAlertDialog",
          "Dialog: Opción múltiple y de Confirmación",
          "Intent: Marcar teléfono",
          "Intent: Sitio Web",
          "Validar apps compatibles",
          "Queries Intent para API 30",
          "Mejores prácticas: ArrayString",
          "AP: Recursos",
          "Soporte para múltiples idiomas",
          "Colores",
          "Recursos Alternos",
          "AP: Logo",
          "Mejoras",
          "App Stores",
          "Mejoras de código",
          "Optimizar código",
          "Aprovechar nuevo onBackPressed",
          "Conclusiones SQLite"
        ]
      },
      "requirements": [
        "Solo requieres tener un ordenador para poder programar; no importa qué sistema operativo: Android Studio está disponible para todos!",
        "Acceso a Internet",
        "Conocimientos básicos de programación(cualquier lenguaje, preferible orientado a objetos)"
      ],
      "description": "Bienvenido a nuestro curso completo de Android con Kotlin intensivo y práctico donde desde cero y sin experiencia, previa aprenderemos juntos a crear aplicaciones nativas actuales con Kotlin el lenguaje oficial para hacer apps en Android Studio.\nDurante el curso tendremos ocasión de aprender muchas cosas juntos, incluyendo todo lo que necesitas para convertirte en un desarrollador Android y a utilizar como un profesional el lenguaje Kotlin. Por ello nuestro curso incluirá:\nDescarga e instalación de la versión más nueva de Android Studio(Mac OS y Windows).\nSintaxis del lenguaje de programación Kotlin básico-avanzado.\nMúltiples formas de declarar y mandar a llamar funciones en Kotlin.\nTipos de datos, operadores y estructuras más utilizadas en la creación de apps.\nProgramación Orientada a Objetos, herencia, clases, visibilidad, métodos y propiedades.\nTodos los Layouts más comunes y poderosos, LinearLayout, ConstraintLayout, ScrollView, etcétera.\nMDC(Material Design Components) los elementos visuales más modernos.\nEl ciclo de vida completo para Activity y Fragment.\nCómo navegar dentro de una app Android.\nComponentes y bibliotecas basados en android Jetpack.\nCreación de aplicaciones comunes con varios diseños y comportamientos.\nDiseños en android, lineales o con varias columnas.\nListados modernos con ReciclerView, Adaptadores, ViewHolder.\nComunicación por medio de Interfaces personalizadas.\nCarga de imágenes desde Internet.\nIntents para lanzar actividades propias o de terceros.\nServicios en la nube con Firebase.\nBases de datos NoSQL con Realtime Database.\nServidor multimedia con Cloud Storage.\nAutenticación segura con email/contraseña o Google.\nEmulación de dispositivos android con AVD.\nEventos de click o cambios(listeners).\nFragments.\nDialogos.\nMenús.\nPrincipios de UX & UI.\nPaso de argumentos entre pantallas.\nAcceso y uso de la galería.\nCorrutinas.\nBases de datos locales con SQLite.\nValidaciones de campos o tipos de datos.\nSoporte para múltiples idiomas.\nRecursos para Strings, Dimensiones, Enteros, Drawables y más.\nPermisos para almacenamiento o acceso a Internet.\nDependencias oficiales o recomendadas(Anko, Room, FirebaseUI, Glide).\nTextToSpeach para que tus apps puedan hablar.\nMVVM, el patrón de diseño más popular para android.\nComunicación a través de LiveData entre la vista y ViewModel.\nConsumo de API REST( RESTful ), con parámetros en formato JSON.\nPatrón de diseño Singleton.\nVolley y Gson.\nFirmar y publicar tus aplicaciones en la Play Store.\nConsumo de Web Services con Retrofit.\nTesting, pruebas unitarias e instrumentadas.\nDiseño de vistas con Jetpack Compose.\nTodo con Buenas Prácticas.\nCon estos y otros temas, serás capaz de crear tus primeras aplicaciones de una forma más profesional, moderna, rápida y segura.\nEste curso cuenta con tareas y actividades prácticas que te permitirán reforzar tus nuevas habilidades como programador, además de ello, si tienes alguna duda con los temas vistos en cualquier clase, adelante, estamos aquí para resolver todas tus preguntas.\nAdemás, como siempre en nuestro curso tienes una garantía de devolución de tu dinero del 100% durante 30 días, por tanto si tomas el curso y no te convence, tendrás un riesgo totalmente nulo. Te esperamos en clase, así que haz click ya en el botón de tomar este curso ahora mismo y ¡¡nos vemos en clase!!",
      "target_audience": [
        "Personas que quieren aprender a crear apps y a programar desde cero para Android utilizando el lenguaje Kotlin",
        "Personas que buscan un curso actualizado con la ultima versión de Android OS y Android Studio",
        "Desarrolladores que desean actualizarse con conocimiento de Android(Java) y del nuevo lenguaje Kotlin.",
        "Cualquiera con ganas de llegar a ser un programador profesional de apps nativas."
      ]
    },
    {
      "title": "Ionic 4/5 - Criando Catálogo de Produtos",
      "url": "https://www.udemy.com/course/ionic-4-criando-catalogo-de-produtos/",
      "bio": "Catálogo Profissional com Ionic + Mysql + PHP + Bitbucket",
      "objectives": [
        "Criar um catálogo de produtos profissional usando ionic 4 + mysql + php"
      ],
      "course_content": {
        "Introdução ao Curso": [
          "Introdução"
        ],
        "Montando Ambiente": [
          "Montando ambiente de desenvolvimento"
        ],
        "Banco de Dados": [
          "Modelagem do banco de dados mysql",
          "Criando Relacionamento entre as tabelas",
          "Criando Banco de Dados"
        ],
        "Criando Aplicativo": [
          "Correção Http",
          "Pré requisitos para criar app",
          "Criando aplicativo Ionic",
          "Criando tela de Catálogo de produtos",
          "Retornando dados do Banco de Dados Mysql",
          "Retornando imagens dos produtos"
        ],
        "Criando Tela de Login - Completo": [
          "Criando Tela de Login - parte 1",
          "Criando Tela de Login - parte 2",
          "Criando Tela de Login - parte 3",
          "Criando Tela Login - parte 4"
        ],
        "Controle de Versão": [
          "Criando uma conta no bitbucket",
          "Enviado os arquivos para nosso repositório - Git Push"
        ],
        "Servidor Online": [
          "Configurando Servidor Online",
          "Apontando para servidor Online"
        ],
        "Gerando Aplicativo": [
          "Instalando Android Studio e Gerando APK",
          "Configurando e Instalando API Level 27 (OREO)",
          "Gerando APK Debug",
          "Instalando e Testando APP"
        ],
        "Enviando Dados para o Servidor": [
          "Navegando entre telas",
          "Criando Formulário Para Publicar Produtos",
          "Publicando Produtos"
        ],
        "Menu de Navegação": [
          "Método para pegar dados do usuário logado",
          "Exibindo os dados do usuário logado",
          "Pegando ID do usuário que está publicando produto",
          "Criando Service Menu",
          "Listando Itens no menu de navegação",
          "Validação dos Menus"
        ]
      },
      "requirements": [
        "O básico de HTML, CSS, PHP e JavaScript"
      ],
      "description": "Neste curso o aluno terá a capacidade de criar aplicativos profissionais, usando recursos como listagem de dados a partir de um banco de dados mysql, captura de fotos, estilização do aplicativo, conceitos sobre controle de versão utilizando bitbucket, criando novos conceitos do ionic 4, publicar na loja oficial da google...",
      "target_audience": [
        "Todos os apaixonados por tecnologia que desejam ter uma melhor performance com programação mobile"
      ]
    },
    {
      "title": "Movie App - Jetpack Compose, Kotlin, Testes e muito mais.",
      "url": "https://www.udemy.com/course/movie-app/",
      "bio": "Não perca tempo e aprimore duas habilidades!",
      "objectives": [
        "Utilizaremos Kotlin - Linguagem oficial para desenvolvimento de aplicativos android.",
        "Recupere dados de APIs usando a biblioteca Retrofit e exibindo-os em seu aplicativo",
        "Implementar a arquitetura MVVM em seus aplicativos.",
        "Usando a biblioteca Room para salvar, atualizar e excluir dados em um banco de dados local.",
        "Daremos ênfase aos testes, essenciais para garantir a estabilidade e escalabilidade de seu aplicativo."
      ],
      "course_content": {
        "Indrodução": [
          "Introdução"
        ],
        "Comunidade Discord": [
          "Comunidade Discord"
        ],
        "Iniciando Projeto": [
          "CleanArquiteture",
          "Conhecendo o Projeto",
          "Conhecendo o TMDB",
          "Colocando nossa apiKey no projeto",
          "[Atualizado] Como pegar nossa APIKEY",
          "Mapeando classes para Filmes Populares",
          "Mapeando classes para Detalhes do Filme",
          "Mapeando classes para Pesquisa de Filme",
          "Criando a interface MovieService",
          "Criando classe ParamsInterceptor",
          "Configura Hilt e Timber",
          "Implementa NetworkModule",
          "Utils - Camada Core",
          "Criando classes de domínio",
          "Implementa a bottomNavigationBar",
          "Implementa NavigationGraph"
        ],
        "Movie Popular Feature": [
          "Configurando pacotes",
          "Implementa MoviePagingSource, Repository e Source",
          "Implementa GetPopularMoviesUseCase",
          "Configura modulo de DI",
          "Implementa MovieRate",
          "Implementa MovieItem",
          "Implementa MovieContent",
          "Implementa ViewModel e State",
          "Implementa MoviePopularScreen",
          "Tratando estados da lista paginada"
        ],
        "Movie Search Feature": [
          "Implementa SearchPagingSource, Repository e Source",
          "Implementa UseCase",
          "Implementa modulo de DI",
          "Implementa SearchComponent",
          "Implementa SearchContent",
          "Implementa ViewModel",
          "Implementa MovieSearchScreen",
          "Corrige erros de Loading e Espaçamento"
        ],
        "Movie Detail Feature": [
          "Implementa Repository, Source e PagingSource",
          "Implementa GetMovieDetailsUseCase",
          "Implementa Modulo DI",
          "Implementa Componente DetailImage",
          "Implementa Componente GenreTag",
          "Implementa Componente MovieInfo",
          "Implementa Componente Overview",
          "Implementa Componente MoviesSimilar",
          "Implementa Componente RatingBar",
          "Implementa Componente MovieContent",
          "Implementa MovieDetailViewModel",
          "Implementa MovieDetailScreen"
        ],
        "Movie Favorite Feature": [
          "Implementa Entity, Dao e DataBase",
          "Di - RoomModule",
          "Repository e Source",
          "AddMovieFavoriteUseCase",
          "Implementa demais Casos de Uso",
          "Configura DI",
          "Implementa Componente MovieFavoriteItem",
          "Implementa Componente MovieFavoriteContent",
          "Implementa ViewModel e State",
          "Implementa MovieFavoriteScreen",
          "Implementa funcionalidade de favoritar",
          "Splash Screen"
        ],
        "Refatoração": [
          "Melhorando nossa busca de Filmes",
          "Escondendo a BottomNavigation em DetailsScreen",
          "Implementa AsyncImageUrl",
          "Implementa MovieAppBar",
          "Tratamento de lista de filmes vazia"
        ],
        "Testes - Room": [
          "Testes Unitários",
          "Testes Unitários no Android",
          "Frameworks de Teste",
          "Adicionando dependências de testes",
          "Implementa HiltTestRunner e TestAppModule",
          "Padrão GWT - (dado-quando-então)",
          "Implementa testes para pegar todos os filmes",
          "Implementa testes para pegar todos os filmes ordenados pelo id",
          "Implementa testes para pegar um filme por id",
          "Implementa testes para inserir vários filmes",
          "Implementa testes para inserir um filme",
          "Implementa testes para verificar se um filme foi favoritado",
          "Implementa testes para atualizar e deletar um filme favorito"
        ],
        "Testes - ViewModels, PagingSource e UseCases": [
          "Implementa testes para ViewModel de Filmes Populares - 01",
          "Implementa testes para ViewModel de Filmes Populares - 02",
          "Implementa testes para ViewModel de Pesquisa de Filmes",
          "Implementa testes para ViewModel de Filmes Favoritos",
          "Implementa testes para ViewModel de Detalhes de Filmes - 01",
          "Implementa testes para ViewModel de Detalhes de Filmes - 02",
          "Implementa testes para ViewModel de Detalhes de Filmes - 03",
          "Implementa testes para PagingSource Filmes Populares - 01",
          "Implementa testes para PagingSource Filmes Populares - 02",
          "Implementa testes para PagingSource de Pesquisa de Filmes",
          "Implementa testes para PagingSource Filmes Similares",
          "Implementa testes para UseCase de Adicionar Filme Favorito",
          "Implementa testes para UseCase de Deletar Filme Favorito",
          "Implementa testes para UseCase de Listar Filmes Favoritos",
          "Implementa testes para UseCase que Verifica um Filme Favorito",
          "Implementa testes para UseCase de Filmes Populares",
          "Implementa testes para UseCase de Pesquisa Filmes",
          "Implementa testes para UseCase de Detalhes do Filme",
          "Refatora teste de ViewModel de Detalhes do Filme"
        ]
      },
      "requirements": [
        "Básico de Jetpack Compose",
        "Ter feito algum aplicativo Android com Kotlin",
        "Conhecimento intermediário no Desenvolvimento Android"
      ],
      "description": "O Curso Movie App é ideal para quem deseja aprender a criar aplicativos Android modernos e interativos. Durante o curso, você dominará a arquitetura MVVM (Model View ViewModel) e aprenderá a usar a API do TMDb para obter informações sobre filmes. Além disso, exploraremos o uso do banco de dados Room para salvar seus filmes favoritos.\nO curso abordará boas práticas de programação e o design de interfaces com o Jetpack Compose, a mais recente ferramenta de UI para Android. Também daremos ênfase aos testes, essenciais para garantir a estabilidade e escalabilidade de seu aplicativo. (Não será ensinado Jetpack Compose, precisa ter um conhecimento prévio)\nVenha e aprimore suas habilidades no desenvolvimento de aplicativos Android. Ao final, você estará preparado para criar aplicativos de qualidade, oferecendo uma experiência envolvente aos usuários.\nNão perca esta oportunidade de aprendizado para expandir seus conhecimentos no desenvolvimento de aplicativos para a plataforma Android.\n\n\nAlgumas das tecnologias que iremos utilizar:\nKotlin\nPaging 3\nJetpack compose\nMVVM Clean Architeture\nTestes\nE muito mais.\nPrepare-se para uma experiência de aprendizado envolvente com o Curso Movie App.\nDesenvolva sua expertise em MVVM, explore a API do TMDb e aprimore seu uso do banco de dados Room. Adquira as habilidades essenciais para criar aplicativos Android de alta qualidade e ofereça uma experiência excepcional aos usuários. Junte-se a nós agora!",
      "target_audience": [
        "Desenvolvedores Android Intermediário com um conhecimento básico de Jetpack Compose."
      ]
    },
    {
      "title": "React Native CLI: Aplicaciones nativas para IOS y Android",
      "url": "https://www.udemy.com/course/react-native-fh/",
      "bio": "TypeScript, React Native CLI, Google y Apple maps, cámara, GPS, polylines, hooks, autenticación, despliegues y más",
      "objectives": [
        "React Native",
        "Crear aplicaciones móviles nativas usando RN",
        "Crear muchas aplicaciones altamente estilizadas",
        "Desplegar aplicaciones en Google PlayStore y Apple AppStore",
        "Dominar React con TypeScript",
        "Uso de recursos nativos como la cámara, galería y GPS"
      ],
      "course_content": {
        "Introducción": [
          "Introducción al curso",
          "¿Cómo funcionará el curso?",
          "¿Cómo realizar preguntas?",
          "Instalaciones necesarias y recomendadas",
          "¡Únete a Nuestra Comunidad de DevTalles en Discord!"
        ],
        "Reforzamiento de las bases - Conocimiento requerido para continuar": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "¿Por qué TypeScript?",
          "Inicio de proyecto - Introducción React con TypeScript",
          "Preparar Proyecto",
          "Tipos Básicos - TypeScript",
          "Objetos literales e interfaces",
          "Funciones, retorno y argumentos",
          "Hook -useState",
          "Custom Hook - useCounter",
          "Zustand - Gestor de estado",
          "Login y Logout",
          "Peticiones HTTP - Axios",
          "Establecer el tipo - Respuestas HTTP",
          "Mostrar usuarios en pantalla",
          "Paginación de resultados",
          "Custom Hook - useUsers",
          "Formularios",
          "Envío y valores del formulario",
          "Código fuente de la sección"
        ],
        "Instalación y configuración de ReactNative con emuladores y dispositivos físicos": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Diferencia entre EXPO CLI y ReactNative CLI",
          "Windows: Instalaciones necesarias",
          "Windows: Crear un dispositivo virtual",
          "Windows: Correr aplicación en dispositivo físico",
          "Mac OSX: Instalaciones necesarias - Android",
          "Mac OSX: Android Studio",
          "Mac OSX: Emulador de Android",
          "Mac OSX: Instalaciones para IOS",
          "Mac OSX: Simulador de IOS",
          "Mac OSX: Android Físico USB Debugging",
          "Mac OSX: Correr en un iPhone físico",
          "Correr dos simuladores simultáneamente"
        ],
        "Mi primera App en React Native - CounterApp": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Demostración del objetivo final de la sección",
          "Inicio de proyecto - MyFirstApp",
          "Hola Mundo",
          "Explicación de archivos y directorios",
          "Crear pantallas independientes",
          "Propiedades de un componente",
          "Crear un contador",
          "Personalización Pressable",
          "Componente personalizado PrimaryButton",
          "Tip: ¿Cómo ver los ejemplos de la documentación?",
          "Componentes estilizados",
          "React Native Paper - Instalación",
          "Floating Action Button - FAB",
          "Iconos en React Native - Android",
          "Iconos en React Native - IOS",
          "Configurar iconos globales",
          "Resumen de lo aprendido hasta el momento",
          "Código fuente de la sección"
        ],
        "Flex, Position y Box Object Model": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Box Object Model - Fundamentos del diseño",
          "Continuación de proyecto - Diseños y Flexbox",
          "Padding, Margin, Border, Width y Height",
          "Height, Width porcentual y dimensiones de la pantalla",
          "Position - Fundamentos del diseño",
          "Posición relativa",
          "Posición absoluta",
          "Flexbox - Fundamentos del diseño en React Native",
          "Flex",
          "Flex Direction",
          "Align Items",
          "Align Self",
          "Flex Wrap",
          "Preparación para la tarea",
          "Tarea sobre diseños",
          "Resolución de la tarea de diseños",
          "Código fuente de la sección"
        ],
        "Aplicación - Calculadora de IOS": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Demostración del objetivo final de la sección",
          "Inicio de proyecto - Calculadora",
          "Estructura inicial",
          "Diseño de pantalla y estilos globales",
          "Botones y estilos",
          "Botón de calculadora",
          "Completar botón de la calculadora",
          "Construir el número base",
          "Tarea - Botón de borrar última entrada",
          "Solución a la tarea",
          "Botones de operaciones aritméticas",
          "Realizar el cálculo",
          "Extra - Calculadora de Pixel",
          "Mostrar el resultado mientras escribe",
          "Código fuente de la sección"
        ],
        "NavegaciónApp - Todos los tipos de navegación": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Demostración de la sección",
          "Inicio de proyecto - NavigationApp",
          "Explicación sobre el sistema de navegación",
          "Archivos y directorios del proyecto",
          "React Navigation - Pre-requisitos",
          "React Navigation - Stack",
          "Navegar a otras pantallas",
          "Estilizando el Stack Navigator",
          "FlatList - Pantalla de productos",
          "Enviar argumentos entre pantallas",
          "Stack - PopToTop",
          "React Navigation - Drawer",
          "Configurar Drawer básico",
          "Toggle Drawer - Mostar / Ocultar",
          "Drawer personalizado",
          "useSafeAreaInserts",
          "Código fuente de la sección"
        ],
        "Tabs, MaterialTabs y Material Top Scrollable Tabs": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Demostración objetivo de la sección",
          "Continuación de proyecto",
          "Explicación sobre el Bottom Tab Navigator",
          "Crear el BottomTabNavigator",
          "Personalizando el BottomTabNavigator",
          "Menú de hamburguesa",
          "Material Top Tab Navigator",
          "Iconos - Instalaciones",
          "Instalación de íconos en IOS",
          "Colocando íconos",
          "Código fuente de la sección"
        ],
        "Compartir estado global - Zustand": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Introducción - Gestor de estado",
          "Inicio de proyecto - Context App",
          "Preparación de la aplicación y tarea",
          "Resolución de la tarea",
          "Zustand - Gestor de Estado",
          "Cambios en el Store",
          "Tarea - CounterStore",
          "Solución de la tarea",
          "Código fuente de la sección"
        ],
        "Aplicación de Películas": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Demostración del objetivo al final de la sección",
          "Inicio de proyecto - MoviesApp",
          "Configuración de pantallas y directorios",
          "Navegación entre pantallas",
          "Obtener películas - TheMovieDB",
          "Patrón adaptador - HttpAdapter",
          "Caso de uso - Now Playing",
          "CustomHook - useMovies",
          "Patrón Mapper - MovieMapper",
          "Tarea - Casos de uso restantes",
          "Resolución de la tarea",
          "Explicación adicional y resumen",
          "Código fuente de la sección"
        ]
      },
      "requirements": [
        "Tener conocimiento de React con Hooks es necesario",
        "Conocimiento básico de JavaScript",
        "Conocer TypeScript es recomendado pero no obligatorio (Bases incluidas en el curso)",
        "Poder realizar instalaciones como administrador en el equipo",
        "Ganas de aprender",
        "Emulador bajo 4GB de Ram corre un poco mal, pero puedes usar tu dispositivo físico (explicación incluída)",
        "Desplegar en la Apple AppStore requiere una Mac ( O una virtual o hackingtosh )"
      ],
      "description": "React Native: Aplicaciones nativas para IOS y Android\nEste curso completo de React Native tiene por objetivo enseñarte este framework de una forma sólida y robusta, con más de 42 horas de contenido en video (sin contar tareas y ejercicios). Es importante tener un base de React con Hooks para que este curso se sienta muy sencillo, ya que la idea de React Native, es que tomes tu conocimiento de aplicaciones de React y lo traslades a crear aplicaciones móviles.\nEl curso está basado en React Native CLI (No expo) y de la mano de TypeScript, el cual no es obligatorio para React Native, pero absolutamente todo lo haremos basado en él para que vean el poder de tener un tipado estricto y así generar la documentación de nuestras funciones y métodos de forma automática.\n\n\nImportante:\nReact Native recomienda el uso de un framework como Expo para desarrollar aplicaciones con esta tecnología, por lo que te recomendamos que si lo que es aprender React Native de cero, tomes el curso que tenemos de React Native con Expo, la versión que estás viendo usa el CLI, lo cual es para usuarios que necesitan particularmente aprender esta tecnología de la forma más pura.\n\n\nTocaremos la mayor parte de los componentes existentes en React Native, pasaremos por un \"Hola Mundo\", luego animaciones, manejo de estado, recursos nativos y poco a poco crecemos en complejidad hasta llegar a los despliegues en la Google Play Store y Apple App Store.\nEstos son algunos temas que tocamos en el curso:\nReact Native CLI\nGoogle Maps\nSDK Nativo para IOS y Android\nApple Maps\nGPS\nCámara\nGalería de imágenes\nTypeScript\nTipos básicos\nMapeo de respuestas\nMapeo de Props\nObligar argumentos en componentes\nObligar argumentos en rutas\nReact Navigation\nStack\nDrawer\nTabs\nTopTabs\nMaterialTabs\nTopScrollableTaps\nArgumentos entre pantallas\nIconos\nAxios\nIntancias\nMiddlewares\nConfiguraciones especiales para Mac y Windows con videos específicos\nGradientes\nDiseño Flex, Box Object Model y Position\nTemas\nDark\nLight\nPersonalizado\nContextApi\nConsumo de APIs\nCRUDs\nCarga de imágenes\nRe-utilización de componentes y hooks\nAnimaciones\nInfiniteScroll\nPull to refresh\nSlideshows\nCarruseles\nFormularios\nDebouncers\nBúsquedas\nAutenticación mediante JWT\nDespliegues:\nApple AppStore\nGoogle PlayStore\nY mucho más\nMi objetivo con este curso, es que sea lo más completo posible, con todo lo que puedes necesitar para crear aplicaciones móviles nativas y crear un repertorio enorme de ejercicios que te sirvan de documentación para cuando lo necesites, pero a la vez, que puedas tomar el código de esta librería que haremos y lo implementes de forma simple en tus aplicaciones futuras.\nEspero que el curso sea de tu agrado y nuevamente gracias por todo tu apoyo y soporte, que permitió la creación del mismo.\nNos vemos en la siguiente clase",
      "target_audience": [
        "Todas las personas que quieran aprender React Native",
        "Personas que conozcan React y quieran aplicar su conocimiento para desarrollo móvil",
        "Personas que conozcan React Native y quieran mejorar el diseño de sus aplicaciones",
        "Tener guías para crear y publicar aplicaciones en Google PlayStore y Apple AppStore"
      ]
    },
    {
      "title": "Sıfırdan Flutter ile Android ve Ios Apps Development",
      "url": "https://www.udemy.com/course/sifirdan-flutter-ile-android-ve-ios-apps-development/",
      "bio": "Dart & Flutter SDK'yı sıfırdan öğrenip; Android ve IOS'da çalışabilen yüksek performanslı native uygulamalar geliştirin",
      "objectives": [
        "Dart programlama dilini örneklerle",
        "Nesneye yönelimli programlama kavramlarını",
        "Dart dilinde fonksiyonel programlama kavramlarını",
        "Flutter widgetlarını ve kullanım yöntemlerini",
        "Birden fazla sayfa ile çalışmayı ve listeleri",
        "Http, Json ve API kavramlarını",
        "Animasyon Islemlerini",
        "SQFLite Local veritabanı paketini",
        "Bloc Pattern ve Provider gibi State Management Yöntemlerini",
        "Firebase Authentication, FCM, Firestore Kavramlarını",
        "Katmanlı Mimarinin Gerçekleştirilmesini detaylı anlatım ve örnek projelerle öğrenebileceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Öğrenme hevesi ve heyecanı",
        "Mobil uygulamalar geliştirme isteği",
        "Android studio kurulabilecek bir bilgisayar yeterlidir."
      ],
      "description": "Bu kurs ile öğrenmesi oldukça kolay olan Dart dilini en detaylı şekilde öğrenip, Google'ın geliştiricilere ücretsiz olarak sunduğu mobil uygulamala geliştirme SDk'sı olan Flutter'ı tüm ayrıntılarıyla öğreneceksiniz.\nFlutter’ı kullanarak geliştiriciler, her iki platformda da istenilen uygulamalar geliştirip, çapraz(cross) platformlu mobil uygulamalar geliştirerek hem maliyetten hem de zamandan tasarruf edebilirler. Arayüz tasarımcıları ise Flutter’ı kullanarak Android ve iOS platformlarına uygun, daha başarılı uygulamalar tasarlayabilirler.\nBunları yaparken her hangi bir programlama geçmişine sahip olmanız gerekmiyor.\nKursu daha önceden hiç bir programlama temeliniz olmadığını varsayarak hazırladım. Ayrıca daha önceden kotlin veya java ile android tecrübesi olan arkadaşlara da bilgiler vererek kafa karışıklığını önlemeye çalıştım.\nKurs, 80+ saat içerik ve de içerdiği konulardan dolayı udemydeki en kapsamlı flutter kurslarından biridir. Kursta:\nDart Dili ve Temelleri\nFlutter Temel Kavramları,\nStateless ve Statefull Widgetlar,\nNavigation Islemleri, Listeler ve Yardımcı Widgetlar\nAnimasyon Islemleri\nHttp, Json ve Api Kavramları\nLocal Veritabanı için SQFlite Kullanımı\nState Management Kavramı\nBloc Pattern ve Provider Package Kullanımı\nFirebase Oturum Açma İşlemleri\nFirestore Veri Tabanı Kullanımı ve Sayfalama Örnekleri\nFirestore Kullanımı\nFirebase Cloud Message ile Bildirim Gönderme İşlemleri\nFirestore Güvenlik İşlemleri\nAdmob ile uygulamada reklam birimlerinin kullanılması\nUygulamanın markete yüklenilmesi\nve daha fazlası yapılan pek çok uygulamayla hem teorik hem de pratik yöntemlerle detaylıca anlatılmıştır.",
      "target_audience": [
        "Hem ios hem de android cihazlarda çalışan mobil uygulamalar geliştirmek isteyen",
        "Hızlı bir şekilde mobil projeler geliştirip bir gelir kapısı elde etmek isteyen",
        "Katmanlı mimari ve state management gibi önemli kavramları öğrenmek isteyen",
        "Hayalindeki uygulamayı yapmak için bilgi birikimini arttırmak isteyen",
        "Yeni teknolojileri merak edip, piyasa şartlarında kendini güncel tutmak isteyen herkes bu kursa katılabilir."
      ]
    },
    {
      "title": "Complete Android Development with Kotlin course for 2021",
      "url": "https://www.udemy.com/course/learn-kotlin-from-zero-to-hero-and-build-15-android-apps/",
      "bio": "For Future free training courses like us on Facebook just search for \"Mobile Application Courses - MAC\"",
      "objectives": [
        "you will be a professional developer as who works for many years in the field , and take an advantage for get the latest technology ever",
        "and able to build android apps to sell it in the play store"
      ],
      "course_content": {
        "preparation": [
          "source code",
          "source codes",
          "Introduction",
          "Install IntelliJIdea",
          "preparation for the new course",
          "Install Android Studio Canary",
          "Introduction to Android studio canary",
          "make and run first app with canary"
        ],
        "operations and Priorties": [
          "Object oriented programming basic objects",
          "Declare variables",
          "comments",
          "conversion data type",
          "Display all Mobile Contacts App",
          "Arithmatic operations",
          "priorties",
          "logic operations",
          "Run app 2"
        ],
        "Decision Making": [
          "if statement",
          "if else",
          "else if",
          "when"
        ],
        "Loops": [
          "convert App",
          "for loop"
        ],
        "OBJECT ORIENTED PROGRAMMING": [
          "Object oriented programming basic objects",
          "packages",
          "Object Oriented Programming Advanced",
          "classes"
        ],
        "Collections and Strings": [
          "strings",
          "arrays",
          "arraylist",
          "Hashmap"
        ],
        "Object oriented programming -Advanced": [
          "spinner and list view App",
          "Inheritance",
          "Data class modifiers",
          "Enum class",
          "Singleton in kotlin",
          "Smart casting",
          "class casting",
          "Tuples in kotlin",
          "Deconstructing Values",
          "Nested classes in kotlin",
          "abstract classes",
          "Interface"
        ],
        "APPS": [
          "Text To Speech App",
          "Battery application Status using Broadcast Receiver",
          "sqlite database application",
          "Shared Preferences",
          "Access call, dialer screen, camera and web pages App in Android",
          "Context App",
          "Create Menu in Android using XML"
        ],
        "Functions": [
          "functions part 1",
          "functions part 2",
          "Default an named parameters functions part 3",
          "Unlimited parameters function",
          "Member function in kotlin classes",
          "Extension Function",
          "Higher Ordering Functions",
          "top level function,properties,field talk from java",
          "lazy evaluation and sequence in kotlin"
        ],
        "Advanced programming": [
          "Visibility modifiers in kotlin",
          "Exception in kotlin",
          "exception part 2",
          "Constants in Kotlin",
          "Annotation In Kotlin",
          "Geneics in kotlin",
          "Lambda expression",
          "null safety in Kotlin",
          "null safety",
          "Filtering and mapping in kotlin"
        ]
      },
      "requirements": [
        "like us on Facebook search for \"Mobile Application Courses - MAC\" for Future free training courses",
        "just be able to use pc"
      ],
      "description": "For Future free training courses like us on Facebook just search for \"Mobile Application Courses - MAC\"\n\n\nOn Facebook / mobileapplicationcourses /\n\n\nWelcome to the world's most famous course on Android app development. This course is designed to give you the most educational content and videos\n\n\n\n\n\n\n\n\nYou do not need any programming experience\n\n\n\n\n\n\n\n\nLearning the Kotlin language is the leading language in the manufacture of mobile applications in the future. It has been adopted by the largest international companies Google, which is easy and powerful at the same time.\n\n\n\n\nIt is the result of more than 10 years of work to produce this language\n\n\n\n\nYou will learn the basics of the language\n\n\n\n\nApplications of the basics studied\n\n\n\n\nAdvanced programming and applications to what has been studied in advanced programming\n\n\n\n\nFacebook Messenger Face Book Messenger\n\n\n\n\nSnap Chat application - for conversations between you and your friends\n\n\n\n\nAn app like Uber using Google Maps\n\n\n\n\nOther services and a lot of exciting and powerful applications, as it is two training courses in one session\n\n\n\n\n\n\n\n\n\n\nAnd you will learn how to create powerful applications that you can use in your day, including an application such as\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere are some of the things you will be able to do after taking this course:\n\n\n\n\nCreate apps to Play Store\n\n\n\n\nUnderstand basic programming and algorithms\n\n\n\n\nFluent in Kotlin and Android\n\n\n\n\nWork as a developer of mobile applications on Android\n\n\n\n\nPeople who want to build applications!\n\n\n\n\nThose who want to create their own apps\n\n\n\n\nThose looking for a full time job as a developer\n\n\n\n\nBusiness owners\n\n\n\n\nthe students\n\n\n\n\nPeople who want to make money building apps on Android\n\n\n\n\n\n\n\n\n\n\nWho is this training course for:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIf you are completely new to programming you should start from the beginning of the cycle and go to the end until you have created all the applications.\n\n\n\n\n\n\n\n\n\n\nThis course is designed so that you can build applications and learn tons of information within those applications.\n\n\n\n\n\n\n\n\n\n\nIf you haven't programmed before, make sure you view all lessons on Kotlin. We'll teach you basic basic principles so that you can build complex apps.\n\n\n\n\n\n\n\n\n\n\nKeep in mind that Kotlin has a handful of new benefits. So there is a huge benefit to taking this course\n\n\n\n\n\n\n\n\n\n\nDo not forget to join us via WhatsApp - Facebook - for free, as you can get free help at any time\n\n\n\n\n\n\n\n\n\n\nHere are some things you'll learn:\n\n\n\n\n\n\n\n\n\n\nIntelliJidea -\n\n\n\n\nAndroid Studio Canary\n\n\n\n\nInterface Builder\n\n\n\n\nFirebase\n\n\n\n\nMaps and GPS\n\n\n\n\nbasic information\n\n\n\n\nTables and Sqlite data\n\n\n\n\nAPIs, and networking\n\n\n\n\nApplication design\n\n\n\n\nAnd a lot ...",
      "target_audience": [
        "all"
      ]
    },
    {
      "title": "Curso de Desenvolvimento Android com o Android Studio 3",
      "url": "https://www.udemy.com/course/desenvolvendo-para-android/",
      "bio": "Aprenda a criar, publicar e ter retorno financeiro com seu aplicativo Android através de vendas In App",
      "objectives": [
        "Monetizar seu App com Compras \"In App\"",
        "Trabalhar com MVC no Android",
        "O essencial da linguagem Java para desenvolvimento Android",
        "Criar uma Calculadora totalmente funcional",
        "Publicar seu App no Google Play"
      ],
      "course_content": {
        "Introdução": [
          "O que irei aprender neste curso?",
          "Preparando o seu ambiente de trabalho",
          "Executando o Android Studio pela primeira vez",
          "Criando um dispositivo virtual para o emulador",
          "Configurando e executando o aplicativo em seu Smartphone"
        ],
        "Conhecendo a Interface da IDE Android Studio": [
          "O que irei aprender nesta seção?",
          "Criando o projeto no Android Studio",
          "Conhecendo a Interface da IDE Android Studio",
          "Criando nosso primeiro Layout para o Aplicativo Android",
          "Entendendo a estrutura inicial do Código Java",
          "Programando a SeekBar",
          "Programando o resultado da equação e finalizando o Aplicativo"
        ],
        "Java essencial para desenvolvimento Android": [
          "O que irei aprender nesta seção?",
          "Conceitos básicos da Linguagem Java",
          "Classes",
          "Herança"
        ],
        "Desenvolvendo o Layout do nosso Aplicativo Principal": [
          "O que irei aprender nesta seção?",
          "Criando o projeto da nossa Calculadora",
          "Iniciando a criação da Interface Gráfica do nosso App",
          "Criando o layout do visor da nossa Calculadora",
          "Ajustando o tamanho dos textos do visor e dos botões",
          "Adicionando botões ao nosso App",
          "Criando o estilo do botões da nossa Calculadora",
          "Criando o Background dos botões com uso do Drawable",
          "Últimos retoques nas configurações de Layout"
        ],
        "Implementando funções ao nosso App": [
          "O que irei aprender nesta seção?",
          "Criando a Classe Modelo Básica da Nossa Calculadora",
          "Criando métodos para realizar operações em nossa Calculadora Android - Parte 1",
          "Criando métodos para realizar operações em nossa Calculadora Android - Parte 2",
          "Conectando eventos da interface a métodos do Controlador",
          "Criando o método onClickNumeros",
          "Criando o método onClickOperacoes"
        ],
        "Publicando nosso App da Google Play Store": [
          "O que irei aprender nesta seção?",
          "Inscrevendo-se no Google Play",
          "Definindo os Ícones do App",
          "Gerando o APK e assinando digitalmente",
          "Enviando o App para a Google Play Store",
          "Iniciando os teste Alfa do Aplicativo",
          "Iniciando os testes Beta e enviando o App para Produção",
          "Criando a Página do Desenvolvedor na Google Play Store"
        ],
        "Obtendo retorno financeiro com compras \"In App\"": [
          "O que irei aprender nesta seção?",
          "Modificando o Model para incluir funções Pro",
          "Modificando o Controlador para incluir as funções Pro",
          "Modificando a View para incluir os botões da Versão Pro",
          "Baixando o App de Exemplo \"Trival Drive\" e Configurando em nosso Projeto",
          "Configurando a Conta Comerciante na Google e Atualizando o App da Google Play",
          "Criando nosso produto na Google Play Store",
          "Criando os métodos responsáveis por exibir e ocultar os botões da Versão Pro",
          "Adicionando a função de Compra em nosso Aplicativo",
          "Finalizando as configurações para adicionar a Compra In App ao nosso Aplicativo",
          "Corrigindo possíveis erros da Classe IabHelper",
          "Testando a versão PRO de nossa Calculadora Android"
        ],
        "Seção Bônus": [
          "Aula Bônus"
        ]
      },
      "requirements": [
        "Noções Básicas de Programação Java",
        "Noções Básicas de Programação Orientada a Objeto",
        "Ter um Computador que rode o Android Studio e um Emulador"
      ],
      "description": "Você deseja criar seu primeiro aplicativo para o mercado de software que mais cresce no mundo? Já pensou que além de desenvolver este pode se tornar uma de suas fontes de renda?\nNeste curso você aprenderá exatamente isto!\nNós criaremos um aplicativo completo para Android usando a linguagem Java e as ferramentas disponibilizadas pela Google. Além disto, você aprenderá a disponibilizar seu App na Google Play Store, alcançando um mercado de milhões de usuários ao redor do mundo!\nNeste curso você aprenderá também a como conseguir retorno financeiro com seu trabalho disponibilizando recursos adicionais.\nTudo isto de uma maneira prática, didática e acessível a qualquer pessoa com conhecimento básico em programação.",
      "target_audience": [
        "Qualquer pessoa tenha vontade de aprender a criar aplicações para Android.",
        "Qualquer pessoa que deseja lucrar com seus aplicativos."
      ]
    },
    {
      "title": "Android Mobil Uygulama Geliştirme Eğitimi | Kotlin | 2025",
      "url": "https://www.udemy.com/course/android-mobil-uygulama-gelistirme-egitimi-kotlin/",
      "bio": "Profesyonel ve sürekli güncellenen eğitim içeriği ile temel seviyeden ileri seviyeye Kotlin dili ile Android geliştirme",
      "objectives": [
        "Kotlin diline hakim olarak programlama yapabileceksiniz.",
        "Android programlama dünyasının detaylarına hakim olacaksınız.",
        "Tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.",
        "Uygulama mimarisi olan MVVM ile profesyonel uygulamalar geliştirebileceksiniz.",
        "Android için en güncel teknolojileri öğrenebileceksiniz.",
        "Aklınıza gelebilecek olan tüm fikirlerinizi mobil uygulamaya dönüştürebileceksiniz.",
        "Geliştirdiğiniz uygulamanızı Google Play gibi platformlar ile birçok kişiye ulaştırabileceksiniz."
      ],
      "course_content": {
        "Kotlin Giriş": [
          "Kotlin Giriş",
          "Android Studio Kurulum ve İlk Proje Oluşturma",
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Çalıştırma Ortamının Tanıtımı ve İlk Programın Çalıştırılması",
          "Android Studio 4.1.1 Main Metod Sorunu Çözümü",
          "Android Studio Main Metod Sorunu - Alternatif Çözüm",
          "Bir Projenin Android Studio İçerisinde Açılması",
          "Android Studio 4.0 Arayüz Güncellemesi Bilgilendirme",
          "Güncelleme - Android Studio Arctic Fox 2020.3.1 Arayüz Değişimi",
          "Güncelleme - Android Studio 4.2 Proje Oluşturma",
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Güncelleme - Android Studio Ladybug Feature Drop Yeni Proje Oluşturma",
          "Güncelleme - Min Sdk Versiyonu Seçimi"
        ],
        "Değişken ve Veri Tipleri": [
          "Değişken Oluşturma",
          "Print() Metodu ve String İfade İçinde Değişken Kullanımı",
          "Değişken Oluşturma Çeşitleri",
          "Değişken Kapsamı",
          "Constant - Sabitler",
          "Kaçış Karakterleri ve Yorum Satırları",
          "Aritmetik Operatörler",
          "Tür Dönüşümü",
          "Konsol Girdisi",
          "Android Studio Hata Ayıklama - Kotlin"
        ],
        "Standart Programlama Yapıları": [
          "Karşılaştırma Operatörleri",
          "if Çalışması",
          "Örnek ( if ) - Alan Hesabı",
          "Örnek ( if ) - Dört İşlem",
          "When Çalışması",
          "Örnek ( When ) - Dört İşlem",
          "Örnek ( When ) - Toolbar Menu",
          "Döngüler - For ve While",
          "Döngüler Sınır Değeri",
          "Örnek ( For ) - İsim Tekrarla",
          "Örnek ( While ) - Veri İşleme",
          "Break ve Continue",
          "Örnek - Tek Çift Sayı Bulma",
          "Diziler",
          "Dizilerin Döngüler ile Kullanımı",
          "Örnek ( Dizi ) - İsim Kayıt",
          "Örnek ( Dizi ) - Karne Uygulaması",
          "Bazı Hazır Komutlar"
        ],
        "Nesne Tabanlı Programlama": [
          "Nesne Tabanlı Programlama Giriş",
          "Araba Analojisi",
          "Otobüs Analojisi",
          "Null Safety",
          "Fonksiyonlar",
          "Fonksiyonlara Sınıf ( Class ) İçinde Erişim",
          "Overloading - Metodların Aşırı Yüklenmesi",
          "Vararg Parametresi",
          "Extension Fonksiyon ve Infix özelliği",
          "Ödev Açıklama",
          "Ödev 1 - Sıcaklık Dönüşümü",
          "Ödev 2 - Çevre Hesabı",
          "Ödev 3 - Faktoriyel Hesabı",
          "Ödev 4 - Harf Sayısı Bulma",
          "Ödev 5 - İç Açı Toplamı",
          "Ödev 6 - Maaş Hesaplama",
          "Ödev 7 - İnternet Ücreti Hesaplama",
          "Constructor",
          "Paketler ve Import",
          "Visibility Modifier",
          "Data Class",
          "Static Değişken ve Metodlar",
          "Enumaration",
          "Composition",
          "Örnek ( Composition ) - Veritabanı",
          "Kalıtım Giriş",
          "Örnek ( Kalıtım )",
          "Kalıtım - Override",
          "Kalıtım - PolyMorphism",
          "Tip Kontrolü - Upcasting - Downcasting",
          "Örnek ( Tip Kontrolü - Upcasting - Downcasting )",
          "Interface",
          "Örnek ( Interface )"
        ],
        "Collections": [
          "Collections Giriş",
          "ArrayList Giriş ve Tanımlama",
          "ArrayList Veri Ekleme ve Verilere Erişim",
          "ArrayList İşlemleri",
          "ArrayList ile Döngülerin Kullanımı",
          "ArrayList ile Nesne Tabanlı Çalışma",
          "ArrayList Sıralama İşlemi",
          "ArrayList Filtreleme İşlemi",
          "Örnek ( ArrayList ) - Ortalama Hesaplama",
          "Örnek ( ArrayList ) - İçerik Değiştirme",
          "Örnek ( ArrayList ) - Tek Çift Sayı Ayırma",
          "Örnek ( ArrayList ) - Rasgele Sayi Üretme",
          "Örnek ( ArrayList ) - İsim Arama",
          "Örnek ( ArrayList ) - Okul Kayıt",
          "Örnek ( ArrayList ) - Karne Uygulaması",
          "Örnek ( ArrayList ) - Compostion Kavramı",
          "Set ( HashSet ) Yapısı",
          "Set ( HashSet ) Yapısı ile Nesne Tabanlı Çalışma",
          "Map ( HashMap ) Yapısı",
          "Map ( HashMap ) Yapısı ile Nesne Tabanlı Çalışma"
        ],
        "String Kullanımı": [
          "String Giriş",
          "String Metodları",
          "Örnek ( String ) - Tersten Kelime Yazdırma"
        ],
        "İleri Kotlin": [
          "Try - Catch",
          "Thread Kullanımı"
        ],
        "Android Giriş": [
          "Android Giriş",
          "Android Studio Kurulum ve Ilk Proje Oluşturma",
          "Proje Oluşturma",
          "Emülatör Kurulumu",
          "Güncelleme - Emülatör Kurulumu ve Ayarları",
          "HAXM Kurulum",
          "Emülatör Tanıtımı",
          "Android Studio Projesinin Emülatör Üzerinde Çalıştırılması",
          "Android Studio 4.0 Arayüz Güncellemesi Bilgilendirme",
          "Güncelleme : Android Studio 4.1 ile Proje Oluşturma",
          "Güncelleme - Min Sdk Versiyonu Seçimi",
          "Güncelleme - Kütüphane Kurulum Rehberi"
        ],
        "Android Studio Proje Dizini": [
          "Android Studio Proje Dizini ve Java Dizini",
          "Android Manifest Dosyası",
          "Res ( Resources ) Klasörleri",
          "Layout Dosyası",
          "Drawable Dosyası",
          "Values - Colors - Styles Dosyası",
          "Strings Dosyası",
          "Gradle Dosyası",
          "Android Monitor ve Logcat Yapısı",
          "Güncelleme - Logcat Kullanımı"
        ],
        "Android Tasarım": [
          "Tasarım Giriş",
          "Linear Layout",
          "Relative Layout",
          "Constraint Layout - Sabitleme",
          "Constraint Layout - Boyutlandırma",
          "Constraint Layout - Hizalama",
          "Constraint Layout - Ortalama",
          "Constraint Layout - Rehber Çizgiler",
          "Constraint Layout - Zincirleme",
          "Uygulama - Login Ekran Tasarımı",
          "Çoklu Dil Desteği",
          "Çoklu Ekran Desteği",
          "Uygulama İçin İcon Oluşturma",
          "Güncelleme : Tasarımsal Yenilikler"
        ]
      },
      "requirements": [
        "Temel bilgisayar kullanma becerisine sahip olmak.",
        "Ortalama bir bilgisayara sahip olmak.",
        "Bilgisayarınıza programlama yapmak için Android Studio IDE yüklemek."
      ],
      "description": "Android platformunda mobil uygulama geliştirmek istiyorsanız doğru adrestesiniz.\nTemel seviyeden ileri seviyeye kadar Android uygulama geliştirme alanında gelişim sağlayacaksınız.\n2011 yılından beri 100lerce insana profesyonel bir şekilde Android uygulama geliştirme eğitimi veriyorum.\nSon yıllarda Android ve IOS eğitmeni olarak BT AKADEMİ , BİLGİNÇ İT ACADEMY VE BAŞARISOFT gibi kurumsal şirketlerde eğitmen olarak görev yapıyorum.\nÖğrencilerimizin tamamına yakını yüksek memnuniyet ile kursumuzu tamamladılar ve kendi alanlarında mobil uygulama geliştirici olarak çalışmaktalar.\nEğitim kurumlarında edindiğim tecrübe ile bu online kursu sizler için tasarladım.\nEğitim müfredatının verimli, profesyonel ve düzenli olması için çok zaman harcadım.\nRahatlıkla Eğitim müfredatı olarak en düzenli içeriğe sahip bu kurs diyebilirim.Bu eğitim içeriğinin yapısını ve kalitesini diğer kurslar ile kıyaslayabilirsiniz.\nKursun sonunda tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.\nBu kurs bir çok teknoloji ve yazılım araçları içermektedir. PHP, Firebase, Volley, Retrofit 2, MYSQL, SQLite ve bunun gibi bir çoğu.\nBu kurs uygulama mimarisi olan MVVM yapısını içermektedir.\nBunları bilmiyorsanız endişelenmenize gerek yok, Eğitimde en temel seviyeden ileri seviyeye kadar gelişim sağlayacaksınız.\nEğitim içeriği konu başlıkları ;\nKotlin Bölümü :\nKotlin Giriş\nDeğişkenler ve Veri Tipleri\nStandart Programlama Yapıları\nNesne Tabanlı Programlama\nCollections\nString Yapısı\nİleri Kotlin\nAndroid Bölümü :\nAndroid Giriş\nAndroid Studio Proje Dizini\nAndroid Tasarım\nAndroid Çalışma Yapısı\nAndroid Widgets\nAndroid Kullanıcı Etkileşimi\nMaterial Design\nAndroid Depolama İşlemleri\nİleri Android\nAndroid İnternet Tabanlı İşlemler\nAndroid Lokasyon İşlemleri\nAndroid Ticari İşlemler\nAnimasyon İşlemleri\nAndroid 2D Oyun Yapımı\nAndroid Uygulama Mimarisi - MVVM\nProgramlama Öğrenmek Neden Önemli ?\nHer geçen gün yazılım hayatımızın en derinine kadar iniyor.Hayatımızı kolaylaştırırken yazılımcılara büyük bir iş alanı açılıyor.Çok geç olmadan bu dijital çağa ayak uydurmalı ve yazılım sektöründe yer almalısınız.Bu dijitalleşen çağda ortalama bir bilgisayar ile kendinize yeni bir iş fırsatı yaratabilirsiniz.Özellikle mobil uygulama geliştirme sayesinde tek başınıza istediğiniz her yerden projeler geliştirebilirsiniz.Hangi meslek ve eğitimden olduğunuz yazılımcı olmak için önemsizdir.Her yaşta bu beceriyi kazanabilirsiniz.\nBir eğitimci olarak hazırladığım eğitim müfredatı ile profesyonel seviyeye gelmek sizin elinizde.Tek yapmanız gereken zamanızı ayırarak geleceğinizi değiştirecek yazılım becerisini kazanmak için çabalamak.\nGelin birlikte bu yola çıkalım ve size değer katalım…\n\n\nBaşarılar dilerim.\n\n\nEğitimi incelediğiniz için teşekkürler…",
      "target_audience": [
        "Hangi meslekten olduğunuzun veya Hangi eğitimi aldığınızın yazılımcı olmak için önemi yoktur.",
        "Programlamaya ve teknolojiye ilginizin olması yeterlidir.",
        "Her yaşta bu beceriyi kazanabilirsiniz."
      ]
    },
    {
      "title": "Crea una APP como UBER para IOS y Android con Flutter",
      "url": "https://www.udemy.com/course/crea-una-app-como-uber-para-ios-y-android-con-flutter/",
      "bio": "Flutter Uber Clone Crea una app desde cero para IOS y ANDROID con Google Flutter y Firebase",
      "objectives": [
        "Diseño de pantallas (simples y avanzadas)",
        "Intregracion de App Android y IOS con Firebase",
        "Login y registro de usuarios con Firebase Authentication",
        "Manejo de datos en tiempo real con Firebase Cloud Firestore",
        "Notificaciones Push con Firebase Cloud Messaging",
        "Guardar y mostrar imágenes con Firebase Storage",
        "Integracion con Google Maps API",
        "Manejo avanzado de Google Places API",
        "Trazar rutas entre un punto A y B (origen y destino) utlizando Google Directions API",
        "Geolocalizacion avanzada con Firebase Geofire y Google Directions API",
        "Peticiones HTTP desde aplicación IOS y Android",
        "Manejo avanzado del GPS",
        "Colocar Marcadores en Google Maps"
      ],
      "course_content": {
        "Instalaciones de herramientas en Windows": [
          "Instalacion de Flutter en Windows",
          "Instalacion de Android Studio en Windows",
          "Correr La Aplicacion en un Dispositivo Fisico Android"
        ],
        "Instalacion de herramientas en MacOSX": [
          "Requisitos para esta seccion",
          "Instalacion de Flutter en MacOSX",
          "Instalacion de Android Studio en MacOSX",
          "Correr la aplicacion de Flutter en Simulador IOS",
          "Correr la aplicacion en un Iphone o IPAD"
        ],
        "Diseños de pantallas con Flutter": [
          "Configuracion del Archivo Main.dart",
          "Diseño del Home Page ( Parte 1 )",
          "Diseño del Home Page ( Parte 2 )",
          "Utilizar Tipos de Fuentes Externas",
          "Organizar Codigo del Home Page",
          "Navegar a Otro Page",
          "Diseño del Login Page ( Parte 1)",
          "Diseño del Login Page ( Parte 2 )"
        ],
        "Diseño de widgets personalizados": [
          "Crear Boton Personalizado",
          "Manejo de Campos de Texto"
        ],
        "Firebase Authentication - Autenticacion de usuarios": [
          "Integracion de App Android Con Firebase",
          "Integracion de App IOS con Firebase",
          "Autenticacion con Firebase",
          "Dependencias Flutter 2.0",
          "Diseño de la Pantalla de Registro",
          "Registrar Usuario en Firebase Authentication"
        ],
        "Cloud Firestore - Manejo de datos": [
          "Crear Datos de Usuario en Cloud Firestore",
          "Reglas de Cloud Firestore",
          "Mostrar Mensajes en un Snackbar",
          "Mostrar un Progress Dialog"
        ],
        "Shared Preference - Persistencia de informacion": [
          "Diferenciar Tipo de Usuario (Parte 1)",
          "Diferenciar Tipo de Usuario (Parte 2)",
          "Diseño de la Pantalla de Registro de Conductor",
          "Verificar Si El Usuario Esta Logeado o No (Parte 1)",
          "Verificar si el Usuario Esta Logeado o No (Parte 2)",
          "Verificar si el Usuario Logeado es Conductor o Cliente"
        ],
        "Google Maps": [
          "Mostrar Mapa de Google",
          "Cambiar Estilo del Mapa de Google",
          "Agregando Elementos Dentro del Mapa"
        ],
        "Manejo del GPS": [
          "Obtener Ubicacion en Tiempo Real",
          "Agregar Marcador Personalizado al Mapa",
          "Animacion del marcador del vehiculo",
          "Almacenar la posicion del conductor en Firebase",
          "Navigation Drawer",
          "Traer informacion del conductor en tiempo real",
          "Cerrar sesion",
          "Configurando mapa del cliente",
          "Mostrar Conductores Disponibles en el mapa del Cliente"
        ],
        "Google Places - Seleccionar lugares de Google": [
          "Diseño del card Para Google Places",
          "Selecionar Lugar de recogida Desde El Mapa",
          "Seleccionar Lugar de destino desde el mapa",
          "Google Places Autocomplete"
        ]
      },
      "requirements": [
        "Lo único que necesitas es conocimiento en algún lenguaje de programacion orientado a objetos como JAVA, C#, DART, Python, Go, Kotlin, C++, PHP y muchas ganas de aprender"
      ],
      "description": "CURSO DE GOOGLE FLUTTER Y FIREBASE\nDesarrollo multiplataforma para IOS y Android\n\n\nEn este curso te voy a enseñar como crear una aplicación estilo (UBER, CABIFY, BEAT, DIDI, InDriver) utilizando Google Flutter y Firebase.\nAlgunos de los temas que veras a lo largo del curso serán los siguientes:\nIntegrar una aplicación con Firebase.\nManejo de datos en tiempo real utilizando Firebase Cloud Furestore\nAutenticación de usuarios con Firebase Authentication\nMapas de Google\nNotificaciones Push\nTrazar rutas en el mapa desde un punto A hasta B\nColocar marcadores personalizados\nIntegrar selector de Sitios de Google\nRelación de datos en bases de datos NOSQL\nNavegación con GPS\nGuardar y mostrar imagenes con Firebase Storage\nGeolocalización\nPeticiones HTTP\n\n\ny mucho mas\nEspero que te suscribas a mi curso y poderte brindar todo mi conocimiento sobre este interesante mundo del desarrollo móvil multiplataforma\n\n\nFlutter:\nes un framework de código abierto desarrollado por Google para crear aplicaciones nativas de forma fácil, rápida y sencilla. Su principal ventaja radica en que genera código 100% nativo para cada plataforma, con lo que el rendimiento y la UX es totalmente idéntico a las aplicaciones nativas tradicionales.\nFirebase:\nse trata de una plataforma móvil creada por Google, cuya principal función es desarrollar y facilitar la creación de apps de elevada calidad de una forma rápida, con el fin de que se pueda aumentar la base de usuarios y ganar más dinero. La plataforma está subida en la nube y está disponible para diferente plataformas como iOS, Android y web. Contiene diversas funciones para que cualquier desarrollador pueda combinar y adaptar la plataforma a medida de sus necesidades.",
      "target_audience": [
        "Estudiantes de ingenieria de Software",
        "Estudiantes de Ingeniería en Computación",
        "Ingenieros de Sistemas",
        "Ingenieros de Software",
        "Desarrolladores Web, Movil",
        "Programadores",
        "Desarrolladores JAVA",
        "Desarrolladores Kotlin",
        "Desarrolladores SWIFT",
        "Desarrolladores moviles Android",
        "Desarrolladores moviles IOS",
        "Desarrolladores moviles multiplataforma"
      ]
    },
    {
      "title": "Aprende a programar Android con Kotlin + Firebase + Google",
      "url": "https://www.udemy.com/course/programacion-android-kotlin/",
      "bio": "¡Aprende a programar Android con Kotlin! Crea apps con Chats, Login con Google, Firebase, Reactive... Como un PROFESIONA",
      "objectives": [
        "Manejar profesionalmente Android Studio 3",
        "Aprender el lenguaje de Kotlin",
        "Usar Kotlin para escribir apps Android desde cero",
        "Uso de Firebase + Google Sign In",
        "Notificaciones Android Oreo",
        "Crear tu propia app con Chat en Real Time (Tiempo Real)",
        "Crear apps con Material Design y Responsive Design",
        "Administración de Base de Datos para las apps",
        "Programar y publicar sus propias Aplicaciones para Android",
        "Corregir y debuggear problemas en las Aplicaciones"
      ],
      "course_content": {
        "INTRODUCCIÓN": [
          "¿Qué es Kotlin?",
          "¿Por qué Kotlin?",
          "Kotlin vs Java",
          "¿Queda Java obsoleto para Android?",
          "¿Qué voy a aprender?",
          "¿Cómo formular preguntas en la plataforma?",
          "¿Dónde ampliar información?",
          "Repositorio GitHub",
          "Comunidad Slack para Android"
        ],
        "ENTORNO ANDROID STUDIO 3": [
          "Descargar Android Studio 3",
          "Instalando Android Studio 3",
          "Personalizando Android Studio",
          "SDK Manager",
          "Hola Mundo Android Studio 3 + Kotlin",
          "Gradles",
          "Clean & Rebuild",
          "AVD Manager",
          "Depurando",
          "Errores",
          "Convertir Java a Kotlin Android Studio 3",
          "Ver código Java resultante de Kotlin"
        ],
        "INTRODUCCION A KOTLIN": [
          "Ejercicios y prácticas Kotlin",
          "Variables y Tipos en Kotlin",
          "Nullable en Kotlin",
          "Operadores en Kotlin",
          "Control de flujo en Kotlin",
          "Modificadores de acceso en Kotlin",
          "Interfaces en Kotlin",
          "Clases en en Kotlin - Parte 1",
          "Clases en en Kotlin - Parte 2",
          "Funciones en Kotlin",
          "Companion Object en Kotlin"
        ],
        "ACTIVITIES, PERMISOS, LISTVIEW & SHARED PREFERENCES": [
          "Usando API 27",
          "Toast & SnackBar",
          "Constraint Layout + ScrollView + Buttons",
          "Intents básicos",
          "Ciclos de vida de Activities",
          "Botón Back + Handler",
          "Eventos Click",
          "Kotlin Android Extensions",
          "Picasso para Kotlin",
          "ListView + Adapter",
          "Intents Extras I",
          "Intents Extras II",
          "Intents Flags",
          "Intents con objetos",
          "Toolbar & Up Navigation",
          "Toolbar Activity & Refactor",
          "Layout para foto con cámara",
          "Tomar foto de cámara CON Permisos",
          "Tomar foto de cámara SIN Permisos",
          "Shared Preferences en Kotlin",
          "Usando Shared Preferences",
          "Añadiendo Extension Functions"
        ],
        "Módulos/Bibliotecas Android": [
          "¿Qué es un módulo Android?",
          "Creando nueva Biblioteca",
          "Agregando contenido a la Biblioteca",
          "Usando la Biblioteca",
          "Usando la Biblioteca en otro proyecto",
          "Exportar/Importar módulo como AAR",
          "Usar módulo compartido mediante referencia"
        ],
        "Permisos con Dexter": [
          "Librería de permisos Dexter",
          "Añadiendo Dexter",
          "Creando Layout",
          "Permisos para la Cámara",
          "Permisos para leer Contactos",
          "Permisos para grabar Sonido",
          "Refactor del codigo",
          "Multiples permisos",
          "Composite Dexter"
        ],
        "DRAWER, FRAGMENTS, RECYCLER, CARDVIEW, ROTATION": [
          "Introducción",
          "Theme & Toolbar",
          "Navigation Drawer layout",
          "Crear iconos vectores material design",
          "Implementando Drawer",
          "Creando los Fragments",
          "Orientación y Refactor",
          "Creando Modelo Flight",
          "Creando Recycler Item Layout",
          "Creando Adapter Recycler View",
          "Implementando Recycler View",
          "Implementando Reto"
        ],
        "Final App": [
          "Introducción a la Aplicación Final",
          "Presentación Firebase",
          "Crear proyecto Firebase e integrar SDK",
          "Cambiar estilo y añadir colores",
          "Creando Login Layout - EditText",
          "Creando Login Layout - Botones",
          "Optimizando Login Layout",
          "Creando Sign Up Layout",
          "Creando Forgot Password Layout",
          "Creando usuario en Firebase",
          "Refactor Sign Up",
          "Implementando Log In",
          "Intro Animaciones Activity",
          "Validaciones",
          "Acceder información usuario",
          "Verificación de Email",
          "Olvidé mi contraseña",
          "Login con Google - Dependencias y dashboard",
          "Login con Google - Google API Client",
          "Login con Google - Log in",
          "Login and Main Activity Flow",
          "Forzar selección usuario Google Login",
          "Añadiendo Toolbar",
          "Creando Fragments",
          "Creando PagerAdapter",
          "Creando Bottom Navigation Bar",
          "Optimizando detalles Bottom Navigation Bar",
          "Creando burbujas del chat - Drawables",
          "Creando modelo Message",
          "Layout mensajes chat",
          "Layout Fragment Chat",
          "Chat Adapter Recycler View",
          "Intro Firebase Database",
          "Implementando ChatFragment",
          "Enviando mensajes al chat",
          "Chat en tiempo real",
          "Ordenar, limitar y optimizar Chat",
          "Testando Chat multiple dispositivos",
          "Avatar por defecto en Chat Fragment",
          "Layout InfoFragment",
          "Implementando InfoFragment",
          "Total Messages Firebase Style",
          "Mejoras",
          "Que es RxAndroid y Programacion Reactiva",
          "Añadir RxAndroid al proyecto",
          "Crear TotalMessagesEvent class",
          "Crear Event Bus Reactivo",
          "Implementando EventBus Reactivo - Magia",
          "Implementando Log out",
          "Creando iconos para Rate Fragment",
          "Creando el layout del RatesFragment",
          "Rate model",
          "Añadiendo Strings",
          "RateDialog layout + custom Rating",
          "RateDialog implementación",
          "Creando layout para cada Rate (Adapter)",
          "RatesAdapter",
          "RatesFragment",
          "Comunicación Dialog y Fragment",
          "Guardando Rating",
          "Leyendo Ratings",
          "Solventar error listeners",
          "Mejoras RateFragment",
          "Ocultar FAB Dinámicamente"
        ]
      },
      "requirements": [
        "Se recomienda un PC con 4GB de RAM y procesador i5 o superior",
        "Procesadores Intel para virtualización o dispositivo Android",
        "Aconsejable conocimientos básicos de Android con Java, pero no necesarios"
      ],
      "description": "Aprende a crear aplicaciones Android con Kotlin. Para ello, usaremos Android Studio 3, cargado de novedades y soporte completo del lenguaje Kotlin. Aprovecha esta oportunidad, Kotlin es el futuro del desarrollo Android, desde Google animas a los desarrolladores a que empiecen a usarlo, es un lenguaje maduro, sólido y estable, que aunque parezca nuevo, lleva desde 2010 de la mano de JetBrains, aunque en la Google IO de 2017 fue cuando Google lo presentó como lenguaje de primera clase y lo adoptó públicamente.\nPodrás crear apps desde cero con Kotlin que usen:\nLenguaje Kotlin (incluyendo Extension functions, Lambda expressions, Kotlin Android Extensions...)\nFirebase y Base de datos en la nube en tiempo real (Real Time)\nInicio de sesión con Google\nReactividad con Kotlin + RxAndroid - Event bus reactivo...\nRecyclerView, CardView, ListView, Adaptadores\nIntents, activities, permisos en run time...\nComponentes de Material Design\nSubir app a Google Play Store\nY mucho más...\n¡Puedes echar un vistazo a las clases accesibles antes de comprar el curso y seguro que te decides a unirte a nosotros!\n¿Como empieza el curso?\nCon el mensaje de bienvenida del curso, tendrás un enlace a un repositorio GitHub donde tendrás el código impartido en las diferentes secciones, totalmente accesible, incluyendo la App Final donde crearemos un chat, usaremos Login con Google+ y conectaremos con Firebase!\nAl ser miembro de este curso y pagar el acceso a él, incluye el uso del código de los repositorios de forma totalmente gratuita, por lo que si quieres modificar un poco la app final y subirla para tenerla en tu CV puedes hacerlo sin problemas :)\nTe recomiendo ver el curso siguiendo el orden establecido, aunque la primera parte es muy teórica sobre el lenguaje Kotlin, es necesario asentar unos conocimientos previos antes de saltar a crear apps, tendremos tiempo suficiente para hacer apps cuando pasemos la sección de introducción.\n\n\n¿Es para mi este curso?\nSi tienes conocimientos previos sobre Android con Java, si es para ti este curso, puesto que aprenderás como aplicar tus conocimientos sobre Java, pero en Kotlin. Si sabes algo de Kotlin pero no estás muy suelto en Android, este curso también es válido para ti.\nSi no sabes nada sobre Android ni sobre Kotlin ni sobre Java, puedes disfrutar de este curso, y aprenderás muchísimo, aunque en el caso de no tener conocimientos previos sobre Android, te recomendaría hacer mi otro curso sobre Android con Java para asentar conocimientos básicos, aunque en este curso cubrimos muchos de ellos, no nos paramos tanto a explicar en detalle ciertos elementos del mundo Android. Si no quieres hacerlo, no pasa nada, también aprenderás con este curso muchísimo, aunque lo mencionado anteriormente es mi recomendación para sacarle el 100% al curso.\nSi eres un experto en Android con Kotlin y al ver el temario sientes que dominas todos esos puntos, entonces este curso no es para ti :)\n\n\nSobre el Tutor\n\nEste es mi segundo curso en Udemy. El primer curso llamado Programación de Android desde Cero +35 horas Curso Completo tiene más de 18.000 estudiantes en el curso, categorizado como [BEST SELLER] con más de un 4.4 de media de satisfacción, numerosos comentarios y valoraciones positivas. Multitud de alumnos han subido sus primeras apps conmigo durante ese curso y han dado sus primeros pasos laborales gracias al curso (y por supuesto a la dedicación que le han puesto).\nMi objetivo para este curso es dar un paso más profesionalmente, tanto para esos alumnos de mi curso previo, como para los nuevos alumnos que disfruten de este curso, con un temario más avanzado, con las últimas tecnologías y herramientas más demandadas.\nSi eres uno de mis alumnos del curso mencionado sabrás que conmigo como tutor, poniendo interés en las clases y trabajo de tu parte, está GARANTIZADO 100% que aprenderás muchísimo.\n\n\n¿Se usa Android Studio 3?\nPor supuesto, eso ha sido uno de los motivos que ha retrasado este curso, esperaba la salida de esta nueva versión que hace posible el soporte nativo de Kotlin y otras muchas más mejoras.\n\n\n¿Significa que no debería aprender Java o que lo que aprendí en Java ya no sirve?\n\n\nNo, claramente no. Si sabes Java, has tomado mi curso anterior o estás pensando en hacerlo, no te preocupes, Java es un lenguaje muy bueno para aprender Android desde cero, y los conocimientos que adquieras con él, serán los mismos que con Kotlin, con la única diferencia que cambiarás el lenguaje pero la lógica de funcionamiento y el resto es exactamente lo mismo.\nSi ya sabes Android, un ListView es un ListView tanto en Kotlin como en Java, un Adapter es un Adapter en ambos lenguajes y así continuadamente. No es malo ni dañino aprender Android con Java, y hay muchas ofertas de empleo sobre ello, y muchas empresas dando soporte a apps existentes con Java, pero el futuro es Kotlin, incluso es parte del presente, y de aquí en adelante la transición se va a ir haciendo, poco a poco, así que aprovecha el momento para aprenderlo ahora y serás uno de los primeros en saber Kotlin ¡te lloverán las ofertas!\n\n\n\n\nY ¿Por qué Kotlin?\nExisten muchas razones, algunas como:\nSimplicidad del lenguaje\nInteroperabilidad con Java\nSoporte absoluto de Android, JetBrains y Android Studio\nAprendizaje rápido y sencillo\nMás seguridad que Java\nImportantes empresas ya lo usan en sus productos\nClaridad, menos verboso\nDivertido de usar, cuando lo domines, no querrás volver a Java\n\n\nTu opinión cuenta\nDéjanos reseñas, contacta conmigo por privado mediante la plataforma, escribe tus preguntas y dudas sobre el curso, disfruta de la comunidad Slack, comparte tus apps, coméntanos que te gustaría que añadiese al curso mientras está en progreso... Tu opinión cuenta!\n\n\nEspero verte pronto en el curso,\nUn Abrazo,\n\nAlejandro ;)",
      "target_audience": [
        "Interesados en Programar Aplicaciones para Android",
        "Interesados en Programar Aplicaciones con Kotlin",
        "Interesados en Programar Aplicaciones para Android con Kotlin",
        "Programadores de Swift, Objective-C para iOS que quieran abarcar Android",
        "Programadores Android que quieran aprender Kotlin",
        "Interesados en el Desarrollo en Android de forma nativa",
        "Quienes deseen trabajar como programadores de android",
        "Quienes deseen abrir una empresa de desarrollo de apps"
      ]
    },
    {
      "title": "Crea una APP Red Social con Chat estilo WHATSAPP con Android",
      "url": "https://www.udemy.com/course/crea-una-app-red-social-con-chat-estilo-whatsapp-con-android/",
      "bio": "JAVA | Firebase | Auth | Firestore | Storage | Notificaciones push | Chat Realtime | Whatsapp",
      "objectives": [
        "Diseño de pantallas con XML",
        "Material Design",
        "Intregracion de App Android con Firebase",
        "Login de usuario con Email y contraseña",
        "Login de usuario con GOOGLE",
        "Manejo de datos en tiempo real con Cloud Firestore",
        "Notificaciones Push Avanzadas con Firebase Cloud Messaging",
        "Notificaciones estilo WHATSAPP",
        "Chat en Tiempo real estilo WHATSAPP",
        "Como hacer relaciones de datos en bases de datos NOSQL",
        "Recycler View y Cloud Firestore",
        "Guardar y mostrar imágenes con Firebase Storage",
        "Peticiones HTTP",
        "CRUD de datos con Firebase",
        "Android X"
      ],
      "course_content": {
        "Diseñando las pantallas de nuestra aplicación": [
          "Instalacion de Android Studio",
          "Creando un emulador de Android",
          "Creando el proyecto",
          "Probar aplicación en un dispositivo fisico real",
          "Diseño de la pantalla principal (parte 1)",
          "Diseño de la pantalla principal (parte 2)",
          "Informacion importante",
          "Navegar de una pantalla a otra",
          "Diseñando la pantalla de registro",
          "Boton de ir hacia atras",
          "Manejo del TextInput",
          "Validaciones para los campos de texto"
        ],
        "Android y Firebase Authentication": [
          "Integrando Firebase con Android",
          "Registro de usuarios",
          "Registrar usuarios y almacenar la informacion en Firestore",
          "Reglas seguras para la base de datos",
          "Login de usuario",
          "Inicio de sesion con Google",
          "Validaciones inicio de sesion con Google",
          "Completar datos inicio de sesion con Google"
        ],
        "Mejorando codigo, diseños y mas": [
          "Mejorando el codigo del proyecto (Parte 1)",
          "Mejorando el codigo del proyecto (Parte 2)",
          "jcenter()",
          "Alert Dialog",
          "Bottom Navigation View",
          "Floating Action Button",
          "Diseñando la pantalla para publicar un articulo"
        ],
        "Manejo de datos en tiempo real y almacenamiento de imagenes": [
          "Seleccionar imagen de galeria",
          "Solucion StartForActivityResult Deprecated",
          "Guardar imagen en Firebase Storage",
          "Guardar imagen en Storage y crear informacion en database (Parte 1)",
          "Guardar imagen en Storage y crear informacion en database (Parte 2)",
          "Alert dialog - seleccionar imagen de galeria o tomar foto",
          "Tomar foto",
          "Tomar foto y subir a Storage"
        ],
        "Toolbar, CardView, RecyclerView, Collapsing Toolbar": [
          "Toolbar en un fragment",
          "Añadir menu al Toolbar",
          "Diseño del CardView para mostrar las publicaciones",
          "Listar publicaciones utilizando RecyclerView",
          "Completando informacion Timestamp, Telefono",
          "Diseñando el Profile Fragment",
          "Diseñando pantalla de editar perfil",
          "Guardar Datos de Editar Perfil",
          "Obteniendo Datos Usuario en la pantalla de editar perfil",
          "Mostrando datos del usuario en el Fragment Profile"
        ],
        "Firebase Cloud Firestore Avanzado y relacion de datos": [
          "Slider de imagenes",
          "Diseño de la pantalla de detalle de la publicacion",
          "Mostrar informacion en el detalle de la publicacion",
          "Mostrar Perfil del Usuario Que Publico Un Post",
          "Mostrar Alert Dialog para insertar un nuevo comentario",
          "Crear un nuevo comentario",
          "Mostrar comentarios de un post",
          "Mejorando el diseño de los cardview post",
          "Funcionalidad del Like",
          "Mostrar Relative Time en el detalle de la Publicacion",
          "Mostrar mis publicaciones y eliminar una publicacion",
          "Mostrar alerta de eliminacion de publicacion",
          "Animacion Collapsing Toolbar",
          "Diseño de Fragment Filters",
          "Filtrar Post por categoria",
          "Mostrar Numero Resultados del Filtro",
          "Implementar View SearchBar",
          "Implementando busqueda con SearchBar"
        ],
        "Notificaciones push en Android": [
          "Configurando Notificaciones Push en Android",
          "Generar token de notificaciones",
          "Enviar notificaciones con POSTMAN",
          "Enviar notificaciones de dispositivo a dispositivo",
          "Creando informacion del CHAT en la base de datos",
          "Listar los Chats",
          "Diseñando pantalla del Chat y Toolbar Personalizado",
          "Mejorar el almacenamiento de datos en la collecion chats",
          "Creando mensajes en un Chat",
          "Mostrando Información del Usuario en el Chat Activity",
          "Mostrar mensajes en el Chat",
          "Mostrar Mensajes Dependiendo Si Es Usuario Emisor Receptor",
          "Mostrar el ultimo mensaje enviado en el chat",
          "Funcionalidad del VISTO en los MENSAJES",
          "Mostrar estado usuario (Conectado/Desconectado)",
          "Solucion a la funcion de conectarse y desconectarse del Chat",
          "Solucionar problema cierre de sesion y SnapshopListener",
          "Obteniendo el ultimo mensaje y el numero de mensajes no leidos",
          "Enviar notificaciones en el Chat",
          "Enviar notificaciones estilo Whatsapp - Messenger",
          "Mostrar ultimos tres mensajes en la notificacion",
          "Mostrar imagenes de los usuarios en la notificacion",
          "Enviar mensajes desde la notificacion",
          "Validaciones necesarias para mostrar imagenes en la notificacion",
          "Enviar mensajes desde la notificacion e incluir la notificacion"
        ],
        "Ultimos detalles de la aplicacion": [
          "Aplicacion completa"
        ]
      },
      "requirements": [
        "Lo único que necesitas es conocimiento en el lenguaje de programación JAVA y muchas ganas de aprender"
      ],
      "description": "En este curso te voy a enseñar como crear una aplicación Red Social con un chat similar a WHATSAPP paso a paso utilizando Android Studio y Firebase.\nAlgunos de los temas que veras a lo largo del curso serán los siguientes:\nIntegrar una aplicación con Firebase.\nManejo de datos en tiempo real utilizando Firebase Cloud Firestore\nAutenticacion de usuarios con Firebase Authentication\nAutenticacion de usuarios con GOOGLE\nNotificaciones Push Avanzadas\nNotificaciones Push estilo WHATSAPP -MESSENGER\nRelación de datos en bases de datos NOSQL\nGuardar y mostrar imagenes con Firebase Storage\nDiseños avanzados de pantallas en Android\nAndroid Studio:\nes un entorno de desarrollo, un software, que cuenta con herramientas y servicios para que los desarrolladores puedan crear nuevas aplicaciones para Android. Muchos de los sistemas operativos actuales cuentan con este tipo de entornos de desarrollo, algo que ocurre también en el sistema operativo de Google.\nFirebase:\nse trata de una plataforma móvil creada por Google, cuya principal función es desarrollar y facilitar la creación de apps de elevada calidad de una forma rápida, con el fin de que se pueda aumentar la base de usuarios y ganar más dinero. La plataforma está subida en la nube y está disponible para diferente plataformas como iOS, Android y web. Contiene diversas funciones para que cualquier desarrollador pueda combinar y adaptar la plataforma a medida de sus necesidades.",
      "target_audience": [
        "Desarrolladores Android",
        "Desarrolladores Java",
        "Estudiantes de informatica",
        "Estudiantes de ingenieria de Sistemas",
        "Estudiantes de ingenieria de Software",
        "Ingenieros de Software",
        "Ingenieros de Sistemas",
        "Ingenieros en Computacion",
        "Licenciados en informatica"
      ]
    },
    {
      "title": "iOS программирование на Swift в Xcode - Уровень 2",
      "url": "https://www.udemy.com/course/ios-swift-programming-leveltwo/",
      "bio": "Практический курс по созданию iOS приложения на языке Swift в Xcode с использованием CoreData, CoreLocation, StoreKit",
      "objectives": [
        "Сможете создавать свои iOS приложения",
        "Научитесь работать в Xcode (среда разработки iOS приложений)",
        "Научитесь делать прототипы будущего приложения",
        "Освоите работу с CoreData",
        "Освоите работу с геолокацией устройства (CoreLocation)",
        "Освоите работу с камерой iPhone и фотоальбомами",
        "Научитесь делать локализацию контента приложения",
        "Научитесь делать встроенные покупки в приложении (StoreKit)",
        "Поймете механику публикации своего приложения в AppStore"
      ],
      "course_content": {
        "Введение": [
          "О преподавателе, о курсе",
          "Создание прототипов приложения",
          "Xcode - создание view в storyboard"
        ],
        "CoreData - структура приложения": [
          "Проектируем модель",
          "Исправляем ошибку с codegen",
          "Создание объектов в базе данных",
          "Создание объектов в базе данных - часть 2",
          "Получение объектов из базы данных",
          "Важный нюанс"
        ],
        "Программирование iOS приложения": [
          "Создание новых папок",
          "Список заметок в папке",
          "Общий список заметок",
          "Создание новых заметок",
          "Изменение заметки",
          "Выбор источника картинки",
          "Выбор картинки для заметки",
          "Доработка модели для сохранения изображения",
          "Косметические доработки",
          "Привязка заметки к папке",
          "Привязка заметки к папке - часть 2"
        ],
        "CoreLocation - работаем с геолокацией": [
          "Получение текущих координат устройства",
          "Привязка локации к заметке",
          "Выводим положение заметки на карту",
          "Меняем координаты заметки",
          "Устанавливаем координаты заметки",
          "Карта со всеми заметками",
          "Текущая локация устройства"
        ],
        "StoreKit - работа со встроенными покупками": [
          "Создание встроенной покупки в App Store connect",
          "Получаем название, описание и цену продукта",
          "Покупаем полную версию",
          "Форма покупки",
          "Тестируем покупку",
          "Встроенные покупки - делаем красиво"
        ],
        "Локализация приложения": [
          "Локализация контента приложения",
          "Локализация названия приложения"
        ],
        "Дизайн приложения": [
          "Кастомизация ячейки в таблице",
          "Работаем с картинками",
          "Иконки в TabBar",
          "Делимся заметкой с другом",
          "Constraints - адаптация приложения под разные устройства",
          "Добавляем иконку и стартовый экран"
        ],
        "Завершение": [
          "Загрузка приложения в AppStore",
          "Подведем итоги"
        ]
      },
      "requirements": [
        "Mac Book (Или любое другое устройство на которое устанавливается Mac OS X)"
      ],
      "description": "В данном курсе мы создадим полностью рабочее iOS приложение \"LocationNotes\",  добавим в него встроенную покупку, опубликуем в AppStore.\nДанное приложение будет создавать текстовые заметки, привязывать к ним изображение, геолокацию.\n\n\nВ процессе курса мы пройдем все этапы разработки: от установки среды разработки Xcode, до публикации приложения в AppStore.\n\n\nВ приложении будем использовать технологии CoreData (внутренняя база данных), CoreLoсation (определение координат устройства), StoreKit (встроенные покупки), работа с фотоальбомами и камерой, локализация контента приложения.\n\n\nВ дальнейшем данное приложение вы сможете использовать как портфолио при устройстве на работу, а так же выставить за него цену в AppStore и заработать на продажах этого приложения.",
      "target_audience": [
        "Программистам, которые хотят углубить свои знания в iOS разработке и программировании приложений для iOS"
      ]
    },
    {
      "title": "Desenvolvimento Android e IOS com Flutter -Crie 15 Apps",
      "url": "https://www.udemy.com/course/desenvolvimento-android-e-ios-com-flutter/",
      "bio": "Apps nativos para Android e IOS com Flutter, crie Apps como: Youtube, WhatsApp, Uber, OLX e muito mais!",
      "objectives": [
        "Criar Apps profissionais para Android e IOS usando Flutter",
        "Dominar Dart e o Framework Flutter da Google",
        "Prestar serviços de desenvolvimento de Apps para Android e IOS",
        "Componentes de interface: linhas e colunas, botões, espaçamentos, alinhamentos, imagens",
        "Entrada de dados: caixas de textos, checkbox, radiobutton, switch e Slider",
        "Recursos de rotas básico & avançado",
        "APIs / Webservice: requisições, put, patch e delete, API do Youtube",
        "Banco de dados, preferências e Firebase (Realtime database & Firestore)",
        "Áudio & Vídeo",
        "WhatsApp: autenticação, abas, popup menu, uploado de imagens",
        "Uber: mapas e geolocalização, autenticação, rotas, exibindo marcadores, local do usuário e muito mais",
        "OLX: máscaras e padrões, validação de campos e imagem, dropdown, filtros, slider e muito mais",
        "Animações: animações implícitas, Tween Builder, Animated Builder",
        "MobX Gerência de estados: auto run, valores computados, reações, listas, provider",
        "Flutter Web: responsividade, orientation builder, layout builder, interface de loja virtual responsiva"
      ],
      "course_content": {
        "Boas vindas": [
          "Boas vindas",
          "Youtube e Comunidade WhatsApp"
        ],
        "Instalação do Flutter": [
          "Instalação do Flutter - O que irei aprender?",
          "Instalação no Windows",
          "Instalação no MacOS",
          "Instalação no Linux",
          "{Opcional} Instalando VS Code"
        ],
        "Criando primeiro projeto": [
          "Criando primeiro projeto - o que irei aprender?",
          "Interface do Android Studio",
          "Configuração do Android Studio",
          "Virtulização",
          "Configurando Emulador",
          "Executando App no dispositivo real"
        ],
        "Executando App no IOS": [
          "Instalando Xcode & simulador"
        ],
        "Criando meu primeiro App": [
          "Criando meu primeiro App - o que irei aprender?",
          "Configurando o projeto",
          "Criando o App"
        ],
        "Algoritmo básico": [
          "O que irei aprender? algoritmo",
          "O que é Algoritmo?",
          "Tomada de decisão",
          "Repetições"
        ],
        "Aprenda Dart do zero": [
          "Aprenda Dart do zero - o que irei aprender?",
          "Você já sabe outra linguagem de programação?",
          "O que é uma linguagem de programação?",
          "Linguagem de programação Dart",
          "Executando códigos online",
          "O que são variáveis - teoria",
          "O que são variáveis - prática",
          "Tipos de variáveis",
          "Entenda Arrays",
          "Operadores aritméticos",
          "Operadores relacionais e lógicos",
          "Controle de fluxo - if else",
          "Controle de fluxo - switch",
          "Loops - for & while"
        ],
        "Dart Intermediário e avançado": [
          "Dart intermediário e avançado - o que irei aprender?",
          "Funções",
          "Funções anônimas & parâmetros",
          "Classes e objetos",
          "Construtores",
          "Getter e Setter",
          "Herança",
          "Sobrescrita de métodos",
          "Modificadores Static e Final",
          "Classes abstratas",
          "Interface",
          "Mixins",
          "Coleções - listas",
          "Coleções - mapas"
        ],
        "Resumo da Linguagem Dart": [
          "Resumo da linguagem Dart - o que irei aprender?",
          "Dart básico",
          "Dart intermediário",
          "Dart avançado"
        ],
        "Componentes de interface": [
          "Componentes de interface - o que irei aprender?",
          "Widgets e Material design",
          "Estrutura de um App",
          "Colunas e linhas",
          "Formatação de textos",
          "Botões",
          "Espaçamentos",
          "Alinhamentos",
          "Imagens",
          "Layout base com Scaffold",
          "Widgets - Stateless & Stateful",
          "#App1 Frases do Dia - Criando interface",
          "#App1 Frases do Dia - Gerando frase",
          "#App2 JokenPo - Criando interface",
          "#App2 JokenPo - Gesture Detector",
          "#App2 JokenPo - Exibindo resultado"
        ]
      },
      "requirements": [
        "Curso para iniciantes: você aprenderá do zero como desenvolver Apps.",
        "Windows (7 ou superior), Mac ou Linux com arquitetura 64 bits.",
        "Nenhum software pago é necessário.",
        "Computador com acesso à internet."
      ],
      "description": "Você quer desenvolver Apps para Android e IOS em um único curso? Utilizando apenas um código? Se você respondeu sim para essas perguntas você está no curso certo!\nSeja bem-vindo(a) ao Curso Completo de Desenvolvimento Android e IOS com Flutter! o Flutter é o novo Framework para desenvolvimento de apps Android e iOS criado pela gigante Google!\nCom o Flutter não é necessário aprender a linguagem de programação Java/Kotlin para desenvolvimento Android e Swift/Objective-C para desenvolvimento IOS, você irá aprender uma única linguagem de programação (Dart) e terá um App nativo para Android e IOS, parece mentira né? mas essa é uma revolução que o Google está trazendo para o desenvolvimento de Apps.\nResumão do curso:\nAprenda fundamentos da programação Dart, a linguagem utilizada para desenvolver com Flutter.\nSaiba como projetar interfaces bonitas e com poucos códigos.\nEntenda as arrays, loops, orientação a objetos e estruturas condicionais.\nConstrua 15 aplicativos durante o curso que poderão ser utilizados para o seu portfólio.\nAprenda a publicar os seus apps.\nConstrua 15 apps reais!\nNesse curso de desenvolvimento Android e IOS com Flutter você aprenderá a criar apps parecidos com os que você já usa: Jokenpo, Álcool ou gasolina, Cara ou coroa, Notas diárias, Youtube, WhatsApp, Uber, OLX e muito mais!\nSatisfação garantida ou seu dinheiro de volta\n\"E se eu não gostar do curso?” A Udemy oferece uma garantia de reembolso, essa é mais uma garantia de qualidade e um incentivo a mais para você começar já! Após a compra você terá 30 dias para testar o curso, e se não gostar, basta solicitar o reembolso.\nJunte-se a mais de 260 mil alunos que já fizeram e aprovaram meus outros cursos! Comece agora mesmo esse curso de desenvolvimento com o Flutter!",
      "target_audience": [
        "Qualquer pessoa que tenha vontade de aprender a criar Apps para Android/IOS."
      ]
    },
    {
      "title": "Flutter Bootcamp Programı | Dart | 2025",
      "url": "https://www.udemy.com/course/flutter-bootcamp-program-dart/",
      "bio": "Özel tasarlanmış ders programı ile pratik ve verimli sonuç alarak gerçek bir Flutter Bootcamp deneyimi yaşayacaksınız",
      "objectives": [
        "Yıllardır birçok şirkette düzenlediğimiz son derece verim aldığımız Gerçek Bootcamp deneyimini yaşayacaksınız.",
        "Kişiye özel çalışma programı oluşturabileceksiniz.",
        "7 adet Ödev yapacaksınız.",
        "1 adet Medium Yazısı yazacaksınız.",
        "1 adet Bitirme Projesi yapacaksınız.",
        "Ders tekrarı veya ders sırasında not alabilmek için kitap niteliğinde detaylı ders içi slaytlara sahip olacaksınız.",
        "Dart diline hakim olarak programlama yapabileceksiniz.",
        "Flutter ile Android ve IOS programlama dünyasının detaylarına hakim olacaksınız.",
        "Tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.",
        "Aklınıza gelebilecek olan tüm fikirlerinizi mobil uygulamaya dönüştürebileceksiniz.",
        "Geliştirdiğiniz uygulamanızı uygulama marketleri ile birçok kişiye ulaştırabileceksiniz."
      ],
      "course_content": {
        "1.Gün": [
          "1.Ders - Bootcamp Tanıtım",
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Koala Sürümü",
          "2.Ders - Dart Giriş - Değişkenler Giriş",
          "3.Ders - Değişkenler - Sabitler - Tür Dönüşümü - 1.Ödev"
        ],
        "2.Gün": [
          "1.Ders - Karşılaştırma Operatörleri - if - Switch - Döngüler Giriş",
          "2.Ders - Döngüler - Nesne Tabanlı Programlama Giriş",
          "3.Ders - Nesne Tabanlı Programlama Örnek - Fonksiyonlar - 2.Ödev"
        ],
        "3.Gün": [
          "1.Ders - Null Safety - Import - Package - Static - Enumeration",
          "2.Ders - Composition - Kalıtım - Downcasting - Upcasting - Tip Kontrolü",
          "3.Ders - Override - Interface - Collections Giriş - List"
        ],
        "4.Gün": [
          "1.Ders - List Örnek- Sıralama&Filtreleme- HashSet&HashMap- Try Catch- Asenkron",
          "2.Ders - Flutter Giriş - Emulatör Kullanımı",
          "3.Ders - Tasarım Giriş - Renk Seçimi - Font Kullanımı"
        ],
        "5.Gün": [
          "1.Ders - Row - Column - Stack - MainAxisAligment - CrossAxisAligment - Padding",
          "2.Ders - Spacer- SizedBox- Custom Widget- Çoklu Ekran ve Dil Desteği- 3.Ödev",
          "3.Ders - Tasarım Yapıları - StatefulWidget - StatelessWidget - State Kullanımı"
        ],
        "6.Gün": [
          "1.Ders - Sayfalar Arası Geçiş ve Veri Transferi- Geri Tuşu- Yaşam Döngüsü",
          "Güncelleme - Geri Dönüş Tuşu - PopScope",
          "2.Ders - Widget Kodlama Teknikleri - FutureBuilder - BottomNavigationBar",
          "3.Ders - Snackbar-Alert-4.Ödev-ElevatedButton-TextButton-TextField-Text-Image"
        ],
        "7.Gün": [
          "1.Ders - Switch - Checkbox - RadioButton - ProgressBar - Slider- Time&DatePicker",
          "2.Ders - DropDownMenu- GestureDetector- ScrollView- 5.Ödev- Kişiler Uygulaması",
          "3.Ders - Kişiler Uygulaması Tasarım - AppBar Arama - ListView"
        ],
        "8.Gün": [
          "1.Ders - Ürünler Uygulaması - Detaylı ListView - Filmler Uygulaması Giriş",
          "2.Ders - Filmler Uygulaması Tasarım - GridView - 6.Ödev",
          "3.Ders - Uygulama Mimarisi Giriş - Bloc Pattern Uygulaması"
        ],
        "9.Gün": [
          "1.Ders - Kişiler Uygulaması Uygulama Mimarisi - Bloc Pattern",
          "2.Ders - Filmler Uygulaması Uygulama Mimarisi Bloc Pattern- Depolama İşlemleri",
          "3.Ders - Shared Preferences - Veritabani Giriş"
        ],
        "10.Gün": [
          "1.Ders - Veritabanı Kullanımı Örneği - SQLite",
          "2.Ders - Kişiler Uygulaması SQLite - 7.Ödev",
          "3.Ders - Filmler Uygulaması SQLite"
        ]
      },
      "requirements": [
        "Temel bilgisayar kullanma becerisine sahip olmak.",
        "Ortalama bir bilgisayara sahip olmak.",
        "Bilgisayarınıza programlama yapmak için Android Studio yüklemek."
      ],
      "description": "Gerçek bir Bootcamp deneyimi yaşamaya hazır mısınız?\nYıllardır birçok şirkette düzenlediğimiz son derece verim aldığımız Bootcamp Programını bire bir aynı şekilde Udemy Eğitimi olarak sizlere sunuyoruz.\nBahsettiğimiz şirket eğitimlerine Udemy profilimizden veya sosyal medya hesaplarımızdan erişebilirsiniz.\nŞirketlerde düzenlediğimiz Bootcampler ile öğrencilerimiz çok iyi yerlere geldiler.\nSiz de bu harika Bootcamp programımız ile Gerçek Bootcamp deneyimi yaşayarak çok iyi yerlere gelebilirsiniz.\nÖzenle seçilmiş ders müfredatı ile pratik, hızlı ve verimli şekilde sonuç alacaksınız.\nGerçek Bootcamp deneyiminin verimini arttırmak için aşağıdaki yöntemleri eğitim boyunca kullanıcaz.\nKişiye özel çalışma programı oluşturabileceksiniz.\n7 adet Ödev yapacaksınız.\n1 adet Medium Yazısı yazacaksınız.\n1 adet Bitirme Projesi yapacaksınız.\nDers tekrarı veya ders sırasında not alabilmek için kitap niteliğinde detaylı ders içi slaytlara sahip olacaksınız.\nBootcamp ile ilgili daha fazla detaylı bilgi almak için ilk ders videomuzu izleyebilirsiniz , videomuz herkese açıktır.\nSorularınız olursa çekinmeyin lütfen , bize her zaman ulaşabilirsiniz.\nProgramlama Öğrenmek Neden Önemli ?\nHer geçen gün yazılım hayatımızın en derinine kadar iniyor.Hayatımızı kolaylaştırırken yazılımcılara büyük bir iş alanı açılıyor. Çok geç olmadan bu dijital çağa ayak uydurmalı ve yazılım sektöründe yer almalısınız.Bu dijitalleşen çağda ortalama bir bilgisayar ile kendinize yeni bir iş fırsatı yaratabilirsiniz. Özellikle mobil uygulama geliştirme sayesinde tek başınıza istediğiniz her yerden projeler geliştirebilirsiniz. Hangi meslek ve eğitimden olduğunuz yazılımcı olmak için önemsizdir. Her yaşta bu beceriyi kazanabilirsiniz.\nBir eğitimci olarak hazırladığım eğitim müfredatı ile profesyonel seviyeye gelmek sizin elinizde.Tek yapmanız gereken zamanızı ayırarak geleceğinizi değiştirecek yazılım becerisini kazanmak için çabalamak.\nGelin birlikte bu yola çıkalım ve size değer katalım.\n\n\nBaşarılar dilerim.\n\n\nEğitimi incelediğiniz için teşekkürler…",
      "target_audience": [
        "Hangi meslekten olduğunuzun veya Hangi eğitimi aldığınızın yazılımcı olmak için önemi yoktur.",
        "Programlamaya ve teknolojiye ilginizin olması yeterlidir.",
        "Her yaşta bu beceriyi kazanabilirsiniz."
      ]
    },
    {
      "title": "1 Ayda iOS Uygulamanız Olsun! - iOS10 ve Swift 3",
      "url": "https://www.udemy.com/course/ios-uygulamaniz-olsun/",
      "bio": "Herkes yazılım yapabilir. Beklemeyin. Hayalinizdeki fikri gerçekleştirin!",
      "objectives": [
        "Bu kursun sonunda öğrenciler orta seviyede iOS bilgisi olan ve kendini geliştirebilecek durumda olan iOS geliştiricisi olacaklardır."
      ],
      "course_content": {
        "Başlarken": [
          "iOS uygulaması yapmak için nedenler",
          "Mac Bilgisayarlarını karşılaştırma",
          "Sanal MacOSx kurma klavuzu",
          "XCode editörünü yükleme"
        ],
        "İlk Uygulamanızı Yapın": [
          "XCode Editörünüzün Özelikleri",
          "İlk Uygulamanızı Yapın",
          "Etiket, Metin Kutusu ve Buton Ekleme",
          "Sketch ile Resim Oluşturma ve Resim Özellikleri",
          "Kod Dosyası ile Arayüz Arasında Bağlantı Kurma",
          "Klavye Kontrolü Yapabilme",
          "Hello World Projesi"
        ],
        "Swift 3 Dilini Öğrenin": [
          "Değişken, Sabit ve Temel Tipler",
          "Optional Nedir, Nasıl Kullanılır",
          "Array Tipi ve Kullanımı",
          "Dictionary Tipi ve Kullanımı",
          "If Koşulu ve Çift Koşul Kullanımı",
          "Switch Kullanımı",
          "Döngülerin Kullanımı",
          "Kontrol Transfer Deyimleri",
          "Fonksiyonlar - Return ve Throw Kullanımı",
          "Yapılar ( Structures) ve Sınıf (Class)",
          "Eklenti ( Extension) ve Protokol (Protocol)",
          "Benim Oyunsaham"
        ],
        "iOS Uygulama Temelleri": [
          "Tablo Oluşturma - Dinamik ve Statik Tablo",
          "Dinamik Tabloda Hücre Oluşturma",
          "Dinamik Tabloda Verileri Diziden Okuma",
          "Navigasyon ve Tablodan Detay Ekrana Veri Aktarımı",
          "Class Tipindeki Veriyi Detay Ekrana Aktarma",
          "Dinamik Tablodaki Hücrelerin Verilerini Gösterme",
          "Koşula Bağlı Resim Gösterme",
          "Autolayout ile Tasarımı Donanım Bağımsız Programlama",
          "Scrollview kullanımı ve Otomatik Yükseklik Ayarı",
          "Alt Menü (Tabbed Pane) Kullanımı ve Alt Bara Ikon ekleme",
          "Tablolu Yemek Tarifleri Projesi"
        ],
        "Parmak Hareketlerini Kullanma": [
          "Sallama Hareketi (Shake Gesture)",
          "Tıklama Hareketi (Tap Gesture)",
          "Süpürme Hareketi (Swipe Gesture)",
          "Parmak Hareketleri Projesi"
        ],
        "Animasyon Kullanımı": [
          "Belirme Animasyonu",
          "Kayma Animasyonu",
          "Büyütme Animasyonu",
          "Animasyonları birlikte kullanma",
          "Transformasyon Animasyonu",
          "Animasyonlar Projesi"
        ],
        "Cocoapods ile iOS Kütüphanelerini Kullanma": [
          "Cocoapods Nedir?",
          "Bekleme Efekti Kütüphanesi Yükleme",
          "Bekleme Test Projesi"
        ],
        "Firebase’i Arka Sunucu olarak Kullanma": [
          "Firebase Nedir, Nasıl Kullanılır?",
          "Firebase Kütüphanesini Yükleme",
          "Firebase Veritabanı Yapısı",
          "Firebase’e Veri Yazma",
          "Firebase’deki Verileri Okuma",
          "Firebase’e Resim Yükleme",
          "Firebase’deki Resimleri Alma",
          "Yemek Tarifleri - Firebase Projesi"
        ],
        "Yemek Tarifi Uygulaması": [
          "Yemek Tarifi Uygulamasının Sketch Tasarımı",
          "Firebase’den Verilerin Getirilmesi ve Thread Kullanımı",
          "Tabloya Menü Eklenmesi",
          "Sosyal Medyada Paylaşma",
          "Uygulama içinde Kullanıcıya Özel Veri Saklama ( Core Data)",
          "Yemek Tarifleri - Sosyal Medya Projesi"
        ],
        "Bonus": [
          "Uygulama Fikirleri",
          "Arayüz Tasarımı için Kaynak Web Siteleri",
          "Programlama için Kaynak Web Siteleri"
        ]
      },
      "requirements": [
        "Öğrencilerin MacOSX işletim sistemi olan bir bilgisayarı olması gerekmektedir."
      ],
      "description": "Bu kurs hiç yazılım bilmeyenlerin dahi anlayabileceği şekilde tasarlanmıştır.\n- Tüm yazılımlar iOS 10 ve Swift 3 kullanılarak yazılmıştır.\n- Derslerde anlatılan yazılımlar indirilebilir.\n- Tüm dersler Türkçe olarak anlatılmıştır.\n- Bu kurs ile hem iPhone hem de iPad için program geliştirebilirsiniz.\n- Bu kursun sonunda tasarımı verilen Yemek Tarifi uygulamasını ve buna benzer bir çok uygulamayı yapabileceksiniz.\n- Tüm yazılımlar adım adım anlatılmış ve öğrencinin kafasında soru işareti kalmayacak şekilde tüm olası senaryolar üstünde durulmuştur.\n- Kursun sonunda öğrencinin kendini geliştirebilmesi için kaynak websiteler hakkında bilgi verilmiştir.",
      "target_audience": [
        "iOS uygulaması yapmak isteyen herkes, yazılım bilgisi mecburiyeti yoktur."
      ]
    },
    {
      "title": "Começando com Android - Crie 6 Apps",
      "url": "https://www.udemy.com/course/comecando-com-android-crie-4-apps/",
      "bio": "Aprenda em apenas 4 semanas a criar 6 Apps do zero",
      "objectives": [
        "Você irá criar Apps reais, que poderá mostrar aos amigos, família ou em uma entrevista de trabalho."
      ],
      "course_content": {
        "Introdução": [
          "Introdução"
        ],
        "Vamos começar?": [
          "O que gostaria de aprender no curso?",
          "Grupo no Facebook"
        ],
        "Instalação e configuração no Windows": [
          "Introdução",
          "Instalação Java, JDK e JRE",
          "Configurar variáveis de ambiente - Windows 10",
          "Instalação Eclipse IDE",
          "IMPORTANTE versões Android Studio",
          "Instalação do Android Studio",
          "Encontrou Problemas? Android Studio - Erro Caminho do JDK Inválido",
          "Atualizando SDK do Android",
          "Android Studio - Emulador",
          "Instalação do Genymotion e Configuração no Android Studio {Atualizado}",
          "Criando Seu Primeiro App",
          "Executando o App no Dispositivo Físico"
        ],
        "Aprenda a Linguagem de Programação Java": [
          "Introdução",
          "Linguagem de programação Java",
          "Primeira Aplicação em Java",
          "Processo de compilação Java",
          "Processo de compilação Java",
          "O que são variáveis?",
          "Criando Variáveis e seus tipos",
          "Valores de Armazenamento Variáveis",
          "O que são variáveis?",
          "Operadores Básicos - Aritméticos",
          "Operadores Relacionais e Lógicos",
          "Estruturas Condicionais - if else",
          "Loops – while, do...while e for - Introdução",
          "Loops – while, do...while e for"
        ],
        "Aprenda a Linguagem de Programação Java do Zero - Orientação a Objetos": [
          "Métodos",
          "Classes e Objetos",
          "Modificadores de acesso",
          "Construtores",
          "Introdução Herança",
          "Encerramento Java"
        ],
        "Android Studio e Estrutura de um Projeto Android": [
          "Interface do Android Studio",
          "Estrutura de um Projeto Android",
          "O que é XML? e porque usamos?",
          "Entenda o Arquivo AndroidManifest.xml",
          "Entenda o Arquivo R.java",
          "Entenda o Arquivo strings.xml",
          "Entenda o Arquivo Dimens.xml",
          "#App1 - Como usar TextViews {Atualizado}",
          "#App1 - Como usar Buttons"
        ],
        "Android Studio - Elementos de Interface": [
          "O que irei aprender nesse módulo?",
          "#app2 Frases do dia - Entenda Arrays",
          "#app2 Frases do dia - Entenda Arrays - Parte 1",
          "#app2 Frases do dia - Final",
          "#app3 Idade de Cachorro - Adicionar Imagens",
          "#app3 Idade de Cachorro - Caixas de texto",
          "#app4 Gasolina ou Álcool - Criando a Tela",
          "#app4 Gasolina ou Álcool - Final"
        ],
        "Activities e Navegação": [
          "O que irei aprender?",
          "O que é uma Activity?",
          "Ciclo de vida de uma Activity",
          "Navegando por Diferentes Activities",
          "#app5 Institucional - Navegando entre Activities",
          "#app5 Institucional - Navegando entre Activities II",
          "#app5 Institucional - Navegando entre Activities Final",
          "Passando Dados Entre Activities",
          "#app6 - Cara ou Coroa - Interface",
          "#app6 Cara ou Coroa - Exibindo imagens"
        ],
        "Quer aprender muito mais?": [
          "Matricule-se no Curso Completo do Desenvolvedor Android"
        ],
        "Dúvidas frequentes": [
          "Ativando virtualização",
          "Activity_main X content_main",
          "Importar projeto Eclipse",
          "Importar projeto Android Studio",
          "Unable to start virtual device"
        ]
      },
      "requirements": [
        "Não é necessário conhecimentos prévios de programação, você aprenderá do zero.",
        "Um PC ou MAC com conexão com Internet.",
        "Nenhum software pago é necessário."
      ],
      "description": "Você tem muitas idéias de criação de Apps e não sabe por onde começar? ou está procurando iniciar sua carreira Desenvolvendo aplicativos em Java para Android? ou não achou um curso que ensine de forma prática?\nCom o Curso Começando com Android, você irá do zero à criação de apps em apenas 2 semanas, o curso é todo orientado a projetos, você irá aprender criando apps reais.\n** Nunca foi tão fácil e divertido criar Apps **\n\nConteúdo\nFundamentos da programação Java, utilizada para desenvolver Apps para Android\nVariáveis, Arrays, Estruturas condicionais, Loops, Orientação a Objetos\nEntrada de dados, botões, elementos de interação com o usuário\nAprenda como projetar interfaces com o Android Studio\nConstrua vários Apps durante o curso\nGanhe dinheiro com seus Apps\nComece agora mesmo, e em 2 semanas você estará desenvolvendo suas idéias, alcançando uma nova carreira profissional, tudo de forma prática.",
      "target_audience": [
        "Qualquer pessoa que queira aprender de forma prática, como criar Apps."
      ]
    },
    {
      "title": "Desarrollo de apps para iOS 13 con SwiftUI y Swift 5.2",
      "url": "https://www.udemy.com/course/desarrollo-de-apps-para-ios-13-con-swiftui-y-swift-52/",
      "bio": "Crearemos apps con CoreData, Realm, Firebase, Mapkit, URLSession, Alamofire, combine, MVVM y mas...",
      "objectives": [
        "Desarrollo de aplicaciones para ecosistemas iOS",
        "Aprenderán a utilizar el framework SwiftUI",
        "El manejo del lenguaje Swift",
        "Utilizar Xcode 11 para la creación de aplicaciones",
        "Utilizar bases de datos en Core Data",
        "Utilizar el State, ObservableObject, EnvironmentObject, Binding",
        "APIs con. URLSession y Alamofire",
        "Bases de datos con Realm",
        "Firebase, Firestore, Storage y Autenticación de usuarios",
        "Persistencia con iCloudkit y sincronización con Core Data",
        "Machine Learning con MLKit y Firebase"
      ],
      "course_content": {
        "Introducción a Swift": [
          "Bienvenidos",
          "Instalación de Xcode y uso de licencias de desarrollo",
          "Variables",
          "Constantes",
          "Uso de strings",
          "Opcionales en swift",
          "Cambio de tipos de dato",
          "Sentencia IF",
          "Sentencia switch",
          "Ciclo FOR",
          "Arrays",
          "Tuplas",
          "Funciones",
          "Clases"
        ],
        "Introducción a SwiftUI": [
          "Estructura de un proyecto de SwiftUI",
          "Estructura del ContentView",
          "Entendiendo los contenedores VStack y HStack",
          "Formato a Text",
          "Creando Botón",
          "Uso de imágenes e iconos",
          "Crear alerta",
          "Crear alerta actionSheet",
          "Agregar acciones a las alertas",
          "Agregar imágenes y formato",
          "Crear snippet",
          "Proyecto PrimerApp"
        ],
        "Entendiendo el State": [
          "¿Qué es el State?",
          "Ejemplo de uso del State",
          "Creando contenedor List y llenarlo con State",
          "Filtrando lista con State",
          "Proyecto EjemploState"
        ],
        "Entendiendo ObservedObject, Binding y EnvironmentObject": [
          "Observed Object",
          "Ejecutar acciones con funciones en nuestra clase",
          "Observed Object en mas de una vista",
          "Uso del Binding",
          "Uso del Enviroment Object",
          "Proyecto EjemploObserved&EnviromentObject"
        ],
        "Navegacion y envío de parámetros entre vistas": [
          "NavigationView",
          "Crear items en NavigationView",
          "Error en navigationlink en item",
          "Nuevo error en Xcode 11.3",
          "Crear ventana modal",
          "Envio de parâmetros entre vistas",
          "Enviar y recibir parámetros de una ventana modal",
          "Crear modelo de datos para envío de parámetros",
          "Proyecto Navegación"
        ],
        "Persistencia de datos con User Defaults y Dark Mode": [
          "Dark Mode",
          "Manejo de colores en Dark y Light",
          "Uso de imágenes en el cambio de modo",
          "User Defaults",
          "Proyecto Dark Mode y User Defaults"
        ],
        "Bases de datos con Core Data": [
          "Introducción a Core Data",
          "Maquetar nuestra app",
          "Celda personalizada",
          "Uso de modificadores para ahorrar código",
          "Formulario para guardar",
          "Guardar registros",
          "Petición de datos con fetch Request",
          "Mostrar datos en nuestra celda",
          "Condiciones con los predicados",
          "Eliminar registros",
          "Editar registros",
          "Realizar llamada telefónica",
          "Proyecto Core Data"
        ],
        "Tomando fotografias y guardarlas en CoreData": [
          "Crear TopBar con picker",
          "Uso del imagePickerController",
          "Abriendo galeria y tomar imagen",
          "Guardar imagen en Core Data",
          "Crear galeria con scrollview",
          "Permisos para uso de cámara y librería",
          "Proyecto Core Data Imágenes"
        ],
        "Protocolos, Delegados e introducción al storyboard": [
          "Protocolos y delegados",
          "Introducción al storyboard",
          "Errores comunes en el storyboard",
          "Crear TableView (List) en storyboard"
        ],
        "TabView, Mapas y uso de storyboard con SwiftUI": [
          "TabView",
          "Crear mapa en SwiftUI",
          "Mostrar localización en mapa parte I",
          "Mostrar localización en mapa parte II",
          "Permisos y mostrando mapa",
          "Incrustar storyboard en SwiftUI",
          "Obtener coordenadas desde storyboard",
          "Pasar información entre storyboard y SwiftUI",
          "Proyecto Mapas"
        ]
      },
      "requirements": [
        "Tener un equipo iMac, MacBook, etc.",
        "Instalar el software de desarrollo Xcode 11"
      ],
      "description": "En este curso nos centraremos especialmente en la última gran novedad de apple , el framework SwiftUI\nGracias a este framework, tendremos la habilidad de crear apps con una mayor velocidad que antes, además de que la interfaz de nuestras aplicaciones serán mucho más rápidas y fáciles de desarrollar olvidándonos de los tediosos constraints , siendo muy intuitivo y eliminando gran cantidad de código que antes era necesario escribir. Además de poder alternar entre los diferentes modos light o dark de una forma muy simple.\npero no todo es diseño, y claramente este gran framework ofrece muchas novedades en la lógica de programación, añadiendo nuevas características importantes como los estados, el observable object, environment object, el binding y muchas coas más esenciales para entender el funcionamiento de SwiftUI,\nAdemás de esto como siempre veremos ejemplos muy interesantes, con persistencia de datos, de manera simple y con bases de datos con:\n- Core Data\n- Realm\n- Firebase\n- Apis con URLSession y Alamofire\n- iCloudKit\n- Core Data sincronizado con iCloudKit\nAdemas de con trabajar con imágenes, uso de mapas, navegación o uso de tabs y muchas cosas más que harán que en muy poco tiempo ya estarás  preparado para subir apps a la app store y claro que veremos cómo hacerlo paso a paso.\nTambién veremos temas interesantes como ls notificaciones push, publicidad con Google AdMob, como traducir nuestras apps y ademas de ver temas relacionados al Machine Learning como MLKit de Firebase, CoreML Y Vision.\nAnímate y emprende una carrera hacia el futuro del desarrollo de aplicaciones para iOS con SwiftUI.",
      "target_audience": [
        "Todos los emprendedores con ganas de aprender a desarrollar aplicaciones móviles para sistemas iOS",
        "Desarrolladores de apps de iOS que desean aprender el framework SwiftUI",
        "Estudiantes en el desarrollo de aplicaciones móviles"
      ]
    },
    {
      "title": "Jetpack Compose полный курс",
      "url": "https://www.udemy.com/course/jetpack-compose-devcolibri/",
      "bio": "Создаем мобильный клиент VK под Android на Jetpack Compose",
      "objectives": [
        "Создание приложений на Jetpack Compose",
        "State",
        "Recomposition",
        "LazyLists",
        "Swipe to dismiss",
        "Working with VK API"
      ],
      "course_content": {
        "Введение": [
          "Для кого этот курс и что мы будем изучать?",
          "Что такое Jetpack Compose? Краткое введение"
        ],
        "Основы Jetpack Compose": [
          "Первое приложение на JC",
          "Материалы к уроку",
          "Preview и Column",
          "Материалы к уроку",
          "Row, Box, Modifier",
          "Материалы к уроку",
          "Instagram Profile Card. Создание шаблона",
          "Материалы к уроку",
          "Card",
          "Материалы к уроку",
          "Dark-Light Themes",
          "Материалы к уроку",
          "Text",
          "Материалы к уроку",
          "Image",
          "Материалы к уроку",
          "Порядок modifier-ов",
          "Материалы к уроку",
          "Завершение работы над Instagram Profile Card",
          "Материалы к уроку",
          "VkNewsClient. Создаем шапку поста",
          "Материалы к уроку",
          "VkNewsClient. Дорабатываем карточку поста",
          "Материалы к уроку"
        ],
        "Material Components": [
          "Введение в Material Components",
          "Материалы к уроку",
          "Scaffold и Bottom Navigation",
          "Материалы к уроку",
          "State и рекомпозиция",
          "Материалы к уроку",
          "Floating Action Button и SnackBar",
          "Материалы к уроку"
        ],
        "State и работа с ViewModel": [
          "Рекомпозиция",
          "Материалы к уроку",
          "Добавление ViewModel в InstagramProfileCard",
          "Материалы к уроку",
          "Делегаты",
          "Материалы к уроку",
          "Слушатели клика на элементы статистики",
          "Материалы к уроку",
          "Добавление ViewModel в VkNewsClient",
          "Материалы к уроку",
          "LazyColumn",
          "Материалы к уроку",
          "LazyRow",
          "Материалы к уроку",
          "Swipe to dismiss",
          "Материалы к уроку",
          "Добавляем LazyColumn в VkClient",
          "Материалы к уроку"
        ],
        "Навигация в Jetpack Compose": [
          "Навигация без использования библиотек",
          "Материалы к уроку",
          "Jetpack Compose Navigation",
          "Материалы к уроку",
          "Исправляем баги в навигации",
          "Материалы к уроку",
          "Рефакторинг навигации. RememberNavigationState",
          "Материалы к уроку",
          "Создание экрана комментариев. Часть 1",
          "Материалы к уроку",
          "UDF и создание стейта",
          "Материалы к уроку",
          "Навигация на экран комментариев (без использования библиотеки)",
          "Материалы к уроку",
          "Рефакторинг VIewModels",
          "Материалы к уроку",
          "Передача параметров во вью-модель. ViewModelFactory",
          "Материалы к уроку",
          "Nested Graph Navigation",
          "Материалы к уроку",
          "Fix navigation bugs",
          "Материалы к уроку",
          "Передача параметров в JetpackNavigation. Часть 1. Передача Id",
          "Материалы к уроку",
          "Передача параметров. Часть 2. Navigation Types",
          "Материалы к уроку",
          "Передача параметров. Часть 3. Parcelable, Json, Custom Nav Type",
          "Материалы к уроку"
        ],
        "ActivityResultApi": [
          "Deprecated onActivityResult",
          "Материалы к уроку",
          "ActivityResultApi",
          "Материалы к уроку",
          "ActivityResultApi в Jetpack Compose",
          "Материалы к уроку"
        ],
        "Работа с VK API": [
          "Авторизация через VK SDK",
          "Материалы к уроку",
          "SideEffect и LaunchedEffect",
          "Материалы к уроку",
          "LoginScreen",
          "Материалы к уроку",
          "Refactoring и хранение токена",
          "Материалы к уроку",
          "Загружаем данные",
          "Материалы к уроку",
          "Дорабатываем UI",
          "Материалы к уроку",
          "Реализация добавления/удаления лайков",
          "Материалы к уроку",
          "Подгрузка данных во время скролла",
          "Материалы к уроку",
          "Добавление состояния загрузки и реализация удаления элементов",
          "Материалы к уроку",
          "Реализация экрана комментариев",
          "Материалы к уроку"
        ],
        "Coroutine Flow": [
          "Введение в Coroutine Flow",
          "Материалы к уроку",
          "Flow Builders",
          "Материалы к уроку",
          "Flow Builder and terminal operators",
          "Материалы к уроку",
          "Операторы жизненного цикла Flow",
          "Материалы к уроку",
          "Map Flow to LiveData",
          "Материалы к уроку",
          "AsLiveData часть 2. onCompletion",
          "Материалы к уроку",
          "Использование Flow на UI-слое",
          "Материалы к уроку",
          "Холодные Flow",
          "Материалы к уроку",
          "Горячие Flow. MutableSharedFlow",
          "Материалы к уроку",
          "Практика MutableSharedFlow",
          "Материалы к уроку",
          "Промежуточные и кастомные операторы",
          "Материалы к уроку",
          "StateFlow",
          "Материалы к уроку",
          "Backpressure и buffer",
          "Материалы к уроку",
          "Буфер в горячих flow",
          "Материалы к уроку",
          "ShareIn и StateIn",
          "Материалы к уроку",
          "Exception Handling",
          "Материалы к уроку"
        ],
        "Практика Compose в приложении VK": [
          "Practice in VkNewsClient",
          "Материалы к уроку",
          "Exception handling in VkNewsClient",
          "Материалы к уроку",
          "Coroutine Flow in MainViewModel",
          "Материалы к уроку",
          "Refactoring. Clean Architecture",
          "Материалы к уроку",
          "Dependency Injection in NewsFeedClient",
          "Материалы к уроку",
          "Dependency Injection VkNewsClient Part 2",
          "Материалы к уроку",
          "Immutable and recomposition",
          "Материалы к уроку",
          "Анимации часть 1. AnimateAsState",
          "Материалы к уроку",
          "Анимации часть 2. Animation Spec",
          "Материалы к уроку",
          "Анимации часть 3. Animated Content",
          "Материалы к уроку"
        ],
        "Custom Views": [
          "Работа с Canvas",
          "Материалы к уроку",
          "Draw Path",
          "Материалы к уроку",
          "Detect Gestures",
          "Материалы к уроку",
          "Обзор приложения Terminal",
          "Материалы к уроку",
          "Реализация загрузки данных",
          "Материалы к уроку",
          "Рисуем график",
          "Материалы к уроку",
          "Масштабирование",
          "Материалы к уроку",
          "Добавление скролла и рисование свечей",
          "Материалы к уроку",
          "DerivedStateOf",
          "Материалы к уроку",
          "Custom Saver",
          "Материалы к уроку",
          "Remember Terminal State",
          "Материалы к уроку",
          "Path Effect",
          "Материалы к уроку",
          "Draw text",
          "Материалы к уроку",
          "Refactoring and bug fix",
          "Материалы к уроку",
          "Assist chip. Time frames",
          "Материалы к уроку",
          "Time Delimiters",
          "Материалы к уроку"
        ]
      },
      "requirements": [
        "Основы Android разработки",
        "Kotlin",
        "MVVM",
        "Retrofit",
        "Kotlin Coroutines (основы)"
      ],
      "description": "Важное сообщение для студентов из России\nВ связи с ограничениями работы систем Visa и Mastercard скорее всего вы не сможете оплатить этот курс и/или получить на него скидку. Как можно обойти это ограничение вы можете узнать в телеграм-канале \"Android. С нуля до Junior\" (android_sumin). Ссылку на него вы можете посмотреть в моем профиле преподавателя под фотографией есть кнопка \"Сайт\". В этом телеграм канале вы сможете задать любые вопросы, а также узнать о возможностях приобретения курсов (информация будет в закрепленном сообщении)\n\n\n_________________________________________________\nВсем привет! И добро пожаловать на курс по изучению Jetpack Compose.\nJetpack Compose - это новый современный инструментарий, который предоставляет разработчикам Android упрощенный и ускоренный способ создания собственных пользовательских интерфейсов на Android - с помощью этого инструментария; разработчики могут создавать приложения для Android с меньшим количеством кода, используя Kotlin!\nС Jetpack Compose создание собственного пользовательского интерфейса для платформы Android становится более легким, кратким, последовательным и требует меньше кода.\nJetpack совместим с существующим набором библиотек Android, которые можно использовать в стандартных проектах на Kotlin для написания приложений под Android. Отличительной же чертой Jetpack Compose является то, что он предлагает кардинально другой подход к созданию приложений.\nВ этом курсе мы с нуля изучим все, что нужно, чтобы начать разрабатывать приложения с использованием Jetpack Compose. По большей части этот курс практический, в нем будет очень мало теории и очень много практики.\nБольшую часть курса мы будем заниматься именно визуальной частью приложений, будем рисовать множество экранов, экспериментировать с различными компонентами, а затем мы будем применять полученные знания на практике и создадим приложение для вашего портфолио - мобильный клиент VK.\nВ процессе прохождения данного курса мы создадим довольно крупное приложение - мобильный клиент VK, в котором будет отображаться лента новостей с возможностью поставить лайк и посмотреть комментарии.\nЖелаю вам успехов в обучении и до встречи на страницах курса!",
      "target_audience": [
        "Начинающие и опытные Android разработчики, которые хотят перейти со старого подхода к построению UI на XML на современный Jetpack Compose"
      ]
    },
    {
      "title": "Complete Flutter Course in Arabic",
      "url": "https://www.udemy.com/course/flutter-arabic/",
      "bio": "Become a professional Android & iOS Developer using 1 language!!",
      "objectives": [
        "تطوير تطبيقات الاندرويد بشكل احترافي",
        "تطوير تطبيقات الايفون بشكل احترافي",
        "استخدام لغة Dart"
      ],
      "course_content": {
        "Flutter مقدمة عن": [
          "Flutter SDK نظرة عامة و تحميل",
          "Commands Line - Terminal إنشاء اول تطبيق بإستخدام ال",
          "Android Studio تشغيل اول تطبيق بإستخدام",
          "تشغيل اول تطبيق بواسطة الاندرويد ستديو"
        ],
        "Dart أساسيات لغة": [
          "Dart نظرة عامة على لغة",
          "String التعامل مع متغيرات من نوع",
          "var و data types الفرق بين",
          "التعامل مع متغيرات الارقام",
          "Boolean التعامل مع متغيرات من نوع",
          "final - const الفرق بين",
          "العمليات الحسابية الاساسية",
          "العمليات المنطقية الاساسية",
          "المقارنات بإستخدام is is!",
          "if statments الجمل الشرطية",
          "if statment اضافة اكثر من شرط لل",
          "For loops",
          "While , do...while loops",
          "Switch Statement",
          "Functions in Dart",
          "Expressions in Functions",
          "Optional Parameters in Functions",
          "Code scopes",
          "Classes in Dart",
          "Constructors",
          "Syntactic Sugar Constructor",
          "Named Constructor",
          "Setters & Getters",
          "Inheritance in Dart",
          "Override Methods",
          "Constructors Overloading",
          "Override toString() Method"
        ],
        "Data Structure": [
          "Arrays",
          "Lists of Objects",
          "Maps"
        ],
        "Libraries & Code Cleaning": [
          "Your First Lib file",
          "Exploring Dart Libraries",
          "Hello Dart Example App",
          "Introduction to Material Design",
          "Cleaning the code",
          "Separate the code in files"
        ],
        "التصميم - UI Design": [
          "40.اساسيات التصميم",
          "التصميم العامودي - Layout Column",
          "التصميم الافقي - Layout Row",
          "Layout Stack",
          "Intro to Scaffold & App Bar Implementation",
          "Inkwell Widget",
          "Bottom Navigation Bar",
          "Floating Action Button",
          "Gesture Detecting"
        ],
        "تطبيق عملي": [
          "Counter App Example Part 1",
          "Counter App Example Part 2",
          "Counter App Example Part 3",
          "Login App",
          "Http Requests",
          "From JSON to Widget"
        ],
        "حفظ و استرجاع المعلومات": [
          "Read - Write to File system",
          "Shared Preferences",
          "Database 1 - قواعد البيانات الجزء",
          "Database 2 - قواعد البيانات الجزء",
          "Database 3 - قواعد البيانات الجزء",
          "تحديث SQFlite",
          "ربط التصميم بقاعدة البيانات"
        ],
        "Todo List تطبيق": [
          "تصميم الواجهة الرئيسية",
          "Item row تصميم",
          "بناء قاعدة البيانات للتطبيق",
          "ربط قاعدة البيانات بالتصميم",
          "حذف البيانات من قاعدة البيانات",
          "تحديث البيانات في قاعدة البيانات",
          "Todo List خلاصة تطبيق"
        ],
        "Flutter + Firebase": [
          "Firebase التعرف على خدمات"
        ]
      },
      "requirements": [
        "اللغة العربية",
        "جهاز لابتوب متصل بالانترنت"
      ],
      "description": "إنضم لأقوى دورة تقوم بشرح تفصيلي للغة #Dart و بيئة Fluttter لتطوير تطبيقات الهاتف الجوال سواءأ للأندرويد او الايفون!\nلا داعي لتعلم الاندرويد او الايفون لان هذه الدورة تغنيك عن كلاهما وتستطيع بعد الانتهاء منها تطبيق أي فكرة و بناء تطبيقات احترافية على أجهزة الهاتف الجوال.\n\n\nFlutter هو بيئة برمجة تم انشائها من قبل شركة Google – تتيح لك تعلم لغة Dart و هي اللغة المستخدمة فيه و من خلال لغة برمجة واحدة تمكنك من انشاء تطبيقات لجميع أنواع الأجهزة الجوال في وقت قصير و بجودة عالية جدا!\nمخرجات كود البرمجة بلغة دارت تتكون من اكواد اصيلة(Native Code) أي انها سوف تظهر لك مشروعين منفصلين للاندرويد و الايفون يمكنك الإضافة الى أي منها بلغته الاصيلة أيضا مثل جافا او كوتلن او لغة سويفت للايفون.\n\n\nتعد بيئة Flutter الان من اهم ادوات البرمجة الحديثة و التنبؤات كثير بمستقبلها, كما ان شركة Google بدأت بإعتمادها لمنتجاتها الخاصة فمثلا تطبيق Google Adwords الحالي تم انشائه بلغة Dart بإستخدام بيئة Fluttter.\nكما ان هذه اللغة ليست مقتصرة فقط على برمجة تطبيقات ال Android و iOS بل انها تدعم جميع انواع الاجهزة و ايضا تطبيقات الويب, كل ما عليك هو تعلم لغة برمجة واحدة!\nفي هذه الدورة سنقوم بتعلم كل ما يتعلق بالتطبيقات ابتداءا من تجهيز الكمبيوتر الخاص بك و تحميل البرامج اللازمة الى استخراج تطبيق كامل و جاهز لعملية الرفع على متجر جوجل بلاي و متجر ابل.\n\n\nتحتوي هذه الدورة على عدة اقسام بأمثلة عملية على\nتجهيز بيئة العمل\nبناء التصميم الجيد لأجهزة الاندرويد و الايفون\nالتعامل مع المتغيرات و الثوابت\nاساسيات لغة دارت Dart\nالتعامل مع السيرفرات و الاتصال بالانترنت\nقواعد البيانات و غيرها\nدعم مباشر مدى الحياة في حال واجهتك اي مشكلة في كتابة الكود",
      "target_audience": [
        "Beginner Android Developers",
        "Beginner iOS Developer",
        "Web Developers",
        "Software Engineers",
        "من يريد تعلم برمجة التطبيقات للاندرويد و الايفون بأقل وقت و خبرة ممكنة"
      ]
    },
    {
      "title": "【Flutter】UI開発でよく使うWidget50選",
      "url": "https://www.udemy.com/course/flutter-widget/",
      "bio": "頻出Widget50選を初心者にもわかりやすく解説しています",
      "objectives": [
        "Flutterでのアプリ開発",
        "よく使うFlutter Widgetの扱い方",
        "FlutterにおけるUI構築",
        "プログラミング言語Dartの記述"
      ],
      "course_content": {
        "紹介": [
          "紹介"
        ],
        "基本Widget": [
          "Scaffold",
          "Text",
          "AppBar",
          "Image",
          "Icon",
          "BottomNavigationBar",
          "Drawer",
          "FloatingActionButton",
          "RichText"
        ],
        "UIを構成するWidget": [
          "Container",
          "Column",
          "Row",
          "Stack",
          "Align",
          "AspectRatio",
          "Expanded",
          "Padding",
          "SizedBox",
          "Center",
          "ClipRRect",
          "Divider",
          "ProgressIndicator",
          "Spacer",
          "Opacity",
          "BottomNavigationBar",
          "Table",
          "Wrap"
        ],
        "スワイプ&スクロールできるWidget": [
          "ListView",
          "SingleChildScrollView",
          "GridView",
          "PageView",
          "RefreshIndicator",
          "Scrollbar",
          "TabBarView"
        ],
        "ユーザーの行動に影響するWidget": [
          "TextField",
          "GestureDetector",
          "ElevatedButton",
          "IconButton",
          "OutlinedButton",
          "TextButton",
          "DropdownButton",
          "PopupMenuButton",
          "Slider",
          "BackButton",
          "CheckBox",
          "Radio",
          "Switch"
        ],
        "アニメーションWidget": [
          "Hero"
        ],
        "非同期処理のWidget": [
          "FutureBuilder",
          "StreamBuilder"
        ],
        "今後の学習について": [
          "今後の学習について"
        ],
        "ボーナストラック": [
          "ボーナスレクチャー1",
          "ボーナスレクチャー2"
        ]
      },
      "requirements": [
        "Flutterの開発環境"
      ],
      "description": "※この動画コースは、Flutter学習サービス『Flutterラボ』でも公開しています。\n\n\n概要\nFlutterでUIを作成する際に不可欠な『Widget』。\nよく使うWidget50選の使い方をひとつひとつ解説しています。\n\n\n解説Wideget\n基本Widget\nScaffold\nText\nAppBar\nImage\nIcon\nBottomNavigationBar\nDrawer\nFloatActionButton\nRichText\nUIを構成するWidget\nContainer\nColumn\nRow\nStack\nAlign\nAspectRatio\nExpanded\nPadding\nSizedBox\nCenter\nClipRRect\nDivider\nProgressIndicator\nSpacer\nOpacity\nBottomNavigationBar\nTable\nWrap\nスワイプ&スクロールできるWidget\nListView\nSingleChildScrollView\nGridView\nPageView\nRefreshIndicator\nScrollbar\nTabBarView\nユーザーの行動に影響するWidget\nTextField\nGestureDetector\nElevatedButton\nDropDownButton\nIconButton\nOutlinedButton\nPopupMenuButton\nTextButton\nSlider\nBackButton\nCheckBox\nRadio\nSwitch\nアニメーションWidget\nHero\n非同期処理のWidget\nFutureBuilder\nStreamBuilder\n※他に解説してほしいWidgetがあればコメントでご要望ください。",
      "target_audience": [
        "FlutterでUIを開発する方法を知りたい方",
        "Flutterでアプリを開発したい方",
        "Flutterアプリ開発をはじめる前に基礎的な情報が知りたい方",
        "Flutter Widgetがどんなものか知りたい方"
      ]
    },
    {
      "title": "Flutter & Dart & Firebase complete development course Arabic",
      "url": "https://www.udemy.com/course/the-complete-flutter-dart-firebase-full-course/",
      "bio": "اكثر من 20مشروع تطبيقي خلال الكورس",
      "objectives": [
        "تعلم فلاتر من الصفر",
        "تعلم لغة دارت من الصفر",
        "هذا الكورس يعتمد بشكل أساسى على التطبيق وإنشاء المشاريع",
        "أكثر من 20مشروع تطبيقى على المشاريع",
        "يُمكنك مشاهدة المُستوى الأول كامل مجاناً على قناة اليوتيوب قناة اتعلم فى ساعة قبل شراء الكورس"
      ],
      "course_content": {
        "Level1 - Learn Flutter": [
          "#1 Flutter3 & dart & firebase full course المُقدمة",
          "#2.1 flutter full course | flutter setup شرح",
          "#2.2 flutter full course | Emulator flutter VScode",
          "#2.3 flutter full course | كيفية تحديث فلاتر لأخر إصدار؟",
          "#3 flutter full course | مشروع فلاتر من الصفر",
          "#4.1 flutter full course | Text & TextStyle widgets",
          "#4.2 flutter full course | Container & BoxDecoration widgets",
          "#4.3 flutter full course | Column & SizedBox & SingleChildScrollView",
          "#4.4 flutter full course | Row & SizedBox & SingleChildScrollView",
          "#4.5 flutter full course | Task solution",
          "#4.6 flutter full course | Expanded widget",
          "#4.7 flutter full course | Padding widget",
          "#4.8 flutter full course | Center & Stack & Positioned",
          "#4.9 flutter full course | ElevatedButton & ButtonStyle",
          "#5 flutter full course | Add Fonts & images",
          "#5.1 flutter full course | Add SVG images",
          "#6 flutter full course | Learn English | The net ninga project ?",
          "#7 flutter full course | TextField & InputDecoration widgets",
          "#7.1 flutter full course | TASK solution",
          "#8 flutter full course | Navigate with named routes",
          "#8.1 flutter full course | الانتقال بين الصفحات | login & logout pages",
          "#9 flutter full course | flutter project مشروع فلاتر خطوه بخطوه"
        ],
        "Level2 | Learn Dart": [
          "#1 Learn Dart & flutter | مُقدمة المُستوى الثانى",
          "#2 Learn Dart & flutter | Dart variables & data types",
          "#3 Learn Dart & Flutter | Dart Function",
          "#4 Learn Dart & Flutter | Dart if else",
          "#5 Learn Dart & Flutter | Dart Switch case",
          "#6 Learn Dart & Flutter | Dart Get items from list & map",
          "#7 Learn Dart & Flutter | Dart List methods",
          "#8 Learn Dart & Flutter | flutter & dart project (design)",
          "#8.1 Learn Dart & Flutter | flutter & dart project (logic)",
          "#8.2 Learn Dart & Flutter | طريقة أخري لعمل المشروع",
          "#8.3 Learn Dart & Flutter | طريقة أخري لعمل المشروع",
          "#9 Learn Dart & Flutter | Dart OOP [Class]",
          "#9.1 Learn Dart & Flutter | مثال مهم جداً",
          "#10 Learn Dart & Flutter | #10 Flutter & dart Todo App المقدمة",
          "#10.1 Learn Dart & Flutter | Dart Todo App (design)",
          "#10.2 Learn Dart & Flutter | Add task title (using class)",
          "#10.3 Learn Dart & Flutter | if else الطريقة المُختصرة",
          "#10.4 Learn Dart & Flutter | Flutter showModalBottomSheet",
          "#10.5 Learn Dart & Flutter | Handle changes to a text",
          "#10.6 Learn Dart & Flutter | Add New Task",
          "#10.7 Learn Dart & Flutter | Flutter showDialog",
          "#10.8 Learn Dart & Flutter | Create Counter",
          "#10.9 Learn Dart & Flutter | Task Solution",
          "#10.10 Learn Dart & Flutter | scrollable list of widgets",
          "#10.11 Learn Dart & Flutter | scrollable list of Tasks",
          "#10.12 Learn Dart & Flutter | Change Task status",
          "#10.13 Learn Dart & Flutter | Delete Task on click",
          "#10.14 Learn Dart & Flutter | Task solution",
          "#10.15 Learn Dart & Flutter | ترويق العمل أهم من العمل",
          "#11 Learn Dart & Flutter | Dart forEach() & map()",
          "#11.1 Learn Dart & Flutter | Dart for loop",
          "#11.2 Learn Dart & Flutter | Dart for in",
          "#11.3 Learn Dart & Flutter | Dart while loop",
          "#11.4 Learn Dart & Flutter | Dart do while",
          "#11.5 Learn Dart & Flutter | Dart break && continue",
          "#11.6 Learn Dart & Flutter | for ;; | المُختصر المُفيد",
          "#12 Learn Dart & Flutter | Flutter & dart project (design)",
          "#12.1 Learn Dart & Flutter | Flutter & dart project (Logic)",
          "#12.2 Learn Dart & Flutter | Delete card on click",
          "#12.3 Learn Dart & Flutter | Add new quote",
          "#12.4 Learn Dart & Flutter | ترويق العمل أهم من العمل (7:19)",
          "#13 Learn Dart & Flutter | Dart String Properties & Methods",
          "#14 Learn Dart & Flutter | Dart number Properties & Methods",
          "#15 Learn Dart & Flutter | Dart Date & time",
          "#16 Learn Dart & Flutter | Dart Duration",
          "#17 Learn Dart & Flutter | Dart Timer",
          "#18 Learn Dart & Flutter | Show Date & Time app (Flutter & dart project)",
          "#18.1 Learn Dart & Flutter | Show Date & Time app with intl package",
          "#19 Learn Dart & Flutter | Counterdown Timer App (Flutter & Dart project)",
          "#19.1 Learn Dart & Flutter | Stopwatch Timer App (Flutter & Dart project)",
          "#20 Learn Dart & Flutter | pomodoro app (dart & flutter project)",
          "#21 Learn Dart & Flutter | Dart API & Json & async & await",
          "#22 Learn Dart & Flutter | Flutter Return data from a screen",
          "#23 Learn Dart & Flutter | World time App (Flutter dart project)",
          "#23.1 Learn Dart & Flutter | Logic (Dart codes)",
          "#23.2 Learn Dart & Flutter | Navigate to the second screen with DAT",
          "#23.3 Learn Dart & Flutter | Change img depending on time",
          "#23.4 Learn Dart & Flutter | Repeated code (class)",
          "#23.5 Learn Dart & Flutter | Return data from a screen",
          "#23.6 Learn Dart & Flutter | List of data(classes)",
          "#24 Learn Dart & Flutter | const vs final",
          "#25 Learn Dart & Flutter | Null Safety"
        ],
        "Level3 | Learn Firebase + E-commerce app project": [
          "#1 المُقدمة",
          "#2 Reusable Widgets",
          "#2.1 Reusable Widgets طريقة اخرى",
          "#3 Flutter appBar",
          "#3.1 Flutter Drawer",
          "#4 Flutter GridView.builder",
          "#4.1 Logic",
          "#5 Details screen",
          "#6 pass data to the detail screen",
          "#7 provider Consumer<ClassName>",
          "#7.1 Task solution",
          "#7.2 provider Provider.of<ClassName>(context);",
          "#8 checkout screen",
          "#9 نهاية المشروع",
          "#10 Firebase setup",
          "#11 Create an account",
          "#12 Display a snackbar",
          "#13 Validation",
          "#13.1 Show & hide password",
          "#13.2 RegExp",
          "#13.3 Task solution",
          "#14 Sign in with an email address and password",
          "#14.1 حركات وتريكات",
          "#15 reset password screen (Design)",
          "#15.1 Send email to reset password",
          "#16 verify email",
          "#17 Google Sign in",
          "#17.1 Access Gmail account info",
          "#18 firebase firestore setup",
          "#19 Adding Documents in firebase firestore",
          "#20 Get data from firebase auth",
          "#21 Get data from firebase firestore (Database)",
          "#22 update date in firestore (Database)",
          "#23 Delete date & user",
          "#24 image_picker package",
          "#25 Profile picture design",
          "#25.1 Task solution",
          "#26 upload img to firebase storage",
          "#27 Get img link(url)",
          "#28 Show img in profile page",
          "#29 Edit user img in profile page",
          "#30 نهاية المشروع",
          "فيديو مُجمع لأول 9دروس"
        ],
        "Level4 | instagram full project (flutter3 + dart + firebase)": [
          "هنعمل ايه فى المستوى الرابع ؟",
          "#2 Responsive Design",
          "#2.1 LayoutBuilder",
          "#3 bottomNavigationBar & PageView()",
          "#3.1 Task solution",
          "#4 Design Home screen for mobile",
          "#4.1 Design Home screen for web",
          "#4.2 Task solution",
          "#5 Profile screen for mobile",
          "#5.1 Profile screen for web",
          "#6 Login & Register screens for mobile",
          "#6.1 Login & Register screens for web",
          "#7 Firebase Setup (Mobile & Web)",
          "#8 Register with Email & password",
          "#8.1 Upload img to screen (Mobile & Web)",
          "#8.2 Send data to Firestore Database",
          "#8.3 Send data to Firestore Database طريقة المشاريع الكبيرة",
          "#8.4 Upload img to storage & Get img url",
          "#8.5 Finish Register Screen",
          "#9 Login Screen",
          "#10 Get data from firestore(Database)",
          "#10.1 followers & following",
          "#11 Add post Screen (Design)",
          "#11.1 Task solution",
          "#12 Get data from firestore(Database)",
          "#13 Send post data to DB",
          "#13.1 Generate different id",
          "#14 Get data from DB as realtime data",
          "#14.1 Task(1) solution",
          "#14.2 Task(2) solution",
          "#15 Filter documents within a collection",
          "#15.1 Task solution",
          "#16 search for a user",
          "#16.1 Task solution",
          "#17 follow & unfollow (Design)",
          "#17.1 Updating documents {\"KEY\" : VALUE}",
          "#17.2 Task solution",
          "#17.3 أهم فيديو فى حياتك",
          "#18 Comment screen (Design)",
          "#18.1 Store comment in DB",
          "#18.2 Task(1) solution",
          "#18.3 Task(2) solution",
          "#18.4 ترتيب التعليقات",
          "#19 Function to get data from DB",
          "#19.1 Task solution",
          "#20 Detele post from Home screen",
          "#21 Image.network() VS NetworkImage()",
          "#22 Like post",
          "#22.1 Task solution",
          "#23 show & hide heart",
          "#23.1 صايع برمجة",
          "#24 نهاية المشروع",
          "#24.1 كلمة اخيره",
          "فيديو مُجمع لأول 6دروس"
        ],
        "النهاية": [
          "ماذا بعد الكورس؟",
          "طلب بسيط"
        ]
      },
      "requirements": [
        "الكورس يبدأ من الصفر لذلك انت لاتحتاج الى خبرة سابقة قبل البداية",
        "No programming experience needed"
      ],
      "description": "سوف يتم الشرح على اخر اصدار من   فلاتر وبالتالى لن تحتاج الى تعلم أكواد  فلاتر القديمة\nسوف يتم  التركيز فى هذا الكورس على انشاء المشاريع الموجودة فى سوق العمل\nسوف نقوم بعمل المشاريع بالأكواد الحديثة من  فلاتر\nالتركيز الأساسى لهذا الكورس هو القدرة على عمل مشاريع  فلاتر و دارت بأقل الأكواد\nلا يجب ان يكون لديك معرفة  سابقة بأى كورسات اخرى لان هذا الكورس يبدأ معك من الصفر وحتى الاحتراف  حتى تتمكن من انشاء سيرة ذاتية قوية\nالكورس خاص بالمبتدئين لذلك سوف يتم شرح  الأكواد من الصفر وحتى الاحتراف\nهذا الكورس هو كورس يعتمد على انشاء المشاريع الموجودة فى سوق العمل\nسوف تتعلم مهارة البحث عن حل المشاكل التى سوف تواجهك اثناء التطبيق العملى\nسوف تتعلم كيفية استخدام الاكواد فى بناء المشاريع\nشرح وترجمة جميع المُصطلحات الانجليزية الخاصة  بفلاتر و لغة برمجة دارت حتى يُمكنك البحث فى جوجل عن حل المشاكل التى سوف تواجهك فى العمل\nيجب ان تعلم ان ها الكورس هو كورس تفاعلى  بمعنى اننى سوف اطلب فى مُنتصف الفيديو ان تقوم بتكملة الكود بنفسك قبل ان اقوم بعمل الأكواد\nيُمكنك مشاهدة المُستوى الأول  من هذا الكورس كامل مجاناً على قناة اليوتيوب قناة اتعلم فى ساعة قبل شراء الكورس\nيُمكنك تحميل جميع الأكواد الموجودة فى الكورس من خلال الموقع الخاص بنا المُوضح فى الفيديوهات\nأهم نصيحة يُمكننى ان اعطيها لك هى ان تقوم بعمل المشاريع الموجودة فى  هذا  الكورس بعد مشاهدة الفيديو  مباشرة  حتى تتعود على كتابة الأكواد وعمل المشاريع الحقيقية",
      "target_audience": [
        "flutter developers",
        "mobile developers",
        "Dart developers curious about mobile development"
      ]
    },
    {
      "title": "React Native: Desenvolva APPs Nativas para Android e iOS",
      "url": "https://www.udemy.com/course/curso-react-native/",
      "bio": "Aprenda os fundamentos de React Native, boas práticas e construa várias aplicações nativas para Android e iOS usando JS!",
      "objectives": [
        "Base sólida de Javascript com os novos recursos da linguagem",
        "Fundamentos e ciclo de vida do React",
        "Entender como estilizar sua aplicação com Flexbox",
        "Criar projetos de aplicações reais, com layouts atrativos",
        "Criar rotas, eventos de swipe, trabalhar com imagens, câmeras e diversas outras funcionalidades",
        "Integrar suas aplicações com Redux",
        "Criar e integrar a aplicação com um servidor backend em NodeJs, utilizando banco relacional",
        "Integrar a aplicação com banco NoSQL, utilizando o Firebase"
      ],
      "course_content": {
        "Introdução": [
          "Visão Geral do Curso",
          "Repositório do Curso",
          "O que é React Native?",
          "Preciso Saber JavaScript?",
          "Usando o terminal",
          "Terminais"
        ],
        "Configuração do Ambiente": [
          "Correção do erro Import Type",
          "Aviso importante aos usuários de Windows",
          "Configuração do Ambiente - WINDOWS",
          "Criando Novo Projeto - WINDOWS",
          "Configuração do Ambiente - EXPO/WINDOWS",
          "Configuração do Ambiente - ANDROID/MACOS",
          "Configuração do Ambiente - LINUX"
        ],
        "Fundamentos React Native": [
          "Introdução do Módulo",
          "Configuração do Projeto",
          "Estrutura do Projeto",
          "SafeAreaView",
          "Primeiro Componente #01",
          "Primeiro Componente #02",
          "Organizando Componentes",
          "Sistema de Módulos do ECMAScript",
          "Um Pouco de Estilo",
          "Usando console.warn",
          "Componente com Propriedades",
          "Desafio Número Aleatório",
          "Desafio Número Aleatório - Resposta",
          "Propriedades são Somente Leitura",
          "React Fragment",
          "Usando Botão",
          "Componente com Estado (useState)",
          "Criando Snippet no VSCode",
          "Comunicação Direta",
          "Comunicação Indireta",
          "Usando Comunicação Direta e Indireta",
          "Diferenciando iOS e Android #01",
          "Diferenciando iOS e Android #02",
          "Renderização Condicional #01",
          "Conhecendo o props.children",
          "Renderização Condicional #02",
          "Renderizando Lista #01",
          "Renderizando Lista #02",
          "Componentes Controlados",
          "Teoria Flexbox #01",
          "Teoria Flexbox #02",
          "Componente Quadrado",
          "Usando Flexbox #01",
          "Usando Flexbox #02",
          "Usando Flexbox #03",
          "Usando Flexbox #04",
          "Componente de Classe: Método Render",
          "Componente de Classe: Passando Props",
          "Componente de Classe: Estado",
          "Componente de Classe: Cuidado com o this",
          "Componente Mega-Sena #01",
          "Componente Mega-Sena #02",
          "Componente Mega-Sena #03"
        ],
        "Projeto Calculadora": [
          "Criar Projeto Calculadora",
          "Componente Botão #01",
          "Componente Display",
          "Componente Botão #02",
          "Entendendo a Lógica da Calculadora",
          "Lógica da Calculadora #01",
          "Lógica da Calculadora #02",
          "Correção #01",
          "Correção #02"
        ],
        "Projeto Campo Minado": [
          "Criar Projeto Campo Minado",
          "Parâmetros do Jogo",
          "Componente Campo (Field) #01",
          "Componente Campo (Field) #02",
          "Componente Mina (Mine)",
          "Componente Bandeira (Flag) #01",
          "Componente Bandeira (Flag) #02",
          "Revisão JavaScript: Map",
          "Lógica do Jogo #01",
          "Componente Tabuleiro (MineField)",
          "Correção no Componente MineField",
          "Explicando a Lógica do Jogo",
          "Lógica do Jogo #02",
          "Abrir Campo (onPress)",
          "Marcar Campo (onLongPress)",
          "Cabeçalho do Jogo",
          "Selecionar Nível de Dificuldade"
        ],
        "React Navigation": [
          "Introdução do Módulo",
          "Instalando as Dependências",
          "Preparando App #01",
          "Preparando App #02",
          "Navegação Stack #01",
          "Navegação Stack #02",
          "Navegação Stack #03",
          "Navegação Stack #04",
          "Navegação Stack #05",
          "Navegação Stack #06",
          "Navegação Tabs",
          "Navegação Drawer #01",
          "Navegação Drawer #02",
          "Adicionando Ícones #01",
          "Adicionando Ícones #02",
          "Adicionando Ícones #03",
          "Conclusão do Módulo"
        ],
        "Cadastro Completo com Hooks e Context API": [
          "Criar Projeto",
          "Navegação Stack #01",
          "Navegação Stack #02",
          "Criando Arquivo de Usuários",
          "Lista de Usuários #01",
          "Lista de Usuários #02",
          "Rotas & Parâmetros",
          "Formulário de Usuário",
          "Context API",
          "Teoria sobre Redux",
          "useReducer #01",
          "useReducer #02",
          "useReducer #03"
        ],
        "Projeto Tasks • Versão Offline": [
          "Introdução do Módulo",
          "Projeto Tasks: Links das Diversas Versões",
          "Visão Geral do Projeto",
          "Arquivos ZIPs",
          "Aviso sobre link",
          "Criar Projeto Tasks",
          "Componente Lista de Tarefas #01",
          "Componente Lista de Tarefas #02",
          "Componente Lista de Tarefas #03",
          "Componente Lista de Tarefas #04",
          "Componente Tarefa #01",
          "Componente Tarefa #02",
          "Componente Tarefa #03",
          "Componente Tarefa #04",
          "Componente Tarefa #05",
          "Adicionar FlatList",
          "Componente Tarefa #06",
          "Botão Filtrar Tarefas",
          "Filtrar Tarefas",
          "Modal Adicionar Tarefa #01",
          "Modal Adicionar Tarefa #02",
          "Modal Adicionar Tarefa #03",
          "Botão Adicionar Tarefa",
          "Configuração iOS: pod install",
          "Data da Tarefa #01",
          "Data da Tarefa #02",
          "Salvar Tarefa",
          "Excluir Tarefa #01",
          "Configuração Android: Problema Swipe",
          "Excluir Tarefa #02",
          "Excluir Tarefa #03",
          "Armazenar Dados com AsyncStorage",
          "Conclusão do Módulo"
        ],
        "Projeto Tasks • Backend": [
          "Repositório Projeto Tasks",
          "Introdução do Módulo",
          "Criar Projeto Backend",
          "Aulas Detalhadas Sobre Express",
          "Resumo Sobre Express",
          "Instalação PSQL",
          "Middlewares & DB com Knex #01",
          "DB Migrations",
          "Middlewares & DB com Knex #02",
          "API: Cadastro de Usuário (Signup)",
          "Armazenando Token no .env",
          "API: Login de Usuário (Signin)",
          "Middleware de Segurança",
          "API de Tarefas (Tasks) #01",
          "API de Tarefas (Tasks) #02",
          "Conclusão do Módulo"
        ],
        "Projeto Tasks • Versão Online": [
          "Introdução do Módulo",
          "Tela de Autenticação #01",
          "Tela de Autenticação #02",
          "Tela de Autenticação #03",
          "Tela de Autenticação #04",
          "Navegação",
          "Componente AuthInput",
          "E-mail Case Insensitive",
          "Integrando Autenticação com Backend #01",
          "Integrando Autenticação com Backend #02",
          "Validando Formulário",
          "VSCode Workspace",
          "Dica E-mail/Senha Fixos",
          "Integrando Tarefas com Backend #01",
          "Integrando Tarefas com Backend #02",
          "Drawer Navigator #01",
          "Drawer Navigator #02",
          "Drawer Navigator #03",
          "Drawer Navigator #04",
          "Informações de Usuário #01",
          "Informações de Usuário #02",
          "Autenticação ou App #01",
          "Autenticação ou App #02",
          "Sair da Aplicação (Logout)",
          "Melhorando Mensagens",
          "Conclusão do Módulo"
        ]
      },
      "requirements": [
        "Conhecimento básico de JavaScript"
      ],
      "description": "Seja muito bem vindo ao Curso React Native: Desenvolva APPs Nativas para Android e iOS!\nNesse curso, iremos abordar o desenvolvimento de aplicações nativas para dispositivos móveis (Android e iOS), utilizando apenas o JavaScript como linguagem de programação. Isso mesmo, você pode usar o mesmo código para ter aplicações em ambos os ecossistemas.\nO curso abrange os fundamentos do React e seu ciclo de vida, criação de componentes, Redux e flexbox. Além do básico do React, apresentaremos o que muda para o React Native, como montar o seu ambiente de desenvolvimento, as especificidades de cada plataforma e como trabalhar com ambas utilizando o mesmo projeto. Também vamos utilizar vários recursos amplamente utilizados no mundo mobile, como: Câmera, ações de toque e gestos, Navegações diversas, Menu, Splash e muito mais.\nAlém de todos os fundamentos, criaremos mais quatro projetos, inspirados em aplicações já famosas e conhecidas por todos:\n1. Calculadora: Para ver como podemos organizar os elementos através de componentes\n2. Campo Minado: Para fixarmos os fundamentos do flexbox e nos divertir com esse jogo\n3. ToDo List: Com um layout bonito e mais elaborado. Vamos também criar uma API Rest em NodeJS como backend, integrando também com um banco relacional\n4. Intragram: Nessa aplicação, vamos integrar a câmera e galeria de imagens do dispositivo, vamos utilizar o Firebase como backend e seu banco NoSQL, sua autenticação e até mesmo seu serviço de storage.\nAssista as aulas abertas e veja os comentários dos nosso alunos sobre a nossa didática. Não tenho dúvida que você estará fazendo um excelente investimento e se juntando a nossa comunidade de mais de 30 mil alunos.\n\nGrande abraço e bons estudos!",
      "target_audience": [
        "Programadores que conhecer o React que desejam ampliar seu uso para dispositivos móveis",
        "Programadores em geral que desejam aprender os conceitos e ciclo de vida do React Native",
        "Programadores de aplicações móveis que gostariam de criar aplicações para Android e iOS com uma linguagem apenas"
      ]
    },
    {
      "title": "Desenvolvimento Android em Java e Kotlin",
      "url": "https://www.udemy.com/course/desenvolvimento-android-do-absoluto-zero-para-iniciantes/",
      "bio": "Curso focado na formação de Desenvolvedores Android",
      "objectives": [
        "Compreender e aplicar os quatro pilares da programação orientada a objetos (POO) no desenvolvimento Android",
        "Implementar em Aplicativos Android um CRUD completo com Banco de Dados Nativo SQLite",
        "Desenvolver testes automatizados para garantir qualidade no Desenvolvimento Android",
        "Aplicar as boas práticas de programação, com código limpo e de fácil manutenção."
      ],
      "course_content": {},
      "requirements": [
        "Recomenda-se possuir conhecimentos básicos de internet e sistemas operacionais.",
        "Interesse em se tornar um Desenvolvedor Android profissional."
      ],
      "description": "Apresentação do Curso\nEste é um curso completo e prático de desenvolvimento Android com Java, idealizado para transformar iniciantes em desenvolvedores capazes de criar aplicativos reais com qualidade profissional. Por meio de projetos progressivos, você aprenderá desde os conceitos fundamentais de programação orientada a objetos até a construção de sistemas com banco de dados SQLite, testes automatizados e depuração com as ferramentas nativas do Android Studio.\n\n\nSobre o Instrutor\nMeu nome é Marco Maddo, sou desenvolvedor e professor com mais de 15 anos de experiência em tecnologia, especializado em desenvolvimento Android, Java e Kotlin. Atuo como engenheiro de software e sou criador de diversos cursos de programação com milhares de alunos no Brasil e no exterior. Também mantenho um canal com aulas práticas no YouTube e sou fundador da TSSTI Tecnologia, empresa voltada para consultoria, ensino e inovação. Ao longo da minha carreira, já formei milhares de desenvolvedores e acompanho diariamente as atualizações do mercado mobile.\n\n\nAo escolher este curso, você terá acesso a uma trilha de aprendizado sólida, com exemplos reais, suporte contínuo e metodologia aplicada em cursos de graduação e pós-graduação.\n\n\nPara Quem Este Curso é Indicado\n\nIniciantes em programação Android com Java\nEstudantes de Computação, Sistemas ou áreas afins\nDesenvolvedores que desejam aprofundar os conhecimentos em POO e banco de dados\nProfissionais que estão migrando para a área mobile\nEntusiastas que desejam criar seus próprios aplicativos Android\n\n\nPré-requisitos:\n\n\nConhecimento básico em lógica de programação\nComputador com Android Studio instalado\nDispositivo Android ou emulador para testes\n\n\nO Que Você Vai Aprender\n\nProgramação Java e POO\nCriação de classes, objetos, construtores, getters e setters\nEncapsulamento, herança e polimorfismo\nTrabalhar com arrays, listas e coleções\nDesenvolvimento Android\nCriação de interfaces com XML (UI/UX)\nManipulação de eventos e navegação entre telas\nIntegração entre layout e código Java\nBanco de Dados SQLite\nCriação e modelagem de tabelas e entidades\nImplementação do padrão DAO e Singleton\nOperações CRUD e relacionamentos entre entidades\nTestes e Qualidade de Código\nTestes unitários com JUnit\nTestes de integração e validação de banco de dados\nDebug prático com LogCat e logs organizados\nArquitetura e Organização\nSeparação de responsabilidades (MVC)\nOrganização do código em pacotes\nBoas práticas para escalabilidade e manutenção\n\nMetodologia de Ensino\n\n100% prática: Você aprende criando aplicativos reais\nProjetos por aula: Cada módulo gera um app funcional\nCódigo comentado: Explicações claras e diretas no próprio código\nTestes e debug: Para validar cada etapa do seu aprendizado\nProgresso contínuo: Do básico ao intermediário com clareza\n\nEstrutura do Curso\n\nApresentação do Curso\nEste é um curso completo e prático de desenvolvimento Android com Java, idealizado para transformar iniciantes em desenvolvedores capazes de criar aplicativos reais com qualidade profissional. Por meio de projetos progressivos, você aprenderá desde os conceitos fundamentais de programação orientada a objetos até a construção de sistemas com banco de dados SQLite, testes automatizados e depuração com as ferramentas nativas do Android Studio.\n\n\nSobre o Instrutor\nMeu nome é Marco Maddo, sou desenvolvedor e professor com mais de 15 anos de experiência em tecnologia, especializado em desenvolvimento Android, Java e Kotlin. Atuo como engenheiro de software e sou criador de diversos cursos de programação com milhares de alunos no Brasil e no exterior. Também mantenho um canal com aulas práticas no YouTube e sou fundador da TSSTI Tecnologia, empresa voltada para consultoria, ensino e inovação. Ao longo da minha carreira, já formei milhares de desenvolvedores e acompanho diariamente as atualizações do mercado mobile.\n\n\nAo escolher este curso, você terá acesso a uma trilha de aprendizado sólida, com exemplos reais, suporte contínuo e metodologia aplicada em cursos de graduação e pós-graduação.\n\n\nPara Quem Este Curso é Indicado\nIniciantes em programação Android com Java\nEstudantes de Computação, Sistemas ou áreas afins\nDesenvolvedores que desejam aprofundar os conhecimentos em POO e banco de dados\nProfissionais que estão migrando para a área mobile\nEntusiastas que desejam criar seus próprios aplicativos Android\nPré-requisitos:\n\n\nConhecimento básico em lógica de programação\nComputador com Android Studio instalado\nDispositivo Android ou emulador para testes\nO Que Você Vai Aprender\nProgramação Java e POO\n\n\nCriação de classes, objetos, construtores, getters e setters\nEncapsulamento, herança e polimorfismo\nTrabalhar com arrays, listas e coleções\nDesenvolvimento Android\n\n\nCriação de interfaces com XML (UI/UX)\nManipulação de eventos e navegação entre telas\nIntegração entre layout e código Java\nBanco de Dados SQLite\n\n\nCriação e modelagem de tabelas e entidades\nImplementação do padrão DAO e Singleton\nOperações CRUD e relacionamentos entre entidades\nTestes e Qualidade de Código\n\n\nTestes unitários com JUnit\nTestes de integração e validação de banco de dados\nDebug prático com LogCat e logs organizados\nArquitetura e Organização\n\n\nSeparação de responsabilidades (MVC)\nOrganização do código em pacotes\nBoas práticas para escalabilidade e manutenção\nMetodologia de Ensino\n100% prática: Você aprende criando aplicativos reais\nProjetos por aula: Cada módulo gera um app funcional\nCódigo comentado: Explicações claras e diretas no próprio código\nTestes e debug: Para validar cada etapa do seu aprendizado\nProgresso contínuo: Do básico ao intermediário com clareza\n\n\nEstrutura do Curso\n\nAula 01 - Introdução à POO e Classes no Android\nAplicativo prático de criação de objetos Pessoa com dados aleatórios.\n\n\nAula 02 - Debug, Logs e CRUD Simulado\nProjeto com operações CRUD básicas e sistema completo de logs e debug.\n\n\nAula 03 - Banco de Dados SQLite e Testes Automatizados\nSistema completo com DAOs, relacionamentos entre tabelas e testes com JUnit.\n\n\nResultados Esperados\nAo concluir este curso, você estará apto a:\n\n\nDesenvolver aplicativos Android com Java de forma profissional\nAplicar os pilares da POO no dia a dia\nCriar bancos de dados locais e realizar operações completas de CRUD\nEscrever código limpo, testável e escalável\nDepurar, testar e validar funcionalidades com eficiência\nPróximos Passos no Aprendizado\nO curso está em constante atualização e em breve incluirá:\n\n\nProjetos com RecyclerView, Fragments e Navigation\nArquitetura MVVM, banco de dados Room e LiveData\nIntegração com APIs REST utilizando Retrofit\nConceitos modernos de UI/UX com Material Design\nRecursos Extras\nCódigo-fonte completo e comentado\nDocumentação por projeto (READMEs)\nExercícios extras para prática adicional\nGrupo de suporte exclusivo para alunos\nAtualização em Andamento\nO curso está sendo atualizado com conteúdos modernos, incluindo o uso de inteligência artificial no Android Studio, visando otimizar o tempo de desenvolvimento e trazer ainda mais produtividade ao aluno.\n\n\nConclusão\nEste é mais do que um curso de Java para Android — é uma jornada prática rumo à sua independência como desenvolvedor mobile. Você vai aprender de verdade, desenvolvendo projetos reais, com estrutura profissional, suporte e orientações passo a passo.\n\n\nInscreva-se agora e comece sua transformação como desenvolvedor Android! - Introdução à POO e Classes no Android\nAplicativo prático de criação de objetos Pessoa com dados aleatórios.\n\n\nAula 02 - Debug, Logs e CRUD Simulado\nProjeto com operações CRUD básicas e sistema completo de logs e debug.\n\n\nAula 03 - Banco de Dados SQLite e Testes Automatizados\nSistema completo com DAOs, relacionamentos entre tabelas e testes com JUnit.\n\n\nAula 03 - Banco de Dados SQLite e Testes Automatizados\n\n\nResultados Esperados\n\nAo concluir este curso, você estará apto a:\n\n\nDesenvolver aplicativos Android com Java de forma profissional\nAplicar os pilares da POO no dia a dia\nCriar bancos de dados locais e realizar operações completas de CRUD\nEscrever código limpo, testável e escalável\nDepurar, testar e validar funcionalidades com eficiência\n\n\n\n\nPróximos Passos no Aprendizado\n\n\nO curso está em constante atualização e em breve incluirá:\n\n\nProjetos com RecyclerView, Fragments e Navigation\nArquitetura MVVM, banco de dados Room e LiveData\nIntegração com APIs REST utilizando Retrofit\nConceitos modernos de UI/UX com Material Design\n\n\nRecursos Extras\n\nCódigo-fonte completo e comentado\nDocumentação por projeto (READMEs)\nExercícios extras para prática adicional\nGrupo de suporte exclusivo para alunos\nRepositório no Github com todos os projetos da aula\n\nAtualização em Andamento\n\nO curso está sendo atualizado com conteúdos modernos, incluindo o uso de inteligência artificial no Android Studio, visando otimizar o tempo de desenvolvimento e trazer ainda mais produtividade ao aluno.\n\n\nConclusão\n\nEste é mais do que um curso de Java para Android — é uma jornada prática rumo à sua independência como desenvolvedor mobile. Você vai aprender de verdade, desenvolvendo projetos reais, com estrutura profissional, suporte e orientações passo a passo.",
      "target_audience": [
        "Qualquer pessoa interessada em aprender criar aplicativos Android mesmo que não tenha experiência com programação."
      ]
    },
    {
      "title": "Android app development: fixing bugs before creating them",
      "url": "https://www.udemy.com/course/android-app-development-fixing-bugs-before-creating-them/",
      "bio": "Correction of frequent malfunctions in android development",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Error 1. java.lang.NullPointerException. Attempt to invoke virtual method...",
          "Error 2. java.lang.RuntimeException. Unable to start activity",
          "Error 3. android.content.ActivityNotFoundException. No Activity found to...",
          "Error 4. java.lang.ClassCastException. Button cannot be cast to ImageView...",
          "Error 5. android.os.NetworkOnMainThreadException",
          "Error 6. java.lang.SecurityException. Permission denied",
          "Error 7. java.lang.IllegalStateException. You need to use a Theme.AppCompat...",
          "Error 8. android.view.ViewRootImpl$CalledFromWrongThreadException. Only ...",
          "Error 9. kotlin.UninitializedPropertyAccessException. lateinit property...",
          "Error 10. java.io.IOException. Cleartext HTTP traffic to info.cern.ch not permit",
          "Error 11. Unable to create protected region in stack for implicit overflow check",
          "Error 12. Application",
          "Error 13. java.lang.NullPointerException. Attempt to invoke virtual method",
          "Error 14. java.lang.IllegalStateException. Vertically scrollable component ...",
          "Overall conclusion"
        ]
      },
      "requirements": [
        "Know the Kotlin language, have basic knowledge in android development"
      ],
      "description": "I am pleased to welcome you to my course, which is dedicated to solving common problems on android.\nWhat is this course about?\nIn the process of application development, very often you may encounter a problem and not find a solution for a long time, despite many articles and the StackOverFlow website. This can happen because you don't have enough experience in development and therefore can't see the big picture. Or because you have never encountered such a problem and have no idea how to handle it. It also happens sometimes that the error description in LogCat is not correct and confuses the programmer instead of helping him/her. Let's deal with these cases further on.\nThis course can be compared to the troubleshooting section in the manual of some devices. This section describes solutions to common problems.\nWe will solve such problems by simple examples with a few lines of code. Because complex examples can be confusing on their own.\nWho will benefit from this course?\nThis course will be useful for intermediate-level android developers. Beginner developers who have no experience at all will probably not be able to take it. You're better off taking the beginner's course and then coming back to this course.",
      "target_audience": [
        "Middle Android Developer"
      ]
    },
    {
      "title": "Algoritmos y Estructuras de Datos",
      "url": "https://www.udemy.com/course/algoritmos-estructuras-de-datos-/",
      "bio": "Desarrolla tu lógica de Programación creando Algoritmos y aprende a implementar diferentes Estructuras de Datos",
      "objectives": [
        "Creación de algoritmos",
        "Desarrollo de la lógica de programación",
        "Cómo optimizar recursos, operaciones y tiempo de ejecución",
        "Diferentes estructuras de datos, su funcionamiento y su implementación en código"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Cómo aprovechar al máximo este curso",
          "Familiarizate con el entorno de Udemy"
        ],
        "Algoritmos (Desarrollo de la Lógica de Programación)": [
          "Desarrollo de Lógica de Programación",
          "Ejercicios (incluye consejos de Buenas Prácticas)",
          "Ejercicios (incluye consejos sobre Cómo aprender de otros)",
          "Ejercicios",
          "Optimización de un Algoritmo",
          "Algoritmo para Numeros Perfectos",
          "Cómo depurar un algoritmo (Debugging) - Parte 1",
          "Cómo depurar un algoritmo (Debugging) - Parte 2",
          "Código fuente de esta sección",
          "Comprueba si un número es guay"
        ],
        "Introducción a las Estructuras de Datos": [
          "Principales Estructuras de Datos",
          "Otras Estructuras de Datos (STRUCT)",
          "Otras Estructuras de Datos (UNION)",
          "Otras Estructuras de Datos (ENUM)",
          "BONUS: Diferencias entre STRUCT Y CLASS",
          "Código fuente de esta sección",
          "Cuestionario sobre Estructuras de Datos"
        ],
        "Estructura de Datos Estáticas y Dinámicas: Arrays": [
          "Arrays Estáticos",
          "Arrays Dinámicos",
          "Cadenas de Caracteres - Parte 1",
          "Cadenas de Caracteres - Parte 2",
          "Cadenas de Caracteres - Parte 3",
          "Código fuente de esta sección",
          "RETO con arrays"
        ],
        "Algoritmos de Ordenación": [
          "Algoritmos de Ordenación. Tipos y por qué son importantes",
          "Algoritmo de Intercambio (Bubble Sort)",
          "Implementacion en Código del Algoritmo de Intercambio (BubbleSort) - Parte 1",
          "Implementacion en Código del Algoritmo de Intercambio (BubbleSort) - Parte 2",
          "Algoritmo de Ordenación por Selección",
          "Implementacion en Codigo de Algoritmo por Selección - Parte 1",
          "Implementacion en Codigo de Algoritmo por Selección - Parte 2",
          "Algoritmo de Inserción",
          "Implementación en Código de Algoritmo de Inserción - Parte 1",
          "Implementación en Código de Algoritmo de Inserción - Parte 2",
          "Medición de Tiempo de Ejecución de un Algoritmo",
          "Proyecto de Creación de un Algoritmo Propio de Ordenación - Parte 1",
          "Proyecto de Creación de un Algoritmo Propio de Ordenación - Parte 2",
          "Proyecto de Creación de un Algoritmo Propio de Ordenación - Parte 3",
          "Consejos Finales para Mejorar la habilidad de desarrollo",
          "Código fuente de esta sección",
          "Crea tu propio algoritmo de ordenación"
        ],
        "BONUS: RECURSIVIDAD": [
          "Qué es la recursividad",
          "Recursividad Nivel Básico - Parte 1",
          "Recursividad Nivel Básico - Parte 2",
          "Recursividad Nivel Medio",
          "Recursividad Nivel Avanzado (Torres de Hanoi explicado al detalle) - Parte 1",
          "Recursividad Nivel Avanzado (Torres de Hanoi explicado al detalle) - Parte 2",
          "Recursividad Nivel Avanzado (Torres de Hanoi explicado al detalle) - Parte 3",
          "Código fuente de esta sección",
          "Haz una función recursiva"
        ],
        "Estructuras de Datos: Matrices": [
          "Matrices",
          "Matrices Estáticas. Ejemplos reales de uso - Parte 1",
          "Matrices Estáticas. Ejemplos reales de uso - Parte 2",
          "Matrices Estáticas. Ejemplos reales de uso - Parte 3",
          "Manejos de índices de matrices (Ejercicio) - Parte 1",
          "Manejos de índices de matrices (Ejercicio) - Parte 2",
          "Manejos de índices de matrices (Ejercicio) - Parte 3",
          "Matrices Dinámicas - Parte 1",
          "Matrices Dinámicas - Parte 2",
          "Matrices Dinámicas - Parte 3",
          "Borrado de Memoria",
          "Parte 1 - Matrices MultiDimensionales",
          "Parte 2 - Matrices MultiDimensionales",
          "Código fuente de esta sección",
          "Crea el motor de una agenda"
        ],
        "LISTAS (Estructuras de Datos Dinámicas Lineales)": [
          "Listas, tipos y lógica",
          "Parte 1 - Implementación en código de una lista",
          "Parte 2 - Implementación en código de una lista",
          "Implementación en código de una lista - Parte 3",
          "Insertar elemento en la lista - Parte 1",
          "Insertar elemento en la lista - Parte 2",
          "Borrar elemento de una lista - Parte 1",
          "Borrar elemento de una lista - Parte 2",
          "BONUS: insertar elemento en una posición específica - Parte 1",
          "BONUS: insertar elemento en una posición específica - Parte 2",
          "Código fuente de esta sección",
          "Completa la AGENDA que hemos creado en la sección anterior!"
        ],
        "COLAS (Estructuras de Datos Dinámicas Lineales)": [
          "Lógica de una cola",
          "Implementación en Código. Inserción y recorrido de elementos - Parte 1",
          "Implementación en Código. Inserción y recorrido de elementos - Parte 2",
          "Eliminar elemento y RETO - Parte 1",
          "Eliminar elemento y RETO - Parte 2",
          "Código fuente de esta sección",
          "Desarrolla la lógica de administración de todas las cajas de pago"
        ],
        "PILAS (Estructuras de Datos Dinámicas Lineales)": [
          "Lógica de una pila",
          "Implementación en Código. Inserción y recorrido de elementos - Parte 1",
          "Implementación en Código. Inserción y recorrido de elementos - Parte 2",
          "Eliminar elemento y RETO - Parte 1",
          "Eliminar elemento y RETO - Parte 2",
          "Código fuente de esta sección",
          "Desarrolla la lógica de adminsitración de los productos ofrecidos",
          "EXAMEN FINAL SOBRE ESTRUCTURAS DE DATOS LINEALES",
          "Otras situaciones"
        ]
      },
      "requirements": [
        "Nociones básicas de programción"
      ],
      "description": "En este curso de Algoritmos y Estructuras de Datos aprenderás de forma básica y muy completa las nociones más elementales sobre estos pilares del desarrollo de software. Este curso dará un recorrido completo por todos los conceptos más básicos para aprender a crear tus propios algoritmos, gracias a la visión global que adquirirás. De hecho a lo largo del curso aprenderás cámo aplicar cada idea a cualquier lenguaje de programación.\nAprenderás habilidades fundamentales para la programación:\nAlgoritmos Elementales\nDesarrollo de la lógica de programación\nBuenas prácticas al escribir código\nOptimización de recursos, tiempo y operaciones en un algoritmo\nImplementación en código de Estructuras de Datos\nAdemás contarás con material didáctico descargable, consejos desde mi experiencia de +15 años programando, ejercicios resueltos y ejemplos de uso para situaciones de la vida real, para que entiendas qué lógica sigue cada algoritmo y sepas implementarlo en el lenguaje que tú prefieras.\n\n\nEl curso está dividido en 2 bloques principales abordados a lo largo de las diferentes secciones:\n\n\nAlgoritmos\nEn este bloque aprenderás a desarrollar desde cero algoritmos con los que resolver problemas sin importar el lenguaje de programación o tecnología que uses. Principalmente nos centraremos en la lógica del desarrollo de manera que tu podrás trasladar la idea a tu propio entorno de desarrollo. Por lo tanto, no importa qué lenguaje uses, los contenidos de estas clases serán totalmente útiles para tí.\nEntre los diferentes algoritmos que veremos están incluidos los de ordenación con una explicación detallada de su funcionamiento y de cada linea y elemento del código que estos tengan. ¿¿Sabes que en este curso crearemos un algoritmo de ordenación más rapido que los famosos de Intercambio o Bubble Sort, Selección o Inserción?? Si quieres saber como crear algoritmos pensando en la optimización y eficacia...estás ante el curso ideal para tí.\nEstructuras de Datos\nEn este bloque conocerás diferentes Estructuras de Datos que existen, desde las más básicas hasta otras más complejas, y tanto estructuras de datos estáticas como dinámicas. ¿Qué es una estructura de datos estática? ¿Y una dinámica? ¿Para qué sirven? ¿Cómo se cuándo usar una u otra? Todo eso se explica en el curso.\n¿Sabías que en la vida cotidiana hay muchas situaciones en las que se pueden aplicar algoritmos a Estructuras de Datos? Por ejemplo en un simple supermercado encontramos varias situaciones que se podrian manejar con Listas, Pilas y Colas. Precisamente en este curso desarrollaremos a lo largo de un proyecto completo, la administración de estas cuestiones mediante las Estructuras de Datos Dinámicas\n\n\nDesarrollaremos cada una de las funcionalidades en código explicado al detalle de las siguientes estructuras de datos:\nEstructuras de Datos Estáticas y Dinámicas (Arrays y Matrices multidimensionales)\nEstructuras de Datos Dinámicas Lineales (Listas, Pilas y Colas)\nEstructuras de Datos Dinámicas No Lineales (Árboles)\n\nTodos los conceptos se explican en detalle, paso a paso y entendiendo el por qué de cada cosa. Así podrás captar unas correctas bases sobre estos pilares de la programación desde un principio en tu desarrollo profesional. Este curso te permitirá expandirte a cualquier área del desarrollo de software.\n¿Verdad que es genial? Pues lo mejor de todo es que está a tu alcance.\nCompra el curso y disfruta de todo lo que te está esperando.\nNos vemos!\nJosé Javier Villena",
      "target_audience": [
        "Estudiantes de Programación",
        "Interesados en mejorar sus habilidades de programación"
      ]
    },
    {
      "title": "Java ile Android Uygulama Geliştirme Kursu",
      "url": "https://www.udemy.com/course/java-ile-android-uygulama-gelistirme-kursu/",
      "bio": "Başlangıçtan İleri Seviyeye android eğitim setiyle kendi uygulamalarınızı geliştirin.",
      "objectives": [
        "Nesne Yönelimli Programlama",
        "Temel Yapılar (Activity,fragmentler,navigation)",
        "Firebase, Restfull API, Google Play Console",
        "Kapsamlı bir dating uygulaması nasıl geliştirilir"
      ],
      "course_content": {
        "Tanıtım": [
          "Tanıtım"
        ],
        "Kurulumlar": [
          "Android Studio Kurulumu",
          "SDK Kurulumu",
          "Genymotion Emülatör Kurulumu",
          "Android Emülatör Kurulumu"
        ],
        "Java Giriş": [
          "Android Güncellemelerinin Yapılması",
          "Gradle Kullanımı",
          "Manifest Dosyası Nedir? Nasıl Kullanılır?"
        ],
        "Java Temelleri": [
          "Java Giriş",
          "Değişkenler",
          "Sabitler",
          "Diziler",
          "Listeler",
          "Operatörler",
          "Eğer Yapısı",
          "For - Foreach Döngüsü",
          "While",
          "Switch",
          "Metodlar",
          "Sınıflar",
          "Erişim Belirleyicileri",
          "Getter & Setter",
          "Yapıcı Metotlar",
          "Basit Bir Proje Geliştirelim",
          "Ödev 1",
          "Ödev 2",
          "Ödev 3",
          "Öğrendiklerimizi Hatırlayalım"
        ],
        "İleri Seviye Java-OOP": [
          "OOP nedir?",
          "Nesne Nedir?",
          "Class",
          "Static",
          "Constructor",
          "Encapsulation",
          "Inheritance",
          "Inheritance - Örnek",
          "Polymorphism",
          "Abstract",
          "Interface",
          "Kütüphanem App – Uygulama Geliştirme",
          "Bölüm Sonu Ödevi 1"
        ],
        "Android Tasarım - XML": [
          "Tasarım Giriş",
          "Bazı Companentler: EditText,TextView,Button,ImageView",
          "Tasarım Dizaynı 1",
          "Tasarım Dizaynı 2",
          "Tasarım Dizaynı 3",
          "Bölüm Sonu Ödevi"
        ],
        "Activity ve Fragmentler": [
          "Activity Nedir?",
          "Fragment Nedir?",
          "Activity&Fragment Yaşam Döngüsü",
          "Fragment Managment",
          "Intent Nedir?",
          "Veri taşıma - Bundle & Intent",
          "Activity CallBack",
          "Bölüm Sonu Ödevi"
        ],
        "Layout Kullanımı": [
          "LineerLayout",
          "FrameLayout",
          "RelativeLayout"
        ],
        "Dialog İşlemleri": [
          "AlertDialog Kullanımı",
          "AlertDialog Özelleştirme"
        ],
        "Listview ve Adapter Kullanımı": [
          "Listview Kullanımı",
          "Listview Özelleştirme",
          "Listview İşlemleri",
          "Gridview Kullanımı",
          "Recyclerview 1",
          "Recyclerview 2",
          "LayoutManager",
          "Bölüm Sonu Ödevi"
        ]
      },
      "requirements": [
        "Temel Bilgisayar Kullanma Becerisi",
        "Bir Bilgisayar ve Internet"
      ],
      "description": "Bu kurs kapsamında java temellerinden başlayarak ileri seviyeye doğru mobil uygulama geliştirme becerisine sahip olacaksınız.Mobil deyince 4 temel yapı akla gelmektedir.Bu 4 temel yapıyı kurs süreci boyunca öğrenmiş olacaksınız.\nSadece mobil uygulama geliştirmekle kalmayıp nesne yönelimli programalanın ne demek olduğunu ve getirdiklerini nasıl en etkili bir şekilde kullanabileceğinizi öğreneceksiniz.\nGöz alıcı tasarımlar geliştirerek kullanıcıya görsel bir şölen hazırlama beceriside kazanacaksınız.Son olarak bonus dersler ile birlikte markete uygulama yükleyip nasıl para kazanabileceğinizi adım adım öğrenmiş olacaksınız.\nBelki de sadece yazılım değil bir girişimci olarak nasıl uygulama geliştirebilirim sorusunun cevabını bu kurs kapsamında bulmaya çalışacaksınız.\nBu kursu elimden geldiğinde güncel tutmaya gayret edeceğimi söylemek isterim. Yeni araçlar keşfettikçe kurs kapsamına dahil edebilir ve kullandığımız diğer yapılarla birlikte geliştirebiliriz.\nGereksinimler; Bu kurs kapsamında temel java dersleri ile baslanmış olup sadece mantık ve algoritma ile ilgili kavramlara aşina olmak yeterli olacağını düşünüyorum. Dersleri mobil cihazınızdan ya da eğer varsa bilgisayarınızdan takip edebilirsiniz. Her ders sonraki konunun pekiştirilmesi için örnekler geliştirmek oldukça onemlidir. Bazen burdaki bilgiler kolay öğrenilir ama tekrar edilmediğinde kolay unutulabilir.\nNeler öğreneceğim?\nBu kurs kapsamında temel java becelerileri, nesne yonemli programlama teorik ve uygulamalı beceriler, mobil uygulama geliştirme ve geliştirdiğiniz uygulamayı markette yayımlama gibi becelerilere sahip olacaksınız. Bu kurs kapsamında hayalinizde ya da bir iş kapsamında uygulamanızı geliştirebilirsiniz.",
      "target_audience": [
        "Programlama ile ilgili kişiler"
      ]
    },
    {
      "title": "iOS 12 Swift 4 Firebase ve Parse ile Uygulama Geliştirme",
      "url": "https://www.udemy.com/course/ios-11-swift-4-ve-firebase-ile-uygulama-gelistirme/",
      "bio": "Tinder Clone (Parse), Uber Clone (Firebase), Chat Uygulaması (Firebase) ve MVC&MVVM ile uygulama geliştirme",
      "objectives": [
        "iOS 11 ve Swift 4 ile uygulama geliştirme",
        "Mobil uygulamaları yayınlayabilme",
        "Mobil uygulamalarının istatistiksel verilerini takip edebilme",
        "Mobil Uygulamalardan para kazanma",
        "iOS geliştirici arayan firmalarda daha kolay iş bulabilme"
      ],
      "course_content": {
        "Tanıtım": [
          "Tanıtım Videosu",
          "Xcode 9 kurulumu"
        ],
        "Temel İşlemler": [
          "Değişkenler -1 (String,İnteger,Double)",
          "Değişkenler -1 Kodlarlar",
          "Değişkenler - 2 (Boolen,Tuples,Optional)",
          "Değişkenler - 2 Kodlar",
          "Karşılaştırma Operatörleri ve İf-else Yapısı",
          "Karşılaştırma Operatörleri ve İf-else Yapısı Kodlar"
        ],
        "Diziler - Dictionary - Döngüler": [
          "Array ve Dictionary",
          "Array ve Dictionary Kodlar",
          "For Döngüsü",
          "For Döngüsü Kodlar",
          "Switch - Case Yapısı",
          "Switch - Case Yapısı Kodlar",
          "Swift Temel Bilgiler"
        ],
        "Fonksiyonlar - Closures": [
          "Fonksiyonlar",
          "Fonksiyonlar Kodlar",
          "Closures - Kapatmalar",
          "Closures - Kapatmalar Kodlar"
        ],
        "Enumaration - Class ve Struct": [
          "Enumaration",
          "Enumaration Kodlar",
          "Class - Struct 1/2",
          "Class - Struct 2/2",
          "Class - Struct Kodları",
          "Swift Temel Bilgiler - 2"
        ],
        "Subscript - Optionals - Error Handling": [
          "Subscript",
          "Subscript Kodlar",
          "İf let Kullanımı",
          "İf let Kodları",
          "Guard let Kullanımı",
          "Guard Let Kodları",
          "Error Handling (Hata Yakalama)",
          "Hata yakalama Kodları"
        ],
        "Extensions - Generics": [
          "Extension Kullanımı",
          "Extension Kodları",
          "Generics Kullanımı",
          "Generics Kodları"
        ],
        "Protocols - Generics - Extension": [
          "Protocols Kullanımı",
          "Protocols Kodları",
          "Protocols-Generics-Extension",
          "Protocols-Generics-Extension Kodları"
        ],
        "Versiyon Kontrol Sistemi - Git": [
          "Git ve Bitbucket Tanıtım",
          "Git Komutları ve Git ile Proje Çekme"
        ],
        "Xcode Temel İşlemler": [
          "Xcode 9 Tanıtım",
          "Tableview Kullanımı",
          "Tableview Örneğini Git Ortamına Aktarma",
          "CollectionView Kullanımı",
          "Collectionview Örneğini Git Ortamına Aktarma"
        ]
      },
      "requirements": [
        "Temel bilgisayar programlama bilgisine sahip olunmalıdır",
        "Mac Bilgisayar ya da OSX işletim sistemi kurulu bilgisayara sahip olunmalıdır"
      ],
      "description": "Türkiye mobil uygulama geliştirme sektöründe Android geliştirici sayısına karşılık yeteri iOS geliştirici bulunmamaktadır. Günümüz teknolojisinde her uygulamanın Android ve iOS platformunda var olması çok önemlidir. Bu eğitim sayesinde sektördeki iOS geliştirici gereksinimini kapatıp, kendi uygulamalarınızı yapabilirsiniz. Bu eğitim size iOS son sürümü olan iOS 11 ve Swift son sürümü olan Swift 4 hakkında yeni yetenekler katacaktır. Bir fikriniz var ve nasıl gerçeğe dönüştüreceğinizi bilmiyorsanız, bu eğitim ile cevabını bulacaksınız. Uygulama yazımında profesyonel yaklaşım, ve yazılım geliştirme prensiplerini öğreneceksiniz. İş ilanlarında istenen gereksinimleri kazanacaksınız.\nEğitim içerisinde bulabilecekleriniz:\n1- Swift 4 ile gelen tüm yeni özellikler\n2- Swift 4 ile Json Parse İşlemi\n3- MVC ve MVVM ile program geliştirme\n4- Swift ile XML Parse İşlemi\n5- Firebase ile Chat Uygulaması (Mesaj,Resim ve Video Gönderme dahil)\n6- Swift 4 ile Gelen Machine Learning Resim Tanımlama\n7- Machine Learning ile Yüz Tanıma Uygulaması\n8- Artırılmış Gerçeklik ile Ortama 3 Boyutlu Yazı Yerleştirme Uygulaması\n9- Arttırılmış Gerçeklik ile Ortama 3 Boyutlu Şekil Yerleştirme Uygulaması\n10- Parse ile Tinder Clone Uygulaması\n11- Firebase ile Uber Clone Uygulaması\nBunların dışında da bir çok uygulama bulabileceksiniz. Eğitim sürekli güncellenmekte ve ders eklenmektedir.",
      "target_audience": [
        "iOS mobil uygulama geliştirmeye başlamayı düşünenler",
        "İOS mobil uygulama geliştirmede kendini geliştirmek isteyenler",
        "İOS geliştirici olarak çalışmak isteyenler",
        "Swift ile kod yazmayı öğrenmek isteyenler"
      ]
    },
    {
      "title": "Flutter desde cero - Guía completa con arquitectura limpia",
      "url": "https://www.udemy.com/course/flutter-desde-cero-darwin-morocho/",
      "bio": "Dart, gestión de estados con Provider, streams, inyección de dependencias, repositorios, unit testing, widget testing",
      "objectives": [
        "La sintaxis del lenguaje Dart",
        "Crear apps para iOS,Android y Web con flutter",
        "Manejo de los widgets más comunes en flutter",
        "La importancia del BuildContext",
        "Tips de diseño y experiencia de usuario en las aplicaciones móviles",
        "Gestión de estados con Provider",
        "Manejo y uso de streams",
        "Guardar datos en las preferencias de la aplicación",
        "Inyección de dependencias",
        "Unit testing",
        "Widget Testing",
        "Flutter web"
      ],
      "course_content": {
        "Información del curso": [
          "Introducción al curso",
          "Cupones y descuentos",
          "Códigos fuente"
        ],
        "Instalación Dart SDK": [
          "Instalación en macOS",
          "Instalación Windows"
        ],
        "Dart y Null Safety (actualizado a dart 3)": [
          "Instalación y configuración de Visual Studio Code",
          "La función main",
          "Comentarios",
          "Datos primitivos",
          "Variables usado var",
          "Variables dinámicas",
          "La clase Object",
          "Interpolación",
          "Variables inmutables",
          "Constantes",
          "Funciones",
          "Null Safety",
          "Conditional member access",
          "Null assertion operator",
          "Operators - parte 1",
          "Operators - parte 2",
          "Operators - parte 3",
          "Operators - parte 4",
          "Operators - parte 5",
          "Formatear nuestro código",
          "Arrow functions",
          "Callbacks",
          "Listas - parte 1",
          "Listas - parte 2",
          "Listas - parte 3",
          "Listas - parte 4",
          "Listas - parte 5",
          "Map - parte 1",
          "Map - parte 2",
          "Map - parte 3",
          "Map - parte 4",
          "Map - parte 5",
          "Map - parte 6",
          "Map - parte 7",
          "Map - parte 8",
          "Spread operator",
          "If - else",
          "Switch - parte 1",
          "Switch - parte 2",
          "Switch - parte 3",
          "El bucle for",
          "El bucle while",
          "break & continue",
          "enums - parte 1",
          "enums - parte 2",
          "Inicialización tardia",
          "Asignar valores a variables con switch",
          "Clases - parte 1",
          "Clases - parte 2",
          "Herencia",
          "Clases abstractas",
          "Casting - parte 1",
          "Casting - parte 2",
          "Clases con constructores constantes",
          "El operador de igualdad en clases",
          "Parámetros de nombre - parte 1",
          "Parámetros de nombre - parte 2",
          "Parámetros opcionales - parte 1",
          "Parámetros opcionales - parte 2",
          "Record Types - parte 1",
          "Record Types - parte 2",
          "Variables globales y propiedades estaticas",
          "Imports relativos",
          "Datos privados",
          "Getters",
          "Extensiones",
          "Validaciones con afirmaciones",
          "Datos genéricos - parte 1",
          "Datos genéricos - parte 2",
          "Datos genéricos - parte 3",
          "typedefs",
          "Factory constructors",
          "Constructores de nombre",
          "La clase DateTime",
          "implements",
          "Modificadores de clase",
          "Clases selladas",
          "Clases selladas con datos genéricos",
          "Mixins - parte 1",
          "Mixins - parte 2",
          "Mixins - parte 3",
          "Futures - parte 1",
          "Futures - parte 2",
          "Futures - parte 3",
          "Errores y Excepciones - parte 1",
          "Errores y Excepciones - parte 2",
          "Excepciones personalizadas",
          "Excepciones con Futures"
        ],
        "Primeros pasos con flutter": [
          "windows - Instalación Android SDK y Flutter SDK",
          "macOS - Instalación Android SDK y Flutter SDK",
          "Configuración android studio y visual studio code",
          "Crear un proyecto flutter mediante linea de comandos",
          "Crear un proyecto flutter mediante visual studio",
          "Crear un proyecto flutter mediante Android Studio",
          "Emuladores y simuladores",
          "Código dart básico de una app flutter"
        ],
        "Conceptos básicos de desarrollo nativo": [
          "Introducción",
          "El archivo build.gradle - Android",
          "Cambiar el package name - Android",
          "Generar un apk - parte 1",
          "Generar un apk - parte 2",
          "Cambiar el icono - Android",
          "AndroidManifest.xml",
          "Datos básicos sobre Xcode"
        ],
        "Widgets mas usados en flutter": [
          "Introducción",
          "El widget Text - parte 1",
          "El widget Text - parte 2",
          "El widget Text - parte 3",
          "El widget Container - parte 1",
          "El widget Container - parte 2",
          "El widget Container - parte 3",
          "El widget Container - parte 4",
          "El widget Container - parte 5",
          "El widget Container - parte 6",
          "El widget Column - parte 1",
          "El widget Column - parte 2",
          "El widget Column - parte 3",
          "El widget Row",
          "Errores de overflow",
          "El widget Flexible - parte 1",
          "El widget Flexible - parte 2",
          "Datos adicionales sobre Row y Column",
          "El widget Stack - parte 1",
          "El widget Stack - parte 2",
          "El widget Scaffold - parte 1",
          "El widget Scaffold - parte 2",
          "El widget Scaffold - parte 3",
          "El widget Scaffold - parte 4",
          "El widget SafeArea",
          "El widget SingleChildScrollView - parte 1",
          "El widget SingleChildScrollView - parte 2",
          "ListView - parte 1",
          "ListView - parte 2",
          "ListView - parte 3",
          "Fuentes personalizadas - parte 1",
          "Fuentes personalizadas - parte 2",
          "Iconos - parte 1",
          "Iconos - parte 2",
          "CupertinoApp",
          "Imágenes - parte 1",
          "Imágenes - parte 2",
          "Imágenes - parte 3",
          "facebook ui - parte 1",
          "facebook ui - parte 2",
          "facebook ui - parte 3",
          "facebook ui - parte 4",
          "facebook ui - parte 5",
          "facebook ui - parte 6",
          "facebook ui - parte 7",
          "Device Preview",
          "facebook ui - parte 8",
          "facebook ui - parte 9",
          "facebook ui - parte 10",
          "facebook ui - parte 11",
          "facebook ui - parte 12",
          "facebook ui - parte 13",
          "facebook ui - parte 14",
          "facebook ui - parte 15",
          "facebook ui - parte 16",
          "facebook ui - parte 17"
        ],
        "StatelessWidget y StatefulWidget": [
          "Teoría de widgets",
          "Nuestro primer StatefulWidget",
          "initState",
          "Periodic Timer",
          "Liberar recursos con dispose",
          "didUpdateWidget",
          "Caso practico para un StatefulWidget"
        ],
        "Navegación y diálogos": [
          "Navigator y el contexto",
          "pop y maybePop",
          "Pasar datos a una página",
          "popUntil",
          "Forma correcta de pasar datos a una ruta",
          "Navegando usando nombres de rutas",
          "Pasar datos con nombres de rutas",
          "pushReplacementName",
          "pushNameAndRemoveUntil",
          "Retornar datos de una ruta",
          "Refactorizando nuestro menu page",
          "Dialogos - parte 1",
          "Dialogos - parte 2",
          "Dialogos - parte 3",
          "Dialogos - parte 4",
          "Dialogos - parte 5",
          "Dialogos - parte 6",
          "Dialogos - parte 7",
          "WillPopScope - parte 1",
          "WillPopScope - parte 2"
        ],
        "Inputs": [
          "Introducción",
          "Proyecto para esta sección",
          "Renderizando una lista de paises",
          "El widget TextField",
          "Esconder el teclado del dispositivo móvil",
          "PrimarySwatch",
          "InputDecoration",
          "Modos de teclado",
          "InputDecorationTheme",
          "TextEditingController",
          "Expresiones regulares",
          "Input Formatters - parte 1",
          "Input Formatters - parte 2",
          "CheckBox - parte 1",
          "CheckBox - parte 2",
          "CheckBox - parte 3",
          "Radio - parte 1",
          "Radio - parte 2",
          "El widget Switch",
          "El widget Slider - parte 1",
          "El widget Slider - parte 2",
          "El widget Slider - parte 3",
          "EL widget CalendarDatePicker - parte 1",
          "EL widget CalendarDatePicker - parte 2",
          "El widget CupertinoDatePicker",
          "Date y Time pickers mediante dialogos"
        ],
        "Keys": [
          "Tipos de keys",
          "Diferenciar widgets del mismo tipo",
          "Local Keys",
          "Preservar el estado dentro de widgets tipo lista",
          "El widget ReorderableListView",
          "Global keys - parte 1",
          "Global keys - parte 2",
          "Global keys - parte 3"
        ]
      },
      "requirements": [
        "Conceptos básicos de programación"
      ],
      "description": "Este es un curso para principiantes para aquellos que quieren explorar el potencial de flutter. Un curso fuera de lo común en donde además de aprender flutter desde cero , buenas prácticas, también aprenderás tips de diseño y experiencia de usuario. Para tomar este curso debes tener las bases de programación y programación orientada a objetos (en cualquier lenguaje).\n\nEn este curso aprenderás:\nEn este curso aprenderás la sintaxis del lenguaje Dart, crear aplicaciones móviles con flutter desde cero, manejar los widgets más comunes en flutter, aplicar UX en tus apps, Singletons, uso del patrón Repositorio definir una arquitectura escalable y amigable con unit testing, inyección de dependencias, gestionar el estado de tu app con Provider, uso de streams, flutter web.\nEste es un curso para principiantes para aquellos que quieren explorar el potencial de flutter.\n\n\nEste curso inicia desde lo más elemental, la estructura de una app flutter, como instalar dependencias, conocer los proyectos que usan código nativo y cómo realizar ciertas modificaciones, manejar los widgets más comunes, definir una arquitectura para tu proyecto.\n\n\nEste es un curso nivel principiante hasta llegar a un nivel intermedio, el cual te brindara unas bases sólidas de flutter para crear aplicaciones realmente increíbles, con una gran calidad en tu código.",
      "target_audience": [
        "Desarrolladores que quieren iniciar con el desarrollo de apps flutter con buenas prácticas y tips de ui y ux"
      ]
    },
    {
      "title": "Entwickle einen Instagram Klon | Swift iOS 13 und Firebase",
      "url": "https://www.udemy.com/course/entwickle-einen-instagram-klon-mit-swift-4-und-firebase/",
      "bio": "Instagram Klon mit Swift, iOS 13, und Firebase. Posts erstellen, kommentieren, Front-Rückkamera nutzen und mehr...",
      "objectives": [
        "Front- und Rückkamera nutzen",
        "Fortgeschrittene Themen in der Programmierung kennen lernen",
        "Firebase verstehen und anwenden können",
        "Effiziente Datenbankstrukturen und Abläufe schaffen",
        "Verschiedene Programmier Pattern kennen lernen wie z.B. Singleton oder das Model View Controller (MVC)",
        "Das delegate Pattern verstehen und anwenden können",
        "TableView verstehen und anwenden",
        "CollectionView verstehen und anwenden",
        "UIPageViewController verstehen und anwenden",
        "Storyboard Reference anwenden",
        "Segues anwenden",
        "Verstehen wie man mit mehreren UIViewControllern zusammen arbeitet",
        "Eine komplexe App bei der Entstehung zuschauen",
        "Arbeiten mit CocoaPods um andere Bibliotheken einzubinden und diese zu nutzen",
        "Extension nutzen um übersichtlichen Code zu erstellen",
        "Posts liken, kommentieren und alles in Echtzeit",
        "Leuten folgen, Profile suchen und mehr",
        "Selfies mit der Frontkamera machen und posten",
        "Automatisches einloggen",
        "Hashtags nutzen",
        "Post nach der Zeit sortieren",
        "Notifications erstellen, um User zu informieren über neue Ereignisse"
      ],
      "course_content": {
        "Hier starten": [
          "Einleitung und der Aufbau des Kurses",
          "In eigener Sache"
        ],
        "Wichtige Swift Themen für den Kurs (Wiederholung)": [
          "Optionals",
          "Closure - 1",
          "Closure - 2",
          "Escaping Closure",
          "Array",
          "Dictionary - 1",
          "TableView - 1",
          "TableView - 2",
          "CollectionView - 1",
          "CollectionView - 2"
        ],
        "Login-und Registrierung Szene Layout": [
          "Überblick",
          "Login Screen erstellen",
          "Registration Screen erstellen",
          "Segue zwischen Login und Registration erstellen",
          "Auto Layout und Stackview",
          "Login Design",
          "Design Login Button",
          "Registrierung Design",
          "AttributedText (Text vom Button beliebig ändern)",
          "Design Registrierung Button",
          "Projektdaten herunterladen"
        ],
        "Login-und Registrierung Programmiercode": [
          "Überblick",
          "Firebase in das Projekt integrieren (CocoaPods und PodFile installieren)",
          "WICHTIG: Update der createUser() Methode von Firebase",
          "Neuen User mit Firebase erstellen (create User Methode) - 1",
          "Neuen User mit Firebase erstellen (User Daten hochladen setValue..) - 2",
          "Profilfoto wählen",
          "WICHTIG: Update der metadata Rückgabe",
          "Neuen User mit Firebase erstellen (Profilbild hochladen) - 3",
          "WICHTIG: Update der sigIn() Methode von Firebase",
          "Login User",
          "Dimiss Keyboard",
          "Passworteingabe verdecken",
          "Projektdaten herunterladen"
        ],
        "Firebase Tipps": [
          "Meine Projektdateien in deine Datenbank einbinden"
        ],
        "Menü der App mit UITabbarController erstellen": [
          "Überblick",
          "UITabbarController erstellen",
          "Segue einbauen",
          "Tabbar Icon Farbe ändern",
          "NavigationsController hinzufügen",
          "Storyboard References (Mehrere Storyboards nutzen)",
          "Log Out einbauen",
          "Autologin einbauen",
          "Segue vom ViewController und nicht vom Button starten",
          "Projektdaten herunterladen"
        ],
        "Code verbessern": [
          "Überblick",
          "AuthenticationService Klasse (Login Methode)",
          "Callbacks erstellen (@escaping Closure) - 1",
          "Callbacks erstellen (@escaping Closure) - 2",
          "AuthenticationService Klasse (createUser Methode) - 1",
          "AuthenticationService Klasse (Autologin Methode)",
          "AuthenticationService Klasse (Log Out Methode)",
          "Einbinden einer fremden Bibliothek (ProgressHud)",
          "Projektdaten herunterladen"
        ],
        "Fotos posten": [
          "Überblick",
          "Share - Layout",
          "Foto zum teilen auswählen",
          "Weiteres Design",
          "Fotos hochladen",
          "Nach dem laden des Posts im feed Datenbank speichern",
          "Projektdaten herunterladen"
        ],
        "Font- und Rückkamera nutzen": [
          "Überblick",
          "AVFoundation Einleitung",
          "Kamera Layout erstellen",
          "Kamera erstellen (AVFoundation Framework)",
          "Switch Rück- und Frontkamera",
          "Bild aufnehmen",
          "Bild speichern",
          "Abrechen (Neue Aufnahme) & dismiss (zurück zum ShareController)",
          "Sidebar ausblenden",
          "Projektdaten herunterladen"
        ],
        "Home Feed": [
          "Überblick",
          "Tabelle erstellen",
          "Posts laden",
          "Home Feed Layout (Custom TableViewCell) - 1",
          "Home Feed Layout (Custom TableViewCell) - 2",
          "Model View Controller (MVC) Postmodel erstellen",
          "Posts effizient anzeigen lassen",
          "Einbinden einer fremden Bibliothek (SDWebImage)",
          "Model View Controller (MVC) Usermodel erstellen",
          "User Informationen effizient anzeigen lassen",
          "Home Feed optimieren",
          "Dynamische Zeilenhöhe erstellen",
          "Tabelle verschönern",
          "Projektdaten herunterladen",
          "Zusammenfassung"
        ]
      },
      "requirements": [
        "Du solltest einen MAC oder Apple Rechner besitzen",
        "Du solltest die Entwicklungsumgebung Xcode (mind 9.0) nutzen und kennen",
        "Du solltest dich mit der Programmiersprache Swift bereits auskennen",
        "Ein Google Account wird benötigt um Firebase (Datenbank, Online-Speicher etc.) zu nutzen. Der Account kann im Laufe des Kurses erstellt werden, falls noch keiner vorhanden ist."
      ],
      "description": "Du willst mehr als eine Taschenrechner App programmieren?\n\nDu willst deine eigene Social Media App entwickeln?\nDu kennst dich bereits mit der Programmiersprache Swift aus?\n\nDann bist du hier genau richtig.\n\n\n\nIn diesem Kurs lernst du, wie eine komplexe und umfangreiche App von Beginn ersteht.\nDu lernst viele fortgeschrittenen Themen rund um die Entwicklung mit Swift und Xcode. Diese Themen werden dir helfen, deine eigenen App zu entwicklen und zu verbessern. Du wirst lernen, wie man mit fremden Bibliotheken arbeitet, da man bei größeren Projekten auf fertige Lösungen zurückgreift. Dieser Kurs soll dir nicht nur zeigen wie Instagram funktioniert, sondern soll dir vielmehr zeigen wie man solche Projekte aufbaut.\nMein Ziel ist es dir anhand des Beispiels zu zeigen, wie man solche umfangreichen Projekte entwickelt.\n\n\nÜberblick: Swift Themen\n\nStoryboard Reference\nSegues optimal nutzen\nDelegate Pattern\nSingelton Pattern\nFirebase Daten up- und downloaden\nDaten im Online Speicher ablegen\nDatenbank im eigenen Projekt nutzen\nGesture Handling (Nutzer kann mit ImageView interagieren)\nCompletion Closure\nEscaping Closure\nTabbar nutzen\nAVFoundation Framework kennen lernen (für Hardware Kamera vom iPhone)\nTableView\nCollectionView\nCocoapods\nImagePickerController (Fotos vom iPhone nutzen)\nMVC Pattern\nund vieles mehr...\n\n\nÜberblick: Was kann die App?\n\nLogin- und Registrierung neuer Nutzer\nAutologin\nFront- und Rückkamera des iPhone nutzen\nPosts mit Bildern oder Videos erstellen\nPosts nach dem Datum sortieren\nKommentare zu den Posts abgeben\nliken der Posts in Echtzeit\nfollow, unfollow (Posts in Echtzeit hinzufügen oder löschen aus dem homefeed)\nSuchfunktion (suchen nach anderen Nutzern)\nEigene Api entwickeln für posten, User anlegen etc.\nFotos in Originalgröße posten\nNutzer Einstellungen und Profilansicht\nIn der Profilansicht Anzahl der eigenen Posts, Follower etc. anzeigen\nHashtags hinzufügen\nund vieles mehr...",
      "target_audience": [
        "Alle, die mehr als nur einen Taschenrechner programmieren möchten",
        "Alle, die ein komplexes Projekt mit Swift und Xcode entwickeln möchten",
        "Alle, die gerne lernen möchten wie man Apps mit Firebase entwickelt",
        "Alle, die Apps fürs iPhone oder iPad entwickeln möchten",
        "Alle, die gerne lernen möchten wie man Apps mit Datenbanken und Online Speichern aufgebaut."
      ]
    },
    {
      "title": "Flutter 2.0: Crie aplicações responsivas para a Web",
      "url": "https://www.udemy.com/course/flutter-crie-apps-responsivos-android-ios-web/",
      "bio": "Aplicações web com o Flutter: interface de loja virtual e Facebook, WhatsApp web utilizando o Firebase",
      "objectives": [
        "Criar Apps profissionais para Android, IOS e Web usando Flutter",
        "Dominar Dart e o Framework Flutter da Google",
        "Prestar serviços de desenvolvimento de Apps e Aplicações Web",
        "Aprenda Design Responsivo com Flutter Web: MediaQuery, Wrap, OrientatioBuilder, LayoutBuilder, AutoSizeText",
        "Testes as aplicações utilizando console do Chrome, Device Preview e emuladores",
        "Aprenda o mais novo recurso Null Safety, para deixar suas aplicações ainda mais seguras",
        "Crie do zero alguns dos recursos da interface do Facebook para Mobile e Web",
        "Crie alguns dos recursos do WhatsApp Web utilizando autenticação, upload de imagem e banco de dados"
      ],
      "course_content": {
        "Boas vindas": [
          "Vídeo de divulgação do curso",
          "Boas vindas",
          "Mapa do curso",
          "Grupo no Facebook & Redes sociais"
        ],
        "Instalação do Flutter": [
          "Instalação no Windows",
          "Instalação no MacOS",
          "Instalação no Linux",
          "{Opcional} Instalando VS Code"
        ],
        "Resumo da Linguagem Dart": [
          "Resumo da linguagem Dart - o que irei aprender?",
          "Dart básico",
          "Dart intermediário",
          "Dart avançado"
        ],
        "Design responsivo com Flutter Web": [
          "Configurando flutter Web",
          "Tamanhos de telas",
          "Responsividade com MediaQuery",
          "Responsividade com Row & Column",
          "Utilizando Widget Wrap",
          "Utilizando OrientationBuilder",
          "Utilizando LayoutBuilder",
          "Criando AppBar para Loja Virtual",
          "Criando galeria de produtos",
          "Tamanhos de textos - AutoSizeText",
          "Tamanhos proporcionais - FractionallySizedBox",
          "Diferentes tamanhos de Widgets"
        ],
        "Maneiras de testar seu App": [
          "Utilizando o console do Chrome",
          "Utilizando pacote Device Preview"
        ],
        "Null Safety": [
          "Introdução ao Null Safety",
          "Variáveis nulas e não nulas",
          "Utilizando operadores ? & ! na prática",
          "Lists & Maps",
          "Parâmetros nomeados - required",
          "Promover os tipos - type promotion",
          "Inicialização tardia - late",
          "Inicialização de variáveis não nulas"
        ],
        "Facebook Interface": [
          "Interface Facebook - O que irei aprender?",
          "Criando AppBar",
          "Área de postagem",
          "Exibindo imagem do Storie",
          "Exibindo foto e nome de usuário",
          "Listagem de postagens",
          "Exibindo detalhes da postagem",
          "Navegação com abas",
          "Barra de navegação responsiva",
          "Finalizando barra de navegação para telas maiores",
          "Página inicial responsiva",
          "Página inicial com colunas",
          "Lista de opções & Ajustes finais"
        ],
        "WhatsApp Web com Firebase": [
          "WhatsApp Web - O que irei aprender?",
          "Configurando o projeto web com o Firebase",
          "Criando interface de Login",
          "Autenticação de usuário",
          "Upload de imagem",
          "Salvando usuário & Configurando rotas",
          "Criando página inicial Mobile",
          "Listando contatos",
          "Criando interface de mensagens",
          "Enviando mensagens",
          "Listando mensagens",
          "Salvando e listando conversas - parte 1",
          "Salvando e listando conversas - parte 2",
          "Criando interface web",
          "Criando áreas laterais",
          "Selecionando conversa - parte 1",
          "Selecionando conversa - parte 2",
          "Adicionando ícones & Ajustes finais"
        ],
        "Hospedagem da aplicação": [
          "Hospedando com o Firebase Hosting"
        ],
        "Conteúdos Bônus": [
          "Dicas práticas para escrever um código limpo"
        ]
      },
      "requirements": [
        "Curso intermediário, para você que já tem conhecimentos de Dart e Flutter Mobile",
        "Windows (7 ou superior), Mac ou Linux com arquitetura 64 bits.",
        "Nenhum software pago é necessário.",
        "Computador com acesso à internet."
      ],
      "description": "Você quer desenvolver Apps para Android, IOS e Web em um único curso? Utilizando apenas um código? Se você respondeu sim para essas perguntas você está no curso certo!\nSeja bem-vindo(a) ao curso Flutter 2.0: Crie aplicações responsivas para a Web! o Flutter é o novo Framework para desenvolvimento de apps Android e iOS criado pela gigante Google e na versão 2.0 é possível desenvolver aplicações para a web, utilizando uma única base de códigos.\nO curso é focado no desenvolvimento de aplicações Web com o Flutter, mas todas as aplicações criadas também irão funcionar para Android e IOS.\nCom o Flutter não é necessário aprender a linguagem de programação Java/Kotlin para desenvolvimento Android e Swift/Objective-C para desenvolvimento IOS, você irá aprender uma única linguagem de programação (Dart) e terá um App nativo para Android e IOS e a aplicação Web, parece mentira né? Mas essa é uma revolução que o Google está trazendo para o desenvolvimento de Apps.\nProjetos criados no curso:\nLoja virtual: crie do zero uma interface responsiva de uma loja virtual com toda a applicação se ajustando muito bem de celulares até monitores maiores.\nFacebook: já pensou recriar a interface desse famoso App? nós iremos recriar alguns dos recursos deixando a interface muito parecida com a original e já fazendo os ajustes para deixar ela funcional em celulares, tablets e monitores maiores.\nWhatsApp Web: esse com certeza é umas das aplicações web mais utilizadas e nós iremos recriar alguns dos seus recursos utilizando o Firebase, iremos adicionar autenticação de usuário com email e senha, upload de imagem para o Storage do Firebase, operações básicas com o banco de dados Firestore e muito mais!\nResumão do curso:\nVeja resumo de fundamentos da linguagem Dart\nAprenda sobre Design Responsivo com Flutter Web: Tamanhos de telas, MediaQuery, linhas e colunas responsivas, OrientatioBuilder, LayoutBuilder, AutoSizeText\nCrie a interface de uma loja virtual completa utilizando os conceitos ensinados em Design Responsivo\nVeja maneiras de visualizar seu App em diferentes tamanhos de telas utilizando: Console do Chrome, Deview Preview e Emuladores\nAprenda o novo recurso Null Safety para deixar suas aplicações ainda mais seguras: Variáveis nulas e não nulas, novos operadores, Listas, mapas, parâmetros, promover os tipos (Type Promotion), Inicialização posterior (late), tipos de inicialização de variáveis e atributos\nCrie do zero alguns dos recursos da interface do Facebook para Android, iOS e Web.\nCrie do zero uma versão do WhatsApp Web com visualização em celular, tablet e web, usando o Firebase para fazer autenticação, upload de imagem e banco de dados.\nIMPORTANTE: esse é um curso intermediário, é importante que você já tenha feito um outro curso de Flutter, eu tenho um curso no meu perfil para iniciante com o Flutter chamado \"Desenvolvimento Android e IOS com Flutter 2021 -Crie 15 Apps\".\nSatisfação garantida ou seu dinheiro de volta\n\"E se eu não gostar do curso?” A Udemy oferece uma garantia de reembolso, essa é mais uma garantia de qualidade e um incentivo a mais para você começar já! Após a compra você terá 30 dias para testar o curso, e se não gostar, basta solicitar o reembolso.\nJunte-se a mais de 260 mil alunos que já fizeram e aprovaram meus outros cursos! Comece agora mesmo esse curso de desenvolvimento com o Flutter!",
      "target_audience": [
        "Você que já sabe Flutter para Mobile e quer aprender os novos recursos do Flutter Web"
      ]
    },
    {
      "title": "Android O: crea App con Java e Kotlin - La guida completa",
      "url": "https://www.udemy.com/course/android-java-kotlin/",
      "bio": "L'unico corso in italiano che ti insegnerà a sviluppare App Android utilizzando Java e Kotlin!",
      "objectives": [
        "I componenti di Android: Activity, Intent, Fragment, Service, Widget, ecc...",
        "I componenti delle interfacce utente (layout, input, button, menu, ecc...)",
        "Utilizzare i sistemi di notifica (Notification e Toast)",
        "Creare e gestire i dati mediante il database SQLite e l'API Room",
        "Utilizzare le Web Application nelle app",
        "Pubblicare la tua app su Play Store",
        "Gli elementi e la sintassi del linguaggio Kotlin e l'interoperabilità con Java",
        "Creare app Android con Kotlin"
      ],
      "course_content": {
        "Introduzione ad Android": [
          "Cos’è Android",
          "Quali linguaggi usare per scrivere un'app Android",
          "Componenti di un'App",
          "Architettura di Android",
          "Mettiti alla prova"
        ],
        "Bonus - Se non conosci Java ecco una panoramica sul linguaggio": [
          "JRE - JDK - Ambienti di sviluppo",
          "Come installare il JDK su Windows",
          "Opzionale - installare Eclipse su Windows - Se volete potete usare IntelliJ Idea",
          "Cosa sono le variabili e i tipi di dato",
          "I tipi di dato primitivi: byte, short, int, long, float, double, char, boolean",
          "La classe String",
          "Gli operatori",
          "Cosa sono i metodi e come utilizzare i varargs",
          "I modificatori: public, private, protected, default, final, static",
          "Sintassi",
          "I packages",
          "Naming e Code convention",
          "I comandi condizionali: if-else, switch-case",
          "Il comando di ritorno di valori: return",
          "I comandi di ciclo: while, do - while, for",
          "I comandi di interruzione di ciclo: break, continue",
          "Concetto di classe ed oggetto",
          "Attributi e metodi di una classe",
          "I costruttori di una classe",
          "Accesso agli attributi di una classe",
          "Le interfacce Collection e List",
          "Gli array",
          "La classe ArrayList",
          "Ereditarietà",
          "Polimorfismo",
          "Incapsulamento",
          "Applicazione pratica dei concetti di Ereditarietà, Incapsulamento e Polimorfismo",
          "Gestione delle eccezioni"
        ],
        "L'IDE ufficiale per sviluppare app Android: Android studio": [
          "Installazione",
          "Crea la tua prima App Android",
          "Configurare gli emulatori dei device su Android studio per testare le app",
          "Gli step da seguire per sviluppare un'app",
          "Il file AndroidManifest",
          "Come gestire i progetti in Android studio",
          "Come impostare il proprio smartphone in modalità sviluppatore",
          "Mettiti alla prova"
        ],
        "Device Compatibility": [
          "Cosa si intende per compatibilità",
          "Limitare l’uso di un'app per motivi legali o aziendali",
          "Mettiti alla prova"
        ],
        "System Permissions": [
          "La gestione dei Permissions",
          "Impostazione automatica dei permessi",
          "Visualizzare i permessi impostati su un'app",
          "Permission groups",
          "Mettiti alla prova"
        ],
        "Activities": [
          "Cosa sono le Activity e come si configurano",
          "Creiamo le Activity della nostra app",
          "Il ciclo di vita di un’Activity - Parte I",
          "Il ciclo di vita di un’Activity - Parte II",
          "Navigare tra Activity - Parte I",
          "Navigare tra Activity - Parte II",
          "Quando si verifica il cambiamento di stato di un'Activity",
          "Tasks and Back Stack",
          "Mettiti alla prova"
        ],
        "Fragments": [
          "Cosa sono i Fragment",
          "Il ciclo di vita di un Fragment",
          "Creare e gestire i Fragment - Parte I",
          "Creare e gestire i Fragment - Parte II",
          "Mettiti alla prova"
        ],
        "Intent ed Intent Filter": [
          "Gli Intent",
          "Come utilizzare gli Intent",
          "Come utilizzare gli Intent - Avviare una chiamata",
          "Come utilizzare gli Intent - Comporre un SMS",
          "Come utilizzare gli Intent - Creare un Alarm",
          "Come utilizzare gli Intent - Aggiungere un evento al calendario",
          "Come utilizzare gli Intent - Selezionare un contatto dalla rubrica",
          "Come utilizzare gli Intent - Comporre un’email",
          "Come utilizzare gli Intent - Visualizzare una location sulla mappa",
          "Come utilizzare gli Intent - Aprire un sito web",
          "Mettiti alla prova"
        ],
        "App Widgets": [
          "Introduzione ai widget",
          "Come si crea un widget",
          "Mettiti alla prova"
        ],
        "Le risorse di un'App - (animazioni, colori, immagini, layout, ecc...)": [
          "Cosa sono le risorse di un'app",
          "Tipi di risorse - Parte I: Tween Animation Resources",
          "Tipi di risorse - Parte II: Frame Animation Resources",
          "Tipi di risorse - Parte III: Color State List Resource",
          "Tipi di risorse - Parte IV: Drawable, String, Font Resources",
          "Come organizzare le risorse nell’app",
          "Come accedere alle risorse",
          "Mettiti alla prova"
        ]
      },
      "requirements": [
        "Familiarità nell'utilizzo dei computer",
        "Conoscenza di Java",
        "Per poter seguire il corso è necessario avere a disposizione un PC",
        "Un PC (Windows o Linux) o un Mac con almeno 4GB di RAM e 10 GB di spazio HD libero",
        "Una connessione ad internet (preferibilmente non a consumo)"
      ],
      "description": "Ciao e benvenuto al corso \"Android O: crea App con Java e Kotlin - La guida completa\".\nQuesto corso ti insegnerà a realizzare App Android partendo da zero, pertanto puoi seguirlo anche se non hai mai sviluppato App Android e se non conosci Kotlin.\nL'unico requisito tecnico richiesto è, infatti, la conoscenza del linguaggio di programmazione Java. Se non conosci Java, ti consiglio il mio corso \"Java Developer - La guida completa\".\n\n\nIl corso è diviso in due parti:\n\nnella prima parte vengono affrontati tutti gli aspetti di Android, compresi gli step necessari per pubblicare un'app su Play Store:\nArchitettura di Android\nCome installare ed utilizzare l'IDE ufficiale per lo sviluppo di app Android: Android studio\nLa gestione dei permessi\nIntent ed Intent Filter per la gestione delle relazioni tra componenti (anche di altre app)\nActivity e Fragments per la creazione e gestione di interfacce utente\nCreazione dei Widgets\nCreazione delle risorse di un'app\nI componenti delle interfacce utente (layout, input, button, menu, ecc...)\nPersonalizzare lo stile grafico dell'app\nCome utilizzare SQLite per creare database per la tua app\nUtilizzare le Web Application nelle app\nPubblicare la tua app su Play Store\ne molto altro ancora!\n\n\nnella seconda parte vengono spiegati tutti gli aspetti del linguaggio di programmazione Kotlin, focalizzando l'attenzione sull'utilizzo di questo linguaggio per lo sviluppo di App Android\nCode convention\nCome commentare il codice Kotlin\nI tipi di dati\nPackages\nComandi condizionali e di ciclo: if, when, for, while\nI comandi di ritorno valori ed interruzione di ciclo: return, break, continue\nClassi ed oggetti\nEreditarietà\nAttributi di una classe\nI modificatori di accesso\nInterfacce\nFunzioni\nNull safety\nGestione delle eccezioni\nJava interoperability\nCreare un'App Android con Kotlin\nOgni argomento viene trattato in maniera chiara e semplice, con esempi pratici che ti consentiranno di comprendere tutti i concetti, anche quelli più complessi.\n\nAl termine del corso è possibile scaricare il Certificato di fine corso.\n\n\n\nConoscere bene Android è fondamentale se vuoi lavorare nel settore dello sviluppo software: oltre l'80% degli smartphone utilizza Android ed Android è anche su orologi, occhiali, TV, IoT, ecc...",
      "target_audience": [
        "Chi non ha mai sviluppato App",
        "Sviluppatori Java che vogliono imparare a scrivere App Android",
        "Sviluppatori di App Android che vogliono imparare a scrivere App con Kotlin",
        "Chi vuole approfondire Android in tutte le sue sfaccettature",
        "Sviluppatori web che vogliono integrare una web application in un'App Android"
      ]
    },
    {
      "title": "React Native: React Native IOS & Android Uygulama Geliştirme",
      "url": "https://www.udemy.com/course/react-native-react-native-ios-android-uygulama-gelistirme/",
      "bio": "React Native ile IOS & Android uygulama geliştirip React uygulamalı örneklerle ReactNative master ol. React Native 2022",
      "objectives": [
        "React Native",
        "React Native`de gerekli kurulumları",
        "React Native kullanarak native iOS ve Android mobil uygulama yapabileceksiniz",
        "Windows için React Native Kurulumu",
        "Mac için React Native Kurulumu",
        "Bilgisayarda Android ve Iphone simülatörü nasıl çalıştırılır, React ile uygulama hazırlıkları nasıl yapılır,",
        "JSX syntax ve açıklamaları",
        "ES6 syntax",
        "React Native içeriği simülatörde görüntüleme",
        "React Native ile şekil vermek ve flexbox sistemini anlayacaksınız",
        "Uzaktaki bir API'a HTTP isteği göndermeyi öğreneceksiniz",
        "Uygulama içinden mobil cihazdaki farklı bir uygulamayı açmayı öğreneceksiniz",
        "Hem Android hem de IOS işletim sistemine sahip telefonlar için uygulama geliştirmeyi adım adım öğrenip uygulayabileceksiniz",
        "React Native'i öğrenmek, mobil uygulamalar geliştirme konusunda deneyim kazanmak için mükemmel bir yoldur.",
        "Udemy'de React Native çerçevesinin her seviyesine ulaşmanızı sağlayan en yüksek puan alan React Native kursları bulunmaktadır.",
        "Böylece daha iyi uygulamaları daha hızlı yazmaya başlayabilirsiniz.",
        "React Native, aynı anda birden fazla platformda JavaScript'te uygulamalar yazmalarını sağlayarak iOS ve Android için ayrı kod yazma ihtiyacını ortadan kaldırır",
        "React Native ayrıca, çerçeveyi verimliliği düşünen geliştiriciler arasında favori kılan \"hot reloading\" (sıcak yeniden yükleme) gibi özellikler de içeriyor.",
        "React js hakkında temel bilgileri edinin.",
        "Reactjs",
        "Reactnative"
      ],
      "course_content": {
        "React Native Kursunda Neler Öğreneceksiniz?": [
          "React Native Kursunda Bakın Neler Öğreneceksiniz?",
          "Takıldığınız Noktalarda Soru Sormaktan Çekinmeyin",
          "React Native Hakkında Sık Sorulan Sorular"
        ],
        "Windows İçin React Native Kurulumu": [
          "Önemli Not",
          "React Native Windows Kurulumunda İhtiyaç Duyduğumuz Araçlar",
          "Windows için React Native Kurulumu",
          "Android Studio'da Simülatör Nasıl başlatılır?",
          "Android Emulator Kurulum Checklist",
          "EXPO-CLI Kurulum React-Native Uygulamasını Gerçek Bir Cihaz İle Test"
        ],
        "MacOs İçin React Native Kurulumu": [
          "React Native MacOS Kurulumunda İhtiyaç Duyduğumuz Araçlar",
          "MacOS İçin React Native Kurulumu",
          "Simülatörü Başlatmak",
          "MAC IOS Emulator Kurulum Checklist",
          "EXPO-CLI Kurulum React-Native Uygulamasını Gerçek Bir Cihaz İle Test"
        ],
        "React Native ve JSX": [
          "Bir Uygulamayı Nasıl Başlatırız?",
          "Simülatörde İçerik Görmek",
          "React ve React Native'e Neden İhtiyaç Duyarız?",
          "Es6 Syntax (Let, Const, Var)",
          "İlk Komponent",
          "Bir Komponenti Cihazda Nasıl Gösteririz?",
          "İlk Uygulamamız Nasıl Oluşacak",
          "Bir Komponenti Root Komponente Nasıl Bağlarız?",
          "Bir Komponenti Başka Bir Komponente Nasıl Import Ederiz?"
        ],
        "React Native İçin Styling": [
          "JSX ile Styling ( Şekil Verme )",
          "View'lerin Gösterilişi",
          "Header Komponenti Styling",
          "React Props",
          "Kodlarımızı Props Sistemi ile Nasıl Tekrar Kullanabiliriz?",
          "Quiz"
        ],
        "React Native ile API Request": [
          "Kullanıcıya Bir Listeyi Nasıl Gösteririz?",
          "List Komponenti",
          "Functional Komponent ile Class Based Komponent Farklari Nelerdir?"
        ],
        "Lifecycle Methodları": [
          "Lifecycle Methodlarına Ne Zaman İhtiyaç Duyarız?",
          "Lifecycle Methodları",
          "Axios ile HTTP İsteği Gönderme"
        ],
        "React Native ve State": [
          "State Nedir ve State Nasıl Başlatılır ?",
          "State Kullanımı",
          "Bir Komponent'in State ile Döngüsü",
          "List Komponenti",
          "ListItem Komponenti",
          "Reusable ( Tekrar Kullanılabilir ) Komponentler",
          "ListItems İçin Şık Görünümlü Komponentler",
          "Props.Children Kullanımı",
          "Item Section",
          "Quiz"
        ],
        "Flexbox ile Tasarım": [
          "Flex Box'a Giriş",
          "Section Header Komponenti",
          "Bir Resmi Nasıl Gösteririz?",
          "Scrollable İçerik",
          "React Native ile Kullanıcı Etkileşimi",
          "Event Handlers",
          "Uygulamamız Üzerinden Cihazdaki Başka Bir Uygulamaya Ulaşmak"
        ],
        "Router Expo CLI Project": [
          "Router Expo Cli Project",
          "Expo project icerik gorme",
          "Router nedir ve nasil kurulur?",
          "Router projeye nasil dahil edilir?"
        ]
      },
      "requirements": [
        "JavaScript + HTML + CSS hakkında temel bilgi sahibi olunmalı",
        "Temel ES6 bilgisi faydalı olur ancak şart değil",
        "Eğitimi başarılı bir şekilde tamamlamak için istek ve motivasyon",
        "Çalışan bir bilgisayarınızın ve internet bağlantınızın olması yeterli",
        "Kurs boyunca kullanılacak olan programlar ücretsizdir",
        "Tek ihtiyacınız olan bilgisayarınız ve sizsiniz! Haydi hemen kayıt olun ve öğrenmeye başlayın",
        "React Native, React öğrenme isteği"
      ],
      "description": "Merhabalar;\nReact Native: React Native IOS & Android Uygulama Geliştirme kursuna hoşgeldiniz.\n\nReact Native ile IOS & Android uygulama geliştirip React uygulamalı örneklerle ReactNative master olun. React Native 2022\n\nReact Native'i öğrenmek, mobil uygulamalar geliştirme konusunda deneyim kazanmak için mükemmel bir yoldur. Udemy'de React Native çerçevesinin her seviyesine ulaşmanızı sağlayan en yüksek puan alan React Native kursları bulunmaktadır. Böylece daha iyi uygulamaları daha hızlı yazmaya başlayabilirsiniz.\n\nReact Native, programcıların aynı anda birden fazla platformda JavaScript'te gerçek yerel uygulamalar yazmalarını sağlayarak iOS ve Android için ayrı kod yazma ihtiyacını ortadan kaldırıyor. React Native ayrıca, çerçeveyi verimliliği düşünen geliştiriciler arasında favori kılan \"hot reloading\" (sıcak yeniden yükleme) gibi özellikler de içeriyor.\n\nReact-Native, React ekibi tarafından piyasaya sürülen ve şu anda hem Android hem de IOS uygulamalar oluşturmak için yaygın bir şekilde kullanılan bir kütüphanedir. IOS ve Android gibi mobil uygulamalar için gerekli olan native geliştiricileri, JavaScript ile kullanıcı ara yüzü oluşturmak için kullanılan en iyi kütüphanelerden biri olan React ile birleştirir.\nSıfırdan öğrenin\nKursumuz yeni başlayanlar başta olmak üzere aktif olarak çalışan ve refresher'a ihtiyacı olanları hedeflemektedir. Bu kurs ile Java ve Kotlin gibi dilleri öğrenmeden native uygulama geliştirebilirsiniz. Bu kurs sizi başlangıç seviyelerinden alıp ileri seviyeye getirmeyi hedefliyor. react native kursumuz ile hem Android hem de IOS işletim sistemine sahip telefonlar için uygulama geliştirmeyi adım adım öğrenip uygulayabileceksiniz. Uygulamalı örneklerle öğrenirken hangi eylemin neden ve niçin yapıldığının açıklamalarını da bu eğitimde buluyor olacaksınız.\n\nModern web uygulamaları oluşturmak için en iyi seçeneklerden biri React JS' dir. Eğer sizde mobil development değilde web development alanına eğilmek istiyorsanız Reactjs ile başlamak sizin için oldukça faydalı olacaktır.\nReact Native'i ücretsiz araçlar kullanarak öğreneceksiniz\nBu kursta ücretsiz araç ve platform kullanmanın önemini göstermeye çalıştık, bu yüzden herhangi bir araç veya uygulama satın almanıza gerek olmayacak. Kursumuzda hem MAC hem de Windows bilgisayarlarda mobil uygulama yapabilmek için gerekli kurulumları detaylı bir şekilde anlatarak başlayacağız. MAC ya da Windows bilgisayarınızda nasıl Android veya Iphone emülatör çalıştırabileceğinizi öğreneceksiniz. Daha sonra React kütüphanesinin temel özelliklerini öğreneceğiz. JSX, 'props sistemi' ve 'state sistemi' kursumuzun sonunda sizler için çok net olacak. Kursumuz boyunca güzel görünümlü reusable (tekrar kullanılabilir) komponentler oluşturacağız. Bu komponentleri sizler de kendi mobil uygulamalarınızı geliştirirken doğrudan kullanabiliyor olacaksınız.\nKurs boyunca size karmaşık gelebilecek tüm konuları olabildiğince basit ve detaylı bir şekilde anlatmaya dikkat ettik. Anlatılanları daha iyi anlayabilmeniz için bazı şemalar kullandık ve aynı zamanda kursumuz boyunca şık bir mobil uygulama oluşturduk.\nKursu tamamladığınızda;\nReact ve React Native kütüphanelerinin temellerini,\nReactjs kütüphanesini hakkında kısmen bilgi,\nBir mobil uygulamadan nasıl bir HTTP isteği gönderebileceğinizi,\nFlex-box sistemini nasıl kullanacağınızı,\nNasıl reusable komponentler yapabileceğinizi,\nCihazlardaki başka bir uygulamayı kendi uygulamanız ile nasıl açabileceğinizi biliyor olacak ve\nKendi mobil uygulamanızı yapabiliyor olacaksınız\nReact Js hakkında genel bir fikrimiz olacaktır.\nNeden bizim OAK Academy'nin kurslarına katılmalısınız?\nBu konuda cevabımız basit: Kursumuzun kalitesi.\nLondra merkezli bir online eğitim şirketi olan OAK Academy Udemy platformu üzerinde özelikle IT, Software, Design, Development alanlarında Türkçe, İngilizce, Portekizce, İspanyolca gibi bir çok dilde eğitim vermektedir. Şu ana kadar 1000+ saatlik video eğitim içeriği ile Udemy'de yer alan OAK Academy, bir yandan Udemy'de sürekli yeni kurslar yayınlayarak eğitim sayısını artırırken aynı zamanda yayındaki tüm kurslarını da güncelleyerek öğrencilerini en son yeniliklerden haberdar etmektedir.\nKaydolduğunuzda, OAK Akademi'nin deneyimli eğitmenlerinin konuya hakimiyetini ve aynı zamanda tecrübelerini aktarmadaki uzmanlıklarını hissedeceksiniz. Öğrencilerin eğitmenlerimize gönderdiği sorulara, en geç 48 saat içerisinde mentorlerimiz tarafından yanıt verilmektedir.\nGüncel İçerik\nTeknolojinin hızlı bir şekilde nasıl geliştiği sır değil. Her gün yeni araçlar piyasaya sürülüyor, React Native kendini güncelliyor ve en son bilgilerden haberdar olmak çok önemli. Bu kursla her zaman en yeni trendleri takip etme şansına sahip olacaksın.\nVideo ve Üretim Kalitesi\nTüm içeriklerimizı size en iyi öğrenme deneyimini sunmak için yüksek kaliteli video / ses olarak üretiyoruz.\nKursiyerlerimiz,\nSoru&Cevap bölümünde hızlı cevaplar alabilecek,\nKursu bitiren tüm kursiyerlerimiz kurs bitirme sertifikalarını Udemy'den indirebilecek\nDaha fazla zaman kaybetmeyin ve React Native IOS & Android Uygulama Geliştirme kursumuza siz de kayıt olun!\nKursta görüşmek üzere!",
      "target_audience": [
        "React Native öğrenmek isteyenler",
        "React ve React-Native kütüphanelerini öğrenmek isteyenler",
        "Hem Android hem de IOS işletim sistemine sahip telefonlar için uygulama geliştirmek isteyenler",
        "React Native ile Java ve Kotlin gibi dilleri öğrenmeden native uygulama geliştirebilirsiniz",
        "Programlama öğrenmek isteyenler"
      ]
    },
    {
      "title": "Ionic 4/5 - Créer une application de shopping [2020]",
      "url": "https://www.udemy.com/course/ionic-creer-une-application-de-shopping/",
      "bio": "Application mobile hybride pour IOS et Android avec Ionic 4/5 basé sur Angular",
      "objectives": [
        "Créer des applications mobiles hybrides à la fois pour Android et IOS",
        "Créer une application de shopping du même style que \"Vinted\".",
        "Maitriser les plugins et les Composants Ionic 4",
        "Persister des données dans une Base de données MongoDB",
        "Créer une API REST grâce à Loopback pour faire communiquer Ionic 4 avec MongoDB"
      ],
      "course_content": {
        "Introduction": [
          "Présentation Ionic",
          "Présentation Loopback",
          "Structure de la formation",
          "Les bases de TypScript Angular et Ionic",
          "Installer les outils necessaires",
          "Générer une Application Ionic"
        ],
        "[2020] Quelques Nouveautés Ionic 5": [
          "La Navigation",
          "Passer Des Données Pendant La Navigation",
          "Le Bouton Reculer",
          "Afficher Un menu"
        ],
        "[2020] Quelques Nouveautés de Loopback 4": [
          "Installation",
          "Générer Un Modèle",
          "Génerer un datasource",
          "Générer Un Repository",
          "Générer Un Controller",
          "Ajouter Des Relations",
          "Tester Notre API"
        ],
        "Loopback 3": [
          "Introduction",
          "Les Modèles ( principes )",
          "Les Modèles ( exemple )",
          "Les Relations ( principes )",
          "Les Relations ( exemple )",
          "Générer une Application Loopback",
          "Les Modèles ( pratique )",
          "Lancer l'API et l'explorer",
          "Lancer MongoDB",
          "Connecter Loopback et MongoDB",
          "Connecter nos modèles à notre datasource",
          "Introduction à MongoDB",
          "CRUD operations avec Robo 3T",
          "Les Relations ( pratique ) PARTIE 1",
          "Les Relations ( pratique ) PARTIE 2",
          "loopback-component-storage et conteneur",
          "Installer Postman",
          "Upload de fichiers avec Postman",
          "Uploader des fichiers et les stocker dans MongoDB",
          "Télécharger ( afficher ) un fichier uploadé"
        ],
        "Loopback et Ionic 4": [
          "Introduction",
          "Liaison entre Loopback et Ionic",
          "Lire des documents avec Ionic via Loopback",
          "Insérer des documents avec Ionic via Loopback",
          "Modifier des documents avec Ionic via Loopback",
          "Supprimer des documents avec Ionic via Loopback"
        ],
        "La Page Intro": [
          "Introduction",
          "ion-slides ( principes et exemple )",
          "ion-slides ( html et css ) PARTIE 1",
          "ion-slides ( html et css ) PARTIE 2",
          "Voyage de l'utilisateur dans l'Application",
          "Créer une Application Facebook Developper",
          "Connection avec Facebook",
          "Lancer l'Application sur un téléphone",
          "Installer AccountKitPlugin",
          "Connection par numéro de téléphone PARTIE 1",
          "Connection par numéro de téléphone PARTIE 2",
          "Modèle et Interface Utilisateur",
          "Installation du plugin Native Storage",
          "Sauvegarder l'utilisateur",
          "async await",
          "Connection avec Facebook ( fin )",
          "Navigation ( principes et exemple )",
          "Navigation ( pratique )",
          "Challenge de la section",
          "Masquer la page Intro"
        ],
        "Le Menu": [
          "Introduction",
          "Afficher et cacher le menu",
          "Afficher une liste dans le menu",
          "Ajouter du style à notre liste",
          "Afficher toutes les catégories disponibles",
          "Mon compte ( dans le menu )",
          "Navigation à partir du menu PARTIE 1",
          "Navigation à partir du menu PARTIE 2"
        ],
        "La page Home": [
          "Introduction",
          "Modèle et Interface Article",
          "Ajouter 2 articles à MongoDB",
          "Afficher une liste d'articles",
          "Afficher correctement les images",
          "Afficher les étoiles",
          "ion-refresher",
          "Visionner les images avec Photo Viewer",
          "Afficher les details d'un article",
          "Filtrer les articles"
        ],
        "La page Category": [
          "Introduction",
          "Filtrer une requete Loopback",
          "Afficher les articles par catégorie",
          "Corriger les erreurs",
          "Finir le design de la page"
        ],
        "La page Product Detail": [
          "Introduction",
          "Afficher les details d'un article PARTIE 1",
          "Afficher les details d'un article PARTIE 2",
          "Finir le design de la page",
          "Photo Viewer",
          "ion-footer et header",
          "Laisser une note à un article PARTIE 1",
          "Laisser une note à un article PARTIE 2"
        ]
      },
      "requirements": [
        "Les bases de HTML, CSS et Javascript",
        "Les bases de TypeScript et Angular sont importantes (Les ressources nécessaires vous seront fournis)",
        "Savoir installer des logiciels"
      ],
      "description": "Etes-vous audacieux/audacieuse ?\nActuellement dans le monde d’Internet, il y a une application mobile pour presque tout : pour les Soins de Santé, pour les Rencontres Amoureuses, Shopping etc. Le développement d’Application Mobile n’est plus le même qu’auparavant. Le processus comprenait jadis le design, les fonctionnalités, le coût et le temps nécessaires pour construire l’Application pour chaque plateforme. Il fallait à la fois connaitre Java pour développer pour Android et aussi Swift pour IOS. Chose qui rendait la tâche difficile à un seul programmeur.\nJ’ai commencé par la programmation web (HTML, CSS, JavaScript, Angular) et très vite j’ai eu envie de créer mon application mobile. Et l’idée d’apprendre deux langages différents pour 2 plateformes différentes ne me réjouissait pas. C’est alors que j’ai appris l’existence de Ionic.\nIonic est un Framework open source, basé sur Angular, qui permet de développer en HTML, CSS & JavaScript des Applications mobiles multi-plateforme ( à la fois pour Android & IOS ) pour le même code source.\nVoilà pourquoi j’ai créé cette formation : Pour vous permettre de créer vos applications mobiles grâce aux connaissances que vous avez déjà (la programmation web).\nJe suis développeur web, j’adore Javascript et ses Frameworks / librairies. Je maîtrise notamment JQuery, TypeScript, Angular, Ionic, React, React Native, Meteor, Electron, NodeJs etc. Et j’ai appris avec expérience qu’il est plus facile d’apprendre à programmer grâce à un projet qui nous plait. Voilà pourquoi ce cours est orienté projet. Nous allons apprendre à utiliser Ionic en créant une Application de shopping du même style que « Vinted ». Et en plus comme bonus à la clé, je vous offre 2 Cadeaux : Une formation introductive à Git et un Ebook gratuit qui résumera toute notre formation (code compris).\nGrace à Udemy, cette formation est garantie satisfait ou remboursé pendant 30 jours et cela sans aucune conditions. Si le cours ne vous plait pas, c’est simple, on vous rembourse. Alors inscrivez-vous Maintenant.\nCette formation vous permettra de :\nDe créer une application de shopping qui permettra à l'utilisateur de vendre des articles et d'entrer en contact avec ceux qui vendent pour acheter.\nDe maîtriser les composants d’Ionic 4 tels que ActionSheetController, ToastController, LoadingController, Pull Refresh etc.\nDe maîtriser les plugins d’Ionic 4 tels que Camera, ImagePicker, DeepLinks, File Transfer, Social Sharing etc.\nDe persister des données dans MongoDB à l’aide de Loopback (framework Node.js).\nJ’ai eu la chance, dès mes débuts en développement web, d’apprendre l’existence d’application mobiles hybrides.\nAlors n’attendez plus, cliquez sur le bouton et inscrivez vous maintenant et on se retrouve de l’autre coté pour commencer. Bienvenue dans cette formation Ionic 4.",
      "target_audience": [
        "A tout développeur web qui veut utiliser les technologies du web (HTML, CSS et Javascript) pour créer des applications mobiles."
      ]
    },
    {
      "title": "Android Mobil Uygulama Geliştirme Eğitimi | Java | 2025",
      "url": "https://www.udemy.com/course/android-mobil-uygulama-gelistirme-egitimi-java/",
      "bio": "Profesyonel ve sürekli güncellenen eğitim içeriği ile temel seviyeden ileri seviyeye Android mobil uygulama geliştirme.",
      "objectives": [
        "Java diline hakim olarak programlama yapabileceksiniz.",
        "Android programlama dünyasının detaylarına hakim olacaksınız.",
        "Tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.",
        "Uygulama mimarisi olan MVVM ile profesyonel uygulamalar geliştirebileceksiniz.",
        "Android için en güncel teknolojileri öğrenebileceksiniz.",
        "Aklınıza gelebilecek olan tüm fikirlerinizi mobil uygulamaya dönüştürebileceksiniz.",
        "Geliştirdiğiniz uygulamanızı Google Play gibi platformlar ile birçok kişiye ulaştırabileceksiniz."
      ],
      "course_content": {
        "JAVA Giriş": [
          "Eğitim Tanıtımı",
          "Java Giriş",
          "Android Studio Kurulum ve İlk Proje Oluşturma",
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Çalıştırma Ortamı Tanıtımı ve İlk Programın Çalıştırılması",
          "Main Metod Sorunu Çözümü - Android Studio 3.6",
          "Android Studio Main Metod Sorunu - Alternatif Çözüm",
          "Bir Projenin Android Studio İçerisinde Açılması",
          "Android Studio 4.0 Arayüz Güncellemesi Bilgilendirme",
          "Güncelleme - Android Studio Arctic Fox 2020.3.1 Arayüz Değişimi",
          "Güncelleme - Android Studio 4.2 Proje Oluşturma",
          "Güncelleme - Android Studio Ladybug Feature Drop Yeni Proje Oluşturma",
          "Güncelleme - Min Sdk Versiyonu Seçimi"
        ],
        "Değişken ve Veri Tipleri": [
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Değişken Oluşturma",
          "Değişken Oluşturma Çeşitleri",
          "Değişken Kapsamı",
          "Primitif Tip Kopyalama",
          "String kaçış karakterleri ve Yorum Satırları",
          "String Birleştirmesi",
          "Aritmetik Operatörler",
          "Tür Dönüşümü",
          "Konsol Girdisi",
          "Android Studio Hata Ayıklama - Java"
        ],
        "Standart Programlama Yapıları": [
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Karşılaştırma Operatörleri",
          "if Çalışması",
          "Örnek ( if ) : Alan Hesabı",
          "Örnek ( If Else If ) : Dört İşlem",
          "Switch Yapısı",
          "Örnek ( Switch ) : Dört İşlem",
          "Örnek ( Switch ) : Toolbar Menu",
          "For ve While",
          "Döngüler Sınır Değeri",
          "Örnek ( For ) : İsim Tekrarlama",
          "Örnek ( While ) : Veri İşleme",
          "Break ve Continue",
          "Örnek : Tek - Çift Sayı Bulma",
          "Diziler Giriş",
          "Diziler ve Döngüler",
          "Diziler Sıralama",
          "Örnek : Diziler Konsol Girdi",
          "Örnek ( Dizi ) : Karne Uygulaması",
          "Hazır Komutlar"
        ],
        "Nesne Tabanlı Programlama": [
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Giriş",
          "Araba Analojisi",
          "Otobüs Analojisi",
          "Metodlar",
          "Değişken Uzunlukta Parametreli Metod",
          "Metodların Aşırı Yüklenmesi ( Overloading )",
          "Constructor",
          "Referans Tipi Atama",
          "OPP Ödev Açıklama",
          "Ödev 1 : Sıcaklık Dönüşüm",
          "Ödev 2 : Çevre Hesabı",
          "Ödev 3 : Faktöriyel Hesabı",
          "Ödev 4 : Harf Sayısı Bulma",
          "Ödev 5 : İç Açı Toplamı",
          "Ödev 6 : Dilekçe Taslak",
          "Ödev 7 : Mesai Hesaplama",
          "Ödev 8 : İnternet Ücreti Hesaplama",
          "Paketler ve Import",
          "Access Modifier Erişim",
          "Kapsülleme SET - GET Metodu",
          "Static Değişken ve Metodlar",
          "Final Değişkenler ve Renkler Uygulaması",
          "Composition",
          "Örnek ( Composition ) : Veritabanı",
          "Kalıtım Giriş",
          "Kalıtım Constructor İlişkisi",
          "Kalıtım ( Override )",
          "Kalıtım ( Polymorphism )",
          "Kalıtım Nesne Dönüşümü ve Instance Of Metodu",
          "Örnek (Polymorphism - Casting - InstanceOf) : Okul",
          "Equals ve ToString Metodu",
          "Interface Kullanımı"
        ],
        "String Kullanımı": [
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "String Giriş",
          "String Metodlar",
          "Örnek : String Kelime Tersten Yaz"
        ],
        "Collections": [
          "Collections Giriş - ArrayList",
          "ArrayList Sort - Sıralatma",
          "HashSet",
          "HashMap",
          "Örnek ( ArrayList ) : Okul Kayıt",
          "ArrayList Ödevler Açıklama",
          "ArrayList Ödev 1",
          "ArrayList Ödev 2",
          "ArrayList Ödev 3",
          "ArrayList Ödev 4"
        ],
        "İleri Java": [
          "İleri Java Giriş - Try Catch",
          "Thread Giriş",
          "Thread ile Sınıf Metod Erişimi",
          "Örnek ( Thread Synchronized ) : Banka"
        ],
        "JAVA Input / Output": [
          "JAVA I:O Giriş FileReader ve FileWriter",
          "InputStreamReader ve OutputStreamWriter",
          "BufferedWriter ve BufferedReader"
        ],
        "Android Giriş": [
          "Android Giriş",
          "Android Studio Kurulum ve İlk Proje Oluşturma",
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Proje Oluşturma",
          "Emülatör Kurulumu",
          "Güncelleme - Emülatör Kurulumu ve Ayarları",
          "HAXM Kurulumu",
          "Emülatör Tanıtımı",
          "Android Studio Projesinin Emülatör Üzerinde Çalıştırılması",
          "Android Studio 3.6 Güncellemeleri",
          "Android Studio 4.0 Arayüz Güncellemesi Bilgilendirme",
          "Güncelleme : Android Studio 4.1 ile Proje Oluşturma",
          "Güncelleme - Min Sdk Versiyonu Seçimi",
          "Güncelleme - Kütüphane Kurulum Rehberi"
        ],
        "Android Studio Proje Dizini": [
          "Güncelleme - Yeni Proje Oluşturma - Android Studio Flamingo",
          "Proje Dizini ve Java Dizini",
          "Manifest Dosyası",
          "Res (Resource) Dosyası",
          "Layout Dosyası",
          "Drawable Dosyası",
          "Values Dosyası - Styles - Colors",
          "Strings Dosyası",
          "Gradle",
          "Android Profiler - Logcat",
          "Güncelleme - Logcat Kullanımı"
        ]
      },
      "requirements": [
        "Temel bilgisayar kullanma becerisine sahip olmak.",
        "Ortalama bir bilgisayara sahip olmak.",
        "Bilgisayarınıza programlama yapmak için Android Studio IDE yüklemek."
      ],
      "description": "Android platformunda mobil uygulama geliştirmek istiyorsanız doğru adrestesiniz.\nTemel seviyeden ileri seviyeye kadar Android uygulama geliştirme alanında gelişim sağlayacaksınız.\n2011 yılından beri 100lerce insana profesyonel bir şekilde Android uygulama geliştirme eğitimi veriyorum.\nSon yıllarda Android ve IOS eğitmeni olarak BT AKADEMİ , BİLGİNÇ İT ACADEMY VE BAŞARISOFT gibi kurumsal şirketlerde eğitmen olarak görev yapıyorum.\nÖğrencilerimizin tamamına yakını yüksek memnuniyet ile kursumuzu tamamladılar ve kendi alanlarında mobil uygulama geliştirici olarak çalışmaktalar.\nEğitim kurumlarında edindiğim tecrübe ile bu online kursu sizler için tasarladım.\nEğitim müfredatının verimli, profesyonel ve düzenli olması için çok zaman harcadım.\nRahatlıkla Eğitim müfredatı olarak en düzenli içeriğe sahip bu kurs diyebilirim.Bu eğitim içeriğinin yapısını ve kalitesini diğer kurslar ile kıyaslayabilirsiniz.\nKursun sonunda tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.\nBu kurs bir çok teknoloji ve yazılım araçları içermektedir. PHP, Firebase, Volley, Retrofit 2, MYSQL, SQLite ve bunun gibi bir çoğu.\nBu kurs uygulama mimarisi olan MVVM yapısını içermektedir.\nBunları bilmiyorsanız endişelenmenize gerek yok, Eğitimde en temel seviyeden ileri seviyeye kadar gelişim sağlayacaksınız.\nEğitim içeriği konu başlıkları ;\nJava Bölümü :\nJava Giriş\nDeğişkenler ve Veri Tipleri\nStandart Programlama Yapıları\nNesne Tabanlı Programlama\nString Yapısı\nCollections\nİleri Java\nJava I/O\nAndroid Bölümü :\nTemel Java Eğitimi\nAndroid Giriş\nAndroid Tasarım Giriş\nAndroid Çalışma Yapısı\nAndroid Widgets\nAndroid Kullanıcı Etkileşimi\nMaterial Design\nAndroid Depolama İşlemleri\nİleri Android\nAndroid İnternet Tabanlı İşlemler\nAndroid Lokasyon İşlemleri\nAlarm Manager Kullanımı\nAndroid Animasyon İşlemleri\nDrag and Drop\nAndroid Ticari İşlemler\nAndroid 2D Oyun Yapımı\nAndroid Test Kullanımı\nAndroid Test Kullanımı\nAndroid Uygulama Mimarisi - MVVM\nProgramlama Öğrenmek Neden Önemli ?\nHer geçen gün yazılım hayatımızın en derinine kadar iniyor.Hayatımızı kolaylaştırırken yazılımcılara büyük bir iş alanı açılıyor.Çok geç olmadan bu dijital çağa ayak uydurmalı ve yazılım sektöründe yer almalısınız.Bu dijitalleşen çağda ortalama bir bilgisayar ile kendinize yeni bir iş fırsatı yaratabilirsiniz.Özellikle mobil uygulama geliştirme sayesinde tek başınıza istediğiniz her yerden projeler geliştirebilirsiniz.Hangi meslek ve eğitimden olduğunuz yazılımcı olmak için önemsizdir.Her yaşta bu beceriyi kazanabilirsiniz.\nBir eğitimci olarak hazırladığım eğitim müfredatı ile profesyonel seviyeye gelmek sizin elinizde.Tek yapmanız gereken zamanızı ayırarak geleceğinizi değiştirecek yazılım becerisini kazanmak için çabalamak.\nGelin birlikte bu yola çıkalım ve size değer katalım…\n\n\nBaşarılar dilerim.\n\n\nEğitimi incelediğiniz için teşekkürler…",
      "target_audience": [
        "Hangi meslekten olduğunuzun veya Hangi eğitimi aldığınızın yazılımcı olmak için önemi yoktur.",
        "Programlamaya ve teknolojiye ilginizin olması yeterlidir.",
        "Her yaşta bu beceriyi kazanabilirsiniz."
      ]
    },
    {
      "title": "Uygulama Örneği Üzerinden Orta Seviye Flutter Eğitimi (BETA)",
      "url": "https://www.udemy.com/course/uygulama-ornegi-uzerinden-orta-seviye-flutter-egitimi/",
      "bio": "Flutter orta ve kısmen ileri sayılabilecek birçok konuyu bu kursta uygulamalı olarak öğrenin",
      "objectives": [
        "Flutter ile oluşturduğunuz temelin üzerinde yeni konseptler öğreneceksiniz",
        "Örnek uygulamalarla bir çok flutter işlemini gerçekleştirebileceksiniz",
        "İnternet ortamındaki içerikleri kullanarak istediğiniz şekilde uygulama oluşturabileceksiniz"
      ],
      "course_content": {},
      "requirements": [
        "Başlangıç seviyesindeki flutter eğitimini almış olmanız gerekiyor"
      ],
      "description": "ABA Akademik Araştırmalar Derneği Mobil Uygulaması\nFlutter Carousel kullanımı\nDart kişisel class kullanımı ile verileri modelleme\nKişiselleştirilmiş Widget sayesinde kod miktarını azaltma\nInheritedWidget İle uygulamanın her yerinden erişilebilir işlemler ve veriler oluşturma\nDart Regex ile düzenli ifadeleri kullanma\nWeb Sitelerine Bot olarak bağlanıp veri alma ve verileri detaylı işleme\nGoogle haritalar kullanımı\nPuan Ver butonu ekleme\nPaylaş butonu ekleme\nDrawer Menu Kullanımı\nRotalarla çalışma\nSayfalar arası veri aktarımı\nFlutter WebView kullanımı\nHtml kodlarını WebView ile görüntüleme\nNative Splash ekran oluşturma\nABA Akademik Araştırmalar Derneği Mobil Uygulaması\nFlutter Carousel kullanımı\nDart kişisel class kullanımı ile verileri modelleme\nKişiselleştirilmiş Widget sayesinde kod miktarını azaltma\nInheritedWidget İle uygulamanın her yerinden erişilebilir işlemler ve veriler oluşturma\nDart Regex ile düzenli ifadeleri kullanma\nWeb Sitelerine Bot olarak bağlanıp veri alma ve verileri detaylı işleme\nGoogle haritalar kullanımı\nPuan Ver butonu ekleme\nPaylaş butonu ekleme\nDrawer Menu Kullanımı\nRotalarla çalışma\nSayfalar arası veri aktarımı\nFlutter WebView kullanımı\nHtml kodlarını WebView ile görüntüleme\nNative Splash ekran oluşturma\nABA Akademik Araştırmalar Derneği Mobil Uygulaması\nFlutter Carousel kullanımı\nDart kişisel class kullanımı ile verileri modelleme\nKişiselleştirilmiş Widget sayesinde kod miktarını azaltma\nInheritedWidget İle uygulamanın her yerinden erişilebilir işlemler ve veriler oluşturma\nDart Regex ile düzenli ifadeleri kullanma\nWeb Sitelerine Bot olarak bağlanıp veri alma ve verileri detaylı işleme\nGoogle haritalar kullanımı\nPuan Ver butonu ekleme\nPaylaş butonu ekleme\nDrawer Menu Kullanımı\nRotalarla çalışma\nSayfalar arası veri aktarımı\nFlutter WebView kullanımı\nHtml kodlarını WebView ile görüntüleme\nNative Splash ekran oluşturma\n\n\nTamamlanmamış Uygulama Parçaları\nSosyal Medya Hesapları İle Giriş Yapma\n=> google facebook ve twiitter hesaplarını kullanarak uygulamada yetkilendirme işlemlerini yapmış olacaksınız\nGiriş Ekranlarının Tasarımı\n=> temel tasarım işlemleri hakkında bilgi sahibi olacaksınız\nFlutter Widget BuildContext ve State Kavramları\n=> flutter uygulamasının yaşam döngüsü hakkında bilgi sahibi olacaksınız\nFirebase Auth Kullanımı\n=> uygulamanızda firebase auth ile yetkilendirme yapabileceksiniz\nFirebase Database Giriş ve Profile Sayfasının Oluşturulması\n=> firebase database kullanımı hakkında bilgi sahibi olacaksınız",
      "target_audience": [
        "Mobil yazılım dünyasında ilerlemek isteyen herkes"
      ]
    },
    {
      "title": "從零開始學 Dart 程式設計 (Flutter 先修班)",
      "url": "https://www.udemy.com/course/hkt-dart-basic/",
      "bio": "Flutter 先修班， 學習 Dart 程式語言最佳指南，Dart 程式語言基礎入門課程",
      "objectives": [
        "此課程為基礎入門課程，適合「初學入門者」。",
        "掌握 Dart 開發應用程式核心技能",
        "未來想使用 Flutter 開發自己的 Android 和 iOS 雙平台 APP 應用程式",
        "希望成為 Android 和 iOS 工程師",
        "熟悉 IntelliJ IDEA 開發工具"
      ],
      "course_content": {
        "Go 準備開始": [
          "安裝 Dart 開發環境",
          "建立第一個 Dart 專案"
        ],
        "Basic 基礎語法": [
          "單行、多行註解程式",
          "變數與常數",
          "數字與邏輯資料型態",
          "字串資料型態",
          "運算符號 (上)",
          "運算符號 (下)"
        ],
        "集合資料型態": [
          "List 集合資料型態",
          "Map 集合資料型態"
        ],
        "Condition 條件控制": [
          "if 條件控制",
          "switch 條件控制"
        ],
        "Loop 循環控制": [
          "for 循環控制",
          "while 循環控制",
          "跳轉語句： break、continue、return"
        ],
        "Method 方法": [
          "沒有帶任何參數的方法類型",
          "有返回資料類型的方法",
          "有參數資料的方法類型",
          "可選填參數資料的方法類型",
          "可選填的命名參數傳遞資料的方法類型",
          "練習題: 試寫一個平均風速判斷是否達到7級以上停班停課標準的方法"
        ],
        "OOP 物件導向": [
          "類別",
          "繼承 (1) - 繼承概念",
          "繼承 (2) - 繼承種類",
          "繼承 (3) - super 和 this 使用上的差異",
          "繼承 (4) - 多層繼承初始化順序",
          "抽象類別",
          "介面",
          "套件"
        ]
      },
      "requirements": [
        "由淺入深，循序漸進，無痛學習",
        "無需額外購買付費軟體",
        "使用電腦的初級能力",
        "需要一台 Mac、Linux 或 Windows 的電腦"
      ],
      "description": "此課程為基礎入門課程，適合「初學入門者」。\n若購買前沒看到此訊息，購買後覺得此課程不適合，三十天內接受無條件退款服務。\n\n\n課程說明\nDart 是由 Google 主導開發的程式語言，適用於多項平台上的應用程式。搭配 Flutter 開源跨平台軟體框架 (Framework)，可開發 Android、iOS APP 行動應用程式、Web 網頁服務、Windows、macOS、Linux 和下一世代神秘 Fuchsia 作業系統桌面應用程式。且具有相當高效率 120FPS 的渲染性能，豐富的UI元件，媲美 Native 原生效能體驗。著名的 Google AdWords 前端技術，即是使用 Dart 開發，Flutter 使用 Dart 程式語言，KT 建議學習與使用 Flutter 之前，能有 Dart 程式語言一定的認識與基礎程式概念。這麼多的優勢之下，KT 預估 Dart 程式語言將成為未來熱門的程式語言，學習者將能成為明日之星。\n這門課程完全適合初學者，無須任何編寫過程式碼經驗，我們將從零基礎開始介紹，編寫程式語言需具備的基礎知識。完全從零開始，初學者無痛上手，將會了解如何使用 Dart 程式語言，由淺入深，快速掌握開發 Dart 精髓與技巧。幫助您輕鬆快速建立 Dart 開發基礎，早日順利邁向成為專家級一流開發人才。\n網路自學 Dart 最常見的三大痛\n學習資訊東拼西湊，無法有系統很完整性的學習\n英文資料看得霧煞煞，一頭霧水\n觀念混淆，挫折感超重\n課程特色\n由淺入深，無痛學習 Dart 的程式開發技巧\n一次掌握 Dart 最常用的核心關鍵知識\n繁體中文教材，系統化的課綱編排，HKT (侯光燦) 講師影片教學",
      "target_audience": [
        "未來想使用 Flutter 開發 Android 和 iOS 雙平台應用程式"
      ]
    },
    {
      "title": "【初級~中級編】Swiftを使ってTinderのようなiPhoneアプリを開発しよう！【iOS】",
      "url": "https://www.udemy.com/course/swifttinder/",
      "bio": "Tinderアプリを作ることでリリースできるレベルのアプリを作り、その仕組みから学ぶことが出来ます。xcode9, swift4対応(xcodd8.3.3, swift3でも動作確認済み)",
      "objectives": [
        "iPhoneアプリでのAnimationの基本の習得",
        "TinderLikeなサービスの作成",
        "リリースできるオリジナルアプリの作成"
      ],
      "course_content": {
        "はじめに": [
          "はじめに"
        ],
        "スワイプ機能を実装して、ロジックから理解できるようにしよう！": [
          "UIの作成をしよう",
          "スワイプを検知する準備をしよう",
          "カードをスワイプに追随させよう",
          "カードが左右に飛んでいく処理を書こう(+クロージャの基礎)",
          "スワイプに合わせてカードの角度を調整しよう",
          "動作に合わせて画像を切り替えよう",
          "画像の色を変えよう"
        ],
        "Tinderアプリを作ろう": [
          "UIを作成しよう",
          "配列を理解しよう",
          "配列に要素を追加しよう",
          "カードをスワイプできるようにしよう",
          "関数を理解しよう",
          "カードを左右に飛ばそう",
          "複数のカードを切り替える処理を書こう",
          "情報を保存するための処理を書こう",
          "遷移先の画面を作成しよう",
          "画面を遷移させるメソッドについて学ぼう",
          "情報の受け渡し方について学ぼう",
          "TableViewを理解しよう",
          "TableViewのメソッドをマスターしよう",
          "Buttonスワイプ追加と今後の勉強について"
        ],
        "NG集(学習には全く関係ないです)": [
          "久々に録音してみたら、全然言葉が出てこない",
          "やっぱり言葉は出てこない",
          "対象のレベル？レベルの対象？",
          "ラスト20秒。。。",
          "ラスト45秒で救急車来てしまう"
        ]
      },
      "requirements": [
        "if文やInt型,String型などは知っている",
        "xcodeのダウンロード",
        "xcodeの初歩的な操作"
      ],
      "description": "if文やクロージャなどswiftの文法やxcodeの操作(効率的なショートカット含め)から始まり、実際のアプリで使えるようなアニメーションやデータの受け渡しの方法レベルまで解説していきます。\n文法説明だけの講座や、初級者向けのノンリッチなアプリを作るだけでは物足りない方のために作成させていただきました。\n実際の文法をどうやって応用するのか、アプリケーションのロジックとはどのように考えていくのか、その基礎から丁寧に解説していくことを目指しました。\n完成するアプリに関しても、アプリ作成で身につけたUIを使えば自分のオリジナルアプリを作成する際に使いまわせるようなものにしました。\n基礎文法、xcodeの基本操作から解説していきますが、その部分を学習してから受講される方が進めやすいかと思います。",
      "target_audience": [
        "Swiftを使って実践的なアプリを作りたい方",
        "世に出ているアプリで使われているレベルの技術を学びたい方"
      ]
    },
    {
      "title": "Full Stack Flutter FlixID: Simulasi Pemesanan Tiket Bioskop",
      "url": "https://www.udemy.com/course/flutter-flixid/",
      "bio": "Belajar menerapkan \"separation of concerns\" dan \"clean architecture\" pada aplikasi simulasi pemesanan tiket bioskop.",
      "objectives": [
        "Pembuatan aplikasi mobile dengan Flutter",
        "Penggunaan state management Riverpod",
        "Penggunaan Firebase",
        "Penerapan konsep \"Separation of Concerns\""
      ],
      "course_content": {
        "Pendahuluan, Persiapan, dan Penjelasan Konsep": [
          "Penjelasan project FlixID",
          "Membuat akun TMDB",
          "Separation of Concerns",
          "Membuat struktur awal aplikasi",
          "Persiapan project Firebase",
          "Entities (User, Transaction)",
          "Entities (Movie, Movie Detail, Actor)",
          "Result Class & Repositories",
          "Usecase & Login Usecase",
          "Penjelasan Struktur Aplikasi FlixID",
          "Dummy Repository, Login Page, & Main Page",
          "Firebase Authentication & Firebase User Repository",
          "Authentication Provider, User Repository Provider, Login Provider"
        ],
        "Firebase & TMDB Repositories": [
          "Firebase Authentication",
          "Firebase User Repository",
          "Firebase Transaction Repository",
          "TMDB Movie Repository (Now Playing & Upcoming Movies)",
          "TMDB Movie Repository (Get Details & Get Actors)"
        ],
        "Use Cases": [
          "Use case Logout, Register, Get Logged In User",
          "Use case Get Movie List, Get Movie Detail, Get Actors",
          "Use case Create Transaction & Get Transactions",
          "Use case Top Up, Get User Balance, Upload Profile Picture"
        ],
        "Providers": [
          "Movie Repository & Transaction Repository Provider",
          "Usecase Provider",
          "Now Playing Provider & Upcoming Provider",
          "Movie Detail Providers & Actors Providers",
          "User Data Provider",
          "Transaction Data Provider",
          "Router Provider"
        ],
        "Extensions & misc": [
          "Misc (Constants) & Application Theme",
          "Misc (Methods)",
          "Build Context Extension & Integer Extension"
        ],
        "Widgets & Pages": [
          "Flix Text Field",
          "Login Page",
          "Register Page",
          "Bottom Nav Bar & Bottom Nav Bar Item",
          "Main Page",
          "Profile Page",
          "Network Image Card",
          "Movie Page Bagian 1",
          "Movie Page Bagian 2",
          "Back Navigation Bar & Detail Page Bagian 1",
          "Detail Page Bagian 2",
          "Selectable Card",
          "Time Booking Page",
          "Seat",
          "Seat Booking Page Bagian 1",
          "Seat Booking Page Bagian 2",
          "Booking Confirmation",
          "Ticket & Ticket Page",
          "Transaction Card & Wallet Page Part 1",
          "Wallet Page Part 2",
          "Upload Profile Picture",
          "Kesimpulan & Penutup"
        ],
        "What's next?": [
          "Payment Gateway, Backend using Dart, Flutter Web, Responsive Design"
        ]
      },
      "requirements": [
        "Sudah mempelajari dan menguasai playlist \"Materi Prasyarat Kelas Online FlixID\" yang terdapat di channel YouTube \"Erico Darmawan Handoyo\"."
      ],
      "description": "KODE PROMO (Jika Tersedia): s(dot)id(slash)kelas-online-erico\n---\nSelamat datang di kelas FlixID: Aplikasi Flutter Simulasi Pemesanan Tiket Bioskop. Kelas online ini saya sediakan bagi mereka yang memerlukan contoh penerapan dari apa yang telah saya ajarkan di YouTube ke dalam sebuah studi kasus. Untuk dapat mengikuti kelas online ini, peserta WAJIB mempelajari terlebih dahulu dan mengerti materi-materi prasyarat yang akan digunakan di dalam kelas online ini. Materi-materi tersebut dapat diperoleh secara gratis di channel YouTube saya pada playlist \"Materi Prasyarat Kelas Online FlixID\".\n\n\nPrinsip \"separation of concerns\"\nSalah satu tujuan dari kelas ini adalah menerapkan prinsip \"separation of concerns\" yang dapat membantu kita dalam membuat aplikasi yang mudah untuk dibuat, dikembangkan, dan juga dipelihara.\n\n\nClean Architecture\nPada aplikasi FlixID ini kita akan menerapkan Clean Architecture dengan membagi aplikasi kita ke dalam beberapa layer dan komponen. Dengan demikian, diharapkan peserta dapat lebih memahami apa itu clean architecture dan bagaimana menerapkannya ke dalam sebuah studi kasus.\n\n\nState Management Riverpod\nAplikasi FlixID menggunakan salah satu state management Flutter yang populer, yaitu Riverpod. State managmenet ini akan kita gunakan untuk me-manage state aplikasi serta menjadi penyedia komponen yang digunakan di dalam aplikasi agar sistem dapat lebih mudah untuk dipelihara di masa yang akan datang.\n\n\nFull Stack Development\nAplikasi FlixID menggunakan Firebase Authentication untuk autentikasi, Cloud Firestore untuk penyimpanan data, Firebase Storage untuk penyimpanan file asset, dan TMDB untuk sumber data movie yang digunakan.\n\n\nSemua konsep di dalam kelas online ini dijelaskan dengan bahasa yang sederhana serta menggunakan ilustrasi dan contoh agar dapat lebih dimengerti. Pembuatan aplikasi akan dibuat langkah demi langkah dan diberikan penjelasan mengenai tujuan/kegunaan dari setiap elemen di dalam sistem agar peserta mengerti kegunaan dari tiap elemen tersebut. Setiap video juga disertakan source code yang dapat di-download dan sesuai dengan progress kelas, sehingga dapat dijadikan sebagai pembanding dengan source code yang sedang dibuat.\n\n\nMengapa mengikuti kelas ini:\nKelas online ini dibawakan oleh seorang pengajar yang memiliki pengalaman mengajar sejak 2005, memberikan banyak webinar, seminar, workshop, dan pelatihan untuk instansi.\nKualitas materi yang berbobot dan baik serta dapat dinilai dari apa yang telah diberikan secara gratis di channel YouTube \"Erico Darmawan Handoyo\".\nTidak hanya menunjukkan \"How to\" membuat aplikasi, tetapi juga menjelaskan \"Why\" kita merancang dan melakukan ini dan itu. Dengan ini, diharapkan peserta dapat mengerti dengan jelas seluruh materi, logika berpikir, dan konsep yang diberikan dan dapat menerapkannya kelak di kasusnya masing-masing.\n\n\nJadi, tunggu apa lagi? Segera ikuti kelas online ini dan dapatkan manfaatnya. Selamat belajar!",
      "target_audience": [
        "Mereka yang ingin belajar membuat aplikasi menggunakan Flutter melalui studi kasus.",
        "Mereka yang ingin belajar menggunakan state management Riverpod pada sebuah studi kasus.",
        "Mereka yang ingin belajar menerapkan prinsip \"separation of concerns\" dan \"Clean Architecture\" ke dalam sebuah project.",
        "Mereka yang ingin belajar membuat aplikasi mobile dengan Flutter untuk portofolio mereka."
      ]
    },
    {
      "title": "Flutter y Dart: La guía completa para crear apps",
      "url": "https://www.udemy.com/course/curso-de-flutter-dart-crea-apps-multiplataforma-ios-android/",
      "bio": "Bloc, Provider, Navigation, HTTP, Push notifications, publicar AppStore/GooglePlay, Ads, In-app purchases, y mucho más..",
      "objectives": [
        "Fundamentos del lenguaje Dart",
        "Cómo crear pantallas usando Flutter",
        "Cómo navegar entre pantallas con Flutter",
        "Los widgets más comunes para crear apps en Flutter",
        "Cómo conectar tu app Flutter a un backend REST, y Firebase.",
        "Formas más populares de manejar estado en Flutter (State management)",
        "Ejecutar tu app en Android y iOS"
      ],
      "course_content": {
        "Introducción": [
          "¿Qué es Flutter?",
          "¿Qué es Dart y que tiene que ver con Flutter?"
        ],
        "Instalación: prepara tu entorno de desarrollo.": [
          "Instalación Flutter",
          "Instalación Dart",
          "Selección IDE"
        ],
        "Hola Mundo App, tu primera aplicación": [
          "Setup inicial y estructura de archivos",
          "Primeros pasos en el código",
          "Ejecutando la app en un emulador de Android",
          "Ejecutando en dispositivo real Android",
          "Ejecutando la app en simulador de iOS",
          "Ejecutando en dispositivo real iOS"
        ],
        "Packages: Agregando dependencias a tu app": [
          "¿Qué son los packages y donde buscarlos?",
          "Usando packages externos"
        ],
        "El lenguaje Dart": [
          "Introducción a Dart",
          "Variables, constantes, final y late.",
          "Tipos de datos",
          "Funciones",
          "Flujos de control",
          "Enums",
          "Clases",
          "Clases: mixin",
          "Excepciones y try-catch",
          "Iterables: trabajando con listas",
          "Generics",
          "Null Safety",
          "Typedef o type alias",
          "Extension methods",
          "Metadata y Comments",
          "Programación asíncrona: Future, async y await."
        ],
        "Herramientas para ayudar en el desarrollo": [
          "Logging",
          "Breakpoints",
          "Hot reload",
          "Formateo de código"
        ],
        "Todo acerca de los Widgets": [
          "Widgets: el corazón de Flutter",
          "¿Cómo se dibujan los widgets?",
          "Una simple pantalla con algunos widgets",
          "Stateless Widgets",
          "Stateful Widgets",
          "Material app y Cupertino App",
          "Inherited Widget",
          "Inherited Widget: ¿Cómo modificar su estado?",
          "¿Qué es el BuildContext? y el widget Builder",
          "Keys",
          "Layouts: Organiza tus widgets en la pantalla"
        ],
        "Algunos Widgets comunes": [
          "¿Cómo buscar widgets?",
          "Botones: TextButton, OutlinedButton, y ElevatedButton",
          "GestureDetector",
          "FloatingActionButton",
          "Images",
          "ListView",
          "BottomNavigationBar",
          "Código fuente de proyecto con widgets"
        ],
        "State Management: Manejo de estados entre widgets": [
          "¿Qué es el State y el State Management?",
          "Usando setState()",
          "Usando el paquete Provider",
          "Usando Riverpod",
          "Usando BLoC: Cubits",
          "Usando BLoC: eventos y blocs"
        ],
        "Navigation API: Navegación entre pantallas": [
          "Navigation.push() y Navigation.pop()",
          "Navegando con los nombres de las rutas: Navigator.pushNamed().",
          "Pasando parámetros entre pantallas",
          "onGenerateRoute: más flexibilidad en el manejo de routes",
          "Código fuente de proyecto con Navigator 1.0",
          "Navigator 2.0"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación es recomendado"
      ],
      "description": "Flutter se ha convertido en el framework de desarrollo de apps multiplataforma más popular, desplazando a Ionic, React Native y Xamarin, esto por la facilidad y rapidez con la que puedes crear apps, y sobretodo por el buen rendimiento que obtienen las apps creadas en Flutter, debido a su capacidad de compilar directo a código nativo.\nCon el empuje de Google por detrás, Flutter ha ido mejorando con los años y sin duda lo seguirá haciendo, cada vez tendrá menos sentido programar independientemente para cada plataforma, cuando puedes crear multiples apps con un mismo código fuente.\nEn este curso aprenderás paso a paso cómo funciona el framework Flutter, desde los fundamentos de Dart, hasta como compilar tus apps en Android y iOS.\nHe tratado de ser muy efectivo en la enseñanza, ir directo al grano, y eliminar todo lo que solo demora tu aprendizaje. También obtendrás todo el código fuente para que puedas probar y jugar en tu casa.\nEn este curso aprenderás:\nBeneficios de Flutter.\nCómo instalar el Fluter SDK y Dart.\nFundamentos del lenguaje Dart.\nLos Widgets más comunes para utilizar en tu app.\nCómo crear tus propios Widgets.\nCómo utilizar paquetes creados por otros para mejorar tu app.\nDistintas formas de manejar estado en tu app (State management).\nCómo navegar entre pantallas.\nCómo realizar llamados a una api REST.\nCómo conectar tu app a un proyecto Firebase.\nCómo utilizar Firebase Firestore como tu backend.\nHerramientas para hacer el desarrollo más fácil\nCómo generar ingresos mediante Ads en tu app.\nCon el respaldo de Google, Flutter va a seguir desarrollándose y mejorando, y sin duda irá abarcando más y más del mercado, es un buen momento para convertirte en un desarrollador Flutter.",
      "target_audience": [
        "Todos aquellos que quieran aprender un framework multiplataforma para crear apps en Android y iOS",
        "Programadores Android que quieran tener una herramienta para lanzar sus apps en iOS",
        "Programadores iOS que quieran tener una herramienta para lanzar sus apps en Android",
        "Programadores que estén buscando nuevas oportunidades laborales",
        "Emprendedores que quieren tener una herramienta para hacer prototipos de apps de una manera rápida, fácil, y en ambas plataformas"
      ]
    },
    {
      "title": "Power Apps Essencial",
      "url": "https://www.udemy.com/course/power-apps-essencial/",
      "bio": "Aprenda na Prática como Desenvolver Aplicativos Sem Programação com Microsoft Power Apps - Do Zero ao Profissional.",
      "objectives": [
        "Desenvolver aplicativos Low Code na Plataforma Microsoft Power Apps",
        "Utilizar Base de Dados em Excel para Armazenar Dados dos Aplicativos",
        "Como Criar Passo a Passo as Funcionalidades e Personalizações de Aplicativos",
        "Utilizar Recursos PowerFX para Cálculos, Navegação e Demais Funcionalidades de um App"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Ecossistema de um App",
          "Opções de Acesso ao Office"
        ],
        "Projeto Introdutório - Conhecendo Microsoft Power Apps": [
          "Criando a Base de Dados",
          "Aviso Sobre o Acesso ao Power Apps",
          "Cadastro na Plataforma Power Apps",
          "Acesso Alternativo para Power Apps",
          "Acesso ao Power Apps",
          "Visualizando o Modelo de App",
          "Alterando Dados",
          "Formatações Básicas",
          "Testando o App",
          "Testando a Funcionalidade de Pesquisa",
          "Editando o Layout do App",
          "Alteração e Exclusão de Pedidos",
          "Publicando o App",
          "Microsoft Power Apps - Teste Prático no Celular",
          "Adicionando Dados no App Via Celular",
          "Base de Dados - Filtro em Excel",
          "Base de Dados - Estatísticas em Excel"
        ],
        "Microsoft Power Apps - Galeria de Produtos e Navegação": [
          "Sobre a Sessão",
          "Criando a Base de Dados",
          "Desenvolvendo a Galeria",
          "Personalizando a Galeria",
          "Acrescentando Informações na Galeria",
          "Inserindo Botões no App",
          "Entrada de Texto",
          "Utilizando PowerFX",
          "Atualizando o App",
          "Navegação Entre Telas - Navigate",
          "Efeitos de Transição Entre Telas"
        ],
        "Microsoft Power Apps - Tela de Inserção de Dados": [
          "Criando a Tela de Inserção de Produtos",
          "Envio de Formulário",
          "Configurando Auto Incremento"
        ],
        "Microsoft Power Apps - Tela de Vendas": [
          "Sobre a Sessão",
          "Criando a Tela de Vendas",
          "Opções de Busca",
          "Nova Base de Dados",
          "Exibindo Dados da Tabela",
          "Distribuindo as Informações",
          "Atribuindo Dados em Caixas de Textos",
          "Exibindo Dados - Texto e Data",
          "Campo de Pesquisa",
          "Ajustes",
          "Variáveis em PowerFX",
          "Criando Variáveis na Prática",
          "Cálculos com Variáveis",
          "Sobre o Envio de Dados",
          "utilizando Patch para Envio de Dados",
          "Proteção Contra Erros de Usuários",
          "Reset de Dados"
        ],
        "Microsoft Power Apps - Tela de Consulta de Vendas": [
          "Sobre a Sessão",
          "Exibindo as Imagens dos Produtos",
          "Histórico de Vendas",
          "Botão Nova Consulta"
        ],
        "Microsoft Power Apps - Menu de Navegação e Personalização": [
          "Tela Inicial",
          "Sobre a Personalização do Layout",
          "Personalizando Cores no Layout",
          "Navegação",
          "Personalizando a Tela de Cadastro",
          "Personalizando a Tela de Vendas",
          "Finalizando o App",
          "Considerações Finais"
        ]
      },
      "requirements": [
        "Computador Atualizado e com acesso a internet"
      ],
      "description": "Curso completo de Microsoft Power Apps Essencial para Iniciantes.\nConteúdo do Curso:\n\n\nFormas de Acesso ao Ambiente de Desenvolvimento e Base de Dados\nApp introdutório - Como funciona o Power Apps\nDesenvolvimento e Perosnalização do App\nProjeto App Completo\nTela de Inserção de Produtos\nTela de Exibição de Produtos\nTela de Vendas\nPowerFX\nTela de Consulta\nBotões\nNavegação e muito mais!\n\n\nO trabalho remoto é uma realidade e tem uma tendência de crescimento para os próximos anos.\nEste fato torna o uso de aparelhos celulares e tablets cada vez mais comuns nas rotinas de trabalho de todos os ramos de atividade e em empresas de todos os portes.\nDentro desse mercado as empresas tem adotado cada vez mais o uso de controles internos e aplicativos personalizados.\nO desenvolvimento de aplicativos tem se tornado uma das profissões mais requisitadas dos últimos anos.\nAplicativos que permitem controles de estoques, realização de pedidos, cadastros de pessoas e produtos são alguns dos exemplos mais comuns.\nA Microsoft disponibiliza um pacote completo de desenvolvimento de aplicativos sem programação (low code) em sua plataforma, o ambiente Microsoft Power Apps.\n\n\nAqui você aprenderá os passos para desenvolver aplicativos para empresas e iniciar na área de desenvolvimento mesmo sem conhecimentos em programação de computadores.\nCurso pensado passo a passo para iniciantes  e estudantes que desejam iniciar do zero e direto ao ponto em aulas práticas e dinâmicas.\n\n\nNão perca mais tempo e comece agora mesmo a sua virada profissional.\n\n\nTe vejo nas aulas!",
      "target_audience": [
        "Profissionais e estudantes de tecnologia que desejam aprender sobre desenvolvimento de aplicativos low code."
      ]
    },
    {
      "title": "Criar aplicativos com Ionic 3, Spring,OAuth2, REST e MongoDB",
      "url": "https://www.udemy.com/course/criar-aplicativos-completos-com-spring-rest-api-e-mongodb/",
      "bio": "Autenticação(OAuth 2), Spring Data Repositories(MongoDB) , Ionic 3, GitHubPages, Heroku e Mlab.Veja o vídeo promocional",
      "objectives": [
        "Criar um sistema utilizando WebService Rest",
        "Criar uma autenticação utilizando OAuth2",
        "Utilizar o Spring Data Repositories",
        "Realizar várias consultas no MongoDB",
        "Integração via WebService",
        "Front com Ionic 3"
      ],
      "course_content": {
        "Spring Boot": [
          "Introdução ao Spring Framework",
          "REST",
          "Entender melhor as controllers do Spring"
        ],
        "Spring com o MongoDB": [
          "Instalação do MongoDB",
          "MongoDB",
          "CRUD Completo em poucos minutos",
          "Consultas com Spring Data",
          "@DBRef"
        ],
        "OAuth2 e ACL": [
          "Introdução ao OAuth2",
          "OAuth2 na prática",
          "Configuração de Cors"
        ],
        "Ionic 3": [
          "Criando o meu primeiro projeto com Ionic",
          "Ionic 3 e Autenticação OAuth2",
          "Cookies, manipular o access token",
          "Interceptors, Requisições com o usuário logado, Logout",
          "Gerar as APKs do nosso APP"
        ],
        "Hospedagem gratuita": [
          "Introdução ao GitHubPages, Heroku e Mlab",
          "Subir nosso backend no Heroku e criar nosso banco no Mlab",
          "Subir o nosso frontend no GitHubPages"
        ],
        "Refresh token": [
          "Fluxo no refresh token no backend",
          "Implementar Refresh Token com Ionic",
          "Aula Bônus"
        ]
      },
      "requirements": [
        "É interessante que o aluno já conheça um pouco de lógica de programação e tenha noção de Orientação a Objetos",
        "Tenha uma boa noção em Java",
        "Orientação a Objetos",
        "Design Patterns"
      ],
      "description": "Um curso completo para quem deseja criar uma API completa utilizando Spring, REST API, OAuth2, MongoDB. Você vai aprender o quanto é simples criar a sua aplicação de forma simples, com alta performance e escalável! Vai utilizar o Java na sua melhor versão até o momento, o Spring Boot na sua versão mais atual e ainda um banco de dados NoSQL que está sendo utilizando por grandes empresas no mundo inteiro! Além disso você vai utilizar o Ionic 3 para desenvolver seus Apps em várias plataformas e de uma forma muito simples e produtiva!! Você ainda será capaz de hospedar isso em serviços gratuitos na nuvem utilizando os serviços do GitHubPages, Heroku e Mlab. Aproveite!!",
      "target_audience": [
        "Programador que gosta de aprender algo novo!"
      ]
    },
    {
      "title": "Augmented Reality Puzzle Mazes in Unity",
      "url": "https://www.udemy.com/course/augmented-reality-puzzle-mazes/",
      "bio": "Design and develop interactive mazes with augmented reality",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Design A Maze Image"
        ],
        "Activity 1": [
          "Make Your Own Maze",
          "Setup Unity",
          "Import Vuforia Engine",
          "Setup Image Target",
          "Build 3D Maze Design"
        ],
        "Activity 2": [
          "Make It 3D",
          "Add A Controller",
          "Expand On It"
        ],
        "Augmented Maze Course Wrap Up": [
          "Wrap Up"
        ]
      },
      "requirements": [
        "Computer: PC or Mac (will not work with Chromebooks or iPads)",
        "Unity Game Engine",
        "Vuforia SDK",
        "Picture (on your phone or printed out)",
        "Webcam (we will not be testing this on a phone but if you know how to build to an Android phone or iPhone you can test it out then)"
      ],
      "description": "This course is designed to teach Unity game engine users how to create an engaging and immersive augmented reality (AR) maze game using real-world physics. You will learn how to design and build a 3D maze, control a ball navigating through the maze using physics, and make the experience available in augmented reality. By the end of the course, you will have created an interactive AR maze game that you can share and play with others.\nCourse Objectives:\nLearn how to use Unity game engine and Vuforia to create an AR maze game.\nDesign a maze image and build a 3D maze in Unity.\nAdd a maze controller using physics components.\nEnhance the AR features of the maze game by adding animations, sounds, and visual effects.\nPublish and distribute your AR maze game on app stores.\nCourse Curriculum:\nSection 1: Introduction to AR Maze Games\nIntroduction to AR technology and AR games.\nAdvantages and disadvantages of AR and VR technologies.\nOverview of the course content.\nSection 2: Setting Up Unity and Vuforia\nDownloading and installing Unity game engine and Vuforia.\nIntroduction to the Unity interface and Vuforia image recognition technology.\nSection 3: Designing the Maze Image\nCreating a maze design on paper or digitally.\nTips for creating an effective maze design.\nSection 4: Setting Up Image Target in Vuforia\nSetting up an image target in Vuforia.\nPreparing the maze image for recognition in Vuforia.\nSection 5: Building the 3D Maze\nImporting the maze image into Unity.\nCreating the 3D maze model using Unity tools.\nAdding walls, floors, and other maze elements.\nSection 6: Adding Maze Controller Using Physics\nCreating a ball object to navigate the maze.\nAdding physics components to the ball object to control its movement.\nCreating a maze controller script to interact with the ball object.\nSection 7: Expanding on AR Features of the Maze\nAdding visual effects to the maze using Unity particle systems.\nAdding sound effects and background music.\nAdding animations to the ball object and other maze elements.\nSection 8: Testing and Publishing the AR Maze Game\nTesting the AR maze game on different devices.\nPublishing the AR maze game on app stores.\nPromoting and marketing the AR maze game to potential players.\nSection 9: Wrap-Up and Next Steps\nReviewing what you've learned in the course.\nReflecting on the process of creating an AR maze game.\nConsidering future improvements or expansions to the project.\nWho should take this course?\nThis course is designed for Unity game engine users who want to learn how to create an engaging and immersive AR maze game. You should have some prior experience with Unity, but it is not necessary to be an expert. This course is suitable for artists, designers, and game developers who want to enhance their art practice with AR technology. If you are interested in creating interactive and immersive AR experiences, then this course is for you!",
      "target_audience": [
        "This course is for intermediate creators that know how to navigate the Unity Game Engine. It’s easy to follow and will give you a good idea of what you can do wi th AR and unity"
      ]
    },
    {
      "title": "FAST TRACK FLUTTER BEGINNER",
      "url": "https://www.udemy.com/course/fast-track-flutter-beginner/",
      "bio": "Belajar dengan jalur tercepat untuk para pengembang Flutter pemula dari nol. ( Flutter - GetX - Get CLI )",
      "objectives": [
        "Memahami Flutter dari Sangat Dasar",
        "Mengetahui Tentang Flutter dan Bahasa Pemrogramman Dart",
        "Cara Install Flutter di Windows dan MacOS",
        "Belajar Basic Flutter",
        "Berkenalan dengan Banyak Widget",
        "Dapat Membedakan Penggunaan Stateless vs Stateful",
        "Mengoptimalkan Penggunaan State Management",
        "Belajar State Management GetX",
        "Dependency Management GetX",
        "Route Management GetX",
        "Latihan Flutter UI",
        "Latihan HTTP Request dengan Get Connect",
        "Memperdalam Penggunaan Model",
        "Tips and Trick Pembelajaran Flutter"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Resources"
        ],
        "Bahasa Pemrogramman Dart": [
          "Introduction Dart",
          "Tipe Data",
          "Final vs Const",
          "Comments",
          "Function",
          "Asynchronous",
          "Exception",
          "Loop",
          "Conditional Expression",
          "Collections",
          "Null Safety",
          "Object Oriented Programming",
          "Class",
          "Inheritance & Abstract Class",
          "Mixin",
          "Enum",
          "Resources"
        ],
        "Flutter Basic": [
          "Hello World",
          "Basic Widget",
          "Visible vs Invisible Widget",
          "Extract Widget",
          "Mapping Collections",
          "Widget Builder",
          "Latihan Flutter Basic"
        ],
        "Stateless vs Stateful": [
          "Stateless vs Stateful",
          "Dialog",
          "SnackBar",
          "TextField",
          "TabBar",
          "DropDown",
          "Bottom Navigation Bar",
          "Bottom Sheet",
          "Drawer",
          "Navigation",
          "Latihan Instagram UI"
        ],
        "HTTP Request": [
          "Basic Concept",
          "GET",
          "POST",
          "PUT / PATCH",
          "DELETE",
          "Future Builder",
          "Model",
          "Latihan HTTP Request"
        ],
        "Package Flutter": [
          "Faker",
          "INTL",
          "Bottom Navigation Bar",
          "Avatar Glow",
          "Introduction Screen & Lottie",
          "Dropdown Search",
          "Dropdown Search API",
          "Note Flutter 3",
          "Flutter Launcher Icon"
        ],
        "State Management GetX": [
          "Stateless vs Stateful vs State Management",
          "SnackBar GetX",
          "Dialog GetX",
          "Bottom Sheet GetX",
          "GetX State Manager",
          "Reactive Variables",
          "Workers",
          "Dependency Management",
          "Route Management",
          "Route Named",
          "Bindings Builder",
          "Class Bindings",
          "Get Storage",
          "Install Get CLI",
          "Create New Project Get CLI",
          "Create Pages Get CLI",
          "Create Views, Controller, and Install Packages",
          "Latihan Get CLI"
        ],
        "Study Case Ongkos Kirim": [
          "Initial Setup",
          "Cek Ongkos Kirim",
          "Flutter 3"
        ]
      },
      "requirements": [
        "Setidaknya Mengetahui Logika Pemrogramman",
        "Memiliki Spesifikasi Komputer yang sesuai dengan kebutuhan Flutter"
      ],
      "description": "Tanpa terlalu banyak deskripsi, materi kursus ini ditujukan untuk teman-teman semua yang ingin mempelajari Flutter dari nol dengan jalur / Road Map tercepat versi ( Kuldii Project ). Dengan banyaknya jenis state management, ada salah satu state management yang paling polular, paling banyak disukai, dan paling mudah dipahami yaitu GetX. Sudah waktunya teman-teman mencobanya dan langsungg saja gas materinya yaa :)\n\n\nSaat ini juga, membuat aplikasi mobile tidaklah sulit. Dengan adanya Flutter Framework kamu dapat sangat mudah dan cepat untuk membuat aplikasi, baik itu website maupun mobile apps. Kamu bisa melatih skill flutter kamu dengan latihan studi kasus ataupun mengikuti tutorial yang kamu anggap mudah dalam mengajarnya. Aku mengajarkan apa itu flutter dan bagaimana cara menerapkan state management GetX pada flutter project kamu di sini.\n\n\nMateri yang akan kamu pelajari dan dapatkan :\nMemahami Flutter dari Sangat Dasar\nMengetahui Tentang Flutter dan Bahasa Pemrogramman Dart\nCara Install Flutter di Windows\nCara Install Flutter di MacOS\nBelajar Basic Flutter\nBerkenalan dengan Widget Dasar\nPenggunaan Layouting Widget\nDapat Membedakan Penggunaan Stateless vs Stateful\nMengoptimalkan Penggunaan State Management\nBelajar State Management GetX\nDependency Management GetX\nRoute Management GetX\nTerdapat Latihan Flutter UI\nTerdapat Latihan HTTP Request dengan Get Connect\nMemperdalam tentang Model\nTips and Trick Pengembangan Flutter\n\n\nKamu dapat bertanya pada kolom komentar jika kamu mengalami permasalahan pada saat mengikuti kursus ini. Pastikan kamu sudah mengecek kembali dan menyamakan source code yang sudah tersedia atau mengubah versi plugin kamu mengikuti versi pada tutorial ini. Jika masih terdapat masalah, hubungi aku melalui email yaa.\n\n\nSekian dan sampai jumpa.\n-Kuldii Project-",
      "target_audience": [
        "Semua yang ingin belajar Flutter dari nol",
        "Semua yang ingin belajar dengan Road Map tercepat",
        "Pelajar Indonesia (khususnya)",
        "Siapapun (umumnya)"
      ]
    },
    {
      "title": "React Native, Firebase, Expo でアプリ開発をゼロから始めよう！",
      "url": "https://www.udemy.com/course/react-native-ios-android/",
      "bio": "React NativeとExpoを使ったモバイルアプリ開発のオールインワン講座。UIデザイン・開発・リリースまで、アプリ開発の全行程を一気に身につけましょう！＜React Hooks 対応 / Git も学べる＞",
      "objectives": [
        "ゼロからアプリを開発して公開することができます",
        "アプリ開発の全工程を把握することができます",
        "Figmaを使ったUIデザインの基本を知ることができます",
        "Git / Githubを使った現場に近いワークフローが身につきます",
        "Expo / Xcode / Android Studioを用いて開発環境を構築することができます",
        "React Native を使って実際にモバイルアプリを開発します",
        "React Navigation を使って画面遷移を実装します",
        "Firebase を使って会員登録・ログインを実装します",
        "Firestore を使ってデータをデータベースに保存します",
        "アプリをビルドして、ストアにリリースできるようになります"
      ],
      "course_content": {
        "イントロダクション": [
          "アプリ開発の6の工程",
          "このコースを修了したら作れるアプリ"
        ],
        "プランニング": [
          "コンセプトとワイヤーフレーム"
        ],
        "UIデザイン": [
          "Figmaをインストール",
          "Figmaの基本",
          "ヘッダーのUIデザイン",
          "メモ一覧のUIデザイン",
          "コンポーネントでデザイン作業を効率化する",
          "プロトタイプを作成する",
          "ボタンのUIデザイン",
          "UIデザインのまとめ"
        ],
        "マークアップの練習": [
          "VSCode のインストール",
          "まずはHTMLで構造化を学ぶ",
          "マークアップを始める",
          "メモ一覧のマークアップ練習"
        ],
        "スタイリングの練習": [
          "スタイルシートの基本",
          "HTML要素をスタイリングする",
          "複雑なスタイリング",
          "ボタンのスタイリング"
        ],
        "プログラミングの練習": [
          "プログラミングの基本",
          "関数の基本",
          "演算子の基本",
          "条件分岐",
          "繰り返し処理",
          "練習"
        ],
        "Git と Github": [
          "GitとGithubのメリット",
          "GitのインストールとGithubのアカウント作成",
          "Windows / TerminalとGitのインストール",
          "Windowsのコマンド",
          "ターミナルでの操作",
          "Gitの初期化",
          "Gitの設定を変更する",
          "Gitで変更履歴を追加してみる",
          "SSH Key に関する注意事項",
          "SSHを使ったGithubとの連携",
          "SSHパスフレーズを省略せずにGithubと連携する",
          "Windows / Gitの初初期化からGithubとの連携まで",
          "テキスト版教材"
        ],
        "★アプリ開発の環境構築": [
          "Expoとは",
          "NVS と Node.js",
          "Xcode と iOS Simulator",
          "Android Studio と Emulator",
          "emulatorコマンド（Windowsの場合）",
          "Watchman のインストール（Mac）"
        ],
        "★ React Native アプリ開発の基本": [
          "Expo で作る初めてのアプリ",
          "Expo のファイル構成",
          "Git と Github で変更履歴を追跡",
          "ESLintの設定ファイルについて",
          "ESLint の導入",
          "Typescript とは",
          "React Native と Expo の関係性"
        ],
        "★ 初めてのコンポーネント": [
          "コンポーネントを作成して表示する",
          "プロパティを受け渡す（children）",
          "プロパティを受け渡す（boolean）",
          "プロパティを受け渡す（TextStyle）"
        ]
      },
      "requirements": [
        "事前知識は不要です。",
        "アプリを本番リリースする場合は、iOS: $99/year, Android: $25(1度きり) が必要です。リリースしない方の費用はありません。",
        "Apple Store へのリリースにはMacが必要です。",
        "開発環境はMacを推奨します。"
      ],
      "description": "React Native は、Web技術の組み合わで、iOS / Android ネイティブアプリを同時に開発することができます。初学者にも分かりやすい開発手法にも関わらず、本格的なアプリをつくることができます。\nこの講座は、アプリ開発を以下の工程に分割して進行します。\n1. Plan（計画）\n2. Design（デザイン）\n3. Markup（構造化）\n4. Styling（装飾）\n5. Programming（機能）\n6. Release（ストアに並べる）\n\n\n最初は、HTML / CSS / Javascript を中心に学習し、最終的にはすべてを Javascript で書いていきます。\n初めてアプリ開発に挑戦する人向けに進めて行きますので、まったく知識がなくても大丈夫です。\nFigma を使ったUIデザインの基本も盛り込みました。\nまさにアプリ開発のオールインワン講座となっています。\n\nこの講座では Expo を使用します。\nExpo を採用することで、開発環境の構築とリリース作業が大幅に簡略化されました。\n開発環境の構築とリリース作業は、初学者がつまづきやすいステップの代表例ですので、特に丁寧に解説しています。\nまた、開発現場には欠かせない Git や Github も取り入れ、実際の開発プロセスに近付けていますので、\nこれから開発の仕事に関わりたいと思っている方にも最適です。\n\n主な機能\nシンプルながら、基本的な機能を網羅したメモアプリを作成します。\nメモはクラウド上に保存され、端末を変更してもアプリ利用を継続することができます。\n会員登録（メールアドレスとパスワードで登録）\nログイン・ログアウト\nリアルタイムデータベース（作成、編集、削除、一覧、詳細）\nナビゲーション（画面から画面への移動）\n主に使用する技術\nReact, React Native\nReact Hooks, Function Component\nReact Navigation\nExpo\nJavascript\nESLint\nFirebase Authentication\nCloud Firestore\nFigma (UI Design)\n必要になる可能性がある費用\nUSD $99/year（App Store にアプリを公開するために Apple に毎年支払う）\nUSD $25（Play Store にアプリを公開するために Google に1度だけ支払う）\nリリースは最終セクションにまとめていますので、公開しない方は、特に費用はかかりません。\n\nーーーーーーー\n\n\nこの講座は、2021年と2023年に再収録のリニューアルを実施しています。\nそのため、コース後半にはリニューアル前の動画が残っています。リニューアル公開時に受講されていた方が困らないための措置ですが、コース紹介ページには収録時間が合計して表示されていること予めご了承下さい。",
      "target_audience": [
        "初めてアプリ開発に挑戦する方に最適なコースです",
        "モバイルアプリ開発の全体像を把握したい方にもおすすめです"
      ]
    },
    {
      "title": "Membuat Aplikasi dengan Flutter dari Basic sampai Advance UI",
      "url": "https://www.udemy.com/course/flutter-redindwhite-academy-by-joshua/",
      "bio": "Membangun aplikasi mobile dari desain & Cloning Apps (E-Book App, Telkomsel App Clone, DANA Clone and more)",
      "objectives": [
        "Membangun Aplikasi Mobile dengan User Interface yang menarik berdasarkan desain Figma",
        "Mengimplementasikan Widget - widget Flutter dari Basic sampai Advanced dan Memahami penggunaannya",
        "Mempercepat proses membangun User Interface aplikasi dengan memanfaatkan Dart Packages",
        "Membuat Clone Aplikasi Komersial",
        "Menambahkan Animasi pada Aplikasi"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Setup and Installation": [
          "NEW!! Install Flutter Tools Environment di Windows 2022 Version",
          "Download Software : Android SDK, Flutter SDK, Git, Java JDK, Visual Studio Code",
          "Install Software : Android SDK, Flutter SDK, Git, Java JDK, Visual Studio Code",
          "Membuat Project Aplikasi Flutter Baru",
          "Visual Studio Code Settings dan Extensions",
          "Upgrade Old Project"
        ],
        "Aplikasi 1: E-Book App": [
          "Review dan Analisa Aplikasi E-Book App",
          "Export Assets Icon dan Image dari Figma",
          "Membuat Variabel untuk Color dan Textstyle",
          "Menggunakan Smartphone Sebagai Emulator dan Ditampilkan ke Layar Desktop",
          "Bottom Navigation Bar",
          "Bottom Navigation Bar Untuk Menentukan Body Screens",
          "Home Page - Header",
          "Home Page - Search Field",
          "Home Page - Recent Book [Part 1]",
          "Home Page - Recent Book [Part 2]",
          "Home Page - List Categories",
          "Home Page - Trending Now [Part 1]",
          "Home Page - Trending Now [Part 2]",
          "Code sampai saat ini",
          "Navigation dengan Routes",
          "Book Details - Header dan Book Image",
          "Book Details - Description [Part 1]",
          "Book Details - Description [Part 2]",
          "Code sampai bagian book details",
          "Mempassing Data dan Widget Hero",
          "Code terakhir E-Book App"
        ],
        "Aplikasi 2: Telkomsel App UI Clone": [
          "Review dan Analisa Aplikasi Telkomsel App Clone",
          "Export Assets Icon dan Image dari Figma",
          "Catatan sebelum melanjutkan ke video berikutnya",
          "Membuat Variabel untuk Color dan Textstyle",
          "Bottom Navigation Bar",
          "Bottom Navigation Bar Untuk Menentukan Body Screens",
          "Header",
          "Card Info 1 [Part 1]",
          "Card Info 1 [Part 2]",
          "Card Info 2 [Part 1]",
          "Card Info 2 [Part 2]",
          "Indicator Card",
          "Recomended For You [Part 1]",
          "Recomended For You [Part 2]",
          "What's New?"
        ],
        "Aplikasi 3: Saving App": [
          "Review dan Analisa UI",
          "Flutter Upgrade & Review Project Starter",
          "On Boarding Page",
          "Bottom Navigation Bar",
          "Header",
          "Scrollablesheet Transactions History",
          "Portfolio Page: Header",
          "Portfolio Page: List Portfolio Part I",
          "Portfolio Page: List Portfolio Part II",
          "Portfolio Page: Button"
        ],
        "Aplikasi 4: DANA Clone with Flutter 3.3.4 - 3.7.0": [
          "Review dan Analisa UI",
          "Review Project Starter",
          "Appbar: Icon dan Text",
          "Appbar: Animasi Icon Add Card",
          "Header: Icon dan Label",
          "Service Card: Children 1",
          "Service Card: Children 2",
          "Feed Card: Children 1",
          "Feed Card: Children 2",
          "Image Loop Slider Widget",
          "What's New Card",
          "Nearby Card and Flutter Upgrade to 3.7.0",
          "More For You Card",
          "Dana Protection Card",
          "Bottom Navigation Bar"
        ]
      },
      "requirements": [
        "Dasar-dasar Pemrograman Dart",
        "Dasar-dasar widget Flutter"
      ],
      "description": "Di course ini kita akan membuat beberapa aplikasi dengan Flutter berdasarkan desain dari figma. Kita juga akan membuat ulang aplikasi-aplikasi komersil dengan menggunakan Flutter. Tujuan yang akan dicapai Teman-teman dengan mengikuti course ini adalah:\nMengerti caranya Slicing dari desain Figma ke Code\nMengerti widget-widget Flutter dan Implementasi nya dalam Code\nMengerti bagaimana membuat Code yang Rapih dan Efisien\nMengerti bagaimana menggunakan Dart Packages agar proses development menjadi lebih cepat\nMengerti bagaimana menuliskan Code yang Clean\nMengerti bagaimana menyusun folder-folder dalam project agar mudah dimengerti\nDi course ini saya akan mengajarkan Teman-teman cara membangun beberapa aplikasi, diantaranya:\nE-Book App\nTelkomsel App Clone\nSaving App\nDANA Clone (in progress)\nCourse ini akan diupdate dengan Project-project baru menarik lainnya\nSemua project aplikasi dalam course ini menggunakan versi:\nFlutter SDK : 2.2.3 dan 3.0.0 (Ebook, Telkomsel, Saving App)\nFlutter SDK : 3.3.4 (DANA Clone)\n*jika terdapat kendala yang terjadi akibat perbedaan versi, teman-teman bisa mengubah ke versi yang sesuai dengan course ini.\nVideo content dalam course ini memiliki resolusi HD 1080p\nTeman-teman dapat bertanya pada kolom Q&A jika mengalami permasalahan pada saat mengikuti course ini. Teman-teman juga bisa mengecek kembali dan menyamakan source code yang sudah tersedia. Teman-teman juga memberikan saran untuk aplikasi selanjutnya yang mau dibangun melalui email.\nSekian, Sampai Jumpa, dan Salam Sehat.\nRedindwhite Academy",
      "target_audience": [
        "Siapapun yang ingin membangun Aplikasi Mobile menggunakan Flutter",
        "Cross Platform Developer",
        "Flutter Developers yang mau meningkatkan pemahaman mengenai User Interface",
        "Siapapun yang ingin belajar Basic sampai Advanced UI pada Flutter"
      ]
    },
    {
      "title": "Erstelle iOS Apps die geliebt werden",
      "url": "https://www.udemy.com/course/der-komplette-ios-11-swift-entwicklerkurs-erstelle-apps/",
      "bio": "Benutze Xcode & Swift um Apps wie Uber und Instagram zu erstellen. Lerne AWS und vieles mehr.",
      "objectives": [
        "Entwickle jede iOS App die du möchtest",
        "Werde ein professioneller iOS Entwickler",
        "Entwickle Apps für dein Unternehmen oder deine Organisation",
        "Kriege Aufträge auf Freelancer Webseiten"
      ],
      "course_content": {
        "Undefined": [
          "Einführung"
        ],
        "Einführung und wichtige Infos": [
          "WICHTIG - Wie du das meiste aus dem Kurs holst",
          "Häufig gestellte Fragen",
          "Wie man super Fragen stellt"
        ],
        "Loslegen mit Xcode 9 und Swift 4": [
          "Einführung",
          "Xcode Versionen - Bitte lesen",
          "Downloaden & Installieren von Xcode 9",
          "Übersicht des Xcode Interfaces",
          "Wichtiger Hinweis!",
          "Navigating The Xcode Interface (Xcode Files)",
          "Labels zu deinen Apps hinzufügen",
          "Labels zu deinen Apps hinzufügen (Xcode Dateien)",
          "Text Fields & Buttons",
          "Text Fields & Buttons (Xcode Files)",
          "Erster eigener Code",
          "Erster eigener Code (Xcode Files)",
          "Mit Buttons interagieren",
          "Mit Buttons interagieren (Xcode File)",
          "Bilder zu unserer App hinzufügen",
          "Bilder zu unserer App hinzufügen (Xcode Files)",
          "Deine erste App - Hunde Jahre",
          "Deine erste App - Hunde Jahre (Xcode Files)",
          "Einfühung in Xcode 9 und Swift 4 Quiz"
        ],
        "Swift 4 Deep Dive (Mit Playgrounds)": [
          "Einleitung",
          "Swift Playgrounds",
          "Swift Playgrounds (Xcode Files)",
          "Einführung in Variablen",
          "Einführung in Variablen (Xcode Files)",
          "Arrays",
          "Dictionaries",
          "Arrays & Dictionaries (Xcode Files)",
          "If Statements",
          "If Statements (Xcode Files)",
          "Spiel - Wie viele Finger?",
          "Spiel - Wie viele Finger? (Xcode Files)",
          "While Loops / Schleifen",
          "While Loops / Schleifen (Xcode Files)",
          "For Loops / Schleifen",
          "For Loops / Schleifen (Xcode Files)",
          "Klassen & Objekte",
          "Klassen & Objekte (Xcode Files)",
          "Optionals Masterclass",
          "Optionals Masterclass (Xcode Files)",
          "Auto Layout",
          "Auto Layout (Xcode Files)",
          "Vorbereitung für Primzahl App",
          "App - Ist es eine Primzahl",
          "App - Ist es eine Primzahl(Xcode Files)",
          "Swift 4 Deep Dive (Mit Playgrounds) - Quiz"
        ],
        "Weiterführende iOS Features: Timers, Tables, Permanent Storage & Web Content": [
          "Einführung",
          "Navigation Bars / Navigationsleisten",
          "Navigation Bars / Navigationsleisten (Xcode Files)",
          "Timer Grundlagen",
          "App - EierUhr",
          "App - EierUhr (Xcode Files)",
          "Table Views",
          "Table Views (Xcode Files)",
          "Slider und Reihen App",
          "Slider und Reihen App (Xcode Files)",
          "Daten permanent Speichern (NSUserDefaults)",
          "Daten permanent Speichern (NSUserDefaults) (Xcode Files)",
          "Mehrere View Controller",
          "Mehrere View Controller (Xcode Files)",
          "Keyboard kontrollieren",
          "Keyboard kontrollieren (Xcode Files)",
          "App - To Do Liste",
          "App - To Do Liste (Xcode Files)",
          "Fortgeschrittene iOS Features: Timers, Tables, Permanent Storage Quiz"
        ],
        "Fortgeschrittene iOS Features II: Animation, Games, Maps & Geolocation, Audio": [
          "Einleitung",
          "Animationen Teil I",
          "Animationen Teil I (Xcode Files)",
          "Animationen Teil II",
          "Animationen Teil II (Xcode Files)",
          "Spiel - Tic Tac Toe",
          "Spiel - Tic Tac Toe (Xcode Files)",
          "Maps in Apps einfügen",
          "Maps in Apps einfügen (Xcode Files)",
          "Benutzerstandort anzeigen",
          "Benutzerstandort anzeigen (Xcode Files)",
          "Adresse auslesen",
          "App - Bewusst seines Standorts",
          "App - Bewusst seines Standorts (Xcode Files)",
          "Mehr zu Segues",
          "Hinweis zur folgenden App",
          "App - Lieblingsorte",
          "App - Lieblingsorte(Xcode Files)",
          "Mit Audio arbeiten",
          "Mit Audio arbeiten (Xcode Files)",
          "App - Back To Bach",
          "App - Back To Bach (Xcode Files)",
          "Swipes & Shakes",
          "Swipes & Shakes (Xcode Files)",
          "App - Sound Shaker",
          "App - Sound Shaker (Xcode Files)",
          "Fortgeschrittene iOS Features II: Animation, Games, Maps & Geolocation, Audio"
        ],
        "Instagram Clone": [
          "Einleitung",
          "Parse Server & AWS",
          "Parse Server & AWS (Xcode files)",
          "Daten laden und aktualisieren",
          "Daten laden und aktualisieren (Xcode Files)",
          "Auf Bilder Zugreifen",
          "Auf Bilder Zugreifen (Xcode Files)",
          "Spinner & Alerts / Hinweise",
          "Spinner & Alerts / Hinweise (Xcode Files)",
          "Login & Signup",
          "Login & Signup (Xcode Files)",
          "Benutzertablle",
          "The User Table (Xcode Files)",
          "Pull To Refresh",
          "Pull To Refresh (Xcode Files)",
          "Bilder posten",
          "Posting Images (Xcode Files)",
          "Feeds anzeigen lassen",
          "Feeds anzeigen lassen (Xcode Dateien)",
          "Instagram Clone - Quiz"
        ],
        "Tinder Clone": [
          "Parse Server aufsetzen",
          "Parse Server aufsetzen (Xcode Files)",
          "Swipe Feature",
          "Swipe Feature (Xcode Files)",
          "Login & Registrierung",
          "Login & Registrierung - (Xcode - Files)",
          "Benutzerdetails speichern",
          "Benutzerdetails speichern (Xcode Files)",
          "Benutzer hinzufügen",
          "Benutzer hinzufügen (Xcode Files)",
          "Benutzer Swipen",
          "Benutzer Swipen (Xcode Files)",
          "Standort und Matches",
          "Standort und Matches (Xcode Files)"
        ],
        "Spiele und Spritekit: Super Mario Run Klon": [
          "Einführung in Sprite Kit",
          "Einführung in Sprite Kit (Xcode Files)",
          "Spielphysik",
          "Spielphysik (Xcode Files)",
          "Kollisionen",
          "Kollisionen (Xcode Files)",
          "Game Over",
          "Game Over (Xcode Files)",
          "Animationen",
          "Animationen (Xcode Files)"
        ],
        "Uber Clone": [
          "Firebase Installation",
          "Firebase Installation (Xcode Files)",
          "Login & Registrierung",
          "Login & Registrierung (Xcode Files)",
          "Mitfahrer View Controller",
          "Mitfahrer View Controller (Xcode Files)",
          "Fahrer View Controller",
          "Fahrer View Controller (Xcode Files)",
          "Fahrerstandort mit Mitfahrer teilen",
          "Fahrerstandort mit Mitfahrer teilen (Xcode Files)"
        ]
      },
      "requirements": [
        "Keine Vorkenntnisse nötig - hier lernst du alles was du brauchst",
        "Ein Mac laptop oder iMac (oder Windows PC der unter OSX läuft)",
        "Keine kostenpflichtige Software nötig - Alle Projekte werden in Xcode 9 (kostenlos) umgesetzt"
      ],
      "description": "Träumst du davon eine App zu entwickeln?\nVielleicht hast du eine Vision, etwas Inspiration und bist bereit zu lernen?\nOder vielleicht willst du bei der Arbeit schneller voran kommen? Möchtest ein Profi Programmierer sein,\nOder du möchtest einen kompletten Karrierewechsel!?\nSo oder so, du bist hier um etwas wundervolles zu machen - etwas großartiges...\nDann gratuliere ich dir. Rob Percival, Nick Walter und ich haben den kompletten iOS 11 Entwicklerkurs nur für dich entwickelt!\nSchau dir an was Apple zu iOS 11 sagt...\n“iOS 11 sets a new standard for the world’s most advanced mobile operating system. Your apps can now become more intelligent using the power of machine learning with Core ML. You can create incredible augmented reality experiences with ARKit. And you can deliver a more unified and immersive user experience with new multitasking features, including drag and drop for iPad, the new Files app, new camera APIs, new SiriKit domains, Apple Music integration, and more.”\n\nHeißt zu Deutsch, richtig geiles Betriebssystem mit super neuen Features.\nAls:\nMehr power…\nMehr Möglichkeiten…\nMehr BOOOOM…\nWarum solltest du Meinen Kurs anderen bevorzugen?\nIch bin Denis Panjuta, und lehre bereits über 30000 begeisterte Teilnehmer das Programmieren.\nDer Kurs ist voller echter Projekte, die es dir ermöglichen umfangreiche eigene Apps zu entwickeln.\nDer Kurs ist super Umfangreich :)\nGenug über mich\nIch vermute du willst eine Veränderung in deinem leben. Karrierewechsel, starke Fähigkeiten lernen, oder sogar eine Idee für ein Startup umsetzen.\nDann bist du hier auf jeden Fall gut aufgehoben. Du kannst jeder Zeit hier loslegen, und musst dich dazu nur einschreiben.\nSchreibe dich jetzt ein und erhalten sofort Zugang:\n\nEin riesiger Kurs der auf über 25 Stunden getestetes 5 Sterne Videomaterial kommt.\nEin kompletter Werkzeugkasten mit dem du deine eigenen Apps für iOS 11 entwickeln kannst.\nApps wie Snapchat, Tinder, Flappy bird und viele mehr.\nWarte, du bist immer noch nicht überzeugt?\nIch bin vollkommen überzeugt, dass du diesen Kurs lieben wirst. Ich gebe dir darauf meine 30 Tage Geld zurück Garantie.\nBereit einzusteigen? SUPER.\nKlicke auf den Button Jetzt kaufen rechts neben diesem Text oder lese dir vorher den kompletten Kurslehrplan durch.\nXCode und Interface Builder\nInputs, Buttons, und interactive Interfaces\nApple’s neue Programmiersprache: Swift\nVariablen, Arrays, Tables, und Schleifen\nNavigation, Datenspeicherung, und Live Content\nBilder, Maps und Music\nAccelerometer und Motion/Bewegungs Feedback\nOnline Datenspeicherung mit Parse\nSpiele und das Sprite Kit\nInstagram und Snapchat Klone\nApp Store Veröffentlichung\n\n\nAnfänger, fortgeschrittener oder Profi Entwickler?\nJa, dieser Kurs ist absolut das Richtige für dich. Egal in welchem Stadium du dich befindest.\nAnfänger? Kein Problem, wir beginnen mit den Grundlagen. Du kannst bereits Programmieren? Super, dann verbessere diene Fähigkeiten. Am Anfang geht es erstmal darum Selbstvertrauen aufzubauen.\nWie? Na weil du bereits zu Beginn echte Apps bauen wirst. Es gibt keinen besseren, spannenderen und effektiveren Weg programmieren zu lernen.  Wir wissen, dass du wenig Zeit hast, aber erstmal ist es nur wichtig überhaupt anzufangen.\nDu wirst erkennen wie schnell die Lektionen vorbei sind und di etwas neues gelernt hast.\nDu wirst überrascht sein, wie schnell du neue Fähigkeiten gelernt hast und wirst sehen wie schnell du die Gänge hochschaltest.\nStell dir vor du baust dein eigenen Super Mario World?!\nSchau: du musst nicht dein haus verkaufen oder dich 3 Jahre einschließen...\nIch empfehle es den Kurs in sechs Wochen durchzuarbeiten. Du kannst natürlich auch schnell durcharbeiten wenn du möchtest, oder es langsamer angehen und dir Zeit nehmen.\nDas ist das Schöne am Kompletten iOS 11 Entwicklerkurs - Er passt sich dir und deinem Leben an. Ziemlich cool, oder?\nHilfe, wann DU sie brauchst\nDu brauchst Unterstützung? Kein Problem. Mein Team und ich helfen dir bei Fragen aus. Schreib uns einfach eine Email oder schreibe in den Kommentarbereich rein.  Wir helfen so schnell es geht aus.\nTritt einer riesigen Gruppe von tausenden zufriedener Studenten bei und fange endlich an die Apps zu entwickeln, deren Ideen du seit langem schon im Kopf hast.\n“OK, Denis, du hast mich überzeugt - wie fange ich an?”\n\nDu brauchst dein Gehirn, diesen Kurs, einen Laptop/Computer und Internet\nKeine Vorkenntnisse nötig\nEin Mac ist zwar nötig, aber kein kostenpflichtige extra Software.\nKann ich wirklich ein Profi Programmierer mit diesem Kurs werden?\nNa klar! Dieser Kurs hat in seiner Englischen Version schon tausenden Menschen dabei geholfen Programmieren zu lernen und tolle Apps zu entwickeln.\nWer auch immer du bist, wo auch immer du bist, dieser Kurs ist so designed, dass er dich zum Profi machen. Der Rest liegt bei dir. Mit diesem Kurs bist du perfekt ausgestattet.\nAlso lass es nicht schleifen und schreibe dich JETZT ein und lass das Abenteuer beginnen.",
      "target_audience": [
        "Alle die lernen wollen, wie man Apps entwickelt",
        "Leute die einen Job als App Entwickler wollen, oder neben bei etwas Geld verdienen möchten.",
        "Alle die Coden lernen wollen"
      ]
    },
    {
      "title": "Profesyonel Projelerle Android Eğitimi",
      "url": "https://www.udemy.com/course/profesyonel-projelerle-android-egitimi/",
      "bio": "Profesyonel projelerle ileri seviye android eğitimleri (PHP & MYSQL & ANDROİD)",
      "objectives": [
        "Php ile web servisleri yazıp kullanabilecekler.",
        "Android uygulama geliştirme konusunda deneyim sahibi olacaklardır.",
        "Web servislere sorgu gönderme ve gelen sonuçları parse ederek uygulamalarında kullanabilecekler.",
        "Android de yerel servisleri, yayın algılayıcıları ve alarm kurarak zamanlanmış görevleri yapmayı öğreneceklerdir.",
        "Mobil arayüz geliştirme hakkında deneyim sahibi olacaklardır."
      ],
      "course_content": {},
      "requirements": [
        "Orta seviyede java ve android bilinmesi gerekiyor."
      ],
      "description": "Android eğitimlerimizin bu seti ile artık daha ileri seviyelere adım atıyoruz.\nDiğer eğitim setlerinden farklı olarak bu eğitim setimizde php ile web servis oluşturma ve kullanmayı örnek projemiz (Twitter Clone) üzerinden anlatacağız. Bu konuda pek kaynak olmadığı için ve sizlerden gelen yoğun talep nedeniyle böyle bir proje geliştirmeye karar verdik.\nEğitim setimiz sadece bu projeyle sınırlı kalmayacak. Arkaplanda çalışan yerel servisler, yayın algılayıcılar ve AlarmManager sınıflarını kullanacağımız alarm uygulamasını da sizler için hazırladık.\nSon olarak son zamanlarda popüler olan Firebase kullanarak Buradayım uygulamasını geliştirdik. Bu uygulama ile lokasyon ve harita işlemleri ve Firebase konusunda deneyim sahibi olmanız sağlanmıştır.\nÖrnek projelerimizin tanıtım videolarını izleyerek daha ayrıntılı bilgi sahibi olabilirsiniz.",
      "target_audience": [
        "Android Uygulama Geliştirme konusunda kendisini geliştirmek isteyen herkes."
      ]
    },
    {
      "title": "Flutter et Firebase: Créez une app de chat iOS et Android",
      "url": "https://www.udemy.com/course/flutter-chat/",
      "bio": "Apprenez à créer un clone de Messenger et WhatsApp avec Flutter et Dart",
      "objectives": [
        "Utilisation de l'authentification de Firebase",
        "Utilisation de la base de données en temps réel de Firebase",
        "Utilisation du cloud Storage de Firebase",
        "Création d'une application de Chat"
      ],
      "course_content": {
        "Mise en place du projet": [
          "Présentation de l'application",
          "Rejoignez la communauté",
          "Présentation de Firebase",
          "Création d'un compte et d'un projet Firebase",
          "Tour du projet Firebase",
          "Création du projet Flutter",
          "Ajout de Firebase à l'application",
          "Lancement des simulateurs pour tester notre configuration",
          "Problèmes rencontrés avec la compatibilité AndroidX"
        ],
        "L'Authentification": [
          "Vérifier si on est authentifié",
          "Ajout des controllers",
          "UI de LogController",
          "La fonction HandleLog",
          "Ajout des alertes",
          "La class FirebaseHelper",
          "Retour sur Firebase",
          "La class MyUser",
          "Première authentification"
        ],
        "Squelette de l'application": [
          "iOS",
          "Android"
        ],
        "Le ProfilController": [
          "Récupérer l'utilsateur",
          "UI de base",
          "Se déconnecter",
          "Sauvegarder les changements",
          "La class CustomImage",
          "Ajouter une photo sur le storage"
        ],
        "Le ContactController": [
          "Le FirebaseAnimatedList",
          "Ne pas montrer l'utilisateur",
          "Trier les contacts",
          "Finalisation du UI"
        ],
        "Le ChatController": [
          "Montrer le chat",
          "UI de base",
          "La zone de texte",
          "Envoyer sur Firebase",
          "Montrer un message",
          "La class Message"
        ],
        "Le MessageController": [
          "Envoyer le dernier message",
          "La class Conversation",
          "La Liste des derniers messages",
          "Test 2 devices"
        ],
        "Le MessageBubble": [
          "UI de la Bulle",
          "Le DateHelper",
          "Envoyer une image",
          "Montrer une Image"
        ],
        "Ancienne version: Authentification d'un utilisateur": [
          "Vérifier si un utilisateur est authentifié",
          "Ajout des Controllers MainAppController et LogController",
          "UI de LogController",
          "La fonction handleLog",
          "Ajout des alertes si les données sont manquantes",
          "Cacher le mot de passe",
          "Ajout du mode de connection et des règles de la database",
          "La classe FirebaseHelper",
          "Test de la création d'un utilisateur"
        ],
        "Ancienne version: Le squelette du MainAppController": [
          "FutureBuilder et Widget de Chargement",
          "La TabBar pour Android",
          "La TabBar pour iOS",
          "Passer l'id à tous les controllers"
        ]
      },
      "requirements": [
        "Vous devez connaitre les bases de Dart et du développement d'application Flutter"
      ],
      "description": "Vous connaissez les bases de Dart\nVous avez déjà créé des applications Flutter?\nLa programmation orienté objet n'a plus aucun secret pour vous?\nEt si on allait un peu plus loin?\n\nDans ce cours, nous allons ensemble créer une application de chat avec Flutter, Dart et Firebase. Vous pourrez ainsi avoir une application de type messenger ou WhatsApp à la fois pour iOS et Android.\n\n\nPour ceci, nous allons, pas à pas et pendant plusieurs heures de vidéo:\n\nAdapter notre application selon la plateforme avec un material design adapté selon si nous sommes sous iOS ou Android.\n\nFaire interagir notre application avec l'environnement de Google: Firebase.\n\n\nNous allons ainsi apprendre à utiliser son:\nAuthentification pour gérer l'entrée des utilisateurs dans notre application\nLa gestion d'une base de données en temps réel pour pouvoir à la fois enregistrer l'utilisateur, mais aussi les messages\nL'ajout et la lecture d'images dans un cloud storage.\nToutes nos applications pourront ainsi lire les données stockées dans notre projet Firebase et communiquer entre elles de façon instantanée.\nGrâce à ce cours, vous obtiendrez les bases pour créer votre propre application de chat ou pourquoi pas créer votre propre réseau social et devenir le prochain Mark Zuckerberg?\n\nEtes-vous prêts? Je vous attend sur le cours pour créer notre propre application de messagerie instantanée de type Messenger ou WhatsApp",
      "target_audience": [
        "Ce cours est fait pour tous les développeurs Flutter souhaitant apprendre à créer une application de Chat avec une base de données."
      ]
    },
    {
      "title": "Android App Development - Make a weather forecast app",
      "url": "https://www.udemy.com/course/android-studio-build-your-own-weather-forecast-app/",
      "bio": "Unlock the Secrets of Android Development: Build Your Own Weather Forecast App from Scratch Using Android Studio",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "01 - Elevate Your Development Skills: Download Android Studio": [
          "01 - Elevate Your Development Skills: Download Android Studio"
        ],
        "02 - Setting the Stage: Configuring Your Development Environment": [
          "02 - Setting the Stage: Configuring Your Development Environment"
        ],
        "03 - Boosting Your Project: Incorporating Dependencies": [
          "03 - Boosting Your Project: Incorporating Dependencies"
        ],
        "04 - Crafting the Frontend: Designing the Main Activity Interface": [
          "04 - Crafting the Frontend: Designing the Main Activity Interface"
        ],
        "05 - Enhancing Your UI: Integrate Lottie Animations for Dynamic Visuals": [
          "05 - Enhancing Your UI: Integrate Lottie Animations for Dynamic Visuals"
        ],
        "06 - Perfecting User Interaction: Designing the Search Activity Interface": [
          "06 - Perfecting User Interaction: Designing the Search Activity Interface"
        ],
        "07 - Implementing Functionality: Making the Search Activity Fully Operational": [
          "07 - Implementing Functionality: Making the Search Activity Fully Operational"
        ],
        "08 - Initializing Main Activity Elements for Seamless Functionality": [
          "08 - Initializing Main Activity Elements for Seamless Functionality"
        ],
        "09 - Structuring Your Data: Creating Essential Data Classes": [
          "09 - Structuring Your Data: Creating Essential Data Classes"
        ]
      },
      "requirements": [
        "No programming expertise required! Everything you need to know, from UI design to advanced coding techniques, is covered in this course."
      ],
      "description": "Embark on a trans formative journey into Android app development with our comprehensive course, \"Unlocking Android Development: Build Your Own Weather Forecast App from Scratch Using Android Studio.\"\nIn this immersive learning experience, you'll dive headfirst into the dynamic world of mobile application development, guided by industry experts with years of experience in Android development.\nThroughout the course, you'll master the essential skills needed to create a fully functional weather forecasting application using Android Studio, the industry-standard integrated development environment (IDE) for Android app development. From setting up your development environment to deploying your app on real devices, every step of the process will be meticulously explained and demonstrated.\nYou'll learn how to integrate powerful weather APIs to fetch accurate and up-to-date weather data, ensuring that your app delivers reliable forecasts to its users.\nBut this course is more than just about building an app. It's about mastering the fundamentals of Android development, including UI/UX design principles, data handling techniques, API integration strategies, and debugging methodologies. Armed with this knowledge, you'll not only create an impressive weather app but also lay the groundwork for future Android projects.\nWhether you're a beginner eager to dip your toes into the world of Android development or an experienced developer looking to expand your skill set, this course offers something for everyone. Join us today and take the first step towards becoming a proficient Android developer.",
      "target_audience": [
        "Perfect for beginner Java and Android developers eager to dive into Android Studio, this course guides you through creating music player and online radio apps from scratch."
      ]
    },
    {
      "title": "Desenvolvimento Android com Kotlin Profissional 2024/2025",
      "url": "https://www.udemy.com/course/desenvolvimento-android-profissional/",
      "bio": "Domine o desenvolvimento Android com Kotlin, utilizando as tecnologias mais requisitadas no mercado de trabalho mobile.",
      "objectives": [
        "Aprenda a Utilizar a Linguagem de Programação para criação de aplicativos.",
        "Aprenda a utilizar o Android Studio para Desenvolver apps incríveis.",
        "Aprenda como utilizar o Firebase Real Time Database - Armazenar Dados em Nuvem.",
        "Aprenda como utilizar o Firebase Storage - Upload de Arquivos.",
        "Aprenda como utilizar o Firebase Authentication.",
        "Aprenda a utilizar diversos componentes de interface.",
        "Salvar dados internamente no dispositivo no usuário utilizando Shared Preferences.",
        "Salvar dados internamente no dispositivo no usuário utilizando SQLite.",
        "Carregar imagens da câmera e galeria do dispositivo.",
        "Publicar Apps na Google Play.",
        "Consumir Dados e Serviços da Internet via API - Retrofit.",
        "Clean architecture",
        "Injeção de dependências com o Hilt",
        "Paginação com Paging",
        "Modularização",
        "testes",
        "Muito mais!"
      ],
      "course_content": {},
      "requirements": [
        "Computador com acesso à internet.",
        "Nenhum software pago é necessário."
      ],
      "description": "Adentrando o mundo dinâmico do desenvolvimento de aplicativos móveis, este curso é meticulosamente desenhado para capacitar os entusiastas da tecnologia a dominar o Kotlin, a linguagem de programação que rapidamente se tornou a mais requisitadas na indústria de aplicativos Android.\n\n\nComece construindo uma base sólida com a preparação adequada do ambiente de desenvolvimento. Garanta que suas ferramentas e softwares estejam alinhados para proporcionar uma experiência de aprendizado sem interrupções.\n\n\nMergulhe profundamente na linguagem Kotlin, explorando seus conceitos fundamentais, sintaxe e as características que a distinguem. A seguir, familiarize-se com os componentes essenciais do Android, aprofundando-se nas Activitys & Fragments que formam a espinha dorsal de qualquer aplicativo Android moderno.\n\n\nNeste curso, também aprenderá sobre o consumo de APIs com uma abordagem prática, utilizando Retrofit2 para garantir uma integração eficiente. Além disso, a modularização será tratada, permitindo-lhe construir aplicativos escaláveis e manuteníveis. E para garantir que seu código funcione como esperado, será introduzido ao mundo dos testes no ambiente Android.\n\n\nA estética e a funcionalidade andam de mãos dadas, e é por isso que abordamos a criação de layouts, ensinando-lhe as melhores práticas para desenvolver interfaces de usuário intuitivas e atraentes. Aprimore suas habilidades com a listagem de dados e descubra como exibir informações de forma eficaz.\n\n\nEm um mundo cada vez mais conectado, é fundamental entender as ferramentas que nos permitem interagir com a nuvem. Portanto, uma seção significativa deste curso é dedicada ao Firebase, cobrindo aspectos como Database, Authentication e Storage.\n\n\nFinalmente, traga tudo junto com o padrão MVVM & LiveData, que é a chave para um código sustentável e eficiente. Além disso, explore o armazenamento interno com Room, garantindo que seus aplicativos não só se pareçam bem, mas também funcionem de maneira impecável.\n\n\nJunte-se a nós nesta jornada e transforme-se em um desenvolvedor Kotlin Android de primeira linha, pronto para atender às demandas do mercado de trabalho atual.",
      "target_audience": [
        "Desenvolvedores Android",
        "Desenvolvedores Mobile",
        "Desenvolvedores Web"
      ]
    },
    {
      "title": "Flutter et Cloud Firestore: Créez votre réseau social",
      "url": "https://www.udemy.com/course/flutter-cloud-firestore/",
      "bio": "Apprenez à créer une application de réseau social pour iOS et Android avec Flutter 3, Dart 3 et Firebase",
      "objectives": [
        "La création d'une application de type réseau social avec Flutter et Firebase",
        "L'authentification des utilisateurs",
        "L'écriture et la lecture dans une base de données."
      ],
      "course_content": {
        "Introduction et mise en place du projet": [
          "Présentation",
          "Prérequis de la formation",
          "Comment va se dérouler la formation?",
          "Présentation de Firebase",
          "Rejoignez la communauté"
        ],
        "Configuration du projet": [
          "Création d'un compte Firebase",
          "Création d'un projet Firebase",
          "Création d'un projet Flutter",
          "La CLI de Firebase",
          "Connecter et tester la CLI",
          "Configurer Firebase dans notre projet",
          "Ajout des packages",
          "Retour sur nos packages",
          "Initialisation du Main",
          "Version Texte: Initialisation du Main",
          "Lancement sur Android",
          "Lancement sur iOS"
        ],
        "L'authentification": [
          "Mise en place de l'authentification sur Firebase",
          "Voir si nous sommes Authentifié",
          "Version Texte: Voir si nous sommes authentifié",
          "La class AuthPage",
          "Version Texte: la class AuthPage",
          "Le FlutterLogo",
          "Version Texte: Le Flutter Logo",
          "Le SegmentedButton",
          "Version Texte: Le SegmentedButton",
          "Les TextFields",
          "Version Texte: Les TextFields",
          "Ajout de la décoration",
          "Version Texte: Ajout de décoration",
          "Création de la class AuthService",
          "Version Texte: Création de la class AuthService",
          "La fonction SignIn",
          "Version Texte: La fonction signIn",
          "La fonction createAccount",
          "Version Texte: la fonction Create Account",
          "La fonction SignOut",
          "Version Texte: La fonction signOut",
          "Les Ids",
          "Version Texte: Les Ids",
          "La méthode d'authentification",
          "Version Texte: Methode d'authentification",
          "Se déconnecter",
          "Se déconnecter"
        ],
        "Créer un Utilisateur sur CloudFirestore": [
          "Configuration de Cloud Firestore",
          "Ajout d'une règle",
          "Fonctionnement de Cloud Firestore",
          "La class Member",
          "Version Texte: La class Member",
          "Le Fichier Keys",
          "Version Texte: Le fichier Keys",
          "La class FirestoreService",
          "Version Texte: La class FirestoreService",
          "La fonction AddUser",
          "Version Texte: La fonction addUser",
          "Ajout de addUser lors de la création d'un utilisateur",
          "Version Texte: Ajout de addUser lors de la création d'utilisateur"
        ],
        "Le Squelette de l'application": [
          "Création de NavigationPage",
          "Version Texte: Création de NavigationPage",
          "Le StreamBuilder de NavigationPage",
          "Version Texte: Le StreamBuilder de NavigationPage",
          "Les Empty Widgets",
          "Version Texte: Les Empty widgets",
          "Le NavigationBar",
          "Version Texte: Le NavigationBar",
          "Ajout des bodies",
          "Version Texte: Ajout des bodies"
        ],
        "La Page de Profil": [
          "La class ProfilePage",
          "Version Texte: La class Profile page",
          "UI du premier élément",
          "Version Texte: UI du premier élément",
          "L'avatar Circulaire",
          "Version Texte: L'avatar Circulaire",
          "La class CameraButton",
          "Version Texte: La class CameraButton",
          "Prendre une Photo",
          "Version Texte: Prendre une photo",
          "Configuration du Storage sur Firebase",
          "La class StorageService",
          "Version Texte: La class StorageService",
          "Modifier le Profil",
          "Version Texte: Modifier le profil",
          "Montrer les boutons si c'est nous",
          "Version Texte: Montrer les boutons si c'est nous"
        ],
        "La page de modification de profil": [
          "Création de UpdateProfilePage",
          "Version Texte: Création de UpdateProfilePage",
          "UI du UpdateProfilePage",
          "Version Texte: UI du UpdateProfilePage",
          "Se déconnecter",
          "Version Texte: Se déconnecter",
          "Modifier les champs",
          "Version Texte: Modifier les champs"
        ],
        "La Liste des utilisateurs": [
          "La MembersPage",
          "Version Texte: La MembersPage",
          "La Tile",
          "Version Texte: La Tile",
          "Passer au Profil"
        ],
        "Ecrire un Post": [
          "Création de la WritePostPage",
          "Version Texte: Création de la class WritePostPage",
          "UI de WritePostPage",
          "Version Texte: UI de WritePostPage",
          "Prendre une Photo",
          "Version Texte: Prendre une photo",
          "La class Post",
          "Version Texte: La class Post",
          "La fonction CreatePost",
          "Version Texte: La fonctionCreatePost",
          "Envoi du Post",
          "Version Texte: Envoi du Post",
          "Revenir à l'accueil",
          "Version Texte: revenir à l'accueil"
        ],
        "Voir les Posts": [
          "La base du Post",
          "Version Texte: La base du Post",
          "Le PostContent",
          "Version Texte: Le PostContent",
          "Le MemberHeader",
          "Version Texte: Le MemberHeader",
          "Le DateHandler",
          "Version Texte: Le DateHandler",
          "Trier les Posts",
          "Version Texte: Trier les posts",
          "Ajout des Likes",
          "Version Texte: Ajouter des Likes",
          "La class HomePage",
          "Version Texte: HomePage",
          "Le DetailPostPage",
          "Version Texte: Le DetailPostPage"
        ]
      },
      "requirements": [
        "Vous devez connaître les bases de Dart",
        "Vous devez connaître les bases du développement d'applications iOS et Android avec Flutter"
      ],
      "description": "MISE A JOUR FLUTTER  Mai 2023\n\n\nCe cours a été totalement ré-enregistré en mai 2023 pour satisfaire les exigences de\nFlutter 3.10\nDart 3\nMais aussi des derniers changements de Firebase et Cloud Firestore.\n\n\nVous connaissez les bases de Dart et de la programmation d'application mobile avec Flutter?\nVous avez déjà créé des applications iOS et Android avec le framework maison de Google?\nAllez plus loin dans l'apprentissage en créant votre propre réseau social.\n\nDans ce cours vous allez apprendre à:\nAuthentifier un utilisateur avec un mail et un mot de passe\nCréer un UI original et facile à utiliser.\nAjouter des données dans la base de données Firebase.\nUtiliser la nouvelle base de données de Firebase: Le cloud Firestore\nComprendre la structure du cloud firestore.\nStocker des images dans le Firebase Storage\nLire les données et les montrer dans votre application en temps réel.\nCréer votre propre bibliothèque de widgets pour les réutiliser dans toute l'application.\nprendre une photo\nGérer les modes sombres et clairs\nAdaptez le UI selon les appareils (Android ou iOS)\n\n\nFlutter est le nouveau SDK qui monte dans le monde du développement d'applications mobiles. Développé par Google, il offre une facilité et une rapidité de création impressionnante. Devenez un pionnier du développement avec ce SDK.\n\n\nCela vous tente? Rejoignez l'aventure Flutter et préparez sereinement le futur du développement d'applications mobiles.",
      "target_audience": [
        "Toute personne souhaitant créer une application de réseau social avec une base de données"
      ]
    },
    {
      "title": "Curso App Inventor 2 COMPLETO - Do Zero até Bancos de Dados",
      "url": "https://www.udemy.com/course/curso-app-inventor-2-completo-bancos-de-dados-fusion-tables-tiny-db/",
      "bio": "Crie aplicatvos Android, Publique na Google Play, Use Banco de Dados Local (TinyDB) e Online (Fusion Tables) do ZERO!",
      "objectives": [
        "Criar aplicativos com o MIT App Inventor sem Codificação",
        "Criar um app de Dicionário com Imagem, Busca e Som",
        "Criar um app Editor de Imagens salvando a Imagem no Celular",
        "Criar um app de Caderno de Receitas com Tiny DB",
        "Trabalhar com Botões, Tìtulos, Formulários e Menus",
        "Operar Listas Paralelas e Listviews",
        "Usar mídias de Som, Imagem e Fotos",
        "Ajustar Alinhamento de Elementos, Tela Cheia e Scroll Down",
        "Criar um app de Caderno de Receitas com Tiny DB",
        "Fazer Operações de Adicionar, Editar e Excluir Dados em Banco de Dados Local Tiny DB",
        "Propriedades de Componentes e Alinhamentos",
        "Tela de Abertura com Contagem Regressiva",
        "Listas Paralelas",
        "ListViews Dinâmicas",
        "TinyDB para salvar dados na memória",
        "Adicionar Receitas Novas",
        "Editar ou Excluir Receitas existentes",
        "Alertas com Botões na Tela",
        "Criar aplicativos com o MIT App Inventor sem Codificação usando Banco de Dados Fusion Tables",
        "Criar um app de Classificados Estilo OLX (Sem Imagem) com Banco de Dados na Nuvem",
        "Sistema de Cadastro e Login de Usuários com Verificação",
        "Configurar projetos com Fusion Tables e Tabelas",
        "Cadastro de Usuários com Validação de Campos",
        "Busca em Banco de Dados",
        "Lista (Listview) preenchida por Banco de Dados",
        "Tela de Detalhes de Produtos do Banco de Dados",
        "Atualizar Dados do Usuário",
        "Cadastrar, Editar, Visualizar e Excluir Classificados",
        "Dicas de Performance"
      ],
      "course_content": {
        "Introdução": [
          "Introdução da Plataforma Udemy",
          "Apresentação da Parte 1 do Curso",
          "Codificação X Programação",
          "Criar uma Conta e um Projeto",
          "DESCONTÃO PARA OUTROS CURSOS",
          "LINKS DE DESCONTOS PARA ALUNOS ATUAIS"
        ],
        "Versões e Sincronização": [
          "Exportar e Importar Versões de Projetos",
          "Sincronizar Celular com MIT App Inventor",
          "Conectando Emulador",
          "Tela Cheia, Esconder Título e Scroll Down",
          "Propriedades de Componentes e Alinhamento"
        ],
        "Aulas Grátis": [
          "Mais de 200 Aulas 100% Grátis Para Você!"
        ],
        "Parte 1 - Iniciante (Dicionário e Editor de Imagens)": [
          "Imagens e Sons do Projeto",
          "Projeto AIA (Parte 1 - Iniciante)",
          "Menu Inicial e Navegação",
          "Início do Dicionário - Apresentação do Dicionário",
          "Botão, Textbox, Label e Concatenação",
          "Confere Se A Busca Está No Dicionário",
          "Cruzando Listas e Significado",
          "Adicionando Imagens",
          "Adicionando Som e Visibilidade de Elementos",
          "Text To Speech (Android Falando)",
          "Início do Editor de Imagens - Desenhando Círculos no Canvas",
          "Desenhando Linhas No Canvas",
          "Limpar Canvas e Trocar Cores",
          "Tirar Fotos ou Pegar Da Galeria",
          "Salvar Imagens no Celular",
          "Conclusão da Parte 1 - Seção Iniciante"
        ],
        "Parte 2 - Intermediário (Caderno de Receitas com Banco de Dados Local Tiny DB)": [
          "Download do Projeto Intermediário (Tiny DB)",
          "Tela de Abertura (Splash Screen)",
          "Adicionar Títulos de Receitas",
          "Salvando Lista na Memória",
          "Limpar Base do TinyDB",
          "Adicionando Receitas de Outra Tela",
          "Tela de Edição e Navegando Índice da Lista",
          "Ingredientes e Como Fazer",
          "Notificando o Usuário",
          "Limpar Campos Após Adicionar Receita",
          "Editando Títulos das Receitas Adicionadas",
          "Atualizar Ingredientes e Como Fazer",
          "Deletar Receita",
          "Conclusão da Parte 2 - Seção Intermediária"
        ],
        "Parte 3 - Intermediário/Avançado (Quizz com Tiny DB)": [
          "Arquivos do Quizz",
          "Menu Inicial e Navegação",
          "Splash Screen",
          "Menu Inicial (Design)",
          "Mensagem de Boas Vindas e Banco de Dados Local",
          "Tela de Quizz (Design)",
          "Acertos ou Erros com Uma Pergunta",
          "Próximas Perguntas e Conferindo Respostas",
          "Fim de Jogo e Botão Voltar",
          "Pontuação do Jogador",
          "Indicador de Questões",
          "Trocando Imagens",
          "Trabalhando com Categorias",
          "Conclusão"
        ],
        "Parte 4 - Avançado (Banco de Dados Firebase)": [
          "Início",
          "Importar e Exportar Projetos App Inventor/Kodular/Thunkable",
          "Instalar Aplicativo ou usar Companion",
          "Splash Screen",
          "Criando Projeto Firebase",
          "Tela De Login (Design)",
          "Tela De Login (Programação)",
          "Tela de Cadastro (Design)",
          "Tela de Cadastro (Programação)",
          "Usando UID Estático",
          "Tela de Início (Design)",
          "Tela de Início - Lista Local",
          "Tela de Adicionar Notas (Design)",
          "Tela de Adicionar Notas (Programação)",
          "Operações com Strings",
          "Extensão para Usar Listas (List Utils)",
          "Importando Extensões (List Utils)",
          "ListView com Valores do Banco de Dados",
          "Excluir uma Nota",
          "Tela de Atualização e Carregamento",
          "Buscar um Dado pelo ID",
          "Atualizar uma Nota Online",
          "Arquivo de Extensão Para Upload de Imagens",
          "Tela de Upload de Imagens (Design)",
          "Tela de Upload de Imagens (Programação - Parte 1)",
          "Tela de Upload de Imagens (Programação - Parte 2)",
          "Ajustes Finais e Conclusão",
          "Download do Projeto Final"
        ],
        "Aulas Particulares, Consultoria e Freelances": [
          "Aulas Particulares, Consultoria e Freelances"
        ]
      },
      "requirements": [
        "Computador com Acesso a Internet"
      ],
      "description": "Qual é a melhor forma de validar sua ideia sem gastar milhares de dólares? Criando um Protótipo e testando!\nTorne-se um desenvolvedor de aplicativos sem precisar codificar e valide suas ideias usando o MIT App Inventor 2, uma ferramenta gratuita e online criada pelo Google e pelo MIT.\nVocê aprenderá do ZERO (Não requer conhecimento prévio com programação) a utilizar a ferramenta para criar aplicativos para Android com mais de 74 aulas e mais de 8 horas de vídeo nesse curso que é a mistura de 3 cursos (Iniciante, Intermediário com Banco de Dados Local Tiny DB e Avançado com Banco de Dados Online do Fusion Tables)\nParte 1\n- Botões\n- Títulos\n- Formulários\n- Menus\n- Listas Paralelas\n- Listviews\n- Sons\n- Imagens\n- Fotos\n- Alinhamento de Elementos\n- Edição de Imagem\n- Tela Cheia e com Scroll Down\n\n\nParte 2\n- Propriedades de Componentes e Alinhamentos\n- Tela de Abertura com Contagem Regressiva\n- Listas Paralelas\n- ListViews Dinâmicas\n- TinyDB para salvar dados na memória\n- Adicionar Receitas Novas\n- Editar ou Excluir Receitas existentes\n- Alertas com Botões na Tela\n\n-Parte 3\n-Configurar projetos com Firebase\n-Splash Screen\n-Cadastro de Usuários com Validação de Campos\n-Sistema de Login\n-Lista preenchida por Banco de Dados\n-Tela de Adição de Dados\n-Atualizar Informações online\n-Cadastrar, Editar, Visualizar e Excluir Anotações\n-Cadastrar, Editar, Visualizar e Excluir Imagens\n-Importar Extensões Externas\n-Dicas de Performance\n-Design Responsivo\n\n\nAlém disso você irá aprender a configurar todo o ambiente no seu computador, instalando um Emulador de Android ou sincronizando o Computador com o Celular para fazer testes em tempo real.",
      "target_audience": [
        "Iniciantes na área de criação de aplicativos",
        "Pessoas que querem aprender a criar aplicativos, sem precisar de codificação",
        "Pessoas que precisam criar aplicativos com informações que fiquem gravadas no celular, mesmo que feche o app",
        "Pessoas que precisam criar aplicativos com informações que fiquem gravadas na nuvem"
      ]
    },
    {
      "title": "Flutter ile Uygulama Geliştirme Kursu | Android & iOS | 2025",
      "url": "https://www.udemy.com/course/flutter-ile-uygulama-gelistirme-kursu-android-ios/",
      "bio": "Profesyonel ve güncel eğitim içeriğiyle temelden ileri seviyeye Flutter & Dart ile Android - IOS uygulama geliştirme.",
      "objectives": [
        "Dart diline hakim olarak programlama yapabileceksiniz.",
        "Android ve IOS programlama dünyasının detaylarına hakim olacaksınız.",
        "Tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.",
        "Aklınıza gelebilecek olan tüm fikirlerinizi mobil uygulamaya dönüştürebileceksiniz.",
        "Geliştirdiğiniz uygulamanızı Google Play ve App Store gibi platformlar ile birçok kişiye ulaştırabileceksiniz."
      ],
      "course_content": {},
      "requirements": [
        "Temel bilgisayar kullanma becerisine sahip olmak.",
        "Ortalama bir bilgisayara sahip olmak.",
        "Bilgisayarınıza programlama yapmak için Android Studio IDE yüklemek."
      ],
      "description": "Android ve IOS platformunda mobil uygulama geliştirmek istiyorsanız doğru adrestesiniz.\nTemel seviyeden ileri seviyeye kadar Android ve IOS uygulama geliştirme alanında gelişim sağlayacaksınız.\n2011 yılından beri 1000lerce insana profesyonel bir şekilde Android uygulama geliştirme eğitimi veriyorum.\nSon yıllarda Android ve IOS eğitmeni olarak BT AKADEMİ , BİLGİNÇ İT ACADEMY VE BAŞARISOFT gibi kurumsal şirketlerde eğitmen olarak görev yapıyorum.\nÖğrencilerimizin tamamına yakını yüksek memnuniyet ile kursumuzu tamamladılar ve kendi alanlarında mobil uygulama geliştirici olarak çalışmaktalar.\nEğitim kurumlarında edindiğim tecrübe ile bu online kursu sizler için tasarladım.\nEğitim müfredatının verimli, profesyonel ve düzenli olması için çok zaman harcadım.\nRahatlıkla Eğitim müfredatı olarak en düzenli içeriğe sahip bu kurs diyebilirim.Bu eğitim içeriğinin yapısını ve kalitesini diğer kurslar ile kıyaslayabilirsiniz.\nKursun sonunda tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.\nBu kurs bir çok teknoloji ve yazılım araçları içermektedir. PHP, Firebase, Http, MYSQL, SQLite ve bunun gibi bir çoğu.\nBunları bilmiyorsanız endişelenmenize gerek yok, Eğitimde en temel seviyeden ileri seviyeye kadar gelişim sağlayacaksınız.\nEğitim içeriği konu başlıkları ;\nDart Bölümü :\nDart Giriş\nDeğişkenler ve Veri Tipleri\nStandart Programlama Yapıları\nNesne Tabanlı Programlama\nCollections\nString Yapısı\nİleri Dart\nFlutter Bölümü :\nFlutter Giriş\nAndroid Studio Proje Dizini\nFlutter Tasarım\nFlutter Çalışma Yapısı\nFlutter Widgets\nFlutter Kullanıcı Etkileşimi\nMaterial Design\nFlutter Depolama İşlemleri\nİleri Flutter\nİnternet Tabanlı İşlemler\nFlutter Lokasyon İşlemleri\nProgramlama Öğrenmek Neden Önemli ?\nHer geçen gün yazılım hayatımızın en derinine kadar iniyor.Hayatımızı kolaylaştırırken yazılımcılara büyük bir iş alanı açılıyor.Çok geç olmadan bu dijital çağa ayak uydurmalı ve yazılım sektöründe yer almalısınız.Bu dijitalleşen çağda ortalama bir bilgisayar ile kendinize yeni bir iş fırsatı yaratabilirsiniz.Özellikle mobil uygulama geliştirme sayesinde tek başınıza istediğiniz her yerden projeler geliştirebilirsiniz.Hangi meslek ve eğitimden olduğunuz yazılımcı olmak için önemsizdir.Her yaşta bu beceriyi kazanabilirsiniz.\nBir eğitimci olarak hazırladığım eğitim müfredatı ile profesyonel seviyeye gelmek sizin elinizde.Tek yapmanız gereken zamanızı ayırarak geleceğinizi değiştirecek yazılım becerisini kazanmak için çabalamak.\nGelin birlikte bu yola çıkalım ve size değer katalım…\n\n\nBaşarılar dilerim.\n\n\nEğitimi incelediğiniz için teşekkürler…",
      "target_audience": [
        "Hangi meslekten olduğunuzun veya Hangi eğitimi aldığınızın yazılımcı olmak için önemi yoktur.",
        "Programlamaya ve teknolojiye ilginizin ve merakınızın olması yeterlidir.",
        "Her yaşta bu beceriyi kazanabilirsiniz."
      ]
    },
    {
      "title": "Curso Completo Desenvolvimento iOS 11 Swift 4 - Crie 20 Apps",
      "url": "https://www.udemy.com/course/curso-completo-de-desenvolvimento-ios11swift4/",
      "bio": "Torne-se um desenvolvedor iOS através da criação de 20 apps e games completos utilizando Swift 4, Xcode 9 e iOS 11!",
      "objectives": [
        "Como criar os mais diversos tipos de aplicativos e games para iPhones e iPads"
      ],
      "course_content": {
        "Preparando seu ambiente de desenvolvimento": [
          "Hardware e Software necessários",
          "Baixando e instalando o Xcode 9",
          "Conhecendo a interface",
          "Explorando os principais painéis e áreas",
          "Storyboard e Interface Builder",
          "Playground"
        ],
        "Criando seu primeiro App": [
          "Aplicativo 1: IMC",
          "Adicionando os arquivos do projeto",
          "Inserindo os campos de texto, labels, botões e imagens",
          "Ajustando o layout e conectando os elementos ao código",
          "Hora de programar: vamos calcular o IMC",
          "Testando o aplicativo no simulador"
        ],
        "A linguagem Swift": [
          "Aplicativo 2: Conversores",
          "Conversores: Preparando o projeto",
          "Variáveis e comentários",
          "Tipos: Bool, String, Float, Int, Character, Double",
          "Entendendo os Optionals",
          "Operadores (parte 1)",
          "Operadores (parte 2)",
          "Estruturas condicionais: If - Else / Switch",
          "Finalizando aplicativo Conversores",
          "Aplicativo 3: Loteria",
          "Utilizando Arrays",
          "Manipulando Dicionários",
          "Trabalhando com Set e Tuplas",
          "Controle de Fluxo: While e For In",
          "Enumeradores (Enum)",
          "Estruturas",
          "Funções (parte 1)",
          "Funções (parte 2)",
          "Closures",
          "Tratamento de Erros",
          "Operadores personalizados",
          "Aplicativo Loteria: Preparando as telas",
          "Finalizando Aplicativo Loteria"
        ],
        "Orientação a Objeto em Swift": [
          "Aplicativo 4: SwiftQuiz",
          "Classes, objetos, propriedades e métodos",
          "Herança",
          "Encapsulamento",
          "Polimorfismo e TypeCasting",
          "Extensões (Extensions)",
          "Protocolos (Protocol)",
          "Classes vs Structs e Gerenciamento de memória: ARC",
          "Subscript e Generics",
          "SwiftQuiz: Preparação das telas",
          "SwiftQuiz: Implementando as classes",
          "SwiftQuiz: Finalização"
        ],
        "Fundamentos de Desenvolvimento iOS": [
          "Entendendo MVC: Model-View-Controller",
          "Ciclo de vida (App e Views)",
          "Segue: Navegando entre telas",
          "Trabalhando com UIViews, IBOutlets e IBActions",
          "Navegação com UINavigationController",
          "Aplicativo 5: Super Senha",
          "SuperSenha: Preparando o projeto",
          "SuperSenha: Criando Gerador de Senhas",
          "SuperSenha: Gerando Senhas"
        ],
        "Layout e principais componentes": [
          "Trabalhando com textos: UILabel",
          "Usando botões: componente UIButton",
          "Entrada de dados com UITextField",
          "Delegates de UITextField",
          "Aplicativo 6: Mensagens",
          "Mensagens: Preparando o projeto",
          "Trabalhando com UISlider e UISwitch",
          "Compreendendo Delegate",
          "Pontos vs Pixels: Entendendo imagens em iOS",
          "Utilizando UIImageView",
          "Guidelines e como preparar os ícones do seu App",
          "Aplicativo 7: ComprasUSA",
          "ComprasUSA: Preparando o projeto",
          "Navegando entre telas com UITabBarController",
          "Auto Layout: Trabalhando com vários tamanhos de tela",
          "Auto Layout: Criando e manipulando Constraints",
          "Auto Layout parte 2: Mais constraints",
          "Organizando componentes com UIStackView",
          "Auto Layout parte 3: Utilizando Size Classes",
          "Criando Calculador de Taxas",
          "Exibindo valores com NumberFormatter"
        ],
        "Trabalhando com dados permanentes": [
          "Aplicativo 8: Pensamentos",
          "Visual Effect View, Aspect Ratio e UISegmentedControl",
          "Entendendo o Info.plist: Usando fontes customizadas",
          "Trabalhando com Bundle e arquivos JSON",
          "Timer e Content Compression Resistance Priority",
          "Persistindo dados com o UserDefaults",
          "Settings Bundle: Como salvar configurações do App",
          "Disparando notificações com NotificationCenter"
        ],
        "Listando dados: UITableView e UITableViewController": [
          "Aplicativo 9: Campeões Das Copas",
          "Criando tabelas: UITableViewController",
          "Alimentando tabelas: UITableViewDatasource",
          "Preenchendo células: UITableViewCell",
          "Configurando células personalizadas",
          "Criando classes UITableViewCell",
          "Preparando tela de informações da copa",
          "Trabalhando com TableView em ViewControllers",
          "Agrupando células em seções"
        ],
        "Manipulando mapas e a localização do usuário": [
          "Aplicativo 10: QueroConhecer",
          "Usando mapas (MapKit), Color Set e Activity Indicator",
          "CLGeocoder: Pesquisando cidades e locais diversos",
          "Definindo regiões no mapa e usando alertas",
          "Escolhendo pontos no mapa com Gesture Recognizers",
          "Salvando locais no device (JSONEncoder)",
          "Adicionando pontos no mapa (MKAnnotation)",
          "Personalizando Annotations",
          "Pesquisando Pontos de Interesse com UISearchBar",
          "Recuperando a localização do usuário com CoreLocation",
          "Manipulando a câmera do mapa: Mapas em 3D",
          "Criando rotas"
        ],
        "Persistência e manipulação de dados com CoreData": [
          "Aplicativo 11: MyGames",
          "Entendendo Core Data",
          "Preparando as telas",
          "Preparando as telas (parte 2)",
          "Configurando o modelo de dados e os relacionamentos",
          "Inserindo jogos no banco",
          "Trazendo lista de jogos cadastrados",
          "Vinculando plataformas a jogos usando UIPickerView",
          "Atribuindo fotos aos nossos jogos",
          "Como alterar/excluir jogos e usar a Debug View Hierarchy",
          "Pesquisando resultados (UISearchController) e entendendo Delete Rules"
        ]
      },
      "requirements": [
        "Conhecimentos básico de como trabalhar com um computador e força de vontade"
      ],
      "description": "Todo ano, milhares de aplicativos novos chegam aos nossos celulares e dezenas de novas empresas e desenvolvedores conseguem alcançar seus objetivos e sonhos. Agora, chegou a sua vez de tirar do papel aquela ideia brilhante de aplicativo que sempre desejou fazer!\nTalvez você não tenha algum app em mente, mas é uma pessoa que sonha em mudar de carreira e trabalhar como desenvolvedor iOS, que atualmente é uma das profissões em alta no mercado de desenvolvimento, ou então, pode ser que você já seja um desenvolvedor profissional, mas quer conhecer melhor e se aprimorar nos frameworks disponíveis nas plataformas Apple.\nNão importa em que cenário você se encaixe, independente do seu nível de conhecimento ou de seus objetivos, tenho certeza que esse curso é para você.\nCom o Curso completo de Desenvolvimento iOS11/Swift4: Crie 20 Apps, você aprenderá como programar para iPhones e iPads utilizando as tecnologias mais recentes disponíveis pela Apple. Ao longo de 20 aplicativos reais e 100% funcionais que iremos construir passo-a-passo, na prática e com explicações detalhadas de cada etapa do processo, você entenderá como funciona, desde a concepção até a publicação na loja, o desenvolvimento de um Aplicativo. Ao final do curso você estará apto a criar seus próprios apps, independente da tecnologia ou recurso que ele necessite.\n\"Mas eu não tenho Mac, posso fazer o curso?\" - Claro que sim, darei dicas de como utilizar serviços que lhe fornecem um Mac na nuvem para que você possa acompanhar TODO o curso e desenvolver todos os projetos, mesmo que não possua um computador da Apple.\nAprenderemos a criar aplicativos que utilizam os mesmos recursos existentes em Apps de sucesso como Instagram, Uber, FlappyBird, dentre outros, e ao longo do curso irei demonstrar as melhores práticas de desenvolvimento utilizadas no mercado. Veja alguns dos recursos que serão abordados:\nUso de Mapas e GeoLocalização\nManipulação de Banco de Dados\nUtilização de APIs e serviços na nuvem\nManipulação de arquivos\nCriação de games\nUso da câmera e manipulação de fotos, vídeos e sons\nReconhecimento e interpretação de objetos\nE muito, muito mais...\nNão importa o seu grau de conhecimento, se você nunca programou ou se já é um desenvolvedor experiente, este curso foi projetado para atender a todo o público, com assuntos e tópicos que irão desde a introdução à orientação a objetos até temas mais avançados como manipulação de imagens e reconhecimento de objetos.\nMeu nome é Eric Brito e procurei condensar neste curso todos os assuntos e temas que sempre eram solicitados pelos diversos alunos que tive ao longo dos últimos anos, tudo de maneira prática e bem didática.\nTenho certeza que juntos iremos construir uma base sólida de conhecimento que permitirá a você alcançar seus sonhos e objetivos!",
      "target_audience": [
        "Qualquer pessoa disposta e interessada a aprender como se tornar um programador Apple e tirar seus aplicativos do papel!"
      ]
    },
    {
      "title": "Android Nougat | De Principiante a Profesional Pagado",
      "url": "https://www.udemy.com/course/android-nougat/",
      "bio": "Curso Actualizado de Programación de Apps Android con Java y Android Studio",
      "objectives": [
        "Aprenderas las bases de la programación con Java de la forma más fácil y eficiente posible.",
        "Al terminar el curso tendrás el conocimiento necesario para crear apps nativas Android en su versión más nueva"
      ],
      "course_content": {
        "Introducción": [
          "Acerca del Curso",
          "Grupo de Facebook",
          "Bienvenida de Instructor Juan Villalvazo"
        ],
        "El IDE BlueJ | Nuestra herramienta de trabajo para aprender a programar con Java": [
          "IDE \" Entorno de Desarrollo Integrado \"",
          "Instalar BlueJ en Windows",
          "Instalar BlueJ en Mac OS"
        ],
        "Introducción a BlueJ y Java": [
          "Introducción a BlueJ y java",
          "Nuestro Primer Programa en Java"
        ],
        "El Lenguaje de Programación Java": [
          "Variables y Tipos de Datos",
          "Constantes y Palabras reservadas",
          "La estructura if else y los operadores lógicos Parte 1",
          "La estructura if else y los operadores lógicos Parte 2",
          "if Anidados y la Estructura Switch Case",
          "Arreglos"
        ],
        "Ciclos en Java": [
          "Ciclos | Estructuras repetitivas",
          "El ciclo For",
          "El ciclo while y do while"
        ],
        "La programación Orientada a Objetos": [
          "Introducción a la programación Orientada a Objetos | Teoría",
          "Introducción a métodos",
          "Introducción a la programación Orientada a Objetos",
          "Creación y uso de objetos de manera visual| Propiedades, constructores y métodos",
          "Creación y uso de objetos con código Java| Múltiples constructores",
          "Herencia"
        ],
        "Instalación de Android Studio en Mac OS X": [
          "Android Studio",
          "Android Studio en Mac OS X | Parte 1",
          "Android Studio Beta en Mac OS X | Parte 2",
          "Android Studio en Mac OS X | Parte 3",
          "Gracias"
        ],
        "Su Instructor y el Primer Proyecto Android": [
          "Presentación",
          "Introducción al Proyecto"
        ],
        "Conociendo nuestras herramientas": [
          "Instalando Java JDK en Windows",
          "Instalando Android Studio 2.2",
          "Creando el Proyecto...Color Quotes!",
          "Paseo por Android Studio 2.2 Beta",
          "Instalando Nuestro Emulador",
          "Ejecutando nuestra App"
        ],
        "Layouts Básicos en Android": [
          "Constraint Layout y Relative Layout",
          "Cambiando el tema de la aplicación",
          "TextView",
          "Button",
          "Views"
        ]
      },
      "requirements": [
        "Solo se requiere una computadora con Windows , macOS o Linux y descargar BlueJ y Android Studio de manera gratuita (Aquí te mostramos como hacerlo)"
      ],
      "description": "Android Nougat: Curso de Desarrollo de Aplicaciones Móviles\nAprende a programar de una forma fácil, práctica y orientada a proyectos. En este curso te enseñamos como programar aplicaciones completas para Android así como el razonamiento detrás de las cosas. Otros cursos te prometen enseñarte a programar un gran número de aplicaciones, pero lo que no te dicen es que son aplicaciones que no tienen ninguna aplicación práctica en el mundo laboral y no te explican la lógica detrás de su funcionamiento.\nAquí aprenderás todo lo necesario para tener habilidades profesionales de desarrollo de aplicaciones nativas en Android.\n¿Por qué tomar este curso?\nNuestro primer curso “Como desarrollar una aplicación para Android” sorprendió a la comunidad de Udemy. Era el primer curso realmente actualizado que te enseña desarrollar una app nativa completamente en español con cientos de calificaciones de 5 estrellas.\nEn este curso utilizamos los mismos métodos de aprendizaje que llevaron al anterior curso a su rotundo éxito, pero de una manera más grande y mejor todavía. Las características de este curso completo son :\nAprendizaje orientado a proyectos – No solamente te enseñaremos a programar, también sabrás como hacer aplicaciones completamente nativas y funcionales.\nPara todos los niveles – Este curso inicia desde cero con las bases de java hasta enseñarte temas avanzados de Android.\nCompletamente actualizado – No enseñamos cosas obsoletas, utilizamos la última tecnología de Android Studio 2.2 y Android Nougat.\nComunidad increíble – Tenemos un grupo de estudio en Facebook donde todos los estudiantes se ayudan mutuamente para resolver sus dudas.\nHoras y horas de contenido en sus más de 130 lecciones.\n¿Cómo esta estructurado el curso?\nPrimero el instructor Juan Villalvazo ( Autor de cursos \"Best Sellers\" en Udemy), los introducirá al mundo de Java. Después Aldo Olivares ( Experto en desarrollo Android) les enseñara como aplicar ese conocimientos de java para poder construir una aplicación de Android sencilla, para después ver diversos temas avanzados de Android y crear apps más complejas en el resto del curso.\n¿Qué obtendré?\nComunidad increíble y atención de primera por parte de los instructores.\nHoras y horas de contenido en sus más de 130 lecciones.\nCertificado de terminación del curso.\nHabilidades que prodrás aplicar en toda tu vida como desarrollador.\n¿Cuáles son los requerimientos?\nTener una computadora con Windows, macOS o Linux.\nUn dispositivo Android es recomendado, pero no es necesario.\n¿Para quién es este curso?\nEste curso está orientado a principiantes que incluso no tienen experiencia en programación o para programadores que quieren aprender a hacer aplicaciones para Android.\nPor último recuerda que este curso tiene garantía de 30 días exclusiva de Udemy.\nTe invitamos a que formes parte de nuestra comunidad, muchas gracias.",
      "target_audience": [
        "Para toda persona que quiera aprender a crear aplicaciones en Android de la manera más completa y fácil posible.",
        "Este curso inicia desde cero, así que es perfecto para las personas que apenas quieren aprender a programar.",
        "Este curso NO es para expertos y gurus de la programación en Java y Android"
      ]
    },
    {
      "title": "สร้างแอปพลิเคชันบน Android และ iOS ด้วย Flutter",
      "url": "https://www.udemy.com/course/android-ios-flutter/",
      "bio": "เรียนรู้การสร้าง mobile application บน iOS และ Android ด้วย Flutter เครื่องมือที่พัฒนาโดย Google",
      "objectives": [
        "สามารถสร้างแอพลิเคชันบน Android และ iOS ด้วย Flutter",
        "ได้รับความรู้เกี่ยวกับภาษา Dart",
        "ได้เรียนรู้เกี่ยวกับ Material Design",
        "เรียนรู้การเชื่อมต่อกับ SQLite",
        "การใช้งาน Web Service",
        "QR Code Scanner",
        "การทำระบบ Login",
        "การ Build แอพ สำหรับ iOS และ Android"
      ],
      "course_content": {
        "สิ่งที่ต้องรู้ก่อนการเรียน": [
          "คำอธิบายเบื้องต้นเกี่ยวกับวีดีโอนี้ เพื่อประกอบการตัดสินใจซื้อ",
          "เกี่ยวกับ Flutter"
        ],
        "การติดตั้งซอฟท์แวร์และเครื่องมือที่จำเป็นในการเขียนแอพลิเคชันด้วย Flutter": [
          "การติดตั้งบน Windows",
          "การติดตั้งบน macOS"
        ],
        "การสร้างโปรเจค Flutter ด้วย Android Studio และ VSCode": [
          "การสร้างโปรเจค Flutter"
        ],
        "โครงสร้างของโปรเจค Flutter และ การใช้งานพื้นฐาน": [
          "เรียนรู้โครงสร้างของโปรเจค Flutter และพื้นฐานการทำงานของ Flutter"
        ],
        "การกำหนดตัวแปร และ ชนิดของตัวแปรใน Dart": [
          "เรียนรู้การสร้างตัวแปร และ ชนิดของตัวแปรในภาษา Dart"
        ],
        "เรียนรู้ Scaffold เพื่อสร้างเพจสำหรับแอพ": [
          "เรียนรู้การสร้างเพจสำหรับแอพ ด้วย Scaffold"
        ],
        "การสร้าง FloatingActionButton": [
          "เรียนรู้การใช้งาน FloatingActionButton"
        ],
        "เรียนรู้การสร้าง BottomNavigationBar": [
          "เรียนรู้การสร้าง BottomNavigationBar"
        ],
        "การเพิ่มฟอนท์ (Font) และรูปภาพ (Image)": [
          "การเพิ่ม Font และการใช้งาน Font",
          "การเพิ่มภาพ"
        ],
        "การจัดการ Layouts": [
          "การจัดการ Layout ด้วย Column และ Row"
        ]
      },
      "requirements": [
        "มีความรู้พื้นฐาน Material Design",
        "มีความรู้พื้นฐาน JavaScript",
        "มีความรู้พื้นฐานเกี่ยวกับ SQL หรือ SQLite"
      ],
      "description": "เนื้อหาที่นำมาทำวีดีโอ ส่วนหนึ่ง เป็นเนื้อหาที่ได้ จากการบันทึก ระหว่างอบรม ซึ่งผมสอน เมื่อวันที่ 7-8 กรกฎาคม 2561 ที่ นนทบุรี และบางส่วนบันทึกขึ้นใหม่ เพื่อให้เนื้อหาสมบูรณ์มากขึ้น เนื้อหา ประกอบไปด้วย\n- การติดตั้ง\n- การสร้างโปรเจคสำหรับ Flutter\n- การออกแบบ Layout\n- ใช้งาน FloatingAction\n- Navigator และ Routing และการส่งผ่านตัวแปรระหว่างเพจ\n- SQLite แบบ CRUD\n- การใช้งาน DatePicker และเปลี่ยนวันที่ให้เป็น ภาษาไทย\n- Alert dialog, Confirm dialog\n- SnackBar\n- Dropdown menu\n- Form validate\n- Web Service และ JSON\n- การ Build เพื่อขึ้น Store สำหรับ App Store และ Play Store\n\n\nอัปเดทล่าสุด (Last updated)\nวันที่ 22/04/2020\n- เพิ่ม Source code แอป Covid-19 Dashboard\nวันที่ 04/05/2019\n- Geolocation\n- MQTT\n- PushNotify (FCM, node-gcm)\n- Google Map\n- Google Chart\n- Node.js (Express)\nวันที่ 9/10/2018\n- การใช้งาน Flutter เรียกใช้งาน RESTful API (Node.js + MySQL) แบบ CRUD\nวันที่ 18/09/2018\n- การออกแบบหน้าจอ Login\n- การใช้งานกล้อง (Camera)\n- Google Sign In\n- Facebook Sign In\n- Icon font (IcoMoon)\n\n\nเนื้อหาบางช่วงอาจมีเสียงรบกวนบ้าง แต่ผมได้ทำการตัดต่อคลิปแล้ว ดังนั้นเพื่อให้เป็น ประโยชน์และความคุ้มค่าของผู้เรียนที่เสียเงินเพื่อซื้อครอสนี้ รบกวนช่วยดูวีดีโอตัวอย่างก่อน การตัดสินใจซื้อนะครับ เนื้อหาที่ผมสอน เน้นการประยุกต์ใช้งาน เพื่อนำไป พัฒนาต่อยอด อาจจะไม่ได้ครอบคลุม ทุกเรื่อง สำเนียงภาษาอาจจะไม่สะดุดหูเท่าไหร่ ต้องขออภัยไว้ ณ ที่นี่ ด้วยนะครับ\n\nหมายเหตุ : เนื้อหาจะมีการอัปเดทเรื่อยๆ เพื่อให้ผู้เรียน ได้เรียนรู้การสร้างแอพ ด้วย Flutter เพื่อใช้ในกรณีต่างๆ ซึ่งจะเป็นประโยชน์ สำหรับการนำไปพัฒนา ต่อยอดได้ ดังนั้น ซื้อครอสนี้แล้ว สามารถอัปเดทเนื้อหาได้เรื่อยๆ ครับ",
      "target_audience": [
        "นักพัฒนาแอปพลิเคชันทั้งบน Android และ iOS",
        "ผู้มีความสนใจเทคโนโลยีสมัยใหม่",
        "ผู้ที่ต้องการหาสิ่งแปลกใหม่ หรือ แนวทางใหม่ในการพัฒนาแอปพลิเคชัน"
      ]
    },
    {
      "title": "Chatbot para Telegram com Node + 3 Projetos",
      "url": "https://www.udemy.com/course/chatbot-para-telegram-com-node/",
      "bio": "Crie oportunidades de negócio fantásticas automatizando tarefas com bots no Telegram! Curso 100% Prático! Curso Chatbot",
      "objectives": [
        "Utilizar o telegram como interface para aplicações simples",
        "Criar Chatbots para apresentar os serviços de uma empresa",
        "Criar Chatbots para automatizar tarefas do dia a dia",
        "Enviar mensagens para os usuários através de Chatbot",
        "Monitorar eventos sendo notificado pelo Bot",
        "Criar interfaces ricas de comunicação com os usuários dentro de um chat"
      ],
      "course_content": {
        "Introdução": [
          "Visão Geral do Curso",
          "Oportunidades de Negócio com Bots",
          "Repositório do Curso",
          "Usando o terminal",
          "Terminais"
        ],
        "Configuração do Ambiente": [
          "Aviso importante aos usuários de Windows",
          "Instalação Node (Windows/Mac)",
          "Configuração do Editor (VSCode)",
          "Configuração do Comando 'code'"
        ],
        "Fundamentos": [
          "Criando um Bot com BotFather",
          "Configurando o Projeto",
          "Arquitetura de Middlewares",
          "Armazenando as Variáveis de Ambiente",
          "Primeiro Bot",
          "Desafio Único Usuário",
          "Desafio Único Usuário (Resposta)",
          "Trabalhando com Eventos",
          "Respondendo Com Reply",
          "Obtendo Arquivos (Telegram API)",
          "Respondendo à Textos Específicos",
          "Teclado Personalizado",
          "Criando Command",
          "Teclado Inline (Botões)"
        ],
        "Projeto #01": [
          "Lista Compras",
          "Testando Lista Compras",
          "Lista Compras (Sessão)",
          "Testando Lista Compras (Sessão)",
          "Adicionando User ID ao .env",
          "Lista Compras (Middleware)",
          "Lista Compras (Grupos)",
          "Testando Lista Compras (Grupos)"
        ],
        "Projeto #02": [
          "Personalizando o Avatar do Bot",
          "Bot do Curso #01",
          "Bot do Curso #02",
          "Bot do Curso #03",
          "Bot do Curso #04"
        ],
        "Avançados": [
          "Usando Cenas (Stage/Scene)",
          "Usando Wizard (Stage/WizardScene)",
          "Usando Edit Message Text",
          "Obtendo Chat ID",
          "Envio de Mensagens Assíncronas",
          "Agendando Mensagens Assíncronas (Cron)"
        ],
        "Projeto Final - Agenda": [
          "Agenda #01",
          "Agenda #02",
          "Agenda #03",
          "Agenda #04"
        ],
        "Conclusão": [
          "Obrigado e Até Breve"
        ]
      },
      "requirements": [
        "Conhecimento de Javascript"
      ],
      "description": "Seja muito bem vindo ao curso de Chatbot para Telegram com Node.\n\nNesse curso, você verá como é muito simples criar um bot no Telegram para automatizar diversas atividades do seu dia-a-dia e da sua empresa também.\nO curso é 100% prático, onde será mostrado o poder do uso do Telegram como uma interface de comunicação entre o usuário e o seu sistema. Os bots serão criados em Node.js utilizando uma biblioteca que vai simplificar ainda mais nosso desenvolvimento.\n\nAlém de apresentar várias formas para tratar mensagens do usuários e como você pode apresentar seu conteúdo de maneira melhor estruturada, também faremos 3 projetos para abrir a sua mente nesse novo mundo de comunicação e te ajudar a ter novas ideias:\nLista de compras\nAgenda de eventos\nChatbot de apresentação do curso\nAo final do curso, você terá uma boa base dos principais recursos de interface para desenvolver seus próprios bots. As possibilidades são infinitas, cabendo a você aplicá-las às suas necessidades. ;)",
      "target_audience": [
        "Programador Javascript que deseja aprender a criar Chatbot"
      ]
    },
    {
      "title": "Experto en Firebase para Android con Java y MVP 2019",
      "url": "https://www.udemy.com/course/especialidad-en-firebase-para-android-con-mvp-profesional/",
      "bio": "Apps Android nivel profesional con Firebase, Firestore, Push Notifications, Auth, Android Studio, Patrones Diseño, PHP.",
      "objectives": [
        "Desarrollar una app profesional tipo chat y red social con múltiples servicios de Firebase.",
        "Enviar notificaciones push a un dispositivo android o a un grupo(FCM).",
        "Subir y bajar fotografías a la nube(Firebase Storage) desde la galería, cámara o google fotos.",
        "Iniciar sesión con Redes Sociales(Facebook, Google o email/contraseña).",
        "Crear aplicaciones con bases de datos en tiempo real(Firebase Realtime Database y Cloud Firestore).",
        "Implementar Firestore en un proyecto y ver las diferencias con Realtime Database.",
        "Conocer a profundidad que es y como usar Firebase correctamente en Android.",
        "Programar profesionalmente con patrones de diseño para android con MVP, Singleton y SRP.",
        "Análisis de nuestra app, comportamiento de usuarios, errores, funciones más utilizadas y más con Google Analitycs for Firebase.",
        "Modificar el comportamiento y/o aspecto de forma remota sin enviar una actualización a la Goolge Play Store.",
        "Utilizar librerías en Android Studio para el tratamiento de imágenes, comunicación entre clases, vinculación de vistas y más.",
        "Tener un entorno de desarrollo completo para android, y así crear y probar las aplicaciones.",
        "Usar PHP en un servidor externo para el envío de notificaciones entre dispositivos."
      ],
      "course_content": {
        "Antes de comenzar(importante)": [
          "¿De que va el curso? ¿Es para mi?",
          "Conoce a tu instructor",
          "Comunidad de estudiantes en Discord",
          "No valores antes de tiempo",
          "Solución a problemas comunes"
        ],
        "Fundamentos en Firebase y primeros pasos con Android Studio.": [
          "Introducción",
          "Instalar Android Studio 3.2 en Windows 10",
          "Instalar Android Studio 4 en Mac OS",
          "Inicialización de un proyecto y AVD",
          "Inicialización de un proyecto y AVD[Obsoleto]",
          "Ejecución en dispositivos Reales.",
          "¿Que es Firebase?",
          "Actualización de Android y dependencias(Importante)",
          "Conectar a Firebase(interfaz de Firebase Console actualizada)",
          "Conectar a Firebase[Obsoleto]",
          "Diseñar vista para enviar datos",
          "Librería: Butterknife",
          "Enviar datos a Firebase",
          "Firebase básico",
          "Conclusiones"
        ],
        "Realtime Database, base de datos NoSQL en tiempo real para Android.": [
          "Introducción",
          "¿Como funciona Realtime Database?",
          "Actualización de Android y dependencias",
          "App: Menú de comidas",
          "Añadir vista para agregar",
          "Insertar objeto",
          "Leyendo listado de objetos",
          "Métodos para update y delete",
          "Eliminar objeto",
          "Menú siempre visible",
          "Leer datos una única vez",
          "Actualizar Comida y Uso de un Spinner Parte I",
          "Actualizar Comida y Uso de un Spinner Parte II",
          "Realtime Database",
          "Conclusiones"
        ],
        "Cloud Messaging, notificaciónes push con Firebase para Android": [
          "Introducción",
          "¿Como funciona Firebase Cloud Messaging?",
          "Actualización de Android y dependencias",
          "App: Ofertas",
          "FCM 17.3.1 y Nueva Console de Firebase",
          "Crear Notificación manualmente",
          "Enviar notificación por aplicación",
          "Generar notificación personalizada desde un Servicio.",
          "Notificar a un solo usuario por TokenId",
          "Diseño de vista principal",
          "Enviar notificación por grupo - Topics",
          "SharedPreferences",
          "Contenido adicional de la sección",
          "Firebase Cloud Messaging",
          "Conclusiones"
        ],
        "Firebase Cloud Storage, archivos multimedia remotos.": [
          "Introducción",
          "¿De que va Storage?",
          "Actualización de Android y dependencias",
          "App: Mis Fotografías",
          "Diseño de vista principal",
          "Variables y constantes vitales para un flujo con buenas practicas.",
          "Selección desde la Galería",
          "Subir archivo a Storage",
          "Eliminar y actualizar archivo de Storage",
          "Librería: Glide",
          "Cargar foto",
          "Selección desde la Cámara(Miniatura)",
          "Foto a tamaño completo",
          "Nuevos emuladores",
          "Permisos en tiempo de ejecución",
          "Actividad practica: Permisos para la Cámara",
          "Cloud Storage",
          "Conclusiones"
        ],
        "Firebase Authentication (Correo y Redes Sociales) en Android.": [
          "Introducción",
          "¿Que es Firebase Authentication?",
          "Actualización de Android y dependencias",
          "App: MultiLogin",
          "Añadir FirebaseUI Auth",
          "Emulador con Google Play Store y Facebook",
          "Inicio de sesión con email/password",
          "Cargar datos del usuario",
          "Cierre de sesión",
          "App en Developers Facebook",
          "Inicio de sesión con Facebook",
          "Actividad practica: Cargar imagen de perfil",
          "Cambiar imagen de perfil",
          "Recursos previos a la personalización de FirebaseUI",
          "Interfaz personalizada",
          "Actividad practica: Inicio de sesión con Google",
          "Solución de la AP: Inicio de sesión con Google+",
          "Nueva Interfaz personalizada.",
          "Mostrar progreso al subir imagen a Storage.",
          "Reducir resolución y tamaño en una imagen antes de subir a Storage.",
          "Phone Authentication (Smartphone)",
          "Phone Authentication (Emulated)",
          "Authentication",
          "Conclusiones"
        ],
        "Remote Config, control a distancia con Firebase para Android": [
          "Introducción",
          "¿Que es Remote Config?",
          "Actualización de Android y dependencias",
          "App: Soporte Técnico",
          "Emular una tableta en AVD",
          "Diseño de vista principal",
          "Definir valores por default",
          "Añadir Remote Config",
          "Configurando valores remotos",
          "Aplicando valores locales/remotos",
          "Actividad practica: Colores remotos.",
          "Solución de la AP: Colores remotos.",
          "Parámetros remotos condicionados",
          "Actividad practica: Personaliza el idioma",
          "Mejorando la Experiencia de Usuario",
          "Remote Config",
          "Conclusiones"
        ],
        "Patrón de diseño MVP, Singleton y Principio de Responsabilidad Única en Android": [
          "Introducción",
          "¿Que es MVP?",
          "Actualización de Android y dependencias",
          "App: Inventario(add libraries to Gradle)",
          "Diseño de vista principal",
          "POJO Product y nuevo add en Firebase",
          "Adaptador principal",
          "EventBus",
          "Definición de interfaces MVP",
          "Estructura de paquetes por modulo",
          "Patrón de diseño: Singleton, para Realtime Database",
          "DataAccess: Realtime Database Parte I",
          "DataAccess: Realtime Database Parte II",
          "Listeners vs Callbacks",
          "Implementar al Interactor",
          "Implementar a Presenter",
          "Implementar a View",
          "Métodos add, update y remove en Adapter.",
          "Remover producto",
          "MVP",
          "Vista Add(Nuevo modulo)",
          "Interface View",
          "Archivos previos(Event)",
          "Interface Presenter & Interactor",
          "DataAccess: Realtime Database(Module:Add)",
          "Implementar a Interactor(Module:add)",
          "Implementar a Presenter(Module:add)",
          "DialogFragment",
          "Implementar a View(Module:add)",
          "Actividad practica: Validar datos.",
          "Actividad practica: Validar datos(Solución).",
          "Reglas de seguridad: Validate Add and Delete.",
          "Complementos",
          "Vista Detail(Nuevo Modulo)",
          "Config Fragment",
          "Interface View",
          "Archivos previos(Event, listeners/callbacks)",
          "Interface Presenter & Interactor",
          "DataAccess: Realtime Database(Detail)",
          "Implementar a Interactor(Module:Detail)",
          "Implementar a Presenter(Module:Detail)",
          "Implementar View(Module:Detail)",
          "Guardando datos.",
          "Conclusiones"
        ],
        "App: Texting": [
          "Introducción",
          "Configuraciones iniciales.",
          "Adición de librerías",
          "Diseño del Login",
          "MVP Module: Login",
          "DataAccess: Authentication(Login)",
          "Objetos Pojo y Event",
          "DataAccess: Realtime Database(Login)",
          "Implementar Interactor(Module:Login)",
          "Implementar Presenter(Module: Login)",
          "Implementar View(Module: Login)",
          "Configuraciones finales de Login",
          "Mejora: Validación en User",
          "Diseño de la vista principal",
          "Diseño de Usuario para el listado",
          "Diseño de Solicitud para el listado",
          "MVP Module: Main",
          "Event & Listener",
          "DataAccess: Authentication(Main)",
          "DataAccess: Realtime Database(Main) Parte I",
          "DataAccess: Realtime Database(Main) Parte II",
          "DataAccess: Realtime Database(Main) Parte III",
          "Implementar Interactor(Main)",
          "Implementar Presenter(Module: Main)",
          "Adaptador para las Solicitudes",
          "Adaptador para los contactos",
          "Métodos de configuración previos",
          "Implementar View(Module: Main)",
          "Configuraciones finales de Main",
          "Acerca de",
          "Diseño de la vista Añadir",
          "MVP Module: Add",
          "DataAccess: Realtime Database(Add)",
          "Implementar Interactor(Module:Add)",
          "Implementar Presenter(Module: Add)",
          "Configuraciones previas de Add",
          "Implementar View(Module: Add)",
          "Pruebas finales(Module: Add)",
          "Diseño de la vista Perfil",
          "MVP Module: Profile",
          "Event & Interfaces",
          "DataAccess: Authentication(Profile)",
          "DataAccess: Storage(Profile)",
          "DataAccess: Realtime Database(Profile)",
          "Implementar Interactor(Profile)",
          "Implementar Presenter(Profile)",
          "Configuraciones previas de Profile",
          "Implementar View(Profile)",
          "Pruebas finales(Profile) Parte I",
          "Pruebas finales(Profile) Parte II",
          "Mejora: Optimización del MVP(Profile)",
          "Diseño de la vista Chat Parte I",
          "Diseño de la vista Chat Parte II",
          "MVP Module: Chat",
          "Event & Listeners",
          "DataAccess: Storage(Chat)",
          "DataAccess: Realtime Database(Chat) Parte I",
          "DataAccess: Realtime Database(Chat) Parte II",
          "Implementar Interactor(Chat)",
          "Implementar Presenter(Chat)",
          "Adaptador Parte I: Mensajes",
          "Adaptador Parte II: Imágenes",
          "Configuraciones previas de Chat",
          "Implementar View(Chat)",
          "Enviar un texto.",
          "Enviar una imagen.",
          "Corrección de bugs.",
          "Zoom en imágenes.",
          "Offline",
          "Conclusiones."
        ],
        "Notificaciones Push Parte II (Conexión desde un servidor externo a Firebase)": [
          "Introducción.",
          "Constantes y métodos previos.",
          "Aplication para Volley",
          "¿Que protocolo elegir?",
          "Crear cuenta en un servidor gratuito",
          "Alojando nuestros archivos php",
          "Análisis del código para enviar notificaciones.",
          "DataAccess: Volley(Chat)",
          "DataAccess: Cloud Messaging",
          "Suscripción y desuscripción de notificaciones.",
          "Pruebas finales del envío de notificaciones",
          "Abrir una actividad especifica desde la bandeja de notificaciones.",
          "Verificar si hay Internet en dispositivos Android",
          "Tutorial introductorio para apps Android.",
          "Verificar si un usuario existe antes de enviar la solicitud de amistad",
          "Validar si la solicitud ya había sido enviada",
          "MVP para nuevas validaciones - Best Practices",
          "Conclusiones."
        ]
      },
      "requirements": [
        "Computadora con 4GB(o más) de RAM y acceso a internet.",
        "Saber programar en Java a nivel básico(Si no sabes nada, busca mi curso gratuito de android).",
        "Saber diseñar apps Android a nivel básico(de preferencia)."
      ],
      "description": "Se un experto utilizando Firebase en tus aplicaciones Android de una manera sencilla y concisa. Paso a paso desde cero hasta que programes como los profesionales con patrones de diseño como MVP, Singleton o el uso de SRP,(Principio de Responsabilidad Única), este curso se imparte en Android Studio y Java.\nAquí un pequeño listado de lo que aprenderás:\nInstalar y configurar el entorno de desarrollo(Android Studio, plugins, Emulador AVD, etc...)\nConocer que es Firebase y como usar sus herramientas en apps para Android.\nLeer/escribir en una base de datos NoSQL en tiempo real(Realtime Database).\nUtilizar la nueva y más potente base de datos NoSQL para Firebase(Firestore).\nEnviar y recibir Notificaciones Push(Firebase Cloud Messaging y PHP).\nSubir, borrar o actualizar imágenes en la nube(Cloud Storage).\nIniciar sesión con redes sociales(email/password, Facebok, Google+) con FirebaseAuthUI.\nMejores practicas en Firebase y Android en general.\nControlar remotamente la interfaz y comportamiento de una app(Remote Config)\nExtracción y analisis de datos de nuestra app y los usuarios(Google Analitycs for Firebase).\nUtilizar la cámara y procesar la imagen en tamaño real.\nConceder los permisos necesarios en las diferentes versiones de Android(Marshmellow o superior).\nDominio del Patrón de diseño MVP\nUsar el Patrón de diseño Singleton\nImplementar correctamente el Principio de Responsabilidad Única(SRP)\nMaterial adicional(tips, trucos, bonos, etc...).\nAplicación tipo Chat con envió de texto, imágenes, notificaciones, estados y más.\n¿No estas convencido? Mira las primeras clases de forma gratuita y decide si quieres subir tu nivel de conocimientos, soy un profesor comprometido y soy un fiel promotor de las buenas practicas para el desarrollo profesional, mis más de 76,000 estudiantes me respaldan.\nEstoy cociente del valor de tu tiempo, así que las clases son sustancialmente enfocadas a la practica y directo al grano. A través de ejemplos sencillos y aplicaciones reales, tendrás las herramientas necesarias para comprender los conceptos y a plasmar tus propias ideas; y claro, siempre estoy atento a resolver todas las dudas a la mayor brevedad. En adición a las clases, el curso cuenta con actividades practicas que tienen su vídeo en un servidor externo(youtube), este tipo de clases son minutos y minutos extras que no se cuentan en el total de horas que Udemy muestra.\nEste curso también lo haces tú, si si, hablo en serio y me explico, estoy dispuesto a escucharte atentamente y a tocar no solo los temas que yo considero vitales para tu formación, si no que también tomo en cuenta lo que mis estudiantes me piden ver o profundizar. De esta manera el curso se va enriqueciendo con material extra que a todos nos gusta, así que te aliento a participar y dejar comentarios, dudas o sugerencias que mejoren tu aprendizaje.\n¿Que hay del instructor? ¿Será bueno en lo que hace?\nEs una pregunta importante y me gustaría aclarar eso de forma rápida, tengo más de 8 años dedicado al desarrollo profesional y más de 6 años son especializados en el sector móvil, concretamente en Android. Tengo más de tres años enseñando en Udemy y con resultados muy buenos tanto en el numero de estudiantes, como en las calificaciones que me otorgan. Haciendo un resumen de mi formación, debo decir que son Ingeniero en Sistemas Computacionales con especialidad en Desarrollo de software y cuento con certificaciones en Android, mi carrera laboral comenzó en 2012 y desde entonces no he parado de aprender y seguir actualizado.\n¿De que serás capaz al final del curso con las herramientas de Firebase?\nCon Realtime Database\nConectar aplicaciones a la nube de Firebase para leer datos en formato JSON, desde propiedades, objetos y arreglos. Tendrás la capacidad de escribir y consultar en tiempo real, y reflejarlos en interfaces puntuales o listados de objetos y por supuesto, las operaciones CRUD básicas para crear, leer, actualizar y eliminar.\nCon Firestore\nCrear aplicaciones completas con MVP, que podamos comparar y apreciar de forma clara, las equivalencias con respecto a Realtime Database, además claro, de poder probar aquellas diferencias y aprovechar las ventajas que nos ofrece esta nueva y más potente base de datos, que fue pensada para aplicaciones con crecimiento masivo. Sabrás elegir entre una y otra, dependiendo de tus necesidades.\nCon Firebase Cloud Messaging\nEnviar push notifications personalizadas desde la consola de Firebase y recibirlas de 2 maneras en Android, con servicios propios o a través de la bandeja del sistema. Aprenderás a usar los canales de filtración implementados a partir de Android Oreo 8.0 y a enviar notificaciones por dispositivo, por grupo o masiva(todos quienes tengan la app instalada).\nCon Cloud Storage\nTener la capacidad de consultar y visualizar una imagen proveniente de Internet, a su vez claro esta, la habilidad de subir imágenes seleccionadas directamente de la galería o fotografías tomadas con la cámara del dispositivo Android. Posibilidad de eliminar o actualizar una imagen en la nube desde una interfaz propia.\nCon Firebase Authentication\nPosibilidad de registrar y autenticar usuarios ya sea con el medio convencional(correo/contraseña), o con redes sociales tales como Facebook y Google+. Aprenderás a cargar los datos del usuario y a cambiar la imagen de perfil del usuario. Además de darte de alta como Facebook Developer.\nCon Remote Config\nTendrás el poder de modificar una aplicación de forma remota, gratis y con el menor impacto en el consumo de recursos. Condiciona los valores remotos dependiendo del idioma, region o tipo de sistema operativo del usuario final. Elimina la fragmentación en las actualizaciones de Google Play y ofrece una forma amigable de aplicar los cambios con el usuario.\nExtras\nLibrerías para la vinculación de vistas(butterknife), tratado de imágenes(Glide), Imágenes circulares(CircleImageView), Comunicación avanzada entre clases(EventBus), plugins para Android Studio(Zelezny), permisos en Android, buenas practicas, y mucho más...\nEn fin... más temas vienen en camino que agrupen varios temas que han de trabajar en conjunto y con una codificación correcta con MVP, Singleton y SRP, con los cuales haremos que nuestros códigos sean eficientes, escalables y sostenibles.\nEl curso incluye una app grande, con múltiples módulos que muestra como crear aplicaciones grandes y muestra como resolver los problemas que lleva el trabajar con varios servicios y recursos dentro de una app. La app se llama Texting, y es de tipo Chat en tiempo real, el cual nos permite iniciar sesión con redes sociales, enviar solicitudes de amistad, gestionar un perfil de usuario, enviar texto o imágenes en un chat, enviar notificaciones push con PHP y muchas cosas más.\n\n\nSin más que decir, te invito a tomar acción y cumplir esos objetivos que tienes en mente. Adquiere el curso hoy mismo, supérate y aprovecha esta gran oportunidad para lograr tus metas. Te veo en clase!\n\n\nEl éxito es de aquellos con el valor de superarse así mismos cada día, de los que dan el primer paso aún sin estar seguros de lograrlo.\n\n\nUn cordial y amistoso saludo.\nIng. Alain Nicolás Tello.",
      "target_audience": [
        "Programadores Java con muchas ganas de crear aplicaciones en Android y Firebase",
        "Programadores android que desean dominar a Firebase.",
        "Gente que les gusten las buenas practicas en el desarrollo con Android Studio.",
        "Personas con ganas de subir su nivel de conocimientos de programación.",
        "Alguien que le guste aprender rápido con vídeos concisos y temas prácticos."
      ]
    },
    {
      "title": "Appointment Booking Application in React native",
      "url": "https://www.udemy.com/course/appointment-booking-application-in-react-native/",
      "bio": "Appointment Booking Application",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "basics of react js",
        "basics of node js",
        "basics of MERN stack"
      ],
      "description": "Hii Guys i hv been working as full stack developer from last 4 years and have worked in IT industry as MERN stack developer and also been working as tutor on udemy teaching development and courses related to\ndevelopment.\nIn this course u will learn everything about react hooks and and node application and how to use them.\nreact hook make your development process really very easy and simple as they have there own advantages.\nu will also learn how to create android phone application with react native\nIn this course structure  i have already added\nroutes in react js\ncontrollers\nstyled  components\nReact native application development for android\nadmin panel with react js\nbackend in node js\nhow to create stack navigation in react native\nauthentication for secure login\nsecure routing for admin only\n\n\ni will be providing the source code along with the course to refer the code.\nplease learn all the hook before starting with the react js it  is important to know all the hook .\nReact js learning also involves learning HTML and CSS and JS as well which u will can learn in my other courses which i hv already uploaded if u hv also doubt in finding them do message me ill let u know.\nonce u are done with react js u can start with node js which series i will be starting very soon.\ni hope u people will like this course. and dont forget to watch my other courses",
      "target_audience": [
        "web developers",
        "students",
        "anyone who want to learn app development"
      ]
    },
    {
      "title": "Design de Aplicativos Mobile - Xamarin C#",
      "url": "https://www.udemy.com/course/design-de-aplicativos-mobile-xamarin-c/",
      "bio": "Desenvolvimento Android, IOS e Windows Phone",
      "objectives": [
        "Criar design para seus aplicativos com xamarin C#"
      ],
      "course_content": {},
      "requirements": [
        "Não precisa de nenhum pré-requisito, pode começar os estudos por este curso"
      ],
      "description": "O curso completo de Design de Aplicativos Xamarin possui 63 video aulas, neste curso é mostrado o passo a passo de como desenvolver a parte visual para aplicativos para Android, IOS e WIndows Phone usando os recursos que o xamarin C# oferece, neste curso montamos o template inicial do sistema E-Commerce que será montado nessa nova série de cursos, este é o segundo módulo da série de cursos que compõem o Aplicativo E-Commerce.",
      "target_audience": [
        "Todo aluno que queira aprender sobre desenvolvimento mobile"
      ]
    },
    {
      "title": "Kursus Lengkap Java dan Android Studio - Build 9 Apps",
      "url": "https://www.udemy.com/course/kursus-lengkap-java-dan-android-studio-build-9-apps/",
      "bio": "Dalam kursus ini akan belajar bahasa pemrograman Java Dasar OOP, Android Studio, JSON API, Database dan Membangun App",
      "objectives": [
        "Bahasa Java Programming",
        "Android Studio",
        "Menampilkan dan Tambah Data",
        "Membuat Aplikasi dengan Web Api",
        "Membuat Aplikasi Video Online",
        "Membuat Aplikasi Mp3",
        "Database SQLite",
        "JSON WebServices",
        "Menggunakan Postman",
        "Java OOP",
        "Network Library Retrofit, Okhttp dan Volley",
        "Layout Xml Design"
      ],
      "course_content": {},
      "requirements": [
        "Operating Sistem Windows",
        "Android Studio Versi Terbaru",
        "Nox Emulator",
        "Intellij Idea"
      ],
      "description": "Kursus Lengkap Java dan Android Studio - Build 9 Apps\nHallo semuanya, selamat datang di kursus saya, dalam kursus ini kalian akan belajar tentang bahasa pemrograman Java dari dasar seperti OOP, Type Data, Method dan masih banyak lagi lainnya. Selain itu kalian juga akan belajar Android Studio dari dasar, mulai dari pengenalan fitur, kegunaan fitur, membuat project baru, mendesign dengan xml dan membuat 9 aplikasi.\nUPDATE Kursus (kursu ini telah diupdate dengan penambahan materi materi terbaru), berikut ini adalah detail list penambahan materi terbaru dikursus ini:\n- Update konten 2021 - Firebase CRUD, Register, Forgot Password dan Diary App\n- Update Content 2021 - Kita Quotes App (Advanced Level)\n- Update Content 26 April 2021- Firebase CRUD, Login, Register dan View Binding\nDiantara aplikasi yang akan dibuat adalah sebagai berikut:\n1. Aplikasi DatabaseKu yaitu kita akan membuat aplikasi yang dimana nanti kita akan bekerja dengan database di Android\n2. Aplikasi Buku pada bagian ini kita akan menampilkan data buku yang ada di database MySql ke aplikasi android\n3. Aplikasi News Android yaitu membuat sebuah aplikasi berita dengan menggunakan API dari webiste orang luar, disini kalian akan belajar bagaimana cara untuk mengakses JSON OBJECT dan JSON ARRAY.\n4. Dan masih banyak lagi yang harus kalian pelajari.\nUntuk itu kursus ini sangat cocok bagi pemula yang ingin mendalami bahasa pemrograman Java, Android Studio, JSON API WebServices dan masih banyak lagi lainnya yang berkaitan dengan topic tersebut.\nSetelah kalian belajar ini semua kalian akan bisa membuat aplikasi Android dengan mudah.\nUntuk itu kursus ini cocok bagi kalian karena menggunakan bahasa Indonesia.",
      "target_audience": [
        "Kursus Lengkap Java dan Android Studio Bagi Pemula - Build 9 Apps",
        "Belajar Bahasa Java Lengkap dan OOP Bagi Pemula",
        "Belajar Android Studio dari Awal Sampai Mahir"
      ]
    },
    {
      "title": "Xamarin Forms 2018 - Apps para Android, iOS e UWP - 8 Apps",
      "url": "https://www.udemy.com/course/xamarin-forms-2018-apps-para-android-ios-e-uwp-8-apps/",
      "bio": "Neste curso ensino a construir aplicativos moveis nativos com a tecnologia Xamarin. Vamos aprender a teoria e a pratica.",
      "objectives": [
        "Criar aplicativos com Xamarin Forms com alto grau de compartilhamento de código",
        "Criar aplicativos para Android, iOS e UWP com a tecnologia Xamarin"
      ],
      "course_content": {},
      "requirements": [
        "Conhecimentos em C#",
        "Conhecimentos na plataforma .NET Framework",
        "Noções de Smartphones",
        "Conhecimento em Android/iOS são bem vindos (Opcional)",
        "Noções de versionamento de código com github",
        "Conhecimentos em SQL (Necessário conhecer a formação de Query)"
      ],
      "description": "Certificado:\nAo final deste curso será emitido um certificado pela Udemy.\nSobre o curso:\nVocê aprenderá a desenvolver aplicativos com Xamarin Forms, a plataforma que te permite desenvolver para Android, iOS, UWP de uma única vez. Com o Xamarin você não precisa aprender Java/Kotlin para programar no Android, Swift ou Objective-C para iOS, você só precisa saber C# e conseguirá desenvolver para qualquer plataforma.\nEu te mostrarei como utilizar os componentes para criação de interface gráfica, os tipos de páginas, os Layouts, Controles e como interagir com banco de dados SQLite. Tudo isso em um só curso.\nO Xamarin  é a melhor plataforma de desenvolvimento multiplataforma do mercado, com ele você economiza tempo e dinheiro (de aprendizado e de desenvolvimento de aplicativo).\n\nNo início do ano 2016 a Microsoft comprou a Xamarin por aproximadamente 400 milhões e disponibilizou totalmente gratuito para fortalecer sua ferramenta Visual Studio. Assim todos podem utilizar essa incrível plataforma sem custo.\nPor que fazer esse curso?\nSe você deseja lançar um produto, tempo é o fator mais importante. A plataforma Xamarin trouxe uma grande inovação, com ela você consegue diminuir o tempo de desenvolvimento do seu app. Economiza dinheiro pois a ferramentas são gratuitas e sua equipe de desenvolvimento é 50% a 33% menor que equipes tradicionais. Então por que você deve fazer o curso? Porque aprendendo Xamarin você tem mais chance de ter sucesso em seus projetos.",
      "target_audience": [
        "Quem é esforçado nos estudos, possui disciplina e deseja aprender a desenvolver Apps para Smartphones",
        "Quem precisa construir Aplicativos para várias plataformas",
        "Quem não conhece Xamarin, mas que conhecer e aprender a desenvolver"
      ]
    },
    {
      "title": "Curso completo de Flutter y Dart. Desarrollo de Apps mobile",
      "url": "https://www.udemy.com/course/curso-completo-de-flutter-y-dart-desarrollo-de-apps-mobile/",
      "bio": "Aprende a desarrollar apps móviles con Flutter y Dart: desde lo básico hasta la creación de 3 proyectos completos.",
      "objectives": [
        "Fundamentos de Dart y Flutter: Domina los conceptos básicos de Dart y aprende a construir apps móviles con Flutter, desde la estructura del proyecto.",
        "Gestión de datos y persistencia: Aprende a manejar datos dinámicos y a almacenar información localmente con SQLite y Provider.",
        "Desarrollo de interfaces móviles: Crea interfaces modernas y funcionales con Material Design usando widgets como Column, Row, ListView, y más.",
        "Mejora de la experiencia de usuario: Optimiza el diseño con animaciones, temas globales y adaptación a diferentes tamaños de pantalla."
      ],
      "course_content": {
        "Sobre el curso": [
          "Recomendaciones sobre el curso",
          "Recuerda que cuentas con nuestro asesoramiento y respuestas a tus preguntas"
        ],
        "Introducción a Dart 3": [
          "Instalacion",
          "Descargar e instalar Visual Studio Code",
          "Hola mundo",
          "Comentarios",
          "Datos primitivos en Dart",
          "Variables",
          "Variables dinamicas",
          "Concatenaciones",
          "Variables inmutables",
          "Constantes",
          "Funciones",
          "Acceso Condicional",
          "Operadores: Asignacion e Igualdad",
          "Operadores: Desigualdad, Compracion",
          "Operadores: null-aware, condicional",
          "Operadores aritméticos",
          "Operadores logicos: AND, OR, NOT",
          "Operadores Logicos: Valida correo",
          "Operadores Logicos: Validar password",
          "Listas",
          "Listas: Metodos",
          "Listas: Metodos especiales",
          "Listas: RemoveWhere",
          "Map",
          "Map: Manipular map",
          "Map: Declaracion con var",
          "Map: Json anidados",
          "Spread Operator",
          "if-else",
          "Switch",
          "Bucle For",
          "Bucle For in",
          "Bucle ForEach",
          "Bucle While",
          "Do While Adivina el numero",
          "Enum",
          "Clases",
          "Setter y Getters",
          "Herencia",
          "Clase Abstracta",
          "Casting Explicito",
          "Casting Implicito"
        ],
        "Conceptos basicos de desarrollo": [
          "Crear un proyecto en Flutter",
          "Estructura del Proyecto Flutter",
          "Levantar un simulador Android",
          "Codigo de Flutter basico"
        ],
        "Contador": [
          "Creacion del Proyecto",
          "Primer Widget",
          "Uso de constantes",
          "Screen",
          "BuildContext",
          "Scaffold",
          "AppBar",
          "Column",
          "Propiedades al Texto",
          "Boton Flotante",
          "StatelessWidget",
          "StatefullWidget",
          "Init Value",
          "Decremento"
        ],
        "Widgets": [
          "Widget Text",
          "Widget Text Directionality",
          "Widget Text TexOverFlow",
          "Widget Container",
          "Widget Container Padding",
          "Widget Container Decoration",
          "Widget Container Opacity",
          "Widget Container OffSet",
          "Wdinget Container Gradient",
          "Widget Container Posiciones",
          "Widget Column",
          "Widget Column Agregando elementos",
          "Widget Column Editando Widgets"
        ],
        "Navegacion": [
          "Configuración inicial",
          "Navigator",
          "Navigator Pop",
          "Navigator maybePop",
          "Pasar datos",
          "Navigator popUntil",
          "Navigator pushReplacementName",
          "Alert Dialog",
          "Estilos al Dialog"
        ],
        "Inputs": [
          "Configuracion del proyecto",
          "TextField",
          "Validaciones",
          "Validar Email",
          "Password_Field",
          "Validar Password",
          "Limitar la Cantidad de Caracteres en un TextField",
          "Trabajar con Inputs Numéricos",
          "CheckBox",
          "CheckBox multiples"
        ],
        "Formularios": [
          "Configuracion inicial",
          "Formulario",
          "Crear Nuevos Campos para el Formulario",
          "Agregar un Checkbox para Términos y Condiciones",
          "Agregar un Dropdown para Seleccionar País",
          "Refactorizar Form para Usar los Nuevos Widgets",
          "Providers",
          "Que es el ChangeNotifier y NotifyListener"
        ],
        "Aplicacion Todo List": [
          "Demostracion de la Aplicacion",
          "Creacion y configuracion del proyecto",
          "Configuracion del provider",
          "Crear el Widget para Mostrar Cada Tarea",
          "Crear la Pantalla para Añadir y Editar Tareas",
          "Navegar a la Pantalla de Formulario para Añadir o Editar Tareas",
          "Solucion al Editar tarea",
          "Añadir un Estado de Filtro",
          "Crear una Barra de Filtros en la Pantalla Principal",
          "Probar filtro",
          "Breve explicacion",
          "Añadir el Método para Eliminar Tareas",
          "Tema global",
          "Personalizar Botones con Animaciones",
          "Arreglar Edicion",
          "Código fuente de la sección"
        ],
        "Aplicación de Gestión de Gastos": [
          "Demostracion",
          "Configuración inicial",
          "Crear la Pantalla de Resumen",
          "Crear la Pantalla de Registro de Transacciones",
          "Navegar a la Pantalla de Registro de Transacciones",
          "Crear la Lógica para el Gráfico",
          "Solución al error del paquete",
          "Crear el Modelo de Transacción",
          "Crear la Pantalla del Historial de Transacciones",
          "Navegar al Historial de Transacciones",
          "Conectar el Formulario con el Proveedor",
          "Verificar la Funcionalidad",
          "Actualizar el Gráfico de Gastos",
          "Explicacion",
          "Actualizar la Pantalla de Resumen",
          "Algún estilo mas",
          "Modificar el Historial para Seleccionar Transacciones",
          "Configurar SQLite",
          "Solución a los errores",
          "Insertar una transacción en la base de datos",
          "Eliminar transacción",
          "Vincular con el provider",
          "Vincular con nuestros Widgets",
          "Probando y Finalizando App",
          "Código fuente de la sección"
        ]
      },
      "requirements": [
        "Ningún conocimiento previo en programación es necesario, pero tener nociones básicas de cómo funcionan las aplicaciones y el desarrollo de software puede ser útil.",
        "Un ordenador (PC o Mac) con capacidad para instalar herramientas de desarrollo como Flutter y Visual Studio Code.",
        "Conexión a internet para descargar las herramientas y recursos necesarios, así como para acceder a las actualizaciones y dependencias del curso.",
        "Ganas de aprender y disposición para explorar un nuevo lenguaje de programación (Dart) y un framework de desarrollo móvil (Flutter).",
        "Simulador o emulador Android/iOS o dispositivo móvil físico: Si bien es opcional, se recomienda tener un simulador/emulador instalado o un dispositivo móvil físico para probar las aplicaciones."
      ],
      "description": "¿Te gustaría crear aplicaciones móviles modernas y funcionales desde cero?\nEste curso completo de Flutter y Dart es la puerta de entrada ideal para desarrolladores que quieran aprender a diseñar, desarrollar y optimizar aplicaciones móviles.\nA lo largo del curso, dominarás los fundamentos de Dart, el lenguaje detrás de Flutter, y aprenderás a construir aplicaciones escalables y rápidas, utilizando este potente framework de Google.\nComenzaremos con una introducción sólida a Dart y Flutter, donde aprenderás desde cómo estructurar tu proyecto hasta los conceptos básicos necesarios para desarrollar una aplicación móvil funcional.\nLuego, te sumergirás en la gestión de datos dinámicos y la persistencia, aprendiendo a manejar SQLite y Provider para almacenar y recuperar información localmente.\nCon este curso, además, te convertirás en un experto en el desarrollo de interfaces modernas usando Material Design. Trabajarás con widgets como Column, Row y ListView para crear interfaces atractivas y adaptadas a cualquier tamaño de pantalla, asegurando una excelente experiencia de usuario.\nComo parte del contenido práctico, desarrollarás tres aplicaciones completamente funcionales: una lista de tareas (Todo List), una aplicación de gestión de gastos y una aplicación de recetas de cocina. Estas te permitirán aplicar todos los conceptos aprendidos y prepararte para enfrentar proyectos reales en el mundo del desarrollo de apps móviles.\n¡Inscríbete ahora y comienza tu carrera como desarrollador de aplicaciones móviles con Flutter y Dart!",
      "target_audience": [
        "Principiantes en programación que quieran aprender a desarrollar aplicaciones móviles desde cero utilizando Flutter y Dart. No se requiere experiencia previa, ya que el curso cubre desde los fundamentos más básicos hasta la creación de aplicaciones completas.",
        "Desarrolladores web o de software que deseen expandir sus habilidades al desarrollo móvil, aprendiendo un framework moderno como Flutter que permite crear aplicaciones tanto para Android como para iOS con un solo código base.",
        "Emprendedores y profesionales no técnicos que buscan aprender a crear sus propias aplicaciones móviles sin depender de equipos de desarrollo externos. Este curso les proporcionará las herramientas necesarias para desarrollar sus proyectos.",
        "Estudiantes o entusiastas de la tecnología que quieran mejorar sus conocimientos en desarrollo de aplicaciones móviles, un campo en crecimiento con grandes oportunidades profesionales.",
        "Cualquier persona interesada en el diseño y desarrollo de interfaces móviles que quiera aprender a construir aplicaciones con Flutter de manera eficiente, desde la instalación de herramientas hasta el manejo de bases de datos y el uso de widgets personalizados."
      ]
    },
    {
      "title": "Ionic 3 - Construindo um App estilo food com NodeJS",
      "url": "https://www.udemy.com/course/ionic-construindo-um-app-estilo-food-com-nodejs/",
      "bio": "Crie aplicativos em Ionic 3 com Api feita em NodeJS, MongoDB utilizando boas práticas de projeto em JS",
      "objectives": [
        "Introdução o NodeJS",
        "Criação de Projetos Javascript",
        "Instalação e configuração do ambiente de desenvolvimento JS",
        "Criação de Api's em NodeJS com Express",
        "Criação e utilização de conceito de orientação á objetos utilizando javascript",
        "Normatização e estruturação de Projetos em Node",
        "Técnicas de desenvolvimento ágil utilizando Nodemon",
        "Utilização de banco de dados MongoDB",
        "Criação de App com Ionic 3",
        "Utilização do Ionic CLI",
        "Criação de Providers",
        "Criação de Pipes",
        "Trabalhar com navegação entre as telas",
        "Utilizar o Push Notification para interagir com seu usuário",
        "Publicar seu App na Apple Store e na Play Store",
        "Utilizar recurso nativo para tirar fotos",
        "Utilizar recurso nativo para gerenciar a rede do usuário para saber quando ele está online ou não",
        "Utilizar Ionic Storage"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Preparação do Ambiente"
        ],
        "Criando nossa Api": [
          "Conceitos -> O que é o NodeJS",
          "Conceitos -> O que é o NPM",
          "Conceitos -> Criando nosso projeto",
          "Conceitos -> Express",
          "Criando nossa Api -> Definindo nossas rotas",
          "Criando nossa Api -> Criando nosso primeiro controller",
          "Criando nossa Api -> Conectando no MongoDB",
          "ATUALIZAÇÃO - Como conectar no MongoDB Atlas",
          "Criando nossa Api -> Criando o schema do documento",
          "Criando nossa Api -> Criando nossos repositórios",
          "Criando nossa Api -> Controller base e Repository base",
          "Criando nossa Api -> Criando a autenticação da Api",
          "Criando nossa Api -> Middleware",
          "Criando nossa Api -> Finalizando nossa Api"
        ],
        "Desenvolvimento do Aplicativo": [
          "Orientações antes de criar o projeto",
          "Introdução ao Ionic",
          "Criando nosso Aplicativo",
          "Utilizando o Ionic generate",
          "Definindo o Layout do App",
          "Criando tela de login",
          "Criando a tela de Login parte 2",
          "Criando o cadastro do App",
          "Cadastro de Categorias",
          "Preparando o ambiente para o emulador",
          "Cadastro de Categorias adicionando fotos e finalizando a tela",
          "Cadastro de Produtos",
          "Criando a listagem de categorias",
          "Listando os produtos conforme as categorias",
          "Criando pipe de valores e componentes reutilizáveis",
          "Criando seu próprio componente de tabs",
          "Minha Conta",
          "Detalhes do produto",
          "Criando o carrinho de compras",
          "Finalizar o pedido parte 1",
          "Finalizar o pedido parte 2",
          "Publicar nossa api para o mundo",
          "Utilizando o Push Notification para interagir com o usuário",
          "Listando meus pedidos",
          "Publicando o App na Play Store e Apple Store"
        ],
        "Bônus": [
          "Testes unitários em NodeJS",
          "Criando o primeiro teste",
          "Finalizando o teste da api de usuário"
        ]
      },
      "requirements": [
        "Tenha conhecimento básico de lógica de programação",
        "Conhecimento básico em Javascript, Html, CSS",
        "Ser muito curioso para novos conhecimentos"
      ],
      "description": "Ionic  é um framework para criação de aplicações híbridas com HTML, CSS (SASS) e JavaScript (TypeScript).\nSe tornou muito famoso por conta de sua baixa curva de aprendizado e facilidade na criação de belíssimos aplicativos híbridos com componentes que se assemelham muito a aplicações Android, iOS e Windows Phone nativas.\nCom o framework é possível fazer acesso a recursos nativos do dispositivo tais como Câmera, GPS, Sistema de Arquivos, Armazenamento Local, Notificações, etc, através dos plugins Apache Cordova, tudo de forma muito simples e rápida, pois o Ionic encapsula estes recursos para facilitar ainda mais o desenvolvimento, provendo uma interface para trabalhar com os plugins usando TypeScript, Promises e Observables.\n\n\nIremos apreender várias técnicas de desenvolvimento em NodeJS e Ionic, técnicas essas usadas para publicação de aplicações reais no mercado, ou seja, você terá mais desempenho e qualidade em seu desenvolvimento de App's.",
      "target_audience": [
        "Desenvolvedores Web com interesse em criação de aplicativos",
        "Pessoas que querem criar aplicativos e tenham interesse em começar"
      ]
    },
    {
      "title": "Alexa Skills Desde Cero | Crea apps de voz con Amazon AWS",
      "url": "https://www.udemy.com/course/alexa-skills/",
      "bio": "Aprende a crear aplicaciones de voz Alexa Skills desde cero por medio de consola web, con AWS y con linea de comandos.",
      "objectives": [
        "Crear aplicaciones de voz llamadas Skills de Amazon Alexa.",
        "Toda la teoría involucrada en crear skills.",
        "Subir y vincular el código a AWS con el portal del Alexa Developer Console.",
        "Utilizar Visual Studio Code y ASK CLI para programar desde computadora local y administrar skills en la nube.",
        "Las bases de Node JS",
        "Subir la aplicación de voz a la tienda de Skills de Amazon Alexa."
      ],
      "course_content": {
        "¿Por qué tomar este curso de aplicaciones de voz?": [
          "Bienvenida al curso de aplicaciones de voz con Alexa Skills"
        ],
        "Tu primer aplicación de voz : Alexa Skills de la forma más sencilla": [
          "El miedo al aprender tecnologías nuevas como las apps de voz de Alexa Skills",
          "Cuenta de Amazon Developer",
          "Alexa Developer Console",
          "Interaction Model : Introducción a Invocation Name, Intents, Samples Utterances.",
          "Documentación oficial y de ayuda para aprender sobre Alexa Skills de Amazon",
          "El código de tu Alexa Skill en el Developer Console",
          "Probando tu primer Skill de Alexa"
        ],
        "Conceptos Importantes de Alexa Skills": [
          "Amazon Alexa en la nube.",
          "AVS Y ASK : Alexa Voice Service y Alexa Skills Kit",
          "Al hablar con una skill : Wake word, launch word, invocation name y utterances",
          "Intents",
          "Al construir una skill ; Voice UI , Código , front end y back end",
          "Arquitectura de una Skill de Amazon Alexa",
          "Separar interfaz de voz de la lógica de programación : Siguientes Pasos."
        ],
        "Conectar Lambdas en AWS Con La Interfaz de Voz de Alexa Developer Console": [
          "La interfaz de voz y el código en la nube de Amazon.",
          "¿Qué es AWS? Crear Cuenta Gratuita de Amazon Web Services",
          "Pasos para crear Skill con back end en AWS",
          "Creación de la idea y dialogo de nuestra Skill",
          "Voice User Interface",
          "Slots y su uso como variables en una skill",
          "Custom slot y sinónimos ( synonyms )",
          "Crear app serverless en AWS y conectar FrontEnd con BackEnd de tu Skill",
          "Test de conexión de AWS con el modelo de la voice user interface.",
          "¿Cómo funciona el código del archivo index.js ?",
          "Jerarquía y uso de handlers",
          "Sesiones en tu skill y la función reprompt",
          "Lógica de la app de voz con código estático",
          "Trabajando con slots : Lógica de la app de voz con código estático",
          "Múltiples Slots y CloudWatch Logs",
          "Descarga de código",
          "Eliminar aplicaciones y funciones lambda",
          "Manipular funciones Lambda en local"
        ],
        "ASK CLI Programar Alexa Skills Desde Visual Studio Code": [
          "Alexa Skills Kit Command Line Interface ASK CLI",
          "Pasos para instalar y usar ASK CLI",
          "1 a) node.js y npm en macOS y Windows",
          "1 b) Git",
          "2 a) AWS IAM Creando credenciales de aws iam, usuario grupo y politicas",
          "2 b) AWS IAM Llaves privadas de acceso",
          "3 a) Intalar e inicializar ask cli",
          "Error EACCES : Link a Documentación Oficial con Solución",
          "Instalando NVM Node Version Manager para solucionar error EACCES",
          "3 b) ASK init",
          "Introducción a los comandos de ASK CLI",
          "Visual Studio Code | Instalación y Desinstalación Total",
          "Terminal y Command Prompt",
          "4.- ASK Clone",
          "Abrir proyecto en visual studio code",
          "5.- ASK Deploy"
        ],
        "Node JS desde Cero: Curso para principiantes": [
          "Siguientes pasos para ser un programador de aplicaciones de voz con Alexa Skills",
          "Javascript",
          "Introducción a NodeJS",
          "Ejercicios básicos de Node JS",
          "Procesos en Node.js",
          "Leer y escribir en consola Node.js",
          "Funcionamiento de los módulos en Node.js",
          "Módulo readline en node js",
          "Manejo de eventos en NodeJS",
          "Exportar Modulos en Node Js",
          "Ejecutar procesos en Node JS",
          "Leer archivos en NodeJS",
          "Escribir archivos en Node.js",
          "Directorios en NodeJS",
          "Operaciones de archivos en NodeJS",
          "Leer streams en node js",
          "Escribir streams en node js",
          "Aplicación completa en node js",
          "Más lecciones de Node JS"
        ],
        "Subir Skill a la tienda de Apps de Alexa.": [
          "Tienda de Alexa Skills",
          "Distribución",
          "Alexa Icon Builder",
          "Category - Keywords - Privacy - Terms Of Use",
          "Privacy & Compliance",
          "Disponibilidad en países y posibles errores",
          "Proceso de certificación",
          "Extra: Detener proceso de revisión y certificación"
        ],
        "Una vez publicada tu Alexa Skill": [
          "Correo de aceptación de app de voz Alexa",
          "Encontrar y compartir tu Alexa Skill en la tienda de apps de voz de Amazon",
          "Analíticos de tu Alexa Skill",
          "Costos de usar AWS como backend de tu Alexa Skill",
          "Generar presupuestos y alertas",
          "Gracias"
        ],
        "Extra": [
          "Extra"
        ]
      },
      "requirements": [
        "Solo se requiere una computadora con internet y de preferencia con micrófono."
      ],
      "description": "*Curso actualizado una vez más el día 23 de Octubre de 2019.\nEn este curso aprenderás a crear aplicaciones de voz llamadas Skills, iniciando desde cero (suponiendo que no conoces nada de aplicaciones de voz) y terminando hasta subir tu propia aplicación Alexa Skill a la tienda de aplicaciones de voz de Amazon.\nAlgunos de los temas que aprenderás son:\nLa teoría detrás de una aplicación de voz Alexa Skill en la nube (Interaction model, Intents, Utterances, slots y mucho más).\nCrear y manejar cuenta de Amazon Developer y AWS.\nCrear interfaces de usuario de voz (Voice User Interfaces).\nManipular el código del backend en el portal Alexa Developer Console.\nManipular y vincular el código del backend de la app de voz en AWS.\nInstalación y uso de ASK CLI\nInstalación y uso de Visual Studio Code para programar aplicaciones de voz con AWS y Alexa Developer Console.\nLas bases de programación con Node JS\nManejar tus apps de voz en la tienda de aplicaciones y hacer presupuestos en los gastos del lado del servidor.\nEste curso cuenta con garantía completa de 30 días, te invito a tomar el curso y si no obtienes ningún valor de sus lecciones puedes pedir reembolso de tu inversión sin compromiso.\n\n\nMuchas Gracias.",
      "target_audience": [
        "Personas que quieran adentrarse por primera vez al mundo del desarrollo de aplicaciones de voz con el asistente Alexa de Amazon."
      ]
    },
    {
      "title": "Curso Completo de Kotlin para Desenvolvimento Android",
      "url": "https://www.udemy.com/course/curso-kotlin-android/",
      "bio": "Aprenda do Zero a Criar Apps e Jogos Android com o Kotlin para Desenvolvimento Android",
      "objectives": [
        "Desenvolvimento Android de aplicativos e jogos Android usando o Kotlin",
        "Entender a Orientação a Objetos com Kotlin",
        "Diferença entre variáveis e propriedades, e como o Kotlin entende cada uma",
        "Usar as expressões idiomáticas do Kotlin",
        "Criar funções de Classe e de Arquivo Kotlin",
        "Entender os conceitos do Kotlin e como ele se integra de forma perfeita com o Java no desenvolvimento Android",
        "Aprenda lógica, condições e controles de fluxo",
        "Usar coleções, e qual é o melhor lugar para cada uma",
        "Converter projetos Android em Java para Kotlin",
        "Usar o Intellij IDE, a melhor IDE de Java (e Kotlin), para escrever código de forma eficaz e profissional"
      ],
      "course_content": {
        "Introdução": [
          "Seja Bem-vindo!",
          "Código Fonte dos Exercícios e Projetos"
        ],
        "Kotlin Básico": [
          "A Linguagem de Programação Kotlin",
          "Kotlin na Máquina Virtual Java",
          "Configurando Sua Máquina",
          "Intellij IDEA",
          "Olá Mundo",
          "Variáveis",
          "Tipos Primitivos & Strings",
          "Null Safe",
          "Controle de Fluxo: If/Else",
          "Controle de Fluxo: When",
          "Controle de Fluxo: While",
          "Controle de Fluxo: For",
          "Arrays",
          "Functions",
          "Download dos Slides"
        ],
        "Kotlin e Orientação a Objetos": [
          "O que é Orientação a Objetos",
          "Objetos",
          "Classes",
          "Propriedades",
          "Construtores",
          "Herança",
          "Interface",
          "Modificadores de Acesso",
          "Data Classes",
          "Download dos Slides"
        ],
        "Kotlin Intermediário": [
          "Exceções",
          "Collections",
          "Collections: Lists",
          "Collections: Set",
          "Collections: Map",
          "Enumerados (Enum)",
          "Packages",
          "Imports",
          "Download dos Slides"
        ],
        "Kotlin no Android": [
          "Android Studio e Kotlin",
          "Lista de Conteúdos"
        ],
        "#1 App: KTempConverter": [
          "Introdução",
          "Criando o Projeto",
          "Criando o Layout",
          "Recuperando as Views",
          "Adicionando a Lógica",
          "Finalizando o App"
        ],
        "#2 App: KFeedReader": [
          "Introdução",
          "Criando o Projeto",
          "Criando o Layout com RecyclerView e CardView",
          "Configurando o Leitor de RSS",
          "Criando o Adapter",
          "Configurando a RecyclerView com Adapter",
          "Como resolver o bug da tela branca",
          "Finalizando o App"
        ],
        "#3 App: KJogoVelha": [
          "Introdução",
          "Desenhando o Tabuleiro",
          "Adicionando a Lógica",
          "Adicionando Botão Reiniciar e as Cores"
        ],
        "Desafios: Conversão de Apps Android em Java para Kotlin": [
          "Projeto: Boas Vindas Androideiro",
          "Projeto: Baskete",
          "Projeto: Tupicionario",
          "Projeto: Bolly Filmes"
        ],
        "Bônus": [
          "Mini-Treinamento Gratuito Complementar",
          "[eBook] Android Aprendiz: O Guia Definitivo",
          "[eBook] Android Studio: O Guia Passo a Passo",
          "[eBook] Escolha sua Ideia Perfeita de Aplicativo para Lançar e Monetizar",
          "[Artigo] Aprender a Programar: Um Guia do Desenvolvedor Android",
          "[Artigo] Como criar um Aplicativo Android: Da Ideia ao Lançamento em 10 Passos",
          "Cupons de Desconto"
        ]
      },
      "requirements": [
        "Você deve ter conhecimentos básicos da linguagem Java para Android.",
        "Você deve ter desenvolvido pelo menos um aplicativo Android."
      ],
      "description": "*** Depoimentos de nossos Alunos sobre o Curso Completo de Kotlin Essencial para Desenvolvimento Android***\n\"Muito claro nas explicações, não é nada massante. Está divertido aprender através deste curso online.\"\n- Daniel Ricardo Borges\n\"Didática muito boa, bem detalhado.\"\n- Francisco Barros\n\"Explicações precisas e de fácil entendimento.\"\n- Fabio Rene Mussi\n\"Excelente metodologia de ensino\"\n- Fabiano Nóbrega de Almeida\n\"Parece que o conteúdo vai ser muito interessante, já fiz curso com o Professor Fillipe Cordeiro e ele explica muito bem.\"\n- Willian Ribeiro\n*** O Kotlin agora é oficialmente uma linguagem para desenvolvimento Android ***\n\nO Kotlin é uma linguagem brilhante que pode tornar o desenvolvimento Android mais rápido e divertido.\nJá foi adotado por vários desenvolvedores Android pelo mundo de empresas como a Expedia, Flipboard, Pinterest, Square e outros.\nAlém disso, o Kotlin também é totalmente adaptado a linguagem Java, possibilitando o desenvolvimento Android com uma interoperação entre as duas linguagens sem esforço.\n>> Aprenda a programar em Kotlin, uma linguagem de programação moderna baseada no Java!\n>> Junte-se a este curso para aprender a escrever códigos com uma linguagem incrível e fácil de aprender!\n>> Expanda seus conhecimentos como desenvolvedor Java ou Android e melhore a qualidade do seu código!\nEste curso irá te ensinar a programar em Kotlin para desenvolvimento Android do zero! Começamos com o básico, então este curso é completamente adequado para iniciantes. Você colocará em prática tudo que aprender com nossos exercícios e desafios de programação.\nSe você é um desenvolvedor do Android, você pode usar este curso para se atualizar. O Kotlin permitirá que você mantenha uma base de código mais limpa e expressiva, use conceitos que vão além do Java 8 para escrever aplicativos Android mais robustos.\nVocê irá aprender:\nVariáveis e tipos anuláveis (segurança nula)\nCondicionais: if e when\nLoops: for e while\nFunções\nOrientação a Objetos: Classes, Objetos, Interfaces, Herança etc.\nData Classes (um conceito útil em Kotlin)\nExeções e Controle de Erros\nColeções e Estutura de Dados\nCriar aplicativos e jogos Android com o Kotlin\nEste curso também cobra a parte de Orientação a Objetos, o principal paradigma do desenvolvimento Android que você precisa entender no mundo de hoje. Mas também analisaremos conceitos de programação funcional que tornarão sua vida muito mais fácil.\n\nPor último, você vai desenvolver aplicativos e jogos Android do zero utilizando todo conhecimento que aprendeu ao longo do curso utilizando a linguagem Kotlin.\n\n*** Conteúdos Novos Toda Semana e Promoções Todo Mês ***\nAlém de garantir um curso incrível, você receberá semanalmente novos conteúdos sobre desenvolvimento Android profissional por email e via anúncios na plataforma da Udemy.\nE também, todo mês fazemos promoções especiais de cursos para nossos alunos, além de receber acesso antecipado a novos cursos por um preço totalmente especial.",
      "target_audience": [
        "Todos os desenvolvedores Android iniciantes.",
        "Todos os desenvolvedores Android com experiência."
      ]
    },
    {
      "title": "كورس جافا شامل تمهيدي للأندرويد",
      "url": "https://www.udemy.com/course/java-android-preparing/",
      "bio": "شرح مبادئ الجافا بطريقة سلسة وميسرة جدا",
      "objectives": [
        "فهم مبادئ لغة الجافا فهماً عميقاً",
        "القدرة على انشاء برنامج جافا مهما كانت فكرته",
        "القدرة على فهم الجافا نظريا وعملياً",
        "التحضير لكورس الأندرويد والتجهيز له"
      ],
      "course_content": {
        "مقدمة عامة وتنزيل البرامج وانشاء أول مشروع": [
          "مقدمة عن الحاسوب ولغات البرمجة",
          "مقدمة عامة عن لغة الجافا",
          "تنزيل البرامج والادوات المطلوبة",
          "تنزيل برنامج انتليجي وشرح هيكليته",
          "شرح هيكلية مشروع الجافا نظري",
          "شرح هيكلية مشروع الجافا عملي على البرنامج"
        ],
        "البدء ببناء أول برنامج والتعامل مع جمل الطباعة": [
          "جمل الطباعة في الجافا",
          "الفرق بين دوال الطباعة",
          "طباعة الأرقام والعمليات الحسابية البسيطة",
          "تلخيص موضوع جمل الطباعه"
        ],
        "التخطيط السليم وتتبع الكود في البرنامج لضمان السلامة البرمجية": [
          "تسلسل تشغيل برنامج الجافا من كتابة الكود وحتى التشغيل",
          "الجزئية المسؤولة عن تشغيل برامج الجافا في النظام",
          "أنواع الأخطاء التي تواجهك في الجافا",
          "التخطيط السليم للبرنامج قبل بدء البرمجة - تخطيط الخوارزمية",
          "أمثلة على تخطيط الخوارزمية"
        ],
        "طباعة رسومات باستخدام جمل الطباعة": [
          "رسم منزل باستخدام جمل الطباعة",
          "رسم قطة باستخدام جمل الطباعة",
          "رسم مجسم هندسي باستخدام جمل الطباعة"
        ],
        "مقدمة عن التعامل مع الكلاسات": [
          "مقدمة بسيطة عن الكلاسات نظري",
          "مقدمة بسيطة عن الكلاسات عملي"
        ],
        "المتغيرات": [
          "مقدمة عن المتغيرات نظري",
          "طريقة التعامل مع المتغيرات في الجافا",
          "التعامل مع الأعداد الصحيحة",
          "التعامل مع النصوص",
          "تسلسل عن تسلسل تعريف المتغيرات وتنفيذهم",
          "شروط وتفضيلات المتغيرات",
          "ملخص التعامل مع المتغيرات",
          "التعامل مع الارقام العشريه",
          "مثال على الاعداد الصحيحه |حساب مساحة ومحيط مستطيل",
          "مثال على الاعداد العشرية | تحويل العملات"
        ],
        "التعليقات": [
          "التعامل مع التعليقات"
        ],
        "التعامل مع الدوال": [
          "مقدمة عن الدوال واستدعاء دالة البرنت",
          "شرح دالة تحويل الأحرف لأحرف كبيرة",
          "اكمال شرح دالة تحويل الأحرف لأحرف كبيرة",
          "بعض الدوال المشهورة داخل كلاس النصوص",
          "شرح انشاء دالة نظري",
          "شرح انشاء دالة عملي",
          "مثال على انشاء دالة - دالة جمع النصوص",
          "مجموعة امثلة على انشاء دالة",
          "تلخيص الدوال"
        ],
        "مقدمة عن التعامل مع نسخ الكلاسات | الأوبجكتس": [
          "التعامل مع الكلاس والاوبجكتس الجزء الاول",
          "التعامل مع الكلاس والاوبجكت الجزء الثاني",
          "التعامل مع الكلاس والاوبجكت الجزء التالت - المتغيرات العامة",
          "التعامل مع الكلاس والاوبجكت الجزء الرابع- الدوال",
          "تصنيفات المتغيرات",
          "شرح موضوع الكبسلة Encapsulation"
        ],
        "عمليات على المتغيرات": [
          "مقدمة عن انواع المتغيرات",
          "طباعة احجام انواع المتغيرات في الجافا",
          "تجربة التعامل مع المتغيرات",
          "تحجيم المتغيرات",
          "تحجيم المتغيرات الجزء الثاني",
          "المتغير النهائي"
        ]
      },
      "requirements": [
        "فقط جهاز حاسوبك"
      ],
      "description": "هذا الكورس يشرح مبادئ الجافا بطريقة مميزة تختلف عن باقي الشروحاتو وأهم مايميزها:\nأن الكورس قبل أن يشرح الموضوع يقوم بشرح المشكلة التي جعلتنا نأتي بهذا الموضوع\nأن يحتوي على العديد من التمارين العملية\nيشرح الجزء النظري ثم يتبعه بالجزء العملي\nاضافة الى العديد من المميزات الموجوده في الشروحات\nملاحظة: هذا الكورس صمم خصيصا للطلبة الذين يريدون فهم البرمجة فهماً صحيحاو وليس للطلبة الذين يريدون فقط النسخ واللصق دون فهم المعلومة.",
      "target_audience": [
        "أي شخص يريد تعلم البرمجة من الصفر",
        "أي شخص يريد الفهم عمليا ونظريا وليس النسخ واللصق فقط"
      ]
    },
    {
      "title": "iOS 10 Apps mit Swift 3, der umfassende Kurs",
      "url": "https://www.udemy.com/course/ios10-swift3/",
      "bio": "Lern App-Entwicklung für iPhone & iPad für iOS10 mit Swift 3 und Xcode 8",
      "objectives": [
        "Lern SiriKit in Apps zu integrieren",
        "Du kannst anschließend eigene App-Ideen verwirklichen",
        "Spracheingabe in iOS10 verwenden",
        "Sticker-Apps erzeugen",
        "Mit Swift3 arbeiten",
        "Mehrsprachige Apps erstellen",
        "Ansprechende Designs umsetzen",
        "APIs ansprechen",
        "XML / JSON verarbeiten",
        "Firebase als Backend verwenden",
        "Views im Detail verstehen",
        "AutoLayout (inkl. Incremental Adoption ab iOS10) verstehen",
        "Lokale Notifications verwenden",
        "Share Extensions erstellen",
        "uvm"
      ],
      "course_content": {
        "Einführung in den Kurs": [
          "Willkommen!",
          "Quellcode und Bonusdownloads herunterladen"
        ],
        "Neu in Swift3": [
          "Inkrement und Dekrement fallen weg (SE-0004)",
          "Keine C-Style for-Schleife mehr (SE-0007)",
          "Label für ersten Parameter angeben (SE-0046)",
          "API Design Guidelines (SE-0023)",
          "Design Guidelines auf Standardbibliothek anwenden (SE-0006)",
          "Übersetzung von Objective-C APIs in Swift (SE-0005)",
          "C-Funktionen als Member importieren (SE-0044)",
          "Kein NS-Prefix für Klassen im Foundation Framework (SE-0086)",
          "Neue ValueTypes im Foundation Framework (SE-0069)",
          "Bonus: Webinaraufzeichnung \"Neu in Swift3\"",
          "Neu in Swift3"
        ],
        "Swift3 Crashkurs: Grundlagen": [
          "Variablen und Konstanten",
          "Type Inference und Type Annotations",
          "Datentypen in Swift",
          "Kommentare hinterlegen",
          "Das Semikolon in Swift nutzen",
          "Typealiases festlegen",
          "Typumwandlung verstehen",
          "Optionals sicher verwenden",
          "Mit Strings arbeiten",
          "Grundlagen"
        ],
        "Swift3 Crashkurs: Operatoren": [
          "Arithmetische Operatoren",
          "Remainder Operator (Modulo) unter Swift",
          "Inkrementieren / Dekrementieren in Swift3",
          "Vergleiche unter Swift",
          "Logische Operatoren einsetzen",
          "Nil-Coalescing Operator",
          "Range Operator nutzen"
        ],
        "Swift3 Crashkurs: Datenstrukturen": [
          "Arrays einsetzen",
          "Sets (Mengen) verstehen",
          "Dictionaries kennenlernen"
        ],
        "Swift3 Crashkurs: Kontrollstrukturen": [
          "for-in Schleifen",
          "while-Schleifen",
          "Bedingungen formulieren",
          "Das switch-Statement",
          "continue und break"
        ],
        "Swift3 Crashkurs: Funktionen": [
          "Funktionen definieren und aufrufen",
          "Funktionen mit Parameter und Rückgabewerte",
          "Funktionen als Datentyp",
          "Einstieg in Closure Funktionen"
        ],
        "Swift3 Crashkurs: Grundlagen der Objektorientierung": [
          "Das Quiz zur objektorientierten Programmierung",
          "Objektorientierung, was ist das?",
          "Was sind Klassen?",
          "Datenkapselung verstehen",
          "Abstraktion kennenlernen",
          "Vererbung einsetzen",
          "Polymorphie kennenlernen",
          "Lösung für den Lückentext"
        ],
        "Swift3 Crashkurs: Klassen und Strukturen": [
          "Enumerations in Swift (enum)",
          "Strukturen erzeugen (struct)",
          "Klassen implementieren (class)",
          "Value- und Reference-Types",
          "Initializer festlegen",
          "Protokolle in Swift",
          "Fehlerbehandlung mit do/catch/try/throw"
        ],
        "Swift3 Praxis": [
          "Erster Blick in ein Swift3 / iOS-Projekt",
          "readLine: Eingaben auf der Kommandozeile",
          "Taschenrechner mit Swift: die Architektur",
          "Mathematische Funktionen für den Rechner",
          "Input/Output verarbeiten"
        ]
      },
      "requirements": [
        "Als Betriebssystem wird macOS benötigt, um Xcode zu verwenden",
        "Xcode ab Version8",
        "Für einige Beispiele ist ein Developer Account von Apple notwendig",
        "Ein iPhone oder iPad um Apps zu testen (der Simulator hat Einschränkungen)"
      ],
      "description": "Dieser Kurs ist die Fortsetzung des erfolgreichsten iOS-Kurses im deutschsprachigen Raum, den über 7700 Studenten gesehen haben. Generalüberholt und mit zahlreichen neuen Beispielen umfasst er nun auch die iOS10-Frameworks und verwendet Swift3 für die Beispiele.\n\nDu lernst die unterschiedlichsten Bereiche von iOS kennen und lernst, wie Du mit Swift auch umfangreichere Projekte realisierst. Dabei bleiben aber natürlich auch Einsteiger nicht auf der Strecke. Die erste App legt die Grundlagen rund um Xcode, iOS-Entwicklung und das AutoLayout. Die weiteren Apps führen Dich in immer mehr Klassen, Bibliotheken und Frameworks ein.\nEinstieg in Swift3\nFür Umsteiger von iOS9 und Swift2 gibt es ein Kapitel mit den wichtigsten Änderungen in Swift3. Anschließend folgt der komplett überholte Swift Crashkurs. Besonders für Einsteiger sind nun die Themenbereiche Funktionen und Objektorientierung deutlich weiter ausgeführt.\niOS-Entwicklung\nDen Anfang machen die iOS10-Apps, in denen verschiedenste neue Frameworks gezeigt werden. Auch hier ist wieder das bewährte Konzept der vermischten Technologien zu finden. Es ist einfach viel näher an der späteren Praxis als Entwickler.\nApp-Backends\nIn einer modernen App darf natürlich ein Backend nicht fehlen. Gerade zu Beginn sind hier Backend-Dienste wie Firebase sehr beliebt. Datenbanken, Speicherplatz für Bilder, Push-Nachrichten und Co werden über die Cloud bereitgestellt. Und genau deshalb lernst Du in diesem Kurs Deine Apps an Firebase anzubinden.\nWeitere Themen\nDarüber hinaus geht es nun auch wichtige Themen wie Mehrsprachigkeit in Apps und die Umsetzung von hübschen App-Designs. Auch die Nutzung von Git und Github kommt nun noch einmal deutlicher und überarbeitet auf dem Lehrplan.\nNatürlich darf auch die Übermittlung von Apps in den Store nicht fehlen. Insgesamt bringt Dich der Kurs wirklich von Deinem ersten Projekt, über allerlei Szenarien aus der App-Umsetzung bis zur App im Store. Und jetzt bist Du dran: wirf noch einmal einen Blick auf das Inhaltsverzeichnis und dann freue ich mich darauf, Dich gleich im Kurs wiederzusehen.",
      "target_audience": [
        "Wenn Du erste Programmiererfahrung gesammelt hast, ist der Kurs optimal.",
        "Wenn Du noch nie Software entwickelt hast, solltest Du Dich ein wenig mit den Basics befassen."
      ]
    },
    {
      "title": "Flutter & Dart desde cero",
      "url": "https://www.udemy.com/course/master-flutter-dart-de-cero-a-experto/",
      "bio": "Desarrolla aplicaciones IOS y Android desde un solo lugar con Flutter y Dart. +13 Aplicaciones y 2 Proyectos Reales",
      "objectives": [
        "Conceptos de programación a objetos (OOP): propiedades, métodos, clases, herencias, clases abstractas e interfaces.",
        "Flujo de Control: IF/Else, switch, whiles, for loops.",
        "Estructura de Datos: Colecciones como maps y lists.",
        "Programación asíncrona: Como realizar llamadas asíncronas a APIs y obtener datos de un servidor remoto.",
        "Conocimiento profundo en el lenguaje de programación DART.",
        "Conocimiento profundo del Framework de Flutter.",
        "Tener una base sólida para comenzar a trabajar como cross-platform mobile developer utilizando Flutter."
      ],
      "course_content": {
        "Dart: Fundamentos": [
          "Introducción",
          "DartPad - Primer Programa",
          "Descomponiendo un funcion de Dart",
          "Introducción a los tipos en Dart",
          "Porqué usar tipos",
          "Interpolación de String",
          "POO",
          "Clases en DART",
          "Instancia de una clase",
          "Constructores en DART"
        ],
        "Dart: Proyecto": [
          "Introducción",
          "Diseño de Objetos",
          "Creando Objetos y Implementación de List<T>",
          "Métodos y Constructor",
          "Propiedades estáticos y For List<T>",
          "Implementación For",
          "Dart-html",
          "Capturar Evento OnClick",
          "Funciones Flechas - Arrow Function",
          "Condición IF",
          "ApiClass DbClass List<T>.addAll",
          "Distintas formas de declarar una condición",
          "ListQueue<T>",
          "ListQueue<T>.FirstWhere",
          "FirstWhere anidado",
          "List<T> OrElse",
          "Siguiente Acción",
          "Combinar las 2 acciones",
          "Implementar Logica Reset List",
          "Interfaces",
          "Implementación de clase Estado",
          "Private en Dart",
          "Sentencias DART (Referencia)",
          "Fin Sección"
        ],
        "Conociendo Flutter": [
          "Arquitectura"
        ],
        "Flutter: Preparar ambiente de desarrollo": [
          "Instalar Flutter en Windows",
          "Instalar Android Studio en Window",
          "Instalar Visual Studio Code en Windows",
          "Instalar Flutter en Mac",
          "Instalar Visual Studio Code en Mac"
        ],
        "Flutter: Primeros Pasos": [
          "Crear Aplicación",
          "Estructura Proyecto",
          "Método main",
          "Widgets",
          "Importar librerías",
          "Que es Scaffold",
          "Debug y comandos en flutter",
          "Conociendo el Container",
          "Pequeño desafío",
          "Resumen sección"
        ],
        "Flutter: Stateless y Stateful Widgets": [
          "Introducción",
          "Método build()",
          "Proyecto Stateless",
          "Widget Card",
          "Widget anidados",
          "Organizar proyecto",
          "Introducción Stateful",
          "Creando aplicación",
          "Widget padding",
          "Interactividad Stateful",
          "Dart: Generics",
          "Desglosando Stateful",
          "Visual Studio Code Tips"
        ],
        "Flutter: Widgets en profundidad": [
          "TextField: Introducción",
          "TextField: Evento",
          "TextField: Desafío SetState()",
          "TextField: Solución SetState()",
          "TextField: Controller",
          "Dialog: Desafío",
          "Dialog: Display()",
          "Dialog: Actions",
          "Alert: Desafío",
          "Alert: Solución",
          "Tabs",
          "Implementación Tabs",
          "TabBarView",
          "Tabs: Desafío",
          "Tabs: Solución"
        ],
        "Flutter: Navegación": [
          "Introducción",
          "Navigator: ¿En que consiste?",
          "Navigator: push",
          "Navigator: pop",
          "Enviar Datos",
          "Drawer: Introducción",
          "Drawer: List",
          "Drawer: RouteName",
          "Drawer: Detalles finales"
        ],
        "Flutter: Listas": [
          "Introducción",
          "ListTile",
          "Implementación ListView",
          "Lista Infinita",
          "ListView.Builder",
          "Package english_words",
          "Listview Infinito",
          "ListView Infinito: Persistir datos",
          "ListView Infinito: Interactividad",
          "PageView",
          "PageView.Builder"
        ],
        "Flutter: Validaciones Formularios (Stateful)": [
          "Introducción",
          "Form Screen",
          "TextFormField",
          "Email widget",
          "KeyboardType",
          "Password widget",
          "Raised button",
          "Container: Margen",
          "GlobalKey",
          "GlobalKey y FormState",
          "FormState - Validate",
          "Validator",
          "Save",
          "Mixins",
          "Informacion"
        ]
      },
      "requirements": [
        "Un Pc o un Mac.",
        "No es requerido tener conocimientos previos en programación, comenzaremos de cero.",
        "No es requerido tener conocimientos previos en IOS o Android"
      ],
      "description": "Actualizado Mayo 2020: Dart 2.8\nActualización Septiembre 2019: Validaciones Formularios, SQLite, Arquitectura BLOC, Streams, RxDart, FireBase, Firestore\nFlutter es el nuevo framework mobile de Google para crear interfaces nativas en iOS y Android en un tiempo récord. Flutter funciona con Dart (originalmente llamado Dash) el cual es un lenguaje de programación orientado a objetos y de código abierto. La prioridad de Flutter es aumentar la calidad de desarrollo de aplicaciones y que sea sencillo.\n¿Porque deberíamos comenzar a utilizar Flutter?\nMultiplataforma:\nAl utilizar el mismo render, framework y librerías, flutter permite crear a través de un solo UI una aplicación que pueda correr tanto en Android como en IOS, además proporciona widgets basados en las pautas de Cupertino (IOS) y Material Design (Android) como los es el scrolling, navegación, iconos y fuentes para proporcionar un completo rendimiento nativo en el dispositivo\nDesarrollo Rápido:\nHot Reload es una práctica que permite realizar cambios en tu aplicación en tiempos de ejecución. En milisegundos las modificaciones se verán en el dispositivo sin la necesidad de tener que detener y levantar la aplicación como se realiza en el modo tradicional.\nComunidad en crecimiento\nFlutter es un framework aún en Beta, pero está respaldado por Google, su comunidad va en crecimiento, lo cual queda demostrado en su github oficial.\nQue voy a obtener este curso:\nDesarrollar 15 aplicaciones distintas para comprender Flutter.\nDesarrollar un WhatsApp Clone.\nDesarrollar una aplicación de cartelera de películas utilizando el API Tmdb.\nSQLite en una aplicación real.\nEl mejor soporte si tienes alguna pregunta.\nAl finalizar el curso tu vas a entender completamente:\nConceptos de programación a objetos (OOP): propiedades, métodos, clases, herencias, clases abstractas e interfaces.\nFlujo de Control: IF/Else, switch, whiles, for loops.\nEstructura de Datos: Colecciones como maps y lists.\nProgramación asíncrona: Como realizar llamadas asíncronas a APIs y obtener datos de un servidor remoto.\nConocimiento profundo del Framework de Flutter\nComprender el desarrollo de Flutter y Dart a través de aplicaciones reales.",
      "target_audience": [
        "Si eres un desarrollador web, pero nunca has hecho desarrollo nativo mobile, entonces estás en el lugar indicado.",
        "Si no tienes ningún conocimiento en programación, es el curso ideal."
      ]
    },
    {
      "title": "Ionic 4, Angular, Firebase, Firestore e Login com Facebook",
      "url": "https://www.udemy.com/course/ionic-angular-firebase-facebook/",
      "bio": "Aprenda Ionic 4 integrado ao Angular, armazene dados com o Firestore e adicione Login com Facebook e Email e Password!",
      "objectives": [
        "Criar aplicações com Ionic 4",
        "Integrar o Ionic com o Angular",
        "Utilizar Ionic CLI",
        "Integrar aplicações Ionic com o Firebase",
        "Armazenar dados no banco de dados Firestore",
        "Receber dados Realtime por meio do Firestore",
        "Autenticação com Email e Password no Firebase",
        "Autenticação com Login do Facebook no Firebase"
      ],
      "course_content": {
        "Introdução": [
          "Introdução ao curso",
          "Visualizando o projeto concluido",
          "Participe dos canais de interação"
        ],
        "Setup do ambiente": [
          "Sobre a seção",
          "Node JS e NPM",
          "Ionic CLI e Cordova CLI",
          "VSCode e Extensões",
          "Conclusão da seção"
        ],
        "Iniciando a construção da aplicação": [
          "Sobre a seção",
          "Criando novo projeto com Ionic CLI",
          "Conhecendo a estrutura do projeto",
          "Conteúdo extra: mudanças no Ionic 4 e passos para upgrade",
          "Conclusão da seção"
        ],
        "Autenticação com Firebase": [
          "Sobre a seção",
          "Gerando página de Login com Ionic CLI",
          "Criando SharedModule para recursos compartilhados",
          "Organizando aplicação com CoreModule",
          "Criando layout da página de Login",
          "Validando formulário com Reactive Forms",
          "Mensagens de erro de validação com ion-note",
          "Formatador de templates Angular",
          "Preparando formulário para SignUp",
          "Criando novo projeto no Firebase Console",
          "Complemento: nova interface do Firebase Console",
          "Instalando Firebase e AngularFire via NPM",
          "Integrando Ionic e Firebase",
          "Habilitando autenticação com Email e Password no Firebase",
          "Habilitando autenticação com Facebook no Firebase",
          "Criando AuthService com Ionic CLI",
          "AuthService: implementando login com Email e Password",
          "AuthService: implementando signup com Email e Password",
          "AuthService: implementando login com Facebook",
          "AuthOptions, AuthProvider e User",
          "AuthService: orquestrando métodos de login",
          "AuthService: implementando logout",
          "AuthService: armazenando o AuthState do Firebase",
          "AuthService: Observable para determinar se usuário está autenticado",
          "Autenticando usuários no Ionic com Firebase",
          "OverlayService: Toast, Alert e Loading",
          "Exibindo Loading e Mensagem de erro ao autenticar",
          "AuthGuard para proteger rotas da aplicação",
          "AuthModule e AuthRoutingModule",
          "Conclusão da seção"
        ],
        "Dashboard: Firestore CRUD, Rotas e Navegação no Ionic": [
          "Sobre a seção",
          "Gerando TasksListPage com Ionic CLI",
          "TasksModule e TasksRoutingModule",
          "Protegendo rotas com AuthGuard",
          "Redirecionando usuário apos login bem sucedido",
          "TasksListPage: Estrutura inicial",
          "TaskItem para exibir uma única Tarefa",
          "Criando interface TaskModel",
          "TaskItem: Input e Output Properties",
          "TaskItem: template com ion-item-sliding",
          "ComponentsModule: declarando e exportando Components",
          "Mockando lista de tarefas para pré-visualizar interface",
          "Habilitando o Firestore no projeto do Firebase",
          "Integrando Firestore no Ionic",
          "Firestore: Classe genérica para CRUD no banco de dados",
          "Firestore Collections: listando registros",
          "Firestore: criando novos registros",
          "Modificando tipagem do método setItem",
          "Firestore: alterando registros existentes",
          "Firestore: deletando registros existentes",
          "Firestore: buscando registro por id",
          "Gerando TasksService com Ionic CLI",
          "TasksService: herdando Classe Abstrata Firestore",
          "TasksService: collection de Tarefas do usuário logado",
          "Listando Tarefas do usuário na TasksListPage",
          "Criando novas tarefas no Console do Firestore",
          "Gerando TaskSavePage com Ionic CLI",
          "Configurando rota para criar Tarefas",
          "Navegando para TaskSavePage via FabButton",
          "TaskSavePage: implementando interface",
          "TaskSavePage: adicionando Back Button",
          "TaskSavePage: validando formulário com ReactiveForms",
          "TaskSavePage: cadastrando novas Tarefas no Firestore",
          "Navigation Back após cadastrar nova Tarefa",
          "Exibindo Loading ao enviar requisição ao Firestore",
          "Toast para mensagem de erro do servidor",
          "Nova rota para editar Tarefas existentes",
          "Navegando para a rota de edição ao selecionar uma Tarefa",
          "Extraindo parâmetro da rota e exibindo Tarefa para edição",
          "Salvando alterações de Tarefas existentes no Firestore",
          "Deletando Tarefas no Firestore",
          "Concluindo Tarefas diretamente na lista",
          "Exibindo loading ao carregar lista de Tarefas",
          "Conclusão da seção"
        ],
        "Ordenação e Índices no Firestore, Menu, Grid e SplitPane": [
          "Sobre a seção",
          "Ordenando lista de Tarefas e criando índices no Firestore",
          "Criando menus no Ionic",
          "Fechando Menu ao selecionar uma opção",
          "Usando IonMenuToggle para acionar menu",
          "Criando Component reusável para IonMenuToggle",
          "Exibindo nome do usuário logado no Menu",
          "Criando Component para logout do Firebase",
          "Habilitando e desabilitando Menu baseado no authState",
          "Iniciando com o Menu desabilitado",
          "Usando Grid do Ionic para dimensão e posicionamento",
          "SplitPane: layout multi-view baseado em breakpoints",
          "Conclusão da seção"
        ],
        "Build de Produção e Deploy no Firebase Hosting": [
          "Sobre a seção",
          "Configurações do Firebase para Produção",
          "Gerando build de produção da aplicação",
          "Instalando Firebase Tools",
          "Firebase init: linkando projetos local e remoto",
          "Deploy da aplicação no Firebase Hosting",
          "Ativando Facebook App para modo de produção",
          "Conclusão da seção"
        ],
        "Conclusão do curso": [
          "Conclusão do curso"
        ],
        "Conteúdo extra: Firestore Offline": [
          "Ativando dados Offline do Firestore"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de HTML, CSS e JavaScript",
        "Conhecimento básico sobre Angular"
      ],
      "description": "O Ionic 4 chegou recentemente e já é um grande sucesso, é hoje um dos frameworks mais (se não o mais) usados para o desenvolvimento de Apps Híbridos para Android e iOS, Web, PWA's e até mesmo Desktop.\nTrouxe como grande novidade nesta última versão a aposta nas tecnologias da Web ao se basear agora em Web Components, permitindo assim que desenvolvedores o utilizem para criar Apps não mais somente com o Angular, mas também usando Vue, React, qualquer outro framework Front-end, ou mesmo nenhum usando JavaScript puro!\nCom grandes melhorias principalmente em relação à performance por conta de trazer o recurso de Lazy Loading dos Components por padrão, a V4 promete manter e ainda elevar o ótimo legado que as versões anteriores construíram.\nNeste curso você vai aprender a desenvolver uma aplicação focada na Web usando Ionic 4 e sua integração oficial com o Angular, Firebase com Firestore, Login com Facebook e Email e Password, Menus, Grid, SplitPane e muito mais!\nAo final do curso você terá conhecimento suficiente para construir seus próprios Apps com o Ionic e ainda usar boas práticas de projetos com o Angular.",
      "target_audience": [
        "Desenvolvedores JavaScript que desejam aprender a trabalhar com o Ionic 4",
        "Desenvolvedores Angular que gostariam de integrar o framework com o Ionic 4",
        "Desenvolvedores que precisam implementar Autenticação com Facebook em seus apps",
        "Desenvolvedores que precisam implementar Autenticação com Email e Password em seus apps"
      ]
    },
    {
      "title": "직접 등록하는 iMessage Sticker - 프로젝트 설정부터 앱스토어 제출까지",
      "url": "https://www.udemy.com/course/how-to-create-imessagesticker-korean/",
      "bio": "누구나 따라 할 수 있는 정말 쉬운 iMessage(아이메시지) Sticker(스티커) 등록하기 강좌입니다! 아이메세지 스티커를 만들어서 자신의 작품을 전세계에 판매 해 보세요!",
      "objectives": [
        "직접 만든 iMessageSticker를 자신의 아이폰에서 사용 할 수 있습니다.",
        "iMessageSticker를 AppStore에 업로드 하고 유료 또는 무료로 판매 할 수 있습니다."
      ],
      "course_content": {},
      "requirements": [
        "iMessageSticker앱을 만들기 위해서는 개발 툴인 Xcode를 설치해야 합니다. Xcode는 무료 이지만 MacOS가 깔린 애플 기기 (iMac이나 Macbook, OS 버전 10.11.5 이상) 에서만 설치가 가능합니다.",
        "이 강좌를 위해서 AppleID가 필요합니다. Apple Developer Program Membership은 이 강좌에서는 필요하지 않으나 자신의 iMessageSticker를 앱스토어에 등록할 때 필요합니다.",
        "이 강좌 에서는 강사가 미리 만들어놓은 스티커 이미지로 스티커앱 등록을 진행합니다. 본 강좌 에서는 포토샵이나 일러스트레이터 등의 툴로 이미지를 제작하는 과정은 다루지 않습니다. 강의를 따라오면서 함께 테스트 할 수 있는 이미지를 강의 자료로 첨부하니 참고해주세요."
      ],
      "description": "메신저 앱 들의 이모티콘 시장의 규모가 나날이 커지고 있습니다.\niMessage라는 iOS의 거대한 글로벌 플랫폼에서 자신의 회사나 브랜드를 홍보할 수 있는 iMessage Sticker를 만들어보세요! 스티커팩을 만들기 위해서는 단 한줄의 코드도 필요하지 않습니다.\n이 강좌를 통해서 여러분은 자신만의 캐릭터나 아이콘으로 스티커팩을 만들고 AppStore에 등록해서 판매까지 할 수 있게 됩니다. 강사가 미리 준비한 스티커 이미지로 스티커앱을 등록 하는 과정을 차근차근 따라가다보면 개발자가 아닌 사람도 누구나 아이메세지 스티커 판매자가 될 수 있습니다!\n자신의 작품으로 아이메세지 스티커를 제작하고 전세계에 판매 해서 수익을 올려 보세요!",
      "target_audience": [
        "iMessageApp에서 사용 가능한 iMessageSticker를 제작해서 자신의 아이폰에서 사용하고 싶은 사람",
        "본인의 캐릭터를 스티커로 만들어서 iMessageSticker 스토어에서 수익창출을 하고자 하는 캐릭터 디자이너",
        "회사를 대표하는 캐릭터나 브랜드를 iMessageSticker의 형태로 배포해서 마케팅에 활용하고자 하는 기업가나 마케터"
      ]
    },
    {
      "title": "Flutter × Firebaseでチャットアプリを作成する【データベース】【画像保存】",
      "url": "https://www.udemy.com/course/flutter-firebase-chat/",
      "bio": "チャットアプリの開発を題材に、データベースと画像保存の方法を学ぶことができます",
      "objectives": [
        "Flutterでのアプリ開発",
        "FlutterとFirebaseプロジェクトの連携",
        "Cloud Firestoreでのデータ管理",
        "Cloud Storageを用いた画像アップロード機能",
        "プログラミング言語Dartの記述"
      ],
      "course_content": {
        "教材紹介": [
          "教材のゴールの確認"
        ],
        "【2022年7月最新】静的なUI作成を通じてWidgetの使い方を学ぼう！": [
          "コードを整理",
          "メッセージとユーザークラスを定義",
          "トップページのUI作成",
          "トークルームページの基盤を作成し、画面遷移可能に",
          "トークルームにメッセージを表示可能に",
          "トークルームにメッセージを送信するUIを作成",
          "ユーザー情報設定画面のUI作成"
        ],
        "静的なUI作成を通じてWidgetの使い方を学ぼう！": [
          "コードを整理",
          "メッセージとユーザーのクラスを定義",
          "トップページのUI作成",
          "トークルームのUI作成",
          "ユーザー情報設定画面のUI作成"
        ],
        "【2022年7月最新】FlutterFireを実装し動的なシステムを実装": [
          "FlutterFireを実装",
          "Cloud Firestoreを設定",
          "アプリ起動時にアカウントを作成",
          "Firestoreからユーザー情報を取得",
          "アカウント作成時に他のユーザーとのトークルームを作成",
          "SharedPreferencesを用いてアカウント情報を端末に保存",
          "端末にアカウント情報がある場合とない場合で処理を分岐",
          "自分が参加しているルームの情報を取得",
          "ルーム情報を元にユーザーリストを表示",
          "リストタップ時にそのユーザーとのトークルームを表示",
          "メッセージを送信可能にし、送信内容を画面に反映",
          "トークリストに最後にやりとりしたメッセージを表示可能に"
        ],
        "Firebaseと連携して動的なシステムを実装しよう！": [
          "Android用Firebaseプロジェクトの作成",
          "iOS用Firebaseプロジェクトの作成",
          "Cloud Firestoreを設定",
          "FlutterとFirebaseを連携",
          "アプリ起動時にアカウントを作成",
          "Firestoreからユーザー情報を取得",
          "アカウント作成時に他のユーザーとのトークルームを作成",
          "SharedPreferencesを用いてアカウント情報を端末に保存",
          "端末にアカウント情報がある場合とない場合で処理を分岐",
          "自分が参加しているルームの情報を取得",
          "ルーム情報を元にユーザーリストを表示",
          "リストタップ時にそのユーザーとのトークルームを表示",
          "メッセージを送信可能にし、送信内容を画面に反映",
          "トークリストに最後にやりとりしたメッセージを表示可能に"
        ],
        "【2022年7月最新】Storageを活用して画像を保存": [
          "ImagePickerを用いて画像を選択、表示可能に",
          "Firebase Storageを用いて画像を保存",
          "Firestoreのユーザー情報を更新可能に"
        ],
        "Firebase Storageを活用して画像を保存": [
          "ImagePickerを用いて画像を選択、表示可能に",
          "Firebase Storageを用いて画像を保存",
          "Firestoreのユーザー情報を更新可能に"
        ],
        "これからの学習方法について": [
          "これからの学習について"
        ],
        "ボーナストラック": [
          "ボーナスレクチャー1",
          "ボーナスレクチャー2"
        ]
      },
      "requirements": [
        "Flutterの開発環境",
        "Googleアカウント"
      ],
      "description": "※この動画コースは、Flutter学習サービス『Flutterラボ』でも公開しています。\n\n\n概要\nチャットアプリの作成を通してFlutterとFirebaseの連携・活用方法を学習することができる動画コースです。\nFirebaseの中でもDB機能であるFirestore、データ保存機能であるCloud Storageの活用方法を学習できます。\nまた、Flutterの開発の基礎であるWidgetの活用方法もチャットアプリのUI作成を通じて学習することができます。\nFirebaseの使い方を学びたい方や、これからFlutterでアプリを開発してみたい初心者の方などにもオススメです！\n\n\n主なUI実装\nユーザーリスト表示\nチャット画面（逆向きのリストビュー）\nユーザー情報設定画面\n情報入力\n画像選択\n機能実装\nメッセージ投稿・閲覧\nCloud Firestore\nアカウント管理\nCloud Firestore\nプロフィール画像保存\nCloud Storage",
      "target_audience": [
        "チャットアプリを作ってみたい方",
        "Flutterの環境はできたけど何を作れば良いか迷っている方",
        "Firebaseと連携したアプリを開発したい方",
        "Cloud Firestoreの扱い方を学びたい方"
      ]
    },
    {
      "title": "Curso Flutter e GetX + API AdonisJS 5: Projeto Hortifruti",
      "url": "https://www.udemy.com/course/curso-flutter-3-e-getx-api-adonisjs-projeto-hortifruti/",
      "bio": "Crie um projeto Delivery Hortifruti com Flutter 3 (aplicativo), API com AdonisJS 5 (backend) e painel admin com flutter",
      "objectives": [
        "Saber fazer um projeto do início ao fim",
        "Entender como é feito um projeto no backend com AdonisJS 🚀",
        "Construa aplicativos móveis nativos e envolventes para Android e iOS com Flutter na versão mais recente 😀",
        "Fazer um projeto usando o gerenciamento de estado: GetX",
        "Aprender a tirar uma ideia do papel e colocar em prática de uma maneira profissional"
      ],
      "course_content": {
        "Planejamento de nosso projeto e dicas iniciais": [
          "Visão geral do curso",
          "Dicas iniciais",
          "Entendendo nosso projeto"
        ],
        "Construindo nosso backend (API)": [
          "Criando projeto com Adonis 5",
          "Criando o projeto",
          "Conectando ao banco de dados",
          "Configurando o Auth (segurança de nossa API)",
          "Criando um usuário (admin) no sistema",
          "Explicando as pasta do projeto(Adonis)",
          "Renomeando projeto (em alguns lugares)",
          "Configurando Insomnia",
          "Testando a autenticação",
          "Usando Middleware",
          "Criando os 3 tipos de Users em nosso sistema",
          "Criando 3 Models: Cliente, Admin e Estabelecimento",
          "Criamos Migrations: Estado e Cidade",
          "Migration: Cidade_Estabelecimento e Model: Cidade e Estado",
          "Migrations: Categoria e Produto. Model: Cidade_Estabelecimento",
          "Criando primeiro controller Auth",
          "Criamos 3 Seeds: Cliente, Admin e Estabelecimento",
          "Fazendo Login, Logout e testando",
          "Criando a rota /auth/me e testando",
          "Cadastro de Cliente e aprendendo a usar os validators",
          "Testando cadastro",
          "Validator: Edição Cliente",
          "Update Cliente",
          "Testando update no Insomnia",
          "Models: Produto e Categoria",
          "Ligação da tabela Categoria e Produto (relacionamento no model)",
          "Criando model e migration de Endereço",
          "Controller Cidade - Part 1",
          "Controller Cidade - Part 2",
          "Seed Estabelecimento",
          "Seeds: Cidades e Estados",
          "Controller Endereço - Part 1",
          "Controller Endereço - Part 2",
          "Controller Endereço - Part 3",
          "Controller Endereço - Part Final",
          "Criando várias migrations - Part 1",
          "Criando várias migrations - Part Final",
          "Criando vários models - Part 1",
          "Criando os models restantes - Part Final",
          "Começando controller Estabelecimento",
          "Continuando controller Estabelecimento",
          "Configuração rápida",
          "Validando um novo pedido - Validator",
          "Pedido Store - Part 1",
          "Pedido Store - Parte Final",
          "Pedido - Rotas para Index e Show",
          "Testes e Seed: Categoria e Produto",
          "Criando Seeds finais e testando o cadastro de pedido e Gets",
          "Aula de transição para o Flutter",
          "package.json"
        ],
        "Construindo nosso App em Flutter (frontend)": [
          "Começando nosso App",
          "Atualização do Android Studio e donwload do Flutter",
          "Configurar o seu editor com as extensões",
          "Criar o projeto",
          "Adicionando o GetX no projeto",
          "Configurar o tema para usar o Material 3",
          "Criar a primeira tela do app (dashboard)",
          "Criar a página do primeiro botão da barra de navegação (Início)",
          "Criar o provider de acesso a API",
          "Criar o primeiro método da API para retornar a lista dos estabelecimentos",
          "Personalizar mensagem de erro e lista vazia",
          "Finalizar o design do item da lista dos estabelecimentos",
          "Criar a página do estabelecimento",
          "Criar o model do produto",
          "Criar o model da categoria e atualizar o do estabelecimento",
          "Usar o CustomScrollView",
          "Exibir o menu com as categorias e os produtos",
          "Criar o módulo do produto com o cabeçalho",
          "Adicionar a imagem, descrição e o preço",
          "Adicionar a observação e o botão adicionar",
          "Adicionar o controle de quantidade do produto",
          "Alterar o visual do controle de quantidade",
          "Adicionar o básico do controle de peso (gramas)",
          "Finalizar o controle de peso (gramas)",
          "Habilitar o slider apenas se pressionar um pouco",
          "Organizar o widget do controle de peso em uma pasta",
          "Criar o service do carrinho",
          "Adicionar produto no carrinho",
          "Criar o botão para ir no carrinho e o módulo do carrinho",
          "Botão remover produto e finalizar o item da lista de produtos no carrinho",
          "Adicionar a observação, botão avançar e mensagem de vazio no carrinho",
          "Ajustar ação de adicionar produto no carrinho",
          "Perguntar se o usuário quer iniciar um novo carrinho",
          "Ajustar a observação do carrinho para gravar quando voltar sem avançar",
          "Criar o módulo do checkout e colocar a ação no botão avançar do carrinho",
          "Adicionar o valor dos produtos, custo de entrega e total",
          "Pegar o custo de entrega pelo estabelecimento",
          "Buscar na lista de custo de entrega o custo para a cidade selecionada",
          "Exibir as formas de pagamentos e armazenar a selecionada",
          "Criar o botão para fazer login no checkout e depois o módulo do login",
          "Criar os campos do formulário do login",
          "Fazer a autenticação (service) e criar o método no provider",
          "Definir o retorno do método login e criar o storage service",
          "Ajustar o controller do módulo do login para logar e armazenar o token",
          "Buscar dados do perfil do usuário ao fazer o login",
          "Buscar dados do perfil ao iniciar o app e verificar se está logado no checkout",
          "Buscar os endereços do usuário",
          "Exibir o botão para criar um endereço e criar o módulo do endereço",
          "Carregar as cidades e exibir no cadastro do endereço",
          "Criar o método na api para adicionar endereço e concluir o formulário",
          "Validar o formulário do novo endereço e do login",
          "Mostrar a opção para selecionar um endereço",
          "Atualizar o custo de entrega de acordo com a cidade do endereço",
          "Exibir o loading no checkout para os endereços",
          "Criar o método na api e validar checkout",
          "Enviar o pedido e mostrar o resultado",
          "Carregar os endereços novamente ao voltar para o checkout (após novo endereço)",
          "Carregar os endereços novamente ao voltar para o checkout (após login)",
          "Criar o módulo do meu perfil e adicionar no dashboard",
          "Adicionar os campos do usuário no formulário",
          "Buscar os dados do usuário na api",
          "Método para atualizar o perfil",
          "Botão para logout",
          "Ajustar o dashboard para receber em qual índex deve abrir",
          "Criar o módulo meus endereços e abrir pelo meu perfil",
          "Ação no botão de excluir",
          "Ação no botão de editar",
          "Mensagem para lista de endereços vazia",
          "Criar o módulo dos meus pedidos",
          "Método na API para buscar os pedidos",
          "Criar o módulo detalhes do pedido",
          "Atualizar o model do pedido com todas as informações",
          "Exibir as informações do pedido",
          "Criar o módulo de selecionar a cidade dos estabelecimentos",
          "Armazenar a cidade escolhida",
          "Criar o módulo do cadastro",
          "Fazer o login após o cadastro e mostrar mensagens de erros",
          "Ajustar exibição do botão cadastrar endereço e mensagem de não atendido",
          "Uma alternativa para recarregar os dados do usuário ao fazer login",
          "Verificar se o token existe para então buscar os dados do usuário na api",
          "Tarefa: Alterar o user profile para usar o Obx e não o State Mixin",
          "Resolução da tarefa: Alterar o user profile para usar o Obx e não o State Mixin",
          "Esconder o carrinho se estiver vazio",
          "Personalizar o Elevated Button pelo tema",
          "Tarefa: Usar o \"troco para\" no checkout"
        ],
        "Atualizando o backend (API) para estabelecimento": [
          "Explicação inicial da atualização + CRUD categorias",
          "Git clone no projeto ou você continua do seu código",
          "Correções em algumas migrations e order by pedido",
          "Atualizações, instalação do bouncer e update status pedido",
          "Criação do primeiro bouncer e policy",
          "Usando os bouncers e policy, fazendo testes e vendo como faz sentido o uso dele",
          "Testando rotas de categorias e comentários adicionais",
          "Update no estabelecimento part 1",
          "Update no estabelecimento part 2",
          "Modificações pontuais, criando bouncer e policy no código e filtro where null",
          "Validator de Create e Edit de produto e store",
          "Update e destroy do produto",
          "Criando mais 2 policy's e deixando nossa API mais segura",
          "Removemos alguns coisas no seed e mexemos com consume no model",
          "Rota index para produto e rota para remover imagem",
          "Ajuste retorno do update estabelecimento e remove logo do mesmo",
          "Ajustes finais e testes nas rotas"
        ],
        "Construindo o App do Painel para o estabelecimento em Flutter (frontend)": [
          "Criando o novo projeto",
          "Configurar menu lateral responsivo",
          "Ajustar o provider da API e exceptions",
          "Formulário de login",
          "Mostrar lista dos pedidos na tela",
          "Tela dos pedidos responsiva",
          "Alterar o status do pedido",
          "Lista das categorias",
          "Lista dos produtos da categoria",
          "Iniciando a edição da tela novo produto",
          "Selecionar imagem do produto",
          "Tela do novo produto com visual responsivo",
          "Selecionar categoria",
          "Criar categoria",
          "Cadastrar produto",
          "Editar produto",
          "Excluir imagem do produto",
          "Passar o ID da categoria selecionada para a tela Novo Produto",
          "Adicionar um botão \"Novo produto\" na lista de produtos no modo phone",
          "Opção para editar o nome da categoria na lista de categorias",
          "Opção para excluir a categoria na lista de categorias",
          "Edita a tela \"Configurar\" do estabelecimento",
          "Redirecione o usuário para a tela de login ao fazer logout",
          "Redirecione o usuário para a tela de login se ocorrer uma UnauthorizedException",
          "Adicione a formatação/máscara no preço do produto no formulário",
          "Remova arquivos não usados e altere o index padrão do DashboardController"
        ],
        "Atualizações": [
          "Como atualizar o projeto Aplicativo do Cliente para uma nova versão do Flutter?",
          "Atualizando o Aplicativo do Cliente de acordo com as alterações na API"
        ],
        "Extra": [
          "Finalizando",
          "Atualizando dependências e testando bouncers",
          "Atualizando o backend com Adonis 5",
          "Instalação do Flutter Completa Atualizado"
        ]
      },
      "requirements": [
        "Conhecimento básico da linguagem de programação vai ajudar, mas tendo experiência em outra linguagem você consegue também",
        "Se você não tem tanta experiência assim, mas quer ter um projeto completo no currículo, se esforce um pouco mais e conseguirá"
      ],
      "description": "Bem vindo ao curso Curso Flutter 3 e GetX + API AdonisJS 5: Projeto Hortifruti\nPara ver o que iremos fazer nesse curso, veja um pouco mais acima o conteúdo do curso e também os vídeos de apresentação.\n\n\nEstou muito animado em ter a chance de te ajudar a colocar estas tecnologias (Flutter/Dart, GetX, Adonis/NodeJS e todo ecossistema delas) em prática nesse curso que será demais.\n\n\nUm pouco acima comentei que tenho a chance de te ajudar devido ao fato de você está lendo essa descrição do curso, e veja que você terá muito conteúdo aqui e não será conteúdo introdutório, só teoria ou exemplo isolados. Aqui vamos construir uma aplicação completa, isso mesmo do backend (API) ao frontend da aplicação, juntamente com os acessos necessários (partes) que a aplicação precisa ter.\n\n\nVocê já deve ter percebido que o curso está mega atualizado pelo título dele. E sim o código já será compatível com flutter 3 e Adonis 5. Mas claro, na tecnologia as coisas avançam muito rápido e no momento que tivermos subindo essas aulas podemos ter atualizações, e ficaremos de olho nelas, esperamos o seu feedback através de perguntas em nosso fórum.\n\n\nFicou animado? Espero que sim, porque só de escrever essa descrição do curso eu fiquei ? ... te vejo em nossas aulas.",
      "target_audience": [
        "Desenvolvedores iniciantes que já tem uma base em pelo menos uma linguagem de programação e querem aprender na prática",
        "Desenvolvedores já fizeram vários cursos, viram vídeos e ainda não conseguem fazer um projeto real",
        "Desenvolvedores que pretendem diferenciar seu portfólio com um projeto completo"
      ]
    },
    {
      "title": "Curso I Mobile IOS e Android c/ Delphi",
      "url": "https://www.udemy.com/course/curso-i-mobile-ios-e-android-c-delphi/",
      "bio": "Criar Aplicativos completos para Mobile iOS e Android com Delphi usando DataSnap e Amazon e banco de dados PostgreSQL",
      "objectives": [
        "Criar Aplicativos completos para Mobile iOS e Android com Delphi usando DataSnap e Amazon e banco de dados PostgreSQL",
        "Criar Apps do início ao fim",
        "Criar conta na App Store",
        "Configurar Mac para testar em Iphone e Ipad",
        "Criar conta no Google Play e configurar Key Store",
        "Usar o banco postgreSQL como banco de dados",
        "Usar o DataSnap como servidor de aplicação",
        "Usar a Amazon para o banco de dados e o servidor de aplicação",
        "Criar um CRUD completo (Inserir, alterar, excluir)"
      ],
      "course_content": {},
      "requirements": [
        "O ideal é terem conhecimento básico de Delphi e Datasnap. Tanto o curso de Delphi 10 Seattle como o de DataSnap estão disponíveis aqui na Udemy"
      ],
      "description": "Curso I Mobile iOS e Android com Delphi\nNesse curso você vai a aprender a criar aplicativos completos para Mobile iOS e Android com Delphi usando DataSnap e Amazon e banco de dados PostgreSQL.\nAinda:\nCriar conta na App Store\nConfigurar Mac para testar em Iphone e Ipad\nCriar conta no Google Play e configurar Key Store\nUsar o banco postgreSQL como banco de dados\nUsar o DataSnap como servidor de aplicação\nUsar a Amazon para o banco de dados e o servidor de aplicação\nCriar um CRUD completo (Inserir, alterar, excluir)\nVeja o cronograma deste curso abaixo:\naula 6698 iOS Android com Delphi Introducao e criando o primeiro projeto\naula 6699 iOS Android com Delphi SDK NKD e testando aplicativo no celular real\naula 6700 iOS Android com Delphi Configurando Mac OS X e testando no iOS Simulator\naula 6701 iOS Android com Delphi Criando conta Desenvolvedor na Apple Store\naula 6702 iOS Android com Delphi Finalizando processo de conta Desenvolvedor na Apple Store Ativad\naula 6703 iOS Android com Delphi Registrando iOS Iphone e Ipad Unique Device Identifier UDID\naula 6704 iOS Android com Delphi criar certificado certificate e acesso a chaves keychain\naula 6705 iOS Android com Delphi criando Apple ID e Provisioning Profiles Development\naula 6706 iOS Android com Delphi AirServer Espelhar tela do Iphone no Mac AirPlay\naula 6707 iOS Android com Delphi CFBundleIdentifier rodando aplicativo no iOS Device Iphone\naula 6708 iOS Android com Delphi testando aplicativo no celular real iOS Device Iphone\naula 6709 iOS Android com Delphi testando aplicativo no IPad iOS Device\naula 6710 iOS Android com Delphi PostgreSQL criando banco de dados\naula 6711 iOS Android com Delphi DataSnap Criando Servidor de Aplicacao\naula 6712 iOS Android com Delphi Firedac DataSetProvider no DataSnap para conexao com banco\naula 6713 iOS Android com Delphi Criando metodos no DataSnap para acesso ao banco\naula 6714 iOS Android com Delphi Criando aplicacao Cliente Toolbar ListBox\naula 6715 iOS Android com Delphi Rodando no celular real Android e Iphone\naula 6716 iOS Android com Delphi Formulario para lista de cursos do Banco\naula 6717 iOS Android com Delphi DataSnap Servidor na Amazon AWS\naula 6718 iOS Android com Delphi Configurando DataSnap Servidor para rodar na Amazon AWS\naula 6719 iOS Android com Delphi Client DSProviderConnection TServerMethods conectando com Servido\naula 6720 iOS Android com Delphi LiveBindings StringGrid formulario para listar dados do banco\naula 6721 iOS Android com Delphi Listando dados do banco PostgreSQL que estao no servidor Amazon\naula 6722 iOS Android com Delphi erro RCDATA NmXhdpiPh e mais DataSnap Listando dados do banco Pos\naula 6723 iOS Android com Delphi ListBox ItemData Acessory aCheckmark aDetail aMore\naula 6724 iOS Android com Delphi form para manutencao do banco TabControl ListBox\naula 6725 iOS Android com Delphi Edit dados banco ActionList ChangeTabAction ExecuteTarget self\naula 6726 iOS Android com Delphi Sync e Locate DB para sincronizar os dados do TabControl\naula 6727 iOS Android com Delphi Testando ceular real iOS Iphone e no Android\naula 6728 iOS Android com Delphi Implementando CRUD criar ler atualizar excluir\naula 6729 iOS Android com Delphi mais Implementando CRUD criar ler atualizar excluir\naula 6730 iOS Android com Delphi trocando dataSnap Amazon por IP local\naula 6731 iOS Android com Delphi implementando senha para administrador do sistema\naula 6732 iOS Android com Delphi testando administrador no Iphone e no Android",
      "target_audience": [
        "Todos que querem entrar para o fantástico mundo do desenvolvimento Mobile"
      ]
    },
    {
      "title": "Xamarin Forms y SQLite para Android, iOS y UWP 2020",
      "url": "https://www.udemy.com/course/xamarin-forms-sqlite/",
      "bio": "Aprende a utilizar SQLite para crear bases de datos locales para Android, iOS y UWP, con Visual Studio 2019",
      "objectives": [
        "Xamarin Forms y SQLite",
        "Cómo hacer una base de datos en sqlite para android",
        "Cómo hacer una base de datos en sqlite para iOS"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Creando la solución e instalando sqlite",
          "Configuración de las constantes de la conexión",
          "Configuración de la ruta del archivo de la base de datos",
          "Únete al grupo privado"
        ],
        "Trabajando con tablas en SQLite": [
          "Creando el modelo Customer",
          "Atributos comunes en SQLite",
          "Aplicando atributos de SQLite a una clase C#",
          "Tipos de datos válidos en SQLite"
        ],
        "Trabajando con conexiones a SQLite": [
          "Conexión siempre abierta, o cerrar la conexión después de cada consulta",
          "Creando una clase de acceso a la base de datos",
          "El método CreateTable"
        ],
        "Métodos CRUD": [
          "Insertando un cliente",
          "Seleccionando Clientes",
          "Ejecutando consultas sql",
          "Actualizando un cliente",
          "Borrando un cliente"
        ],
        "Creando una app de pruebas": [
          "Controlando la base de datos desde el archivo principal",
          "Definiendo el layout principal",
          "Insertando un nuevo cliente",
          "Listando los clientes",
          "Actualizando un registro",
          "Eliminando un registro"
        ],
        "Temas adicionales": [
          "Métodos para flexibilizar las consultas con expresiones Lambda",
          "Creando repositorios genéricos para trabajar con múltiples tablas"
        ],
        "Relaciones en SQLite": [
          "Problemática",
          "Instalando SQLite Extensions",
          "Relaciones Uno a Uno",
          "Cascade Insert",
          "Cascade Read",
          "Cascade Delete",
          "Relación Uno a Muchos",
          "Relación Muchos a Muchos",
          "Proyecto Terminado"
        ],
        "CLASE EXTRA: ¡Aprende mucho más!": [
          "¡Suscríbete a El Camino Dev!"
        ]
      },
      "requirements": [
        "Conocimientos básicos de Xamarin Forms"
      ],
      "description": "Aprende a utilizar SQLite en tus aplicaciones basadas en Xamarin Forms, para que puedas guardar información localmente.\nEn este curso, iremos desde 0, creando un modelo desde el cual, aprenderemos a crear un repositorio para llevar a cabo las operaciones CRUD contra nuestra base de datos.\nPosteriormente, crearemos una aplicación demostrativa, donde utilizaremos el repositorio desde la interfaz gráfica, para llevar a cabo la ejecución de las operaciones CRUD contra la base de datos.\nFinalmente, he añadido un conjunto de videos finales, donde doy tips y toco temas que seguramente te parecerán interesantes y que son de suma importancia para llevar a cabo operaciones adicionales, tales como la creación de repositorios genéricos, o la creación de métodos que nos permitan filtrar datos a partir de una expresión lambda.",
      "target_audience": [
        "Desarrolladores de Xamarin que quieran aprender a utilizar SQLite correctamente"
      ]
    },
    {
      "title": "【Twitterクローン】React×Firebaseでツイッターアプリをハンズオン形式で自作してみよう！",
      "url": "https://www.udemy.com/course/twitter-clone-using-react-firebase/",
      "bio": "「ReactとFirebaseを連携させてSNSアプリを自作してみたい！データベース管理もしてみたい！」そんなあなたに向けたReact中級者向けの動画です。いつも使っているツイッターを１から自作できるようになります。",
      "objectives": [
        "Twitterクローンを１から自作して作れるようになります",
        "コンポーネント管理の手法が理解できます",
        "Webアプリの設計を簡単に確認しながら学習できます",
        "実践的なuseStateのフックの使い方を学べます",
        "TwiiterライクなデザインのHTMLとCSSが学べます",
        "ReactとFirebaseの連携方法が学べます",
        "Firebaseのデータベース利用法が学べます",
        "Firebaseの公式ドキュメントの調べ方を学べます",
        "Firebaseのホスティング機能を使ってデプロイする方法が学べます",
        "react-twitter-embedライブラリの使い方",
        "Javascriptのmap関数の使い方が学べます"
      ],
      "course_content": {
        "はじめに": [
          "本講座で学ぶこと・デモ",
          "本講座の学習の流れ"
        ],
        "Reactの開発環境を構築しよう": [
          "VSCodeをインストールしよう",
          "Node.jsをインストールしよう",
          "React開発環境構築",
          "Reactプロジェクト内部の説明/整理",
          "コーディングに便利なプラグインをインストールしよう"
        ],
        "【基礎】Javascript 関数講座": [
          "はじめに",
          "Array.map()",
          "三項演算子の使い方"
        ],
        "【実践】Twitterクローンの完成品デモ": [
          "ツイッター完成品のデモ",
          "ツイッター完成品のソースコード"
        ],
        "【実践】Twitterアプリを実装しよう(フロントエンド編)": [
          "TwitterのHTML構成を図解で確認してみよう",
          "サイドバーを作成しよう",
          "MaterialUIを導入・インストールしてみよう",
          "SidebarOption.jsを実装してみよう",
          "Material Iconコピペ用テキスト",
          "Material Iconを探す練習をしてみよう",
          "サイドバーにツイートボタンを追加しよう",
          "Sidebar.cssでスタイリングを適用しよう",
          "SidebarOption.cssでスタイリングを適用しよう",
          "App.cssでアプリ全体のレイアウトを変更しておこう",
          "タイムラインを作成しよう",
          "タイムラインのCSSを適用させよう",
          "TweetBox.jsを作成しよう",
          "TweetBox.cssでスタイリングを適用しよう",
          "Post.jsを作成しよう",
          "Post.cssでスタイリングを適用しよう",
          "タイムラインをスクロールできるように修正しよう",
          "ウィジェットを作成しよう",
          "ツイッタータイムライン貼り付けのライブラリを導入してみよう",
          "Wiget.cssでスタイリングを適用しよう",
          "最後にアプリ全体のCSSの修正をしよう",
          "【追加】CSSの最終修正"
        ],
        "【実践】Twitterアプリを実装しよう(バッグエンド編)": [
          "はじめに図解で全体像を確認しよう",
          "Post.jsコンポーネントにプロップスを渡してみよう",
          "Firebaseを使ってみよう",
          "Firebaseの初期化設定",
          "CloudFirestoreデータベースを使ってみよう",
          "データベースを初期化（連携）してみよう",
          "データベースからデータを取り出してみよう",
          "取り出したデータをPost.jsに渡して出力してみよう",
          "マウント時だけデータを取得するように変更してみよう",
          "ツイート投稿できるようにしよう：その１",
          "ツイート投稿できるようにしよう：その2",
          "最新のツイート順にデータを出力してみよう",
          "リアルタイムでデータを出力してみよう",
          "滑らかにツイートを表示してみよう",
          "最初からサイドバーが選択された状態にしてみよう"
        ],
        "作ったTwitterをデプロイしてみよう": [
          "Firebaseでデプロイしてみよう"
        ],
        "ボーナスレクチャー": [
          "最後までご受講いただいた方へ",
          "ボーナスレクチャー"
        ]
      },
      "requirements": [
        "基本的なHTML/CSS/JavaScriptの知識",
        "Reactをもっと深く理解したい好奇心"
      ],
      "description": "ある程度React基礎を学んだ人向けに作成した講義ビデオになります。\n\n\n「Twitterアプリってどんな仕組みで作られているの ？」\n「Reactは少し理解したけど作りたいものが見つからない・・・」\n「Firebaseのデータベース連携でテキストや画像情報を保存してブラウザに表示したい！」\n「クローンアプリを作りながらもっとReactの理解を深めたい！ 」\n\n\nモダンなReactライブラリを使ってSNSアプリで有名な「Twitter」クローンをハンズオン形式でレクチャーします。\n\n\n■本コースでは教えないこと\n・HTML/CSS/JavaScriptの基本的な文法・ルール\n・削除機能\n・ログイン機能\n・いいねやリツイート機能等\n・完璧なTwitterクローンではないのでご了承ください。\n・Twitterの見た目と、ツイート・画像投稿機能（データベースに保存）とタイムライン表示まで実装しています。",
      "target_audience": [
        "React基礎チュートリアルを終えている方",
        "Reactでツイッターアプリを作ってみたい方",
        "Reactで何か自慢できるWebアプリを作ってみたい方",
        "Webアプリ作成の流れと設計を学びたい方",
        "転職や就職の際のポートフォリオ作成に困っている方"
      ]
    },
    {
      "title": "SwiftUI ile iOS Uygulama Geliştirme Eğitimi | Swift | 2025",
      "url": "https://www.udemy.com/course/swiftui-ile-ios-uygulama-gelistirme-egitimi-swift/",
      "bio": "Profesyonel ve sürekli güncellenen eğitim içeriği ile temelden ileri seviyeye SwiftUI ile IOS mobil uygulama geliştirme.",
      "objectives": [
        "Tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.",
        "Swift diline hakim olarak programlama yapabileceksiniz.",
        "En yeni yapılardan olan SwiftUI üzerinde detaylı bilgiler öğreneceksiniz.",
        "SwiftUI ile IOS programlama dünyasının detaylarına hakim olacaksınız.",
        "Aklınıza gelebilecek olan tüm fikirlerinizi mobil uygulamaya dönüştürebileceksiniz.",
        "Geliştirdiğiniz uygulamanızı App Store gibi platformlar ile birçok kişiye ulaştırabileceksiniz."
      ],
      "course_content": {
        "Swift Giriş": [
          "Swift Giriş",
          "Xcode Kurulumu",
          "Çalışma Ortamı Tanıtımı ve İlk Programın Çalıştırılması",
          "Güncelleme : Xcode 12 Playground Dosyası Oluşturma",
          "Bir Projenin Xcode İçerisinde Açılması",
          "MAC OS İşletim Sistemine Sahip Bilgisayar Tavsiye",
          "Windows Üzerinde Mac OS İşletim Sistemini Çalıştırma",
          "Güncelleme - Xcode 16.2 Yeni Proje Oluşturma"
        ],
        "Değişkenler ve Veri Tipleri": [
          "Değişken Oluşturma",
          "Print() metodu kullanımı",
          "Değişken Oluşturma Çeşitleri",
          "Type Safety - Tür Güvenliği",
          "Değişken Kapsamı",
          "Constant-Sabitler",
          "Kaçış Karakterleri ve Yorum Satırları",
          "Aritmetik Operatörler",
          "Tür Dönüşümü",
          "Tuples"
        ],
        "Standart Programlama Yapıları": [
          "Karşılaştırma Operatörleri",
          "If Yapısı",
          "Örnek ( if ) : Alan Hesabı",
          "Örnek ( if ) : Dört İşlem",
          "Switch Çalışma Yapısı",
          "Örnek ( Switch ) : Dört İşlem",
          "Örnek ( Switch ) : Tek Çift Sayı",
          "For ve While",
          "Döngü Sınır Değerleri",
          "Örnek ( For ) : İsim Tekrarlama",
          "Örnek ( While ) : Veri İşleme",
          "Break-Continue",
          "Bazı Hazır Komutlar"
        ],
        "Optional": [
          "Optional Giriş - Unwrapping",
          "Optional Binding - if let"
        ],
        "Collections": [
          "Collections Giriş",
          "Array İşlemleri",
          "Array Filtreleme İşlemi",
          "Örnek ( Array ) : Ortalama Hesaplama",
          "Örnek ( Array ) : İçerik Değiştirme",
          "Örnek ( Array ) : Tek Çift Sayılar",
          "Örnek ( Array ) : Rasgele Sayı Üretme",
          "Örnek ( Array ) : Karne Uygulaması",
          "Örnek ( Array ) : İsim Arama",
          "Set Çalışması",
          "Set Yapısına Özgü Metodlar",
          "Dictionary Çalışması",
          "Dictionary Dönüşümleri",
          "Dictionary Filtreleme",
          "Örnek ( Dictionary ) : Karne UygulamasI"
        ],
        "Nesne Tabanlı Programlama": [
          "Giriş",
          "Class ve Structure Çalışması",
          "Araba Analoji",
          "Otobüs Analojisi",
          "Lazy Özelliği",
          "Hesaplama Özelliği",
          "Fonksiyonlar",
          "Fonksiyonlara Sınıf İçinden Erişim",
          "Overloading - Metodların Aşırı Yüklenmesi",
          "Variadic Parametreler",
          "Birden Fazla Dönüş Değeri Olan Fonksiyonlar",
          "Fonksiyonların Geri Dönüş Değerinin Optional Olması",
          "Fonksiyonlarda Global ve Local Parametreler",
          "Ödev Açıklama",
          "Ödev 1 - Sıcaklık Dönüşümü",
          "Ödev 2 - Çevre Hesabı",
          "Ödev 3 - Faktoriyel Hesabı",
          "Ödev 4 - Harf Sayısı Bulma",
          "Ödev 5 - İç Açı Toplamı",
          "Ödev 6 - Maaş Hesaplama",
          "Ödev 7 - İnternet Ücreti Hesaplama",
          "Initialization-Constructor",
          "Class ile Structure Arasındaki Fark",
          "Import",
          "Static Değişken ve Metodlar",
          "Enumeration",
          "Composition",
          "Kalıtım ( Inheritance ) Giriş",
          "Kalıtım Örnek",
          "Kalıtım Constructor İlişkisi",
          "Override",
          "Polymorphism Giriş",
          "Nesnelerin Tip Dönüşümü",
          "Örnek ( Polymorfism - Tip Dönüşümü - Tip Kontrolü)",
          "Extension - Değişken Kullanımı",
          "Extension - Metod Kullanımı",
          "Protocol Kullanımı",
          "Protocol Örnek",
          "Closure Kullanımı",
          "Closure ile Şart Yazma",
          "Nesne Tabanlı Listeleme - (Array) : Ögrenci Uygulaması",
          "Nesne Tabanlı Listeleme - (Array) : Sort Metodu",
          "Nesne Tabanlı Listeleme - (Array) : Karne Uygulaması",
          "Nesne Tabanlı Listeleme - (Array) : Composition",
          "Nesne Tabanlı Listeleme - (Set) : Ögrenci Uygulaması",
          "Nesne Tabanlı Listeleme - (Dictionary) : Ögrenci Uygulaması"
        ],
        "String Yapısı": [
          "String Giriş",
          "String Metodları",
          "String - Kelimeyi Tersten Yazdırma"
        ],
        "İleri Swift": [
          "Guard Kullanımı",
          "Do Try Catch - Throw Kullanımı",
          "Dispatch Queue ( Thread ) Kullanımı"
        ],
        "SwiftUI Giriş": [
          "SwiftUI Giriş",
          "Xcode Projesi Oluşturma",
          "Simulatör Kurulumu",
          "İlk Uygulamayı Çalıştırma"
        ],
        "Xcode Proje Dizini": [
          "Swift Dizini",
          "Preview - Ön İzleme Alanı",
          "Assests Dosyası",
          "Info.plist Dosyası",
          "Frameworks",
          "Print İşlemi"
        ]
      },
      "requirements": [
        "Temel bilgisayar kullanma becerisine sahip olmak.",
        "Ortalama bir bilgisayara sahip olmak.",
        "Mac OS işletim sistemine sahip bir bilgisayar veya Mac OS işletim sistemini sanal makine ile windows üzerinde çalıştırabilecek bir bilgisayar.",
        "Bilgisayarınıza programlama yapmak için Xcode IDE yüklemek."
      ],
      "description": "IOS platformunda mobil uygulama geliştirmek istiyorsanız doğru adrestesiniz.\nTemel seviyeden ileri seviyeye kadar IOS uygulama geliştirme alanında gelişim sağlayacaksınız.\n2014 yılından beri 100lerce insana profesyonel bir şekilde IOS uygulama geliştirme eğitimi veriyorum.\nSon yıllarda Android ve Java eğitmeni olarak BT AKADEMİ , BİLGİNÇ İT ACADEMY VE BAŞARISOFT gibi kurumsal şirketlerde eğitmen olarak görev yapıyorum.\nÖğrencilerimizin tamamına yakını yüksek memnuniyet ile kursumuzu tamamladılar ve kendi alanlarında mobil uygulama geliştirici olarak çalışmaktalar.\nEğitim kurumlarında edindiğim tecrübe ile bu online kursu sizler için tasarladım.\nEğitim müfredatının verimli, profesyonel ve düzenli olması için çok zaman harcadım.\nRahatlıkla Eğitim müfredatı olarak en düzenli içeriğe sahip bu kurs diyebilirim.Bu eğitim içeriğinin yapısını ve kalitesini diğer kurslar ile kıyaslayabilirsiniz.\nKursun sonunda tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.\nBu kurs bir çok teknoloji ve yazılım araçları içermektedir. PHP, Firebase, Core Data, Alamofire, MYSQL, SQLite ve bunun gibi bir çoğu.\nBunları bilmiyorsanız endişelenmenize gerek yok, Eğitimde en temel seviyeden ileri seviyeye kadar gelişim sağlayacaksınız.\nEğitim içeriği konu başlıkları ;\nSwift Bölümü :\nSwift Giriş\nDeğişkenler ve Veri Tipleri\nStandart Programlama Yapıları\nOptional\nCollections\nNesne Tabanlı Programlama\nString Yapısı\nİleri Swift\nIOS Bölümü :\nSwiftUI Giriş\nXcode Proje Dizini\nSwiftUI Tasarım\nSwiftUI Çalışma Yapısı\nSwiftUI Widgets\nSwiftUI Kullanıcı Etkileşimi\nSwiftUI Listeleme İşlemleri\nSwiftUI Depolama İşlemleri\nİleri IOS\nSwiftUI İnternet Tabanlı İşlemler\nSwiftUI Lokasyon İşlemleri\nProgramlama Öğrenmek Neden Önemli ?\nHer geçen gün yazılım hayatımızın en derinine kadar iniyor.Hayatımızı kolaylaştırırken yazılımcılara büyük bir iş alanı açılıyor.Çok geç olmadan bu dijital çağa ayak uydurmalı ve yazılım sektöründe yer almalısınız.Bu dijitalleşen çağda ortalama bir bilgisayar ile kendinize yeni bir iş fırsatı yaratabilirsiniz.Özellikle mobil uygulama geliştirme sayesinde tek başınıza istediğiniz her yerden projeler geliştirebilirsiniz.Hangi meslek ve eğitimden olduğunuz yazılımcı olmak için önemsizdir.Her yaşta bu beceriyi kazanabilirsiniz.\nBir eğitimci olarak hazırladığım eğitim müfredatı ile profesyonel seviyeye gelmek sizin elinizde.Tek yapmanız gereken zamanızı ayırarak geleceğinizi değiştirecek yazılım becerisini kazanmak için çabalamak.\nGelin birlikte bu yola çıkalım ve size değer katalım…\n\n\nBaşarılar dilerim.\n\n\nEğitimi incelediğiniz için teşekkürler…",
      "target_audience": [
        "Hangi meslekten olduğunuzun veya Hangi eğitimi aldığınızın yazılımcı olmak için önemi yoktur.",
        "Programlamaya ve teknolojiye ilginizin olması yeterlidir.",
        "Her yaşta bu beceriyi kazanabilirsiniz."
      ]
    },
    {
      "title": "Crie 15 Aplicativos Completos com Android Studio e Java",
      "url": "https://www.udemy.com/course/curso-completo-desenvolvedor-android/",
      "bio": "Use o Android Studio para construir Apps como Tinder, Twitter, Trip Advisor, Flappy Bird e muito mais.",
      "objectives": [
        "Criar diversos aplicativos Android conforme suas necessidades",
        "Oferecer serviços de desenvolvimento de Apps Android como empresa ou freelancer",
        "Candidatar-se a vagas de emprego relacionados ao Desenvolvimento Android"
      ],
      "course_content": {
        "Android Studio 3.2.1 - Download e Instalação": [
          "Introdução Curso Android Studio",
          "Aprenda com Maior Eficiência",
          "Download e Instalação do Android Studio",
          "Configurando o Tamanho das Fontes",
          "Criando um Novo Projeto",
          "Versões do SDK e Simulador",
          "Anatomia do Projeto Android",
          "Editor de Layouts",
          "Log e Console de Debug",
          "Identificando Componentes no Código",
          "Evento de Clique no Botão"
        ],
        "Lógica de Programação com Java": [
          "Apresentação Linguagem e Compilador Java",
          "Compilador Online de Java",
          "Regras Básicas de Programação",
          "Criando um Novo Programa em Java",
          "Variáveis no Java",
          "Comentando o Código",
          "Operações com Strings",
          "Operadores Matemáticos",
          "Números Aleatórios",
          "Operadores de Comparação",
          "Operadores Lógicos",
          "Estrutura de Condição If",
          "Estrutura Switch",
          "Estrutura de Repetição For",
          "Estrutura de Repetição While",
          "Listas Vetores ou Arrays",
          "Percorrendo uma Lista com For",
          "Procedimentos",
          "Passagem de Argumentos",
          "Função e Retorno",
          "Criando e Utilizando Classes",
          "Hierarquia - Estendendo Classes",
          "Convite para Curso de Java"
        ],
        "App #1 - Contador de pessoas": [
          "Criando o layout do aplicativo",
          "Adicionando as interatividades",
          "DOWNLOAD DO PROJETO FINAL - Contador de Pessoas"
        ],
        "App #2 - Alfândega": [
          "Apresentação - App Alfândega",
          "Arquivo para Download - App #2 Alfândega",
          "Nome e Ícone",
          "Constraints e Alinhamento",
          "Activity e Ciclo de Vida",
          "Dicas sobre Constraints",
          "Criando o ImageView",
          "Ajustando as Margens",
          "Identificando os Componentes no Código",
          "Evento de Click na Tela",
          "Sorteando a Direção Aleatoriamente",
          "Adicionando Animação",
          "Animation Listener",
          "Timer e TimerTask",
          "Projeto Finalizado - App Alfândega"
        ],
        "App #3 - Jo Kem Po": [
          "Apresentação - App JoKemPo",
          "Arquivo para Download - App #3 JoKemPo",
          "Iniciando o Projeto",
          "Botões com Chain",
          "Criando Imagens com Constraints",
          "Reconhecendo os Componentes",
          "Evento de Clique e Atualização do Layout",
          "Eventos de Animação",
          "Sorteando a Jogada",
          "Verificando a Jogada",
          "Adicionando Som com a Classe Media Player",
          "Projeto Finalizado - JoKemPo"
        ],
        "App #4 - Calculadora": [
          "Criando o layout do aplicativo - botões e componentes",
          "Inserindo a funcionalidade",
          "DOWNLOAD DO PROJETO FINAL - Calculadora"
        ],
        "App #5 - Quizz": [
          "Criando o Layout do aplicativo",
          "Respondendo e trocando as perguntas",
          "Tela do resultado",
          "DOWNLOAD DO PROJETO FINAL - Quizz"
        ],
        "Arrays, Arraylist e Classes de Objetos": [
          "Criando uma Classe",
          "Estendendo uma Classe",
          "Override Method",
          "Arrays ou Listas",
          "ArrayList",
          "ArrayList de Objeto"
        ],
        "App #6 - Lista de Cartões do Felpudo": [
          "Apresentação - App Cards do Felpudo",
          "Arquivo para Download - App #6 Cards do Felpudo",
          "ListViews Básico",
          "Evento de Clique na Lista",
          "Criando a Classe de Dados e View",
          "Classe ArrayAdapter",
          "Inicializando o Adaptador",
          "Configurando os Layouts",
          "Criando um AlertDialog",
          "Projeto Finalizado - Cards do Felpudo"
        ],
        "App #7 - Imagens dos Personagens": [
          "Apresentação - App Imagens do Felpudo",
          "Navegando entre Telas com Intent",
          "Passando Parâmetros entre as Telas",
          "Criando e Configurando os Layouts",
          "Configurando Listas e Layouts",
          "Passando Dados para Tela de Detalhes",
          "Configurando Tela de Detalhes",
          "Projeto Finalizado - App Imagens do Felpudo"
        ]
      },
      "requirements": [
        "É necessário ter um computador Windows, Mac ou Linux",
        "NÃO é necessário nenhum conhecimento prévio sobre programação"
      ],
      "description": "Curso Completo do Básico até o nível mais Avançado!\n\nJá pensou em se especializar em desenvolvimento Android? Que tal ser um dos profissionais mais cobiçados do mercado?\nO curso é todo desenvolvido baseado em projetos reais. Vamos construir aplicativos clones de grandes apps famosos. Começaremos baixando o Android Studio e configurando o nosso emulador. Em seguida, vamos entender como funcionam as views, os layouts, a linguagem java e como utilizar a lógica de programação em seus projetos.\nCriaremos um clone do Twitter utilizando o Parse e em seguida, faremos o 7 Minutes Workout integrado com o Youtube. Vamos criar nosso clone do Tinder e descobrir como utilizar o sistema de login do Facebook. Em seguida, você vai criar um clone do Trip Advisor e aprender como trabalhar com o Google Maps e o banco de dados SQLite. E finalmente vamos criar o FlappyBird, utilizando a engine de games GDX e sprites.\nTudo isso para depois aprender a publicar seu App na Google Play.\nSe você tiver dúvidas ao longo do curso, não se preocupe. Estaremos nos fóruns respondendo as suas perguntas!\nE aí? O que tá esperando pra começar a criar seus aplicativos? Inscreva-se agora mesmo e comece a criar aplicativos incríveis com o Android Studio!\n\n\nPrincipais assuntos que aprenderemos neste curso:\nAndroid Studio 3.2.1 - Download e Instalação\nLógica de Programação com Java\nArrays, Arraylist e Classes de Objetos\nTrabalhar com arquivos JSON\nMaterial Design\nRecyclerView\nYouTubeAPI e Picasso\nBanco de Dados Firebase e SQL\nComo Publicar o app na Google Play\n15 Aplicativos Completos que criaremos passo a passo:\nContador de pessoas\nAlfândega\nJo Kem Po\nCalculadora\nQuizz\nLista de Cartões do Felpudo\nImagens dos Personagens\nLista de Tarefas\nAgenda de Contatos\nShow do Milhão\nTreino (7 Minutes Workout)\nTrip Advisor\nTwitter\nTinder\nFlappyBird\nVantagens de se tornar um aluno\nAcesso vitalício ao curso: assista quando e quantas vezes quiser.\nDownload dos vídeos: através dos Apps Udemy para Android/iOS você pode fazer download dos vídeos e assistí-los offline.\nCertificado reconhecido: a Udemy oferece certificação de conclusão do curso, especificando o curso e a carga horária realizada.",
      "target_audience": [
        "Qualquer pessoa interessada em aprender mais ou se aprofundar no desenvolvimento de aplicativos Android"
      ]
    },
    {
      "title": "iOS 11 y Swift 4 - De Principiante a Experto",
      "url": "https://www.udemy.com/course/ios-11-y-swift-4-de-principiante-a-experto/",
      "bio": "Nuevo Curso de Desarrollo para iOS 11 - Aquí aprenderás a hacer tus primeras aplicaciones con Swift 4 y Xcode 9",
      "objectives": [
        "Crear Aplicaciones para iOS",
        "Programar en el lenguaje Swift 4",
        "Diseño de Interfaces para Apps Móviles",
        "Usar Xcode 9"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Contacto"
        ],
        "Preparándonos para nuestro Viaje": [
          "Controles de Udemy",
          "Temario",
          "Descargando nuestras Herramientas"
        ],
        "Introducción a Swift 4": [
          "Creando nuestro Proyecto",
          "Explorando nuestro Playground",
          "Hola Mundo",
          "Comentarios",
          "Operaciones Aritméticas",
          "Operador Módulo y Números de Punto Flotante",
          "Precedencia de Operadores Aritméticos",
          "Variables y Constantes",
          "Más Operadores",
          "Reto I",
          "Conversión de Tipos",
          "Operadores y Diferentes Tipos de Datos",
          "Tipos de Datos Inferidos",
          "Cadenas de Texto y Unicode",
          "Cadenas de Texto y Swift",
          "Concatenación",
          "Interpolación",
          "Tuplas",
          "Tuplas y Tipos de Datos",
          "Tuplas y Variables",
          "Enteros con Signo y sin Signo",
          "Boleanos",
          "Operadores Boleanos",
          "Operadores Boleanoss II",
          "Operadores Boleanos III",
          "Operadores Boleanos IV",
          "Expresiones If",
          "Expresiones If else",
          "Expresiones else if",
          "Alcance de las Variables",
          "Ciclos While",
          "Repeat While",
          "Break",
          "Rangos",
          "Ciclos For",
          "Expresiones Switch",
          "Switch y Rangos",
          "Switch y Condiciones",
          "Funciones I",
          "Funciones II",
          "Funciones III",
          "Funciones IV",
          "Funciones V",
          "Funciones VI",
          "Funciones VII",
          "Funciones VIII",
          "Funciones IX",
          "Funciones X",
          "Funciones Xi",
          "Funciones XII",
          "Creando Arreglos",
          "Optionals",
          "Optional Force Unwrapping",
          "if unwrapping",
          "Optional Binding",
          "Recapitulación Optionals",
          "Nil Coalescing"
        ],
        "Colecciones": [
          "Colecciones",
          "Arreglos en Swift",
          "Accediendo a Elementos",
          "Propiedades y Elementos",
          "Agregar Elementos",
          "Remover Elementos",
          "Modificar Elementos",
          "Recorrer Elementos",
          "Creación Diccionarios",
          "Creación Diccionarios II",
          "Acceso a Diccionarios",
          "Propiedades de los Diccionarios",
          "Agregando y Quitando Valores",
          "Removiendo Valores de un Diccionario",
          "Recorriendo Diccionarios",
          "Closures",
          "Closures como Parámetro",
          "Void Closures",
          "Alcance de las Closures"
        ],
        "Programación Orientada a Objetos en Swift": [
          "Estructuras en Swift",
          "Métodos y Estructuras de Datos",
          "Protocolos en Swift",
          "Propiedades en Swift",
          "Propiedades Almacenadas",
          "Propiedades Calculadas",
          "Setters y Getters",
          "Propiedades de Tipos",
          "Métodos",
          "LLamando a los Métodos",
          "Creando Métodos",
          "Inicializadores",
          "Métodos Mutables",
          "Métodos de Tipos",
          "Extensiones",
          "Introducción a la POO",
          "Creación de Clases",
          "Paso por referencia y paso por valor",
          "Mutating Clases",
          "Herencia",
          "Casting",
          "Sobreescritura de Métodos",
          "Métodos y Clases Finales",
          "Métodos Requeridos",
          "Desinicializadores",
          "Propiedades Débiles",
          "Enumeraciones",
          "Creando Enumeraciones",
          "Obteniendo Enumeraciones",
          "Valores Puros",
          "Valores Asociados",
          "¿Qué son los Protocolos?",
          "Creando Protocolos",
          "Propiedades de los Protocolos",
          "Propiedades de los Protocolos II",
          "Descargas"
        ],
        "Introducción al Desarrollo de Aplicaciones para iOS 11": [
          "Introducción a IOS 11",
          "Presentando nuestro Proyecto... Color Quotes",
          "Creando nuestro Proyecto",
          "Recorrido por Xcode",
          "Hola Mundo",
          "Breve Introducción a MVC",
          "Interface Builder",
          "Views",
          "Botones",
          "Agregando nuestro Segundo Label",
          "Cambiando Colores",
          "Editar Constraints en Size Inspector",
          "Introducción a Auto Layout",
          "Constraints",
          "Constraints II",
          "Probando nuestro Layout",
          "Controles y Botónes",
          "Outlets",
          "Recapitulación Controladores",
          "Estructura Cita",
          "Arreglo Citas",
          "Generador Citas Aleatorias",
          "Usando nuestra Cita",
          "Generador Colores",
          "Cambiando Colores",
          "Orientación del Dispositivo",
          "Agregando Iconos de nuestra App",
          "Reto de la Sección"
        ],
        "Autolayout, Navegación, Interfaces y Vistas": [
          "Nuestro Proyecto",
          "Creando nuestro Proyecto de Color Quiz",
          "Creando la Pantalla de Inicio",
          "Navegación y Segue Automático",
          "Sobre el Eje X y Y",
          "Navigation Controllers",
          "Editando Barra de Navegación",
          "Nuestro Enfoque",
          "QuizzViewController",
          "Enumeración de Preguntas",
          "Push View Controller",
          "Poniendo nuestras Propiedades",
          "Inicializadores",
          "Sobreescribiendo nuestro Método",
          "Poniendo nuestra Label",
          "Creando View Controller Manualmente",
          "Ajustando nuestra Vista",
          "Poniendo Botón de Si",
          "Poniendo Botón de No",
          "Recapitación",
          "Actualizando Preguntas",
          "Agregando Acciones a nuestro Botón con Código",
          "Mejorando Código",
          "Creando Preguntas Dinamicamente",
          "Results View Controller",
          "Modificando ResultsController",
          "Reiniciando",
          "Cargando Resultados",
          "Corrigiendo Detalles",
          "Retos"
        ],
        "Networking, Layouts Avanzados, JSON y Manejo de Datos": [
          "Nuestro Proyecto",
          "Creando Nuestro Proyecto",
          "Agregando las Imágenes de Nuestro Proyecto",
          "Background y Grados",
          "Label LLuvia y Humedad",
          "Humedad y LLuvia",
          "Reglas Avanzadas",
          "Posicionando nuestro Botón",
          "Activity Indicator",
          "Stack Views",
          "Stack Views II",
          "Recapitulando",
          "Lo que haremos en los próximos videos",
          "Creando nuestra Cuenta de Dark Sky",
          "Modelos de Datos",
          "Enumeración Icono",
          "ViewModels",
          "Outlets",
          "Probando los Modelos y la UI",
          "API y Peticiones HTTP",
          "Creando nuestra URL",
          "Haciendo peticiones a nuestra URL",
          "Hilos y Procesos",
          "Ejecutando Código en Background",
          "191 - Desplegando Información del Clima",
          "Mejorando nuestro Código",
          "JSONTasks",
          "Terminando nuestro Método",
          "DarkSkyClient",
          "DarkSkyClient II",
          "DarkSkyClient III",
          "DarkSkyClient IV",
          "DarkSkyClient V",
          "Actualizando nuestra Interface",
          "Mejorando nuestra App"
        ],
        "Table Views, Celdas, Manejo de Imágenes y Más": [
          "El Proyecto que Realizaremos",
          "Creando nuestra App de Contactos",
          "Probando nuestro Proyecto",
          "Explorando nuestro Proyecto",
          "Importando Imagenes",
          "Importando los Contactos",
          "Importando los Archivos",
          "Creando nuestras Clases",
          "Configurando nuestra App",
          "Filas y Columnas",
          "Celdas",
          "Estilos de Celdas",
          "Celdas Estáticas y Dinámicas",
          "Personalizando Tablas",
          "Creando los Outlets",
          "Contact Detail",
          "Table Header",
          "Creando Grupos de Contactos",
          "Desplegando Datos en Secciones",
          "Creando Celdas Personalizadas",
          "Recapitulando",
          "Conclusión",
          "BONUS LECTURE"
        ]
      },
      "requirements": [
        "Experiencia en Programación Previa es útil pero no indispensable",
        "Tener conexión a internet",
        "Tener una Mac con sistema operativo Sierra o superior"
      ],
      "description": "¡Hola!\nBienvenido al nuevo curso de iOS 11 Y Swift 4 – De Principiante a Experto.  Aquí aprenderás todo lo necesario para crear tu primera aplicación para iOS 11, el sistema operativo de los iPhones y iPads.\n¡Lo mejor de este curso es que no necesitas una amplia experiencia en programación, sólo una Mac y un increíble deseo de aprender!\nAlgunas de las ventajas que te ofrece este curso:\nCompletamente en español Aprender a programar y hacer aplicaciones móviles puede ser algo difícil y si le sumamos un idioma desconocido se vuelve una ardua labor. En este curso todo se explica de forma clara y didáctica.\nNo se requiere experiencia previa Muchos asumen que ya tienes una amplia experiencia previa y se saltan las cosas básicas. En este curso, empezaremos desde cero para que todos puedan aprender. Esto hace que los principiantes puedan llevar a cabo los proyectos y los expertos fortalezcan sus conocimientos previos.\nEnfocado a proyectos prácticos Olvídate de las diapositivas aburridas y charlas largas. En este curso quiero que todo se aprenda de forma práctica y divertida. Por lo tanto, aprenderás de la mejor manera posible: ¡Desarrollando aplicaciones móviles!\nAlgunos de los temas que veremos en este curso:\nSwift 4\nVariables\nCadenas\nCiclos\nDecisiones\nOptionals\nFunciones\nArreglos\nDiccionarios\nEstructuras\nExtensiones\nProtocolos\nClases\niOS 11\nAutolayouts\nViews(Botones,labels,etc)\nNavegación\nInterfaces\nModelo, Vista y Controlador\nControllers y Navigation Controllers\nNetworking\nJson\nLayouts\nImágenes\nTablas\nPlist\nStackViews\nMucho más!!!\nEspero que disfrutes este curso tanto como yo disfrute haciéndolo. Recuerda que puedes contactarme para cualquier duda que tengas. :D\n¡Saludos!",
      "target_audience": [
        "Cualquiera que quiera aprender a hacer aplicaciones para iOS",
        "Cualqueira que quiera aprender Swift 4"
      ]
    },
    {
      "title": "Flutter Avanzado: Tu conocimiento al siguiente nivel 2023",
      "url": "https://www.udemy.com/course/flutter-avanzado-fernando-herrera/",
      "bio": "sockets, bloc, provider, cubit, jwt, mongo, express, GPS, rutas en mapa, tráfico, ApplePay, GooglePay y mucho más",
      "objectives": [
        "Profundizar tu conocimiento de Flutter",
        "Realizar cobros en tu aplicación",
        "Hacer seguimiento y dibujar en mapas",
        "Marcadores personalizados tipo Uber",
        "Comunicación en tiempo real SIN Firebase",
        "Crear varios backend capaz de manejar y mantener nuestras aplicaciones",
        "Google Sign-in y Apple Sign-in contra nuestro propio backend",
        "Cumplir los requisitos de Apple para usar autenticación con redes sociales",
        "Mucho más"
      ],
      "course_content": {
        "Introducción": [
          "Curso Legacy",
          "Introducción",
          "¿Cómo funcionará el curso?",
          "¿Cómo hacer preguntas?",
          "Instalaciones necesarias",
          "¡Únete a Nuestra Comunidad de DevTalles en Discord!"
        ],
        "BandNameApp - Socket.io - Aplicación en tiempo real": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Demostración al final de lo que nos espera a continuación",
          "Inicio de proyecto - BandNamesApp",
          "Crear un modelo para el manejo de Bandas",
          "Interfaz básica de nuestro HomePage",
          "InputDialog y CupertinoDialog - Añadir a la lista",
          "Borrar una banda - Dismissible",
          "Realizar respaldo de nuestro proyecto a Github",
          "Código fuente de la sección"
        ],
        "BandNames - Socket Server - Express - Backend": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Inicio de proyecto - BandNames Socket Server",
          "Crear un directorio público",
          "Variables de entorno y Scripts",
          "Socket.io - Configuración inicial",
          "Emitir y Escuchar eventos",
          "Archivo independiente de la configuración de sockets",
          "Realizar respaldo de nuestro backend a Github",
          "Código fuente de la sección"
        ],
        "BandNames Flutter + Socket Backend": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Continuación de proyecto - BandNames",
          "Socket Service - Conectar nuestra App con el Socket Server",
          "Mostrar el Status del Servidor de Sockets",
          "Escuchar eventos del servidor de sockets",
          "Emitir evento de sockets desde Flutter",
          "Indicador visual si hay conexión con el Socket Server",
          "Backend: Lógica para el manejo de las votaciones",
          "Socket: Emitir bandas registradas",
          "Flutter: Escuchar evento 'active-bands'",
          "Socket: Votar por una Banda",
          "Socket: Agregar una nueva Banda",
          "Socket: Borrar Banda",
          "Pequeñas optimizaciones",
          "Gráfica en tiempo real",
          "Respaldo de nuestra aplicación a Github",
          "Código fuente de la sección"
        ],
        "Desplegar Socket Server en la nube": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Desplegar SocketServer en la nube",
          "Correr la aplicación en múltiples dispositivos"
        ],
        "RealTime Chat - Socket.io - Mongo - Express - JWT - Login y Registro": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Demostración del objetivo final de la sección",
          "Inicio de la aplicación - RealTime Chat",
          "Diseño del LoginPage",
          "CustomInputField",
          "Argumentos a nuestro CustomInput",
          "Botón Azul",
          "SingleChildScrollView",
          "Registro y Navegar entre las pantallas",
          "Respaldo de nuestra aplicación a Github",
          "Código de la sección"
        ],
        "Continuación de RealTime Chat - Usuarios y Mensajes": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Continuación de nuestra aplicación",
          "Pull to refresh",
          "ChatPage - Inicio",
          "Caja de texto de nuestro chat",
          "Detalles de nuestro ChatPage",
          "Mensajes de burbujas",
          "Animaciones de los mensajes",
          "Limpieza al cerrar el ChatPage",
          "Respaldo de la sección a GitHub",
          "Código fuente de la sección"
        ],
        "ChatApp - Backend": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Inicio de sección - ChatApp Backend",
          "MongoAtlas - Base de datos en la nube",
          "Conectar Node con Mongo Atlas",
          "Crear nuestro primer Rest endpoint - Crear Usuario",
          "Express Validator",
          "Middleware personalizado - ValidarCampos",
          "Crear usuario en base de datos",
          "Validar que no exista el email",
          "Encriptar la contraseña",
          "Generar JWT",
          "Login de Usuario",
          "Renovar el JWT",
          "Generar un nuevo JWT y retornar información del usuario",
          "Respaldo de nuestra aplicación a Github",
          "Código fuente de la sección"
        ],
        "ChatApp - Autenticando contra nuestro backend": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Nota de actualización",
          "Continuación de proyectos - Backend y FrontEnd - Autenticación",
          "Petición HTTP.POST al login",
          "Mapear respuesta de un login",
          "Bloquear botón mientras se realiza la autenticación",
          "Mostrar alerta si las credenciales no son correctas",
          "Guardar JWT en el Storage (Keychain IOS, KeyStore Android)",
          "Pantalla de Registro",
          "Mantener la pantalla de usuarios si tenemos un token válido",
          "Logout de nuestra aplicación",
          "Respaldo de nuestra aplicación a Github",
          "Código fuente de la sección"
        ],
        "Socket.io en nuestra aplicación de Chat": [
          "Introducción a la sección",
          "Temas puntuales de la sección",
          "Nota importante",
          "Continuación de proyectos",
          "Conectar al Socket Server después de un inicio de sesión",
          "Tarea - Cambiar ícono cuando hay conexión con el Socket Server",
          "Autenticando el cliente conectado por sockets",
          "Actualizar base de datos cuando un usuario se conecta",
          "Servicio para retornar los usuarios",
          "Mostrar lista de usuarios en nuestra App",
          "Usuario seleccionado para el chat",
          "Teoría sobre el envío de mensajes privados",
          "Emitir un mensaje del chat al servidor",
          "Escuchar mensajes del servidor en Flutter",
          "Backend - Modelo de Mensajes",
          "Guardar Mensaje en Base de Datos",
          "Backend - Servicio para obtener los mensajes de chat",
          "Cargar historial de chat en Flutter",
          "Respaldo del código a GitHub",
          "Código fuente de la sección"
        ]
      },
      "requirements": [
        "Conocer un poco de Dart",
        "Tener instalado Flutter en el equipo",
        "Tener un simulador funcional de preferencia un Android",
        "Haber trabajado con Flutter anteriormente",
        "Mucha energía para realizar tareas y ejercicios"
      ],
      "description": "Nota Legacy:\nDespués de varios años desde el lanzamiento inicial de este curso, queremos informarte que el mismo ha pasado a ser versión legacy. Esto implica que su contenido no recibirá actualizaciones adicionales y nuestro equipo de Co-instructores no continuará proporcionando soporte a preguntas relacionadas a este curso.\nSin embargo, queremos que sigas aprendiendo con confianza. Por eso, te invitamos a unirte a nuestra comunidad en Discord, donde podrás conectar con otros estudiantes, compartir conocimientos y recibir apoyo de nuestra comunidad.\n¡Gracias por tu comprensión y por ser parte de nuestra comunidad de aprendizaje!\n\n\nEste es un curso cargado de información importante que nos ayudará a crear mejores aplicaciones con este increíble SDK de Google, pero aunque todo parezca increíble, este no es un curso para personas que están iniciando en esta tecnología. Por favor revisen los requisitos del curso antes de inscribirse.\nEntre los temas que aquí tratamos están:\nGoogle y Apple Sign-in\nApplePay y GooglePay\nDirecciones en mapas\nTrazar rutas en mapas\nMarcadores personalizados\nWidgets como marcadores\nSockets tanto en el Frontend (Flutter) y nuestro Backend\nDiferentes gestores de estado\nFlutter BLoC, Cubits, Provider...\nRealTime Chat sin Firebase\nGráficas en tiempo real\nManejo de tokens\nPantallas de carga\nPermisos y detectar cambios en servicios\nRe-conexión en caso de caídas del socket server\nIdentificación y autenticación de clientes conectados por sockets\nNode\nMongoDB y MongoAtlas\nJWT\nAutenticación propia\nAutenticación con Google y Apple Sign-in tanto en el Frontend y Backend\nDespliegues en la nube\nGit, Github y ramas\nY mucho más…\nEl curso cuenta con estructuras robustas tanto en el Frontend (Flutter) y en el Backend (Node principalmente), las cuales nos ayudarán a crear toda todas las aplicaciones y manejar la información centralizada, también cuenta con despliegues de nuestras APIS y Socket Server para realizar las pruebas reales en dispositivos y tener todo el control de la autenticación mediante redes sociales.\nOtro objetivo del curso es ayudarte a perder el miedo a patrones como BLoC de manera que podamos apreciar el potencial y su poder sin perder el control del estado en ningún momento.\nAl finalizar el curso, habrás creado aplicaciones de seguimiento en tiempo real, chats, cobros, autenticaciones, backend, dominar BLoC y otros gestores de estado, encriptaciones de contraseña, manejo de sesiones de usuario, Apple y Google sign-in y muchas cosas más que  llegarás a necesitar cuando quieras crear una aplicación que requiera una o todas esas tecnologías.",
      "target_audience": [
        "Personas con conocimiento de Flutter",
        "Todos aquellos que quieran seguir su camino como desarrolladores en Flutter",
        "Aquellos que quieran aprender diferentes gestores de estado",
        "Todo aquel que quiera dominar BLoC principalmente",
        "Personas que quieran conectar una app de Flutter contra su propio backend"
      ]
    },
    {
      "title": "Android app Development using Chat GPT",
      "url": "https://www.udemy.com/course/android-app-development-using-chat-gpt/",
      "bio": "Unlocking AI-Powered Efficiency in Android Development with ChatGPT",
      "objectives": [],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Calculator using chat GPT",
          "Proposal app"
        ],
        "Hotel room booking app using Chat GPT": [
          "Part1",
          "Part5",
          "Part6",
          "Part7",
          "Part8",
          "Part9",
          "Part10"
        ]
      },
      "requirements": [
        "Student should be interested in learning"
      ],
      "description": "Hello Guys,\n\nMaster Android App Development with the Power of ChatGPT\nUnlock the future of app development by combining Artificial Intelligence with Android programming.\nThis one-of-a-kind course is your gateway to learning how to integrate ChatGPT into Android development workflows—boosting your productivity, code quality, and creativity like never before.\n\n\nWhat You Will Learn\nIntroduction to ChatGPT: Understand how ChatGPT works and its role in modern development\nSet Up for Success: Step-by-step guide to integrate ChatGPT into your Android environment\nCode Smarter: Use AI to generate boilerplate code, fix bugs, and optimize app logic\nReal-Time Help: Learn how to prompt ChatGPT effectively to get meaningful coding advice\nBuild with Confidence: Work on hands-on exercises and real-world scenarios using ChatGPT\nBoost Productivity: Explore how AI streamlines project development, problem-solving, and time management\n\n\nWho This Course is For\nAndroid developers who want to level up with AI\nStudents working on Android projects who want a productivity boost\nFreelancers and professionals seeking smarter development workflows\nAnyone curious about the real-world power of ChatGPT in coding\n\n\nInterested in going further?\nIf you want to build cross-platform apps using Jetpack Compose, Kotlin Multiplatform, or need 1-to-1 mentorship, connect with me for personalized training and advanced guidance.",
      "target_audience": [
        "All type of people"
      ]
    },
    {
      "title": "Java ile Android Programlama : 101",
      "url": "https://www.udemy.com/course/java-ile-android-programlama-101/",
      "bio": "Android Studio kullanarak sıfırdan uygulama geliştirmeyi öğrenin, gerçek dünya projeleriyle pratik yapın.",
      "objectives": [
        "Android Uygulama Geliştirme Temellerini Öğrenme",
        "Kullanıcı Arayüzü Tasarımı ve Etkileşimi",
        "Android Studio kurulumu, proje oluşturma ve emulator kullanımı",
        "Verilerin yerel ve bulut tabanlı saklanması",
        "Gerçek dünya uygulamaları geliştirme",
        "API entegrasyonu ve uygulama dağıtımı"
      ],
      "course_content": {
        "Hızlandırılmış Java Temelleri": [
          "Merhaba Java",
          "4 İşlem Mantığı",
          "Primitif Veri Tipleri",
          "Referans Veri Tipleri",
          "Tüm Operatörler",
          "Koşullar",
          "Koşullar Devam",
          "Basit Alıştırma",
          "Döngüler",
          "Sınıflar Genel Bilgi",
          "Bölüm Kaynakları"
        ],
        "Android 101 Giriş Dersleri": [
          "Kaynak Bilgilendirmesi",
          "Android Stüdyoyu İndirelim",
          "Android Studio Kurulumu",
          "Android Studio İnce Ayarlar",
          "Android Studio ilk Proje ve Genel Bakış",
          "Emulator Kurulumu",
          "Constraint Layout",
          "Wiget Mantığı",
          "Buton Etkileşimi",
          "Text Alanları",
          "ImageView",
          "ImageView ile Kaybolan Fotoğraflar Alıştırması",
          "CheckBox",
          "Basit Proje - Kişi Bilgilerini Yazdırma Uygulaması",
          "Radio Butonlarına Giriş",
          "Radio Buton Tasarımı",
          "Radio Butonları ile Alıştırma",
          "Toggle Butonları",
          "Spinner Mantığı",
          "Adapter Mantığı",
          "Listeden Veri Çekme",
          "Adaptörlerin Farklı Kullanımı"
        ],
        "Kullanıcı Etkileşimi": [
          "Toast Mesajları",
          "Snackbar",
          "Alert Dialog",
          "Bölüm Alıştırması -1",
          "Bölüm Alıştırması -2"
        ],
        "Liste ve Görünümler": [
          "List View Teorik Bilgi",
          "List View Alıştırma",
          "Recycler View",
          "Recycler View Veri Ekleme",
          "Recycler View Adaptör Yazılımı",
          "Recycler View Uygulamayı Canlıya Alma",
          "Recycler View Final",
          "Grid View Tasarım",
          "Grid View Veri Ekleme",
          "Grid View Adaptör",
          "Grid View Final",
          "ScrollView",
          "Web View"
        ],
        "Uygulama Yaşam Döngüsü": [
          "Uygulama Yaşam Döngüsü Teorik Ders",
          "Uygulama Yaşam Döngüsü Uygulamalı Anlatım",
          "Uygulama Yaşam Döngüsü Pratik Uygulama",
          "Servisler Teorik Eğitim",
          "Standart Servisler Uygulamalı",
          "İntent Servisler",
          "Receiver",
          "Receiver Kodlama",
          "Receiver Alıştırma Güncellemesi"
        ],
        "Intent Sınıfı": [
          "Intent Sınıf Nedir",
          "İntent Sınıfları Veri Gönderimi ve Yakalama",
          "İntent Sınıfları Alıştırma"
        ],
        "Bilinmesi Gerekenler": [
          "Gradle Nedir",
          "Manifest Dosyası",
          "Uygulama İkonunu Değiştirme",
          "Temalar ve Tema Üretme",
          "Butonlara Şekil Verme",
          "İmageButtonlar"
        ],
        "#PROJE - Yapılacaklar Listesi": [
          "Tasarım",
          "Temel Kodlar",
          "Proje Final"
        ],
        "#PROJE -Ağaç Bankası": [
          "Proje Tasarımı",
          "MainActivty Alanı",
          "Adapter Tanımları",
          "Ağaç Tasarım Sayfası",
          "Diğer Aktivite ile etkileşim",
          "Uygulama Final"
        ],
        "Local Kayıt Shared Preferences Sınıfı": [
          "Verileri Kayıt Edelim",
          "Kayıt Edilen Verileri Geri Çağırma",
          "Cinsiyet Verisini Alma ve Geri Yükleme",
          "Otomatik Kayıt Etme",
          "Beni Hatırla Butonu"
        ]
      },
      "requirements": [
        "Temel bilgisayar kullanımı bilgisi.",
        "İnternet bağlantısı",
        "Android Studio'yu indirip kurma yeteneği",
        "Java programlama dili temel bilgisi ( Ben öğretiyorum )"
      ],
      "description": "Java ile Android Programlama: 101 kursumuza hoş geldiniz!\nBu kurs, Android uygulama geliştirme dünyasına adım atmak isteyenler için ideal bir başlangıç noktasıdır. Android Studio kullanarak sıfırdan uygulama geliştirmeyi öğrenecek ve bu süreci adım adım takip ederek kendi projelerinizi yaratma becerisi kazanacaksınız. Kurs boyunca, teorik bilgileri pratik uygulamalarla pekiştirerek gerçek dünya projeleri üzerinde çalışacaksınız.\nKursumuz, Android geliştirme için gerekli olan temel Java programlama bilgilerini kapsar. Java’ya aşina olmayanlar için bu bölüm, gerekli temelleri sağlam bir şekilde öğrenmeleri için mükemmel bir fırsattır. Daha sonra, Android Studio kurulumu ve temel ayarlarından başlayarak, ilk projenizi oluşturacak ve emülatör kullanarak uygulamalarınızı test etmeyi öğreneceksiniz.\nKullanıcı arayüzü tasarımı ve etkileşimi, bu kursun önemli bir parçasıdır. ConstraintLayout, Button, TextView, ImageView, CheckBox, RadioButton, ToggleButton ve Spinner gibi çeşitli widget'ları kullanarak kullanıcı dostu arayüzler oluşturmayı ve bu arayüzler üzerinden kullanıcı etkileşimlerini yönetmeyi öğreneceksiniz.\nVeri yönetimi ve saklama, modern uygulamaların temel bileşenlerinden biridir. Shared Preferences ve Firebase gibi araçlarla uygulama verilerini yerel ve bulut tabanlı olarak nasıl saklayacağınızı öğrenecek, böylece verilerinizi kalıcı hale getirip senkronize edebileceksiniz.\nKursun sonunda, geliştirdiğiniz uygulamaları APK haline getirerek dağıtma sürecini de öğreneceksiniz. Bu, öğrendiğiniz tüm bilgileri pratikte kullanarak kendi uygulamalarınızı yayınlamanızı sağlayacak.\nBu kurs kimler için?\nAndroid uygulama geliştirmeye yeni başlayanlar.\nJava bilgisi olan programcılar.\nKendi mobil uygulamalarını oluşturmak isteyenler.\nAndroid geliştirme becerilerini geliştirmek isteyen öğrenciler.",
      "target_audience": [
        "Android uygulama geliştirmeye yeni başlayanlar.",
        "Java bilgisi olan programcılar(Olmayanlara temel java öğretiyorum)",
        "Kendi mobil uygulamalarını oluşturmak isteyenler.",
        "Android geliştirme becerilerini geliştirmek isteyen öğrenciler."
      ]
    },
    {
      "title": "Android : Pemula sampai Mahir",
      "url": "https://www.udemy.com/course/android-untuk-pemula/",
      "bio": "Menjadi Android Developer Expert menggunakan Pemrograman Kotlin",
      "objectives": [
        "Belajar Dasar Pengembangan Aplikasi Android",
        "Belajar Membuat Aplikasi di Android",
        "Menggunakan Bahasa Pemrograman Kotlin",
        "Studi Kasus Membuat Aplikasi Android"
      ],
      "course_content": {
        "Android Dasar": [
          "Pendahuluan",
          "Discord Group",
          "Pengenalan Android",
          "Android SDK",
          "Android Compatibility",
          "Membuat Project",
          "Struktur Project",
          "Gradle",
          "Android Virtual Device",
          "Android Development Mode",
          "Build Configuration",
          "Menjalankan Aplikasi",
          "Manifest File",
          "Activity",
          "Layout",
          "View",
          "View ID",
          "Action Listener",
          "Lateinit",
          "Log",
          "Resource",
          "String Resource",
          "Value Resource Lainnya",
          "Layout Resource",
          "Color State List Resource",
          "Drawable Resource",
          "Localization",
          "Asset Manager",
          "Raw Resource",
          "Context",
          "Application",
          "Device Compatibility",
          "Screen Compatibility",
          "Resource Compatibility",
          "Debugging",
          "Testing",
          "Local Test",
          "Instrumentation Test",
          "Profiling",
          "Reset Android Studio",
          "Membuat Game Batu Gunting Kertas",
          "Materi Selanjutnya"
        ]
      },
      "requirements": [
        "Sudah mengikuti kelas Kotlin Programmer Zaman Now",
        "Mengerti Bahasa Pemrograman Kotlin",
        "Mengerti Gradle"
      ],
      "description": "Selamat datang di course Android dari Pemula sampai Mahir. Disini kita akan belajar membuat aplikasi di Android dari tingkat dasar sampai tingkat mahir, disertai dengan studi kasus. Akan banyak materi yang akan dibahas di course ini seperti :\nPengenalan Android, kita akan berkenalan dengan sistem operasi Android, kenapa Android sangat populer, dan sejarah sistem operasi Android\nAndroid SDK dan Android Studio, kita akan bejalar tentang software development kit Android dan Android Studio yang digunakan untuk membuat aplikasi Android\nGradle, kita akan belajar gradle dan struktur project ketika membuat project untuk Android\nAndroid Virtual Device, kita akan belajar membuat emulator Android, sehingga kita tidak perlu menggunakan device Android ketika belajar membuat aplikasi di Android\nMenjalankan Aplikasi, kita akan belajar bagaimana cara menjalankan aplikasi di Android secara langsung menggunakan Android Studio\nActivity, kita akan belajar konsep dasar tentang Activity dan bagaimana cara membuat dan menjalankannya\nLayout, kita akan belajar tentang penggunakan Layout untuk membuat tampilan UI aplikasi Android\nView, kita akan belajar komponent-komponent UI yang tersedia di Android\nAction Listener, kita akan belajar bagaimana menambahkan action ke dalam View komponen yang sudah kita buat\nResource, kita akan belajar bagaimana melakukan management file resource seperti text, gambar, dan lain-lain di Android\nLocalization, kita akan belajar bagaimana agar aplikasi Android yang kita buat bisa mendukung lebih dari satu bahasa\nDevice, Screen dan Resource Compatibility, kita akan belajar bagaimana membuat aplikasi Android yang bisa berjalan di berbagai device dan screen\nTesting, kita akan belajar bagaimana cara membuat Unit Test dalam bentuk Local Test dan Instrumentation Test di Android\nProfiling, kita akan belajar bagaimana melakukan profiling aplikasi Android yang sedang berjalan\nStudi Kasus, kita akan belajar studi kasus membuat aplikasi, misalnya aplikasi Batu Gunting Kertas\nFokus kelas Android ini akan menggunakan bahasa pemrograman Kotlin, sedangkan untuk materi Kotlin tidak akan dibahas di kelas ini, jadi pastikan Anda sudah familiar dengan bahasa pemrograman Kotlin\nSaya tunggu di kelas, salam programmer zaman now!",
      "target_audience": [
        "Programmer yang ingin belajar membuat aplikasi di Android"
      ]
    },
    {
      "title": "Beginner to Pro: How to Develop for Apple Watch - 10+ Apps!",
      "url": "https://www.udemy.com/course/beginner-to-pro-how-to-develop-for-apple-watch/",
      "bio": "Learn how to make Apple Watch apps from scratch. No prior experience needed. Become an expert Apple Watch Developer.",
      "objectives": [],
      "course_content": {
        "First Step: Introduction & Setting up the Development Environment": [
          "Introduction",
          "How to Download XCode",
          "Setting up an Apple Watch Project"
        ],
        "Getting used to the Basics": [
          "Working with Labels and Buttons",
          "Using Tables",
          "Using Sliders and Switches",
          "Communicating between iPhone and Apple Watch: Part 1",
          "Communicating between iPhone and Apple Watch: Part 2"
        ]
      },
      "requirements": [
        "Prior programming experience is preferred but not required as everything is taught from scratch"
      ],
      "description": "This course will teach you everything about the Apple Watch right from the very basic to the more complex concepts you will require to build an app from scratch.\nThis course is taught in Objective-C and will be updated on a regular basis with new app lessons. The lectures also include detailed descriptions which have links to the various resources (such as icons and pictures) being used in the lectures so that you have access to all the resources to start making your own app.\nThe lectures are 5-12 minutes long. If you spend even 15min/day on this course, it will only take you 2-3 weeks to get a good hold of the subject before you can start experimenting with apps on your own.\nThe course is structured so that we go from the very basics of Apple Watch Development to the more complex topics which involve working with the iPhone and Apple Watch both.\nThis course is for everyone who wants to learn how to develop for the Apple Watch, learn Objective-C and wants to start developing for iOS in general.",
      "target_audience": [
        "This course is meant for people who are new to iOS and Apple Watch Development",
        "No prior programming experience needed so anyone can take this course",
        "Course is taught in Objective-C, so people who are interested in Objective-C should join"
      ]
    },
    {
      "title": "Ionic 3 - Recursos Nativos para IOS e Android",
      "url": "https://www.udemy.com/course/ionic-3-recursos-nativos-para-ios-e-android/",
      "bio": "Aprenda a trabalhar com recursos nativos para IOS e Android com o Framework Ionic 3",
      "objectives": [
        "Trabalhar com recursos nativos para IOS e Android com o Framework Ionic 3",
        "Configurar o ambiente de trabalho para gerar aplicativos para Android e para IOS",
        "Manipular os principais recursos nativos e muito mais"
      ],
      "course_content": {
        "Aulas": [
          "Introdução ao Curso",
          "Dicas e Requisitos para o Curso",
          "Instalando e configurando o Ionic 3",
          "Como baixar o código fonte do curso",
          "Preparando o Ambiente para Trabalhar com Android",
          "Preparando o ambiente para trabalhar com IOS",
          "O que são Recursos Nativos?",
          "Trabalhando com a Camera",
          "Exibindo a Imagem na Tela",
          "Login com Touch ID do IOS",
          "Configurando o Plugin do Google Maps",
          "Exibindo o Mapa com Google Maps",
          "Adicionando Marcações no Mapa",
          "Controles e Cliques no Google Maps",
          "Utilizando Geolocalização",
          "Transformar Texto em Fala",
          "Comandos de Voz - Parte 1",
          "Comando de Voz - Parte 2",
          "Configurando o Storage",
          "Formulário e Lista de Cursos",
          "Lógica para Adicionar e Listar",
          "Persistindo os dados com Storage",
          "Lógica para Atualizar e Deletar Registros",
          "Atualizando Registros",
          "Deletando Registros",
          "Criar Contatos com Ionic 3",
          "Testar Plugin Nativo no Navegador",
          "Push Notification com Firebase",
          "Trabalhando com Dialogs",
          "Gerando o APK Android para Produção",
          "Removendo um Plugin do Projeto",
          "Introdução ao Projeto Prático",
          "Criando um Novo projeto",
          "Configurando o Plugin de HTTP",
          "API de Previsão do Tempo",
          "Lógica para exibir os Registros",
          "Consumindo a API com Http Nativo",
          "Método de Busca pelo Nome da Cidade"
        ],
        "Aulas de Atualizações": [
          "Push Notification com Ionic 3 - Parte 1",
          "Push Notification com Ionic 3 - Parte 2"
        ]
      },
      "requirements": [
        "Conhecimento em Typescript",
        "Conhecimento em Angular 4",
        "Lógica de programação"
      ],
      "description": "Aprenda a trabalhar com recursos nativos para IOS e Android com o Framework Ionic 3.Você vai aprender a configurar o ambiente de trabalho para gerar aplicativos para Android e para IOS. Vai aprender a manipular os principais recursos nativos e muito mais. Esse curso está em desenvolvimento e por esse motivo está com o valor de pré-venda e você pode ainda ajudar no desenvolvimento do restante das aulas deixando suas dúvidas e comentários.",
      "target_audience": [
        "Desenvolvedor web",
        "Desenvolvedor Mobile",
        "Desenvolvedor IOS",
        "Desenvolvedor Android"
      ]
    },
    {
      "title": "Master Git & GitHub: Essential Skills for Developers[Arabic]",
      "url": "https://www.udemy.com/course/master-git-github-essential-skills-for-developersarabic/",
      "bio": "الدليل الشامل لإتقان جيت وجيت هب: مهارات أساسية للمطورين",
      "objectives": [
        "Introduction to version control and its importance",
        "Basic Git commands: init, add, commit, status, log",
        "Understanding repositories, both local and remote",
        "Creating and managing branches.",
        "The concept of merging and resolving conflicts",
        "Best practices for branching strategies",
        "Setting up a GitHub account and repositories",
        "Pushing, pulling, and cloning repositories",
        "Using GitHub for collaboration and code review",
        "Collaborative Development Practices",
        "Integrating with Development Workflows"
      ],
      "course_content": {},
      "requirements": [
        "Basic Computer Skills",
        "Fundamental Programming Knowledge"
      ],
      "description": "The \"Master Git & GitHub: Essential Skills for Devs\" course is your comprehensive guide to mastering the art of version control and collaboration with Git and GitHub, two of the most essential tools in the modern developer's toolkit. This course is meticulously designed to take you from the very basics of Git, introducing you to the world of version control, to the more advanced features that allow for efficient collaboration and project management on GitHub.\nWhat You'll Learn:\nFoundational Concepts: Start with understanding the importance of version control in software development and how Git and GitHub fit into this landscape.\nGit Commands & Operations: Dive deep into Git commands, learning how to initiate repositories, commit changes, and manage your project's history.\nBranching & Merging: Master the art of branching and merging, essential for managing features and collaboration in a codebase.\nGitHub Workflows: Harness the full power of GitHub, from pushing code and collaborating with others to leveraging pull requests and managing issues.\nAdvanced Features: Explore advanced Git and GitHub features, including rebasing, tags, GitHub Actions, and more for professional-level project management.\nReal-World Applications: Engage in hands-on exercises and projects that simulate real-world scenarios, preparing you for actual software development challenges.\nWho Should Enroll:\nThis course is perfect for anyone looking to solidify their software development skills, whether you're a beginner eager to step into the world of coding, an experienced developer looking to adopt version control practices, or even a project manager overseeing software projects. If you're interested in contributing to open-source, managing your own projects more efficiently, or collaborating seamlessly in a team, this course will equip you with the necessary skills.\nPrerequisites:\nA basic understanding of computer operation and a willingness to learn are all you need to start. We'll guide you through setting up Git, creating a GitHub account, and everything else you need to know from the ground up.\nCourse Features:\nExpert Instruction: Learn from experienced developers who bring real-world insights and best practices into the classroom.\nInteractive Learning: Engage with interactive lectures, hands-on projects, and peer discussions to reinforce your learning.\nFlexible Learning: Access course materials at your own pace, fitting your learning into your schedule.\nEnroll in \"Master Git & GitHub: Essential Skills for Devs\" today and unlock your potential as a proficient and collaborative software developer, ready to tackle the challenges of the modern development landscape.",
      "target_audience": [
        "Beginner Developers",
        "Experienced Developers",
        "Project Managers and Team Leads",
        "Freelancers and Independent Contractors"
      ]
    },
    {
      "title": "DevOps: iOS com fastlane",
      "url": "https://www.udemy.com/course/ios-fastlane/",
      "bio": "Aprenda a utilizar o fastlane para automatizar os builds e releases de um app iOS",
      "objectives": [
        "Criar pipelines de entrega contínua para iOS",
        "Utilizar o fastlane para fazer builds automatizadas",
        "Utilizar o fastlane para fazer release para App Store e Test Flight",
        "Utilizar o fastlane para gerenciar certificados e provisioning profiles"
      ],
      "course_content": {
        "Introdução": [
          "Introdução (parte 1) - Fastlane",
          "Introdução (parte 2) - Pré-requisitos",
          "Introdução (parte 3) - Demonstração do Curso"
        ],
        "Certificados e TestFlight": [
          "Criando um projeto no XCode",
          "App Store Connect & TestFlight",
          "Criando um Certificado de Distribuição",
          "Enviando um TestFlight (parte 1)",
          "Enviando um TestFlight (parte 2) - fix",
          "Enviando um TestFlight (parte 3) - Conclusão"
        ],
        "AdHoc": [
          "App Center - AdHoc",
          "App Center - AdHoc (iPhone)",
          "Firebase App Distribution - AdHoc",
          "Firebase App Distribution - (Service Account)",
          "Firebase App Distribution - AdHoc (iPhone)"
        ],
        "Instalando o Fastlane": [
          "Instalando o Fastlane (pare 1)",
          "Instalando o Fastlane (pare 2 - Bundler/Ruby)",
          "Instalando o Fastlane (pare 3 - Hello)"
        ],
        "Fastlane - Build & TestFlight": [
          "Fastlane Template (download)",
          "Fastlane (.env) - vars de ambiente",
          "Fastlane - build",
          "Fastlane - TestFlight",
          "Teste iPhone"
        ],
        "Fastlane - match": [
          "Match - Introdução",
          "Match - nuke",
          "Match - create keys / profiles",
          "Match - create keys / profiles (parte 2)",
          "Match - Xcode - Manual Code Sign",
          "Match - Demo download cert / profiles",
          "Match - TestFlight",
          "Match - Install iPhone"
        ],
        "Demo - Pipelines": [
          "Jenkins - arquivos download",
          "Docker Desktop (mac)",
          "Docker & Jenkins",
          "Configurando o Jenkins",
          "Executando a Pipeline",
          "GitLab Runner",
          "Bitrise (parte 1)",
          "Bitrise (parte 2) - Criando o projeto",
          "Bitrise (parte 3) - Enviando um Testflight",
          "Bitrise (parte 4) - Fastlane",
          "GitHub Actions - Introdução",
          "GitHub Actions - parte 1",
          "GitHub Actions - parte 2"
        ]
      },
      "requirements": [
        "Conhecer desenvolvimento de aplicativos para iOS",
        "Conhecer o processo de build para iOS",
        "Conhecer o processo de controle de certificados e provisioning profiles"
      ],
      "description": "Este curso é indicado para desenvolvedores iOS que desejam aprender a utilizar o fastlane para automatizar os builds e releases de um aplicativo iOS.\nAtenção: É pré-requisito conhecimentos de desenvolvimento de aplicativos para iOS e é recomendável o conhecimento sobre arquivos de certificados e profiles e também envio de apps para o TestFlight.\nNo curso será feito uma revisão desta parte básica, mas o objetivo é mostrar como o fastlane consegue automatizar os builds, releases e todo o controle e gerenciamento dos certificados e profiles.\nO Curso será 100% prático e será mostrado como:\nCriar certificados, profiles e enviar Test Flight\nCriar releases de distribution e adhoc (Firebase & App Center)\nInstalação e Configuração do fastlane\nUtilizar o fastlane para gerenciar e versionar no Git os certificados/profiles\nDemonstrações de pipelines no Jenkins, GitLab Runner, Bitrise e Github Actions.\nTambém será explicado como enviar builds automaticamente para:\nApp Store / TestFlight\nFirebase Test Lab\nApp Center Test\nPor fim, este curso visa te mostrar a melhor ferramenta de automação de builds para iOS e vai econonizar horas e horas de trabalho, suas e da sua equipe. Deixe o fastlane controlar os certificados e profiles e não tenha mais dor de cabeça!\nCom os conceitos aprendidos neste curso você terá toda a base necessária para criar pipelines que usam o fastlane em qualquer provedor de CI/CD.\nBons estudos, att.",
      "target_audience": [
        "Desenvolvedores iOS",
        "Desenvolvedores de app híbridos que queiram aprender fastlane para iOS"
      ]
    },
    {
      "title": "Swift IOS 9 الدورة الشاملة لتطوير وبناء تطبيقات",
      "url": "https://www.udemy.com/course/swift-ios-9/",
      "bio": "Flappy Bird سوف نقوم ببناء تطبيقات حقيقية مثل تطبيق أنستجرام و لعبة Swift 2 و Xcode 7 بأستخدام",
      "objectives": [
        "تريد iOS تطوير أي تطبيق",
        "بناء تطبيقات للعمل أو مؤسستك",
        "تعلم لغة Swift 2",
        "مجموعة من الكودات بلغة سويفت",
        "App Store نشر التطبيق الخاص بيك في متجر"
      ],
      "course_content": {
        "المقدمة (Introduction)": [
          "ماذا سوف تحتوي الدورة ؟ (Course Introduction)"
        ],
        "تحميل نظام الماك على الويندز (Download Mac OS on Windows)": [
          "تحميل برنامج النظام الوهمي (Download VM Ware)",
          "تحميل نظام الماك على النظام الوهمي (Download Mac in Vm Ware)"
        ],
        "برنامجك الأول (First Application)": [
          "تحميل برنامج XCode (Download XCode)",
          "فتح برنامج XCode (Open XCode)",
          "أستخدام Label (Use Label)",
          "أضافة زر (Add UIButton)",
          "تغير الألوان (Change Color)",
          "أستخدام Navigation Controller (Add Navigation Controller)",
          "أستخدام TextField (Using UITextField)",
          "أخطاء شائعة",
          "أختبار الأول"
        ],
        "مقدمة عن Swift 2": [
          "Swift مع Playground",
          "المتغيرات --١ (Variable 1)",
          "المتغيرات -- ٢ (Variable 2)",
          "الجملة الشرطية (If Statement)",
          "المصفوفات (Array & Dictionary)",
          "لعبة لتخمين الرقم (Guess Number)",
          "الحلقات (For-Loop and While-Loop)",
          "برنامج معرفة الأعداد الأولية (Prime Number Program)",
          "تطبيق التحويل من التاريخ الميلادي الى الهجري 1",
          "تطبيق التحويل من التاريخ الميلادي الى الهجري 2",
          "أختبار الثاني"
        ],
        "شرح الدوال و الكلاس (Class and Function)": [
          "مقدمة عن الكلاس (Introduction About Class)",
          "شرح الكلاس (Use Classes)",
          "مقدمة عن أستخدام الدوال (How to use Function)",
          "أستخدام الدوال (Use Function 2)",
          "أستخدام الدوال داخل الكلاس (Use Function inside Classes)",
          "أختبار"
        ],
        "التخزين والمحتوى المباشر (Storage and Live Content)": [
          "أضافة شريط للبرنامج (Add Navigation Bar)",
          "StopWatch برنامج (StopWatch App)",
          "TableView أستخدام (Using TableView)",
          "TableView أستخدام (XCode File )",
          "برنامج مضروب العدد (AppTimesTable)",
          "برنامج مضروب العدد (XCode File)",
          "حفظ البيانات (Using NSUserDefualt)",
          "حفظ البيانات (XCode File)",
          "To Do List برنامج (Create To Do List App)",
          "To Do List برنامج (XCode File)",
          "استخدام محتوى الويب (Using Web Content)",
          "أستخدام متحوى الويب (XCode File)",
          "أستخدام النصوص (Working With Strings)",
          "أستخدام النصوص (XCode File)",
          "برنامج الطقس (What's The Weather)",
          "برنامج الطقس (What's The Weather)",
          "برنامج الطقس (XCode File)"
        ],
        "AutoLayout استخدام (Using AutoLayout)": [
          "AutoLayout مقدمة عن (Intoduction About Autolayout)",
          "AutoLayout شرح (AutoLayout)",
          "Size classes أستخدام (Using Size Classes)",
          "مع الصور والخطوط AutoLayout أستخدام ال (Using Adapative Layout)",
          "UIStackView شرح (Using UIStackView)",
          "أختبار"
        ],
        "التعامل مع الصور , الخرائط والموسيقى (Media Images, Maps Music)": [
          "التعامل مع الصور (Using UIImageView)",
          "التعامل مع الصور (XCode File )",
          "وضع المؤثرات (Animations)",
          "وضع المؤثرات (XCode File)",
          "لعبة أكس أو (Create Tic Tac Toe Game)",
          "لعبة أكس أو (Create Tic Tac Toe Game)",
          "لعبة أكس أو (XCode File)",
          "استخدام الخرائط (Using MapKit)",
          "استخدام الخرائط (XCode File)",
          "أضافة علامة دالة داخل الخريطة (Add Annotation)",
          "أضافة علامة دالة داخل الخريطة (XCode File)",
          "الحصول على موقع المستخدم (Get User Location)",
          "الحصول على موقع المستخدم (XCode)",
          "تطبيق أين أنا (Where Am I App)",
          "تطبيق أين أنا (XCode File)",
          "Segue شرح (Advanced Segue)",
          "Segue شرح (XCode File)",
          "برنامج الأماكن المفضلة (My Please App)",
          "برنامج الأماكن المفضلة (My Please App)",
          "برنامج الأماكن المفضلة (XCode File)",
          "أستخدام ملفات الصوت (Working With Audio)",
          "أستخدام ملفات الصوت (XCode File)",
          "بناء تطبيق للموسيقى (Build Music App)",
          "بناء تطبيق للموسيقى (XCode File)",
          "أستخدام السحب والأهتزاز (Use Swipe And Shake)",
          "أستخدام السحب والأهتزاز (XCode File)",
          "برنامج أهتزاز لسماع الموسيقى (Shake For Music)",
          "برنامج أهتزاز لسماع الموسيقى (XCode File)"
        ],
        "Core Data": [
          "Cora Data مقدمة عن (Introducing Core Data)",
          "Cora Data مقدمة عن (XCode File)",
          "Core Data التعامل مع (Working With Core Data)",
          "Core Data التعامل مع (XCode File)",
          "تحميل الصور من الويب (Dwonload Image From Web)",
          "تحميل الصور من الويب (XCode File)",
          "JSON التعامل مع (Working With JSON)",
          "JSON التعامل مع (XCode File)",
          "Web View التعامل مع (Using WebView)",
          "Web View التعامل مع (XCode File)",
          "Blog Reader برنامج (App Blog Reader)",
          "Blog Reader برنامج (App Blog Reader)",
          "Blog Reader برنامج (XCode File)"
        ],
        "أنستجرام (Instagram)": [
          "Parse مقدمة عن (Introduction To Parse)",
          "Parse برنامج الاول بستخدام (Parse Hello World)",
          "Parse Hello World (XCode File)",
          "Parse أسترداد وتحديث البيانات في (Reteriving And Updating Data in Parse)",
          "Parse أسترداد وتحديث البيانات في (XCode File)",
          "أسترداد الصور من المكتبه او الكاميرا (get Image From PhotoLibrary or Camera)",
          "أسترداد الصور من المكتبه او الكاميرا (XCode File)",
          "Spinners And Alerts",
          "Spinners And Alerts (XCode File)",
          "التسجيل وتسجيل الدخول في أنستجرام (Login And Signup)",
          "التسجيل وتسجيل الدخول في أنستجرام (XCode File)",
          "جدول المستخدمين (User Tables)",
          "جدول المستخدمين (User Tables)",
          "جدول المستخدمين (XCode File)",
          "تحديث البيانات من خلال السحب (Pull To Refreshed Data)",
          "تحديث البيانات من خلال السحب (XCode File)",
          "رفع الصور (Post Image)",
          "رفع الصور (XCode File)",
          "Feed Page",
          "Feed Page (XCode File)"
        ]
      },
      "requirements": [
        "جهاز حاسوب"
      ],
      "description": "دورة كاملة ومتكاملة لتعلم بناء وتطوير تطبيقات الايفون والايباد وايضا على ساعة أبل بصورة احترافية وذلك من خلال سلسلة دروس مبسطة وسلسة، الدورة معدة للمبتدئين وبعتبار لا يوجد خبره برمجية سابقة\nفي كل درس يتم عرض موضوع مبسط باستخدام الامثلة والشرح والتوضيح\nالدروس عبارة عن فيديو بالصوت والصورة\nالدروة معدة من الصفر وحتى الاحتراف\nتشمل الدروة بناء العديد من التطبيقات الحقيقية\nالدروة تؤهلك لاكتساب مهنية رائعة ومربحة جدا\nالدورة تتطرق لكافة المواضيع الحيوية لتعلم بناء تطبيقات للايفون والايباد\nThe First and the best course about iOS development in arabic language, this is the complete course that will help you create the next amazing iPhone or iPad application and all that in arabic language by ِAbdalrhman, don't think twice and take this course today, since something amazing will happen to your career. this course is including all the required skills to build an iPhone or iPad application step by step by the Best Teacher in arab world in iOS and swift development for iPhone and iPad Devices.\nIn this course you will learn how to :\nUse Xcode\nBuild First Application using Swift language\nButton\nLabel\nSwitch\nSlider\nProgress bar\nmulti views\nTables\nCore Data\nJson\nMultiMedia\nSegue\nTimer\nMaps\nSubmit to app store\nMake Real application with swift\nBegin new career as iOS developer\nMake an idea as a real application",
      "target_audience": [
        "أي شخص يريد أن يتعلم كيفية بناء تطبيقات",
        "الناس الذين يريدون الكسب من تطوير التطبيق",
        "أي شخص يريد أن يتعلم البرمجة",
        "للمبدتئين (لا تحتاج الي خبرة برمجية سابقة )"
      ]
    },
    {
      "title": "برمجة التطبيقات من الاساسيات والى سوق التطبيقات Swift 3",
      "url": "https://www.udemy.com/course/swift3-arabic/",
      "bio": "تعلم برمجة تطبيقات الايفون والايباد باحدث لغة برمجة من شركة ابل من الاساسيات وحتى رفع التطبيق الى سوق التطبيقات",
      "objectives": [
        "برمجة تطبيقات كاملة",
        "وضع مواصفات عالية في التطبيقات من الاشعارات والى غيرها من الامور الرائعة",
        "استخدام الاعلانات للربح من التطبيقات",
        "وضع التطبيق على سوق التطبيقات باحترافية"
      ],
      "course_content": {
        "الاساسيات": [
          "Downloading Xcode 8",
          "Playground",
          "ابدا مع الاكواد",
          "مظهر الكود العمل على الاكواد",
          "المتغير ضد الثابت",
          "Print & String",
          "انواع المتغيرات",
          "انواع المتغيرات والتحويل بين المتغيرات",
          "العمل مع الدالة الشرطية",
          "الدالة الشرطية مع المتغيرات المختلفة",
          "خصائص الدالة الشرطية",
          "العمل على المصفوفات",
          "خصائص المصفوفات الجزء الاول",
          "خصائص المصفوفات الجزء الثاني",
          "العمل مع القواميس الجزء الاول",
          "العمل مع القواميس الجزء الثاني",
          "تداخل المصفوفات والقواميس الجزء الاول",
          "تداخل المصفوفات والقواميس الجزء الثاني",
          "Enumeration & Switch 1",
          "Enumeration & Switch 2",
          "الحلقات التكرارية الجزء الاول",
          "الحلقات التكرارية الجزء الثاني",
          "الدوال الجزء الاول",
          "الدوال الجزء الثاني",
          "الدوال الجزء الثالث",
          "الدوال الجزء الرابع",
          "Structures",
          "Optionals",
          "Classes",
          "Classes & Structure 1",
          "Classes & Structure 2"
        ],
        "اساسيات العمل مع التطبيقات الحية": [
          "البداية مع التطبيقات الحية",
          "UIViewController",
          "التعامل مع الخصائص المختلفة",
          "UIKit",
          "عناصر التطبيق ومهامهم",
          "Outlet & Action",
          "UIView , UILabel , UIButton"
        ],
        "AutoLayout": [
          "مقدمة",
          "وضع المسافات الجزء الاول",
          "وضع المسافات الجزء الثاني",
          "وضع الاحداثيات الثابتة",
          "وضع عنصرين في نفس الافق",
          "وضع العناصر عموديا",
          "وضع عدة عناصر في نفس الافق الجزء الاول",
          "وضع عدة عناصر في نفس الافق الجزء الثاني",
          "وضع عدة عناصر في نفس الافق الجزء الثالث",
          "تناسب الطول والعرض",
          "عنصر بحجم الشاشة",
          "تصحيح الاخطاء مع تحديث الاكس كود",
          "تطبيق عملي",
          "التعامل مع الواجهة في داخل الواجهة"
        ],
        "UICollectionView": [
          "بداية التصميم والعمل على التطبيق",
          "اكمال اعداد الاكواد وعرض الصور",
          "جلب صور المدن وعرضها",
          "اكمال عرض الصور في الصفحة الرئيسية والانتقال الى الصفحة الثانية",
          "ترتيب العمل عن طريق المصفوفة",
          "اكمال وضع الاسماء والمعلومات لكل مدينة",
          "عرض الاسم اسفل صورة المدينة",
          "بداية التصميم في صفحة العرض الثانية",
          "التعديل على التصميم والالوان والقياسات للصفحة الثانية",
          "جعل الصورة قابلة للتكبير والتصغير",
          "جعل الصورة ثابتة في اثناء التكبير والتصغير",
          "الغاء الحواف الحادة",
          "حل مشكلة الحواف الحادة في الصورة بعد التكبير",
          "وضع حدود جميلة وتحسين التصميم بشكل عالي",
          "وضع اللمسات الاخيرة والانتهاء من التطبيق"
        ],
        "The power of UIStackView": [
          "البدء في العمل مع تطبيق الخصم",
          "تقسيم الشاشة حسب العناصر",
          "وضع خلفية",
          "وضع جمالية اللون الشفاف ولوحة المفاتيح",
          "تصميم الجزء العلوي من التطبيق",
          "Sender , tag , IBAction",
          "UITapGestureRecognizer",
          "Select or Deselect class",
          "التحديد والغاء التحديد عن طريق الكلاس",
          "متغيرات القيمة المحسوبة",
          "كتابة السعر عن طريق لوحة المفاتيح الخاصة بنا",
          "حل مشكلة استخدام النقطة في السعر",
          "عدم الكتابة عند الغاء التحديد",
          "عملية الحذف والرجوع للوراء",
          "الرقم الكبير",
          "اكمال خانة الخصم",
          "اكمال خانة الضريبة",
          "حساب النتيجة النهائية",
          "الازرار المساعدة"
        ],
        "وضع اكثر من لغة في التطبيق": [
          "التصميم",
          "الانتقال والرجوع",
          "كلاس خاص للغات",
          "حفظ اللغة حتى بعد الخروج من التطبيق",
          "تغير النصوص بين اللغتين",
          "لمسات اخيرة",
          "SmartDiscount XCProject"
        ],
        "بناء قارئ مقالات مدونة وورد بريس احترافي": [
          "البداية",
          "وضع العناصر الاساسية",
          "العمل على التصميم والواجهة",
          "UITableView",
          "اكمال العمل على التصميم",
          "بناء صفحة عرض المقالة",
          "وضع الاعدادات في الموقع",
          "انشاء كلاس جلب البيانات الجزء الاول",
          "انشاء كلاس جلب البيانات الجزء الثاني",
          "انشاء كلاس جلب البيانات الجزء الثالث",
          "انشاء كلاس جلب البيانات الجزء الرابع",
          "انشاء كلاس جلب البيانات الجزء الخامس",
          "انشاء كلاس جلب البيانات الجزء السادس",
          "اكمال كلاس جلب البيانات ووضع دالة ارجاعية",
          "انشاء مسار رئيسي لجلب البيانات",
          "انشاء كلاس تنزيل الصور",
          "البدء بجلب البيانات مع الصور",
          "انشاء مسار فرعي لتنزيل الصور",
          "حفظ الصور بعد التنزيل الجزء الاول",
          "حفظ الصور بعد التنزيل الجزء الثاني",
          "انشاء دالة لجلب اسم كاتب المقالة",
          "وضع مكان لاسم الكاتب في التطبيق",
          "جلب اسم الكاتب وعرضه في قائمة المقالات",
          "حفظ الاسماء للكتاب في التطبيق بعد التنزيل",
          "جلب المقالات كصفحات في التطبيق الجزء الاول",
          "جلب المقالات كصفحات في التطبيق الجزء الثاني",
          "جلب المقالات كصفحات في التطبيق الجزء الثالث",
          "عمل شكل تنزيل بسيط للتطبيق",
          "URLSession 1",
          "URLSession 2",
          "محاولة حل مشكلة الكتاب",
          "وضع التنزيل في اسفل المقالات بشكل جميل",
          "حل نهائي لمشكلة تنزيل الصور",
          "عرض المقالة في الصفحة الثانية",
          "تعديل حجم الصور ويبقى عليك حجم الفيديو",
          "Wordpress reader xcode project"
        ],
        "وضع الاعلانات والربح من التطبيقات": [
          "اعداد ووضع اعلان بانر الجزء الاول",
          "اعداد ووضع اعلان بانر الجزء الثاني",
          "اعداد ووضع اعلان بانر الجزء الثالث"
        ],
        "رفع التطبيق الى سوق التطبيقات": [
          "بداية اعداد مكان للتطبيق في الستور",
          "وضع خصائص ومواصفات التطبيق في الستور",
          "اكمال المعلومات ووضع صور الشاشة في صفحة الستور",
          "وضع ايقونة التطبيق",
          "وضع ايقونة التطبيق لجميع الاحجام وتصحيح خطا رفض التطبيق",
          "حل مشكلة الخطا الموجود في مكتبة جوجل للاعلانات",
          "اكمال الرفع وارسال التطبيق الى ابل وانتظار الفحص"
        ],
        "الاشعارات لقارئ المقالات": [
          "الاعداد لارسال الاشعارات",
          "انشاء شهادة الاشعار والتعامل مع حساب المطورين",
          "اكمال العمل على الشهادة",
          "اعداد موقع الوورد بريس لارسال الاشعار",
          "وضع الاعدادات الجانبية",
          "وضع البود للموقع",
          "محاولة حل مشكلة التعريف",
          "حل المشكلة SDK",
          "اكمال العمل على ارسال الاشعار",
          "تجربة استلام الاشعار على جهاز حي"
        ]
      },
      "requirements": [
        "احضار جهاز ماك او حاسوب فيه نظام الماك او اس",
        "حب التعلم والرغبة في النجاح"
      ],
      "description": "تعلم برمجة التطبيقات باحترافية معي انا اسامة جاسم مطور تطبيقات الايفون والايباد باحدث لغة برمجة من شركة ابل حيث سنتكلم في بداية الدورة عن الاساسايت ثم ندخل اعمق واعمق الى ان يصل مستواك لبرمجة تطبيقاتك الخاصة وايضا رفعها على سوق التطبيقات والربح منها لذلك اذا كنت تبحث عن دورة شاملة من الاساسيات والى سوق التطبيقات فهذه الدورة هي التي تبحث عنها لذا انضم معي الان ولنبدا بالبرمجة ولنبدا بالعمل الحر والربح الالكتروني والنجاح الالكتروني .",
      "target_audience": [
        "كل من يحب النجاح",
        "كل من يرغب ببناء تطبيقاته الخاصة",
        "كل من برغب بعمل مستقل"
      ]
    },
    {
      "title": "実践編：React NativeとFirebaseで作るiOS/Androidアプリ：お店レビューアプリ開発編",
      "url": "https://www.udemy.com/course/react-native-firebase/",
      "bio": "アプリはReact Native、バックエンドにFirebaseを採用し、サーバーと連携したアプリを開発します。実際に「お店レビューアプリ」を作りながら学びます。実務にも活用できるアプリ開発・運用方法を手に入れよう！",
      "objectives": [
        "React Nativeによる実践レベルのアプリ開発",
        "Firebaseの基礎",
        "Hooksを用いたコンポーネントの書き方",
        "Contextによる状態管理",
        "React Navigationによる画面遷移",
        "Firestoreによるデータ管理とその設計",
        "Cloud Storageへの画像ファイルアップロード・ダウンロード",
        "Firebase Authenticationを用いたログイン処理",
        "Cloud Functionを用いたバックエンド処理",
        "Algoliaと連携した全文検索の実装"
      ],
      "course_content": {
        "はじめに": [
          "本コースの概要と講師紹介",
          "React Nativeについて",
          "firebaseについて"
        ],
        "React Nativeアプリにfirebaseを組み込んでみよう": [
          "本セクションの概要",
          "firebaseのプロジェクト作成",
          "firebaseのwebコンソールを触ってみる",
          "expoのプロジェクトを作成",
          "(注意) Firebase SDKのバージョンについて",
          "React Nativeにfirebaseを組み込む",
          "React Nativeでfirestoreのデータを取得する",
          "firestoreのデータ構造について補足",
          "リファクタリング",
          "まとめ"
        ],
        "firestoreで検索やソートを実装してみよう": [
          "本セクションの概要",
          "サンプルデータの準備",
          "shopの一覧表示",
          "shopを評価の高い順にソート",
          "まとめ"
        ],
        "React Nativeの画面遷移を実装しよう": [
          "本セクションの概要",
          "React Navigationのインストール",
          "AppNavigatorを作成",
          "StackNavigatorの利用",
          "画面間でパラメーターを渡す",
          "TabNavigatorの利用",
          "モーダルの画面を実装",
          "ログイン後の画面遷移",
          "まとめ"
        ],
        "firebase authでユーザー認証を実装しよう": [
          "本セクションの概要",
          "匿名ログイン",
          "Contextによるユーザー情報の保持",
          "ログイン後の画面切り替え",
          "まとめ"
        ],
        "firestoreのデータを更新する": [
          "本セクションの概要",
          "ユーザー情報の編集",
          "firestoreの設計のコツ(非正規化)",
          "レビューの投稿フォーム",
          "レビューを投稿する",
          "カメラロールから写真を選択する",
          "※ Expo SDK 39における画像アップロードのエラーについて",
          "Cloud Strageに画像をアップロードする",
          "レビュー一覧の表示",
          "投稿したレビューを画面に即時反映する",
          "本セクションのまとめ"
        ],
        "Cloud functionでバックエンド処理を実装しよう": [
          "本セクションの概要",
          "Cloud functionの環境準備",
          "ユーザー名の更新を各レビューに反映する",
          "平均スコアの計算を非同期に行う",
          "まとめ"
        ],
        "セキュリティルールについて": [
          "セキュリティルールを設定する"
        ],
        "algoliaで全文検索を実装しよう": [
          "本セクションの概要",
          "algoliaのプロジェクト作成",
          "Cloud functionでalgoliaにindexを追加する",
          "React Nativeでalgoliaの検索を実行する",
          "まとめ"
        ],
        "おわりに": [
          "おわりのメッセージ"
        ]
      },
      "requirements": [
        "React NativeもしくはReactの基礎"
      ],
      "description": "本コースでは、React Nativeとfirebaseを組み合わせた、効率良いアプリ開発の手法について学びます。\n\n\n多くのアプリ開発では、フロントエンドだけでなくバックエンドのサーバーが必要となってきます。\n\n\nアプリ開発者にとって、サーバー側のインフラ構築や開発がネックになりがちですが、近年話題のfirebaseを用いることで非常に効率よくサーバー側を構築することが出来ます。\nReact NativeとFirebaseは非常に相性がよく、筆者自身もこの組み合わせで複数のアプリを開発し、その効率の良さに魅力を感じています。\n\n\nコーディングでは実際に「レストランのレビューアプリ」を作りながら学びます。\n\n\nこのアプリの中に\n- React NativeとFirebaseの組み合わせ型\n- Firebaseによるデータ管理やファイル管理\n- Algoliaによる全文検索\nなど、現場でも使えるノウハウをギュッと詰め込みました。\n\n\nアプリを開発しながら楽しく学びましょう！\n\n\n\n\n【この講座の対象者】\n・アプリ開発の経験はあるが、サーバー側の経験はない人\n・React Nativeでの開発を経験してみたい人\n・Firebaseの基礎を学びたい人\n\n\n\n\n【この講座では扱わないこと】\n・JavaScriptの基本的な文法\n・React Nativeの基礎\n※React Nativeの基礎の解説は薄めです。state, props, hooksなどのキーワードがピンとこない場合は基礎編を先におすすめします。\n\n\n【必要なもの】\n・mac\n・googleアカウント\n\n\n\n\n【更新情報】\n2020/12/19 ボーナスレクチャー「プッシュ通知を送る」を追加\n2020/10/3 レクチャー38「Expo SDK 39における画像アップロードのエラーについて」を追加",
      "target_audience": [
        "React Nativeでアプリを作りたいエンジニア"
      ]
    },
    {
      "title": "Convert Figma Design to React Native Expo App using AI 2025",
      "url": "https://www.udemy.com/course/convert-figma-design-to-react-native-expo-app-using-ai-2025/",
      "bio": "Master the art of transforming Figma designs into applications using Vercel v0 and ChatGPT guidance in just minutes.",
      "objectives": [],
      "course_content": {
        "Convert Figma Design to React Native Expo App": [
          "Introduction",
          "Converting Complicated Ecommerce App Screens",
          "Developing Ecommerce Product Screen",
          "Developing On-Boarding Ecommerce Screens",
          "Developing Sign In, Sign Up, and Password Screens",
          "How I Converted eCommerce Figma design to App",
          "Well Done! You Completed the Course"
        ]
      },
      "requirements": [
        "Basic knowledge of JavaScript and React.",
        "Familiarity with React Native or Expo is helpful but not mandatory.",
        "A Figma account (free or paid).",
        "A computer with Node.js installed.",
        "An eagerness to learn and build amazing apps!"
      ],
      "description": "Unlock the power of React Native and Expo with this comprehensive and practical course, designed to teach you how to bring Figma designs to life with precision and efficiency, allowing you to focus more on backend development. Whether you're a beginner eager to explore app development or an experienced developer looking to sharpen your skills, this course will guide you step-by-step in converting even the most complex Figma designs into fully functional Expo applications.\nUsing Vercel's v0 for optimized workflows and ChatGPT for AI-driven efficiency, you'll discover a seamless way to handle intricate designs and streamline your development process. As a real-world example, we'll walk through the transformation of some of the most challenging Figma designs into polished Expo app screens. Additionally, I'm providing the full Chat History of V0 interactions, showcasing the entire process of converting a 38-screen eCommerce Figma design into a complete, production-ready application. This behind-the-scenes insight will help you understand the practical applications of AI tools and boost your confidence in tackling similar projects on your own.\nBy the end of this course, you'll not only gain hands-on experience but also develop a deep understanding of bridging the gap between design and development. You'll be empowered to build professional-grade apps efficiently, effectively, and with a newfound appreciation for the synergy between creativity and technology.",
      "target_audience": [
        "React Native developers looking to improve their workflow with Figma and Expo.",
        "UI/UX designers who want to bring their designs to life.",
        "Freelancers and entrepreneurs aiming to create and deploy apps quickly.",
        "Developers interested in leveraging AI tools like Vercel v0 and ChatGPT."
      ]
    },
    {
      "title": "Flutter App Creation: Google Maps Integration Guide [Arabic]",
      "url": "https://www.udemy.com/course/flutter-app-creation-google-maps-integration-guide-arabic/",
      "bio": "دليل شامل ومتكامل لتعلم استخدام خرائط جوجل ف بناء التطبيقات",
      "objectives": [
        "Basic Integration of Google Maps",
        "Map Customization",
        "Creating and Managing Routes",
        "Custom Shapes and Areas",
        "Navigating Between Routes",
        "Location Tracking",
        "Practical Applications"
      ],
      "course_content": {
        "Introduction": [
          "Important Links",
          "Intro"
        ],
        "Setup Environment": [
          "Adding google maps package",
          "Pricing",
          "Finish Account Setup",
          "Create Project",
          "Generate Google Maps Api Keys",
          "Create Multiple Keys",
          "Android Restriction",
          "IOS Restriction",
          "Finish Configuration for android",
          "Finish Configuration for IOS"
        ],
        "Google Maps Camera": [
          "Display google maps",
          "Camera position",
          "Zoom level",
          "Camera Bounds",
          "Google maps Controller",
          "Update Camera"
        ],
        "Map Style": [
          "Map Type",
          "Map Style part one",
          "Map Style Part two",
          "Map Style Part three"
        ],
        "Markers": [
          "About Markers",
          "Create Marker",
          "Create PlaceModel",
          "Display Multiple Markers",
          "Fix issue with id",
          "Info Window",
          "Custom Marker icon",
          "Change Marker Size part one",
          "Change Marker Size part two",
          "Change Marker Size part three",
          "Hide zoom controllers"
        ],
        "Custom Shapes": [
          "Polylines",
          "Polylines part two",
          "Polygons",
          "Polygons part two",
          "Circles"
        ],
        "Live Location Tracker": [
          "Full Project on GitHub",
          "Add Location Package",
          "Add Location Package part two",
          "Steps to get the user location",
          "check and request location service",
          "check and request location permission",
          "get location part one",
          "get location par two",
          "get location part three",
          "get location part four",
          "animate camera to new location",
          "location tracking part one",
          "Location Tracking part two",
          "Distance filter",
          "Test Distance Filter",
          "Create Location Service",
          "Refactor code",
          "Test Everything"
        ],
        "Route Tracking": [
          "Complete project on GitHub",
          "Create project",
          "get location data",
          "Refactor location service",
          "Update Current Location part one",
          "Update Current Location part two",
          "Update Current location part three",
          "Steps to Build the app",
          "Steps to display places",
          "Enable places api",
          "Places api docs part one",
          "places api docs part two",
          "places autocomplete part one",
          "places autocomplete part two",
          "places autocomplete part three",
          "Create Model",
          "Create get predictions method",
          "Create get predictions method part two",
          "Create get predictions method part three",
          "Create Text Field",
          "Add Listener",
          "Fetch predictions",
          "Display results part one",
          "Display results part two",
          "Place Details end point",
          "Place details model",
          "Create get place details method",
          "Fetch place details",
          "Clear and reset data",
          "Session token",
          "UUID Package",
          "Generate Session Token",
          "Generate Session Token part two",
          "How to Create route",
          "Route Api",
          "Enable Route Api",
          "Create Routes Model",
          "Fetch routes part one",
          "Fetch routes part two",
          "Fetch routes part two",
          "Fetch routes part four",
          "Get route data part one",
          "Get Route data part 2",
          "Decode route method",
          "Display route",
          "Update LatLng bounds",
          "Create Map Services class",
          "Refactor code part one",
          "Refactor code part two",
          "Finish refactor",
          "Debounce effect",
          "Finish app"
        ]
      },
      "requirements": [
        "Basic Knowledge of Flutter and Dart",
        "Flutter Environment Setup"
      ],
      "description": "Welcome to \"Flutter App Creation: Google Maps Integration Guide,\" the ultimate course for learning how to seamlessly integrate Google Maps into your Flutter applications. This comprehensive course is designed to take you from the basics of embedding Google Maps in your Flutter apps to mastering advanced functionalities like route creation, custom shapes, real-time navigation, and location tracking.\nWhat You Will Learn:\nGoogle Maps and Flutter Basics: Understand the essentials of Flutter and how Google Maps can be incorporated into your apps.\nEmbedding Google Maps: Learn step-by-step methods to embed Google Maps into Flutter applications.\nCustomizing Maps: Discover how to customize the appearance and feel of maps, including styles, markers, and overlays.\nRoute Creation and Management: Gain skills in creating, managing, and displaying routes within your app.\nDrawing Custom Shapes: Learn to draw and manipulate custom shapes like circles, polygons, and lines to represent various geographical features.\nAdvanced Navigation: Delve into complex navigation techniques, including dynamic route updates and integration with other navigation tools.\nReal-Time Location Tracking: Master the art of tracking and displaying real-time user locations within your app.\nPractical Case Studies: Apply your knowledge through practical examples and real-world scenarios to solidify your understanding.\nWho Should Enroll:\nThis course is ideal for Flutter developers, mobile app developers venturing into Flutter, students, tech enthusiasts, and GIS professionals eager to learn about integrating Google Maps in mobile applications. Whether you are looking to enhance your existing Flutter skills or are new to app development, this course offers valuable insights and hands-on experience.\nPrerequisites:\nBasic knowledge of Flutter and Dart, familiarity with programming concepts, and a willingness to learn and experiment with new technologies.",
      "target_audience": [
        "Flutter Developers: Individuals who have some experience with Flutter and are looking to enhance their apps with map functionality. This course will be particularly beneficial for those who want to include location-based features in their applications.",
        "Mobile App Developers: Professionals who have experience in mobile app development using other frameworks but are new to Flutter or wish to expand their skills in cross-platform development with a focus on incorporating map features.",
        "Aspiring App Entrepreneurs: Entrepreneurs who have app ideas that require mapping or location-tracking functionalities and want to understand the technical aspects of implementing these features in Flutter."
      ]
    },
    {
      "title": "Desenvolvimento Android Completo - Crie 18 Apps",
      "url": "https://www.udemy.com/course/curso-de-desenvolvimento-android-oreo/",
      "bio": "Android, Java, Kotlin; Crie apps como: Instagram, WhatsApp, Flappy Bird, OLX, Ifood, Uber e muito mais!",
      "objectives": [
        "Criar Apps profissionais para Android usando Java e Kotlin",
        "Prestar serviços de desenvolvimento de Apps para Android",
        "Criar um portfólio de Apps para Processos seletivos",
        "Layouts: XML, temas, constraint layout, interface Netflix",
        "Java: variáveis, condicionais, loops, classes e objetos",
        "Interface: caixa de texto, seleção, botão, alert dialog e outros",
        "Listagem: list view, reciclerview, cardview",
        "Navegação: activities, fragments, navigation drawer",
        "Mídias: executando sons e vídeos, pausando, parando, volume",
        "Dados: preferências, crud banco de dados SQLite",
        "Firebase: autenticação, real time database, filtros, storage",
        "Organizze: cadastro e login, slider, floating action menu, calendário, swipe",
        "WhatsApp: menus, abas, permissões, imagem na mensagem, chat, grupos",
        "Instagram: fotos da galeria ou câmera, filtros nas fotos, seguir, curtir e comentar",
        "Uber: localização usuário, interagir com mapa, distância entre pontos, rotas",
        "Olx: produtos, filtros de pesquisa, máscara de telefone e moeda, navegar por fotos",
        "Ifood: produtos, filtro empresas, carrinho de compras, pedidos",
        "Consumo serviço web: rest, restfull, threads, json, retrofit, post, put, patch e delete, API do Youtube",
        "Flappy Bird: desenvolvimento de jogos, imagens e textos, animações, sons"
      ],
      "course_content": {
        "Boas vindas": [
          "Boas vindas",
          "[IMPORTANTE] Versões do Android Studio",
          "Comunidade no WhatsApp e Youtube"
        ],
        "Instalação no Windows": [
          "VERSÕES do Android Studio recomendadas",
          "Instalação Android Studio"
        ],
        "Instalação no MAC": [
          "VERSÕES do Android Studio recomendadas",
          "Instalação Android Studio"
        ],
        "Instalação no Linux": [
          "VERSÕES do Android Studio recomendadas",
          "Instalação do Android Studio"
        ],
        "Configuração do Android Studio Windows, MAC e Linux": [
          "O que irei aprender?",
          "Atualizando SDK",
          "Atualizando ferramentas do SDK",
          "Virtualização",
          "Configurando o emulador",
          "Executando o App no dispositivo real",
          "Instalando genymotion [opcional]"
        ],
        "Criando seu primeiro App no Android Studio": [
          "O que irei aprender?",
          "Criando um projeto",
          "Interface do Android Studio",
          "Utilizando Textos e Botões",
          "Adicionando evento de clique em um botão",
          "Criando interface #App1 Sorteio",
          "Escrevendo os códigos #App1 Sorteio"
        ],
        "Layouts": [
          "O que irei aprender?",
          "O que é XML?",
          "Estrutura de um projeto Android",
          "Orientação de tela",
          "Customizando temas",
          "Introdução à Constraint Layout",
          "Mais sobre Constraint Layout",
          "Inserindo imagens",
          "Criando interface App de notícias",
          "Finalizando Interface App notícias",
          "Criando interface Netflix - Configurando cores",
          "Criando interface Netflix - adicionando ícones",
          "Criando interface Netflix - Linhas guia",
          "Criando interface Netflix - finalizando",
          "Utilizando Chain",
          "Truques de alinhamento",
          "Layout Relativo",
          "FrameLayout e GridLayout"
        ],
        "Algoritmo básico": [
          "O que irei aprender? algoritmo",
          "O que é Algoritmo?",
          "Tomada de decisão",
          "Repetições"
        ],
        "Aprenda a Linguagem de Programação Java do Zero": [
          "O que irei aprender?",
          "O que é uma linguagem de programação?",
          "Linguagem de programação Java",
          "Primeira aplicação em Java",
          "O que são variáveis e constantes? (Teoria)",
          "O que são variáveis e constantes? (Pratica)",
          "Criando Variáveis e seus tipos",
          "Operadores Básicos Aritméticos",
          "Operadores Relacionais e Lógicos",
          "Estruturas Condicionais - if else",
          "Arrays",
          "Dicas importantes",
          "Criando interface #App2 Frases do dia",
          "Finalizando #App2 Frases do dia",
          "Switch",
          "Introdução - Loops",
          "Loops – while",
          "Loops – do...while e for"
        ],
        "Aprenda orientação a objetos com Java": [
          "O que irei aprender?",
          "O que é programação Orientada a Objetos?",
          "Classes e Objetos na prática",
          "Métodos - retornos e parâmetros",
          "Introdução à herança",
          "Herança - parte 1",
          "Herança - parte 2",
          "Modificadores de acesso - parte 1",
          "Modificadores de acesso - parte 2",
          "Criando interface #App3 Pedra papel ou tesoura",
          "Escolhendo opção #App3 Pedra papel ou tesoura - parte 1",
          "Gerar escolha aleatória #App3 Pedra papel ou tesoura",
          "Finalizando #App3 Pedra papel ou tesoura",
          "Projeto final #App3 Pedra papel ou tesoura",
          "Sobrecarga de métodos",
          "Construtores",
          "Interface"
        ]
      },
      "requirements": [
        "Curso para iniciantes: você aprenderá do zero como desenvolver aplicações para Android; não é necessário ter conhecimento prévio de programação",
        "Computador com acesso à internet.",
        "Nenhum software pago é necessário.",
        "Mínimo de 3GB de memória e Processador superior ao I3",
        "Android Studio 2.2 ou superior"
      ],
      "description": "Esse curso de Desenvolvimento Android é a versão ATUALIZADA do Curso de  \"Desenvolvimento Android - Aprenda a criar 15 apps\", tendo mais de 70 mil alunos e sendo um dos cursos mais bem avaliados da plataforma. Os recursos abordados irão funcionar em versões mais antigas e mais novas do Android.\nTá cheio de ideias de aplicativos e não sabe como começar? Quer iniciar sua carreira como desenvolvedor de aplicativos para Android? Este curso de desenvolvimento Android vai te ensinar na prática como criar e programar seus aplicativos para Android, usando a linguagem Java.\nEsse é um curso completo (tendo mais de 100 horas de vídeos) que te transformará em um desenvolvedor Android, começando do zero! O curso é 100% prático e orientado a projetos, você vai aprender criando apps de verdade!\nResumão do curso:\nCriar Apps profissionais para Android usando Java e Kotlin\nPrestar serviços de desenvolvimento de Apps para Android\nCriar um portfólio de Apps para Processos seletivos\nLayouts: XML, temas, constraint layout, interface Netflix\nJava: variáveis, condicionais, loops, classes e objetos\nInterface: caixa de texto, seleção, botão, alert dialog e outros\nListagem: list view, reciclerview, cardview\nNavegação: activities, fragments, navigation drawer\nMídias: executando sons e vídeos, pausando, parando, volume\nDados: preferências, crud banco de dados SQLite\nFirebase: autenticação, real time database, filtros, storage\nApp Organizze: cadastro e login, slider, floating action menu, calendário, swipe\nApp WhatsApp: menus, abas, permissões, imagem na mensagem, chat, grupos\nApp Instagram: fotos da galeria ou câmera, filtros nas fotos, seguir, curtir e comentar\nApp Uber: localização usuário, interagir com mapa, distância entre pontos, rotas\nApp Olx: produtos, filtros de pesquisa, máscara de telefone e moeda, navegar por fotos\nApp Ifood: produtos, filtro empresas, carrinho de compras, pedidos\nConsumo serviço web: rest, restfull, threads, json, retrofit, post, put, patch e delete, API do Youtube\nJogo Flappy Bird: desenvolvimento de jogos, imagens e textos, animações, sons\nKotlin: Variáveis, Tipos, Arrays, Funções, classes e objetos, herança, modificadores de acesso, projeto prático\nConteúdos bônus: seção completa sobre Kotlin, notificações, notificações com retrofit, artigos sobre AdMob\nAprenda a publicar os seus apps\nConstrua 18 apps reais!\nNesse curso de desenvolvedor Android você aprenderá a criar apps parecidos com os que você já usa: Organizze, Instagram, WhatsApp, Flappy Bird, OLX, Ifood, Uber e muito mais!\nSatisfação garantida ou seu dinheiro de volta\n\"E se eu não gostar do curso?” A Udemy oferece uma garantia de reembolso, essa é mais uma garantia de qualidade e um incentivo a mais para você começar já! Após a compra você terá 30 dias para testar o produto, e se não gostar, basta solicitar o reembolso.\nJunte-se a mais de 70 mil alunos que já fizeram e aprovaram meu outro curso! Comece agora mesmo esse curso de desenvolvimento de Android!",
      "target_audience": [
        "Qualquer pessoa tenha vontade de aprender a criar aplicações para Android."
      ]
    },
    {
      "title": "Flutter et l'architecture BLoC",
      "url": "https://www.udemy.com/course/flutter-bloc/",
      "bio": "Apprenez à maîtriser l'architecture BLoC et les Streams pour vos applications iOS et Android",
      "objectives": [
        "L'architecture BLoC",
        "L'intégration de blocs dans différentes applications"
      ],
      "course_content": {
        "Introduction au BLoC": [
          "Présentation du cours",
          "Rejoignez la communauté",
          "Qu'est ce que le BloC pattern?",
          "Téléchargez le PDF"
        ],
        "Intégration de Blocs dans l'application de base": [
          "Nos premiers BLoCs",
          "Le StreamController",
          "Le Sink (entrée)",
          "Le Stream (sortie)",
          "L'Interface",
          "Interactions entre Bloc et Interface",
          "Le projet complet"
        ],
        "Ajout de plusieurs Blocs": [
          "Mise en place du projet",
          "Introduction au BlocProvider",
          "Interface de base",
          "CounterBloc",
          "Le CounterScaffold",
          "TextBloc",
          "Le TextScaffold",
          "Le projet complet"
        ],
        "Utilisez les API avec les Blocs: Créez une application de météo": [
          "Présentation de l'API",
          "Création du projet",
          "Bloc et provider",
          "Le BlocLocation",
          "Le LocationWidget",
          "Appel de l'API",
          "Avant de continuer, des classes à ajouter",
          "Explication des classes",
          "Le BlocWeather",
          "Le WeatherWidget",
          "Convertir en utf8",
          "Finalisation de l'application",
          "Le projet complet"
        ],
        "Le package flutter_bloc: Le Cubit": [
          "Le package flutter_bloc",
          "Mise en place du projet",
          "Le Cubit",
          "Le BlocProvider",
          "Le BlocBuilder",
          "Le projet complet"
        ],
        "Le package flutter_bloc: les Blocs": [
          "Mise en place du projet",
          "Le SecondsTicker",
          "Le TimerBloc",
          "le TimerState",
          "Le TimerEvent",
          "Méthodes du Bloc",
          "Le BlocProvider",
          "text et Indicator",
          "Ajout des boutons",
          "Résolution de la méthode onResume",
          "Background et finalisation",
          "Le projet complet"
        ],
        "Le chapitre en plus: Provider": [
          "Qu'est ce que le Provider?",
          "Utiliser le compteur différemment",
          "Extraire les Widgets",
          "Le TabBarController",
          "Provider pour les couleurs",
          "Provider pour les Listes",
          "Finalisation",
          "Le projet complet"
        ],
        "ARCHIVE: Gestion d'une API avec les blocs": [
          "Avant de commencer ce Chapitre",
          "Mise en place du projet",
          "L'API et première requête",
          "Les BLoCs de base",
          "Ajouter la classe Sport à l'application",
          "BlocSports",
          "Le StreamBuilder de Sports",
          "List et Tile pour Sport",
          "SportScreen et BlocRouter",
          "UI de SportScreen",
          "Les modèles pour League",
          "BlocLeague",
          "List et Tile pour League",
          "Enoncé de l'Exercice",
          "Obtenir les équipes",
          "UI de LeagueScreen",
          "List et Tile Team",
          "TeamScreen",
          "Enoncé de l'exercice",
          "Correction de l'exercice",
          "MenuList",
          "Exercice: Rechercher un joueur énoncé",
          "Correction de la recherche de joueur",
          "Exercice: Rechercher une équipe",
          "Correction de la recherche d'équipe",
          "Exercice: Rechercher les événements du jour",
          "Correction des événements du jour",
          "Exercice: Rechercher des événements sur une journée",
          "Correction de la rechercher selon une journée",
          "Le projet complet"
        ]
      },
      "requirements": [
        "Connaitre le langage Dart",
        "Savoir les bases du développement d'applications avec Flutter"
      ],
      "description": "Vous connaissez déjà les bases de Flutter et Dart? Et si nous allions encore plus loin?\nDans ce cours nous allons apprendre ensemble à utiliser les Streams pour architecturer nos applications à l'aide du BLoC pattern.\n\n\nJe suis certain que vous avez déjà entendu parler de l'architecture BLoC qui est une des architectures préférentielles pour la création d'applications Flutter & Dart. Ici, fini les StatefullWidget et les setState(), toute la mise à jour de vos Widgets se fera via les blocs !\n\n\nNous allons tout d'abord:\nComprendre ce qu'est le BLoC et quelle est son utilité\nRecréer l'application de base de Flutter à l'aide des BLoC\nUtiliser plusieurs blocs dans une même application.\nUtiliser les API et les données asynchrones pour aller plus loin dans le BLoC pattern.\nUtiliser le fameux package Flutter_bloc à la fois pour les Cubit mais aussi pour les blocs. Vous apprendrez ainsi à gérer les events et les States de vos blocs.\nEn bonus, je vous ai ajouté une section concernant le package provider qui est un élément de base de la gestion des blocs et qui est une des fondations du package flutter_bloc.\nÊtes-vous prêts ? Je parie que la réponse est OUI\n\nJe vous attends sur le cours.",
      "target_audience": [
        "Les développeurs Flutter souhaitant utiliser les blocs et la gestion de flux de données"
      ]
    },
    {
      "title": "React Native: Başlangıçtan İleri Seviyeye Mobil Uygulama",
      "url": "https://www.udemy.com/course/react-native-kursu/",
      "bio": "React Native ve Redux kullanarak Twitter Klon, Kimlik Doğrulama gibi örneklerle iOS ve Android Uygulamaları Geliştirme!",
      "objectives": [
        "React Native kullanarak native iOS ve Android mobil uygulama yapabileceksiniz.",
        "Redux'ın terminolojisini ve konseptini anlayacaksınız.",
        "Güzel gözüken komponent dizaynları yapabileceksiniz.",
        "Yarattığınız komponentleri yeniden kullanmayı öğreneceksiniz.",
        "Hızlı ve kolay bir şekilde hem iOS hem de Android uygulamaları geliştireceksiniz.",
        "Javascript temellerini öğreneceksiniz"
      ],
      "course_content": {},
      "requirements": [
        "Mac ve Windows işletim sistemli bilgisayarınız olması gerekir.",
        "Öncesinde herhangi bir programlama bilgisine ihtiyaç duyulmamaktadır."
      ],
      "description": "React Native ile iOS ve Android için aynı anda mobil uygulama geliştirmeyi öğrenmek istiyorsanız bu kurs tam size göre!\nReact Native ile Objective C, Swift, Java ve Kotlin gibi dilleri öğrenmeden, native uygulama geliştirebilirsiniz. Bu framework'ü çok kolay ve hızlı bir şekilde öğrenebilirsiniz. Bu kursu almak için önceden herhangi bir programlama bilgisi sahibi olmanıza gerek yok. Eğer uygulama geliştirmek için birçok dil öğrenmekten yorulduysanız, kursumuza kayıt olabilirsiniz.\nKurs içerisinde öğreneceğimiz teorik bilgilerin yanında pratik olarak da yapacağımız 5 adet uygulama ile React Native'i öğreneceksiniz.\nHesap Makinesi\nOnline Döviz Çevirici\nKimlik Doğrulama\nKitap Listesi\nTwitter Klon\nKursun içerisinde değineceğimiz konulardan bazıları şunlardır:\nJavascript Temelleri\nFirebase: Hem Authentication hem de veri tabanı özellikleri\nRedux Framework\nAPI\nAxios ile asenkron istek atmak\nReact Router ile uygulama için yönlendirmeler\nUygulama ikonu değiştirmeyi\nJSON data kullanımı\nHem Android hem de iOS için build alabilmek\nProps ve state yönetimi\nAkıllı ve yeniden kullanabilir komponent oluşturma\nTabii ki bunlar ve çok daha fazlası kurs içerisinde. Kurs Udemy'de 90.000'den fazla öğrenciye mobil uygulama ve siber güvenlik eğitimleri veren Atıl Samancıoğlu Akademi altında Burak Alparslan anlatımıyla sunulmaktadır.\nKurs boyunca anlamadığınız yerleri, aklınıza takılanları ve genel olarak tüm sorularınızı soru & cevap kısmından sorarak hızlı bir şekilde dönüş alabileceksiniz.",
      "target_audience": [
        "React Native ile native iOS ve Android uygulaması geliştirmek isteyenler.",
        "Programlama öğrenmek isteyenler",
        "Javascript öğrenmek isteyenler"
      ]
    },
    {
      "title": "IONIC + PHP + MySQL = App Completa",
      "url": "https://www.udemy.com/course/ionic-php-mysql/",
      "bio": "El curso que te enseña como hacer cualquier Aplicación con Ionic, PHP y MySQL. 100% Práctico.",
      "objectives": [
        "Instalación de IONIC Framewrok y Herramientas necesarias",
        "Uso de FatFree Framework PHP",
        "Montar servidor web local",
        "Desarrollo de aplicaciones móviles multiplataforma",
        "Consumo de servicios HTTP/S",
        "Envío de notificaciones PUSH"
      ],
      "course_content": {
        "Introducción": [
          "Introducción",
          "Instalación de herramientas a utilizar"
        ],
        "FatFree-Framework": [
          "Configurar .htaccess",
          "Conexión a la base de datos desde un cliente MySQL y creación de Tablas",
          "Conexión a la base de datos con FatFree (config.ini) y creación de estructura.",
          "Definición de modelos y manejo de routes (parte 1)",
          "Declaración de un modelo y validación",
          "Definición de controladores (parte 1) y manejo de routes (parte 2)",
          "Definición de controladores (parte 2) y manejo de routes (parte 3)",
          "C.R.U.D para cada tabla (Usuarios, clientes, productos, etc.) - parte 1",
          "C.R.U.D - parte 2",
          "C.R.U.D - parte 3",
          "Crear método actualizar() para todos los controladores."
        ],
        "Ionic Framework": [
          "Vista rápida de la documentación y creación de mi App (parte 1)",
          "Creación de mi App: \"InventarioApp\" (parte 2)",
          "Creación de Componentes/Páginas (Teoría)",
          "Creación de páginas y configuración de rutas (Práctica)",
          "Diseñando mi aplicación (parte 1)",
          "Diseñando mi aplicación (parte 2)",
          "Diseñando mi aplicación (parte 3) realizando peticiones HTTP/S",
          "Diseñando mi aplicación (parte 4)",
          "Finalizando el módulo completo de productos",
          "Desarrollando el módulo de pedidos (parte 1)",
          "Desarrollando el módulo de pedidos (parte 2)",
          "Mejoramiento de formulario de productos y manejo de plugin nativo \"Camara\"",
          "Ejecutar aplicación dispositivos iOS",
          "Modificar icono y splash de la aplicación.",
          "Manejo de notificaciones PUSH"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación",
        "HTML",
        "CSS",
        "PHP",
        "Angular básico",
        "Javascript"
      ],
      "description": "En este curso combinaremos tres herramientas sencillas pero poderosas con las cuales te armarás de muchos conocimiento para afrontar cualquier situación de desarrollo que se presente.\nCon Ionic Framework, Fat-Free Framework (PHP) y MySQL tendrás todo un pack disponible para crear cualquier tipo de aplicación móvil.\nAprenderás crear o dar soporte para aplicaciones híbridas.\nBásicamente en este curso desarrollaremos desde cero una aplicación tal como lo haría cualquier desarrollador mostrando errores comunes que pueden llegar a suceder al momento de escribir el código, verás como usar la documentación de Ionic para saber como usar los componentes y plugins que nos permitirán interactuar directamente con el dispositivo móvil (Cámara, Storage, Notificaciones Push, entre otros).",
      "target_audience": [
        "Desarrolladores que quieran aprender a crear aplicaciones híbridas.",
        "Desarrolladores que necesiten integrar una aplicación móvil a software propio o de terceros.",
        "Desarrolladores con conocimientos básicos en PHP, Javascript y SQL.",
        "Desarrolladores que necesiten empezar un proyecto móvil."
      ]
    },
    {
      "title": "Apple iOS Programlama 1 - Objective-C Programlama Dili",
      "url": "https://www.udemy.com/course/objective-c-programlama-dili-egitimi/",
      "bio": "Objective-C programlama dilini bu eğitimle keşfedeceksiniz!",
      "objectives": [
        "Bu kursta Objective-C dilini başlangıçtan itibaren alınıp ileri seviye kadar adım adım öğreneceğiz.",
        "Objective-C Programlama Dili ile iPhone ve iPad kendi uygulamalarımızı geliştirmeyi öğreneceğiz.",
        "Bu eğitim sayesinde sırlarla dolu olan Apple dünyasını siz de tanıyacaksınız!"
      ],
      "course_content": {
        "Geliştirme ortamının hazırlanması": [
          "Kurs tanıtımı",
          "_001_Apple Xcode indirmek",
          "_001_Apple Xcode Kurulumu ve Selam IOS",
          "Farklı XCode Sürümlerinin Birlikte Calıştırılması"
        ],
        "Sorular ve Cevaplar ile Apple": [
          "_002_Selam_ObjectiveC Sorular ve Cevaplar ile Apple1",
          "_002_Selam_ObjectiveC Sorular ve Cevaplar ile Apple2",
          "_002_Selam_ObjectiveC Sorular ve Cevaplar ile Apple3",
          "_002_Selam_ObjectiveC Sorular ve Cevaplar ile Apple4",
          "_002_Selam_ObjectiveC Sorular ve Cevaplar ile Apple5",
          "_003_Turkce_Karakter_Kullanimi"
        ],
        "Değişkenler": [
          "_004_Degiskenler1",
          "_004_Degiskenler2"
        ],
        "Interface kavramı": [
          "_005_Interface_Kavrami1",
          "_005_Interface_Kavrami2",
          "_005_Interface_Kavrami3",
          "_005_Interface_Kavrami4"
        ],
        "Veri tipleri": [
          "_006_VeriTipleri1",
          "_006_VeriTipleri2",
          "_007_VeriTipleri2_1",
          "_007_VeriTipleri2_2",
          "_007_VeriTipleri2_3",
          "_007_VeriTipleri2_4",
          "_008_Scanf_Kullanimi"
        ],
        "Operatörler": [
          "_009_Operatorler",
          "_010_Sizeof_Operatoru",
          "_011_Arttirim_Ve_Azaltim_Operatorleri",
          "_012_Karsilastirma_Operatorleri",
          "_013_Mantiksal_Operatorleri",
          "_014_Uculu_Operator"
        ],
        "Karar kontrol ifadeleri": [
          "_015_Bitsel_Operatorler",
          "_016_Operatorlerin_Islem_Oncelikleri",
          "_017_If_Karar_Kontrolunun_Kullanimi",
          "_018_If_Else_Karar_Kontrolunun_Kullanimi",
          "_019_If_Else_If_Karar_Kontrolunun_Kullanimi",
          "_020_Switch_Case_Karar_Kontrolunun_Kullanimi",
          "_021_Switch_Case_Break_Kullanimi"
        ],
        "Döngüler": [
          "_022_For_Dongusu1",
          "_023_For_Dongusu2",
          "_024_For_Dongusu3",
          "_025_Icice_For_Donguleri",
          "_026_For_Dongulerinde_Break_Kullanimi",
          "_027_For_Dongulerinde_Continue_Kullanimi",
          "_028_While_Dongusu",
          "_029_While_Dongusunde_Break_Kullanimi",
          "_030_While_Dongusunde_Continue_Kullanimi",
          "_031_Do_While_Dongusu",
          "_032_Do_While_Dongusunde_Break_Kullanimi",
          "_033_Do_While_Dongusunde_Continue_Kullanimi"
        ],
        "Metodlar - Pointers(İşaretçiler) - Structures(YapIlar)": [
          "_034_Metod_Tanimlama",
          "_035_Pointer_Isaretci_Kullanimi",
          "_036_Structures_Yapilar_Kullanimi"
        ],
        "Nesne Yonelimli Programlama": [
          "_037_Nesne_Yonelimli_Programlama1",
          "_037_Nesne_Yonelimli_Programlama2",
          "_038_Interface_Ve_Implementaion_Kullanimi",
          "_039_Sinif_Metodu_Kullanimi1",
          "_039_Sinif_Metodu_Kullanimi2",
          "_040_Coklu_Parametre_Kullanimi1",
          "_040_Coklu_Parametre_Kullanimi2",
          "_041_Property_Ve_Synthesize1",
          "_041_Property_Ve_Synthesize2",
          "_042_Erisim_Belirtecleri1",
          "_042_Erisim_Belirtecleri2",
          "_042_Erisim_Belirtecleri3",
          "_043_Kalitim_Miras_Inheritance1",
          "_043_Kalitim_Miras_Inheritance2",
          "_044_Instance_Ve_Classs_Metodlarinin_Kullanimi",
          "_045_Overriding_Ezme1",
          "_045_Overriding_Ezme2",
          "_045_Overriding_Ezme3",
          "_046_Dinamik_Tipler1",
          "_046_Dinamik_Tipler2",
          "_047_Metodlarda_Parametre_Olarak_Pointer_Isaretci_Kullanimi"
        ]
      },
      "requirements": [
        "Kodları çalıştırabilmeniz için bir tane MacBook Pro veya da MacBook Air makineye sahip olmalısınız!"
      ],
      "description": "Apple dünyasını keşfetmek isteyenler hoş geldiniz. Bu kursta Objective-C dilini başlangıçtan itibaren alınıp ileri seviye kadar adım adım öğreneceğiz. iPhone ve iPad uygulamalarını kodlayabilmeniz için Objective-C programlama dilinin çok iyi derecede bilimeniz işinizi kolaylaştıracaktır.  Objective-C programlama dili ile iPhone ve iPad eğitimine çok güçlü sağlam bir temel oluşturmuş olacaksınız.  Kendi Apple iOS mobil uygulamalarınızı Objective-C  programlama dili sayesinde kolayca hazırlayabileceksiniz.",
      "target_audience": [
        "Apple dünyasını keşfetmek isteyenlerin başangıç adresi burasıdır.",
        "Apple iOS uygulamaları için mutlaka bilinmesi gereken bilgileri bu kurs ile öğreneceksiniz!",
        "Konular başlangıç seviyesinden alınıp ileri seviyelere doğru detaylarıyla işleniyor.",
        "Seviyeniz başlangıç ise arkanıza yaslanın ve sadece bu dersleri sabırla izleyin."
      ]
    },
    {
      "title": "Curso completo de Kotlin para Android",
      "url": "https://www.udemy.com/course/curso-desenvolvimento-android-com-kotlin/",
      "bio": "Aprenda do zero a criar Apps para o Android com a nova Linguagem Kotlin",
      "objectives": [
        "Aprenda a criar apps reais que podem ser mostrados para amigos ou usados em uma entrevista de trabalho.",
        "Ofereça seu serviço de desenvolvedor Android para empresas."
      ],
      "course_content": {
        "Boas vindas": [
          "Aprenda como usar os recursos do curso",
          "Youtube e Comunidade no WhatsApp"
        ],
        "Instalação no Windows": [
          "Instalando Java",
          "Instalando Android Studio"
        ],
        "Instalação no Mac": [
          "Instalando Java",
          "Instalando Android Studio"
        ],
        "Configuração do Android Studio Windows, MAC e Linux": [
          "O que irei aprender?",
          "Configuração do Android Studio - parte I",
          "Configuração do Android Studio - parte II",
          "Virtualização",
          "Configurando um emulador",
          "Executando o App no dispositivo real",
          "Configurando emulador Genymotion (Link necessário)",
          "Configurando emulador Genymotion (opcional)"
        ],
        "Criando seu primeiro App": [
          "O que irei aprender?",
          "Criando meu primeiro projeto",
          "Interface do Android Studio",
          "Utilizando textos e botões",
          "Adicionando evento de clique em um botão",
          "Criando interface do #App1 Sorteio",
          "Escrevendo os códigos do #App1 Sorteio"
        ],
        "Algoritmo básico": [
          "O que irei aprender? algoritmo",
          "O que é Algoritmo?",
          "Tomada de decisão",
          "Repetições"
        ],
        "Aprenda Kotlin do zero": [
          "O que irei aprender?",
          "O que é uma linguagem de programação?",
          "Linguagem de programação Kotlin",
          "Executando códigos online",
          "O que são variáveis (Teoria)",
          "O que são variáveis (Prática)",
          "O que são variáveis (Arquivos da aula)",
          "Tipos de variáveis",
          "Tipos de variáveis (arquivos da aula)",
          "Entenda Arrays",
          "Entenda Arrays (arquivos da aula)",
          "Funções",
          "Funções (arquivos da aula)",
          "Classes e Objetos",
          "Classes e Objetos (arquivos da aula)",
          "Construtores",
          "Construtores (arquivos da aula)",
          "Herança (Teoria)",
          "Herança (Prática)",
          "Herança (arquivos da aula)",
          "Modificadores de acesso",
          "Modificadores de acesso (arquivos da aula)",
          "Criando interface #App2 Frases do dia",
          "Criando interface #App2 Frases do dia (Arquivos da aula)",
          "Finalizando #App2 Frases do dia - Parte 1",
          "Finalizando #App2 Frases do dia - Parte 2",
          "#App2 Frases do dia (Projeto final)"
        ],
        "Kotlin intermediário": [
          "O que irei aprender?",
          "Operadores Básicos - Aritméticos",
          "Operadores Básicos - Aritméticos (arquivos da aula)",
          "Operadores Relacionais e Lógicos",
          "Operadores Relacionais e Lógicos (arquivos da aula)",
          "Controle de fluxo - if/else",
          "Controle de fluxo - if/else (arquivos da aula)",
          "Controle de fluxo - When",
          "Controle de fluxo - When (arquivos da aula)",
          "Null Safe",
          "Null Safe (arquivos da aula)",
          "Instalando plugin Kotlin",
          "Criando Interface #App3 Gasolina ou Álcool",
          "Criando Interface #App3 Gasolina ou Álcool (Arquivos da aula)",
          "Finalizando #App3 Gasolina ou Álcool - parte I",
          "Finalizando #App3 Gasolina ou Álcool - parte II",
          "Finalizando #App3 Gasolina ou Álcool (Arquivos da aula)",
          "Loops – for & while",
          "Loops – for & while (arquivos da aula)",
          "Interface",
          "Interface (arquivos da aula)",
          "Collections: ArrayList & List",
          "Collections: ArrayList & List (arquivos da aula)",
          "Collections: Set & Map",
          "Collections: Set & Map (arquivos da aula)",
          "Enum",
          "Enum (arquivos da aula)"
        ],
        "Layout & Navegação": [
          "O que é xml?",
          "Estrutura de um projeto Android",
          "Utilizando constraint layout",
          "Criando interface com Constraint Layout - Parte I",
          "Criando interface com Constraint Layout - Parte II",
          "Criando interface Netflix com guidelines - parte I",
          "Criando interface Netflix com guidelines - parte II",
          "Criando interface Netflix com guidelines - parte III",
          "Layout Relativo",
          "Layout Linear",
          "Utilizando Chain",
          "Truques de alinhamento",
          "Criando Interface do #App4 ATM Consultoria",
          "Navegando entre telas #App4 ATM Consultoria",
          "Adicionando evento de clique #App4 ATM Consultoria",
          "Utilizando Toast",
          "Ciclo de vida de uma Activity",
          "Passando dados entre Activities",
          "Criando Interface #App5 Cara ou Coroa",
          "Finalizando #App5 Cara ou coroa"
        ]
      },
      "requirements": [
        "Curso para iniciantes: você aprenderá do zero como desenvolver aplicações para Android; não é necessário ter conhecimento prévio de programação",
        "Computador com acesso à internet.",
        "Nenhum software pago é necessário."
      ],
      "description": "Tá cheio de ideias de aplicativos e não sabe como começar? Quer iniciar sua carreira como desenvolvedor de aplicativos para Android? Este curso de desenvolvimento Android vai te ensinar na prática como criar e programar seus aplicativos para Android, usando a linguagem Kotlin.\nResumão do curso:\nAprenda fundamentos da programação Kotlin, a nova linguagem suportada para o desenvolvimento de Apps para Android\nSaiba como projetar interfaces com o Android Studio, utilizando Constraint Layout\nAprenda os elementos de interface e a estrutura de projetos Android\nEntenda as arrays, loops, orientação a objetos e estruturas condicionais\nAprenda a publicar os seus apps\nSatisfação garantida ou seu dinheiro de volta\n\"E se eu não gostar do curso?” A Udemy oferece uma garantia de reembolso, essa é mais uma garantia de qualidade e um incentivo a mais para você começar já! Após a compra você terá 30 dias para testar o produto, e se não gostar, basta solicitar o reembolso.\n\nJunte-se a mais de 100 mil alunos que já fizeram e aprovaram meus cursos! Comece agora mesmo esse curso de desenvolvimento de Android!",
      "target_audience": [
        "Qualquer pessoa tenha vontade de aprender a criar aplicações para Android."
      ]
    },
    {
      "title": "React js - Hooks - Redux - State - Router رياكت بالعربي",
      "url": "https://www.udemy.com/course/tarmeezacademy-react/",
      "bio": "تعلم رياكت بكامل مفاهيمها بشرح بجودة عالية يشمل العديد من التحديات البرمجية و المشاريع و الشروحات النظرية المفصلة",
      "objectives": [
        "Components طريقة استخدام و بناء ال",
        "و التعامل معها JSX كتابة أكواد",
        "React Hooks",
        "State Management",
        "تحديات برمجية لتثبيت المفاهيم",
        "تطبيق عملي مع شروحات نظرية",
        "مشاريع حقيقية لتطبيق المفاهيم و تعلم حل المشكلات الواقعية",
        "useState - useEffect - useContext - useMemo - useReducer",
        "React Router",
        "API with React",
        "Redux / Redux Toolkit"
      ],
      "course_content": {
        "html - css - js كورسات التأسيس المجانية في": [
          "html كورس",
          "CSS كورس",
          "Javascript كورس",
          "advanced Javascript With API كورس"
        ],
        "Introduction | Components | JSX": [
          "Introduction | عن السلسلة - المتطلبات - طريقة التعلم",
          "طريقة الاستفادة من أكواد المشروع",
          "git طريقة الاستفادة من أكواد المشروع باستخدام",
          "What is React JS? | ما هو رياكت؟",
          "npx create-react-app ملاحظة تخص أمر:",
          "Trying React JS | تجربة رياكت",
          "Creating a New React Project | تجهيز بيئة العمل و إنشاء مشروع رياكت جديد",
          "React Project Structure Overview | المرور على هيكلة المشروع",
          "Building the first React Component | بناء المكون الأول في رياكت",
          "Components In Web App (Theoretical) | المكونات في تطبيقات الويب (شرح نظري)",
          "Intro to JSX",
          "Adding Style to JSX elements",
          "Adding Classes to JSX elements",
          "Components Challenge | تحدي المكونات",
          "Components Challenge Solution | حل تحدي المكونات",
          "Sending Props To Components",
          "Sending JSX AS Props To The Component",
          "Props Challenge",
          "Props Challenge Solution"
        ],
        "Rendering | List Rendering | Conditional Rendering": [
          "Conditional Rendering",
          "List Rendering",
          "List Rendering Challenge",
          "List Rendering Challenge Solution"
        ],
        "State | What js State | How To Deal With State In React": [
          "State مقدمة إلى ال",
          "The issue of mutating the state from the component",
          "What is React DOM and How It Works",
          "useState Hook",
          "Managing Inputs States",
          "Handling The State With Forms",
          "Solving The Object State In The Forms",
          "Other Form Fields With State",
          "Select & Radio Inputs With State",
          "Object's State Challenge",
          "Object's State Challenge Solution",
          "Using Array As State In The Component",
          "Edit And Delete In Array State",
          "Edit In Array State",
          "Array State Challenge",
          "Array State Challenge Solution",
          "Updating States Several Times",
          "Updating State Several Times Challenge",
          "Updating State Several Times Challenge Solution"
        ],
        "مشروع تعبئة نموذج طلب قرض من البنك": [
          "ما هو المطلوب في المشروع؟",
          "Building the UI and the main components.",
          "Building up the logic",
          "Showing the modal and completing the project"
        ],
        "The communication between the components": [
          "Communication using (Props)",
          "Sending the event handler to the props",
          "? تنبيه بخصوص الدرس رقم ٤٦",
          "Prop Drilling Issue",
          "Using (useContext) to Fix The Prop Drilling Issue",
          "Using (useContext) to Share Data in The APP",
          "Context Challenge",
          "Context Challenge Solution"
        ],
        "Building Multiple-Pages Web App Using React Router": [
          "Intro To React Router",
          "Using <Link /> To Navigate To Other Pages",
          "Dynamic Routes",
          "Extracting Params From The Dynamic Routes",
          "404 page إظهار صفحة الخطأ",
          "Nested Routes - الروابط المتداخلة",
          "SSR vs CSR - SPA? ما هي مواقع الصفحة الواحدة؟"
        ],
        "Material UI Framework استخدام أطر العمل التصميمية في رياكت": [
          "البدء في استخدام أطر العمل التصميمية في رياكت",
          "تخصيص التصميم الكلي للمشروع",
          "Material UI تخصيص و ترتيب الصفحة في",
          "icons استخدام ال",
          "Material UI تحدي الـ",
          "Material UI حل تحدي الـ"
        ],
        "Todo List Project | مشروع قائمة المهام": [
          "مقدمة لمشروع قائمة المهام",
          "استعراض مشروع قائمة المهام",
          "تنزيل المكتبات و البدء في المشروع",
          "Todo List تصميم الهيكل العام لل",
          "Todo Component بناء الـ",
          "Todo Component إكمال بناء ال",
          "إضافة خطوط خارجية للمشروع",
          "إكمال التصميم الخاص بإضافة مهمة جديدة",
          "في قائمة المهام Todos إظهار مجموعة",
          "إضافة مهمة جديدة",
          "إضافة مهمة للمهام المنجزة",
          "Context (useContext hook) الاعتماد على ال",
          "حذف المهام من قائمة المهام",
          "تعديل مهمة في قائمة المهام",
          "localStorage تخزين المهام في ال",
          "useEffect in React and how to retrieve data from localStorage",
          "Retrieving The Todos From Local Storage",
          "تصنيف المهام المنجزة / غيرالمنجزة",
          "إضافة اللمسات الأخيرة على المشروع",
          "Project Deployment - رفع المشروع",
          "رابط المشروع كاملا"
        ],
        "useContext - useReducer - useMemo - Provider": [
          "مقدمة لتنظيف أكواد المشروع",
          "Caching The Computations Using useMemo",
          "Moving The Dialog Modals Up (lifting the state up)",
          "Adding Toast as Providers",
          "Adding Toast Logic With Context",
          "Turning The Context Into Provider",
          "تصحيح كود الدرس الأخير",
          "Introduction To Use Reducer",
          "Applying useReducers to Todo App",
          "Applying useReducer on Update / Delete",
          "Combining Reducer With Context",
          "Fixing The Mutation Problem",
          "useState - useEffect - useMemo - useContext - useReducer مراجعة عامة",
          "رابط المشروع كاملا بعد التعديل"
        ]
      },
      "requirements": [
        "html - css - js معرفة أساسيات:",
        "React JS لا تحتاج أي معرفة سابقة في"
      ],
      "description": "رياكت هو أحد أشهر أطر عمل الجافاسكريبت في الوقت الحالي و هو من أكثر أطر العمل المطلوبة في سوق العمل، في هذه السلسلة أضع لكل شرحا مفصلا مزودا بأشكال التطبيق المختلفة و بالشروحات النظرية متى ما دعت الحاجة لأضمن وصول المعلومة للمتعلم، .\nحيث يتضمن هذا الكورس كل المفاهيم التي ستحتاجها لبدء مشروع رياكت حقيقي أو الدخول في أي فريق برمجي يستخدم إطار عمل رياكت.\nسنتعلم بناء المكونات و التعامل معها، سنفهم السبب الأساسي و القيمة الحقيقية التي أضافتها أطر العمل. سنفهم مفهوم (الستيت) و طريقة التعامل معها و إداراتها، سنتعلم كذلك طريقة ربط المشاريع بال API.\n\n\nو الأهم من هذا كاملا هو معرفة كيف تتعلم و ما هي الطريقة التي تبحث فيها عن المعلومة و تستخرج منها الحل ثم توظفه بالطريقة الصحيحة التي توفر لك الميزة التي تريد بناءها.\n\n\nهناك الكثير من المفاهيم في البرمجة عموما و في رياكت تحديدا التي تحتاج إلى إظهار مجموعة من الصور و الرسومات المتحركة لتشرح المعلومة من الجانب النظري مما يسهل على المتعلم استيعابها و تخيلها و معرفة ما الذي يحدث خلف التفاصيل، و هذا من أكثر الأمور التي حرصت على توفيرها في هذه السلسلة خصوصا في المفاهيم التأسيسية أو في الأمور التي تتطلب هذا النوع من الشرح النظري قبل البدء فعليا بالتطبيق العملي.\n\n\nكل هذا و أكثر بتحديات و مشاريع و شروحات مفصلة..\nأتمنى لك رحلة تعليمية جميلة و ممتعة",
      "target_audience": [
        "Front-end web developers who want to take their web app products quality and performance to the next level"
      ]
    },
    {
      "title": "Flutter × Firebaseで開発するモバイルアプリ入門",
      "url": "https://www.udemy.com/course/flutter_firebase/",
      "bio": "メモアプリの作成を通してFirebaseと連携したアプリ開発を学習しよう！",
      "objectives": [
        "Flutterでのモバイルアプリ開発",
        "FlutterとFirebaseプロジェクトの連携",
        "Cloud Firestoreでのデータ取得・追加・編集・削除",
        "プログラミング言語Dartの記述"
      ],
      "course_content": {
        "教材の内容紹介": [
          "コース紹介 & ゴールの確認"
        ],
        "【2022年7月最新】メモアプリの作成": [
          "コード整理",
          "アプリのタイトル変更",
          "メモクラスを定義",
          "FlutterFireの実装",
          "Cloud Firestoreの設定",
          "TopPageにメモリストを表示",
          "リストタップでメモの詳細を確認可能に",
          "メモ追加画面のUI作成",
          "追加ボタンタップでメモを追加可能に",
          "追加したメモをリアルタイムで取得可能に",
          "リストの右側のボタンタップでボトムシート表示",
          "編集画面を作成しメモを更新可能に",
          "メモを削除可能に",
          "並び替えや特定のメモだけを取得する"
        ],
        "メモアプリの作成": [
          "コード整理 & ToDoリストの作成",
          "アプリのタイトルを変更",
          "メモクラスを定義",
          "Android用Firebaseプロジェクトの作成",
          "iOS用Firebaseプロジェクトの作成",
          "Cloud Firestoreを設定",
          "FlutterとFirebaseを連携",
          "TopPageにメモリストを表示",
          "リストをタップでメモの詳細を確認可能に",
          "メモ追加画面のUIを作成",
          "追加ボタンタップでメモを追加可能に",
          "追加したメモをリアルタイム取得表示",
          "リストの右側のボタンタップでボトムシート表示",
          "編集画面を作成しメモを更新可能に",
          "メモを削除可能に"
        ],
        "これからの学習方法": [
          "これからの学習について"
        ],
        "ボーナスレクチャー": [
          "ボーナスレクチャー1",
          "ボーナスレクチャー2"
        ]
      },
      "requirements": [
        "Flutterの開発環境",
        "Googleアカウントを持っている"
      ],
      "description": "※この動画コースは、Flutter学習サービス『Flutterラボ』でも公開しています。\n\n\n概要\n簡単なメモアプリの開発を通してFlutterとFirebaseを用いたアプリ開発の方法を学習する動画コースです。\nFirebaseのセットアップから、Cloud Firestoreと情報をやりとりする方法まで、開発に必要な基礎知識を身に付けることが可能です。\nモバイルアプリ開発や、プログラミング言語の記述の基礎を学ぶことができます。\n\n\n学習できること\nFirebaseプロジェクト作成の方法\nFlutterとFirebaseとの連携設定\nデータベースのコレクション作成\nCloud Firestoreへのデータ書き込み（追加・編集・削除）\n\n\n※この動画コースはFlutterの環境構築方法については解説しておりません。\n環境構築についての動画もUdemyで公開しているのでご確認ください。",
      "target_audience": [
        "Flutter開発やプログラミングで何から学べば良いか迷っている方",
        "Firebaseと連携したアプリを開発したい方",
        "Cloud Firestoreの扱い方を学びたい方",
        "Flutter開発でデータをクラウド保存したい方"
      ]
    },
    {
      "title": "Curso Completo de Desarrollo Android 10 - Update Nov 2019",
      "url": "https://www.udemy.com/course/curso-completo-de-desarrollo-android-10/",
      "bio": "Aprende a desarrollar aplicaciones móviles para Android 10 utilizando Android Studio 10 y Kotlin",
      "objectives": [
        "Desarrollo Android",
        "Programación con Kotlin",
        "Diseño de Layouts",
        "Interacción con APIs"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Quiz de Posicionamiento"
        ],
        "Preparando tu entorno de desarrollo": [
          "Instalando Android Studio",
          "Segunda Parte"
        ],
        "Desarollo en Android para principiantes": [
          "Creando tu Primer Proyecto",
          "Navegador del Proyecto",
          "Instalando tu Dispositivo Virtual",
          "Ejecutando tu App",
          "Actualización",
          "Hola Mundo",
          "El emulador Android",
          "Color Quotes",
          "El Editor de Layouts",
          "Creando Constraints",
          "Agregando Nuestro Boton",
          "Agregando Nuestros ID",
          "Personalizando nuestro layout",
          "Personalizando nuestro TextView",
          "Personalizando nuestro Boton",
          "Cambiando el estilo de nuestra App",
          "Actividades en Android",
          "La Clase Cita",
          "Generador de Citas",
          "Agregando Funcionalidad a nuestro Boton",
          "Cambiando el Color",
          "Mejorando nuestro Código",
          "Solución Reto",
          "Pon a prueba tus conocimientos! | Desarrollo Android Básico"
        ],
        "Ciclo de Vida de las Actividades, Logs, Errores y Más.": [
          "Sobre esta Sección",
          "El Ciclo de Vida de las Actividades",
          "Logs",
          "Experimentando con el Ciclo de Vida de las Actividades",
          "onSaveInstanceState",
          "Bundle",
          "onRestoreInstanceState",
          "Guardando el Color",
          "Creando tu Icono"
        ],
        "Creación de Layouts": [
          "Recursos y archivos adjuntos",
          "La Aplicación de Color Weather",
          "Creando tu Proyecto de Color Weather",
          "Armando nuestro Layout",
          "Agregando nuestro TextView",
          "Agregando nuestro ImageView",
          "Agregando otro TextView",
          "Creando Guidelines",
          "Creando nuestros Botones",
          "Probando nuestro Layout"
        ],
        "Interacción con REST APIs usando Retrofit": [
          "Recursos y archivos adjuntos",
          "DarkSky API",
          "JSON",
          "Retrofit",
          "Creando nuestros Modelos",
          "DarkSky API",
          "DarkSky Client",
          "Probando nuestra Aplicación",
          "Permisos"
        ],
        "Desarrollo Intermedio Android": [
          "Recursos y archivos adjuntos",
          "Agregando nuestros Widgets",
          "Desplegando Iconos",
          "Desplegando la Fecha",
          "Mejorando nuestro código",
          "Desplegando Mensajes de Error",
          "Creando nuestro método de display progress",
          "Desplegando nuestra progress bar",
          "Ocultando nuestros widgets",
          "Manejando Errores",
          "Sobre los Intents",
          "Intents",
          "ListViews",
          "Adaptadores",
          "Creando un ArrayAdapter",
          "Extras",
          "Convirtiendo la Hora",
          "RecyclerViews",
          "Creando RecyclerViews",
          "LinearLayouts",
          "Probando nuestro Layout",
          "String resources",
          "Mejorando nuestro código",
          "Creando nuestro RecyclerView Adapter",
          "Agregando funcionalidad al adaptador",
          "Desplegando Información",
          "Parcelable",
          "Desplegando nuestro RecyclerView",
          "Query Parameters",
          "Query Parameters II",
          "Resource Qualifiers",
          "Grados"
        ],
        "Programación con Kotlin": [
          "Recursos y archivos adjuntos",
          "Instalando JDK y Kotlin",
          "Comentarios en Kotlin",
          "Main",
          "Operaciones Aritméticas",
          "Residuos y Tipos",
          "Orden de Operaciones",
          "Funciones Matemáticas",
          "Librería Estándar de Kotlin",
          "Variables y Constantes",
          "Operadores de Incremento y Decremento",
          "Ejercicio 1",
          "Solucion",
          "Conversiones",
          "String Templates",
          "Pares y Trios",
          "Boleanos",
          "Operaciones de Comparación",
          "Expresiones IF",
          "Else IF",
          "Alcance de Variables",
          "Ciclos While",
          "Ciclos Do While",
          "Break",
          "Rangos",
          "Ciclos For",
          "Expresiones when",
          "Expresiones when II",
          "Funciones",
          "Funciones con Parámetros",
          "Valores por defecto",
          "Funciones con Varios Parametros",
          "Funciones con Return",
          "Parametros como constantes",
          "Funciones sobrecargadas",
          "Funciones como tipo de dato",
          "Nullables",
          "Nullables en Kotlin",
          "Not Null assertion operator",
          "Smart Cast",
          "Safe Call",
          "Operador Elvis",
          "Arreglos en Kotlin",
          "Creando Arreglos",
          "Accediendo Elementos",
          "Recorriendo Arreglos",
          "Listas",
          "Modificando Listas",
          "Agregando elementos a nuestras listas",
          "Removiendo elementos de nuestras Listas",
          "Recorriendo Listas y Arreglos",
          "Mapas",
          "Mapas mutables e inmutables",
          "Agregando Elementos",
          "Añadiendo elementos",
          "Removiendo e iterando mapas",
          "Conjuntos",
          "Conjuntos II",
          "Expresiones Lambda",
          "Lambdas como argumento",
          "Lambdas sin Retorno",
          "Alcance de las Lambdas",
          "Clases",
          "Clases como referencias",
          "Operador de Identidad",
          "Mutabilidad en las Clases",
          "Clases de Datos",
          "Object",
          "Companion object",
          "Lateinit",
          "Inicializacion Tardia",
          "Herencia",
          "Operadores de Casteo Seguro",
          "Clases Abstractas",
          "Enumeraciones",
          "Métodos y Enumeraciones"
        ]
      },
      "requirements": [
        "Experiencia previa con programación orientada a objetos",
        "Experiencia previa en XML es deseable pero no requerida",
        "PC o Mac que pueda ejecutar Android Studio",
        "Conexión a internet"
      ],
      "description": "Hola Chicos!\n\nBienvenidos a este nuevo curso de desarrollo para aplicaciones móviles para Android 10. Aquí aprenderás todo lo necesario para desarrollar apps para dispositivos con Android utilizando Android Studio y el lenguaje de programación Kotlin. Se utilizará un enfoque completamente práctico donde el estudiante aprenderá a crear apps utilizando ejemplos prácticos y divertidos:\n\nEn el curso aprenderás lo siguiente:\nProgramación con Kotlin:\nVariables, constantes y tipos de datos.\nCiclos y decisiones.\nNullables.\nListas, mapas y conjuntos.\nMétodos y expresiones lambda\nClases, objetos y herencia\n\n\nDesarrollo Android:\nCreación de layouts utilizando XML.\nDesarrollo de aplicaciones Android utilizando Kotlin.\nInteracción con REST APIs.\nCreacion de Views y widgets utilizando XML\nManejo de dependencias utilizando Gradle\nInteraccion con servicios web utilizando Retrofit\nMejora de código utilizando Anko.\nCreacion de Logs\nManejo del ciclo de vida de las actividades\nManejo de Errores\nCreacion de Intents\nRecyclerViews, ListViews y LinearLayouts\nCreacion de Interfaces\nPermisos normales y peligrosos\nAndroid Manifest\nString resources\nColor resources\nDesarrollo Android Intermedio\nInternacionalizacion de la App\nY mucho más :D\n\n\nEste curso esta diseñado para programadores o estudiantes con experiencia previa en lenguajes de programación orientados a objetos. Se asume que el estudiante también tiene una computadora PC o Mac capaz de ejecutar Android Studio.\nTe espero en el curso!!! :D",
      "target_audience": [
        "Programadores principiantes que quieren aprender a programar con Android",
        "Programadores principiantes que quieren aprender a programar con Kotlin",
        "Programadores con experiencia que quieran aprender a desarrollar aplicaciones moviles con Android Studio"
      ]
    },
    {
      "title": "Iniciando no Power Apps com Projetos Reais",
      "url": "https://www.udemy.com/course/iniciando-no-power-apps-com-projetos-reais/",
      "bio": "Aprenda a criar aplicativos sem código utilizando o Microsoft Power Apps com projetos reais de um jeito simples!",
      "objectives": [
        "Entender como o Power Apps funciona.",
        "Criar projetos do zero e conectar a diversas fontes de dados.",
        "Como aplicar segurança no Power Apps",
        "Como criar uma interface responsiva no Power Apps",
        "Como utilizar o Power Apps com o SharePoint",
        "Como utilizar o Power Apps com bases relacionadas",
        "Como fazer a publicação de um aplicativo Power Apps",
        "Como criar gráficos no Power Apps",
        "Como utilizar recursos de câmera no Power Apps",
        "Como utilizar funções de Data no Power Apps",
        "Como disponibilizar o aplicativo com segurança"
      ],
      "course_content": {
        "Introdução ao Microsoft Power Apps": [
          "Introdução ao Power Apps e licenciamento",
          "Visão geral do Power Apps e uma introdução à interface de desenvolvimento",
          "Criando um aplicativo a partir de uma lista do SharePoint",
          "Conhecendo a estrutura do aplicativo criado pelo Power Apps",
          "Projeto1 - o primeiro aplicativo que iremos criar durante as aulas.",
          "Criando o padrão de cores do aplicativo Power Apps",
          "Ajustando o layout do aplicativo no Power Apps",
          "Uso do condicional IF no Power Apps",
          "Utilização de variáveis de contexto no Power Apps",
          "Função de agregação SUM e delegação no Power Apps",
          "Formulários no Power Apps",
          "Radio button no formulário do Power Apps.",
          "Adicionando a exclusão de itens da lista no Power Apps.",
          "Compartilhamento, exportação e monitoramento de aplicativos no Power Apps"
        ],
        "Responsividade e componentes em um projeto da vida real": [
          "Projeto 2 – Sistema de Helpdesk - Apresentação do projeto",
          "Criando a fonte de dados utilizada no projeto.",
          "Criando o aplicativo e entendendo a estrutura para garantir a responsividade.",
          "Criando um componente no Power Apps",
          "Propriedades do componente no Power Apps",
          "Adicionando as variáveis das cores padrão do aplicativo.",
          "Conectando à fonte de dados no SharePoint",
          "2.8. Instanciando o componente Header nas páginas do aplicativo",
          "Criando o componente de Menu no aplicativo do Power Apps",
          "Criando a tabela para o componente menu",
          "Adicionando propriedades ao componente de Menu – parte1",
          "Adicionando propriedades ao componente de Menu – parte2",
          "Criando uma coleção para armazenar os itens do menu",
          "Criando a estrutura de containers da página principal.",
          "Adicionando a lista de chamados usando uma Galeria vertical",
          "Criando uma formatação condicional para a galeria com a função Switch",
          "Entendendo as propriedades dos controles do tipo Gráfico no Power Apps",
          "Utilizando as funções Showcolums, AddColumns e GroupBy no Power Apps",
          "Customizando as cores dos gráficos",
          "Criando um Pop Up para detalhar os dados dos gráficos",
          "Utilizando a função Filter para apresentar os dados do gráfico selecionado",
          "Criando a estrutura das novas visões utilizando containers",
          "Criando filtros múltiplos para os chamados listados na Galeria",
          "Aplicando os filtros múltiplos na Galeria",
          "Utilizando o controle de Texto em HTML para criar um background da Galeria",
          "Organizando as informações da Galeria e utilizando a função Swtich",
          "Utilizando a alternância entre as opções do menu para mudar o conteúdo",
          "Adicionando os valores calculados aos itens do menu",
          "Adicionando um formulário de edição na página",
          "Criando uma nova propriedade para o componente Header",
          "Customizando o formulário no Power Apps",
          "Customizando o formulário no Power Apps",
          "Definindo um status padrão ao criar um chamado",
          "Definindo uma notificação de sucesso com uma função condicional."
        ],
        "Trabalhando com funções de data no Power Apps": [
          "Projeto3 – Sistema de reserva de salas",
          "Criando as listas no SharePoint para armazenar as salas e o agendamento",
          "Criando a estrutura do projeto com containers do Power Apps",
          "Criando um calendário mensal e uma variável para calcular a data de inicio",
          "5-Utilizando a função ForAll para calcular os dias do calendário",
          "Utilizando a função ForAll para calcular os dias do calendário",
          "Criando uma Galeria para compor o cabeçalho dos dias da semana",
          "Adicionando um menu de navegação para avançar ou diminuir o mês atual atual",
          "Utilizando funções de texto para formatar o título do calendário",
          "Criando a estrutura básica para adição dos horários de início e término",
          "Criando uma coleção para preencher a combobox dos horários de início e término",
          "Conectar as fontes de dados para o aplicativo",
          "Adicionando uma galeria para criar uma seleção de salas",
          "Entendendo o processo da seleção da sala utilizando as propriedades do Checkbox",
          "Adicionando um botão no calendário para realizar a seleção da data",
          "Criando uma formatação condicional para destacar os dias do mês",
          "Adicionando uma variável no OnSelect para capturar o valor do dia selecionado",
          "Criando a estrutura para registrar a reserva de salas.",
          "Utilizando as funções DateTimeValue e Text para colocar as datas e horário",
          "Criando um PopUp para exibir tela de confirmação do agendamento",
          "Mesclando texto HTML e CSS com variáveis e valores dos campos do Power App",
          "Utilizando a combinação da função ForAll com a função Patch",
          "Resetando os valores após a criação de uma nova reserva.",
          "Criando a validação do agendamento para verificar a seleção de salas",
          "Criando uma Galeria para exibição dos agendamentos.",
          "Formatando a galeria usando a função Text.",
          "Criando um Header na página usando texto HTML",
          "Adicionando uma Galeria dentro da outra no calendário",
          "Adicionando um Toggle para comutar entre calendários",
          "Criando a variável do primeiro dia da semana",
          "Adicionando o calendário com a visão semanal",
          "Utilizando as funções ForAll e DateAdd para preencher a Galeria semanal.",
          "Mudando o texto do cabeçalho de acordo com o calendário selecionado",
          "Avançando entre as semanas utilizando funções de Data do Power Apps",
          "Adicionando um botão e criando a formatação condicional para o calendário",
          "Adicionando uma Galeria para exibição das reservas dentro do calendario semanal",
          "Realizando testes com o calendário semanal para reserva de salas.",
          "Avaliando a opção de utilizar o conector do Outlook para sincronizar calendário",
          "Criando os agendamentos no Outlook utilizando o Power Automate",
          "Publicando o projeto e embedando o mesmo em uma página do SharePoint",
          "Publicando o Projeto numa equipe do Teams"
        ],
        "Trabalhando recursos mais avançados do Power Apps": [
          "Projeto 4 – Sistema de inventário, apresentação do projeto.",
          "Criando listas do SharePoint com relacionamento um para muitos.",
          "Criando o aplicativo no Power Apps e conectando as fontes de dados.",
          "Criando a estrutura de páginas do aplicativo do Power Apps",
          "Adicionando uma imagem e a apresentação inicial do aplicativo",
          "Aprendendo como trabalhar com SVGs no Power Apps",
          "Criando uma galeria para servir de menu inicial do aplicativo.",
          "Adicionando uma variável na inicialização para determinar se o usuário logado",
          "Criando um componente para o Header das páginas",
          "Criando o componente Menu e a propriedade de tabela",
          "Concluindo a Galeria do Menu e instanciando",
          "Iniciando a página de listagem de Equipamentos e adicionando a galeria",
          "Adicionando uma busca e ordenação na página de Equipamentos",
          "Criando a tela de exibição dos equipamentos",
          "Criando uma galeria para exibição das imagens de cada item.",
          "Adicionando ícones para edição e exclusão do item",
          "Criando um PopUp para confirmar exclusão usando o controle HTMLText",
          "Criando tela para adição de novo Equipamento com formulário de edição",
          "Criando um rótulo dinâmico para o componente Header",
          "Aprendendo a trabalhar com o controle de fotos no Power Apps",
          "Adicionando o leitor de códigos de barras no Power Apps",
          "Testando o aplicativo com câmera e leitor de código de barras",
          "Utilizando a propriedade onSucess do formulário para uma notificação condicional",
          "Iniciando a configuração da página de administração",
          "Adicionando galeria e formulário para exibição, edição, criação e exclusão.",
          "Concluindo o formulário para adição, edição e exclusão de administradores",
          "Utilizando uma nova abordagem de edição da galeria no Power Apps",
          "Edição in-line de itens na galeria do Power Apps",
          "Criando a tela de listagem de inventários adicionando formulário e galeria",
          "Modificando o componente para ocultar e mostrar o formulário.",
          "Adição de um novo inventário numa lista com relacionamento",
          "Fazendo uma verificação prévia se o registro de inventário já existe.",
          "Criação da tela de cadastro de itens do inventário",
          "Adicionando novos registros na coleção de itens a serem inventariados",
          "Criação dos itens in-line na galeria com validação",
          "Atualizando e removendo itens da coleção",
          "Salvando itens da collection e do inventário com as funções ForAll e Patch",
          "Listando inventários concluídos com ForAll e Collect",
          "Criando um relatório do item inventariado usando HTML e CSS",
          "Resolvendo o bug dos itens de inventário duplicados",
          "Adicionando relatórios com GroupBy, AddColumns e ShowColumns",
          "Criando filtro para o relatório usando o controle combobox e a publicação do App"
        ],
        "Power Apps com Power Automate e biblioteca do SharePoint": [
          "Apresentação do projeto a ser desenvolvido",
          "Criação das colunas personalizadas no SharePoint",
          "Criação do tipo de conteúdo",
          "Criação e configuração da Biblioteca do SharePoint",
          "Como adicionar os arquivos do Word de modelo",
          "Configuração das propriedades dinâmicas no modelo do Word",
          "Criar uma proposta a partir de um fluxo",
          "Atualizar as propriedades do arquivo através do fluxo",
          "Criação da tela de cadastro no Power Apps para iniciar o fluxo",
          "Criação da tela de cadastro no Power Apps para iniciar o fluxo",
          "Conexão do Power Automate no aplicativo",
          "Testes finais do fluxo completo e desafio",
          "Resolução do desafio"
        ]
      },
      "requirements": [
        "Conhecimentos básicos de Windows e acesso à internet."
      ],
      "description": "Aprenda o Microsoft Power Apps do zero com projetos reais. Um curso completo para quem deseja desenvolver aplicativos no Power Apps elaborado por um instrutor com experiência de mais de 20 anos ministrando treinamentos de TI, MCT Microsoft com certificações na Power Plataform e que também atua como consultor de empresas renomadas desenvolvendo soluções com Power Apps, Power Automate e SharePoint.\n\nEsse é o momento perfeito para aprender o Power Apps, muitas empresas contrataram o Office 365, maior solução de nuvem do mercado, e começam a descobrir as vantagens de utilizar o Power Apps e todo ecossistema da Power Plataform.\n\nEste curso vai te ajudar a sair do zero através de uma experiência baseada em projetos reais. Vamos desenvolver juntos soluções completas com alto valor agregado e durante o projeto, vou te ensinando os conceitos por traz do Power Apps, sem teorias enfadonhas ou aulas cheias de slides. Aqui você vai ter a melhor experiência de aprendizado, será uma simulação de estar criando seu primeiro portifólio para apresentar na sua entrevista de emprego, ou simplesmente terá aplicativos prontos que poderá utilizar na sua empresa ou em seus clientes.\n\nDurante o curso iremos aprender:\nO que o Power Apps\nComo funciona o licenciamento\nComo criar uma conta trial do Power Apps\nCriar um aplicativo a partir de uma lista do SharePoint\nCriar um aplicativo do zero\nFormulário do básico ao avançado\nUtilização do controle de câmeras\nSincronização com SharePoint\nResponsividade\nUtilização de containers\nComo utilizar componentes para aumentar produtividade\nUtilização dos controles de gráficos no Power Apps\nFunções condicionais (IF, Switch)\nLeitor de códigos de barras\nUtilização de HTML e CSS dentro do Power Apps\nPublicação e compartilhamento de aplicativos com segurança\nIntegração com bibliotecas do Sharepoint\nPower Automate\n\n\nInscreva-se agora mesmo no curso \"Iniciando no Power Apps com Projetos Reais\" e torne-se um profissional capaz de impulsionar a inovação e criação de valor agregado nas empresas.",
      "target_audience": [
        "Iniciante no Power Apps",
        "Pessoas que tem acesso ao Office 365 e desejam explorar mais recursos da ferramenta.",
        "Qualquer um que deseja criar aplicativos multiplataforma low code utilizando o Power Apps"
      ]
    },
    {
      "title": "คอร์สเรียนเขียนโปรแกรม และสร้าง App บน iOS 10",
      "url": "https://www.udemy.com/course/ios-10-thai/",
      "bio": "สร้าง App เช่น Uber, Instagram และ Flappy Bird ด้วย Xcode 8 และ Swift 3 ตามด้วยของแถมอย่าง free web hosting, assets และ",
      "objectives": [
        "สร้างแอปที่ตอบสนององกรค์หรือธุรกิจของคุณ",
        "สร้างแอปที่คุณต้องการ",
        "สร้างงาน freelance ให้กับคุณได้"
      ],
      "course_content": {
        "Undefined": [
          "Introduction"
        ],
        "Introduction & Getting Started": [
          "How to get the free stuff",
          "Frequently Asked Questions"
        ],
        "Getting Started With Xcode 8 and Swift 3": [
          "Introduction",
          "Xcode Versions - Please Read",
          "Downloading & Installing Xcode 8",
          "Navigating The Xcode Interface",
          "Navigating The Xcode Interface (Xcode Files)",
          "การใช้งาน Labels",
          "การใช้งาน Labels (Xcode Files)",
          "การใช้งาน Text Fields และ Buttons",
          "การใช้งาน Text Fields และ Buttons (Xcode Files)",
          "ลอง Run Code กับ Hello World",
          "ลอง Run Code กับ Hello World (Xcode Files)",
          "การ Interact กับ Button",
          "การ Interact กับ Button (Xcode Files)",
          "การใช้งาน Image",
          "การใช้งาน Image (Xcode Files)",
          "Your First App - Cat Years",
          "Your First App - Cat Years (Xcode Files)"
        ],
        "Swift 3 Deep Dive (ใช้งาน Playgrounds)": [
          "Introduction",
          "Swift Playgrounds (Xcode Files)",
          "เรียนรู้เกี่ยวกับ Variables",
          "เรียนรู้เกี่ยวกับ Variables (Xcode Files)",
          "การใช้งาน Array และ Dictionaries",
          "การใช้งาน Array และ Dictionaries (Xcode Files)",
          "If Statements",
          "If Statements (Xcode Files)",
          "สร้างเกม - How Many Fingers",
          "สร้างเกม - How Many Fingers (Xcode Files)",
          "การใช้งาน While Loops",
          "การใช้งาน While Loops (Xcode Files)",
          "การใช้งาน For Loops",
          "การใช้งาน For Loops (Xcode Files)",
          "Classes และ Objects",
          "Classes และ Objects (Xcode Files)",
          "เรียนรู้และใช้งาน Optional",
          "เรียนรู้และใช้งาน Optional (Xcode Files)",
          "Auto Layout",
          "Auto Layout (Xcode Files)",
          "สร้าง App - Is It Prime? Part I",
          "สร้าง App - Is It Prime? Part I (Xcode Files)",
          "สร้าง App - Is It Prime? Part II",
          "สร้าง App - Is It Prime? Part II (Xcode Files)"
        ],
        "Advanced iOS Features: Timers, Tables, Permanent Storage และ Web Content": [
          "Introduction",
          "Navigation Bars",
          "Navigation Bars (Xcode Files)",
          "สร้าง App - EggTimer",
          "สร้าง App - Egg Timer (Xcode Files)",
          "Table Views",
          "Table Views (Xcode Files)",
          "สร้าง App - Times Tables",
          "สร้าง App - Times Tables (Xcode Files)",
          "Storing Data Permanently",
          "Storing Data Permanently (Xcode Files)",
          "Multiple View Controllers",
          "Multiple View Controllers (Xcode Files)",
          "การ Control Keyboard",
          "การ Control Keyboard (Xcode Files)",
          "สร้าง App - To Do List",
          "สร้าง App - To Do List (Xcode Files)",
          "การ Download ข้อมูลจาก Web Content",
          "การ Download ข้อมูลจาก Web Content (Xcode Files)",
          "การใช้งาน String",
          "การใช้งาน String (Xcode Files)",
          "สร้าง App - What's The Weather",
          "สร้าง App - What's The Weather (Xcode Files)"
        ],
        "Advanced iOS Features II: Animation, Games, Maps & Geolocation, Audio": [
          "Introduction",
          "Animation Part I",
          "Animation Part I (Xcode Files)",
          "Animation Part II",
          "Animation Part II (Xcode Files)",
          "สร้าง Game - Tic Tac Toe",
          "สร้าง Game - Tic Tac Toe (Xcode Files)",
          "การใช้งาน Maps ใน App",
          "การใช้งาน Maps ใน App (Xcode Files)",
          "การ Add User Annotation ลงใน Maps",
          "การ Add User Annotation ลงใน Maps (Xcode Files)",
          "การใช้งาน User's Location",
          "การใช้งาน User's Location (Xcode Files)",
          "สร้าง App - Location Aware",
          "สร้าง App - Location Aware (Xcode Files)",
          "Advanced Segues",
          "Advanced Segues (Xcode Files)",
          "สร้าง App - Memorable Places",
          "สร้าง App - Memorable Places (Xcode Files)",
          "การใช้งาน Audio",
          "การใช้งาน Audio (Xcode Files)",
          "สร้าง App - Back To Bach",
          "สร้าง App - Back To Bach (Xcode Files)",
          "การใช้งาน Swipes และ Shakes",
          "การใช้งาน Swipes และ Shakes (Xcode Files)",
          "สร้าง App - Sound Shaker",
          "สร้าง App - Sound Shaker (Xcode Files)"
        ],
        "Core Data, Advanced Web Content, Json Data และ Webviews": [
          "Introduction",
          "Introduction Core Data",
          "Introduction Core Data (Xcode Files)",
          "Advanced Core Data",
          "Advanced Core Data (Xcode Files)",
          "ดาวน์โหลดรูปจาก Website",
          "ดาวน์โหลดรูปจาก Website (Xcode Files)",
          "APIs และ JSON Data",
          "APIs และ JSON Data (Xcode Files)",
          "สร้าง App - Blog Reader",
          "สร้าง App - Blog Reader (Xcode Files)"
        ],
        "Instagram Clone": [
          "Introduction",
          "Parse Server & AWS",
          "Retrieving & Updating Data",
          "Retrieving & Updating Data (Xcode Files)",
          "การเข้าถึงและใช้งาน Camera Roll",
          "การเข้าถึงและใช้งาน Camera Roll (Xcode Files)",
          "Spinners และ Alerts",
          "Spinners และ Alerts (Xcode Files)",
          "Login และ Signup",
          "Login และ Signup (Xcode Files)",
          "The User Table",
          "The User Table (Xcode Files)",
          "Pull To Refresh",
          "Pull To Refresh (Xcode Files)",
          "การโพสต์รูป",
          "การโพสต์รูป (Xcode Files)",
          "การสร้าง User's Feeds",
          "การสร้าง User's Feeds (Xcode Files)"
        ],
        "Tinder Clone": [
          "Introduction",
          "Introduction To Tinder",
          "Update To Parse Server Setup Process",
          "Setting Up Parse Server",
          "Setting Up Parse Server",
          "Changing The App ID",
          "Changing The App ID",
          "Dragging Objects",
          "Dragging Objects (Xcode Files)",
          "Login และ Signup",
          "Login และ Signup (Xcode Files)",
          "Adding User Details",
          "Adding User Details (Xcode Files)",
          "Adding Users",
          "Adding Users (Xcode Files)",
          "Swiping Users",
          "Swiping Users (Xcode Files)",
          "Location & Matches",
          "Location & Matches (Xcode Files)"
        ],
        "การทำ Games โดยใช้ Spritekit": [
          "Introduction",
          "Hello World With Sprite Kit",
          "Hello World With Sprite Kit (Xcode Files)",
          "การสร้างและ animation ของ Sprites",
          "การสร้างและ animation ของ Sprites (Xcode Files)",
          "การสร้าง Animating Background",
          "การสร้าง Animating Background (Xcode Files)",
          "Controlling The Bird",
          "Controlling The Bird (Xcode Files)",
          "Spawning Pipes",
          "Spawning Pipes (Xcode Files)",
          "Detecting Collisions",
          "Detecting Collisions (Xcode Files)",
          "Scoring & Game Controls",
          "Scoring & Game Controls (Xcode Files)"
        ]
      },
      "requirements": [
        "Computer - Windows, OSX or Linux",
        "ไม่จำเป็นต้องมีความรู้พื้นฐาน เพราะสอนจากเริ่มเลย",
        "ไม่จำเป็นต้องซื้อ software ใดๆ ใช้แค่ Xcode 8"
      ],
      "description": "อยากจะเขียนโปรแกรมหรือสร้างแอปเป็นของตัวเองขึ้นมาใช่มั้ย? มาถูกที่แล้วล่ะครับ\n\nรวมถึงคนที่เคยเขียนโปรแกรมหรือสร้างแอปตัวเองมาบ้างแล้ว แต่อยากจะพัฒาให้เจ๋งขึ้นคอร์สนี้ก็เหมาะกับคุณเช่นกัน\n\nขอบคุณ iOS 10 ที่ให้โอกาสนั้น ถ้าคุณเริ่มต้นเรียนวันนี้ คุณก็จะสามารถสร้างและพัฒนาแอปของคุณขึ้นมาได้ภายใน 6 สัปดาห์\nคอร์สเรียนเขียน App บน iOS 10 นี้ เป็นการ dub เสียง เรียบเรียงและแปลคลิปการสอนของ Rob Percival เป็นภาษาไทย ตัวคอร์สตอนนี้มีเนื้อหากว่า 85% ของ Lecture ทั้งหมด ซึ่งอยากให้ใครที่สนใจอยากเริ่มเรียนตั้งแต่ต้นในการหัดเขียนโปรแกรมบน iOS 10 ได้เริ่มเรียนกันก่อน ส่วนที่เหลือจะทยอยตามมาและสมบูรณ์ในเดือนกันยานี้แน่นอน!!!\n\nทำไมคุณจะต้องเรียนรู้จากคอร์สของ Rob Percival\n\nRob Percival คือ creator ที่มีชื่อเสียงและได้รับเรตติ้งที่สูงมาก แทบจะเรียกได้ว่าเป็นหนึ่งใน course instructor ที่ฮอตสุดๆ บน platform Udemy เลยทีเดียว ด้วยนักเรียนที่เรียนกับเค้ากว่า 400,000 คน และ 20,000 รีวิวและเรตติ้งห้าดาวเต็ม\n\"Take a peek at my bio to learn how I successful switched career to teach people like you how to code. And how, since making that decision, I’ve never looked back.\nI promise, it really doesn’t matter whether you’re 60 or 16, absolutely ANYONE will love this course and take away life-changing skills that can help you change career or make some extra cash on the side. The only limit? Your imagination.\" - Rob Percival\nและนี่คือเหตุผลว่าทำไมถึงต้องแปลงการสอนของ Rob เป็นภาษาไทย เพื่อเป็นทางเลือกสำหรับคนที่อยากเลือกเรียนการเขียนโปรแกรมบน iOS ด้วยภาษาไทย\n\n\nIntroducing ios 10\n\nเป็นอะไรที่น่าตื่นเต้นสำหรับ iOS 10 นะครับ ที่จะทำให้เราสามารถใช้งานตัว feature เจ๋งๆในแอป เช่น Message, Siri, Phone และ Maps และผู้ใช้งานยังสามารถดูรูป ดูวิดิโอ และฟังเพลงจาก notification ได้เลย\nสมัครคอร์สวันนี้จะได้พวกข้างล่างนี้แถมไปเลย\nเนื้อหาการเรียนแบบเข้มข้น จัดไป 30 กว่าชั่วโมง\nAll the knowledge you need to get moving with ios 10 - SiriKit, Messages and Maps\nความรู้ใหม่ใน iOS 10 - SiriKit, Messages and Maps\nApps, Home Screen Widgets, HomeKit\nคมชัดระดับ HD 1080p\nยังไม่หมด!!! มีของแถมเพิ่มที่จะช่วยให้คุณพัฒนาไปได้อีก\nUnlimited web hosting จัดไปเต็มๆหนี่งปี (มูลค่า $200)\nหนังสือสุดป๊อปได้ห้าดาวบน Amazon \"How To Earn $10,000 While Learning To Code\"\nรูปไว้ใช้งานกว่า 1000 รูป มูลค่ารวมแล้วกว่า $300 ไว้ใช้ในแอปของคุณ\nและเครดิตในการงาน AWS มูลค่า $50\n\n\nหากคุณสนใจร่วมเดินทางไปกับเราในคอร์สนี้ และพร้อมเป็น iOS Developer แล้ว สมัครเลยวันนี้ จะรออะไรล่ะ\nจากมือใหม่กลายเป็น iOS 10 app developer เต็มตัวภายใน 6 สัปดาห์\n\nXCode and Interface Builder\nInputs, Buttons, and Reactive Interfaces\nApple’s New Programming Language: Swift\nVariables, Arrays, Tables, and Loops\nNavigation, Storage, and Live Content\nImages, Maps and Music\nAccelerometers and Motion Feedback\nCore Data and JSON\nOnline Storage With Parse\nGames and the Sprite Kit\nInstagram and Snapchat Clones\nการ submit ขึ้น App Store\nการทำ Marketing Website สำหรับแอป\n\n\nในคอร์สนี้เราจะเริ่มกันตั้งแต่พื้นฐานเพื่อเสริมสร้างความมั่นใจของคุณก่อน แล้วคุณจะพบว่ามันช่างเรียนรู็ได้ง่าย เร็ว และติดหัวกันเลยทีเดียว\nเมื่อคุณตัดสินใจเรียนคอร์ศนี้ คุณจะเดินทางไปกับคอร์สที่สอนให้คุณเข้าใจได้ง่ายกับ 223 lectures กว่า 30 ชั่วโมง ซึ่งผู้สอนปล่อยของหมดไม่มีกั๊กเกี่ยวกับ Xcode 8 และ Swift 3\nเริ่มจากเบสิกๆและค่อยขยับไปขั้น advanced กับอนิเมชั่นในเกม, geolocation และ web content\nคุณจะได้สร้างแอป Instagram และ Snapchat ในแบบของคุณเอง\n\n\nอย่าได้เปลืองเงินไปกับสิ่งที่ไม่ได้พัฒนาคุณ\nอย่าได้เสียงเงิยและเวลาไปกับคลิปสมัครเล่นใน Youtube หรือพวกหนังสือเก่าเก็บ คอร์สนี้ให้คุณทุกอย่างที่ต้องการ พร้อมการ support ผ่าน email, Twitter และ Udemy forums\nแล้วจะรออะไร บอกลาพวก tutorial และหนังสือเก่าๆไปได้เลย ร่วมเดินทางไปกับเราวันนี้แถมให้ฟรี หนังสือ e-book 76 หน้า ‘How to make $10,000 while learning to code’\nและที่สำคัญ... ไม่พอใจ คืนเงินเต็ม หากคุณขอมาภายใน 30 วันหลังซื้อคอร์ส\nอ่านถึงนี่แล้วก็จัดไป กดปุ่มซื้อซะ ไม่เสียหายอะไร แถมได้ความรู้เพิ่มเยอะแยะ!!!",
      "target_audience": [
        "เหมาะกับทุกคนที่อยากเรียนรู็การสร้างแอป",
        "เหมาะกับคนที่อยากสร้างรายได้จากการพัฒนาแอป",
        "เหมาะกับทุกคนที่อยากเรียนรู้การเขียนโปรแกรม"
      ]
    },
    {
      "title": "Android App Development - Make a Quiz Game App",
      "url": "https://www.udemy.com/course/creating-a-quiz-game-app-from-scratch-android-studio/",
      "bio": "Build a Quiz Game App from Scratch: Master Android Studio Essentials and Start Creating Today",
      "objectives": [],
      "course_content": {},
      "requirements": [
        "Don't worry if you're new to programming or Android development; this course is designed to guide beginners through each step of the process. With dedication and practice, anyone can learn to build their own Android apps!"
      ],
      "description": "Welcome to our comprehensive course on building a Quiz Game App from scratch using Android Studio!\n\n\nIn this hands-on course, you'll dive into the exciting world of Android app development as we guide you through each step of creating your own quiz game. From setting up your project to designing a user-friendly interface and implementing game logic, you'll gain practical skills that you can apply to future app development projects.\n\n\nOur expert instructors will provide clear explanations, practical examples, and helpful tips to ensure you have a thorough understanding of Android Studio and app development principles. By the end of the course, you'll have a fully functional quiz game app that you can customize and expand upon.\n\n\nWhether you're a beginner or have some experience with Android development, this course is designed to help you succeed. Join us today and start building your own quiz game app!\n\n\nExpand your programming knowledge, enhance your problem-solving skills, and unleash your creativity with this engaging and educational course. With hands-on projects and real-world examples, you'll gain valuable experience that will set you apart in the competitive field of app development. Don't miss out on this opportunity to learn from industry experts and take your coding skills to the next level. Enroll now and start your journey towards becoming a skilled Android developer",
      "target_audience": [
        "If you're looking to kickstart a career in app development, enhance your coding skills, or simply explore a new hobby, this course offers a comprehensive introduction to Android app development tailored to meet your learning needs."
      ]
    },
    {
      "title": "Curso iOS con Swift, con Base de datos y Servicios Web",
      "url": "https://www.udemy.com/course/curso-aplicaciones-iphone-con-swift-directo-a-la-venas/",
      "bio": "actualizado a la versión SWIFT 4 y 5, nuestros videos se actualizaran en futuras versiones y soporte online siempre",
      "objectives": [
        "Aprenderas toda la plataforma iOS , métodos y buenas prácticas para crear aplicaciones profesionales, ademas del lenguaje de programación Swift",
        "desarrollaremos un proyecto completo con base de datos local y envío de datos a un servidor",
        "Constantemente enviaremos updates y mejoras, con componentes que puedes reutilizar en tu propio App",
        "En el 2024 tenemos nuevos ejemplos y modulos para integrar servicios de Open AI y ejemplos usando Inteligencia Artificial"
      ],
      "course_content": {
        "Bonus, Componente Login Vista /Controller y lógica usando Sesión y Servicios web": [
          "Explicación inicial de tarea a desarrollar",
          "Probando el Servicio Web de login",
          "Creando la vista Login",
          "Presentando el modal Login sin usar Segue",
          "Servicio Web Login y persistencia de Sesión",
          "Culminamos el flujo con el uso con la validación de sesión"
        ],
        "introducción al curso Swift última versión (Swift 4)": [
          "Desarrollo de apps iPhone con Swift- Bienvenido al curso",
          "Objetivo del curso",
          "Fuente Documentación oficial Apple y otras fuentes",
          "Opciones de Registro como developer",
          "Referencia básica y presentando a Xcode",
          "proceso_de_desarrollo",
          "patron_mvc y conexiones IBOutlet e IBAction",
          "XCODE Descarga e instalacion",
          "Crear un proyecto iOS, estructura de files y bundle Identifier",
          "presentando las opciones y areas de Xcode",
          "Diseño Vista y presentando al mainStoryBoard",
          "Controlador Label, su uso y sus propiedades",
          "Agregando TextField a la vista y sus propiedades",
          "agregando un Button a la vista y revisando sus propiedades",
          "agregando controlador TextView a la vista y revisando sus propiedades",
          "Compilar el avance y revisar el SIMULADOR",
          "Conociendo el Controller de la vista , y escribiendo el primer código",
          "Vinculos_IBOutlet_IBAction_capaController",
          "Cambio de propiedad \"text\" (SET)",
          "GET de propiedades",
          "Concatenar textos con variables (formato)",
          "uso de Condicional If_else como flujo de control de dato de mensaje",
          "Concepto de Tipo Optional (introducción) , actual Swift 4"
        ],
        "Tipos de Datos, Constantes, Variables, Funciones": [
          "tipos_de_datos - constantes",
          "variables declaración, descarga presentación y ejemplo",
          "Funciones declaración en su modo Simple",
          "Visibilidad de Variables (variables de clase y de función)",
          "funciones con parametros de entrada",
          "funciones_nombres_parametros",
          "funciones con retorno",
          "Como_usar_documentacion_oficial (extra)"
        ],
        "Programación Orientada a Objetos en iOS con Swift": [
          "clases_objetos_definicion, debugger con Xcode",
          "Reutilizando clases usando objetos",
          "Herencia de clases, caso de tipo Optional",
          "Clase Public y Private diferencia",
          "Class como fichero crear",
          "Resumen del capítulo de Clases y Objetos"
        ],
        "Controles UI (user interface) más usados con Swift": [
          "Clase UISwitch metodología de uso de documentación",
          "Class UIImageView , contenedor de imagen",
          "Ejemplo UISwitch con UIImageView y UIImage",
          "Clase UISegmentControl (parte 1)",
          "Clase UISegmentController (parte2)",
          "Ejemplo completo UISegmentControl (parte 3 final)"
        ],
        "Autolayout, interface y restricciones - Swift": [
          "AutoLayout, introducción con Storyboard y opciones swift3",
          "Crear Diseño vista y resolver Autolayout Automatico",
          "Borrar constrainst",
          "Agregando Constrains para alinear y centrar objetos",
          "Agregar Constrains para uso de margenes laterales",
          "Agregar Constrains para objetos laterales y RECURSOS"
        ],
        "Colección de datos en iOS y Swift": [
          "Colección de datos conceptos",
          "Ejemplo Básico de Array",
          "Ejemplo Array con vista",
          "Ejemplo Colección de datos Array y Dictionary"
        ],
        "UITableView - Swift": [
          "Ejemplo con Dictionary y Colección de datos",
          "UITableViewController y ClassController creación y vinculo",
          "UITableViewController, implementación básica",
          "UITableViewController con estilo subtitle",
          "UITableViewController con Vista estilo subtitle con imagen",
          "Celda Personalizada del TableView-paso1 crear vista",
          "Celdas personalizadas Controller y integrar al TableView",
          "UITableViewController revisión",
          "Recursos y Códigos Fuentes TableView"
        ],
        "Passing Data (pasar datos desde una vista a otra) Swift": [
          "PassingData",
          "PassingData2",
          "Passing Data"
        ],
        "Fase 1: implementando Proyecto Restaurante - DataSource con Dictionary y Array": [
          "Revision del funcionalidad usando el mockup y diseño",
          "creación y diseño de Navegación usando Storyboard",
          "Personalización de Iconos de TabBar y uso de recursos",
          "Diseño de vista Home",
          "Flujo de Navegación del menú, usando NavigationController",
          "Diseño de vista Categoria Platos, parte 1",
          "Diseno de Vista Categoria, titulo y TableView, parte 2",
          "Implementación del TableView Menú Categorias, parte 1",
          "implementación Menú Categoria con datos, parte 2",
          "Implementación de Celdas_customizadas para el menú",
          "Diseño vista Lista de Platos, area logín y TableView",
          "NavigationBar personalización de fondo y logo",
          "Celda Platos customizado, Vista TableView Listar Platos, parte 1",
          "Controller de Celda Personalizada de tableViewController Lista Platos, parte 2",
          "Celdas Personalizada y links IBOutlet, parte 3",
          "Celdas Personalizadas, conexión con datos parte 4",
          "Vista Detalle plato, inicio Diseño de vista y controller",
          "Vista Detalle avance del layout y constrains",
          "Vista Detalle final layout con constrains dentro del TableViewController Statico",
          "Fuentes Proyecto Restaurante Fase 1"
        ]
      },
      "requirements": [
        "Solo requiere mucho entusiasmo y dedicación como la mayoria de emprendimientos"
      ],
      "description": "Sabemos de tu interes en aprender las últimas versiones de iOS, la version iOS13 y Swift 5 se oficializó por fín, este curso esta preparado para esta versión, nuestra recomendación es iniciar de una vez y saber que siempre van a haber actualizaciones y siempre tendrán mi soporte.\nEn este curso aprenderás a crear una aplicación profesional que reune las buenas practicas usando herramientas nativas Apple, desde su base inicial hasta concluir con manejo de base de datos que también enseñamos desde cero, más conocimiento de servicios web que también entregamos incluso los servicios web iniciales que te servirán para tener un modelo de desarrollo hacia tus propias aplicaciones o las de tus clientes.\nEsta inversión en adquirir este curso y conocimientos serán rápidamente retornados, por la gran demanda que existe tanto en desarrolladores como en aplicaciones\n\n\nNOTA IMPORTANTE:\nEl curso esta preparado para garantizar las nuevas versiones  como la version IOS 13 y Switf 5, los cuales se basan en mejoras en semántica o sintaxis básicamente. lo rescatable es que la metodología de desarrollo se mantiene y NOS COMPROMETEMOS A ACTUALIZAR EN TODOS LOS VIDEOS NECESARIOS con la salida de próximas versiones inclusive.\nLes deseamos muchos exitos!\n\nIng Fredy Asencios\nInstructor\nPD-como han visto las versiones de Swift siguen cambiando y ahora esta un nuevo paradigma que es Swift UI, lo cual también iré agregando en cada punto un paralelo de como es este curso en cada capítulo con este nuevo estilo de desarrollo.",
      "target_audience": [
        "Todos los emprendedores que desean hacer realidad sus ideas materializandolo en un aplicativo iPhone o iPad, para los programadores con experiencia tal vez sea un poco lento y aveces aburrido pero contiene tips que dificilmente encontrarén en otra documentación y menos en tutores, es bién práctico, para los mas expertos por favor llevar el curso con paciencia =)."
      ]
    },
    {
      "title": "iOS Bootcamp Programı | Swift | 2025",
      "url": "https://www.udemy.com/course/ios-bootcamp-program-swift/",
      "bio": "Özel tasarlanmış ders programı ile pratik ve verimli sonuç alarak gerçek bir IOS Bootcamp deneyimi yaşayacaksınız",
      "objectives": [
        "Yıllardır birçok şirkette düzenlediğimiz son derece verim aldığımız Gerçek Bootcamp deneyimini yaşayacaksınız.",
        "Kişiye özel çalışma programı oluşturabileceksiniz.",
        "7 adet Ödev yapacaksınız.",
        "1 adet Medium Yazısı yazacaksınız.",
        "1 adet Bitirme Projesi yapacaksınız.",
        "Ders tekrarı veya ders sırasında not alabilmek için kitap niteliğinde detaylı ders içi slaytlara sahip olacaksınız.",
        "Swift diline hakim olarak programlama yapabileceksiniz.",
        "Swift ile IOS programlama dünyasının detaylarına hakim olacaksınız.",
        "Tam anlamıyla profesyonel bir şekilde uygulama geliştirebileceksiniz.",
        "Aklınıza gelebilecek olan tüm fikirlerinizi mobil uygulamaya dönüştürebileceksiniz.",
        "Geliştirdiğiniz uygulamanızı uygulama marketleri ile birçok kişiye ulaştırabileceksiniz."
      ],
      "course_content": {
        "1.Gün": [
          "1.Ders - Bootcamp Tanıtım",
          "Güncelleme - Xcode 16.2 Yeni Proje Oluşturma",
          "2.Ders - Swift Giriş - Değişkenler Giriş - 1.Ödev",
          "3.Ders - Constant - Sabitler - Tür Dönüşümü - Karşılaştırma Operatörler"
        ],
        "2.Gün": [
          "1.Ders - if - Switch - For ve While Döngüsü",
          "2.Ders - Optional - Nesne Tabanlı Programlama Giriş.mp4",
          "3.Ders - Nesne Tabanlı Programlama Örneği - init yapısı - Class - Structure"
        ],
        "3.Gün": [
          "1.Ders - Fonksiyonlar - Overloading - 2.Ödev - Import",
          "2.Ders - Static - Enumeration - Composition",
          "3.Ders - Kalıtım-Overide-Upcasting-Downcasting-Protocol-Extension-Closure"
        ],
        "4.Gün": [
          "1.Ders - Collections Giriş - Array",
          "2.Ders - Set - Dictionary - Guard - Do Try Catch",
          "3.Ders - IOS Giriş - Xcode Arayüzü - Tasarım Giriş - Renk Seçimi"
        ],
        "5.Gün": [
          "1.Ders - Tasarım-AutoLayout-Align-Pin-Constraint-Çoklu Ekran Desteği-StackView",
          "2.Ders - Çoklu Dil Desteği - Uygulama Iconu - Uygulama Adı - Dark Mode-3.Ödev",
          "3.Ders - Sayfa Oluşturma - Görsel Nesne Bağlama - Sayfalar Arası Geçişler"
        ],
        "6.Gün": [
          "1.Ders - Sayfalar Arası Veri Transferi - Yaşam Döngüsü - Navigation & TabBar",
          "2.Ders - TabBar Kullanımı - 4.Ödev - Kullanıcı Etkileşimi - Alert -ActionSheet",
          "3.Ders - Label-TextField-Button-ImageView-Switch-Segmented Controller"
        ],
        "7.Gün": [
          "1.Ders - Slider - Stepper - Activity Indicator - ScrollView - 5.Ödev",
          "Güncelleme - ScrollView Kullanımı",
          "Güncelleme - Proje Dizini İçerisinde Yeni Klasör Oluşturma",
          "2.Ders - Kişiler Uygulaması - Temel Tasarım",
          "3.Ders - Kişiler Uygulaması - Temel Tasarım - SearchBar - TableView"
        ],
        "8.Gün": [
          "1.Ders - Ürünler Uygulaması - Detaylı TableView",
          "2.Ders - Urunler Uygulaması - Detaylı TableView",
          "3.Ders - Filmler Uygulaması Tasarım - Detaylı CollectionView"
        ],
        "9.Gün": [
          "1.Ders - Date & Time Picker - Uygulama Mimarisi Giriş - MVVM",
          "2.Ders - Uygulama Mimarisi - MVVM - ViewModel - RxSwift - Repository",
          "3.Ders - 6.Ödev - Kişiler Uygulaması - MVVM"
        ],
        "10.Gün": [
          "1.Ders - Filmler Uygulaması MVVM - Depolama İşlemleri Giriş - UserDefaults",
          "2.Ders - Veritabanı Kullanımı - DB Browser - SQLite",
          "3.Ders - Kişiler Uygulaması SQLite - 7.Ödev"
        ]
      },
      "requirements": [
        "Temel bilgisayar kullanma becerisine sahip olmak.",
        "Ortalama bir bilgisayara sahip olmak.",
        "Mac OS işletim sistemine sahip bir bilgisayar veya Mac OS işletim sistemini sanal makine ile windows üzerinde çalıştırabilecek bir bilgisayar.",
        "Bilgisayarınıza programlama yapmak için Xcode yüklemek."
      ],
      "description": "Gerçek bir Bootcamp deneyimi yaşamaya hazır mısınız?\nYıllardır birçok şirkette düzenlediğimiz son derece verim aldığımız Bootcamp Programını bire bir aynı şekilde Udemy Eğitimi olarak sizlere sunuyoruz.\nBahsettiğimiz şirket eğitimlerine Udemy profilimizden veya sosyal medya hesaplarımızdan erişebilirsiniz.\nŞirketlerde düzenlediğimiz Bootcampler ile öğrencilerimiz çok iyi yerlere geldiler.\nSiz de bu harika Bootcamp programımız ile Gerçek Bootcamp deneyimi yaşayarak çok iyi yerlere gelebilirsiniz.\nÖzenle seçilmiş ders müfredatı ile pratik, hızlı ve verimli şekilde sonuç alacaksınız.\nGerçek Bootcamp deneyiminin verimini arttırmak için aşağıdaki yöntemleri eğitim boyunca kullanıcaz.\nKişiye özel çalışma programı oluşturabileceksiniz.\n7 adet Ödev yapacaksınız.\n1 adet Medium Yazısı yazacaksınız.\n1 adet Bitirme Projesi yapacaksınız.\nDers tekrarı veya ders sırasında not alabilmek için kitap niteliğinde detaylı ders içi slaytlara sahip olacaksınız.\nBootcamp ile ilgili daha fazla detaylı bilgi almak için ilk ders videomuzu izleyebilirsiniz , videomuz herkese açıktır.\nSorularınız olursa çekinmeyin lütfen , bize her zaman ulaşabilirsiniz.\nProgramlama Öğrenmek Neden Önemli ?\nHer geçen gün yazılım hayatımızın en derinine kadar iniyor.Hayatımızı kolaylaştırırken yazılımcılara büyük bir iş alanı açılıyor. Çok geç olmadan bu dijital çağa ayak uydurmalı ve yazılım sektöründe yer almalısınız.Bu dijitalleşen çağda ortalama bir bilgisayar ile kendinize yeni bir iş fırsatı yaratabilirsiniz. Özellikle mobil uygulama geliştirme sayesinde tek başınıza istediğiniz her yerden projeler geliştirebilirsiniz. Hangi meslek ve eğitimden olduğunuz yazılımcı olmak için önemsizdir. Her yaşta bu beceriyi kazanabilirsiniz.\nBir eğitimci olarak hazırladığım eğitim müfredatı ile profesyonel seviyeye gelmek sizin elinizde.Tek yapmanız gereken zamanızı ayırarak geleceğinizi değiştirecek yazılım becerisini kazanmak için çabalamak.\nGelin birlikte bu yola çıkalım ve size değer katalım.\n\n\nBaşarılar dilerim.\n\n\nEğitimi incelediğiniz için teşekkürler…",
      "target_audience": [
        "Hangi meslekten olduğunuzun veya Hangi eğitimi aldığınızın yazılımcı olmak için önemi yoktur.",
        "Programlamaya ve teknolojiye ilginizin olması yeterlidir.",
        "Her yaşta bu beceriyi kazanabilirsiniz."
      ]
    },
    {
      "title": "Développer pour iOS 11 avec Swift 4",
      "url": "https://www.udemy.com/course/cours-complet-ios-11-swift-4-francais/",
      "bio": "Apprenez le développement iOS avec iOS 11 et Swift 4, de la base au sommet !",
      "objectives": [
        "Créer des applications pour iOS 11 avec Swift 4",
        "Savoir utiliser les nouveautés d'iOS 11",
        "Maitriser Swift 4",
        "Utiliser des fonctions clés d'iOS comme la géolocalisation, la persistance de données avec Core Data, et bien d'autres !"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Xcode et les outils de développement": [
          "Télécharger Xcode",
          "Création d'un projet Xcode",
          "L'interface de Xcode",
          "Swift Playgrounds sur iPad"
        ],
        "Les bases du développement iOS": [
          "La structure d'une app iOS",
          "Ajouter des composants graphiques",
          "Correction : Ajouter des composants graphiques",
          "Écrire du code",
          "Lier code et interface graphique",
          "Correction : Lier code et interface graphique"
        ],
        "Découverte de Swift 4": [
          "Introduction",
          "Les variables et les types de bases",
          "Travailler avec les variables",
          "Les collections : Introduction et tableaux",
          "Les collections : Dictionnaires",
          "Conditions : If",
          "Exercice : Écran de login",
          "Conditions : guard",
          "Boucles : While",
          "Boucles : For",
          "Les intervalles",
          "Les fonctions",
          "Programmation orientée objet : Classes",
          "Exercice fil rouge : Introduction et première classes",
          "Les optionnels",
          "Programmation orientée objet : Héritage",
          "Organisation : MVC",
          "Conclusion : du playground à l'application"
        ],
        "Construire son interface graphique": [
          "Construire son interface graphique : Introduction",
          "Construire son interface avec un storyboard",
          "Adaptabilité : AutoLayout",
          "Exercice fil rouge : Création du formulaire et utilisation d'Autolayout",
          "Utiliser un UITableView",
          "Exercice fil rouge : Ajout du modèle et de la liste",
          "Passer des données d'un écran à l'autre",
          "Exercice fil rouge : Afficher une note",
          "Les ViewControllers conteneurs",
          "Exercice fil rouge : Ajout de la navigation",
          "UITableView : cellules personnalisées",
          "Exercice fil rouge : Cellules personnalisées",
          "Gestion des images"
        ],
        "Swift intermédiaire": [
          "Swift intermédiaire : Introduction",
          "Archiver un objet : Codable",
          "Lire et écrire sur le disque",
          "Exercice fil rouge : Enregistrer les notes",
          "Réagir aux changements : NotificationCenter",
          "Ajouter des fonctionnalité à du code existant : les extensions",
          "Respecter un contrat : Les protocoles"
        ]
      },
      "requirements": [
        "Ce cours commencera à la base, vous n'avez pas forcément besoin de connaissances préalables, il vous suffit d'être motivé !",
        "Un Mac, avec macOS Sierra ou High Sierra"
      ],
      "description": "Bienvenue sur ce cours de développement iOS 11 avec Swift 4 ! Ce cours, basé sur des années de formations en face à face, vous apprendra le langage Swift et le développement iOS, dans leurs versions les plus modernes !\nNous commencerons par la base de Swift et du développement iOS, avant d'aborder les notions les plus avancées qui feront de vous un développeur confirmé, en construisant des applications des plus simples comme un calculateur de pourboires ou une app de notes, et en allant crescendo vers des apps qui utiliseront de la géolocalisation, des webservices, et les nouveautés d'iOS 11 comme CoreML, ARKit, le drag-and-drop, etc. Les bonnes pratiques de développement seront également abordées, tout comme l'usage de git pour le suivi de version de son code.\nCe cours est actuellement une préversion, tout comme iOS 11 et Swift 4, afin que vous puissiez déjà commencer à découvrir Swift et iOS et à vous familiariser avec ces technologies. De nouvelles sessions seront rajoutées chaque semaine afin de le compléter, au fur et à mesure de la stabilisation de Xcode et des nouvelles fonctions, jusqu'à la sortie finale d'iOS 11.",
      "target_audience": [
        "Débutants qui souhaitent acquérir les bases solides pour développer des applications iOS"
      ]
    },
    {
      "title": "Learning Java Bit By Bit In Arabic",
      "url": "https://www.udemy.com/course/java-4-android/",
      "bio": "هذه الدورة هي مرجع عملي متكامل لبناء تطبيقات إحترافية بلغة الجافا ولا تطلب أي خبرة برمجية مسبقة على الإطلاق",
      "objectives": [
        "Understanding the concept of Java Standard Edition مقدمة عن لغة الجافا",
        "Understanding the basic programming concept شرح المفاهيم الأساسية للبرمجة بلغة الجافا",
        "Develop a Java applications based on OOP بالتطبيق العملى OOP شرح عملى لمبدأ",
        "Handling exceptions to avoid application crash معالجة الأخطاء البرمجية لتجنب تعطل التطبيق",
        "Getting started with GUI applications كيفية برمجة الواجهات الرسومية",
        "Handling user interactions on the GUI شرح تفاعلات المستخدم على الواجهات الرسومية"
      ],
      "course_content": {},
      "requirements": [
        "لا حاجة إلى خبرة في البرمجة ، ستتعلم كل ما تحتاج إلى معرفته"
      ],
      "description": "هذه الدورة هي خلاصة خبرة أكثر من 20 عاما في البرمجة بلغة الجافا. الدورة عبارة عن تدريب عملي لتصميم وبناء وبرمجة التطبيقات بطريقة إحترافية مبسطة وشيقة بإستخدام لغة الجافا. الدورة لا تحتاج أي خبرات مسبقة بالبرمجة لأنني ابدأ معك من الصفر خطوة بخطوة.\nالدورة عبارة عن 48 محاضرة  في حوالي 12 ساعة مع مقاطع فيديو عالية الجودة وتحميل جميع الأكواد المكتوبة خلال الشرح لتكون مرجعا لك وتساعدك على التطبيق العملى لما يتم شرحه.\nالدورة مقسمة إلى 12 فصل يتم من خلالهم شرح جميع المكونات الرئيسية للغة الجافا بطريقة عملية ومبسطة والتى تؤهلك الى سوق العمل وايضا تكون نواة لتطبيقات أخرى تعتمد على لغة الجافا في الاساس مثل تطبيقات الهواتف الذكية ( الأندرويد ) وأيضا تطبيقات الويب المعتمدة على تفهم لغة الجافا.\nلكى تجنى أكبر تحصيل من الدورة يجب عليك الإستماع الجيد للشرح وأيضا التطبيق العملى لكل الامثلة المشروحة وأيضا حل التمارين البرمجية المطلوبة بنهاية كل فصل.\nالدورة يتم تحديثها بإستمرار لتواكب جميع التحديثات التى تطرأ على المحتوى وايضا إضافة محتويات جديدة مما يجعلها مرجعا لك تستطيع الرجوع اليها في اى وقت مدى الحياة. أيضا يمكنك مراسلتي عن طريق الموقع في أي وقت وإن شاء الله سإقوم بالرد عليك في أسرع وقت.\nبنهاية الدورة ، سيقوم كل متدرب ببناء تطبيق عملى إحترافى متكامل خطوة بخطوة والذي يتضمن معظم الجوانب الرئيسية التي يتم شرحها فى الدورة.\nالدورة مقيمة الحمد لله بنسبة رضاء تقارب ال100% وهذا يجعلك تثق في المحتوى والمجهود المقدمين في هذه الدورة الإحترافية  فلا تنسى تقييم الدورة\nبالتوفيق للجميع",
      "target_audience": [
        "هذه الدورة مخصصة للمبتدئين الذين ليس لهم أي خبرة مسبقة بالبرمجة"
      ]
    },
    {
      "title": "Android開發全攻略",
      "url": "https://www.udemy.com/course/android-dev-wilson/",
      "bio": "從基礎到進階：超過45小時的全面Android開發課程！十三種軟體設計模式、Kotlin語法、四個實作專案（繪圖軟體、重力五子棋遊戲、圖片搜尋App和圖書館系統），逐步開發App的基礎架構和進階實作，手把手帶你學習安卓應用程式開發！",
      "objectives": [
        "了解並繪製UML Class Diagram",
        "了解SOLID開發原則，創建明確及有效地設計程式架構",
        "學習使用13種常用的軟體設計模式，包含觀察者模式、組合模式、工廠模式、策略模式、單例模式等等",
        "在專案中實際使用設計模式，使程式架構更容易維護且易於擴展",
        "使用Android Studio開發應用程式",
        "透過設計模式解決物件導向中的耦合問題",
        "以Kotlin語法，撰寫Android平台的應用程式",
        "學習使用Kotlin的Primary Constructor, Secondary Constructor, lateinit modifier等語法規則",
        "了解並使用Android中的Context物件與Resources物件",
        "使用Android中的Handler Class, Looper與MessageQueue",
        "深入瞭解Activity Life Cycler概念",
        "使用RecyclerView來顯示和管理列表資料",
        "在應用程式中加入第三方App社群分享功能（社群媒體分享、郵件分享等）",
        "設定應用程式的使用者許可，包含網路許可、錄音許可",
        "在應用程式中使用多執行緒處理任務(Multi-threading Programming)，來提升應用程式的效能",
        "使用最新Android SDK語法，實作使用者設置和偏好設定功能",
        "製作能夠雙人遊玩或與電腦AI對決的遊戲應用程式",
        "製作具有聲音辨識功能的App",
        "了解二次貝茲曲線在電腦繪圖上的應用",
        "在Android當中，實作Floodfill演算法",
        "使用網絡API進行HTTP請求的傳遞與JSON資料的獲取，並且將資料顯示在應用程式中",
        "透過SQLite與Android Room Library儲存和讀取資料到本地資料庫"
      ],
      "course_content": {
        "Chapter 0 - 課程架構": [
          "課程架構",
          "如何最好的使用這堂課？",
          "課程預備工具與知識, Notion",
          "複習 - 物件導向程式設計",
          "複習 – 多執行緒程式設計",
          "(額外補充) Heap and Stack 1",
          "UML Class Diagram",
          "Course Resource: All of them"
        ],
        "Chapter 1 - Design Pattern": [
          "設計模式 Design Pattern",
          "Design Pattern的基本原則 Part 1",
          "Design Pattern的基本原則 Part 2",
          "Strategy Pattern",
          "Observer Pattern",
          "補充資訊",
          "Decorator Pattern",
          "Factory Pattern",
          "Singleton Pattern",
          "Command Pattern",
          "Adapter Pattern",
          "Façade Pattern",
          "Template Pattern",
          "State Pattern",
          "State Pattern 例子補充",
          "Proxy Pattern",
          "Builder Pattern",
          "Builder Pattern補充例子",
          "Composite Pattern"
        ],
        "Chapter 2 - Kotlin語法": [
          "Kotlin",
          "Kotlin運作模式",
          "變數宣告",
          "Integer, Float, and Double",
          "Char, Boolean, Null, Nullable, Safe call operator",
          "Operators",
          "if statement, when statement",
          "Kotlin Functions",
          "For loop and While Loop",
          "Array and ArrayList",
          "Primary Constructor",
          "Secondary Constructor",
          "Code block After secondary constructor",
          "companion object and lateinit",
          "Inheritance, interface, abstract class",
          "Lambda Expression and it keyword"
        ],
        "Chapter 3 - Android 開發第一部分": [
          "所有程式碼的位置",
          "Android 作業系統",
          "Quick Note",
          "Android Studio安裝",
          "(額外補充) 錯誤處理方法",
          "Android SDK, Emulator, ART",
          "Package 命名規則",
          "Activity and View",
          "Context物件",
          "Resource 物件",
          "Project Structure",
          "Quick Note",
          "第一個View",
          "等比例縮放設計",
          "設定圖片",
          "創建等比例縮放圖片",
          "事件聆聽功能",
          "Toast使用方法",
          "Handler Class使用方法",
          "確認Thread名稱",
          "Main Thread Looper",
          "時間段重新繪製畫面與Observer Pattern應用",
          "解決Concurrent Modification Error",
          "Alert Dialog and Object Expression",
          "Comparable, Comparator Interface",
          "Activity Life Cycle",
          "在應用程式中第二個Activity",
          "Intent Object and Intent Filters",
          "Intent Object 使用",
          "其他規則",
          "Final Code"
        ],
        "Chapter 4 - Android開發 第二部分": [
          "View and ViewGroup",
          "XML編寫",
          "XML與intent練習",
          "Styles and Themes",
          "RecyclerView and Adapter Part 1",
          "RecyclerView and Adapter Part 2",
          "傳送文字練習",
          "Activity Stack",
          "Multi-Threading Programming",
          "優化天鵝遊戲架構",
          "處理遊戲無法正常結束的問題",
          "Worker Thread 第一部分",
          "Worker Thread第二部分",
          "Externalize Strings以及i18n",
          "應用程式icon設定與製作",
          "Quick Note",
          "savedInstanceState 第一部分",
          "savedInstanceState 第二部分",
          "Quick Note - 何時該使用 savedInstanceState?",
          "Preference Screen第一部分",
          "Preference Screen第二部分",
          "ListPreference設定",
          "Publish App到Google Play商店",
          "Final Code"
        ],
        "Project 1 - Sliding Game": [
          "資源包下載",
          "Project介紹與Grid繪製",
          "Button設定與製作",
          "按鈕圖片轉換",
          "Token製作與移動",
          "Observer Pattern設計",
          "移動所有token",
          "Falling Token設計與邏輯",
          "遊戲機制與背景邏輯",
          "遊戲結束機制",
          "前端重新啟動遊戲邏輯",
          "問題處理",
          "單人遊戲設計",
          "AI演算法設定",
          "Splash Activity設定",
          "背景與音樂設定",
          "偏好設置與i18n設定",
          "companion object refactor",
          "Final Code"
        ],
        "Project 2 - Drawing by Sound App": [
          "應用程式的規則詳細說明 下載點",
          "Project介紹與外觀製作",
          "PaintView基本設定",
          "繪製線段功能",
          "Quick Fix",
          "二次貝茲曲線演算法",
          "清除畫面功能製作",
          "Floodfill演算法示範",
          "改變模式與畫筆顏色",
          "新增橡皮擦功能",
          "請求錄音權限",
          "製作聲音辨識功能",
          "處理聲音指令",
          "Race Condition處理與儲存圖片",
          "i18n與icon設定",
          "Final Code"
        ],
        "Project 3 - Pexels API Application": [
          "Project介紹與外觀設定",
          "寄送HTTP Request",
          "從網路下載圖片",
          "RecyclerView設定",
          "自動加載更多圖片",
          "補充說明：Concurrent Modification發生原因",
          "搜尋圖片",
          "圖片單獨畫面製作",
          "Final Code"
        ],
        "Project 4 - Room Database與圖書館服務": [
          "Room資料庫簡介",
          "Room資料庫練習",
          "圖書館資料庫設定",
          "頁面外觀設定",
          "註冊新書功能",
          "註冊新使用者",
          "借書功能製作",
          "還書功能與查詢功能製作",
          "Final Code"
        ],
        "恭喜完成課程內容！！": [
          "額外補充 - minSdkVersion, targetSdkVersion, compileSdkVersion",
          "Bonus Lecture"
        ]
      },
      "requirements": [
        "需要對Java程式語言與語法有基本認識，至少需知道Class、迴圈、物件導向等三個概念",
        "能夠上網的電腦",
        "對製作Android應用程式有興趣！！"
      ],
      "description": "歡迎來到Android開發全攻略課程！這個課程將帶領您進入Android開發的精彩世界，從設計模式到Kotlin語法，再到使用Android Studio建立四個實用的Android應用程式，一步步從基礎架構到進階實作，深入理解Android開發的精髓。\n本課程的首要目標是讓你掌握Android開發的核心概念與實踐。首先，我們將深入研究設計模式，這些模式能夠幫助您建立可維護且具有彈性的應用程式架構。你將學習常見的設計模式，如組合模式(Composite Pattern)、單例模式(Singleton Pattern)、觀察者模式 (Observer Pattern)、工廠模式(Factory Pattern)、策略模式(Strategy Pattern)、模板模式(Template Pattern)等，並了解如何在Android開發中運用它們。\n此外，我們會一起Kotlin語言的基礎知識和特性。Kotlin是一種現代化、靈活且功能強大的語言，已經成為Android開發的首選語言。您將學習Kotlin的語法、特性和最佳實踐，並將其應用於Android應用程式的開發中。你將學會如何使用Kotlin來簡化開發流程、提高代碼的可讀性和減少錯誤。\n在Android應用開發的核心部分，我們將探索Android Studio這個功能強大的開發環境。你將學習如何設置Android開發環境、建立新的項目和管理程式碼。我們將深入研究Android的核心組件，如活動（Activity）、View與ViewGroup和佈局（Layout），並學習如何通過它們來構建UI介面和處理用戶事件。\n\n\n當我們掌握了設計模式和Kotlin語法後，將進入四個實用的Android應用程式專案。這些專案將涵蓋不同領域，包含繪圖軟體、重力五子棋遊戲、圖片搜尋App與圖書館資料庫管理：\n重力五子棋遊戲包含單人模式可與AI對戰，以及雙人遊玩模式。\n繪圖軟體提供聲音控制介面，可接收人類語言指令，並且根據指令自動操作。此外，繪圖軟體也提供顏色變換、橡皮擦模式、畫筆模式與填充模式等功能，並且使用者能夠儲存作品。\n圖片搜尋App連結網路API，將即時資料呈現給使用者。利用網絡API來獲取和顯示圖片。你將學習如何使用HTTP請求、解析JSON數據和展示圖片結果。\n圖書館資料庫管理提供借還書功能，並將數據儲存入資料庫內。\n透過這些實作專案，你將運用所學的知識，並實際體驗開發一個完整的Android應用程式的過程。請準備好動手實踐，一起來體驗創造令人興奮的Android應用程式的樂趣吧！！",
      "target_audience": [
        "對Android應用程式開發有興趣，但沒有經驗的人",
        "想要轉職成為Android軟體工程師的人",
        "已經了解Java語言，希望實際應用的人",
        "大學資工系、資管系主修或副修學生",
        "對於資訊科技有興趣，想要開始動手寫程式者"
      ]
    },
    {
      "title": "【6日で速習】iOS 13アプリ開発入門決定版 20個のアプリを作って学ぼう（Xcode 11, Swift 5対応中）",
      "url": "https://www.udemy.com/course/ios11basics/",
      "bio": "地図表示, カメラ投稿, 日出時刻検索, ARアプリ, AIアプリなど実用アプリを20個以上作って学びます。CoreNFCなどiOS 13新機能も順次収録・追加中。Xcode 11, Swift 5を初心者が基礎から学べます。",
      "objectives": [
        "Xcode 11 を使用してiOS 13用アプリを開発できるようになります。",
        "実機でビルドしたアプリを確認できるようになります。",
        "CoreMLでAIアプリを作れます。",
        "ARKitの基本を実機で体験できます。",
        "地図を表示するアプリを作れるようになります。",
        "カメラで撮った写真を表示するアプリを作れるようになります。",
        "Web APIを使用した天気情報検索アプリが作れます。",
        "iOS 13の新機能を理解することができます。",
        "Swift 5の基本を理解できます。"
      ],
      "course_content": {
        "１日目：イントロと環境構築": [
          "このコースの概要",
          "macOS 10.15へのアップグレード",
          "Xcode 11のインストール",
          "PlaygroundではじめてのSwiftプログラムを書いてみよう",
          "Swiftプログラミングの基本ルール",
          "変数でデータを扱う",
          "変更したくないデータは定数で扱おう",
          "繰り返し処理はfor文で"
        ],
        "2日目（Xcode 11）：はじめてのアプリ作成とビルド（Xcode 11）": [
          "はじめてのアプリをビルドしてみよう",
          "実機でビルドしてみよう"
        ],
        "3日目：　カメラアプリを作ろう（#3）": [
          "カメラアプリのプロジェクトを追加しよう",
          "UIパーツを追加しよう",
          "レイアウトを調整しよう",
          "ボタンの色を設定しよう",
          "UIパーツとプログラムの関連付けをしよう",
          "カメラの起動確認設定を追加しよう",
          "Delegateを追加しよう",
          "写真を表示するコードを追加しよう",
          "シェア機能を追加しよう",
          "実機で動かしてみよう"
        ],
        "5日目：　日の出時刻検索アプリを作ろう（#5）Yahoo! Weather APIの仕様変更により差替予定": [
          "このセクションで作るアプリの概要",
          "画面レイアウトを作ろう",
          "IBOutletやIBActionを設定しよう",
          "Web APIの仕組みを理解しよう",
          "HTTPリクエストを生成しよう",
          "JSONデータを取得するコードを書こう",
          "外部通信を許可してJSONデータを取得しよう",
          "JSONデータをパースして日の出時刻を表示しよう",
          "AutoLayoutの設定をしよう",
          "Safe Area Layout Guideに対応しよう",
          "実機で動作を確認しよう",
          "日の出検索アプリのソースコード"
        ],
        "6日目：　ARKitにチャレンジしよう": [
          "ARとは？",
          "はじめてのARアプリ（#6）",
          "シーンとノードとオブジェクトの関係",
          "ボックスを3次元空間に配置してみよう（#7）",
          "ソースコード",
          "テキストラベルを3次元空間に配置してみよう（#8）",
          "ソースコード",
          "複数のオブジェクトを配置しよう（#9）",
          "オブジェクトにテキスチャーを貼ってみよう（#10）",
          "テキスチャーファイルのダウンロード方法",
          "ソースコード",
          "オブジェクトにタッチして色を変えよう（#11）",
          "ソースコード",
          "ARKitと平面の検知（Plane Detection）",
          "平面（プレーン）を検知してみよう（#12）",
          "ソースコード",
          "平面を検知したらラベルを表示する（1/2）#13",
          "平面を検知したらラベルを表示する（2/2）",
          "ソースコード",
          "検知した平面にグリッドを表示しよう（プレビュー）",
          "グリッド平面を追加するコードを追加しよう",
          "Delegateとrendererの関係を整理しておこう",
          "グリッド平面を生成するクラスを定義しよう（1/2）(#14）",
          "グリッド平面を生成するクラスを定義しよう（2/2）",
          "ソースコード（GridOverlay）"
        ],
        "ボーナス1：　CoreMLでAIアプリを作ろう": [
          "AIアプリのプレビュー",
          "CoreMLとは？",
          "学習済みモデルをダウンロードしよう",
          "用語の整理（機械学習とモデル）",
          "プロジェクトを追加して画面を作成しよう",
          "カメラで撮影した写真を表示してみよう",
          "AIで識別を実行しよう",
          "CoreML/Visionフレームワークによる識別処理のフロー",
          "異なるAIモデルで推定してみよう（Inception V3）（#16）",
          "ImageAIのソースコード",
          "Text-to-Speechで結果を読み上げさせてみよう（#17）",
          "ソースコード",
          "機械学習・AIをもっと学びたい方のためのコース紹介"
        ],
        "ボーナス2 ： CoreNFCで無線タグを読んでみよう！": [
          "このセクションで作成するアプリ（#18）",
          "プロジェクトを追加して画面を作成しよう",
          "デリゲートを追加して、読み取りセッションを開始しよう",
          "読み出したデータを表示してみよう",
          "CoreNFCアプリのソースコード"
        ],
        "ボーナスセクション": [
          "関連性のあるコース紹介",
          "アプリの署名のエラーを解決しよう"
        ]
      },
      "requirements": [
        "最新のmacOSが動作するMac",
        "Apple ID（無料で作成可能）",
        "Xcode 11（無料で入手・インストール可能）",
        "インターネット接続（Xcodeのダウンロードに必要です）",
        "iOS 13（無料で入手・インストール可能）コース内で解説します。",
        "初歩的なMacの操作（不安な場合はMacの入門書があると確実です）",
        "iPhone 6S以降のiPhone（カメラとARアプリを実行したい場合は実機が必要です）",
        "NFCタグ(CoreNFCアプリを動作させたい場合), NFC対応のAndroid端末またはライター"
      ],
      "description": "＊2019/11/11 検索できる地図アプリをXcode 11対応し、Xcode 9で作成したビデオはアーカイブセクションに移動しました。\n＊2019/11/04 Xcode 11.2, Swift 5.1, iOS 13.2対応を開始しました。\n＊2017/8/8 CoreNFCアプリのセクションにレクチャーとソースコードを掲載しました。\n＊2017/8/2 音声合成で画像識別結果を読み上げるアプリを追加しました。AVFoundationで音声合成をします。\n＊2017/7/28 人工知能（CoreML）を使用した画像識別AIアプリ開発のセクションを追加しました。\n＊2017/7/27 Xcode 9 beta 4, iOS 11 beta 4のインストール手順, ARKitのセクションを追加しました。\n\n\nこのコースでは、Udemyでのべ2万人以上にプログラミングを教える現役ITエンジニア・ベテラン講師が、iOS 13 / Xcode 11でのiPhone/iPadアプリ開発方法を初心者にわかりやすく解説します。\n以下のような実践的な20個以上のアプリ開発を通じて、画面レイアウトや画面遷移、処理の実装手順、オートレイアウト設定などアプリ開発に必須の知識を学んでいきます。\nまた、ARKitやCoreMLなど 注目の新機能について詳しく取り上げます。それぞれ、より深く学ぶためのコースと連携していきます。CoreMLではTensorFlowやScikit-learnで作成した学習モデル（AI）をiOSアプリに取り込めます。また、コンピュータービジョンや自然言語処理などのライブラリも搭載されます。\n【コースの概要】\n第１日：　環境構築（Xcode 11対応済）\n第２日：　はじめてのアプリ作成（マップ表示）（Xcode 11対応済）\n検索機能付きマップアプリ（Xcode 11対応済）\n第３日：　カメラアプリ\n第４日：　日の出時刻検索アプリ\n第５日：　ARKitを使用したARアプリ（実写とCGをリアルタイム合成）\n・3次元空間にオブジェクトを配置\n・オブジェクトにテクスチャを貼り付けよう\n・オブジェクトをタッチしたら色を変えよう\n・平面を検知しよう（Plane Detection）\n・平面にオブジェクトを配置しよう\n\n\n【ボーナスセクション】\n（１）CoreML（機械学習）学習済みモデルを使用したAIアプリ\niPhone/iPadのカメラで撮った画像の識別を実行するアプリを作ります。\nResNet 50, Inception v3による推定\nText-to-Speechによる推定結果の音声による読み上げ（AVFoundationを使用）\n（２）CoreNFC（無線タグを読む）アプリ　（追加中)\n無線タグを読み取って、データを画面に表示します。\niOS 13の正式リリースに対応し、Xcode 11で最新機能を活用したアプリをリリースできるようになりましょう！\n\n毎日学習すれば1週間で終えられますが、時間に余裕がない方は1週間に１プロジェクトずつじっくり取り組んでもOKです。\n不明な点はコース内のQ&Aフォーラムでサポートしますので、独学ではなく安心して学べます。\nぜひ一緒に楽しく学んでiPhoneアプリを作りましょう！",
      "target_audience": [
        "iPhone・iPadで動作するiOS 13アプリを作成したい方",
        "実用的アプリを作りながらスマホアプリ開発方法を学びたい方",
        "iOS 13の新機能を学びたい方",
        "Swift 5の基礎を学びたい方",
        "Xcode 11の使い方や、固有の注意点を学びたい方",
        "AR（Augmented Reality）を使ったアプリを作ってみたい方"
      ]
    },
    {
      "title": "Learn How To Create React Native Application & WordPress Api",
      "url": "https://www.udemy.com/course/create-react-native-app-wordpress-api-from-scratch/",
      "bio": "تعلم كيف تنشئ تطبيق React native و WordPress API من البداية حتي النهاية بالعربي",
      "objectives": [
        "Create greate mobile apps for android and IOS",
        "Learn React Native",
        "Learn How To Create And Deal With WordPress API"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "React Native Basics": [
          "Create and run your first application",
          "Code structure",
          "Change app icons",
          "React native State",
          "How to make a componant and reuse it",
          "StyleSheet"
        ],
        "Go Deeper With Dependencies": [
          "Intro About React Native Dependencies",
          "Introduction to Nativebase - Make great look componants",
          "How To Handle An Error And Solve it In React-Native",
          "Icons In React-Native, How to Use It & Customizing App Header",
          "A little More Deeper With Nativebase.",
          "Intoduction to Navigation",
          "React Native Router Flux",
          "A little more about Navigation",
          "React Navigation V3"
        ],
        "Networking - Loading data from an online API": [
          "Fetch & Networking"
        ]
      },
      "requirements": [
        "JavaScript",
        "HTML",
        "CSS"
      ],
      "description": "تعلم كيف تنشئ تطبيق React native و WordPress API من البداية حتي النهاية بالعربي\n- ماذا ستتعلم في هذا الكورس:\nانشاء تطبيق React native for IOS and Android.\nانشاء مدونة WordPress واستخدامة في التطبيق كـ API.\nReact native UI design. (NativeBase)\nReact native HTTP requests.\nReact native Navigation. (React native router flux)\nReact native dependencies.\n\n\n- هذا الكورس يتطلب معرفة جيدة بـ:\nJavaScript (Traditional and ES6)\nHTML\nCSS",
      "target_audience": [
        "Any developer who has basics of any programing language."
      ]
    },
    {
      "title": "Flutter: App Delivery con NodeJS, SQL y Pasarelas de pago",
      "url": "https://www.udemy.com/course/flutter-app-delivery-con-nodejs-sql-y-pasarelas-de-pago/",
      "bio": "Pasarelas de pagos, REST API, Sockets, PostgreSQL, Camara, Mapas, CRUD, JWT, Almacenamiento en la nube, IOS y Android",
      "objectives": [
        "Intregracion de App con NodeJs",
        "Login y registro de usuarios con JSON WEB TOKENS",
        "Manejo de datos en tiempo real con SOCKET IO",
        "Notificaciones Push con Firebase Cloud Messaging",
        "Guardar imagenes en la nube",
        "Integracion con Google Maps API",
        "Trazar rutas entre un punto A y B (origen y destino) utlizando Google Directions API",
        "Integracion de app con WAZE Y GOOGLE MAPS para navegacion",
        "Peticiones HTTP desde aplicación IOS y Android",
        "API REST CON NODEJS",
        "Colocar Marcadores en Google Maps",
        "CRUD NodeJS",
        "Consultas SQL simples y complejas",
        "PATRON MVC (MODELO VISTA CONTROLADOR)",
        "Procesamiento de pagos con Mercado Pago",
        "Procesamiento de pagos con Stripe"
      ],
      "course_content": {
        "Instalaciones en Windows": [
          "Instalacion de Flutter en Windows",
          "Instalacion de Android Studio",
          "Creando proyecto Flutter",
          "Correr La Aplicacion en un emulador o dispositivo Fisico Android",
          "Instalacion de Visual Studio Code",
          "Instalacion de PostgreSQL",
          "Instalacion de Postman",
          "Instalacion de NodeJs"
        ],
        "Instalaciones en Mac": [
          "Requisitos para tomar esta seccion",
          "Instalando Flutter en MacOSX",
          "Instalacion de Android Studio en MacOSX",
          "Correr la aplicacion en emulador IOS",
          "Probar aplicacion en Iphone o IPAD",
          "Instalacion de Visual Studio Code en MacOSX",
          "Instalacion de PostgreSQL en MacOSX",
          "Instalacion de NodeJS en MacOSX",
          "Instalacion de Postman en MacOSX"
        ],
        "Primero diseños en Flutter": [
          "Configuracion del archivo main.dart",
          "Explicacion de etiquetas basicas de Flutter",
          "Establecer el color por defecto para nuestra aplicacion",
          "Diseño de la pantalla de login (parte 1)",
          "Diseño de la pantalla de login (parte 2)",
          "Diseño de la pantalla de login (parte 3)",
          "Diseño de la pantalla de login (parte 4)"
        ],
        "Interaccion con Widgets, Animaciones y Fuentes externas": [
          "Agregar animaciones en Flutter",
          "Tipos de fuentes personalizadas",
          "Navegar de una pantalla a otra",
          "Diseño de la pantalla de registro",
          "Interactuar con los Widgets"
        ],
        "Configurando Backend de nuestra aplicacion": [
          "Crear servidor en NodeJS",
          "Probando rutas del servidor"
        ],
        "Conexion del backend con la Base de datos SQL": [
          "Diagrama entidad relacion y creacion de nuestra primera tabla",
          "Conectarse a base de datos Postgres desde NodeJS"
        ],
        "Creando el Api REST del proyecto": [
          "Creando nuestra API REST en NodeJS",
          "Creando un nuevo usuario en la base de datos desde NodeJS",
          "Enviando peticion POST desde Flutter"
        ],
        "Validaciones en NodeJs y Json Web Tokens": [
          "Encriptar password al registrar nuevo usuario",
          "Validaciones para el formulario de registro",
          "Json Web Token (JWT)"
        ],
        "Autenticacion de usuario Backend y Frontend": [
          "Login desde aplicacion Flutter",
          "Shared Preferences",
          "Cerrar sesion"
        ],
        "Roles de usuario": [
          "Creando tabla de Roles",
          "Creando los tres tipos de roles en la base de datos",
          "Agregar al usuario registrado un ROL por defecto",
          "Obtener cuales son los roles de un usuario",
          "Obtener los roles del usuario en la app Flutter",
          "Listar roles del usuario en flutter"
        ]
      },
      "requirements": [
        "Javascript Basico",
        "Programacion orientada a objetos",
        "SQL Basico (no obligatorio)"
      ],
      "description": "Desarrollo multiplataforma para IOS y Android\n\n\nEn este curso te voy a enseñar como crear una aplicación DELIVERY utilizando Google Flutter y NodeJS.\nAlgunos de los temas que veras a lo largo del curso serán los siguientes:\nIntegrar una aplicación con NodeJS (Backend).\nCrear tablas en la base de datos\nHacer consultas simples y complejas en SQL\nManejo de datos en tiempo real utilizando SOCKET IO\nAutenticación de usuarios con JSON WEB TOKENS\nMapas de Google\nNotificaciones Push (Multiusuario y usuario a usuario)\nTrazar rutas en el mapa desde un punto A hasta B\nColocar marcadores personalizados\nIntegrar Firebase Storage para almacenar imagenes en la nube\nRelación de datos en bases de datos SQL\nNavegación con GPS\nGeolocalización\nPeticiones HTTP\nMercado pago\nStripe\nAndroid Studio\nVisual Studio Code\nPostman\nPgAdmin\ny mucho mas\nEspero que te suscribas a mi curso y poderte brindar todo mi conocimiento sobre este interesante mundo del desarrollo móvil multiplataforma\n\n\nFlutter:\nes un framework de código abierto desarrollado por Google para crear aplicaciones nativas de forma fácil, rápida y sencilla. Su principal ventaja radica en que genera código 100% nativo para cada plataforma, con lo que el rendimiento y la UX es totalmente idéntico a las aplicaciones nativas tradicionales.\nNodeJs:\nIdeado como un entorno de ejecución de JavaScript orientado a eventos asíncronos, Node.js está diseñado para crear aplicaciones network escalables. En el siguiente ejemplo de \"hola mundo\", pueden atenderse muchas conexiones simultáneamente. Por cada conexión, se activa la devolución de llamada o callback, pero si no hay trabajo que hacer, Node.js se dormirá.\nPostgreSQL:\nEs un gestor de bases de datos relacional y orientado a objetos. Su licencia y desarrollo es de código abierto, siendo mantenida por una comunidad de desarrolladores, colaboradores y organizaciones comerciales de forma libre y desinteresadamente",
      "target_audience": [
        "Estudiantes de ingenieria de Software",
        "Estudiantes de Ingeniería en Computación",
        "Ingenieros de Sistemas",
        "Ingenieros de Software",
        "Desarrolladores Web, Movil",
        "Programadores",
        "Desarrolladores JAVA",
        "Desarrolladores Kotlin",
        "Desarrolladores SWIFT",
        "Desarrolladores de Apps multiplataforma"
      ]
    },
    {
      "title": "Make Android Apps with ease - NO Coding (Arabic)",
      "url": "https://www.udemy.com/course/easyandroid/",
      "bio": "هل تريد ان تعرف كيف يمكنك صنع تطبيقات اندرويد وكسب المال بدون كتابة سطر برمجي, الكثير يعملون هذا والان يمكنك ذلك ايضاً",
      "objectives": [
        "ستكون قادر على عمل تطبيق كامل",
        "ستكون قادر على رفع تطبيقك الى سوق جوجل",
        "بيع خدماتك في مواقع الخدمات المصغرة"
      ],
      "course_content": {
        "المقدمة": [
          "مقدمة عن الدورة"
        ],
        "التعامل مع موقع محرر التطبيقات": [
          "فتح حساب في موقع محرر التطبيقات والتعرف على الامكانيات المتوفرة",
          "تغير الاعدادت الرئيسية وايقونة التطبيق",
          "اضافة تبويب جديد في التطبيق وعمل اختبار مبدئي للتطبيق",
          "اضافة موقع الكتروني الى التطبيق",
          "اضافة تبويب خاص بالتغريدات التويتر في التطبيق",
          "الاعدادات المتقدمة للتطبيق"
        ],
        "التعامل مع خدمات جوجل واضافتها للتطبيق": [
          "عمل حساب google analytics واضافه الخدمة للتطبيق",
          "اضافة الاعلانات للتطبيق وطريقة بدء الربح",
          "طريقة عمل حساب مطور في جوجل ورفع التطبيق الى المتجر",
          "معاينة التطبيق في المتجر ومعرفة كم ربحنا"
        ],
        "تقديم خدماتك في مواقع الاعمال المصغرة": [
          "التعرف على كيفية انشاء حساب في مواقع الاعمال المصغرة والبدء بعرض خدماتك عليها"
        ],
        "نهاية الدورة": [
          "كلمة اخيرة",
          "Bonus Lecture: عرض خاص"
        ]
      },
      "requirements": [
        "ان يكون لديك معرفة بسيطة على الانترنت",
        "معرفة بالتقنيات مثل RSS"
      ],
      "description": "دورة كسب المال عن طريق صنع تطبيقات الاندرويد بدون كتابة سطر برمجي واحد ليس وقع من الخيال, نعم يمكنك عمل ذلك بكل بساطة ويسر\n\nانا متاكد انك قد شاهدت تطبيقات كثير في سوق جوجل للتطبيقات لناس تعرف انهم لايعرفون برمجة ولكن لاتعرف قامو بذلك, وايضاً يمكنك بهذة الدورة من التمكن من عمل تطبيقات وبيعها في مواقع الاعمال المصغرة وربح المال من هناك ايضاً, والكثير الكثير من الخيارات لديك.\nستتعلم في هذة الدورة الاتي:\nالتعرف على تقنية RSS وجلب الاخبار من المواقع بها\nكيفة جلب الاخبار من التويتر\nكيفية اضافة المواقع الالكترونية الى تطبيقاتك\nتخصيص التطبيقات واضافة تبويبات\nعمل حساب في جوجل admob لكسب المال عن طريق الاعلانات\nعمل حساب في جوجل للتحليلات, لعمل تحليلات على تطبيقاتك من جميع النواحي\nعمل حساب في سوق جوجل\nشرح مفصل عن كيفية رفع التطبيقات لسوق جوجل\nالتعرف على كيفية امكانية اضافة خدمة تصميم التطبيقات في مواقع الاعمال المصغرة",
      "target_audience": [
        "من يريد ان يكسب المال عبر عمل التطبيقات",
        "من يريد بيع خدمات تصميم المواقع في مواقع الخدمات المصغرة"
      ]
    },
    {
      "title": "Dart Programming language from zero",
      "url": "https://www.udemy.com/course/dart-programming-language-from-zero_in_arabic/",
      "bio": "zero to hero",
      "objectives": [
        "What is Dart?",
        "Learn Dart from zero, step-by-step",
        "Everything you need in Dart to get started with Flutter",
        "learn OOP Dart",
        "Asynchronous programming",
        "Regex ( regular expression )"
      ],
      "course_content": {
        "Introduction to dart": [
          "Course Content محتوي الكورس بالتفصيل",
          "Getting the most out of the course",
          "Roadmap of Flutter course",
          "Intro To Dart and install dart",
          "Install dart in mac os",
          "VS Code Extension Part 1",
          "VS Code Extension Part 2",
          "Road Map My Course",
          "مشكله الصوت الواطي لو لقيتها موجوده",
          "Add a review for Udemy courses"
        ],
        "Dart Basics": [
          "output ( print ) and concatenation جمل الطباعة",
          "comments ( inline - multiline ) التعليقات",
          "Data Type and Variable name أنواع المتغيرات",
          "Rules to named Variable name قواعد تسمية المتغيرات",
          "dart interpolation",
          "Declare Multiple variable تعريف عددة متغيرات",
          "var and difference between var and dynamic",
          "Type casting تحويل من نوع الي نوع",
          "Arithmetic Operator العمليات الحسابية",
          "Post and Pre ( incerement and Decrement )",
          "Comparison Operators عوامل المقارنة",
          "Logical Operators العوامل المنطقية",
          "Special Character الحروف الخاصة",
          "dart User Input",
          "first mini Example المثال الاول",
          "Uploading my project to GitHub ( git and GitHub )",
          "If statement جمل الشرط",
          "second mini example. المثال الثاني",
          "Nested IF && complete Second Mini Example",
          "Ternary operator ( Short hand if statment )",
          "switch case statement",
          "Edit in Second Mini Example ( convert to switch case statment )",
          "Some methods using dot Operators",
          "what is array ........ ? ماهي المصفوفة",
          "List part1",
          "List part 2",
          "Set Part 1",
          "Set Part 2",
          "Map",
          "loop التكرار",
          "for loop part 1",
          "for loop part 2",
          "for loop part 3",
          "while loop part 1",
          "while loop part 2",
          "do while loop part 1",
          "do while loop part 2",
          "using for loop to print elements of array ( list - Set - Map )",
          "using while loop to print elements of array ( list - Set - Map )",
          "using do while loop to print elements of array ( list - Set - Map )",
          "for each loop",
          "for in loop",
          "2D List",
          "print 2D list element using for loop ( nested for loop )",
          "print 2D list element using while loop ( nested while loop )",
          "print 2D list element using for each loop ( nested for each loop )",
          "print 2D list element using do while loop ( nested do while loop )",
          "print 2D list element using for in loop ( nested for in loop )",
          "const and final",
          "Scope",
          "Null safety and Late"
        ],
        "Functions": [
          "What is Functions ...... ?",
          "non returned function",
          "Returned function part 1",
          "Returned function part 2",
          "Function parameter and arguments part 1",
          "Function parameter and arguments part 2",
          "Function Optional parameters",
          "Function Named parameter part 1",
          "Function Named parameter part 2 ( keyWord required )",
          "Function Named parameter part 3 ( keyWord required )",
          "Recursion",
          "Lambda Expression",
          "Higher Order Functions (HOF)",
          "Anonymous Functions",
          "build in functions ( Min and Max )",
          "build in functions ( List Where Functions ) part 1",
          "build in functions ( List Where Functions ) part 2",
          "build in functions ( List Functions ) part 3",
          "build in functions ( List Functions ) part 4",
          "Iterable and ( the difference between Iterable and List )",
          "Iterator",
          "Record part 1",
          "Record part 2",
          "Typedef"
        ],
        "Object-Oriented Programming ( OOP )": [
          "What is OOP ...................... ?",
          "Class and Object part 1",
          "Class and Object part 2",
          "Class and objects part 3",
          "What is Constructor...................?",
          "Constructor ( Default Constructor )",
          "Constructor ( Parameterized Constructor ) part 1",
          "Constructor ( Parameterized Constructor ) part 2",
          "KeyWord this",
          "Constructor ( Named Constructor )",
          "KeyWord static",
          "Encapsulation",
          "Getter and Setter",
          "Getter and Setter ( new structure in dart ) part 1",
          "Getter and Setter ( new structure in dart ) part 2",
          "Edit in Constructor",
          "Example using encapsulation and getter,setter",
          "Exception part 1",
          "Exception part 2",
          "Exception part 3",
          "inheritance التوريث part 1",
          "inheritance التوريث part 2 ( super class and sub class )",
          "Ovveride",
          "Ovveride and super class",
          "Super constructor part 1",
          "Super constructor part 2 ( super named constructor )",
          "complete about inheritance",
          "Abstract class part 1",
          "Abstract class part 2",
          "Interface part 1",
          "Interface part 2 ( Multi Inheritance )",
          "Extends and implements",
          "Mixin",
          "Package",
          "keyWord as",
          "Enum",
          "Cascade operator",
          "Reset variable",
          "Math libaray",
          "Extension Function",
          "DateTime",
          "Generic type",
          "example using Generic type",
          "Polymorphism",
          "Lexical Closure",
          "Callable Function"
        ],
        "Asynchronous programming": [
          "Asynchronous (async) programming and synchronous (sync) programming",
          "Timer المؤقت",
          "Future part 1",
          "Future part 2 ( then - Catch error )",
          "Keword ( Async - Await )",
          "Difference between Future vs Timer",
          "Sleep"
        ],
        "Regex ( regular expression )": [
          "what is Regex ( regular expression ) ...........?",
          "RegExp class",
          "making pattern part 1 ( ^ . $ )",
          "making pattern part 2( [] [^])",
          "making pattern part 3 { } { ,} { , }",
          "making pattern part 4 \\d \\D \\s \\S \\w \\W",
          "making pattern part 5 () | ? + *",
          "making pattern part 6 examples"
        ],
        "بعض الإضافات المهمة": [
          "Factory constructors",
          "What is singleton pattern part 1",
          "What is singleton pattern part 2",
          "Random class part 1",
          "Random class part 2",
          "Random class part 3",
          "padLeft method",
          "Diffrence between operator ? ! ?? ??=",
          "Covariant keyword",
          "difference between covariant keyword and polymorphism",
          "For Each loop",
          "Difference between as, hide, show",
          "Deferred keyword",
          "part and part of",
          "difference between sealed class and abstract class",
          "Labels in Dart Loops",
          "Redirecting Constructors",
          "dart num variable",
          "export keyword",
          "rethrow keyword",
          "Type Variable",
          "constructors with Operators",
          "Null aware Elements",
          "MetaData",
          "StringBuffer dataType",
          "Subscript Syntax in Dart part 1",
          "Subscript Syntax in Dart part 2",
          "Subscript Syntax in Dart part 3",
          "Method Chaining in dart"
        ],
        "Isolate in Dart": [
          "What is MultiThread",
          "Isolate.spawn",
          "Isolate.spawn with args or params",
          "SendPort with condition",
          "Send and receive more time",
          "Isolate.spawn with await",
          "Isolate.run",
          "cycle of app thread",
          "Isolate.exit"
        ],
        "Dart doc": [
          "intro to dart doc",
          "dart doc part 1",
          "dart doc part 2",
          "dart doc part 3",
          "dart doc part 4"
        ],
        "Files and Directories": [
          "Create folders in dart part 1",
          "create folders in dart part 2",
          "create folders in dart part 3",
          "delete folders in dart"
        ]
      },
      "requirements": [
        "Should have only laptop or Computer"
      ],
      "description": "الكورس سوف يجعلك قادر علي التعامل مع لغه الدرات باتقان\nوتلك اللغة مستخدمة في تطوير تطبيقات الموبايل باستخدام الفلاتر\n\n\nهذا الكورس محدث باحدث إصدار الدارت\n\n\nوإن لم تكن لديك خبرة في صناعة تطيقات الاندويد او الايفون هذا ليس عائق  حيث سيكون مسار التقدم لدينا خطوة بخطوة من الصفر إلي انو تكون قادرا علي فهم لغه الدارت\nمتطلبات الدورة معرفة مسبقة : غير مطلوب منك غير جهاز لابتوب او كمبيوتر لتجربه م تتعمله\nتلك المواضيع التي سوف نتكلم عنها\n/////////////////////////////////////////////  what will learn   /////////////////////////////////////////////\nDetailed setup instructions for  Windows. ( تسطيب بيئة العمل )\nlearn what is Dart\nBasic Syntax\n( نتعلم جميع الاساسيات للغه الدارت)\nVariables and Data Types\nControl Flow Statements\n( if / switch .. )\nFunctions and types and parameters\nDart Enumerations (Enums)\nObject-Oriented Programming ( OOP )\nClasses and Objects and Abstract Classes\nAsynchronous Programming\nCollections\n( Map - list - set .. )\nloops ( for in loop , for loop , while loop , do while loop )\nNull Safety\nExtensions\nRegex ( regular expression )\nAdvanced Topics in Dart\nMixins\nHigher-Order Functions\nDart Futures\nStatic Members\nFactory Constructors\nException\nOvveride\nError Handling\nRecursive Functions\nSingleton Pattern\nDate Time\nMath libaray\nPackage\nConstructor and Named Constructor\nGetter and Setter\nEncapsulation\nIterator\nRecord\nLambda Expression\nconst and final\ndot Operators\nTernary operator ( Short hand if statment )\nNested IF\nSpecial Character",
      "target_audience": [
        "This course is intended for those who do not have any experience in programming, especially Dart"
      ]
    },
    {
      "title": "홍드로이드의 AI 도구를 활용한 학습부터 웹 & 앱 서비스 개발까지 한번에",
      "url": "https://www.udemy.com/course/ai-hongdroid/",
      "bio": "홍드로이드의 Chat GPT, Claude, Cursor AI를 활용한 웹 / 앱 개발",
      "objectives": [
        "네이티브 앱 개발, 웹앱 개발, 크로스 플랫폼 앱 개발의 차이점을 이해하고 각각의 장단점을 이해할 수 있습니다.",
        "flutter 프레임 워크에 기본적인 원리와 구조를 이해할 수 있게 됩니다.",
        "chatGPT나 각종 AI 도구 툴에 대해 활용하는 방법을 이해할 수 있습니다.",
        "프롬프트에 대하여 이해하고, AI에게 어떻게 접근해야 만족스러운 결과물을 만들 수 있는지 이해할 수 있게 됩니다.",
        "뻔하거나, 형식적인 결과물이 아닌 나만의 AI 서비스를 개발할 수 있다는 자신감을 배웁니다."
      ],
      "course_content": {
        "INTRO - 강의 소개 및 AI 도구 입문": [
          "강의 소개",
          "[수강생 혜택 소개] 강의에 오신 여러분을 환영합니다!",
          "AI의 시대가 도래함에 따라 우리가 가져야 하는 마음 가짐",
          "chatGPT는 무엇이고, 왜 chatGPT인가 ?",
          "chatGPT로 만족스러운 답변 유도하는 방법",
          "chatGPT 기본 이용 방법"
        ],
        "AI 도구 개발 기술 연계": [
          "chatGPT로 IT 서비스 아이데이션 해보기",
          "claude artifacts로 쉽게 화면 기획 해보기",
          "figma + plugin으로 협업용 화면 기획으로 개선하기 (Html To Design)"
        ],
        "chatGPT로 프로그래밍 학습하는 방법": [
          "만능 개발 도구 - Project IDX 소개",
          "변수, 데이터 타입, 연산자",
          "제어 흐름 (조건문, 반복문)",
          "메서드와 클래스",
          "StatelessWidget vs StatefulWidget",
          "기본 레이아웃 위젯 (Container, Row, Column)",
          "사용자 입력 처리 (버튼, 텍스트 입력 필드) & 상태 관리 setState()"
        ],
        "실전프로젝트 1. chatGPT만 써서 To-Do 리스트 기록 앱 개발 하기": [
          "To-Do 리스트 기록 앱 개발 → 기능 정의 및 와이어프레임 구현",
          "To-Do 리스트 기록 앱 개발 → UI & 기능 구현",
          "To-Do 리스트 기록 앱 개발 → 코드 리팩토링",
          "To-Do 리스트 기록 앱 개발 → 버그 수정 방법"
        ],
        "실전프로젝트 2. claude만 써서 랜덤 명언 웹 개발 하기 (Random Famous Saying)": [
          "claude + artifacts 기능 활용으로 쉽게 UI & UX 구현하기",
          "명언 api 호출 및 데이터 UI 연동",
          "firebase 활용한 배포 (functions + hosting)"
        ],
        "실전프로젝트 3. cursor ai를 활용한 gpt api 연동 웹 개발 하기 (Random Idea)": [
          "cursor ai editor 소개",
          "cursor ai 개발 환경 및 웹 개발 환경 설정",
          "프로필 정보 입력 받는 시나리오 UI 및 기능 구현",
          "chat api를 연동하여 프롬프트 기반 아이데이션 데이터를 추출하여 UI 및 기능 구현 마무리"
        ],
        "실전프로젝트 4. 노코드 툴로 프로모션 & 랜딩 페이지 만들어보기": [
          "프롬프트로 반응형 프로모션 & 랜딩 페이지 구성 및 배포하기 (with framer)"
        ],
        "AI 도구의 특징 정리": [
          "chatGPT, claude 무료 VS 유료 기능 차이점 (with wrtn)",
          "cursor의 composer 기능이 활용가치가 높은 이유"
        ],
        "OUTRO - 강의를 마치며": [
          "AI 시대에 개발자라는 직업은 결국 사라지는 것일까?",
          "이번 강의를 준비한 이유"
        ]
      },
      "requirements": [
        "실습을 위해 데스크탑 PC나 노트북 준비가 필요합니다",
        "별도 프로그래밍 경험이 없으시더라도 편하게 수강하실 수 있습니다"
      ],
      "description": "홍드로이드의 가장 쉽게 배우는 앱 개발 강의 시리즈 세 번째 강좌!\n\"ChatGPT, Claude, Cursor AI를 활용한 웹 / 앱 개발 한번에 끝내기\"\n\n\n지금 현재 가장 핫한 AI 도구를 활용한 학습부터 웹 & 앱 서비스 개발까지,\nAI 시대에 필요한 실용적인 기술과 지식을 포괄적으로 배워봅니다.\n\n\n본 강의는 AI 도구의 기본적인 이해와 활용법부터 시작하여, 실제 프로젝트 개발까지 단계적으로 진행됩니다.\nChatGPT와 Claude 같은 AI 도구를 효과적으로 사용하는 방법을 배우고,\n이를 통해 IT 서비스 기획과 화면 설계 과정을 경험합니다.\n\n\n[이런 내용을 배웁니다]\n프로그래밍 학습에서는 Dart 언어와 Flutter 프레임워크의 핵심을 다루어, 모바일 앱 개발의 기초를 다집니다.\n실전 프로젝트 섹션에서는 To-Do 리스트 앱, 랜덤 명언 웹, GPT API 연동 웹 등 다양한 프로젝트를 직접 구현해봅니다.\n각 프로젝트마다 다른 AI 도구(ChatGPT, Claude, Cursor AI)를 활용하여 개발 과정을 경험하고, 실제 배포까지 진행합니다.\n또한, 노코드 툴을 이용한 프로모션 페이지 제작 등 개발자가 아니더라도 AI를 활용해 웹 서비스를 만들 수 있는 방법도 소개합니다.\n\n\n단순히 기술을 가르치는 것에 그치지 않고, AI 시대에 개발자의 역할과 미래에 대한 통찰까지 제공합니다.\n이를 통해 수강생들은 AI 도구를 효과적으로 활용하여 아이디어를 실현하고,\n빠르게 변화하는 기술 환경에 적응할 수 있는 능력을 기를 수 있을 것입니다.\n\n\n[이 강의의 특징]\nAI로 학습 + AI도구로 개발 + AI 기능이 들어간 기술로 개발을 한번에 배울 수 있는 커리큘럼\n앱 개발 코드 템플릿부터 커뮤니티까지 다양한 수강생 전용 혜택\n타강의에서 접하기 어려운 Figma 툴을 활용한 IT 서비스 기획 방법\nAI 도구를 개발에 활용하는 법부터 코딩 없이도 가능한 서비스 개발까지 강사의 다양한 노하우 및 인사이트 제공\n\n\n[수강생 전용 혜택]\n홍드로이드의 강의 풀소스 코드 깃헙 공유\n홍드로이드가 운영하는 오프라인 네트워킹 모임 미라클 코딩클럽 멤버 디스코드 채널 가입\n홍드로이드와 함께하는 1:1 맞춤 멘토링 무료 지원\n홍드로이드가 직접 운영하는 카카오톡 오픈 채팅방 2곳 (각각 600명, 200명 규모) 참여\n홍드로이드의 <개발자의 수익 극대화 루트> 유료 전자책 무료 증정(60페이지 분량)\n홍드로이드의 앱 개발 코드 템플릿 14종\n\n\n뻔하거나, 형식적인 결과물이 아닌 나만의 AI 서비스를 개발하고 싶다면\n강의에서 반갑게 인사 드리도록 하겠습니다!",
      "target_audience": [
        "flutter 앱 개발로 취업을 위한 포트폴리오를 준비하고 싶은 분",
        "평소에 직접 만들어보고 싶은 앱이 있지만, 개발 학습을 어떻게 시작할지 고민 되시던 분",
        "android나 ios 앱 개발을 이미 경험해본 네이티브 개발자이지만 크로스 플랫폼 앱 개발의 연계학습을 원하는 분",
        "AI 도구를 활용해서 1인 개발자의 부족함을 도움받고 싶은 분",
        "개발 관련 전공 지식이 없지만, 도전해보고 싶으신 분"
      ]
    },
    {
      "title": "Flutter Store App GraphQl,Bloc, Freezed & Clean Architecture",
      "url": "https://www.udemy.com/course/flutter-store-app-graphqlbloc-freezed-clean-architecture/",
      "bio": "Learn Flutter Bloc Store Full App From Scratch , GraphQl Apis,",
      "objectives": [
        "Flutter Advanced GraphQl Api And Clean Architecture",
        "Freezed , Bloc Pattern , Dio And Retrofit",
        "Firebase Notifications , Local Notification , Cloud Firestore and Stream",
        "Hive , Env , and Dynamic Link & Share"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Create & Setup Project": [
          "Create a new project",
          "Github - create a new repository",
          "Firebase - Android setup",
          "Firebase - Ios setup"
        ],
        "Core Setup": [
          "Core packages",
          "Singleton design pattern",
          "Environment variables dev or production",
          "Device Orientation",
          "Connectivity network",
          "App Icon Android and Ios",
          "Native Splash",
          "Responsive Screenutil",
          "Font Family Arabic and English",
          "Routes and Navigator",
          "Theme Dark and Light",
          "Localizations Setup",
          "Unfocus TextFormFiled"
        ],
        "Auth": [
          "Clean Architecture",
          "Lang, Colors, and Assets Files",
          "Custom Widgest",
          "Login Design Ui",
          "Login TextFormField",
          "Sign up Design UI",
          "Freezed , Flutter Bloc and Shared Preference",
          "Theme Mode Logic & Cubit",
          "9-Language Change Logic",
          "Fix Font Family"
        ],
        "GraphQl And Services": [
          "What is GraphQl?",
          "Dio and Retrofit Service"
        ],
        "Login": [
          "Login Models",
          "Login DataSource & Repo",
          "User Role DataSOurce & Repo",
          "Login Bloc Pattern",
          "Add Login Logic In UI"
        ],
        "Sign Up": [
          "Image Picker Ios & Android",
          "Upload Image Datasource",
          "Upload Image Cubit",
          "User Avatar Add Logic",
          "SignUp DataSource , Model and Repo",
          "Sign Up Bloc Pattern",
          "Sign Up Add Bloc And Logic",
          "Fix Sign Up"
        ],
        "Drawer Admin": [
          "Animation Drawer"
        ],
        "Dashboard Admin": [
          "Dashboard Design Ui",
          "DashBoard Models",
          "DashBoard DataSource & Repo",
          "DashBoard Bloc Pattern",
          "DashBoard Add Logic in Ui",
          "DashBoard Fix Loading"
        ],
        "Categories Admin": [
          "Get all categories Design Ui Admin",
          "Create Category Design Ui",
          "Update Category Design Ui",
          "Get All Categories Admin DataSource & repo",
          "Get All Categories Admin Bloc",
          "Get All Categories Admin Logic",
          "Create Category DataSource & Repo",
          "Create Category Logic",
          "Delete Category DataSource & Repo & Bloc",
          "Delete Category Logic",
          "Update Category DataSource & Repo & Bloc",
          "Update Category Logic"
        ]
      },
      "requirements": [
        "At least one year of experience Flutter and Dart"
      ],
      "description": "Flutter Store app, Learn how can make a full app using Bloc Pattern State Management, and how can use GraphQl  API, with clean Architecture,\nBuild a strong App in Flutter and Dart.\nClean Architecture\nBloc Pattern\nGraphql Api\nRest APi\nGet IT Injection\nDio & Retrofit\nGithub\nFirebase Notifications\nLocal Notification\nCloud Firestore\nStream\nDynamic Link & Share\nHive\nEnv\nAnimation\nPagination\nDark Mode\nLocalization Change Language\nResponse Ui\nWebView\nNative Splash Screen\n\n\nA Powerful State Management\nBloc Pattern  is an extra-light and powerful solution for Flutter. It combines high-performance state management, Clean Code\n\n\nThis app covers Flutter for very beginners to advanced learners. We start from very simple ui like drawing text to complex layout.\n\n\nWe also built reusable widget to reduce code amount. So at the end of this tutorial you learn how to build simple to complex reusable flutter widgets. Eventually we will master Firebase Notifications,\nContent and Overview\nSuitable for anyone has basic Flutter and Dart, through this course of and 31 hours of content, you will learn how to make full app with Bloc Pattern, Freezed, you will make many screens,\nWho this course is for:\nPeople who want to make the flutter app faster using Bloc And Freezed Flutter\nPeople who want to make scalable apps using  Bloc And Freezed  Flutter",
      "target_audience": [
        "If You has one year of experience with flutter and dart"
      ]
    },
    {
      "title": "Desarrollo de Aplicaciones móviles Android con App Inventor",
      "url": "https://www.udemy.com/course/desarrollo-de-aplicaciones-moviles-con-app-inventor/",
      "bio": "¡Crea increíbles aplicaciones móviles para Android sin programar utilizando App Inventor! 33 apps paso a paso",
      "objectives": [
        "Utilizar la plataforma App Inventor para crear tus propias aplicaciones móviles",
        "Desarrollar aplicaciones móviles para Android sin conocimientos de programación",
        "Diseñar juegos para móviles",
        "Utilizar los sensores de un smartphone en una aplicación móvil",
        "Realizar aplicaciones de productividad que trabajen con bases de datos locales y en la web",
        "Conocer los distintos markets de aplicaciones que hay",
        "Rentabilizar económicamente una aplicación",
        "Publicar la App en Internet"
      ],
      "course_content": {
        "Introducción a App Inventor": [
          "Crear cuenta de correo electrónico de Gmail",
          "Introducción a App Inventor",
          "Materiales multimedia",
          "App1 - Darth Vader (Interfaz)",
          "App1 - Darth Vader (Bloques)",
          "Probar la aplicación",
          "MIT AI2 Companion",
          "Mejorando nuestra app",
          "Emulador de Android (Mac OS X)",
          "Emulador de Android (Windows)",
          "Emulador de Android (Linux)",
          "Instalación de la aplicación. Generación APK",
          "Propuesta App - Zoológico",
          "App2 - Zoológico (Interfaz)",
          "Nomenclatura",
          "App2 - Zoológico (Bloques)",
          "Revisión Sección 1"
        ],
        "Dibujo, animaciones y juegos": [
          "App3 - MyPaint (Intro)",
          "App3 - MyPaint (Interfaz I)",
          "App3 - MyPaint (Bloques I)",
          "App3 - MyPaint (Prueba)",
          "App3 - MyPaint (Interfaz II - Notificador)",
          "App3 - MyPaint(Bloques II - Notificador)",
          "App3 - MyPaint (Generación APK)",
          "App3 - MyPaint (Actualización)",
          "App4 - BotarPelota (Intro)",
          "App4 - BotarPelota (Interfaz)",
          "App4 - BotarPelota (Bloques)",
          "App4 - BotarPelota (Prueba)",
          "App5 - LanzaPenalties (Intro)",
          "App5 - LanzaPenalties (Punto de control)",
          "App5 - LanzaPenalties (Interfaz I)",
          "App5 - LanzaPenalties (Bloques I - Procedimientos)",
          "App5 - LanzaPenalties (Bloques II - Lanzado y TocarBorde)",
          "App5 - LanzaPenalties (Bloques III - Colisiones)",
          "App5 - LanzaPenalties (Interfaz II - Reloj)",
          "App5 - LanzaPenalties (Bloques IV - Movimiento)",
          "App5 - LanzaPenalties (Pruebas y Generación APK)",
          "App6 - MonoLoco (Intro)",
          "App6 - MonoLoco (Interfaz I - Multipantalla)",
          "App6 - MonoLoco (Interfaz II - Multipantalla)",
          "App6 - MonoLoco (Interfaz III - Multipantalla)",
          "App6 - MonoLoco (Bloques I - Pantalla principal)",
          "App6 - MonoLoco (Bloques II - Procedimientos)",
          "App6 - MonoLoco (Bloques III - Eventos y temporizadores)",
          "App6 - MonoLoco (Bloques IV - Inicialización y Notificador)",
          "App6 - MonoLoco (Prueba I)",
          "App6 - MonoLoco (Bloques V - Acceso a datos)",
          "App6 - MonoLoco (Prueba II y Generación APK)",
          "Revisión Sección 2"
        ],
        "Medios y Sensores": [
          "App7 - TopRadios (Intro)",
          "App7 - TopRadios (Interfaz)",
          "App7 - TopRadios (Bloques)",
          "App7 - TopRadios (Prueba y Generación APK)",
          "App8 - Brujula (Intro)",
          "App8 - Brujula (Sensor de orientación)",
          "App8 - Brujula (Interfaz)",
          "App8 - Brujula (Bloques)",
          "App8 - Brujula (Prueba y Generación APK)",
          "App9 - Gallo (Intro)",
          "App9 - Gallo (Interfaz)",
          "App9 - Gallo (Bloques)",
          "App9 - Gallo (Prueba y Generación APK)",
          "App10 - Aforo (Intro)",
          "App10 - Aforo (Interfaz)",
          "App10 - Aforo (Bloques)",
          "App10 - Aforo (Prueba y Generación APK)",
          "App11 - FotoVideoGPS (Intro)",
          "App11 - FotoVideoGPS (Interfaz)",
          "App11 - FotoVideoGPS (Bloques)",
          "App11 - FotoVideoGPS (Prueba y Generación APK)",
          "App12 - TraduVoz (Intro)",
          "App12 - TraduVoz (Interfaz)",
          "App12 - TraduVoz (Bloques)",
          "App12 - TraduVoz (Pruebas y Generación APK)",
          "Revisión Sección 3"
        ],
        "Actividades": [
          "Introducción a ActivityStarter",
          "El interior de un fichero AIA",
          "App13 - LanzadorAplicacionesV1",
          "App14 - LanzadorAplicacionesV2 (Interfaz)",
          "CatLog y ActivityManager",
          "DEXplorer",
          "App14 - LanzadorAplicacionesV2 (Bloques)",
          "App14 - LanzadorAplicacionesV2 (Prueba y Generación APK)",
          "App15 - QRAforo (Intro)",
          "App15 - QRAforo (Interfaz)",
          "App15 - QRAforo (Bloques)",
          "App15 - QRAforo (Prueba y Generación APK)",
          "Revisión Sección 4"
        ],
        "Trabajando con datos": [
          "App16 - ArchivoDeTexto (Intro)",
          "App16 - ArchivoDeTexto (Interfaz)",
          "App16 - ArchivoDeTexto (Bloques)",
          "App16 - ArchivoDeTexto (Pruebas y Generación APK)",
          "App17 - IdentidadesDigitales (Intro)",
          "App17 - IdentidadesDigitales (Interfaz)",
          "App17 - IdentidadesDigitales (Bloques I)",
          "App17 - IdentidadesDigitales (Bloques II)",
          "App17 - IdentidadesDigitales (Prueba y Generación APK)",
          "Características/Limitaciones de TinyBD",
          "App18 - IdentidadesDigitalesWeb (Intro)",
          "App18 - IdentidadesDigitalesWeb (Interfaz)",
          "App18 - IdentidadesDigitalesWeb (Bloques)",
          "App18 - IdentidadesDigitalesWeb (Pruebas)",
          "Actualización importante",
          "Servicio web propio para TinyWebDB (Python y Google App Engine)",
          "Servicio web propio para TinyWebDB (Desplegando mi proyecto)",
          "App18 - IdentidadesDigitalesWeb (Servicio web propio)",
          "Servicio web propio para TinyWebDB (Actualización)",
          "Finanzas (Intro)",
          "Finanzas (Interfaz y bloques Screen1)",
          "Finanzas (Interfaz scrActualizar)",
          "Finanzas (Formulario y Hoja de Cálculo)",
          "Finanzas (Bloques srcActualizar)",
          "Finanzas (Google Apps Script)",
          "Finanzas (Interfaz y bloques scrConsultar)",
          "Finanzas (Google Charts API)",
          "Finanzas (Interfaz y bloques scrGraficas)",
          "Actualización importante",
          "Revisión Sección 5"
        ],
        "Componentes sociales": [
          "App20 - Gorriona (Intro)",
          "App20 - Gorriona (Interfaz I)",
          "App20 - Gorriona (API Twitter)",
          "App20 - Gorriona (Interfaz II)",
          "App20 - Gorriona (Bloques I)",
          "App20 - Gorriona (Bloques II)",
          "App20 - Gorriona (Bloques III)",
          "App20 - Gorriona (Pruebas y Generación APK)",
          "App21 - Favoritos",
          "IMPORTANTE: Cambios en las Políticas de Desarrolladores de Google Play",
          "App22 - Localizame (Intro)",
          "App22 - Localizame (Interfaz)",
          "App22 - Localizame (Bloques)",
          "Revisión Sección 6"
        ],
        "Conectividad y aplicaciones web": [
          "App23 - MiPropiaNube (Intro)",
          "App23 - MiPropiaNube (Configuración del servidor)",
          "App23 - MiPropiaNube (Interfaz)",
          "App23 - MiPropiaNube (Bloques I)",
          "App23 - MiPropiaNube (Bloques II)",
          "App23 - MiPropiaNube (Pruebas y Generación APK)",
          "App24 - CVaPDF (Intro)",
          "App24 - CVaPDF (Interfaz)",
          "App24 - CVaPDF (ConvertAPI)",
          "App24 - CVaPDF (Bloques I - Inicialización)",
          "App24 - CVaPDF (Bloques II)",
          "App24 - CVaPDF (Bloques III)",
          "App24 - CVaPDF (Prueba y Generación APK)",
          "Revisión Sección 7"
        ],
        "Publicación de nuestras apps": [
          "App25 - PPTLS (Intro)",
          "App25 - PPTLS (Interfaz)",
          "App25 - PPTLS (Bloques I)",
          "App25 - PPTLS (Bloques II)",
          "App25 - PPTLS (Prueba y Generación APK)",
          "Publicación de tu aplicación. Gallery de App Inventor.",
          "Rentabilizando una aplicación",
          "App25 - PPTLS (Insertando el anuncio)",
          "App25 - PPTLS (Bloques III)",
          "App25 - PPTLS (Pruebas II y Generación APK)",
          "App25 - Publicar en Google Play",
          "Revisión Sección 8"
        ],
        "Actualizaciones y extras": [
          "BlueStacks y App Inventor",
          "Copiar y pegar en App Inventor. La mochila",
          "App26 - Marcador Gráfico(Intro)",
          "Crear los gráficos con GIMP",
          "Un poco de matemáticas",
          "App26 - Marcador Gráfico (Interfaz)",
          "App26 - Marcador Gráfico (Bloques I)",
          "App26 - Marcador Gráfico (Bloques II)",
          "App26 - Marcador Gráfico (Prueba y generación del APK)",
          "Genymotion (Instalación)",
          "Genymotion (Uso)",
          "App27 - WhatsAppInventor Firebase (Intro)",
          "App27 - WhatsAppInventor Firebase (Interfaz I)",
          "App27 - WhatsAppInventor Firebase (Interfaz II)",
          "App27 - WhatsAppInventor Firebase (Bloques I)",
          "App27 - WhatsAppInventor Firebase (Bloques II)",
          "App27 - WhatsAppInventor Firebase (Bloques III)",
          "App27 - WhatsAppInventor Firebase (Pruebas y Generación APK)",
          "App28 - Caminata (Intro)",
          "Componente Podómetro",
          "App28 - Caminata (Interfaz)",
          "App28 - Caminata (Bloques)",
          "App28 - Caminata (Pruebas y Generación APK)",
          "Extensiones en App Inventor",
          "Documentación adicional a extensiones en App Inventor",
          "App29 - Login (Intro)",
          "App29 - Login (Creación de cuenta RedisLab y extensiones)",
          "App29 - Login (Interfaz)",
          "App29 - Login (Bloques I)",
          "App29 - Login (Bloques II)",
          "App29 - Login (Pruebas y generación APK)",
          "Internet de las Cosas. Internet of things (IoT)",
          "App 30 - Genuino 101 (Intro)",
          "El entorno de desarrollo Arduino. Cómo ejecutar un sketch en Genuino 101",
          "App 30 - Genuino 101 (Interfaz)",
          "App 30 - Genuino 101 (Bloques)",
          "App 30 - Genuino 101 (Pruebas y Generación APK)",
          "App31 - NFC (Intro)",
          "App31 - NFC (Interfaz)",
          "App31 - NFC (Bloques)",
          "App31 - NFC (Prueba y generación APK)",
          "Problemas comunes y soluciones con etiquetas NFC",
          "La plataforma MIOIO App Inventor",
          "El robot evita obstáculos",
          "La tarjeta MIOIO App Inventor. Montaje del robot.",
          "App32 - Robot MIOIO App Inventor(Interfaz)",
          "App32 - Robot MIOIO App Inventor(Bloques)",
          "Documentación adicional de MIOIO App Inventor",
          "App 33 - Ubicaciones(Intro). Mapas y CloudDB.",
          "App 33 - Ubicaciones (Interfaz). Mapas y CloudDB",
          "App 33 - Ubicaciones (Bloques I). Mapas y CloudDB",
          "App 33 - Ubicaciones (Bloques II). Mapas y CloudDB",
          "App 33 - Ubicaciones (Bloques III). Mapas y CloudDB",
          "App 33 - Ubicaciones (Bloques IV). Mapas y CloudDB",
          "App 33 - Ubicaciones (Prueba y Generación APK). Mapas y CloudDB"
        ],
        "Referencia detallada": [
          "Listas",
          "Operaciones básicas con listas (Interfaz)",
          "Operaciones básicas con listas (Bloques)",
          "Ordenación por intercambio",
          "Operaciones básicas con listas (Prueba)",
          "Creando una animación con Listas"
        ]
      },
      "requirements": [
        "Ordenador con navegador y conexión a Internet"
      ],
      "description": "Ultima actualización: Creamos una aplicación sobre finanzas con Google Spreadsheet y MIT App Inventor\n\n¿Quieres aprender a desarrollar tus propias aplicaciones móviles para Android?¿Piensas que es complicado? En este curso aprenderás a crear tus propias apps de manera rápida y sencilla utilizando la plataforma App Inventor. El curso te enseña a programar aplicaciones móviles de todo tipo desde cero, distribuirlas y obtener si quieres beneficios económicos....Que se te da bien? Pues aprovecha y publica tus aplicaciones en Google Play y rentabilízalas.\nCrearás desde las aplicaciones más básicas hasta las más sofisticadas multipantalla, con utilización de sensores, gestión de datos y conexión a Internet...y ahora también enseñamos cómo funciona el Internet de las Cosas y conectamos con la tarjeta Arduino/Genuino 101 haciendo uso de la última tecnología Bluetooth Low Energy.\n\nEstructurado en 10 módulos con más de 200 vídeos y 31,5 horas de clases con los que podrás aprender a tu ritmo paso a paso todos los secretos del desarrollo de aplicaciones móviles con App Inventor en español.\n\nEste curso es ideal para todas aquellas personas interesadas en aprender a crear aplicaciones móviles y que no tienen tiempo para aprender un lenguaje de programación estructurado como Java y también para educadores que quieren implantar en sus clases una asignatura de programación móvil.",
      "target_audience": [
        "Especialmente indicado para aquellas personas que no tienen conocimientos de programación y quieren aprender rápidamente a crear aplicaciones móviles en Android. No está indicado si lo que deseas es aprender Java para desarrollar apps en Android."
      ]
    },
    {
      "title": "Desenvolvendo Aplicativos com Ionic 6 e Mysql",
      "url": "https://www.udemy.com/course/desenvolvendo-aplicativos-com-ionic-6-e-mysql/",
      "bio": "Aplicativos Android e IOS",
      "objectives": [
        "Desenvolver aplicativos para android e ios com banco de dados mysql"
      ],
      "course_content": {
        "Introdução": [
          "Introdução",
          "Criando o Projeto",
          "Servidor Local",
          "Rodando o Projeto",
          "Criando Páginas",
          "Alterando o Menu",
          "Itens do Menu",
          "Configurando Toolbar",
          "Ícones e Botões",
          "Criando o Banco de Dados",
          "Input para Cadastros",
          "Diretivas NgIF",
          "Trabalhando com HttpClient",
          "Função para API",
          "Processando Dados para API",
          "Importando Map Rxjs",
          "Chamando a API",
          "Toast para Mensagens",
          "Conexão com PDO",
          "API para Inserir",
          "Inserindo Dados no Banco",
          "Método para Listar Dados",
          "Input para Buscar Dados",
          "API para Listar",
          "Icon Item Sliding",
          "Listando os Dados",
          "Rotas com Parametros",
          "Parametros para Editar",
          "Editando os Dados",
          "Excluindo os Dados",
          "Método para Mostrar os Dados",
          "Dados do Usuário",
          "Alterando Cores com CSS",
          "Melhorando o Design",
          "Class e Padding",
          "Buscando pelo Nome",
          "Buscando ao Digitar",
          "Refresh e Barra de Rolagem",
          "Atualizando os Dados",
          "Ion Select",
          "Comunicando Campos",
          "Instalando Native Storage",
          "Função para o Login",
          "Recuperando Dados do Usuário",
          "API para o Login",
          "Logando no APP",
          "Página Inicial",
          "Recuperando Sessão do Usuário",
          "Executando Logout",
          "Hospedando o Banco",
          "Dando Build no APP",
          "Rodando o Celular",
          "Mostrando Usuário Logado",
          "Testando o Aplicativo"
        ]
      },
      "requirements": [
        "É aconselhável o aluno acompanhar antes o curso de desenvolvimento de aplicativos com ionic 6"
      ],
      "description": "O curso de Ionic 6 com Mysql possui 54 aulas, neste curso o aluno aprende a desenvolver aplicativos mobile usando o ionic 6, angular 9, php e mysqli, fazemos um crud completo com consultas, edições, inserções, deleções, login e buscas, usando api em PHP, atualmente ionic é a linguagem mobile que mais cresce no mercado, torne-se um desenvolvedor mobile e comece a lucrar desenvolvendo seus aplicativos.",
      "target_audience": [
        "Todo e qualquer aluno que tenha interesse em desenvolver aplicativos mobile"
      ]
    },
    {
      "title": "Ionic 5 do Zero até Publicação",
      "url": "https://www.udemy.com/course/ionic-5-do-zero-ate-publicacao/",
      "bio": "Aprenda criar aplicativos para (android e ios) e sites em PWA com ionic 5",
      "objectives": [
        "Criar aplicativos e sites",
        "Criar animações",
        "Aprenderá usar componentes visuais",
        "Aprenderá usar componentes nativos",
        "Aprenderá consumir Apis Externas",
        "Aprenderá publicar aplicativo na loja do Google"
      ],
      "course_content": {},
      "requirements": [
        "Conhecer o básico de programação"
      ],
      "description": "O curso de Ionic 5 foi desenvolvido para quem deseja aprender a criar aplicativos móveis modernos e responsivos para Android e iOS, além de sites no formato PWA (Progressive Web App), utilizando o poderoso framework Ionic 5. Ao longo das aulas, você será guiado passo a passo no desenvolvimento de aplicações, aprendendo o funcionamento de cada componente essencial do Ionic, o que proporciona mais segurança e domínio na hora de criar seus próprios projetos.\nDurante o curso, você também irá aprender como fazer requisições HTTP e como integrar APIs externas, com destaque para o consumo da API dos Correios, o que proporciona experiências práticas e reais no desenvolvimento de apps conectados à internet.\nO conteúdo é apresentado de forma clara, didática e prática, permitindo que iniciantes possam acompanhar com facilidade, ao mesmo tempo que oferece recursos valiosos para quem já tem alguma experiência. O curso tem uma proposta incremental, o que significa que novos módulos e funcionalidades podem ser adicionados ao longo do tempo, mantendo o conteúdo sempre atualizado com as melhores práticas e novidades do mercado.\nSe você quer entrar de vez no mundo do desenvolvimento mobile com um framework robusto e versátil, este curso é para você. E o melhor: temos desconto especial para quem se inscrever agora!",
      "target_audience": [
        "Desenvolvedores que desejam criar aplicativos e sites"
      ]
    },
    {
      "title": "Der Komplette Android 8 Entwickler Kurs - Erstelle 20+ Apps",
      "url": "https://www.udemy.com/course/der-komplette-android-8-entwickler-kurs/",
      "bio": "Lerne Android Apps mit Java und Kotlin zu entwickeln, in dem Du Apps wie Snapchat, Flappy Bird und viele mehr erstellst",
      "objectives": [
        "Du wirst in der Lage sein jede Idee die Du hast in einer App umzusetzen",
        "Apps in den Google Play Store hochladen um Geld mit Google Pay und Google Ads zu verdienen",
        "Ein professioneller App Entwickler, um z.B. als Freelancer zu arbeiten",
        "Du kannst Dich dann für Junior Softwareprogrammierer Rollen bewerben."
      ],
      "course_content": {},
      "requirements": [
        "Ein Windows PC, Linux oder Mac wird benötigt",
        "Keinerlei Programmierkenntnisse nötig - Ich bringe Dir alles was Du wissen musst bei."
      ],
      "description": "Vom Anfänger zum Android 8 App Entwickler - in sechs Wochen!\nBist Du Bereit für Google's Android Oreo?\nEs spielt hierbei keine Rolle ob Du ein blutiger Anfänger bist, oder bereits programmieren kannst. JETZT ist die Zeit um auf den Android Oreo Zug aufzuspringen und sich das Goldene Ticket in Appentwickler Himmel zu ergattern (bevor es die Tickets vergriffen sind)!\nAndroid Oreo ist eine MEGA Chance. Ob Du nun Dein Einkommen, Deine Karriere verbessern willst, oder wer weiß... vielleicht sogar der nächste Mark Zuckerberg werden willst!\nWerde Teil einer App Entwickler Community und arbeite an der Google's bester und benutzerfreundlichsten Plattform überhaupt.\nJa, in sechs Wochen könntest Du einer der ersten sein die Android Oreo App Entwickler Spezialist ist. Einer der tolle Apps wie Snapchat, Flappy Bird usw. entwickelt, während er Programmieren lernt.\nDas macht extrem Spaß und ermöglicht Dir Dein Wissen direkt dauerhaft zu speichern.\nWarum warten, bis die anderen Deine Ideen umsetzen und Du nichts davon hast?\nIch garantiere Dir (oder Du kriegst Dein Geld zurück), KEIN anderer Kurs wird Dir dieses Selbstvertrauen, Wissen und diese Tiefe liefern.\nInteressiert? Ok, hier ist eine kleiner Überblick was du erhältst.\nDu lernst die richtigen Techniken und Herangehensweisen für die Entwicklung kennen. Verwendest dazu Java und Kotlin in dem besten Android Entwicklungs Tool auf dem Markt, Android Studio. Ich lehre Dich wie Du echte und vermarktbare Apps wie Flappy Bird und Snapchat Klons erstellst.\nGenau wie in meinem Android 6 Kurs, welcher bereits über 5000 Studenten beigebracht hat wie man Android Apps Programmiert, ist dieser Kurs Projektbasiert. Also nicht dauernd nur Theorie, sondern jede Menge Praxis. Das heißt Du lernst hier auf dem effektivsten und spaßigsten Wege.\nDu beginnst mit dem Download von Android Studio und der Umsetzung eines simplen Währungsrechners.\nDann erstellst Du eine Gehirntraining App und eine Quiz App (Errate den VIP), bevor wir uns an die Klone von Flappy Bird und Snapchat machen. Dabei werden wir dann googles Firebase verwenden.\nDu kriegst einen kompletten Guide wie Du Deine Apps dann auf den Google Play store laden kannst und mit Google Ads Umsatz generieren kannst.\nZu guter letzt werden wir sogar Android Wear behandeln. Die Zukunft von Wearables!\nWie unterscheidet sich der Kurs von anderen?\nEr ist vom erfolgreichen Dozenten mit über 42000 Studenten und über 2000 fünf Sterne Bewertungen.\nDu kriegst Support von Denis in den Kursforen\nDu kriegst Zugriff auf Projekt basiertes Lernen, d.h. erstellen von echten Apps und keine langweilige und trockene Theorie.\nWarum solltest Du überhaupt die Android App Entwicklung lernen?\nAndroid ist mit Abstand die größte Mobile Plattform mit über 85% Marktanteil und über 1mrd. Geräten die allein 2017 verkauft wurden.\nNicht nur das, Du kannst Android auf Windows, Mac und Linux entwickeln.\nWerbungbasierter Umsatz ist auf Android verbreiteter und einfacher zu nutzen als auf iOS\nFür wen ist der Kurs?\nFür jeden der programmieren lernen möchte. Java ist eine super Programmiersprache um mit dem Programmieren zu beginnen.\nFür jeden der Kotlin programmieren lernen möchte. Kotlin ist eine neue und absolut heiße Programmiersprache, mit riesigem Potential für die Zukunft!\nAlle die App Entwickler werden wollen. Das ist ein kompletter Kurs. Er wird dir alles beibringen was Du dazu wissen musst.\nAlle die wissen wollen wie Computer funktionieren. Programmieren ist mehr als nur die Erstellung von Apps. Es ist zu verstehen wie ein Computer funktioniert. Das kann dir auch in anderen Bereichen helfen.\nDer Komplette Android Oreo App Entwickler zielt darauf seinen Teilnehmern die Erstellung darin vor allen anderen beizubringen.\nWarum ist der Kurs das Richtige für Dich?\nWenn Du nach einem Karrierewechsel suchst, oder etwas Geld nebenbei machen willst, oder vielleicht sogar einfach nur etwas neues kreieren willst. Der komplette Android M Entwickler Kurs ist dafür da, dich in nur sechs Wochen (oder mit Deiner eigenen Geschwindigkeit) zum App Entwickler zu machen.\nExtrem präzise und einfach zu verstehende Taktiken\nWichtige Tipps und Tricks die Du direkt anwenden kannst\nLogisches Lernen mit Deiner eigenen Geschwindigkeit.\nEinfach verständliche und Kristallklare Definitionen.\nVorsichtig zusammengestellte, getestete Lernstrategien.\nWer bin ich?\nIch bin Denis und Ersteller der Erfolgreichsten Videokurse auf Udemy. Für einige meiner Kurse habe ich mit Rob Percival zusammengearbeitet. Er ist der Ersteller der erfolgreichsten Programmierkurse überhaupt. Du kannst also nur das Beste erwarten. Ich freue mich diesen Android Kurs zu meiner Liste toller Kurse hinzufügen zu können.\nIch habe einen Bachelor im Ingenieurswesen und liebe Programmieren und Kurse erstellen.\nDie letzten Monate habe ich mich intensiv mit Android Oreo beschäftigt um diesen Kurs zum besten Android Kurs in Deutschland zu machen. Mein Ziel ist es, jedem der Interesse am Programmieren hat vom Anfänger zum Profi in kurzer Zeit zu machen. Dazu habe ich eine Webseite erstellt, auf der meine Teilnehmer zusätzlich zu den Videos auch Artikel zu den Themen erhalten.\nWarum bin ich so überzeugt von meinen Kursen? Weil ich durchweg positives Feedback von meinen Teilnehmern erhalte und ständige daran arbeite, meine Kurse und meine Präsentationsfähigkeiten zu verbessern.\nHier ein Beispiel von Feedbacks meines Android 6 Kurses:\n\n\"Ich habe schon oft Online-Kurse gemacht und sehr oft kann ich den Trainern nicht lange zuhören weil sie entweder einen abstoßenden Dialekt sprechen oder eine kuriose Betonung ihrer Worte an den Tag legen. In diesem Kurs ist das anders, hat mir viel Spass gemacht und den kann man auch locker mal nebenbei binge-watchen.\"\n\n\"Ich finde es super Erklärt. Wirklich für komplette Quereinsteiger (Auch ohne JAVA Kenntnisse) Ein großes Danke dafür\"\n\nDer Kurs ist sehr gut für Einsteiger und auch für Fortgeschrittene um Sachen wieder aufzuholen. Alles ist in einem leicht zu folgendem Tempo sehr präzise erklärt. Außerdem kann man mehr als genug lernen um seine eigenen Apps zu programmieren.",
      "target_audience": [
        "Alle die App Entwickler werden wollen. Das ist ein kompletter Kurs. Er wird Dir alles beibringen was Du dazu wissen musst.",
        "Für jeden der Programmieren lernen möchte. Java ist eine super Programmiersprache um mit dem Programmieren zu beginnen.",
        "Für jeden der einen Einstieg in die Kotlin Entwicklung machen will",
        "Alle die wissen wollen wie Computer funktionieren. Programmieren ist mehr als nur die Erstellung von Apps. Es ist zu verstehen wie ein Computer funktioniert. Das kann dir auch in anderen Bereichen helfen."
      ]
    },
    {
      "title": "Flutter for beginner in arabic",
      "url": "https://www.udemy.com/course/flutter-for-beginner-in-arabic/",
      "bio": "Learn flutter from zero",
      "objectives": [
        "Detailed setup instructions for Windows",
        "learn what is widget",
        "All basic widgets",
        "Simple Auth App",
        "how to treat with figma",
        "Mini NFT Marketplace app",
        "Audio player package",
        "Music App ( using audio player package )",
        "Quiz App",
        "Local stoarage ( Sqflite Package )",
        "Drosak app ( using sqflite package )",
        "Local stoarage ( Hive package )",
        "Note App ( Using Hive package )",
        "Isolate",
        "Isar Database"
      ],
      "course_content": {},
      "requirements": [
        "تحتاج ان تكون لديك اساسيات لغة الدارت حتى تبدأ مع هذه الدورة"
      ],
      "description": "سوف نتعلم طريقة صناعة تطبيقات الموبايل لاندرويد والايفون باستخدام الفلاتر من الصفر\n\n\nهذا الكورس محدث باحدث إصدار لفلاتر\n\n\nإن لم تكن لديك خبرة في صناعة تطيقات الاندويد او الايفون هذا ليس عائق  حيث سيكون مسار التقدم لدينا خطوة بخطوة من الصفر إلي ان تكون قادرا علي بناء تطبيقات  حقيقية بإذن الله\nمتطلبات الدورة معرفة مسبقة بلغة الدارت\n/////////////////////////////////////////////  what will learn   /////////////////////////////////////////////\nDetailed setup instructions for  Windows. ( تسطيب بيئة العمل )\nlearn what is widget\nAll basic widgets\nSimple Auth App\n(  تهتم بالتصميم البسيط بدون اي ملف فيجما  )\nhow to treat with figma\n( تقوم بمعرفه كيف تتعامل مع الملف الذي يعطيه لك المصمم من الصفر )\nMini NFT Marketplace app\n( تهتم بالتصميم الاحترافي باستخدام ملف فيجما  )\nMusic App\n( audio player package , تستخدم ايضا التصميم الاحترافي باستخدام ملف فيجما)\nQuiz App\n( تتعلم كيفيه التعامل مع اللوجيك في تطبيقك , تستخدم ايضا التصميم الاحترافي باستخدام ملف فيجما )\nLocal stoarage ( Sqflite Package )\n( تتعلم التعامل مع قاعده البينات الاشهر وجميع العلاقات الممكنة )\nDrosak app ( using sqflite )\nنقوم بعمل تطبيق علي ما تم دراسته في قسم قواعد البيانات الاكثر شهره من الصفر\nLocal stoarage ( Hive package )\nنتعلم كيفيه التعامل مع تلك الباكدك\nNote app ( using hive package )\nنقوم بعمل تطبيق علي ما تم دراسته في قسم\nHive Package من الصفر\nIsolate\nازاي اخلي التطبيق يعمل اخر من تاسك في نفس الوقت\nIsar Database\nالباكدج هي مزيج بين sqflite and hive",
      "target_audience": [
        "people who want to make app for ios and android"
      ]
    },
    {
      "title": "Swift3 從入門到精通",
      "url": "https://www.udemy.com/course/swift3-level1/",
      "bio": "iPhone 開發實戰攻略",
      "objectives": [
        "從完全不會寫程式，做出5款應用程式。",
        "學習如何撰寫 Swift 程式碼。",
        "學習紮實的程式觀念，從變數觀念教到類別、物件、協定與 MVC 程式設計。",
        "培養程式的能力，找到更好、更多金的工作。"
      ],
      "course_content": {},
      "requirements": [
        "無須程式背景，一般人就可以學習",
        "無需成為付費的 Apple 開發者，一般人就可以學習",
        "需要蘋果電腦(iMac、MacBook Air、MacBook、MacBook Pro，Mac Mini等)"
      ],
      "description": "您想要找一份寫程式的工作嗎？\n您想要開發自己的 iPhone App 嗎？\n歡迎來到「Swift 3 從入門到精通」課程。\n我是魏巍。Udemy 大中華地區 iPhone 開發課程合作講師。\n目前我已經上架了40 款 iPhone Apps。\n包括曾登上台灣區冠軍的「黃色小鴨爆炸了」，\n以及台灣區第二名的「指認嫌疑犯」。\n我撰寫書籍，也在資策會與各大專院校教授程式課程。\n從2014年 Swift 剛發表的時候我就開始研究這個語言。\n一直到現在，Swift 可說是爆炸性的成長。\n截至目前是全世界成長最快速的語言。\n而在2015年底 Swift 開源至今，\n也可以看到很多系統都開始採用 Swift。\n這個神奇的語言，可以寫前端程式，也可以寫後端資料庫、同時能夠配合 Linux 跟 Windows 使用。\n現在學習 Swift 正好！未來有很多工作都需要用到它！\n在Udemy 的課程中，\n會從最基礎的概念開始教，\n我真的都會解釋地超清楚。\n同時也會給同學很多練習機會。\n不僅教您概念，\n還真的帶您實際製作出5款應用程式。\n這門課是最豐富、最超值的中文教學，\n能夠省去您看英文書的時間。\n不管您是想要找工作、想要接案，\n或是自己想要做自己的 App，\n都能以最簡單最快速的方式達到目的。\n歡迎來學習全世界最爆炸成長的語言，\n一起來做自己的 iPhone 應用程式吧！\n\n\n製作 11 款 Apps\nHello World\n猜數字\n質數判斷\nColor Finder\n寵物年齡計算機\n購物清單\n小木琴\n使用者產生器\nRSS  閱讀器\n電子書\n快速撥號通\n\n\n課程內容包括:\n安裝 Xcode\n超詳細的 Swift 語言介紹\n超實用的 UIKit 元件知識\n完整的 AutoLayout 技巧\n多場景應用程式製作\n地圖使用\n多媒體使用\n表格視圖應用程式的開發\n連結網路解析 JSON  與 XML 資料\n實機測試與上架\n\n\n課程要求\n無須程式背景，一般人就可以學習。\n無需成為付費的 Apple 開發者，一般人就可以學習。\n需要蘋果電腦(iMac、MacBook Air、MacBook、MacBook Pro，Mac Mini等)。\n\n\n可以學到什麼？\n從完全不會寫程式，做出5款應用程式。\n學習如何撰寫 Swift 程式碼。\n學習紮實的程式觀念，從變數觀念教到類別、物件、協定與 MVC 程式設計。\n培養程式的能力，找到更好、更多金的工作。\n\n\n誰可以學？\n只要有興趣，每個人都可以學。\n想要學習寫程式的您。沒有寫程式的經驗也沒有關係。\n想要找一份寫程式的工作，轉換工作跑道的追夢者。",
      "target_audience": [
        "只要有興趣，每個人都可以學。",
        "想要學習寫程式的您。沒有寫程式的經驗也沒有關係。",
        "想要找一份寫程式的工作，轉換工作跑道的追夢者。"
      ]
    },
    {
      "title": "Curso Completo de Android Material Design",
      "url": "https://www.udemy.com/course/curso-android-material-design/",
      "bio": "Crie interfaces lindas e sensacionais com o Android Material Design e eleve suas habilidades em desenvolvimento Android.",
      "objectives": [
        "Crie aplicativos sensacionais com o Android Material Design de forma eficaz",
        "Saber como usar todos os recursos do Material Design no desenvolvimento Android",
        "Tornar-se um profissional em desenvolvimento Android mais qualificado"
      ],
      "course_content": {
        "Fundamentos do Material Design": [
          "Os 3 Princípios Básico",
          "Material Design é 3D",
          "As Propriedades",
          "Elevação & Sombras",
          "As Cores",
          "Ícones & Imagens",
          "Tipografia"
        ],
        "Layouts & Design": [
          "Introdução (Como funciona o papel)",
          "Unidades & Medidas",
          "Métricas & Keylines",
          "Estrutura de Layouts",
          "Design Responsivo"
        ],
        "Material Design Theme": [
          "Introdução",
          "Como funciona o Tema",
          "Definindo e Selecionando as Cores",
          "Mantendo a Compatibilidade"
        ],
        "Text Field": [
          "Introdução",
          "Adicionando o AppCompat EditText",
          "Adicionando o Text Input Layout",
          "Validando os campos",
          "Adicionando Contador e Mostrar Senha"
        ],
        "Buttons": [
          "Introdução",
          "Criando um Botão Elevado",
          "Criando um Flat Button",
          "Criando um Floating Action Button"
        ],
        "Toolbar": [
          "Introdução",
          "Configurando a Toolbar",
          "Adicionando o Menu",
          "Adicionando Click no Menu",
          "Customizando a Toolbar e Menu"
        ],
        "Navigation Drawer": [
          "Introdução",
          "Criando o Layout da Navigatio",
          "Criando o Header da Navigation Drawer",
          "Adicionando o Menu na Navigation Drawer",
          "Configurando a Navigation Drawer",
          "Implementando Click no Menu"
        ],
        "Selection Controls": [
          "Introdução",
          "Criando um Switch",
          "Criando um Checkbox",
          "Criando RadioButton e RadioGroup"
        ],
        "Dialogs": [
          "Introdução",
          "Criando uma Alert Dialog",
          "Criando Dialogs com Opções"
        ],
        "Snackbars & Toasts": [
          "Introdução",
          "Criando uma Snackbar",
          "Adicionando CoordinatorLayout e Botão",
          "Customizando a Snackbar",
          "Entendendo o Toast"
        ]
      },
      "requirements": [
        "Conhecimento básico da linguagem de programação Java",
        "Android Studio instalado no seu computador",
        "Saber como executar aplicativos Android no emulador ou no seu dispositivo Android",
        "Paixão em desenvolver aplicativos Android"
      ],
      "description": "*** Depoimentos de nossos Alunos sobre o Curso Completo de Android Material Design ***\n\"Muito bom! Eu estava esperando um curso assim, reunindo a documentação do Material Design e explicando seus detalhes. Aprovadíssimo! Obrigado Fillipe e time do AndroidPro!\"\n- Pablo Paschoaletto\n\"Mesmo cursando o Android Acellerate, eu não sabia que podia adicionar tantos recursos no design dos meus Apps! Estou aprendendo MUITO!\"\n- Alfredo Vieira Neto\n\"Muito bom o curso. Excelente didática.\"\n- Celina Ferreira Ribeiro\n*** 100% Baseado na Especificação do Android Material Design do Google ***\nUm curso completo 100% baseado na especificação de Android Material Design do Google dividido em aulas conceituais e práticas, para você se tornar um expert no assunto em apenas 2 semanas e elevar seus conhecimentos em desenvolvimento Android!\n\nO que é Android Material Design?\nCom o lançamento do Android Lollipop, o Material Design do Google começou a ser usado pelos melhores profissionais no desenvolvimento Android. Designers e desenvolvedores em todos os lugares estão entusiasmados com a nova linguagem de design que visa unir a grande linha de produtos do Google sob um rico conjunto de estilos e princípios de design.\nVocê quer criar aplicativos Android bonitos e sensacionais?\nE você quer desenvolve-los o mais suave possível, sem ter que ler inúmeros livros ou tutoriais pela Internet sobre desenvolvimento Android e Material Design?\nE claro: você só quer a mais recente tecnologia, software e técnicas - porque você tem grandes planos, grandes idéias - e vamos ser honestos, você é impaciente e quer ir mais rápido?\nTodos os conceitos do Android Material Design você pode encontrar aqui. Este curso é baseado em projetos, o que significa que você vai aprender criando aplicativos surpreendentes!\n\nNeste curso, você vai aprender tudo sobre Material Design para desenvolvimento Android!. No final deste curso, você poderá desenvolver seus próprios aplicativos Android a partir do zero, implementando a Especificação do Android Material Design.\nPor que utilizar o Material Design no desenvolvimento Android?\nCom milhões de aplicativos Android já publicados no Google Play Store, seus aplicativos devem ser surpreendentes e bonitos, de modo que ele tenha maior chance de ser considerado um aplicativo top. É por isso que este curso, é projetado especificamente para ensinar você as regras do Android Material Design no e como implementá-las para elevar seu nível no desenvolvimento Android.\n*** Conteúdos Novos Toda Semana e Promoções Todo Mês ***\nAlém de garantir um curso incrível, você receberá semanalmente novos conteúdos sobre desenvolvimento Android profissional por email e via anúncios na plataforma da Udemy.\nE também, todo mês fazemos promoções especiais de cursos para nossos alunos, além de receber acesso antecipado a novos cursos por um preço totalmente especial.",
      "target_audience": [
        "Se você quer desenvolver aplicativos Android que use Material Design",
        "Se você quer criar seus próprios aplicativos Android com Material Design",
        "Se você quer um emprego como desenvolvedor Android",
        "Se você quer criar incríveis aplicativos Android com o Material Design apenas por diversão",
        "Se você quer trabalhar como freelancer usando o Android Material Design",
        "Qualquer um que queira dominar o Android Material Design",
        "Se você quer elevar seus conhecimentos em desenvolvimento Android"
      ]
    },
    {
      "title": "Flutter 程式設計入門實戰 30 天 - Android 與 iOS App 應用程式開發攻略",
      "url": "https://www.udemy.com/course/hkt-flutter-part1/",
      "bio": "從零開始學 Flutter 程式設計，掌握 Flutter 一套程式碼，同時開發出 Android 和 iOS 雙平台應用程式核心技能",
      "objectives": [
        "此課程為基礎入門課程，適合「初學入門者」。",
        "想要開發自己的 Android 和 iOS 雙平台 APP 應用程式",
        "希望成為 Android 和 iOS 工程師",
        "掌握 Flutter 開發 Android 和 iOS 應用程式核心技能",
        "熟悉 IntelliJ IDEA 開發工具"
      ],
      "course_content": {
        "Day 1：為什麼要用 Flutter ?": [
          "Day 1-1：課程內容介紹",
          "Day 1-2：什麼是 Flutter ? 為什麼要用 Flutter ?",
          "Day 1-3：Flutter 框架架構介紹",
          "Day 1-4：Flutter 學習資源"
        ],
        "Day 2：安裝 Flutter 開發環境": [
          "Day 2-1：課程內容介紹",
          "Day 2-2：三種作業系統 Windows、MacOS 和 Linux 安裝 Flutter 開發環境介紹",
          "Day 2-3：下載 Flutter SDK 壓縮檔，並解壓縮到指定資料夾",
          "Day 2-4：「暫時性」設定 Flutter 指令路徑",
          "Day 2-5：「永久性」設定 Flutter 指令路徑",
          "Day 2-6：實際示範，如何設定 Flutter 指令路徑",
          "Day 2-7：「flutter doctor」，檢查需要安裝哪些軟體？",
          "Day 2-8：安裝 Android Studio 和 Xcode",
          "Day 2-9 : 安裝 Flutter IDE 整合程式碼編輯器 - IntelliJ IDEA",
          "Day 2-10 : Flutter SDK 版本升級/確認與頻道切換",
          "Day 2-11 : 新增 Android 手機模擬器設定",
          "Day 2-12 : 新增 iOS 手機模擬器設定"
        ],
        "Day 3 ：建立第一個 Flutter 應用程式專案": [
          "Day 3-1：課程內容介紹",
          "Day 3-2 : 建立第一個 Flutter 應用程式專案",
          "Day 3-3 : 專案應用程式安裝佈署到 iPhone / Android 手機模擬器上介紹",
          "Day 3-4 : Intellj IDEA 開發環境 - 專案面板與 Flutter 專案結構介紹",
          "Day 3-5 : Intellj IDEA 開發環境 - 程式碼編輯區與輸出資訊區介紹",
          "Day 3-6 : 第一個 Flutter 計數應用程式功能在模擬器上展示",
          "Day 3-7 : 新增 / 關閉專案和開啟舊有專案",
          "Day 3-8 : 總結今天的課程內容"
        ],
        "Day 4：第一支 Flutter 應用程式，Hello World": [
          "Day 4-1：課程內容介紹",
          "Day 4-2：簡單文字元件顯示 Hello World 應用程式",
          "Day 4-3：小技巧-快速排版格式化程式碼",
          "Day 4-4：Material Design 設計指南介紹",
          "Day 4-5：使用 Material Design 樣式主題，寫一個 Hello World 應用程式",
          "Day 4-6：Widget 元件樹階層關係圖介紹",
          "Day 4-7 ：Dart 基礎知識補充：Dart 類別 - 構造方法",
          "Day 4-8 ：Dart 基礎知識補充：方法之固定參數與可選參數方法"
        ],
        "Day 5：起手式程式碼": [
          "Day 5-1：課程內容介紹",
          "Day 5-2：Flutter 處理畫面的兩種狀態介紹",
          "Day 5-3：快速完成 StatelessWidget 和 StatefulWidget 邏輯程式區塊",
          "Day 5-4： StatelessWidget 和 StatefulWidget 差異比較",
          "Day 5-5：起手式程式碼介紹",
          "Day 5-6：檔案名稱命名風格與波動拳程式介紹"
        ],
        "Day 6：Container 容器元件": [
          "Day 6-1：課程內容介紹",
          "Day 6-2：child 屬性介紹",
          "Day 6-3：color 屬性介紹",
          "Day 6-4：alignment 屬性介紹",
          "Day 6-5：constraints 屬性介紹",
          "Day 6-6：學習如何將 Container 放在畫面正中間",
          "Day 6-7：margin 屬性介紹",
          "Day 6-8：padding 屬性介紹",
          "Day 6-9：補充：視覺輔助排版工具",
          "Day 6-10：補充：關閉右上角 Debug 緞帶標籤"
        ],
        "Day 7：水平 Row 和垂直 Column 容器": [
          "Dat 7-1: 課程介紹",
          "Day 7-2 : Row 和 Column 容器簡介",
          "Day 7-3 : Row 水平佈局容器使用方式",
          "Day 7-4 : Column 垂直佈局容器使用方式",
          "Day 7-5 : 用文字色塊來展示 Row 和 Column 的對齊方式"
        ],
        "Day 8：Center 置中容器": [
          "Day 8-1 : 課程介紹",
          "Day 8-2 : Center 置中元件使用方式",
          "Day 8-3 : 補充：FlutterLogo 元件使用方式"
        ],
        "Day 9：Text 文字標籤元件": [
          "Day 9-1: 課程介紹",
          "Day 9-2 : 純文字顯示在畫面正中間",
          "Day 9-3 : 換行顯示文字",
          "Day 9-4 : 設定 maxLines 顯示最多幾行限制",
          "Day 9-5 : 設定字體大小",
          "Day 9-6 : 設定字體顏色",
          "Day 9-7 : 文字設定顯示底線與刪除線",
          "Day 9-8 : 文字設定顯示粗體"
        ],
        "Day 10：Button 按鈕元件": [
          "Day 10-1: 課程介紹",
          "Day 10-2 : 點擊按鈕，觸發執行指定事件",
          "Day 10-3 : 更改按鈕顏色",
          "Day 10-4 : 更改按鈕內文字顏色",
          "Day 10-5 : 更改按鈕陰影大小值"
        ]
      },
      "requirements": [
        "由淺入深，循序漸進，無痛學習",
        "無需額外購買付費軟體",
        "使用電腦的初級能力",
        "需要一台 Mac、Linux 或 Windows 的電腦"
      ],
      "description": "此課程講義報名參加台灣 iThome 舉辦的第11屆「iT邦幫忙鐵人賽」，成功擄獲評審肯定，榮獲行動開發組<優選>作品佳績。\n此課程為基礎入門課程，適合「初學入門者」。\n若購買前沒看到此訊息，購買後覺得此課程不適合，三十天內接受無條件退款服務。\n\n\n課程說明\nFlutter 是由 Google 主導的 Dart 程式語言研發出來的開源跨平台軟體框架 (Framework)，可開發 Android、iOS APP 行動應用程式、Web 網頁服務、Windows、macOS、Linux 和下一世代神秘 Fuchsia 作業系統桌面應用程式。且具有相當高效率 120FPS 的渲染性能，豐富的UI元件，媲美 Native 原生效能體驗。眾多優勢之下使得 Flutter 成為今年最熱門的新技術。看得出來 Google 未來將透過 Flutter 一統江山。只需要用一套程式語言就可以在多平台上任遊運行。\n這門課程完全適合初學者，無須任何編寫過程式碼經驗，我們將從零基礎開始介紹，編寫程式語言需具備的基礎知識。完全從零開始，初學者無痛上手，將會了解如何使用 Dart 程式語言，由淺入深，快速掌握開發 Flutter 精髓與技巧。幫助您輕鬆快速建立 Flutter 開發基礎，早日順利邁向成為專家級一流開發人才。\n網路自學 Flutter 最常見的三大痛\n學習資訊東拼西湊，無法有系統很完整性的學習\n英文資料看得霧煞煞，一頭霧水\n觀念混淆，挫折感超重\n課程特色\n由淺入深，無痛學習 Flutter 的程式開發技巧\n一次掌握 Flutter 最常用的核心關鍵知識\n繁體中文教材，系統化的課綱編排，HKT (侯光燦) 講師影片教學",
      "target_audience": [
        "想使用 Flutter 開發 Android 和 iOS 雙平台應用程式"
      ]
    },
    {
      "title": "Язык программирования Swift",
      "url": "https://www.udemy.com/course/swift-basic/",
      "bio": "Детальный разбор основных конструкций языка Swift, основного языка для разработки iOS приложений.",
      "objectives": [
        "Овладеют основными навыками программирования на языке Swift"
      ],
      "course_content": {
        "Введение": [
          "Введение. О преподавателе, о курсе.",
          "Рекомендации по прохождению курса"
        ],
        "Язык программирования Swift": [
          "Типы данных, операции над типами данных, преобразование типов",
          "Типы коллекций",
          "Ветвления, if, switch",
          "Циклы",
          "Опционалы",
          "Тип данных Any",
          "Функции",
          "Замыкания",
          "Перечисления",
          "Обработка ошибок",
          "Структуры",
          "Классы",
          "Важный нюанс",
          "Вычисляемые свойства классов",
          "Наблюдатели за свойствами",
          "Статические методы и переменные",
          "Наследование классов",
          "Расширения классов",
          "Протоколы",
          "Делегирование"
        ],
        "Бонус 1: Опционалы в Swift": [
          "Опционалы - примеры использования",
          "Работа с опциональными переменными",
          "Работа с методами опциональных функций"
        ],
        "Завершение": [
          "Подведем итоги"
        ],
        "Бонус2: Паттерны проектирования в iOS": [
          "Введение - паттерны программирования",
          "Одиночка Singletone",
          "Фабрика Factory",
          "Абстрактная фабрика abstract factory",
          "Декоратор decorator",
          "Адаптер adapter",
          "Фасад facade",
          "Наблюдатель observer",
          "Состояние state",
          "Стратегия Strategy",
          "Прототип prototype",
          "Строитель builder",
          "Мост bridge",
          "Компоновщик compose",
          "Легковес Flyweight",
          "Заместитель proxy",
          "Цепь ответственностей Chain of Responsibility",
          "Команда Command",
          "Итератор Iterator",
          "Посредник Mediator Controller",
          "Снимок Memento",
          "Шаблонный метод",
          "Посетитель visitor",
          "Заключение"
        ]
      },
      "requirements": [
        "Mac Book (Или любое другое устройство на которое устанавливается Mac OS X)"
      ],
      "description": "В данном курсе мы разберем основные конструкции языка Swift, основного языка для разработки iOS приложений.\n\n\nДанный курс курс подходит как новичкам в iOS разработке, так и тем кто уже знаком с iOS разработкой и хочет углубить свои знания и навыки в программировании на языке Swift.\n\n\nСмотрите программу курса, для того чтобы понять какие темы будут разобраны в данном курсе.",
      "target_audience": [
        "Для начинающих iOS разработчиков",
        "Для iOS разработчиков, которые хотят углубить свои знания и навыки в языке Swift",
        "Для начинающих программистов, которые хотят стать iOS разработчиками"
      ]
    },
    {
      "title": "Flutter para principiantes: desde 0 y full proyectos - 2023",
      "url": "https://www.udemy.com/course/flutter-para-principiantes-desde-0-hasta-los-detalles/",
      "bio": "Inicia tu camino hacia Flutter de forma fácil y rápida.",
      "objectives": [
        "Cree aplicaciones atractivas, rápidas y de calidad nativa con Flutter",
        "Cree aplicaciones para iOS y Android con un solo lenguaje de programación (Dart)",
        "Cree una cartera de hermosas aplicaciones de Flutter para impresionar a cualquier reclutador",
        "Comprender todos los conceptos fundamentales del desarrollo de Flutter"
      ],
      "course_content": {
        "Introducción": [
          "Introducción general",
          "Respuesta a preguntas"
        ],
        "Instalaciones previas": [
          "Introducción a la sección.",
          "Instalando flutter",
          "Instalando visual studio code",
          "Configuraciones de visual studio code"
        ],
        "Entrenamiento en Dart": [
          "Introducción a la sección",
          "1 hola mundo desde dart",
          "1.2 Comentarios",
          "2 Tipos de datos básicos",
          "3 Listas",
          "4 Set",
          "5 Maps",
          "6 Const y final",
          "7 Operadores aritméticos",
          "8 Declarando funciones",
          "8.1 Void",
          "8.2 required",
          "9 Función de flecha",
          "10 Operadores lógicos, relacionales y condicionales",
          "11 Operador ternario",
          "12 Operadores de asignación",
          "13 bucle For",
          "14 forEach",
          "15 Bucle while do while",
          "16 Switch",
          "17 Manejo de excepciones",
          "18 Clases en dart",
          "19 Optimizando una clase",
          "20 Constructores con nombre",
          "21 Get y set",
          "22 Clases abstractas",
          "23 Definición de abstracto",
          "24 Future async await"
        ],
        "Introducción a flutter": [
          "Introducción a la sección",
          "¿Qué es flutter?",
          "Árbol de widgets",
          "1 Creando un proyecto",
          "2 Estructura de carpetas",
          "3 Primer hola mundo",
          "3 StatelessWidget",
          "4 StatefulWidget",
          "6 Mostrar datos por consola",
          "7 Pages",
          "8 Aplicación contador",
          "9 Separar funciones",
          "11 Imágenes locales y web",
          "12 Mostrar imágenes Svg",
          "13 Navegación entre paginas",
          "14 Push y pop",
          "14.1 Widget Container",
          "14.2 Padding en container",
          "14.3 BorderRadius en Container",
          "15 ListView",
          "16 ListView builder"
        ],
        "Proyecto #1 (Calculadora)": [
          "1 Creando el proyecto",
          "2 Organización",
          "3 Separando el btn",
          "4 Definiendo filas",
          "5 Clear",
          "6 Final",
          "Código fuente"
        ],
        "Teoría": [
          "Introducción a animaciones",
          "AnimatedOpacity",
          "Interpolaciones",
          "Constructor"
        ],
        "Proyecto #2 (One piece list)": [
          "Presentación del proyecto #2",
          "Temas a cubrir",
          "1 Creando el proyecto",
          "2 Creando el header",
          "3 Header",
          "4 Finalizando el header",
          "5 Widget Expanded",
          "6 Widget ClipRRect",
          "7 Escalado",
          "8 Divider",
          "9 BoxShadow",
          "10 Envolver en Row",
          "11 FloatingActionButton",
          "12 Navigator",
          "13 Detalle de pagina",
          "14 Filter Blur",
          "15 InfoTitle",
          "16 Finalizando el diseño",
          "17 Hero",
          "18 Escalando imagen destino",
          "19 Probando en modo web",
          "20 Creando animación personalizada",
          "21 Button Volver",
          "22 Final",
          "Código fuente"
        ],
        "Teoría (api)": [
          "¿Qué es una api?",
          "¿Qué es una api REST?"
        ],
        "Proyecto #3 (Pokeapi)": [
          "1 Creando el proyecto",
          "2_0 Desestructurar la api",
          "2 Consumo de la api",
          "3 InitState",
          "4 Agregando gradiente",
          "5 Validando valores null",
          "6 Adaptando a la pantalla",
          "7 childAspectRatio",
          "8 colores dinamicos",
          "9 Mostrar imágenes",
          "10 Mejorando colores"
        ]
      },
      "requirements": [
        "Conocimientos básicos de programación",
        "NO se requiere experiencia previa en desarrollo de iOS o Android",
        "NO se requiere experiencia previa en Flutter o Dart: ¡este curso comienza en cero!"
      ],
      "description": "¡Únase al curso de Flutter utilizando las versiones más recientes y aprenda a crear increíbles aplicaciones para iOS y Android!\nFlutter, un marco desarrollado por Google, le permite aprender un idioma (Dart) y crear hermosas aplicaciones móviles nativas en muy poco tiempo. Flutter es un SDK que proporciona las herramientas para compilar el código Dart en código nativo y también le brinda un amplio conjunto de elementos de interfaz de usuario preconstruidos y prediseñados (llamados widgets) que puede usar para componer sus interfaces de usuario.\n\n\nEsto es lo que incluye el curso:\nConceptos fundamentales de Flutter, Widgets con estado frente a sin estado, árbol de widgets, gestión de estado, animaciones, temas y mucho más.\nUna descripción general de los widgets incorporados y cómo puede agregar los suyos propios\nConceptos fundamentales de Dart, p. listas, mapas, enumeraciones, bucles, mixins, clases y mucho más.\nConceptos de Programación Orientada a Objetos (POO): El sistema de tipos, variables, funciones y métodos, herencia, clases y protocolos.\nEstructuras de control: uso de cláusulas If/Else, sentencias Switch y lógica para controlar el flujo de ejecución.\nEstructuras de datos: cómo trabajar con colecciones, como listas y mapas.\nRedes: cómo realizar llamadas asíncronas a la API, almacenar y recuperar datos de la nube y utilizar el formato JSON para la comunicación con el servidor.\nAdministración de estado: cómo usar setState, perforación de prop.\nAgregar hermosas animaciones y transiciones de página\nCarga de imagen\nEste curso inicia desde lo más básico, la estructura de una app flutter, como instalar todo lo necesario para trabajar, conocer los proyectos que usan código nativo y cómo realizar ciertas modificaciones, manejar los widgets más utilizados y lograr definir una arquitectura para tu proyecto.\nRECUERDE... ¡Estoy tan seguro de que le encantará este curso que estamos ofreciendo una garantía de devolución de dinero COMPLETA durante 30 días! Así que es una completa obviedad, regístrese hoy con CERO riesgo y TODO para ganar.",
      "target_audience": [
        "Si nunca ha programado antes en dart, tome este curso para aprender Dart con flutter para crear aplicaciones para iOS y Android.",
        "Si es un desarrollador de aplicaciones nativas, tome este curso para ver cuánto tiempo puede ahorrar creando aplicaciones iOS y Android",
        "Si ya ha probado Flutter, tome este curso para obtener un plan de estudios integral que cubra todos los aspectos importantes del desarrollo de Flutter."
      ]
    },
    {
      "title": "Die Swift 5 & iOS 13 Masterclass - App Entwicklung von A - Z",
      "url": "https://www.udemy.com/course/swift-5-ios-13-masterclass/",
      "bio": "Lerne Programmieren mit Swift 5.1, SwiftUI und das Entwickeln von iOS 13 Apps, Dark Mode, SF Symbols und vieles mehr",
      "objectives": [
        "Grundlagen von Swift 5.1 zu verstehen",
        "Fortgeschrittene Programmierkonzepte mit Swift 5.1 zu beherrschen",
        "SwiftUI Grundlagen und fortgeschrittene Themen",
        "Eigene Apps komplett mit SwiftUI zu entwickeln",
        "Verschiedene Frameworks zu verwenden",
        "iOS 13 Apps zu entwickeln, designen und im App Store zu veröffentlichen",
        "Grundlagen des User Interface Designs in iOS 13 zu verstehen",
        "SF Symbols verwenden, Dark Mode unterstützen und barrierefreie Apps zu entwickeln",
        "User Interface & User Experience Design und Prototyping (Adobe XD)"
      ],
      "course_content": {
        "Einleitung": [
          "Einleitung",
          "Hinweis an alle Fortgeschrittenen und Studenten aus dem Vorgängerkurs",
          "Hinweis zum Tempo des Kurses",
          "Updates & Ressourcen Download"
        ],
        "Swift Grundlagen Teil 1 - Werte, Typen und einfache Operatoren": [
          "Einführung in Werte, Variablen und Konstanten in Swift",
          "Werte, Variablen und Konstanten im Swift Playground Teil 1",
          "Werte, Variablen und Konstanten im Swift Playground Teil 2",
          "Einführung in Typen in Swift",
          "Zeichenketten in Swift - Strings",
          "Ganze Zahlen in Swift - Ints",
          "Kommazahlen in Swift - Doubles",
          "Sammlungen in Swift Teil 1 - Arrays Einführung",
          "Sammlungen in Swift Teil 2 - Arrays Fortsetzung",
          "Sammlungen in Swift Teil 3 - Dictionaries"
        ],
        "Swift Grundlagen Teil 2 - Control Flow und fortgeschrittene Operatoren": [
          "Einführung in Control Flow - Was ist das überhaupt?",
          "Bedingungen in Swift Teil 4 - Bereichsoperatoren mit Switch",
          "Bedingungen in Swift Teil 1 - Einführung in If",
          "Bedingungen in Swift Teil 2 - Fortsetzung If",
          "Bedingungen in Swift Teil 3 - Einführung in Switch",
          "Bedingungen in Swift Teil 4 - Fortsetzung Switch",
          "Einführung in das Konzept von Schleifen",
          "Schleifen in Swift Teil 1 - Einführung in die For-In Schleife",
          "Schleifen in Swift Teil 2 - Fortsetzung For-In Schleifen",
          "Schleifen in Swift Teil 3 - Einführung in While und Repeat-While Schleifen",
          "Grundlagen Quiz"
        ],
        "Swift Grundlagen Teil 3 - Funktionen": [
          "Einführung in Funktionen - Was ist das überhaupt?",
          "Funktionen mit Parametern",
          "Funktionen mit Rückgabewerten",
          "Quiz zu Funktionen"
        ],
        "Objektorientiertes Programmieren mit Swift - Klassen, Structs und Enumerationen": [
          "Einführung in Klassen in Swift",
          "Klassen mit Properties",
          "Klassen mit Methoden",
          "Initializer für Klassen Teil 1",
          "Initializer für Klassen Teil 2",
          "Vererbung von Klassen Teil 1",
          "Vererbung von Klassen Teil 2",
          "Einführung in Structs in Swift",
          "Einführung in Enumerationen in Swift",
          "Enumerationen mit Raw Values und Associated Values in Swift",
          "Quiz zu Klassen, Structs und Enums",
          "Recap Grundlagen"
        ],
        "Xcode 11 Überblick": [
          "Einführung in Xcode 11",
          "Die Navigation in Xcode 11",
          "Der Editor-Bereich in Xcode 11",
          "Der Utility-Bereich in Xcode 11",
          "Der Debugger in Xcode 11",
          "Die Toolbar in Xcode 11",
          "Was ist neu in Xcode 11?"
        ],
        "Was gibt es Neues in Swift 5 und Swift 5.1?": [
          "Was gibt es Neues in Swift 5?",
          "Was gibt es Neues in Swift 5.1?"
        ],
        "Unsere erste eigene iOS App - Idle Timer": [
          "Vorstellung unserer ersten, eigenen App - Was entwickeln wir hier zusammen?",
          "Einführung in ein UIKit Projekt in Xcode",
          "Einführung in Storyboards",
          "Einführung in Autolayout und Constraints",
          "Lösung der Autolayout Challenge",
          "Idle Timer App - Layout",
          "Idle Timer App - Bilder und UIImageViews",
          "Exkurs zu optionalen Werten",
          "Idle Timer App - Bilder austauschen",
          "Idle Timer App - Ein Outlet für ein Constraint erstellen um Größen zu ändern",
          "Idle Timer App - Einen Timer in Swift verwenden",
          "Idle Timer App - Funktionalität vervollständigen",
          "Idle Timer App - Mini Bilder anzeigen",
          "Idle Timer App - App vervollständigen"
        ],
        "Herausforderung - Eine eigene App ganz alleine entwickeln!": [
          "Vorstellung des Ziels der Herausforderung - Was soll entwickelt werden?",
          "Challenge in Textform",
          "Lösung Teil 1 - Funktionalität",
          "Lösung Teil 2 - Layout und Schüttelgeste (Bonus)"
        ],
        "Verbesserungen der Idle Timer App - Animationen und mehr": [
          "Bildwechsel beim UIImageView animieren",
          "Exkurs zu den Grundlagen von Closures"
        ]
      },
      "requirements": [
        "Computer mit macOS (idealerweise 10.15 Catalina oder neuer)",
        "Xcode 11 oder neuer",
        "Grundlegende Englischkenntnisse sind nicht erforderlich, aber hilfreich"
      ],
      "description": "Die Entwicklung von Apps für iOS Geräte ist ein spannendes und beliebtes Thema und es gab nie einen besseren Zeitpunkt, um einzusteigen. Apple’s neue Programmiersprache Swift ist mittlerweile sehr verbreitet und wird ständig besser. Mitte 2019 hat Apple zudem ein neues Framework für das Layout und das Entwickeln von Apps vorgestellt mit dem kinderleicht  und Plattformübergreifend Apps für iOS, iPadOS, watchOS und macOS erstellt werden können.\nIn diesem Kurs lernst du:\nDie Grundlagen von Swift 5.1\nDas Entwickeln von Apps für iOS 13\nUIKit und Storyboards zu verwenden\nDas neue SwiftUI Framework komplett zu verstehen und vollständige Apps damit zu entwickeln\nDie Unterschiede zwischen UIKit und SwiftUI zu verstehen\nUser Interface & User Experience Design und Prototyping mit Adobe XD\nNatürlich ist für jeden Playground, jedes Projekt, jeden Prototypen der komplette Quellcode und sämtliche Ressourcen wie Bilder und Daten für dich zum Download verfügbar und kann komplett frei und ohne Einschränkungen verwendet werden.\nNeben der Programmierung und dem Entwickeln der Apps gibt es aber noch viele weitere Teile dieses Kurses, die dir dabei helfen werden, in dem Thema wirklich professionell und erfolgreich zu arbeiten. So sprechen wir beispielsweise über User Interface und User Experience Design und wie wir mit kostenloser Software (Adobe XD) schnell und einfach - ganz ohne Code - Prototypen unserer Apps erstellen können aber auch Animationen visualisieren.\nSchon im Vorgänger dieses Kurses konnten wir tausenden von Studenten dabei helfen, ihre Karriere in der iOS Entwicklung zu starten und eigene Apps zu entwickeln. All die Erfahrung und noch viel mehr stecken wir jetzt in diesen Kurs und bieten dir damit das perfekte Gesamtpaket für Swift Programmierung und die Entwicklung von iOS Apps - egal ob du noch überhaupt keine Kenntnisse in der Materie hast oder schon ein fortgeschrittener Entwickler bist, der sich einfach nur für SwiftUI und die Neuerungen in iOS 13 interessiert.\nWichtiger Hinweis:\nDieser Kurs wird aktuell noch um viele weitere Kapitel und vor allem Apps erweitert. Ihr könnt euch in Zukunft auf Kapitel zu Audio, Video, Fotos, persistenter Datenspeicherung, Online Funktionalitäten, App Store Veröffentlichung und Optimierung und vielen mehr freuen. Zu SwiftUI sind aktuell schon über 6 Stunden Inhalt in diesem Kurs und auch hier werden wir noch weitere Apps zusammen entwickeln, also sei jetzt einer der Ersten im neuen Kurs!\nBonus:\nZusätzlich zum neuen Inhalt des Kurses bekommst du hier das komplette Tutorial und sämtlichen Quellcode für die Swifty Recipes App mit Firebase und komplexem und professionellem Layout aus dem Vorgänger dieses Kurses dazu!",
      "target_audience": [
        "Programmieranfänger",
        "Angehende App Entwickler",
        "Fortgeschrittene Programmierer",
        "App Entwickler"
      ]
    },
    {
      "title": "Desarrollo de Aplicaciones en Android Studio con Kotlin",
      "url": "https://www.udemy.com/course/desarrollo-de-aplicaciones-en-android-studio-con-kotlin/",
      "bio": "Aprende Kotlin desde cero para desarrollar aplicaciones Android con bases de datos SQLite, Realm y Firebase.",
      "objectives": [
        "Arenderan a manejar el laenguaje Kotlin desde las bases",
        "Utilizar Itellij IDEA",
        "Instalar las herramientas necesarias para comenzar",
        "Conocer el IDE de Android Studio",
        "Uso de botones, contenedores, layouts, edit text y demás herramientas de diseño disponibles en Android Studio",
        "Construir tu primer aplicacion móbil con Android y Kotlin",
        "Hacer llamadas y envió de emails",
        "Crear apps multi idioma",
        "Persistencia de datos con Shared Preferences",
        "Crear un crud (create,read,update,delete) con SQLite",
        "Utilizacion de firebase para crear un chat",
        "Crear crud con la plataforma Realm"
      ],
      "course_content": {
        "Introducción e instalación": [
          "Presentación sección 1",
          "Introducción a Kotlin",
          "Instalar JDK en windows",
          "Configurar variables de entorno de JDK",
          "Instalar Intellij IDEA en windows",
          "Instalar JDK en mac",
          "Instalar Intellij IDEA en mac"
        ],
        "Introducción a kotlin": [
          "Presentación sección 2",
          "Hola Mundo",
          "Comentarios",
          "Variables",
          "Constantes",
          "Valores nulos",
          "Cambiar tipo de datos",
          "Pedir datos en consola",
          "Concatenaciòn",
          "Operadores aritméticos y de comparación",
          "Listas",
          "Arrays",
          "If",
          "If else",
          "Else if",
          "If anidados",
          "For",
          "While",
          "When",
          "Try Catch",
          "Funciones",
          "Clases"
        ],
        "Android studio": [
          "Presentación sección 3",
          "Instalación en windows",
          "Instalación em Mac",
          "SDK manager",
          "Familiarizándonos con el IDE",
          "Estructura de una aplicación",
          "Hola mundo y emulador",
          "Programando nuestro primer boton",
          "¿Qué es una actividad?",
          "Herramientas",
          "Envío de datos entre actividades",
          "Constrains",
          "Linearlayout",
          "ImageView",
          "Radios",
          "Checkbox",
          "Spinner",
          "Listas",
          "Hacer llamada",
          "Enviar email",
          "WebView",
          "Strings",
          "Traducir app",
          "SplashScreen",
          "Colores",
          "Icono"
        ],
        "Persistencia de datos con: Shared Preferences": [
          "Presentación sección 4",
          "Shared preferences",
          "Proyecto parte I",
          "Proyecto parte II"
        ],
        "Persistencia de datos con: SQLITE": [
          "Presentación sección 5",
          "Crear base de datos",
          "Guardar datos",
          "Mostrar datos con listview",
          "Preparar para enviar datos",
          "Enviar registros",
          "Recibir registros",
          "Editar",
          "Eliminar"
        ],
        "Persistencia de datos con: Realm": [
          "Introducción",
          "Configurar realm",
          "Clase RealmObject",
          "Guardar primer registro",
          "Recorrer registros y mostrar en consola",
          "Crear id autoincrementable",
          "Mostrar datos en list view simple",
          "Plantilla para vista personalizada",
          "Crear adaptador",
          "Llenar lista personalizada",
          "Preparar para enviar datos a otra actividad",
          "Recibir y mostrar datos",
          "Editar",
          "Borrar",
          "Crear alerta de confirmación"
        ],
        "Bases de datos en tiempo real con Firebase": [
          "Introducción a firebase",
          "Introducción a JSON",
          "Alternativa a emulador con dispositivo y vysor",
          "Conectar Android Studio con Firebase",
          "Diseño de login y registrar",
          "Crear código de registro",
          "Seleccionar avatar",
          "Probar registro",
          "Código de login",
          "Clase userDatos",
          "Crear adaptador",
          "Diseño de la lista",
          "Enviar mensaje",
          "Mostrar mensajes",
          "Crear menú"
        ]
      },
      "requirements": [
        "Manejo básico de computadora",
        "Conocimientos básicos de programación",
        "Computadora pc, mac o linux con 4GB minimo de RAM, recomendado 8GB"
      ],
      "description": "Google ha implementado un nuevo lenguaje para crear aplicaciones con Android, lo cual nos lleva a desarrollar este fantástico curso en el que conocerás las bases para emprender con este nuevo lenguaje llamado Kotlin.\nEste lenguaje es mucho más sencillo que java, lo que hace que desarrollar aplicaciones se vuelva más accesible. Afortunadamente no es necesario que cuentes con conocimientos en java, ya que te enseñaremos paso a paso el funcionamiento de Kotlin, desde cómo crear un hola mundo, hasta como operar con clases y crear tus propias aplicaciones. Además, veremos todo lo necesario para familiarizarnos con el IDE de Android Studio en su versión especial que ya incluye Kotlin.\nSin dejar de lado uno de los temas más importantes y que la mayoría de los alumnos buscan, esto es las bases de datos con Shared Preferences, SQLite, Realm y Firebase (tiempo real) realizando ejemplos sencillos, prácticos y comprensibles para que el código sea lo más específico posible.\nAdemás, este curso se mantendrá actualizado constantemente, agregando nuevas clases para que tu conocimiento este siempre en crecimiento y a la vanguardia.",
      "target_audience": [
        "Cualquiera que desee crear aplicaciones en Android con Kotlin"
      ]
    },
    {
      "title": "Android com Firebase - Criando um app avançado",
      "url": "https://www.udemy.com/course/androidfirebase/",
      "bio": "Aprenda a usar Firebase utilizando os recursos: Realtime Database, Authentication, Storage, Android, Java e muito mais.",
      "objectives": [
        "Criar um com Inserção, Alteração, Exclusão, Consulta (CRUD)",
        "Configurar seu App para utilizar Firebase",
        "Persistir dados no Firebase ( Armazenar Dados)",
        "Fazer um Crud com Firebase",
        "Exibir uma Imagem com Firebase + Picasso",
        "Criar um Design atrativo para o seu app",
        "Acesso a câmera dos dispositivos",
        "Acesso a fotos armazenadas no dispositivos",
        "Sistemas de Login com Email e Senha",
        "Upload de Fotos para o Storage do Firebase",
        "Shared Preferences",
        "Definindo permissões para utilização de recursos do dispositivo Android",
        "Criação de Classes Java (Conceitos de Orientação a Objetos)"
      ],
      "course_content": {
        "Introdução": [
          "Introdução e Apresentação",
          "Avaliação Udemy",
          "Configurando Firebase no Android Studio",
          "Criando Design (XML) Activity Login e Activity Cadastro de Usuários",
          "Autenticação (Auth) Login com Firebase e Criação de Classes",
          "Verificando se usuário está logado e criando Principal Activity",
          "Desenvolvendo menu para PrincipalActivity",
          "Criando CadastroActivity - Parte 1",
          "Criando CadastroActivity - Parte 2 - Insere + Try Catch",
          "Criando CadastroActivity - Parte 3 - @Exclude senha",
          "Principal Activity - Identificando Tipo de Usuário Logado - Parte 1",
          "Principal Activity - Identificando Tipo de Usuário Logado - Parte 2",
          "Criando Shared Preferences para Auxilio na Autenticação",
          "Trabalhando LoginActivity com Shared Preferences",
          "Cadastro de Usuários com Shared Preferences",
          "Trabalhando com Shared Preferences - Testes + Sincronização",
          "Criação Menu atendente + PrincipalActivity + UploadFotoActivity",
          "UploadFotoActivity - (Fazer Upload Fotos Firebase) - Parte 1",
          "UploadFotoActivity - Implementando (Fazer Upload Fotos Firebase) - Parte 2",
          "UploadFotoActivity Implementando - Parte 3 (Evento Clique e abrir Tela)",
          "UploadFotoActivity - Parte 4 (Testes do App e Correção de Bug Imagem)",
          "Permissões versões novas Android - Método Implementado no MainActivity",
          "Melhorando o design - activity_cadastro_usuario - parte 1 (Background)",
          "Melhorando o design activity_cadastro_usuario - parte 2 (Bootstrap)",
          "Melhorando o design main_activity - Parte 1 (XML Bootstrap)",
          "Design main_activity - Parte 2 (Java Boostrap)",
          "Apresentando próximos conteúdos +Corrigindo Bugs ScrollView + UploadFotoActivity",
          "Criando a Activity CadastroUsuarioComumActivity - Parte 1",
          "Criando a Activity CadastroUsuarioComumActivity - Parte 2",
          "Criando uma lista de pratos do cardápio - lista_todos_produtos",
          "Trabalhando com XML da ActivityCardapio + Criação de Adapter p/ RecyclerView",
          "Desenvolvendo CardapioActivity",
          "Testando Aplicativo e Corrigindo bug",
          "Adicionando Menu para os usuários Comuns do App",
          "Alterações no XML do PrincipalActivity",
          "Alterações PrincipalActivity.Java",
          "MainActivity - Função para identificar e redirecionar os usuários",
          "Correção Bug MainActivity desenvolvida aula anterior.",
          "Desenvolvendo Design PrincipalActivityComum",
          "Criando função de Recuperar senha no Firebase",
          "Mostra e Ocultar senha MainActivity - Design Android",
          "Configurando o Menu de usuário Comum",
          "Criando Principal Activity Atendente",
          "Corrigindo Dupla renderização de background"
        ],
        "Atualizando Projeto para novas versões do Firebase, Android studio e bibliotecas": [
          "Migrando projeto para versão mais nova do Android e do Firebase",
          "Configurando a nova versão do Firebase no novo Projeto Android",
          "Configurando o Bootstrap nova versão no Projeto.",
          "Reconfigurando Activity Main",
          "Importando e Reconfigurando as Classes",
          "Personalizando Activitys Importadas",
          "Resolvendo Bugs da Importação",
          "Trabalhando com sidevabar e CadastroUsuarioActivity",
          "Trabalhando com Gradle, importando Libs e ActivityPrincipal",
          "Atualizando PrincipalComumAcitivty e UploadFotoActivity",
          "Realizando Testes de Login e migrando PrincipalActivity",
          "Migração da PrincipalActivity, PrincipalActivityComum e PrincipalActivityAtenden",
          "Migração da PrincipalActivity, PrincipalActivityComum e PrincipalActivityAtenden",
          "Readaptando Background Image do App"
        ],
        "Etapa 3 - Continuação após atualização das versões das bibliotecas": [
          "Criando a Activity de Perfil do usuário - Parte 1",
          "Criando a Activity de Perfil do usuário - Parte 2",
          "Criando a Activity de Perfil do usuário - Parte 3 (invocando os métodos)",
          "Metodo Excluir usuário",
          "AlertDialog Personalizado.",
          "Criando Activity Editar Perfil de Usuário",
          "Criando Activity Editar Perfil de Usuário - Parte 2",
          "EditarPerfilUsuario - Recebendo dados para alteração",
          "EditarPerfilUsuario - Validando as alterações no firebase",
          "Corrindo Bug da aula anterior"
        ]
      },
      "requirements": [
        "Noção Básica de Android",
        "Lógica de Programação",
        "Conhecimentos básicos em Java"
      ],
      "description": "Nesse curso iremos aprender a criar Apps Android, utilizando o poderoso Firebase, o Firebase (Ferramenta da Google) está cada vez mais sendo requisitado pelos profissionais da área de desenvolvimento, seja ela Mobile ou Web.\n\nPor meio desse curso e de seu esforço você poderá ingressar na área de desenvolvimento de Apps para Android.\nDados de Março de 2017 revelam que o Android superou todas as expectativas e se tornou o sistema mais utilizado do PLANETA, superando Windows, IOS, Windows Phone e todas as demais, ou seja, sabendo programar para Android você terá milhões de pessoas disponíveis para utilizar os seus apps, essa é uma grande oportunidade de mudar sua vida.Esse curso é indicado para quem deseja entrar para o mundo do desenvolvimento de Apps com segurança e praticidade.\nQuais são os requisitos?\nSaber o básico de Android\nLógica de Programação\nBásico de Java\nO que serei capaz de fazer depois deste curso?\nConfigurar seu app para utilizar o Firebase;\nDesenvolver Apps em Android, utilizando a linguagem Java e um dos mais poderosos, completo e seguro Back-End da atualidade.\n\n\nQual é o público-alvo?\n\nQualquer pessoa que deseja entrar para o universo do desenvolvimento para Android, podendo mudar a sua vida.",
      "target_audience": [
        "Qualquer pessoa que queira aprender a criar um pequeno App em Android utilizando Firebase para armazenar suas informações.",
        "Pessoas que desejam começar a trabalhar e ganhar dinheiro com desenvolvimento de Apps para Android."
      ]
    },
    {
      "title": "Aplicativos Xamarin com WEB Services API",
      "url": "https://www.udemy.com/course/aplicativos-xamarin-com-web-services-api/",
      "bio": "Aplicativos Android, IOS e Windows Phone",
      "objectives": [
        "Desenvolver aplicativos com WEB Services API"
      ],
      "course_content": {
        "Iniciar aqui": [
          "Introdução",
          "Criando o Projeto APP",
          "Instalando os Recursos",
          "Instalando Componentes do Visual Studio",
          "Criando Projeto Multiplataforma",
          "Ativando depuração para celular",
          "Abrindo App no celular",
          "Modificando o APP no celular",
          "Criando a tela do Login",
          "Componentes para o Login",
          "Abrindo a tela de Login",
          "Botões na tela de Login",
          "Personalizando botões",
          "Incluindo Paoctes",
          "Programando o Login",
          "Classe de WEB API",
          "Testando Login via API",
          "Classe dos Usuários",
          "Requisição para o Login",
          "Passando o caminho da API",
          "Tratando erros com try",
          "Funcionamento da WEB API",
          "Validação de Email",
          "Classe de Utilidades",
          "Página inicial do App",
          "Navegando entre páginas",
          "Abrindo página inicial",
          "Buscando foto e nome do usuário",
          "Mostrando o usuário logado",
          "Habilitando e desabilitando botões",
          "Pacotes do SQLite",
          "Implementando Interfaces",
          "Dependencias para o Android",
          "Conexão com SQL",
          "Classe genérica para Crud",
          "Acessando o banco de dados",
          "Verificando se o usuário existe",
          "Acessando sistema diretamente",
          "Fazendo logout com usuários",
          "Página para cadastrar usuários",
          "Criando componentes para cadastro",
          "Validando campos de cadastros",
          "Programando registro de usuários",
          "Consumindo serviços com API",
          "Corrigindo salvar WEB API",
          "Salvando e editando usuário API",
          "Testando WEB API",
          "Alterando campo de Senha",
          "Cadastrando usuário VIA API",
          "Alterando referências",
          "Inserindo ícone no aplicativo",
          "Ordem Correta dos Cursos de ASP NET MVC e Xamarin"
        ]
      },
      "requirements": [
        "É preciso acompanhar antes o curso de Sistema de Alunos com ASP NET MVC"
      ],
      "description": "O curso completo de Aplicativos Xamarin com WEB Services possui 51 video aulas, neste curso é mostrado o passo a passo de como desenvolver aplicativos para Android, IOS e WIndows Phone usando web api e web services para acessar um sistema hospedado e buscar informações do banco de dados entre outras, é preciso fazer antes o curso de ASP NET MVC Sistema de Alunos, pois este aplicativo é baseado no sistema e na API criada neste curso, adquira já o curso e crie os aplicativos a partir de seus sistemas web.",
      "target_audience": [
        "Todo e qualquer aluno interessado em desenvolver aplicativos para mobile"
      ]
    },
    {
      "title": "Изучаем Flutter",
      "url": "https://www.udemy.com/course/learn_flutter/",
      "bio": "Изучите Flutter для разработки мобильных приложений под iOS и Android",
      "objectives": [
        "Создавать приложения для iOS и Android, используя только один язык программирования (Dart)",
        "Понимать основные концепции Flutter"
      ],
      "course_content": {},
      "requirements": [
        "Знание языка программирования Dart"
      ],
      "description": "Важное сообщение для студентов из России\nВ связи с ограничениями работы систем Visa и Mastercard скорее всего вы не сможете оплатить этот курс и/или получить на него скидку. Как можно обойти это ограничение вы можете узнать\nв телеграм-канале \"Dart и Flutter\". Ссылку на него вы можете посмотреть в моем профиле преподавателя под фотографией есть кнопка \"Сайт\". В этом телеграм канале вы сможете задать любые вопросы, а также узнать о возможностях приобретения курсов (информация будет в закрепленном сообщении)\n\nВсем привет! Добро пожаловать на курс \"Изучаем Flutter\".\n\n\nПочему Flutter?\nСоздавайте кроссплатформенные красивые нативные приложения в рекордно короткие сроки. Flutter - это мобильная платформа Google для создания красивых и быстрых нативных приложений. Flutter очень продуктивен и предлагает богатый набор виджетов, который позволяет легко создавать приложения под iOS и Android с одной кодовой базой. Это означает, что вместо того, чтобы изучать Objective-C или Swift для создания приложений для iOS и Java или Kotlin для создания приложений для Android, теперь вы можете использовать Flutter Mobile Development Framework для создания приложений, которые запускают Native на устройствах iOS и Android, используя Общий язык программирования Dart.\n\n\nЧто будет в курсе?\nВ этом курсе мы изучим все, что нужно, чтобы перейти на новый Framework. По его окончании, вы уверенно овладеете данным Framework'ом. Шаг за шагом мы будем продвигаться к цели. Мы начнем со стандартного Hello World и постепенно изучим его основы.\nВ курсе есть домашние задания, чтобы вы не просто просмотрели видео, но и закрепили весь материал на практике.\n\n\nЧто мне делать, если я не знаю Dart, на котором написан фреймворк Flutter?\nЕсли у вас есть проблемы со знанием Dart, не переживайте, вы можете здесь же найти мой курс\n\"Изучаем Dart\", в котором мы изучим все, что нужно для прохождение этого курса.\n\n\nЖелаю Вам успехов в обучении!\nКонстантин Кокорин!",
      "target_audience": [
        "Разработчики, желающие создавать приложения с помощью Flutter"
      ]
    },
    {
      "title": "Curso intensivo de Laravel y Android usando JWT y Kotlin",
      "url": "https://www.udemy.com/course/curso-intensivo-de-laravel-y-android-usando-jwt-y-kotlin/",
      "bio": "Desarrollemos 1 app de Reserva de Citas! Gestión, reportes, API, JWT, notificaciones, Programación Funcional y mucho más",
      "objectives": [
        "Aprenderás a crear tus propias aplicaciones Android nativas",
        "Conocerás qué es y como funciona una API",
        "Trabajarás de forma organizada usando Android Studio",
        "Mejorarás tus conocimientos de Java y Kotlin",
        "Conocerás cómo implementar JSON Web Tokens (en Laravel y Android)"
      ],
      "course_content": {
        "Introducción": [
          "Bienvenida y recomendaciones",
          "Mockups (planteamiento inicial)"
        ],
        "Laravel: Configuración y Diseño inicial": [
          "Laravel: Configuración local",
          "Laravel: Qué versión usar",
          "Migraciones y Autenticación",
          "Diseño base para nuestra app web",
          "Vistas, rutas y controladores",
          "Integrar plantilla Argon (Login)",
          "Formulario de registro y menú superior",
          "Múltiples directivas yield y section",
          "Layout general para las vistas de Panel",
          "Directiva include y menú lateral",
          "Dropdown menu"
        ],
        "Laravel: Gestión de datos": [
          "Especialidades",
          "Validaciones de lado del cliente y servidor",
          "Verbo PUT (editar especialidades)",
          "Verbo DELETE (eliminar especialidades)",
          "Flashed Session Data (notificaciones)",
          "Doctor Resource",
          "Seeders, Model factories y Faker",
          "Query Scopes",
          "Mass assignment y edit",
          "Métodos update y destroy",
          "Patient Resource"
        ],
        "Laravel: Roles y seguridad": [
          "Menú por rol",
          "Proteger rutas usando Middlewares",
          "Organizando controladores en carpetas"
        ],
        "Laravel: Horarios, citas y especialidades": [
          "Ruta y vista (diseño inicial)",
          "Modelado y lógica para guardar",
          "Repositorio en Github (Proyecto Laravel)",
          "Mostrar horario (Carbon y método map)",
          "Consistencia en las horas",
          "Formulario: Registrar cita médica",
          "Relación muchos a muchos",
          "Selección múltiple en un <select>",
          "Gestionando relaciones Many to Many",
          "Médicos según especialidad",
          "Select dinámico y límites al DatePicker",
          "Horas de atención por intervalos",
          "Radio Buttons y Alert dinámicamente",
          "Registro de cita médica (Web)",
          "Repaso y Service Providers",
          "Bloquear horas según reserva de citas",
          "Validación de horas (evitar colisión)"
        ],
        "Laravel: Estados de una cita": [
          "Campo status y relaciones entre modelos",
          "Lógica para los estados y siguientes pasos",
          "Citas organizadas en tabs",
          "Cancelación de citas médicas",
          "Detalles de cancelación",
          "Login como página de inicio",
          "Consultas según el rol de usuario",
          "Include según el rol de usuario",
          "Detalles de citas para el rol administrador",
          "Confirmar cita"
        ],
        "Laravel: Gráficos con JS": [
          "Introducción a los reportes gráficos",
          "Highcharts line (gráfico de líneas)",
          "Highcharts column (gráfico de barras)",
          "Seeder de Appointments",
          "Formato adecuado para la respuesta JSON",
          "Filtro: Actualizar según rango de fechas"
        ],
        "Android: Vistas": [
          "Instalar Android Studio",
          "Creando un proyecto nuevo",
          "Estructura de carpetas",
          "AVD Manager",
          "Diseñando una primera vista",
          "RegisterActivity y fondo gradiente",
          "Diseño de MenuActivity",
          "Diseño de CreateAppointment",
          "Pasos en el registro de Citas",
          "Cómo poblar un Spinner (asignar opciones)"
        ],
        "Kotlin, como alternativa a Java": [
          "Introducción a Kotlin",
          "Primer proyecto Kotlin",
          "Data Classes",
          "Operators",
          "Extension Functions & Properties",
          "Infix functions",
          "Getters & Setters",
          "Expression, Statement & Block",
          "If (como statement y como expression)",
          "When",
          "Null safety",
          "When - Parte 2",
          "For, Ranges & forEach",
          "Functional Programming"
        ],
        "Android: DatePicker y otros detalles": [
          "DatePickerDialog",
          "Animate layout changes",
          "Agregar RadioButtons dinámicamente",
          "Múltiples RadioButtons y cómo eliminarlos",
          "RadioButtons en columnas",
          "Fecha: formato, valor mínimo y máximo"
        ]
      },
      "requirements": [
        "Es importante tener muchas ganas de aprender",
        "Se recomienda tener conocimientos básicos de algún lenguaje de programación"
      ],
      "description": "¿Te gustaría aprender a desarrollar tu primera aplicación, web y móvil?\n¿Te gustaría crear una aplicación Android y conectarla a un panel web administrativo?\nEntonces has llegado al curso indicado! :)\n\n\nEl objetivo de este curso es explicar de forma detallada cómo desarrollar un proyecto en Laravel y Android, y cómo lograr una comunicación efectiva entre ambos.\nUsaremos Laravel para desarrollar un sistema web, que permitirá al administrador generar reportes, gestionar toda la información de especialidades, médicos y pacientes. Y así mismo usaremos el proyecto Laravel para desarrollar nuestra propia API.\nPor otro lado, usaremos Android, para permitir a los pacientes registrar sus datos básicos, solicitar citas, y recibir recordatorios cuando corresponda.\nEste curso es ideal para profundizar tus conocimientos sobre ambas tecnologías.\n\n\nLo mejor es que al final tendrás una aplicación completamente funcional, tanto en versión web como móvil, que podrás adaptar y/o usar como guía para desarrollar tus propios proyectos.\n\n\nAnímate!\nEl curso muestra paso a paso todo el proceso de desarrollo, por lo que al finalizar, no tendrás inconvenientes para personalizar la aplicación a tu gusto, y exponerla como un proyecto en tu portafolio profesional.\n\n\nDe hecho te cuento un secreto:\nEste proyecto lo usé como base para la presentación de mi tesis de pregrado.",
      "target_audience": [
        "Personas interesadas en aprender a desarrrollar aplicaciones móviles",
        "Programadores que desean iniciar su camino en el desarrollo de aplicaciones Android nativas",
        "Desarrolladores que desean aprender cómo comunicar un proyecto Laravel con Android a través de una API"
      ]
    },
    {
      "title": "The Complete 2022 Flutter & Dart Development Course [Arabic]",
      "url": "https://www.udemy.com/course/complete-flutter-arabic/",
      "bio": "تعلم (فلاتر) تقنية المستقبل و كن جاهزا لبناء تطبيقات حقيقية كاملة بكود برمجي واحد",
      "objectives": [
        "تعلم لغة البرمجة دارت و تعلم فلاتر من البداية حتى الإحتراف",
        "تعلم إنشاء تطبيقات جميلة و سريعة بجودة عالية جدا",
        "تعلم إنشاء تطبيقات لنظام أندرويد و أيفون و ويب من خلال كود برمجي واحد",
        "كن مطور تطبيقات محترف",
        "كن مبدعا في واحدة من أسرع التقنيات نموا",
        "تعلم كتابة كود نظيف و انطلق نحو أول وظيفة لك",
        "تعلم كيفية بناء سيرة ذاتيه قوية لبدء حياتك العملية"
      ],
      "course_content": {
        "Introduction to Course": [
          "أمثلة من التطبيقات اللي هنشتغل عليها مع بعض خلال الدورة باذن الله",
          "Introduction to this course",
          "What is programming?",
          "What is programming language?",
          "What is mobile development?",
          "Difference between native & cross platforms",
          "Why flutter?",
          "Making the most of this course"
        ],
        "Introduction to Dart": [
          "لينكات الإختبارات",
          "لينكات محتوي الشرح في دارت",
          "First code with dart",
          "What is IDE?",
          "Variables and int",
          "Update variable and Make error",
          "Initialize vs Declare",
          "double and bus game",
          "String",
          "Boolean",
          "List",
          "Map",
          "var & dynamic",
          "final vs const",
          "Arithmetic operators",
          "Relational operators",
          "Type test operators",
          "Bitwise operators",
          "Assignment operators",
          "Logical operators",
          "if statement",
          "inline if",
          "if null",
          "switch case",
          "functions",
          "return type & params",
          "Optional named parameters",
          "Loops",
          "classes & objects",
          "constructor",
          "special constructor",
          "static",
          "inheritance",
          "super",
          "override",
          "abstract"
        ],
        "Flutter Fundamentals": [
          "flutter sdk",
          "first flutter project",
          "لينكات مهمه جدا",
          "App Bar",
          "flutter inspector",
          "Icon Button",
          "Safe Area",
          "Column & Expanded",
          "Column Attributes",
          "Row",
          "Single Child Scroll View",
          "Stack & Container",
          "Break",
          "لينك السورس كود علي جيت",
          "Login Design",
          "Messenger Design",
          "List View",
          "List View & Model Class",
          "who are you? [1]",
          "who are you? [2]",
          "StatefulWidget & StatelessWidget"
        ],
        "Flutter Advanced [BMI Calculator App]": [
          "خلي بالك",
          "BMI Calculator",
          "Slider",
          "Floating Action Button",
          "Pubspec & assets",
          "Add Logic to App",
          "Navigation & Passing Data Between Screens"
        ],
        "Flutter Project Architecture [مهم جدا و سهل]": [
          "Reusable components",
          "Form Validation",
          "Try ...",
          "Obscure Text"
        ],
        "Sqflite [Todo App] [أهم سيكشن يا شباب]": [
          "كلام مهم اقرأوه لازم",
          "خلي بالك",
          "Bottom Navigation Bar",
          "Future & async & await",
          "Error Handling",
          "Create database",
          "Insert to database",
          "Get data from database",
          "BLoC Fundamentals",
          "BLoC Observer",
          "Bottom navigation bar with cubit",
          "Database with cubit",
          "Done & Archived tasks",
          "Delete tasks and finish app"
        ],
        "APIs and Networking [News App] [شغل شركات]": [
          "What is APIs",
          "App Theme",
          "Dio Package",
          "Dark Mode",
          "Shared Preferences",
          "Search",
          "Web View",
          "Handling Search Issue"
        ],
        "Handling APIs Professionally [Shop App] [شغل شركات]": [
          "خلي بالك",
          "Handling APIs on Postman",
          "Collection Link on Postman",
          "New Collection Link [Register is working good here]",
          "On Boarding (Page View)",
          "Handling APIs Professionally [login screen]",
          "Model Class",
          "Handling Shared Pref Professionally",
          "Build Shop Layout [1]",
          "Build Shop Layout [2]",
          "Grid View [Products]",
          "Setup Categories",
          "Setup Favorites [like a pro]",
          "Profile & Logout",
          "Register & Update User",
          "Search & Finish Shop App"
        ],
        "Firebase and Clouding [Social App] [شغل شركات]": [
          "Intro to Firebase",
          "Firebase Authentication",
          "Firebase Firestore",
          "Send Email Verification",
          "Setup Layout",
          "Task",
          "Setup Profile",
          "Edit Profile [firebase storage]",
          "Task",
          "Edit Profile & Cover [images]",
          "Create New Post",
          "Get Posts",
          "Posts Likes [1]",
          "Posts Likes [2]",
          "Task",
          "Get All Users",
          "Chat [1] Send Message",
          "Chat [2] Get Messages",
          "Chat [3] Run App in 2 Devices",
          "Send Notification from Console [FCM]",
          "Handling Notifications While App is Open [FCM]",
          "Handling Background Notifications [FCM]",
          "FCM Rest APIs",
          "FCM Topics"
        ],
        "Flutter 2 [Web & Desktop] [كلام جديد]": [
          "Setup Desktop & Web [1]",
          "Setup Desktop & Web [2]",
          "Responsive Builder",
          "Build New Desktop Layout [1]",
          "Build New Desktop Layout [2]"
        ]
      },
      "requirements": [
        "الشغف لتعلم البرمجة و واحدة من أسرع التقنيات نموا",
        "حب التطلع و علو الطموح",
        "لا توجد أي متطلبات مسبقة فالدورة تأخذك من البداية الي الإحتراف",
        "تستطيع التعلم علي أي نظام تشغيل (ويندوز-ماك-لينوكس)"
      ],
      "description": "تم إنشاء الدورة علي يد مهندس متخصص في مجال تطوير تطبيقات الهواتف المحمولة محاولا نقل خبرته العملية و العلمية للجميع لكي يستطيع كل شخص الإنطلاق نحو وظيفته الأولي في المجال.\nلذلك بنهاية الدورة ستكون قادرا علي بناء تطبيقاتك الخاصه بك و التقديم للعمل في شركات بمرتبات مجزية.\nفلاتر عبارة عن إطار عمل تسطيع من خلاله بكود برمجي واحد إنشاء عديد من التطبيقات التي تعمل علي أنظمة مختلفة (أندرويد-أيفون-ويب).\nتبدأ الدورة من الصفر بشرح أساسيات لغة البرمجة دارت التي سوف تستخدم لشرح إطار العمل فلاتر.\nبعد ذلك نبدأ شرح المفاهيم الأساسية لفلاتر و مكوناتها و كيفية إستخدام كل مكون و وظيفته.\nخلال تقدمك في الدورة سيكون كل درس مبني علي الدروس السابقة.\nستتعلم كيفية إدارة التطبيق كاملا بإحترافية و بأقل مجهود.\nستتعلم كيفية إختبار تطبيقك كاملا.\nسيتم إنشاء تطبيقات كاملة خلال الدورة للتطبيق علي الدروس.\nسيتم إعطاء النصائح العملية خلال الدورة لكي يتمكن كل شخص من الإنطلاق في المجال.\nالنصائح خلاصة خبرة قوية في مجال تطوير التطبيقات و خلاصة بناء تطبيقات قوية علي أرض الواقع.\nستتعلم كيفية بناء سيرة ذاتيه قوية لبدء حياتك العملية.\nستتعلم كيفية كتابة كود نظيف قابل لإعادة الإستخدام و الإختبار و الزيادة أو التعديل عليه بشكل لائق.\nالتركيز علي النقاط المهمة في سوق العمل.\nالتنفيذ ثم التنفيذ، و البحث المستمر، هما أساس مهندس البرمجيات المحترف.\nخلال الدورة سيتم العمل علي تطبيقات مختلفة بالأساليب الجديدة في التقنية، و سيتم تسجيل دورتين قادمتين مهمين جدا.\nالدورة الأولي منهم هتكون تطبيق كاملا حوالي 40 ساعه تطبيق شبيه بأوبر باستخدام فايربيز.\nالدورة الثانيه هتكون تطبيق متجر كامل باستخدام داتابيز.\nفي النهاية ستكون مطور تطبيقات محترف بإذن الله.",
      "target_audience": [
        "لأي شخص يريد دخول مجال البرمجة و عنده الشغف و حب المجال",
        "للمطورين في أي مجال",
        "لمطورين أندرويد أو أيفون والذين يريدون إنشاء تطبيقات بكود برمجي واحد",
        "للمطورين الذين يريدون كتابة كود قوي و نظيف و مرتب",
        "للمطورين الذين يريدون التعلم بشكل إحترافي"
      ]
    },
    {
      "title": "Complete Flutter & Dart Development Course [Arabic]",
      "url": "https://www.udemy.com/course/best-and-complete-flutter-course-for-beginners/",
      "bio": "تعلم تطوير تطبيقات الموبايل باستخدام فلاتر (تقنيه المستقبل)",
      "objectives": [
        "تعلم لغه البرمجه و إطار فلاتر خطوه بخطوه من البدايه حتي الاحتراف",
        "تطوير تطبيقات تفاعليه لنظام الاندرويد والايفون باستخدام كود برمجي واحد",
        "انشاء سيره ذاتيه تحتور علي العديد من التطبيقات لايجاء وظيفه او البد بالعمل الحر",
        "مجومعه من الكورسات مجمعه في كورس واحد من البدايه حتي الاحتراف",
        "بنهايه الدوره سوف تصبه مبرمج تطبيقات محترف",
        "كتابه كود نظيف وسريع للتميز في المجال",
        "كن مبدعا في واحدة من أسرع التقنيات نموا"
      ],
      "course_content": {
        "Introduction": [
          "Important links",
          "Introduction to programming part one",
          "Introduction to programming part two",
          "difference between cross and native platform",
          "what is and why flutter",
          "how flutter works"
        ],
        "Dart Programming basics": [
          "setup environment",
          "install dart sdk",
          "Introduction to vs code",
          "dart extension",
          "Main function",
          "Print statement",
          "File structure",
          "Variables part one",
          "variables part two",
          "Variables part 3",
          "Data types",
          "String data type",
          "int data type",
          "Double data type",
          "Num data type",
          "Bool data type",
          "Dynamic",
          "Var",
          "Arithmetic operators",
          "Dot operator",
          "Collection data type overview",
          "List part one",
          "List part two",
          "List part three",
          "Set data type",
          "Maps part one",
          "Maps part two",
          "Comparison operators",
          "Conditional statements",
          "If condition part one",
          "If condition part two",
          "Logical operators",
          "If Else",
          "Nested If",
          "switch case",
          "Scope",
          "Null safety part one",
          "Null safety part two",
          "Loops in dart",
          "For loop part one",
          "For loop part two",
          "For loop part three",
          "while loop",
          "do while loop",
          "For in loop",
          "for each loop",
          "Functions overview",
          "Basic function",
          "Return statement",
          "Parameters",
          "Parameters and arguments",
          "Optional parameters",
          "Named parameters"
        ],
        "Object oriented programming": [
          "Intro to oop",
          "Intro to oop part two",
          "Classes",
          "Objects",
          "Objects part two",
          "Methods",
          "Constructors",
          "More on attributes",
          "Constructors part two",
          "Encapsulation",
          "Encapsulation part two",
          "Encapsulation part three",
          "Setter",
          "Arrow function",
          "Getters",
          "More about constructors",
          "Inheritance",
          "Super constructors",
          "Super constructors part two",
          "override",
          "Polymorphism",
          "Abstract class",
          "Implements",
          "named constructor",
          "late keyword",
          "mixins part one",
          "mixins part two",
          "object class",
          "anonymous objects",
          "Enum"
        ],
        "Exceptions": [
          "part one",
          "part two",
          "part three"
        ],
        "Flutter basics": [
          "لينك المشاريع ي شباب",
          "flutter setup for windows",
          "flutter setup for mac",
          "flutter setup on mac part 2",
          "flutter setup on mac part 3",
          "flutter setup on mac part 4",
          "Creating flutter project",
          "material app",
          "scaffolding our app",
          "custom widget",
          "hot reload",
          "container widget",
          "column widget",
          "row widget"
        ],
        "Birthday Card App": [
          "image",
          "birthday card app"
        ],
        "Business Card App": [
          "circle image",
          "Adding fonts",
          "container and spacer widgets",
          "divider",
          "margin and padding",
          "list tile widget",
          "const in flutter"
        ],
        "Basketball Points Counter App": [
          "Appbar",
          "adding text",
          "buttons widget",
          "vertical divider",
          "UI done part one",
          "UI done part two",
          "UI done part three",
          "adding variables",
          "on pressed",
          "statefull widget",
          "set state"
        ],
        "Language Learning App": [
          "setup",
          "home page",
          "refactor our code",
          "gesture detector",
          "Navigation",
          "number category",
          "Number class",
          "refactoring number container",
          "list view widget",
          "creating list of numbers",
          "list view builder widget",
          "Icon button",
          "packages in flutter",
          "adding packages",
          "Play sound part one",
          "Play sound part two",
          "Family members part one",
          "Family members part two",
          "Phrases page",
          "Refactor ui",
          "Finish app"
        ],
        "Tunes Player app": [
          "App repo",
          "Tune view",
          "Appbar",
          "Tune item",
          "Responsive tune items",
          "Display tune items",
          "Map Colors to tune items",
          "Create tune model"
        ]
      },
      "requirements": [
        "جهاز كمبيوتر شخصي",
        "لا توجد اي متطلبات سوف ناخذك من البدايه حتي الاحتراف",
        "الشغف لتعلم البرمجه والتميز فيها"
      ],
      "description": "Welcome to the best Dart and Flutter Course\n\nفي هذه الدوره سوف نغطي كل الاساسيات التي تحتاجها في لغه البرمجه دارت و اطار العمل فلاتر ,هذه الدوره من افضل الدورات الشامله\n\nلقد تم انشاء هذه الدوره وهدفها هو اعداد مطورين تطبيقات محترفين واعدادهم لسوق العمل وتحقيقي اهدافهم المستقبليه\n\nفي هذه الدوره لا تحتاج لخبره برمجيه سابقه لان في هذه الدوره تبدء معك من الصفر حتي تصبح مطور تطبيقات محترف\n\nالدوره مكونه من اكتر من كورس مجمعه في كورس واحد بدايه من مرحله المبتدئين بدون خبره وصولا الي مرحله مقدمه\n\nفلاتر عبارة عن إطار عمل تسطيع من خلاله بكود برمجي واحد إنشاء عديد من التطبيقات التي تعمل علي أنظمة مختلفة مثل الاندرويد والايفون\n\nسوف يتم البدء بشرح لغه دارت ف البدايه باستفاضيه وبعد ذلك سوف يتم شرح اطار العمل فلاتر\n\nسوف يتم شرح اطار العمل فلاتر عن طريق انشاء تطبيقات تفاعليه قويه يمكنك ان تضيفها الي سيرتك الذاتيه\n\nفي نهايه هذه الدوره سوف تكون قادر علي انشاء تطبيقات كامله وهذا سوف يمكنك من العمل كمبرمج حر او في احدي الشركات او تطوير تطبيقات والبدء بعملك الخاص\n\nسوف يتم اعدادك بحرفيه لسوق العمل واعداك لتصبح مطور تطبيقات متميز\n\nسوف تتعمل كتابه كود نظيف يمكن اعاده استخدامه واحتباره والتعديل عليه\n\nالنصائح خلاصة خبرة قوية في مجال تطوير التطبيقات و خلاصة بناء تطبيقات قوية علي أرض الواقع.\n\nسوف يتم مساعدتك بالكامل في خلال هذه الدوره والإيجابه علي كل اسئلتك\n\nتم انشاء هذه الدوره بواسطه م/ ثروت سامي",
      "target_audience": [
        "لاي شخص يريد تعلم البرمجه والبدء بانشاء تطبيقات",
        "اذا كنت مبرمج ايفون او اندريود وتريد ان توسع من نطاق عملك",
        "اذا كنت تريد تعم كيفيه كتابه كود نظيف وقوي",
        "اذا كنت تريد البدء في مجال البرمجه"
      ]
    },
    {
      "title": "Flutter & Dart Development Course [Arabic]",
      "url": "https://www.udemy.com/course/flutter-dart-development-course-2024-arabic/",
      "bio": "A Complete Tutorial to the Flutter and Dart SDK for building amazing native Android, iOS, Web and Desktop Applications!",
      "objectives": [
        "Learn Flutter and Dart from scratch, gaining a step-by-step understanding of all fundamental concepts.",
        "Dart Syntax. Learn and use the basics of the programming language Dart.",
        "Learn to create responsive Flutter applications that adapt seamlessly to different screen sizes and orientations.",
        "Create a BMI App, Login App, Sub7a App, Todo App, Weather App, Social Media App & Finance App.",
        "Build Responsive & Adaptive Cross-Platform iOS, Android, Web and Desktop apps with a single codebase.",
        "Forms + Validation",
        "State Management with BLoC/Cubit & Provider",
        "Firebase (Firestore, Authentication)",
        "Hive database"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "What is Flutter?",
          "Why we use Flutter?",
          "What will we learn in this course?",
          "Preview Apps"
        ],
        "Dart programming language": [
          "Introduction to Dart",
          "Variables",
          "int and double",
          "variables names",
          "var and dynamic",
          "String",
          "Task",
          "Type conversion",
          "User input",
          "const and final",
          "bool and relation operator",
          "if condition",
          "switch",
          "for loop",
          "while and do while loop",
          "function",
          "arrow function",
          "list set map",
          "for in loop",
          "scope and global",
          "null safety",
          "BMI dart application"
        ],
        "Object Oriented Programming": [
          "Classes and Objects",
          "constructor",
          "encapsulation",
          "set and get",
          "try catch",
          "inheritance",
          "super constructor",
          "abstract class and override",
          "static",
          "records"
        ],
        "Basic Flutter": [
          "Setup environment",
          "First app",
          "demo app",
          "Material and Scaffold",
          "Row layout",
          "Column layout",
          "Colors and Text"
        ],
        "BMI App": [
          "Preview BMI App",
          "Create and app bar",
          "Container",
          "Sileder and Expanded",
          "Buttons",
          "Stateless and Stateful widgets",
          "Navigator routes",
          "Logic and pass data",
          "Redesigne app",
          "Result page",
          "What's now?"
        ],
        "BMI Plus App": [
          "Preview BMI Plus App",
          "Create and home screen",
          "control screen",
          "Listview",
          "Stack",
          "Result Screen",
          "Reusable app",
          "What's now?"
        ],
        "Login App": [
          "Preview Login App",
          "Create project",
          "Textfield",
          "Text button",
          "Controller",
          "Packages",
          "Resized avoid bottom inset",
          "Redesigne App",
          "Textfield designe",
          "Form",
          "puch and remove until",
          "Images",
          "Fonts",
          "What's now?"
        ],
        "Sub7a App": [
          "preview Sub7a App",
          "App bar",
          "Header",
          "Body",
          "Circular percentage indicator",
          "Radio",
          "Radio color",
          "Directionality",
          "Counter",
          "Shared preference",
          "Shared preference set",
          "Shared preference get",
          "initstate",
          "Set and get all data",
          "Reset to zero",
          "Set Color",
          "Visibility",
          "What's now?"
        ],
        "Todo App": [
          "Preview Todo App",
          "App bar",
          "Date time",
          "Material 3",
          "API",
          "Post API",
          "Get API",
          "Put API",
          "Delete API",
          "Designe create page",
          "post data part 1",
          "post data part 2",
          "Snack bar",
          "get data part 1",
          "get data part 2",
          "get data part 3",
          "update data",
          "Check box",
          "delete data",
          "Dialog",
          "Filter List",
          "See All",
          "Intro to state management",
          "Setup provider",
          "get provider",
          "post provider",
          "CRUD provider",
          "Designe home",
          "Designe alert dialog",
          "Designe add page",
          "Bottomsheet",
          "Fix provider listen",
          "What's now?"
        ],
        "Weather App": [
          "Preview Weather App",
          "Create project",
          "Search bar",
          "body",
          "Error",
          "Loading",
          "Weather API",
          "Json Formatter",
          "Dio",
          "Weather Model",
          "Named Constructor",
          "Factory Constructor",
          "Json to dart",
          "Get Data",
          "Get Data to home page",
          "Introduction to bloc",
          "Create bloc state",
          "Create cubit",
          "Provide cubit",
          "get weather method",
          "emit state",
          "Get Data cubit",
          "check state",
          "Display Data in Home cubit",
          "Display Data in Card cubit",
          "Get Data from search",
          "Change Colors",
          "Change Icons",
          "What's Now?"
        ]
      },
      "requirements": [
        "You can use any system to follow along but keep in mind - iOS apps can only be built on macOS.",
        "No programming experience required.",
        "No iOS or Android Background required."
      ],
      "description": "Flutter is an incredibly powerful framework, and I want you to harness its full potential. That's why I also provide you with a brief overview of the inner workings of Flutter, including how it handles rendering, state management, and other \"behind-the-scenes magic. This knowledge will set you apart as a truly proficient Flutter developer.\nLearning by doing is the best way to master any skill. Thus, in this course you'll build several exciting app projects likeBMI App, Login App, Sub7a App, Todo App, Weather App, Social Media App & Finance App. (Know more about each of the apps we build in the free video previews)!\nThe approach to teaching goes beyond just giving you ready-made solutions. I firmly believe in empowering you to learn by teaching you various aspects of Flutter, such as Animations and Automated Testing, independently of each other. This will enable you to understand the underlying principles and apply your knowledge creatively in various scenarios, not just in building the apps we build.\n\n\nI understand that learning a new language and a new framework like Flutter can be challenging, even for experienced developers. But don't worry about it! This is a zero-to-hero Flutter course, meaning we start from scratch and take you on an incredible journey to become a confident Flutter developer. You'll go from knowing nothing about Dart, Flutter (or even programming) to becoming proficient in developing clean, efficient and powerful apps.\nif you're read to empower yourself with valuable skills that will open doors to countless opportunities in the world of app development enrol now and let's begin this thrilling adventure together!",
      "target_audience": [
        "This course is intended for aspiring mobile app developers and programming enthusiasts seeking to create powerful applications using Flutter and Dart."
      ]
    },
    {
      "title": "iOS 9 y Swift 2 | Curso Completo y Desde Cero",
      "url": "https://www.udemy.com/course/desarrollo-ios-con-swift/",
      "bio": "Aprende iOS 9.3 y swift 2.2 de una manera fácil y completa",
      "objectives": [
        "Tendras el mejor curso de programacion iOS con swift en español de todo Udemy",
        "Aprenderas por medio del ejemplo a crear varias aplicaciones nativas",
        "Aprenderas a pensar como un programador profesional y ser capaz de iniciar una vida laboral independiente o en una empresa"
      ],
      "course_content": {
        "Introducción": [
          "Bienvenida"
        ],
        "El entorno de desarrollo integrado Xcode 7": [
          "Nuestra herramienta de trabajo: Xcode 7",
          "Introducción a Xcode 7",
          "¿Que hay de nuevo Xcode?"
        ],
        "¡Comencemos aprendiendo la sintaxis de swift facilmente!": [
          "El lenguaje de programación Swift",
          "El libro gratuito de Swift",
          "Introducción al Playground y las palabras reservadas",
          "Constantes y Variables",
          "Asignación Implícita y Explícita",
          "Tipos de Datos",
          "Tipo : Int",
          "Tipo : Float & Double",
          "Tipo : String & Array",
          "Introducción a optionals y el casteo de tipos",
          "El lenguaje de programación Swift"
        ],
        "Estructuras iterativas e introducción a funciones": [
          "Introducción a ciclos",
          "La función Print",
          "Nota",
          "El ciclo For y la propiedad count de las colecciones",
          "Los ciclos repeat & while",
          "Colecciones: Diccionarios y Arreglos",
          "El ciclo For In",
          "Funciones",
          "Tarea #1 Funciones"
        ],
        "Estructuras de control : if - else & switch": [
          "Estructuras de control: If - else",
          "Estructuras de control: Switch",
          "Tips #1 | Número de lineas y más"
        ],
        "El IDE Xcode, el story board y la Interfaz de usuario": [
          "El IDE Xcode |Su estructura e introducción al debugger",
          "Introducción al Storyboard"
        ],
        "App # 1: Tienda Mazda | La programación orientada a objetos": [
          "Introducción a la programación orientada a objetos",
          "La union de código con interfaz de usuario",
          "La función ViewDidLoad",
          "Clases, propiedades y métodos",
          "Introducción a Optionals Parte 2",
          "Scope (Alcance) :Global y Local",
          "Creación y uso de objetos",
          "Herencia",
          "La POO"
        ],
        "Subir aplicación a dispositivo real gratuitamente :D": [
          "Tenemos que estar actualizados : )",
          "Correr app en dispositivo real y solución a error de seguridad",
          "El requisito indispensable para subir una aplicación a la app store de Apple",
          "Inscripción al Apple Developer Program"
        ],
        "Elementos básicos de la UI": [
          "Va de nuevo! Labels & Buttons! | Tips que no te puedes perder!",
          "Text View & Text Field",
          "Slider & Switch"
        ],
        "App # 2: Calculadora | Repaso de todo lo aprendido hasta ahora": [
          "La interfaz de usuario | ibAction & ibOutlet",
          "La lógica del programa 1| Label.text a Float",
          "La lógica del programa 2| Switch en acción",
          "La lógica del programa 3| Introducción al AutoLayout"
        ]
      },
      "requirements": [
        "NO hace falta un dispositivo móvil (iPhone , iPad o iPod).",
        "Tener un sistema operativo OS X 10.11 o superior que es GRATUITO en la App Store"
      ],
      "description": "IMPORTANTE: Te recomiendo que te suscribas al curso actualizado de iOS con Swift, para ver la versión nueva del curso puedes ir a mi biografía dando click al nombre \"Juan Villalvazo\"  en esta misma página (en la sección de instructor).\nMuchas gracias : )\n★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\nCon más de 150 video lecciones en HD.\nCon una comunidad de más de 4000 estudiantes ayudándonos mutuamente.\n★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\nAlgunas de las más de 600 revisiones de alumnos hacia este curso:\n- Nando Camarillo: (Excelente curso)\n\nEl curso esta muy bien, empieza con lo básico y poco a poco va subiendo el nivel, el instructor es muy atento, las preguntas que le hacen las responde muy rápido y el curso está en constante actualización, lo recomiendo ampliamente !! :D.\n- Joaquin Gil Silva: (Genial, un profesor excelente, y un curso muy actualizado)\nExplicaciones muy claras, se tocan todos los aspectos y la preocupación del profesor por los alumnos a la hora de ayudar en todo lo que pueda es espectacular. Muchas gracias.\n- J. David Guerra: (Excelente!!!!!)\nCurso muy ameno por lo general. Se resaltan cosas prácticas que todo programador debe saber cuando se inicia en un nuevo lenguaje de programación (o plataforma).\nYo (programador web/desktop con 12 años de experiencia) lo recomiendo 100%.\nDesde luego es la mejor inversión que he hecho en formación. Muchas Gracias por tu gran esfuerzo Juan.\n★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★\n\nLo que obtendrás:\nTendrás el mejor y primer curso de programación iOS 9 con Swift 2 en Español publicado en internet y en Udemy (Agosto de 2014).\nMás de 150 lecciones actualmente, divididas en más de 12 secciones y más de 15 horas de videos HD donde aprenderás el lenguaje Swift y a crear apps para iPhone, pasando por temas básicos hasta temas intermedio y avanzados.\nTodo esto al mejor precio y con una excelente atención a los alumnos via mensaje privado y grupo de ayuda.\nSi piensas que lo anterior esta dentro de tus necesidades de inversión para el futuro, da clic en el botón de \"toma este curso\" y forma parte de esta comunidad de más de 3800 estudiantes.\nRecuerde que aprender a desarrollar apps iOS ahora, es una excelente inversión para su futuro.\nMuchas gracias : )\n¡Este curso cuenta con Garantía del 100% de devolución de su inversión por 30 días!, da clic en tomar el curso ahora mismo y si no es lo que esperabas Udemy te devuelve tu inversión.",
      "target_audience": [
        "En este curso no necesitas conocimientos previos en iOS o Swift",
        "Especial para estudiantes y programadores novatos que desean superarse y crear aplicaciones móviles",
        "Especial para Programadores Android que quieran programar para iOS",
        "Toda persona Interesada en aprender swift 2.3 y a crear apps para iOS 9.3"
      ]
    },
    {
      "title": "iOS, Swift & UIKit: le cours complet mis à jour pour iOS 16",
      "url": "https://www.udemy.com/course/ios15_french/",
      "bio": "Apprenez à créer des Applications pour iPhone et iPad pour iOS16 avec Xcode 14 et Swift 5.7",
      "objectives": [
        "Le développement d'applications iOS",
        "Le langage Swift",
        "UIKit",
        "Xcode",
        "Les API",
        "Stocker des données",
        "les bases de SwiftUI"
      ],
      "course_content": {
        "Introduction": [
          "Introduction",
          "Avant de commencer",
          "Comment va se dérouler le cours?",
          "Ou Obtenir de l'aide?",
          "Rejoindre la communauté",
          "Qu'est ce que Swift?",
          "Télécharger Xcode",
          "Obtenir iOS 16",
          "Obtenir macOS Ventura",
          "Les raccourcis Clavier"
        ],
        "Premier projet": [
          "Création d'un projet XCode",
          "Composition d'un projet Xcode",
          "Les différents éléments de Xcode",
          "La barre de Navigation",
          "Les préférences Xcode",
          "Les Navigateurs",
          "Les Inspecteurs",
          "L'éditeur",
          "Assets.xcassets",
          "Target et Project",
          "Info.plist",
          "AppDelegate et SceneDelegate",
          "LEs Storyboards",
          "Lancer sur un simulateur",
          "Lancer sur un iPhone",
          "Ajouter une seconde page",
          "Le projet complet"
        ],
        "Les bases de Swift": [
          "La Documentation",
          "Création d'une Playground",
          "Les imports",
          "Les Commentaires",
          "La fonction print()",
          "Variables et Constantes",
          "Le Point virgule",
          "Les nombres entiers",
          "Les nombres décimaux",
          "Interopérabilité entre types",
          "Les Strings",
          "Les Booléens",
          "Les Tuples",
          "Les Arrays",
          "Les Dictionnaires",
          "Les Optionnels",
          "La playground"
        ],
        "Les Opérateurs avec Swift": [
          "Définition",
          "Les Opérateurs d'assignation",
          "Les Opérateurs Unaires",
          "Les Opérateurs Arithmétiques",
          "Les Opérateurs de comparaison",
          "&& et ||",
          "L'Opérateur ternaire",
          "La Playground"
        ],
        "Les Boucles avec Swift": [
          "Définition",
          "For in",
          "For in range",
          "For in avec stride",
          "ForEach",
          "While et repeat while",
          "Repeat while",
          "La Playground"
        ],
        "Les Conditions avec Swift": [
          "Définition",
          "if",
          "if, else",
          "if, else if, else",
          "switch",
          "guard else",
          "control state",
          "Déballer un optionnel",
          "La Playground"
        ],
        "Les Fonctions ou méthodes avec Swift": [
          "Définition",
          "Les fonctions basiques",
          "Les fonctions avec paramètre",
          "Les fonctions avec retour",
          "La Playground"
        ],
        "Eléments de base et Autolayout": [
          "Mise en place du projet",
          "Le ViewController",
          "Les couleurs",
          "UIView",
          "AutoLayout",
          "@IBOutlet",
          "Erreurs avec les @IBOutlets",
          "UILabel",
          "layers",
          "UIImageView",
          "UIImageView en background",
          "Image systeme",
          "UIButton",
          "StackView",
          "@IBoutlet collection",
          "Le projet complet"
        ],
        "Exercice: PetBook": [
          "Présentation de l'exercice",
          "Ennoncé et ressources",
          "Mise en place des éléments de fond",
          "Header dans le container",
          "ajout des images",
          "Finalisation",
          "Résolution des problèmes de taille",
          "Le projet complet"
        ],
        "Les Interactions avec l'utilisateur": [
          "Mise en place du projet",
          "@IBaction",
          "Erreurs des actions",
          "Actions multiples",
          "User Interaction",
          "Gestures",
          "Touches",
          "Le projet complet"
        ]
      },
      "requirements": [
        "Posséder un mac",
        "Optionnel: avoir un iPhone ou un iPad",
        "Une bonne dose de motivation"
      ],
      "description": "Bienvenue dans le cours iOS 16 et Swift: Le cours complet,\nDans ce cours, vous apprendrez à travers plus de 35 heures de vidéos à développer des applications pour iPhone et iPad, en partant de zéro pour arriver à créer à la fin du cours des applications complexes.\nMême si vous n'avez jamais écrit une ligne de code de votre vie, vous serez guidé tout au long du processus pour pouvoir vous permettre de créer l'app de vos rêves ou qui sait changer de carrière professionnelle.\n\nVoici ce que vous apprendrez tout au long de ce cours:\nPrise en main de Xcode, le logiciel de programmation d'Apple.\nSwift 5.7, le langage d'Apple, dans sa toute dernière version.\nUIKit et les objets du UI.\nL'auto layout.\nLa programmation orienté objet.\nL'enregistrement de données avec UserDefaults.\nLe téléchargement de données depuis internet.\nLes UITableView et UICollectionView.\nLe UIAlertController\nl'architecture MVC pour de meilleures applications.\nLe NotificationCenter\nLa gestion de l'appareil photo.\nLes Dates et le DatePicker\nL'utilisation d'API.\nLe décodage de fichiers Json\nCocoapods: Ajoutez des librairies externes à vos applications.\nCoreML: Apprenez les bases du machine Learning avec Apple.\nSwiftUI: Prenez en main le nouveau Framework d'Apple.\nLe Framework CoreData pour stocker des données persistantes\n... Et bien plus encore\nPour apprendre d'une façon efficace et motivante, vous aurez à la fin de chaque concepts appris une mise en pratique de vos connaissances avec des exercices corrigés. Vous vous créerez un portfolio d'application que vous serez fiers de montrer à votre entourage avec les applications suivantes:\nQu'attendez vous pour nous rejoindre?",
      "target_audience": [
        "Tous ceux qui souhaitent apprendre le développement iOS"
      ]
    },
    {
      "title": "Dein Powerstart für Einsteiger: Android 8 Apps und Firebase",
      "url": "https://www.udemy.com/course/android-7-tutorial-einsteiger-und-firebase-server/",
      "bio": "Erstelle Android Apps, die es in sich haben. Mit Firebase als Server schreibst du großartige Apps.",
      "objectives": [
        "Du wirst alles wissen, um mit deinen Apps Geld verdienen zu können.",
        "Du wirst deine eigenen Ideen verwirklichen können.",
        "Du wirst selbständig!",
        "Du wirst wissen, wie eine App grundsätzlich funktioniert.",
        "Du wirst die wichtigsten Firebase Funktionen nutzen können.",
        "Du wirst mit Google's Firebase Echtzeitdatenbank umgehen können.",
        "Du wirst mit Google's Firebase Storage deinen Usern Speicherplatz für Bilder und Files bereitstellen können.",
        "Du wirst die wichtigsten Funktionen und Prinzipien von Android kennenlernen.",
        "Du wirst mit Problemen bei der eigenen App-Entwicklung umgehen können."
      ],
      "course_content": {
        "Hier starten": [
          "Was bringt Dir dieser Kurs?",
          "Was ist eigentlich Firebase?",
          "Download und Setup"
        ],
        "Vorbereitungen": [
          "Grundlagen",
          "Erster Start",
          "IDE-Überblick",
          "Die erste App",
          "AVD einrichten",
          "Herunterladen und Öffnen von Projektdateien",
          "Die Geschichte von Android"
        ],
        "Java": [
          "Wiederholung Java",
          "Java Syntax",
          "API Referenz",
          "Die ActivityMain Klasse",
          "Erste Schritte in Java",
          "Variablen in Java",
          "if-Bedingung in Java",
          "for-Schleife in Java",
          "Arrays in Java",
          "Eingaben prüfen"
        ],
        "Klassen und Objekte": [
          "Anlegen von Klassen",
          "Die Methoden \"Getter und Setter\"",
          "Erweiterte Methoden",
          "Die Verwendung in Methoden",
          "Die Manifest Datei",
          "Activity Livecycle"
        ],
        "Grundlagen des App-Designs": [
          "Der Design - Editor",
          "2.1 Grundlagen UI Editor und Standard Layouts",
          "Erweitertes app Design",
          "Android 8 Feature: autosizing textview",
          "Übung: ScrollView und Schleifen",
          "Miniprojekt TeaTimer"
        ],
        "Das Projekt \"Trainer-App\"": [
          "Die \"Trainer App\"",
          "Trainer App: Constraint Layout und Deine erste App",
          "Trainer App: Design verbessern",
          "Trainer App: Methoden benutzen",
          "Trainer App: Elemente der UI ansprechen",
          "Trainer App: Eine Klasse erstellen – Getter und Setter",
          "Trainer App: Aufgaben - Version mit statischer Rückgabe",
          "Trainer App: Erweiterung - Zufällige Aufgaben"
        ],
        "Erweiterte Funktionen von Android": [
          "Erweiterte Funktionen",
          "Basic Activity",
          "ListView",
          "Eine Zweite Activity starten",
          "Ein Modell erzeugen",
          "Abruf von Elementen der Liste",
          "Übung",
          "Eingabefelder"
        ],
        "Permissions unter Android 6 - 8 mit einem Helper": [
          "Permissions",
          "Permission Teil1",
          "Permission Teil2"
        ],
        "Exkurs SQLLite": [
          "Ein Exkurs in SQLite",
          "Was sind Datenbanken",
          "Anlegen einer SQLite Datenbank",
          "Schreiben und lesen in einer SQLite Datenbank Teil 1",
          "Schreiben und lesen in einer SQLite Datenbank Teil 2",
          "Update bei Datensätzen",
          "Löschen von Datensätzen"
        ],
        "Firebase Database": [
          "Einführung Firebase Database",
          "Überblick über Firebase und Datenbanken",
          "Die erste Firebase App",
          "Value Event Listener",
          "Wir schreiben einen Chat",
          "Objekte in die Datenbank schreiben",
          "Objekte abrufen",
          "Child Event Listener",
          "Query"
        ]
      },
      "requirements": [
        "Etwas Erfahrung im Programmieren - am besten mit Java. Wenn nicht auch kein Problem, denn es gibt einen Java Crashkurs.",
        "Lust, sich in die App-Entwicklung einzuarbeiten.",
        "Einen durchschnittlichen PC zum Programmieren. (Egal ob Windows, Mac oder Linux)",
        "Du solltest mit deinem Computer umgehen können. (normale Kenntnisse)"
      ],
      "description": "Du lernst Apps zu schreiben, die es in sich haben und das mit den neusten Techniken!\nLerne Android Apps zu schreiben, die richtig Power haben.\nEntwickle eigene Apps und verdiene damit Geld.\nMache den ersten Schritt zum professionellen Entwickler mit tollen Job Chancen.\nHier noch ein paar Beispiele, was du mit dem Wissen aus diesem Kurs machen kannst:\nSocial-Apps wie Messenger, Chats und Communities\nTausch- und Kauf-Apps wie: Tauschbörsen, Verschenk-, Anzeigen- und Gutschein-Apps für Firmen\nNachrichten und News-Apps\nund alles was du dir wünscht!\nWas macht den Kurs besonders:\nDie verwendete Technik gehört zu den aktuellsten Anwendungen, die Du auf dem Markt finden kannst, nämlich Android 8 und Google's Firebase für den Server in der aktuellen Version.\nTrotz der Komplexität des Themas werde ich immer wieder wichtige Themen wiederholen und langsam erklären. Somit erhältst Du die Möglichkeit, immer wieder neu einzusteigen, wenn Du mal längere Zeit den Kurs pausiert hast.\nIch möchte Dir vor allem Programmier-Prinzipien beibringen. Es bringt dir am meisten, wenn du schnell in die Lage versetzt wirst, Dich auch alleine zurecht zu finden. Deshalb zeige ich Dir auch die prinzipielle Herangehensweise an ein Software-Projekt.\nMir geht es in erster Linie darum, dass Du handlungssicher wirst, also nicht nur nachtippst\n- auch wenn das am Anfang ok ist -\naber du wirst niemals ein guter Programmierer, wenn Du nur nachtippst.\nAußerdem wirst Du in diesem Kurs lernen, mit Problemen umzugehen. Da ich den Kurs sehr praxisorientiert halte, wird es an der ein oder anderen Stelle auch immer wieder zu Problemen kommen, die wir dann gemeinsam lösen werden.\nDies wird auch Dir bei Deinen Projekten immer wieder passieren und es ist wichtig, dass Du jetzt schon lernst, wie Du in Zukunft damit umgehst.\nDu wirst lernen, mit externen Helpern und Libs zu arbeiten.\nDas sind kleine Codeteile, die Dir andere bereitstellen und die Deine Arbeit vereinfachen. Mit diesem Wissen wirst Du eine Menge Tools haben, die Dir weiterhelfen.\nDieser Kurs ist als schneller und gleichzeitig fundierter Einstieg in die App-Entwicklung konzipiert.\nDu wirst Dich am Anfang des Kurses erst einmal mit Android vertraut machen. Gleichzeitig wirst Du die Grundlagen der Objektorientierten Programmierung kennen und nutzen lernen.\nEs wird in diesem Kurs immer wieder kleinere Beispielprojekte geben, an denen Du die Umsetzung der gelernten Theorie testen kannst.\nDann springen wir ins kalte Wasser und Du lernst Googles neusten Serverdienst Firebase kennen.\nFirebase ist eine Echtzeitdatenbank. Das bedeutet, Du musst dich nicht sehr darum kümmern, die Daten zu aktualisieren. Das macht Firebase für Dich!\n\nWas kannst du mit Firebase machen?\nDeine Datenbanken objektorientiert in der Cloud speichern. (Realtime Database)\nDateien wie Fotos für dich und deine User speichern, z.B für Uploads. (Firebase Storage)\nNachrichten an deine User senden. (Notifications)\nDich bei Problemen informieren. (Crash Reporting)\nNeue Nutzer finden, in dem deine User Einladungen an ihre Freunde schicken. (Invites)\nFirebase kümmert sich um das Login der User in die App z.B. mit eigener Registrierung, Google-, Twitter-, oder Facebook- Account. (Authentication)\nund viel viel mehr\nDies ist das perfekte Tool, um einfach großartige Serverfunktionen zu bekommen.\nDu lernst die Grundlagen, das Prinzip von Firebase und die wichtigsten Funktionen kennen und nutzen.\nDamit hast du alles was du brauchst, um selbstständig weiter zu kommen.\nNeben vielen Beispielprojekten entwickeln wir am Ende ein kleines Projekt  und bringen die App von der Idee bis in den Store.",
      "target_audience": [
        "Anfänger, die lernen wollen wie Apps geschrieben werden.",
        "Anfänger, die mit Google's Firebase-Server Echtzeitanwendungen und Plattformen wie Comunities, Chats, Messengerdienste schreiben wollen.",
        "An diejenigen, die richtig durchstarten wollen"
      ]
    },
    {
      "title": "Flutter Indonesia [2021] - Membuat Aplikasi Itu Mudah",
      "url": "https://www.udemy.com/course/flutterindonesiakopianan/",
      "bio": "Flutter 2.2 New Update, State Management, Bloc, Clean Code, GetX, Voice Call, GetX, Provider,Dependency Injection",
      "objectives": [
        "Flutter For Mobile Developer",
        "Beginner For Flutter",
        "Simple App Using Flutter",
        "State Management",
        "Make Project Straight Forward"
      ],
      "course_content": {
        "Undefined": [
          "Pendahuluan",
          "Instalasi Flutter",
          "Anounce"
        ],
        "Memulai Dengan Flutter": [
          "Membuat Project Baru",
          "Pembagian Halaman Mobile - AppBar (1)",
          "Pembagian Halaman Mobile - AppBar (2)",
          "Pembagian Halaman Mobile - Body",
          "Layout - Column",
          "Layout - Row",
          "Layouting - Latihan 1",
          "Memisahkan Widget Menjadi Beberapa Bagian",
          "Memisahkan Kelas Menjadi Beberapa File",
          "Navigasi Atau Routing Ke Beberapa Kelas",
          "Mengirim Data Ke Halaman Lain",
          "Routing Dan Melewatkan Data Menggunakan Library",
          "Routing Issue Solving"
        ],
        "Dasar Yang Harus Diketahui": [
          "ListView Mudah",
          "Menambahkan Gambar Ke Dalam ListView",
          "ListView Builder",
          "Mengubah List Data Ke Dalam ListView",
          "Gridview Builder",
          "Navigasi Ke Halaman Lain Dan Membawah Data"
        ],
        "Meniru Design Layout Dari Dribbble": [
          "Contoh Layout Dan Struktur Design",
          "Design RaisedButton Dan OutlineButton",
          "Design Image Advance",
          "Design Information Card",
          "Separate Widget Dan Design Discover Container",
          "List Layout Untuk Discovery Container Dan Item List",
          "Menyelesaikan Discovery Layout",
          "Finishing Bagian Terakhir Dari Layout"
        ],
        "State Management": [
          "Provider Make It Easy",
          "Cubit 1 - Intro Cubit",
          "Cubit 2 - Setup Cubit Dan State, Data Class",
          "Cubit 3 - Implementasi Cubit Dan Cara Pemakaian",
          "Cubit 4 - Handling Error Dio Dan Cubit",
          "Bloc 1 - Setup Bloc Dan Freezed",
          "Bloc 2 - Setup State, Event dan Bloc serta implementasinya",
          "Bloc 3 - Memakai Bloc Untuk Get Data Dan Menampilkan Data",
          "GetStorage 1 - Setup GetStorage Dan Hubungannya Dengan State Management",
          "GetStorage 2 - Memakai GetStorage Untuk Menyimpan Data Login Ke Local",
          "GetX State Management 1 - Preparation",
          "GetX State Management 1 - Set Back Logic",
          "GetX State Management 1 - Layout, Save Data, CRUD",
          "GetX State Management 1 - Finalize"
        ],
        "All Of Utility Flutter": [
          "Use Camera And Image Flutter - part 1",
          "Use Camera And Image Flutter - part 2",
          "GetX - Routing part 1",
          "GetX - Routing part 2"
        ],
        "Membuat Halaman Login Sederhana": [
          "Sign In Page Simple",
          "Styling TextField",
          "SetState() Dan Password Di TextField",
          "Apa Itu API",
          "Text Controller Untuk Akses Data Di Textfield",
          "Asynchronous Tipe 1",
          "Asynchronous Tipe 2",
          "Sing In API",
          "Error Handling Di Tampilan Login",
          "Error handling DIO - API Error Handling",
          "Repository Class - Memisahkan Method Ke Kelas Lain",
          "Cara Lain Menerima Response Dari Async"
        ],
        "Clean Code Dan Flutter Advanced": [
          "Menyiapkan Kelas Untuk Data Dari JSON",
          "Menyiapkan Pemanggilan API Dan Repository",
          "Setup Bloc State Management Dengan Mudah",
          "Dependency Injection Tidak Seburuk Itu",
          "Menampilkan Data Ke UI Dari Bloc State Management",
          "Handel Dio Error Dengan Mudah Dan Terstruktur",
          "Mengenal Bloc Listener, Mempermudah Pekerjaan",
          "Menyusun Data Provinsi Dan Kota",
          "Requet Data City Menggunakan Bloc",
          "Setting Dropdown Paling Advanced Sedunia",
          "Reusable Dropdown Paling GG Se-antero Raya",
          "Test Response Data, State Dan Bloc",
          "Finishing Cek Ongkos Kirim",
          "Upload Ke Playstore 2020"
        ],
        "Video Call, Voice Call Menggunakan Third Party (ConnectyCube)": [
          "Introduction",
          "Install SDK ConnectyCube",
          "Login User Function",
          "Login Layout User",
          "List User, Cubit, Dio, API"
        ],
        "UPDATE 2021": [
          "Create New Apps Flutter",
          "Migrate To Null Safety",
          "GET",
          "Flutterflow New Update 2021",
          "Create New App Flutter 2.2",
          "New Dependency Null Safety",
          "Setting Cubit And Repository",
          "Request Data, Convert",
          "DI Fixing, State, Cubit",
          "BlocProvider, Consumer",
          "Request Handling",
          "Dynamic Dropdown",
          "Request Data To Dropdown",
          "Fixing Drowdown Request",
          "Cost Model 1",
          "Cost Model 2",
          "Cost Repository",
          "Cost Bloc Data",
          "Result Page",
          "Mapping Data Ongkir To List",
          "Multiple Request Data",
          "Mapping All Ongkir",
          "GetX Controller State Management"
        ]
      },
      "requirements": [
        "Have knowledge of basic programming",
        "Kotlin is better"
      ],
      "description": "Notes : Adding Sound Null Safety And Update 2.2 Flutter.\nSound null safety adalah update terbaru dari flutter yang baru saja diluncurkan tahun 2021 dan saat ini course ini sedang mengalami penambahan materi dan masih akan terus bertambah. Secepatnya saya akan segera update yah teman-teman\nKedepannya null safety akan menjadi default di flutter, sehingga kita harus migrasi project, tapi saran saya tidak perlu migrasi ke jika project sudah terlanjur besar.\nLast added 2 Hours course video + source code\nHalo teman-teman, Selamat datang di course saya. Dalam course ini saya telah menyelesaiakan beberapa jam tutorial sampai upload ke playstore. Selain itu juga saya masih sering update video di dalam course ini, berikut beberapa third party atau topik yang dibahas dalam course saya :\n\n\nDDD Clean Code\nBloc Management\nAnother State Management\nGetX (powerful dependecy)\nVoice Call\nDependency Injection\nGet It\nInjectable\nCubit\nConference Call\nFreezed\nJson Serializable\nAPI Request\nDIO\nGetStorage\nMultiple Bloc Provider\nAnother Awesome Dependency\n\n\nTeman-teman bisa bertanya kepada saya di halaman feedback, dan saya sangat membutuhkan feedback dari teman-teman semuanya. terimakaish banyak.\n\n\nbuat teman-teman yang mengalami kendala mohon untuk diskusi di kolom komentar yah supaya teman-teman yang lain juga bisa melihat problemnya.\n\n\nSedikit tambahan, ada beberapa video yg sudah tidak relevan lagi jadi mohon untuk memperhatikan dokumentasi dari flutter dan versi yah teman-teman. dan akan di fix dengan video baru kedepannya.",
      "target_audience": [
        "Beginner Android",
        "Hybrid Beginner Programming",
        "Android and IOS Developer",
        "Mobile Developer",
        "Kotlin Developer"
      ]
    },
    {
      "title": "Swift 4 & iOS11 بالعربية",
      "url": "https://www.udemy.com/course/swift-4-ios11/",
      "bio": "تعلم البرمجة وكن مبرمجا وادهش عائلتك واصدقائك بما يمكنك فعله , تعلم الان وكن ذو دخل مستقل",
      "objectives": [
        "ستكون قادرا على عمل تطبيقات كبيرة واحترافية",
        "ستكون لديك خلفية كبيرة جدا عن البرمجة",
        "ستكون خبير برمجة الايفون والايباد بين اصدقائك",
        "ستتعلم كيف تصمم التطبيق بشكل اكثر من رائع"
      ],
      "course_content": {
        "Introduction": [
          "المقدمة",
          "البدئ مع البرمجة",
          "العمل على خصائص الكود"
        ],
        "المتغيرات": [
          "المتغيرات الجزء الاول",
          "المتغيرات الجزء الثاني",
          "المتغيرات الجزء الثالث",
          "المتغيرات الجزء الرابع",
          "المتغيرات الجزء الخامس",
          "المتغيرات الجزء السادس"
        ],
        "الشروط والمنطق": [
          "العمليات المنطقية الجزء الاول",
          "العمليات المنطقية الجزء الثاني",
          "العمل مع الدالة الشرطية الجزء الاول",
          "العمل مع الدالة الشرطية الجزء الثاني",
          "العمل مع الدالة الشرطية الجزء الثالث",
          "الملاحظات في الكود"
        ],
        "القواميس والمصفوفات": [
          "المصفوفات الجزء الاول",
          "المصفوفات الجزء الثاني",
          "القواميس الجزء الاول",
          "القواميس الجزء الثاني"
        ],
        "الحلقات التكرارية": [
          "الحلقات التكرارية الجزء الاول",
          "الحلقات التكرارية الجزء الثاني",
          "الحلقات التكرارية الجزء الثالث",
          "الحلقات التكرارية الجزء الرابع",
          "الحلقات التكرارية الجزء الخامس",
          "الحلقات التكرارية الجزء السادس",
          "الحلقات التكرارية الجزء السابع",
          "الحلقات التكرارية الجزء الثامن",
          "الحلقات التكرارية الجزء التاسع"
        ],
        "العمل مع الدوال": [
          "الدوال الجزء الاول",
          "الدوال الجزء الثاني",
          "الدوال الجزء الثالث",
          "الدوال الجزء الرابع",
          "الدوال الجزء الخامس",
          "الدوال الجزء السادس",
          "الدوال الجزء السابع"
        ],
        "بناء البيانات": [
          "Enumeration الجزء الاول",
          "Enumeration الجزء الثاني",
          "Enumeration الجزء الثالث",
          "Enumeration الجزء الرابع",
          "Enumeration الجزء الخامس",
          "Classes الجزء الاول",
          "Classes الجزء الثاني",
          "Classes الجزء الثالث",
          "Classes الجزء الرابع"
        ],
        "البدئ مع المشاريع الحية": [
          "نظرة عامة على البدئ",
          "المحاكي",
          "تعلم المزيد من الاساسيات عن التطبيقات الحية",
          "عمل الة حاسبة اساسية الجزء الاول",
          "عمل الة حاسبة اساسية الجزء الثاني",
          "عمل الة حاسبة اساسية الجزء الثالث",
          "عمل الة حاسبة اساسية الجزء الرابع",
          "عمل الة حاسبة اساسية الجزء الخامس",
          "عمل الة حاسبة اساسية الجزء السادس",
          "عمل الة حاسبة اساسية الجزء السابع",
          "عمل الة حاسبة اساسية الجزء الثامن",
          "عمل الة حاسبة اساسية الجزء التاسع",
          "مشروع الالة الحاسبة الاساسية جاهز للتنزيل"
        ],
        "AutoLayout": [
          "جعل التطبيق يعمل على جميع الاحجام الجزء الاول",
          "جعل التطبيق يعمل على جميع الاحجام الجزء الثاني",
          "جعل التطبيق يعمل على جميع الاحجام الجزء الثالث",
          "جعل التطبيق يعمل على جميع الاحجام الجزء الرابع",
          "جعل التطبيق يعمل على جميع الاحجام المشروع جاهز للتنزيل"
        ],
        "العناصر والمكتبات": [
          "العناصر الجزء الاول",
          "العناصر الجزء الثاني",
          "العناصر الجزء الثالث",
          "العناصر والاكواد الجزء الاول",
          "العناصر والاكواد الجزء الثاني",
          "العناصر والاكواد الجزء الثالث",
          "العناصر المخصصة"
        ]
      },
      "requirements": [
        "macOS يجب توفر نظام",
        "يجب ان تكون محبا للبرمجة"
      ],
      "description": "هذه الدورة مخصصة لتعليمك برمجة تطبيقات الايفون والايباد من الصفر والى الاحتراف لعمل تطبيقات اكثر من رائعة والبدئ بالعمل كمبرمج حر مستقل من المنزل حيث يتم الدفع لك وانت في غرفة منزلك على حاسوبك.  اذا كنت تريد ان تغير حياتك للافضل فهنا فرصتك بهذه الدورة التي تتجاوز ال 60 ساعة متواصلة من الشروحات الرائعة لتعليمك اكبر قدر ممكن من المعلومات.\n\nالبرمجة قد غيرت حياة الكثيرين فكن انت واحدا منهم لاي استفسار لا تتردد في ارساله الى\n\nDirectingZoNe@Gmail.com\n\nتحياتنا لك فريق عمل دورة برمجة تطبيقات الايفون والايباد",
      "target_audience": [
        "كل شخص يحب تعلم البرمجة",
        "كل شخص يحب ان يبرمج للايفون والايباد",
        "كل شخص يسعى الى دخل مستقل",
        "كل شخص يريد ان يرى النجاح والابداع"
      ]
    },
    {
      "title": "Kotlin ile Sıfırdan Instagram Android Uygulaması Yapalım",
      "url": "https://www.udemy.com/course/kotlin-ile-sifirdan-instagram-android-uygulamasi-yapalim/",
      "bio": "Kotlin ve Firebasede uzmanlaşarak büyük android projeleri geliştirin",
      "objectives": [
        "Android activity, fragment ve tasarımsal öğelere hakim olacaksınız",
        "Büyük projeler gerçekleştirebileceksiniz",
        "Firebase Authentication, Realtime Database, Storage ve Cloud Functionsı öğreneceksiniz",
        "3. partü kütüphaneler ile uygulamalarınızı kolayca geliştirebileceksiniz",
        "Sosyal medya uygulamaların çalışma mantığını anlayacaksınız",
        "Algolia ile Firebase Verilerinizi Filtrelemeyi öğreneceksiniz"
      ],
      "course_content": {
        "Güncel Android Studio Kurulumu": [
          "JDK ve Android Studio Kurulumu",
          "Genymotion Kurulumu"
        ],
        "Giriş": [
          "Uygulamanın Son Hali ve Gerekli Açıklamalar",
          "Uygulamanın Son Halini Indir",
          "Tanıtım",
          "Projenin Oluşturulması ve Github Ayarları",
          "Instagram Uygulamasının İncelenmesi",
          "Iconların Hazırlanması ve HomeActivity Bölüm 1",
          "HomeActivity Hazırlanması Bölüm 2",
          "BottomNavigationView ve Özelleştirilmesi",
          "BottomNavigationView Navigasyon İşlemleri",
          "Activityler Arası Geçiş Animasyonunu Kaldırma",
          "HomeActivity için Fragmentlerin Oluşturulması",
          "HomeViewPager için FragmentPagerAdapter Oluşturulması",
          "Profil Activity Layout Hazırlama Bölüm 1",
          "Profil Activity Layout Hazırlama Bölüm 2",
          "Profil Ayarları Layoutunun Hazırlanması",
          "Profil Ayarları İçin Fragment Alt Yapısı",
          "Profil Düzenle Fragmentinin Layoutunu Hazırlama",
          "Profil Duzenle Fragmentini Gerekli Yerlerde Çağırmak",
          "Resimler için Universal Image Loader Kütüphanesi ve Ayarları",
          "ImageLoader Testi ve ProfilActivitye Uygulanması",
          "Register Ekranı Tasarımı Bölüm 1",
          "Register Ekranı Tasarımı Bölüm 2",
          "Telefon ve Mail ile Kaydolma Fragmentleri",
          "Eventbus Kütüphanesi ile Veri Gonderme"
        ],
        "Kullanıcı Profil Bölümü": [
          "Projemizi Firebase'ye Bağlayalım",
          "SMS onay kodu gönderilmesi",
          "PhoneAuth Düzeltme, Açıklama ve Fragment Geri Butonu",
          "Eventbus ile Kayit Bilgilerinin Gonderilmesi",
          "Neden PhoneAuth Kullanmayacağız ve ProgressBar Kullanımı",
          "Kullanıcıdan Alınan Verilerin Kontrolü",
          "Kullanıcı Sınıfı ve Email ile Kullanıcı Olusturma",
          "TelNo ile Oturum Açma ve Veritabanına Kaydetme",
          "Users Model Değişikliği ProgressBar Eklenmesi",
          "Veritabanından Okuma Yaparak Email TelefonNo ve Username Kontrolü",
          "Kullanıcı Giriş Layoutunun Hazırlanması ve Textwatcher",
          "Email Username veya TelNo ile Giriş Yapma",
          "Geri Butonu Olayları ve AuthListener Tanımlanması",
          "Çıkış Yap AlertDialog ve GeriButonu Ayarları",
          "Profil Detaylari için Model Sınıf",
          "Kullanıcı Verilerinin Okunup ProfileActivityde Gösterilmesi",
          "Eventbus ile Kullanıcı Bilgilerinin Editprofile Fragmentine Gönderilmesi",
          "Kullanıcı Bilgilerinin Güncellenmesi ve Profil Resmini Değiştirme",
          "Profil Resminin Storagea Yüklenmesi ve Veritabanına Kaydedilmesi",
          "Profil Düzenle Fragmentinin Düzenlenmesi"
        ],
        "Gönderi Paylaşım Bölümü": [
          "Share Activityde Viewpager ve tablayoutun Oluşturulması",
          "Galeri Fragmentinin Tasarlanması ve ArrayAdapter Kullanımı",
          "Belirtilen Klasördeki Tüm Resim ve Video Dosyalarını Okumak",
          "GridArrayAdapter Oluşturulması ve Spinner ItemSelected",
          "Gridview, DosyaArama ve ImageLoader Güncellenmesi",
          "Dosyanın Türüne Göre Video veya ımage View Gösterilmesi",
          "Video Dosyalarının Sürelerini Göstermek",
          "Secilen Resmin Fragmente Eventbus ile Aktarılması",
          "Secilen Resmin Storage ve Veritabanına Kaydedilmesi",
          "Dexter ile Çalışma Anında İzin İsteme Bölüm 1",
          "Dexter ile Çalışma Anında İzin İsteme Bölüm 2",
          "Dosya Upload Ilerlemesini Gösterme ve SiliCompressor",
          "SiliCompressor ile Resimleri Sıkıştırıp Storagea Yükleme",
          "SiliCompressor ile Videoları Sıkıştırıp Storagea Yükleme",
          "Camera ve Video Fragmentlerinin Arayüzlerinin Oluşturulması",
          "Camera ve Video Viewların Çalışması için Düzenleme",
          "Çekilen Resmin Dosyaya Dönüştürülmesi ve Firebaseye Yüklenmesi",
          "Çekilen Videonun Dosyaya Dönüştürülmesi ve Firebaseye Yüklenmesi",
          "Share Activitydeki Back Button Olayları ve Düzeltmeler",
          "Gallery Fragment için Recylerview Adapter Oluşturma",
          "Recyclerview Hızlandırma ve Eventbusla Tıklanma Olayları"
        ],
        "Home Activity İşlemleri": [
          "HomeActivitynin ve ShareNexFragmentinin Düzeltilmesi",
          "HomeActivitydeki Camera Fragmentinin Oluşturulması",
          "Camera Fragmentinin Tamamlanması",
          "HomeFragmentda Kullanıcı Gönderileri için Layout ve Model Oluşturulması",
          "Tüm Gönderiler için Veri Kaynağını Oluşturma",
          "HomeFragment için Recylerview Adapterin Oluşturulması",
          "Listenin Düzenlenmesi, Zaman Eklenmesi ve Tab Tıklanma Olayları",
          "Yorumlar Fragmenti İçin Temel Hazırlıklar",
          "Yorumlar Recyclerview için Layoutların Oluşturulması",
          "Eventbus ile Gönderi IDsi yollanması ve Firebaseui Recyclerview",
          "Yorumların Firebaseuid Recyclerview Adapter ile Gösterilmesi",
          "Yorum Bilgisinin Veritabanına Kaydedilmesi",
          "Yorumların Beğenilme Bilgisini Saklamak ve Göstermek",
          "Ana Sayfadaki Gönderilerin Begenme Olayları",
          "Begeni Sayısının Gösterilmesi ve Aynı Textviewa Farklı Görünüm Atama"
        ],
        "SearchActivitydeki Arama, Profil Gösterilmesi ve Takipçi Yorum İşlemleri": [
          "Profil Sayfasındaki Kullanıcı Gönderilerini Gösterme Bölüm 1",
          "Tüm Kullanıcı Gönderilerin NestedScroolView ile Gösterilmesi",
          "Algolia İle FullTextSearch Local Makinede Testler",
          "Google Cloudda Nodejs için Server Oluşturma",
          "Algolia için hazırlıklar ve Kütüphanelerin Güncellenmesi",
          "Algolia Uygulanması ve Nodejs Serverin Sürekli Çalışmasını Sağlama",
          "Diğer Kullanıcıların Bilgilerini Göstermek için UserProfileActivity",
          "Takip Sisteminin Yapılması ve Bilgilerin Veritabanına Kaydedilmesi",
          "Ana Sayfada Takipçilerin Gönderilerini Listeleme ve YorumSayilarini Gosterme",
          "Profil sayfasındaki Post Takipçi TakipEdilen Değerlerinin Okunması",
          "Video Dosyaları için Thumbnail Oluşturma ve Gösterme"
        ],
        "Ana Sayfa ve Mesajlaşma Bölümleri": [
          "Ana Sayfadaki Video Oynatma için Kütüphane Eklenmesi",
          "Kaydırma Olayına Göre Videoların Oynatılması",
          "Ana Sayfadaki Videolar için Bazı Düzenlemeler",
          "Mention ve Hashtaglerin Renklendirilmesi",
          "Profil Activitydeki Scroll Hatası ve Yapılacaklar",
          "Profil Activty Scroll Hatasının Çözümü",
          "Mesajlaşma Modülü İçin Ön Hazırlıklar",
          "Mesajlasma için Veritabanı Tasarımı ve İlk Mesajın Kaydedilmesi",
          "Mesajlaşların Getirilmesi ve Gerekli Layotuların Oluşturulması",
          "Mesajların Gösterilmesi için Adapter Yapılması",
          "ChildEventListener ile Mesajlar Listesinin İyileştirilmesi",
          "Temel Sayfalama Yapımı ve Bazı Hataların Düzeltilmesi",
          "Gelişmiş Sayfalama Yapımı Bölüm 1",
          "Gelişmiş Sayfalama Yapımı Bölüm 2",
          "Yorumlar Fragmentinin Düzeltilmesi ve Video Thumbnailler için Asysntask",
          "Kullanıcı Adları Tıklanıldığında Yönlendirme Yapmak",
          "Konusmalar Recyclerview Oluşturulması",
          "ChatActivitydeki Düzeltme ve Konusmalar için ChildEventListener",
          "Konusmalar Listesinin En Son Atılan Mesaja Göre Güncellenmesi",
          "Konusmalar Listesinde Düzeltme ve Okundu Bilgisi",
          "Tıklanılan Konusmanın Açılması ve Okunma Bilgisi",
          "Mesajlaşırken Yazıyor Uyarısının Gösterilmesi Bölüm 1",
          "Mesajlaşırken Yazıyor Uyarısının Gösterilmesi Bölüm 2",
          "Mesaj Görüldü Bilgisinin Yazdırılması"
        ],
        "Profil Gizliliği, Takip Olayları ve News Activity": [
          "Kullanıcının Gizli Profil Bilgisini Gösterme ve Kaydetme",
          "Profil Gizli ise Gönderilerin Gizlenmesi ve Uyarı Gösterilmesi",
          "Profil Gizlerken Oluşan Hataların Düzeltilmesi",
          "Takip İsteğinin Gönderilmesi",
          "News Activity Alt Yapısı ve Gösterilecek Haberlerin Kaydedilmesi",
          "Bildirimler için Ayrı Bir Düğüm Yapalım",
          "Takip Etme Takip İstekleri ve Gönderi Beğenildi Bildirimleri",
          "Bildirimlerin Getirilmesi ve Layoutlarının Hazırlanması",
          "Farklı Türdeki Bildirimlerin Aynı Listede Gösterilmesi Bölüm 1",
          "Farklı Türdeki Bildirimlerin Aynı Listede Gösterilmesi Bölüm 2",
          "Profile Activityde Güncelleme ve Takip İsteğinin Onaylanması",
          "Oturum Açan Kullanıcının News Kısmı Bitti",
          "Takipçilerin Yaptıklarını Kaydetmek",
          "Takip Ettiğim Kişilerin Bildirimlerini Getirmek",
          "Takip Ettiklerimin Bildirimleri için Adapter Hazırlama Bölüm 1",
          "Takip Ettiklerimin Bildirimleri için Adapter Hazırlama Bölüm 2"
        ],
        "Firebase Cloud Messaging ve Functions ile Bildirim İşlemleri": [
          "FCM Giriş ve Ilk Cloud Mesage Yolllanması",
          "Bildirim Göndermek için Firebase Cloud Function Oluşturmak",
          "Gelen Bildirimleri Göstermek ve PendindIntent Kullanımı",
          "Yeni Mesaj Bildirimi için Cloud Function Yazalım",
          "Yeni Mesaj Bildirimi Tıklandığında İlgili Konusmaya Gitmek",
          "Sadece Belli Durumlarda Yeni Mesaj Bildirimi Göndermek"
        ],
        "Bazı Ufak Düzeltmeler ve Güncellemeler": [
          "Login ve Register Activityde Düzeltme",
          "Share Activityde Düzeltmeler ve Crop Image Kullanma",
          "Register, UserProfile Activity ve Konusmalar Fragmentinde Düzeltmeler",
          "Bottom Navigationda ve Back Stack Olaylarında Düzenlemeler",
          "News ve Chatactivity ve Message Fragmentinde ProgressBar",
          "Home Fragmentteki Ana Listeye Sayfalama ve Refresh Özelliği"
        ]
      },
      "requirements": [
        "Kotlin bilgisi olmalıdır",
        "Android temel kavramlarını bilmelidir",
        "Android studio ve emülatör kurulu olmalıdır"
      ],
      "description": "Bu kurs ile kotlin dilini ve Firebase bulut servisini kullanarak instagramın android uygulamasını yapacağız.\nAmacımız instagram yapmak gibi gözükse de aslında sadece bir araç. Burdaki asıl amacımız bu uygulamayı yaparken kotlin, android ve firebase bilgilerimizi en etkin şekilde kullanmayı ve de büyük bir proje gerçekleştirirken nasıl yol almamız gerektiğini öğrenmektir.\nElimden geldiğince açıklamalara dikkat edeceğim ama bu kursu başarılı bir şekilde tamamlamanız için önceden kotlin, android ve firebase bilginizin olması gerekmektedir. Aksi taktirde zorlanabilirsiniz ama yeni şeyler öğrenme konusunda hevesliyseniz de bu kursa katılabilirsiniz.\nBu kursa katıldığınızda genel olarak aşağıdaki konularda bilgi sahibi olacaksınız :\nActivity ve fragmentlerin kullanımları ve ilişkileri\nMaterial design öğeleri\nAndroid dosya işlemleri ( dosya listeleme, oluşturma ve sıkıştırma )\nResim ve Video İşlemleri,\nAsynctask, Service Kullanımları\nEventbus ile Kolay Veri Alışverişi\nAndroid Çalışma Anı İzin Yönetimi\n3. parti kütüphanelerin kullanımları (en az 10 tane kütüphane aktif olarak kullanılmıştır)\nRecyclerview kullanımı, kişiselleştirilmesi (en az 10 tane recyclerview oluşturulmuştur, farklı layout türleri ve veri kaynağı hazırlama gösterilmiştir)\nFirebase Phone ve Email Authentication\nFirebase Realtime Database ve verileri okumak için tüm Listener türleri kullanılmıştır\nFirebase Storage İşlemleri\nFirebase Cloud Messaging ile bildirim hizmetleri\nFirebase Cloud Functions kullanımı\nSosyal medya uygulaması çalışma mantığı\nCanlı sohbet, okundu bilgisi ve yazıyor(typing) bilgisi çalışma mantığı\nListelerde sayfalama yapımı ve liste sonuna gelindiğinde yeni öğelerin yüklenmesi\nTakip, Beğenme ve Yorum Yapma Olayları\nAlgolia ile Firebase Veri tabanındaki Verileri Filtrelemek\n\n\nTüm bu konuları öğrenirken kotlin, android ve firebase konularında uzmanlaşacak, büyük bir proje gerçekleştirirken dikkat etmeniz gereken püf noktaları öğrenecek ve de artık aklınızdaki projeyi kolay bir şekilde gerçekleştirebileceksiniz.\nBu kurs; bundan sonra yapacağınız uygulamalar için başvurup kullanabileceğiniz, pek çok farklı konu ve kavramı barındıran mükemmel bir yardımcı olacak.",
      "target_audience": [
        "Kotlini bilen ve bu bilgisini kullanmak isteyen",
        "Android yapılarına hakim olup bildiklerini uygulamak isteyen",
        "Büyük projelerde dikkat edilmesi gereken konuları öğrenmek isteyen",
        "Firebase kullanarak projeler geliştirmek isteyen",
        "Kotlin, Android ve Firebase konularında uzmanlaşmak isteyen herkes bu kursu alabilir"
      ]
    },
    {
      "title": "Diseñando aplicaciones de negocio con PowerApps",
      "url": "https://www.udemy.com/course/disenado-aplicaciones-de-negocio-con-powerapps/",
      "bio": "Automatización de procesos empresariales con PowerApps",
      "objectives": [
        "Si, deseas conocer los conceptos de desarrollo de aplicaciones vinculadas a los modelos de datos empresariales, entenderá la importancia de la experiencia usuario además de las correctas formas de gestionar aplicaciones para múltiples usuarios, evaluara la gestión de versiones y como la integración de componentes definen el rendimiento de la aplicación acompañado de flujos de trabajo.",
        "La optimización de procesos analíticos y operativos permiten definir estrategias sobre el negocio, estas se enfocan en el desarrollo de aplicaciones interactivas que integran de la mano el diseño y la lógica asociada mediante Power Apps.",
        "Establecer los componentes iniciales para la funcionalidad de la aplicación",
        "Comprender las diferentes formas de construir una aplicación en PowerApps",
        "Desarrolla los conceptos experiencia de usuario.",
        "Entiende como personalizar una aplicación agregando controles, imágenes y lógica",
        "Comprende los principios de administración y calidad de datos"
      ],
      "course_content": {
        "Introduction": [
          "Introduction"
        ],
        "Creando nuestra primera aplicación": [
          "Capítulo Uno",
          "Capitulos Dos - Primera Parte",
          "Capitulo Dos - Segunda Parte",
          "Capitulo Tres",
          "Capitulo Cuatro"
        ],
        "Entendiendo las fuentes de datos": [
          "Introducción fuentes de datos",
          "Servicios de datos comunes (CDS)",
          "Conectividad con SharePoint List"
        ],
        "Formulación en PowerApps": [
          "Introducción",
          "Variables de Contexto",
          "Variables Globales",
          "Funciones de Texto",
          "Trabajanado con Números",
          "Trabajando con Datos tipo Fecha",
          "Operaciones con Fechas",
          "Introducción a la creación de tablas",
          "Entendiendo la creación de Tablas",
          "Creación de Colecciones",
          "Trabajando con Columnas",
          "Funciones de Tabla",
          "Ejercicio Practico con Funciones de Tabla",
          "Funciones de Cuenta",
          "Calculos Agregados",
          "Operadores Logicos",
          "Navegación Optima",
          "Menu de Navegación",
          "Pantalla de Control"
        ],
        "Controles, Color y Diseño de Aplicación": [
          "Estableciendo Colores en los controles",
          "Un repaso por los controles y su uso",
          "Visualización de Medios",
          "La importancia del UX & UI",
          "Que debemos tener presente para crear nuestra aplicación Ejemplo"
        ],
        "Manipulando y Trabajando con Datos": [
          "Función Group & UnGroup",
          "Buscando datos por medio de la definición de Criterios",
          "Delegación de Datos y Búsqueda Avanzada",
          "Join Data",
          "Inexistencia de un grupo de datos",
          "Recuperación de Registros Individuales",
          "Actualización de Registros",
          "Recuperación de Registros generados Automaticamente",
          "Eliminación de Registros"
        ],
        "Como Funcionan los graficos en PowerApps": [
          "Graficos Disponibles",
          "Pie Chart & Column Chart",
          "Line Chart"
        ],
        "Funcion Location en PowerApps": [
          "Bing Maps"
        ]
      },
      "requirements": [
        "Niguno"
      ],
      "description": "La optimización de procesos analíticos y operativos permiten definir estrategias sobre el negocio, estas se enfocan en el desarrollo de aplicaciones interactivas que integran de la mano el diseño y la lógica asociada mediante PowerApps.\n\n\nEste curso está dirigido a las personas que desean conocer los conceptos de desarrollo de aplicaciones vinculadas a los modelos de datos empresariales, entenderá la importancia de la experiencia usuario además de las correctas formas de gestionar aplicaciones para múltiples usuarios, evaluara la gestión de versiones y como la integración de componentes definen el rendimiento de la aplicación acompañado de flujos de trabajo.",
      "target_audience": [
        "Personas que deseen generar un impacto organizacional por medio de la automatización de procesos manuales"
      ]
    },
    {
      "title": "iOS программирование на Swift в Xcode - Уровень 1",
      "url": "https://www.udemy.com/course/ios-swift-programming/",
      "bio": "Практический курс по созданию iOS приложения на языке Swift в среде Xcode и публикации его в AppStore",
      "objectives": [
        "Сможете создавать свои iOS приложения",
        "Научитесь работать в Xcode (среда разработки iOS приложений)",
        "Освоите основы программирования на языке Swift",
        "Научитесь оформлять приложения в AppStore",
        "Публиковать приложения в AppStore"
      ],
      "course_content": {
        "Введение": [
          "Введение. Для кого и о чем этот курс.",
          "Полезные материалы, которые помогут пройти данный курс",
          "Xcode 9, 10, 11 - что изменилось?",
          "Xcode - установка и настройка, приложение HelloWorld",
          "Xcode 11 - что нового"
        ],
        "Язык программирования Swift": [
          "Инициализация переменных, типы данных, опционалы",
          "Массивы, словари",
          "Условия, циклы",
          "Функции",
          "Структуры, классы",
          "Наследование классов",
          "Протоколы, делегирование",
          "Важное действие"
        ],
        "Программирование iOS приложения": [
          "UITableView",
          "UIAlertController",
          "Переходы между контролерами, UINavigation",
          "Приложение конвертер валют - логика работы",
          "Работа с файлами в iOS",
          "Парсим XML, XMLParser",
          "Программируем основной список",
          "URLSession - загрузка данных из сети",
          "Готовим view для загрузки курсов валют",
          "NotificationCenter - обновляем view при загрузке файла",
          "DispatchQueue - обновление элементов интерфейса в основном потоке",
          "UIActivityIndicatorView - отображаем процесс загрузки",
          "Подготовка модели для конвертации валют",
          "Экран конвертации",
          "UITextField - убираем клавиатуру с экрана",
          "Xcode 11 - modalPresentationStyle",
          "Конвертируем величины",
          "Разбор ДЗ"
        ],
        "Дизайн приложения": [
          "Кастомизация UITableViewCell",
          "Картинки в TabBar",
          "Constraints - адаптация интерфейсов под разные размеры экранов",
          "Дизайн иконки и стартового экрана"
        ],
        "Публикация приложения в AppStore": [
          "Регистрация аккаунта разработчика",
          "Варианты вывода денег из AppStore",
          "Создание приложения в AppStore",
          "ASO. Оформление приложения в AppStore.",
          "Загрузка приложения в AppStore",
          "Загрузка приложения в AppStore - часть 2"
        ],
        "Завершение": [
          "Завершение. Подведем итоги."
        ]
      },
      "requirements": [
        "Mac Book (Или любое другое устройство на которое устанавливается Mac OS X)"
      ],
      "description": "В данном курсе мы спроектируем, разработаем и опубликуем в AppStore полностью рабочее приложение Конвертер валют.\nПриложение будет загружать курсы валют с сайта центробанка, парсить их, отображать в удобном для пользователя виде, а так же конвертировать валюты с учетом текущего курса.\n\n\nМы пройдем все этапы разработки мобильного приложения, от установки среды разработки Xcode, до публикации приложения а AppStore.\n\n\nВ процессе курса вы получите необходимые навыки, для того чтобы самостоятельно разрабатывать приложения для iOS, публиковать их в AppStore и монетизировать.\n\n\nПриложение, которое мы разработаем в процессе курса вы сможете использовать как портфолио при устройстве на работу, а так же выставить за него цену и заработать на его продажах в AppStore.",
      "target_audience": [
        "Начинающим iOS программистам, которые хотят освоить профессию iOS разработчика или создать свое iOS приложение",
        "Опытным программистам, не знакомым с разработкой iOS приложений",
        "Программистам, которые хотят углубить свои знания в iOS разработке и программировании приложений для iOS"
      ]
    },
    {
      "title": "Swift - TDD, Clean Architecture, Design Patterns, SOLID, MVP",
      "url": "https://www.udemy.com/course/swift-tdd-com-mango/",
      "bio": "Aprenda a criar Apps profissionais em iOS com Swift, utilizando padrões e metodologias avançadas",
      "objectives": [
        "Usar TDD em um App com Swift",
        "Aplicar Clean Architecture em apps feitos com Swift",
        "Usar Design Patterns em casos de uso reais",
        "Aplicar os conceitos do SOLID"
      ],
      "course_content": {
        "Clean Architecture": [
          "Código Fonte",
          "Introdução a arquitetura do projeto"
        ],
        "Domain e Data Layer": [
          "Integrando o AddAccount com o HttpPostClient",
          "Testando os dados recebidos pelo HttpPostClient e refatorando o código",
          "Testando o callback de erro do HttpPostClient",
          "Testando o callback de sucesso do HttpPostClient",
          "Testando memory leak"
        ],
        "Infra Layer": [
          "Testando o AlamofireAdapter com URLProtocol",
          "Testando o body do request",
          "Testando os retornos do request",
          "Refatorando o código e criando testes de CI com coverage",
          "Testando o AddAccount em integração com uma API externa"
        ],
        "Presentation Layer": [
          "Testando os dados do dados do SignUp",
          "Testando a integração do Presenter com o EmailValidator",
          "Refatorando o código",
          "Testando o retorno do AddAccount dentro do Presenter",
          "Testando o caso de sucesso do AddAccount e refatorando o código"
        ],
        "UI Layer": [
          "Criando o SignUpViewController como um componente",
          "Criando o botão de salvar e integrando ele ao método SignUp",
          "Criando um layout para a tela de SignUp",
          "Refatorando e criando alguns Helpers"
        ],
        "Validation Layer": [
          "Criando o componente para validar email"
        ],
        "Main Layer": [
          "Criando a composição do SignUp",
          "Aplicando o Design Pattern Proxy",
          "Configurando variáveis de ambiente",
          "Aplicando o Design Pattern Decorator",
          "Aplicando o Design Pattern Composite 1/3",
          "Aplicando o Design Pattern Composite 2/3",
          "Aplicando o Design Pattern Composite 3/3",
          "Movendo a validação para o Main Layer"
        ],
        "Refatorando o projeto": [
          "Adaptando o AddAccount a nova API",
          "Ajustando os testes de integração",
          "Aplicando a nova interface do projeto",
          "Link para documentação da nova API"
        ],
        "Login API": [
          "Criando implementação do Use Case Authentication",
          "Criando o LoginPresenter 1/2",
          "Criando o LoginPresenter 2/2",
          "Criando o LoginController",
          "Criando a composição do Login"
        ],
        "Navegação": [
          "Criação da tela Welcome",
          "Fazendo navegação",
          "Refatorando os factories",
          "Usando o Design Pattern Builder"
        ]
      },
      "requirements": [
        "Conhecer a linguagem Swift"
      ],
      "description": "Nesse curso irei mostrar como criar um App em Swift usando TDD como metodologia. Irei mostrar como criar componentes desacoplados e reutilizáveis, seguindo o Clean Architecture e os princípios do SOLID. Mostrarei também como aplicar Design Patterns em casos de uso reais.\nIrei utilizar UIKit para montar a interface, Swift Package Manager como gerenciador de dependências, Alamofire para fazer requisões HTTP e MVP como Design Pattern de UI.",
      "target_audience": [
        "Desenvolvedores iOS"
      ]
    }
  ]
}